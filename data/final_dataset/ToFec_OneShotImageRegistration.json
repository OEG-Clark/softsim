{"home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Visualize.plotDataset": [[6, 23], ["len", "max", "range", "matplotlib.show", "round", "matplotlib.subplot", "sample[].dim", "int", "matplotlib.imshow", "sample[].dim", "matplotlib.imshow", "sample[].dim", "int", "matplotlib.imshow", "sample[].dim", "matplotlib.imshow"], "function", ["None"], ["def", "plotDataset", "(", "dataset", ")", ":", "\n", "  ", "nuOfimg", "=", "len", "(", "dataset", ")", "\n", "nuOfImgPerAxes", "=", "max", "(", "1", ",", "round", "(", "nuOfimg", "/", "2", ",", "0", ")", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "nuOfimg", ")", ":", "\n", "      ", "plt", ".", "subplot", "(", "2", ",", "nuOfImgPerAxes", ",", "i", "+", "1", ")", "\n", "sample", "=", "dataset", "[", "i", "]", "\n", "if", "(", "sample", "[", "'image'", "]", ".", "dim", "(", ")", "==", "4", ")", ":", "\n", "        ", "slice", "=", "int", "(", "sample", "[", "'image'", "]", ".", "shape", "[", "3", "]", "/", "2", ")", "\n", "plt", ".", "imshow", "(", "sample", "[", "'image'", "]", "[", "0", ",", ":", ",", ":", ",", "slice", "]", ",", "cmap", "=", "'gray'", ")", "\n", "if", "(", "sample", "[", "'label'", "]", ".", "dim", "(", ")", ">", "1", ")", ":", "\n", "          ", "plt", ".", "imshow", "(", "sample", "[", "'label'", "]", "[", "0", ",", ":", ",", ":", ",", "slice", "]", ",", "cmap", "=", "'jet'", ",", "alpha", "=", "0.5", ")", "\n", "", "", "elif", "(", "sample", "[", "'image'", "]", ".", "dim", "(", ")", "==", "3", ")", ":", "\n", "        ", "slice", "=", "int", "(", "sample", "[", "'image'", "]", ".", "shape", "[", "2", "]", "/", "2", ")", "\n", "plt", ".", "imshow", "(", "sample", "[", "'image'", "]", "[", ":", ",", ":", ",", "slice", "]", ",", "cmap", "=", "'gray'", ")", "\n", "if", "(", "sample", "[", "'label'", "]", ".", "dim", "(", ")", ">", "1", ")", ":", "\n", "          ", "plt", ".", "imshow", "(", "sample", "[", "'label'", "]", "[", ":", ",", ":", ",", "slice", "]", ",", "cmap", "=", "'jet'", ",", "alpha", "=", "0.5", ",", ")", "\n", "", "", "", "plt", ".", "show", "(", "block", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Visualize.plotImageData": [[24, 38], ["max", "matplotlib.figure", "range", "matplotlib.show", "round", "matplotlib.subplot", "sample.dim", "int", "matplotlib.imshow", "sample.dim", "int", "matplotlib.imshow"], "function", ["None"], ["", "def", "plotImageData", "(", "imageData", ",", "blockFig", "=", "False", ")", ":", "\n", "  ", "nuOfimg", "=", "imageData", ".", "shape", "[", "0", "]", "\n", "nuOfImgPerAxes", "=", "max", "(", "1", ",", "round", "(", "nuOfimg", "/", "2", ",", "0", ")", ")", "\n", "plt", ".", "figure", "(", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "nuOfimg", ")", ":", "\n", "      ", "plt", ".", "subplot", "(", "2", ",", "nuOfImgPerAxes", ",", "i", "+", "1", ")", "\n", "sample", "=", "imageData", "[", "i", ",", "]", "\n", "if", "(", "sample", ".", "dim", "(", ")", "==", "4", ")", ":", "\n", "        ", "slice", "=", "int", "(", "sample", ".", "shape", "[", "3", "]", "/", "2", ")", "\n", "plt", ".", "imshow", "(", "sample", "[", "0", ",", ":", ",", ":", ",", "slice", "]", ",", "cmap", "=", "'gray'", ")", "\n", "", "elif", "(", "sample", ".", "dim", "(", ")", "==", "3", ")", ":", "\n", "        ", "slice", "=", "int", "(", "sample", ".", "shape", "[", "2", "]", "/", "2", ")", "\n", "plt", ".", "imshow", "(", "sample", "[", ":", ",", ":", ",", "slice", "]", ",", "cmap", "=", "'gray'", ")", "\n", "", "", "plt", ".", "show", "(", "block", "=", "blockFig", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Visualize.main": [[41, 63], ["pandas.read_csv", "matplotlib.scatter", "matplotlib.plot", "matplotlib.grid", "matplotlib.ylabel", "matplotlib.show", "getopt.getopt", "range", "range", "print", "int", "len", "len"], "function", ["None"], ["", "def", "main", "(", "argv", ")", ":", "\n", "\n", "  ", "try", ":", "\n", "    ", "opts", ",", "args", "=", "getopt", ".", "getopt", "(", "argv", ",", "'f:d:'", ",", "[", "'csvFile='", ",", "'dataIdx='", "]", ")", "\n", "", "except", "getopt", ".", "GetoptError", "as", "e", ":", "\n", "    ", "print", "(", "e", ")", "\n", "return", "\n", "\n", "", "dataIdx", "=", "1", "\n", "for", "opt", ",", "arg", "in", "opts", ":", "\n", "    ", "if", "opt", "in", "(", "'-f'", ",", "'--csvFile'", ")", ":", "\n", "      ", "csvFile", "=", "arg", "\n", "", "if", "opt", "in", "(", "'-d'", ",", "'--dataIdx'", ")", ":", "\n", "      ", "dataIdx", "=", "int", "(", "arg", ")", "\n", "\n", "", "", "df", "=", "pd", ".", "read_csv", "(", "csvFile", ",", "sep", "=", "';'", ",", "index_col", "=", "False", ")", "\n", "\n", "plt", ".", "scatter", "(", "range", "(", "0", ",", "len", "(", "df", "[", "df", ".", "columns", "[", "dataIdx", "]", "]", ")", ")", ",", "df", "[", "df", ".", "columns", "[", "dataIdx", "]", "]", ",", "c", "=", "df", "[", "df", ".", "columns", "[", "0", "]", "]", ")", "\n", "plt", ".", "plot", "(", "range", "(", "0", ",", "len", "(", "df", "[", "df", ".", "columns", "[", "dataIdx", "]", "]", ")", ")", ",", "df", "[", "df", ".", "columns", "[", "dataIdx", "]", "]", ")", "\n", "plt", ".", "grid", "(", ")", "\n", "plt", ".", "ylabel", "(", "df", ".", "columns", "[", "dataIdx", "]", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.TrainOptimise.TrainOptimise.__init__": [[23, 28], ["Optimise.Optimise.Optimise.__init__", "hasattr", "open"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.DecoderBrick.DecoderBrick.__init__"], ["    ", "def", "__init__", "(", "self", ",", "userOpts", ")", ":", "\n", "      ", "Optimise", ".", "__init__", "(", "self", ",", "userOpts", ")", "\n", "if", "hasattr", "(", "userOpts", ",", "'validationFileNameCSV'", ")", ":", "\n", "        ", "validationLogfileName", "=", "self", ".", "userOpts", ".", "outputPath", "+", "os", ".", "path", ".", "sep", "+", "'lossLogValidation.csv'", "\n", "self", ".", "validationLogFile", "=", "open", "(", "validationLogfileName", ",", "'w'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.TrainOptimise.TrainOptimise.__exit__": [[29, 31], ["TrainOptimise.TrainOptimise.validationLogFile.close"], "methods", ["None"], ["", "", "def", "__exit__", "(", "self", ",", "exc_type", ",", "exc_value", ",", "traceback", ")", ":", "\n", "      ", "self", ".", "validationLogFile", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.TrainOptimise.TrainOptimise.run": [[32, 129], ["TrainOptimise.TrainOptimise.net.train", "torch.optim.Adam", "NetOptimizer.NetOptimizer", "Utils.getReceptiveFieldOffset", "range", "TrainOptimise.TrainOptimise.net.parameters", "enumerate", "NetOptimizer.NetOptimizer.initSmoother", "Utils.sampleImgData", "Utils.sampleImg", "Sampler.Sampler.Sampler", "torch.zeros.clone", "enumerate", "torch.save", "TrainOptimise.TrainOptimise.validateModel", "TrainOptimise.TrainOptimise.validationLogFile.flush", "TrainOptimise.TrainOptimise.net.train", "len", "copy.deepcopy", "TrainOptimise.TrainOptimise.net.load_state_dict", "TrainOptimise.TrainOptimise.net.train", "torch.zeros", "int", "Sampler.Sampler.Sampler.getIndicesForRandomization", "Sampler.Sampler.Sampler.getRandomSubSamplesIdxs", "Sampler.Sampler.Sampler.getIndicesForOneShotSampling", "Sampler.Sampler.Sampler.getSubSampleImg", "imgDataToWork.to.to.to", "LossFunctions.LossFunctions", "TrainOptimise.TrainOptimise.getSubCurrDefFieldIdx", "currDefField[].to", "lastDeffield[].to", "NetOptimizer.NetOptimizer.optimizeNet", "loss.detach", "TrainOptimise.TrainOptimise.logFile.write", "TrainOptimise.TrainOptimise.logFile.flush", "currDefFieldGPU[].to", "len", "TrainOptimise.TrainOptimise.validationLogFile.write", "TrainOptimise.TrainOptimise.validationLogFile.write", "TrainOptimise.TrainOptimise.net.state_dict", "torch.no_grad", "range", "dataloader.dataset.getSpacingXZFlip", "TrainOptimise.TrainOptimise.net.state_dict", "torch.optim.Adam.state_dict", "TrainOptimise.TrainOptimise.net.load_state_dict", "TrainOptimise.TrainOptimise.getDeformationField", "Utils.sampleImg", "sampledImgData.numel", "str", "Utils.combineDeformationFields", "str", "str", "str", "float", "str", "numpy.mean", "str", "str", "numpy.std", "numpy.std", "str", "str", "str", "numpy.mean", "str", "numpy.mean"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getReceptiveFieldOffset", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.NetOptimizer.NetOptimizer.initSmoother", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.sampleImgData", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.sampleImg", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.TrainOptimise.TrainOptimise.validateModel", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Sampler.Sampler.getIndicesForRandomization", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Sampler.Sampler.getRandomSubSamplesIdxs", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Sampler.Sampler.getIndicesForOneShotSampling", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Sampler.Sampler.getSubSampleImg", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Optimise.Optimise.getSubCurrDefFieldIdx", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.NetOptimizer.NetOptimizer.optimizeNet", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.getSpacingXZFlip", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Optimise.Optimise.getDeformationField", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.sampleImg", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.DefFieldHandler.combineDeformationFields"], ["", "def", "run", "(", "self", ",", "net", ",", "samplingRate", ",", "samplingRateIdx", ",", "dataloader", ",", "validationDataLoader", ",", "resultModels", "=", "[", "]", ")", ":", "\n", "      ", "self", ".", "net", "=", "net", "\n", "self", ".", "net", ".", "train", "(", ")", "\n", "optimizer", "=", "optim", ".", "Adam", "(", "self", ".", "net", ".", "parameters", "(", ")", ",", "amsgrad", "=", "True", ")", "\n", "netOptim", "=", "NetOptimizer", ".", "NetOptimizer", "(", "self", ".", "net", ",", "None", ",", "optimizer", ",", "self", ".", "userOpts", ")", "\n", "\n", "receptiveFieldOffset", "=", "Utils", ".", "getReceptiveFieldOffset", "(", "self", ".", "userOpts", ".", "netDepth", ")", "\n", "padVals", "=", "(", "receptiveFieldOffset", ",", "receptiveFieldOffset", ",", "receptiveFieldOffset", ",", "receptiveFieldOffset", ",", "receptiveFieldOffset", ",", "receptiveFieldOffset", ")", "\n", "samplerShift", "=", "(", "0", ",", "0", ",", "0", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "self", ".", "userOpts", ".", "numberOfEpochs", "[", "samplingRateIdx", "]", ")", ":", "\n", "        ", "for", "i", ",", "data", "in", "enumerate", "(", "dataloader", ",", "0", ")", ":", "\n", "          ", "netOptim", ".", "initSmoother", "(", "data", "[", "'image'", "]", ".", "shape", "[", "1", "]", "*", "3", ")", "\n", "\n", "lastField", "=", "None", "\n", "if", "len", "(", "resultModels", ")", ">", "0", ":", "\n", "            ", "currentState", "=", "copy", ".", "deepcopy", "(", "self", ".", "net", ".", "state_dict", "(", ")", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "#             self.net.eval()", "\n", "              ", "useContext", "=", "self", ".", "userOpts", ".", "useContext", "\n", "self", ".", "userOpts", ".", "useContext", "=", "False", "\n", "for", "previousSampleIdxs", "in", "range", "(", "samplingRateIdx", ")", ":", "\n", "                ", "modelToApply", "=", "resultModels", "[", "previousSampleIdxs", "]", "\n", "self", ".", "net", ".", "load_state_dict", "(", "modelToApply", "[", "'model_state'", "]", ")", "\n", "defField", "=", "self", ".", "getDeformationField", "(", "data", ",", "modelToApply", "[", "'samplingRate'", "]", ",", "self", ".", "userOpts", ".", "patchSize", "[", "previousSampleIdxs", "]", ",", "self", ".", "userOpts", ".", "useMedianForSampling", "[", "previousSampleIdxs", "]", ",", "samplerShift", ")", "\n", "upSampleRate", "=", "1.0", "/", "modelToApply", "[", "'samplingRate'", "]", "\n", "defField", "=", "defField", "*", "upSampleRate", "\n", "defField", "=", "sampleImg", "(", "defField", ",", "upSampleRate", ")", "\n", "if", "lastField", "is", "None", ":", "\n", "                  ", "lastField", "=", "defField", "\n", "", "else", ":", "\n", "                  ", "lastField", "=", "Utils", ".", "combineDeformationFields", "(", "defField", ",", "lastField", ")", "\n", "", "", "self", ".", "userOpts", ".", "useContext", "=", "useContext", "\n", "", "self", ".", "net", ".", "load_state_dict", "(", "currentState", ")", "\n", "self", ".", "net", ".", "train", "(", ")", "\n", "\n", "\n", "", "sampledImgData", ",", "sampledMaskData", ",", "sampledLabelData", ",", "_", "=", "Utils", ".", "sampleImgData", "(", "data", ",", "samplingRate", ")", "\n", "if", "lastField", "is", "None", ":", "\n", "            ", "currDefField", "=", "torch", ".", "zeros", "(", "(", "data", "[", "'image'", "]", ".", "shape", "[", "0", "]", ",", "data", "[", "'image'", "]", ".", "shape", "[", "1", "]", "*", "3", ",", "data", "[", "'image'", "]", ".", "shape", "[", "2", "]", ",", "data", "[", "'image'", "]", ".", "shape", "[", "3", "]", ",", "data", "[", "'image'", "]", ".", "shape", "[", "4", "]", ")", ",", "device", "=", "\"cpu\"", ",", "requires_grad", "=", "False", ")", "\n", "", "else", ":", "\n", "            ", "currDefField", "=", "lastField", "\n", "\n", "\n", "", "currDefField", "=", "currDefField", "*", "samplingRate", "\n", "currDefField", "=", "Utils", ".", "sampleImg", "(", "currDefField", ",", "samplingRate", ")", "\n", "\n", "sampler", "=", "Sampler", "(", "sampledMaskData", ",", "sampledImgData", ",", "sampledLabelData", ",", "self", ".", "userOpts", ".", "patchSize", "[", "samplingRateIdx", "]", ")", "\n", "\n", "if", "self", ".", "userOpts", ".", "randomSampling", "[", "samplingRateIdx", "]", ":", "\n", "            ", "numberofSamplesPerRun", "=", "int", "(", "sampledImgData", ".", "numel", "(", ")", "/", "(", "self", ".", "userOpts", ".", "patchSize", "[", "samplingRateIdx", "]", "*", "self", ".", "userOpts", ".", "patchSize", "[", "samplingRateIdx", "]", "*", "self", ".", "userOpts", ".", "patchSize", "[", "samplingRateIdx", "]", ")", ")", "\n", "if", "numberofSamplesPerRun", "<", "1", ":", "\n", "              ", "numberofSamplesPerRun", "=", "1", "\n", "", "idxs", "=", "sampler", ".", "getIndicesForRandomization", "(", ")", "\n", "idxs", "=", "sampler", ".", "getRandomSubSamplesIdxs", "(", "numberofSamplesPerRun", ",", "idxs", ")", "\n", "", "else", ":", "\n", "            ", "idxs", "=", "sampler", ".", "getIndicesForOneShotSampling", "(", "samplerShift", ",", "self", ".", "userOpts", ".", "useMedianForSampling", "[", "samplingRateIdx", "]", ")", "\n", "\n", "", "lastDeffield", "=", "currDefField", ".", "clone", "(", ")", "\n", "for", "_", ",", "idx", "in", "enumerate", "(", "idxs", ")", ":", "\n", "            ", "imgDataToWork", "=", "sampler", ".", "getSubSampleImg", "(", "idx", ",", "self", ".", "userOpts", ".", "normImgPatches", ")", "\n", "imgDataToWork", "=", "imgDataToWork", ".", "to", "(", "self", ".", "userOpts", ".", "device", ")", "\n", "lossCalculator", "=", "lf", ".", "LossFunctions", "(", "imgDataToWork", ",", "dataloader", ".", "dataset", ".", "getSpacingXZFlip", "(", "i", ")", ")", "\n", "currDefFieldIdx", ",", "offset", "=", "self", ".", "getSubCurrDefFieldIdx", "(", "currDefField", ",", "idx", ")", "\n", "currDefFieldGPU", "=", "currDefField", "[", ":", ",", ":", ",", "currDefFieldIdx", "[", "0", "]", ":", "currDefFieldIdx", "[", "0", "]", "+", "currDefFieldIdx", "[", "3", "]", ",", "currDefFieldIdx", "[", "1", "]", ":", "currDefFieldIdx", "[", "1", "]", "+", "currDefFieldIdx", "[", "4", "]", ",", "currDefFieldIdx", "[", "2", "]", ":", "currDefFieldIdx", "[", "2", "]", "+", "currDefFieldIdx", "[", "5", "]", "]", ".", "to", "(", "device", "=", "self", ".", "userOpts", ".", "device", ")", "\n", "lastDeffieldGPU", "=", "lastDeffield", "[", ":", ",", ":", ",", "currDefFieldIdx", "[", "0", "]", ":", "currDefFieldIdx", "[", "0", "]", "+", "currDefFieldIdx", "[", "3", "]", ",", "currDefFieldIdx", "[", "1", "]", ":", "currDefFieldIdx", "[", "1", "]", "+", "currDefFieldIdx", "[", "4", "]", ",", "currDefFieldIdx", "[", "2", "]", ":", "currDefFieldIdx", "[", "2", "]", "+", "currDefFieldIdx", "[", "5", "]", "]", ".", "to", "(", "device", "=", "self", ".", "userOpts", ".", "device", ")", "\n", "\n", "[", "loss", ",", "crossCorr", ",", "diceLoss", ",", "smoothnessDF", ",", "cycleLoss", "]", "=", "netOptim", ".", "optimizeNet", "(", "imgDataToWork", ",", "lossCalculator", ",", "None", ",", "lastDeffieldGPU", ",", "currDefFieldGPU", ",", "offset", ",", "samplingRateIdx", ",", "False", ")", "\n", "#TODO: log also other loss values", "\n", "detachLoss", "=", "loss", ".", "detach", "(", ")", "\n", "self", ".", "logFile", ".", "write", "(", "str", "(", "epoch", ")", "+", "';'", "+", "str", "(", "float", "(", "detachLoss", ")", ")", "+", "'\\n'", ")", "\n", "self", ".", "logFile", ".", "flush", "(", ")", "\n", "\n", "currDefField", "[", ":", ",", ":", ",", "idx", "[", "0", "]", ":", "idx", "[", "0", "]", "+", "imgDataToWork", ".", "shape", "[", "2", "]", ",", "idx", "[", "1", "]", ":", "idx", "[", "1", "]", "+", "imgDataToWork", ".", "shape", "[", "3", "]", ",", "idx", "[", "2", "]", ":", "idx", "[", "2", "]", "+", "imgDataToWork", ".", "shape", "[", "4", "]", "]", "=", "currDefFieldGPU", "[", ":", ",", ":", ",", "offset", "[", "0", "]", ":", "offset", "[", "0", "]", "+", "imgDataToWork", ".", "shape", "[", "2", "]", ",", "offset", "[", "1", "]", ":", "offset", "[", "1", "]", "+", "imgDataToWork", ".", "shape", "[", "3", "]", ",", "offset", "[", "2", "]", ":", "offset", "[", "2", "]", "+", "imgDataToWork", ".", "shape", "[", "4", "]", "]", ".", "to", "(", "\"cpu\"", ")", "\n", "", "del", "imgDataToWork", ",", "sampledImgData", ",", "sampledMaskData", ",", "sampledLabelData", "\n", "\n", "\n", "##", "\n", "## Validation", "\n", "##", "\n", "", "if", "epoch", "%", "self", ".", "userOpts", ".", "validationIntervall", "==", "0", ":", "\n", "          ", "torch", ".", "save", "(", "{", "\n", "'epoch'", ":", "epoch", ",", "\n", "'model_state_dict'", ":", "self", ".", "net", ".", "state_dict", "(", ")", ",", "\n", "'optimizer_state_dict'", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "'loss'", ":", "loss", ",", "\n", "'samplingRate'", ":", "samplingRate", "\n", "}", ",", "self", ".", "userOpts", ".", "outputPath", "+", "os", ".", "path", ".", "sep", "+", "'registrationModel'", "+", "str", "(", "samplingRateIdx", ")", "+", "str", "(", "epoch", ")", "+", "'.pt'", ")", "\n", "validationLosses", ",", "landmarkDistances", "=", "self", ".", "validateModel", "(", "validationDataLoader", ",", "netOptim", ",", "samplingRate", ",", "samplingRateIdx", ",", "padVals", ",", "samplerShift", ",", "resultModels", ")", "\n", "if", "len", "(", "landmarkDistances", ")", ">", "0", ":", "\n", "            ", "self", ".", "validationLogFile", ".", "write", "(", "str", "(", "epoch", ")", "+", "';'", "+", "str", "(", "np", ".", "mean", "(", "validationLosses", ")", ")", "+", "';'", "+", "str", "(", "np", ".", "std", "(", "validationLosses", ")", ")", "+", "';'", "+", "str", "(", "np", ".", "mean", "(", "landmarkDistances", ")", ")", "+", "';'", "+", "'\\n'", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "validationLogFile", ".", "write", "(", "str", "(", "epoch", ")", "+", "';'", "+", "str", "(", "np", ".", "mean", "(", "validationLosses", ")", ")", "+", "';'", "+", "str", "(", "np", ".", "std", "(", "validationLosses", ")", ")", "+", "';'", "+", "'0.0'", "+", "'\\n'", ")", "\n", "", "self", ".", "validationLogFile", ".", "flush", "(", ")", "\n", "del", "validationLosses", "\n", "self", ".", "net", ".", "train", "(", ")", "\n", "", "", "return", "self", ".", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.TrainOptimise.TrainOptimise.validateModel": [[130, 215], ["torch.no_grad", "eval.LandmarkHandler.PointProcessor", "enumerate", "TrainOptimise.TrainOptimise.getDeformationField", "validationLosses.append", "len", "copy.deepcopy", "enumerate", "TrainOptimise.TrainOptimise.net.load_state_dict", "Utils.combineDeformationFields", "len", "Utils.sampleImg", "Utils.deformLandmarks", "range", "landmarkDistances.append", "TrainOptimise.TrainOptimise.net.state_dict", "TrainOptimise.TrainOptimise.net.load_state_dict", "TrainOptimise.TrainOptimise.getDeformationField", "Utils.sampleImg", "ScalingAndSquaring.ScalingAndSquaring.ScalingAndSquaring", "ScalingAndSquaring.ScalingAndSquaring.ScalingAndSquaring.", "validationDataLoader.dataset.getSpacing", "validationDataLoader.dataset.getOrigin", "validationDataLoader.dataset.getDirectionCosines", "eval.LandmarkHandler.PointProcessor.calculatePointSetDistance", "Utils.combineDeformationFields", "len", "float", "len"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Optimise.Optimise.getDeformationField", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.DefFieldHandler.combineDeformationFields", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.sampleImg", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.deformLandmarks", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Optimise.Optimise.getDeformationField", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.sampleImg", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.getSpacing", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.getOrigin", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.getDirectionCosines", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointProcessor.calculatePointSetDistance", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.DefFieldHandler.combineDeformationFields"], ["", "def", "validateModel", "(", "self", ",", "validationDataLoader", ",", "netOptim", ",", "samplingRate", ",", "samplingRateIdx", ",", "padVals", ",", "samplerShift", ",", "resultModels", "=", "[", "]", ")", ":", "\n", "      ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "#       self.net.eval()", "\n", "        ", "useContext", "=", "self", ".", "userOpts", ".", "useContext", "\n", "self", ".", "userOpts", ".", "useContext", "=", "False", "\n", "validationLosses", "=", "[", "]", "\n", "landmarkDistances", "=", "[", "]", "\n", "pp", "=", "PointProcessor", "(", ")", "\n", "for", "validationDataIdx", ",", "validationData", "in", "enumerate", "(", "validationDataLoader", ",", "0", ")", ":", "\n", "          ", "landmarksBeforeDeformation", "=", "validationData", "[", "'landmarks'", "]", "\n", "\n", "lastField", "=", "None", "\n", "if", "len", "(", "resultModels", ")", ">", "0", ":", "\n", "            ", "currentState", "=", "copy", ".", "deepcopy", "(", "self", ".", "net", ".", "state_dict", "(", ")", ")", "\n", "for", "modelIdx", ",", "previousModels", "in", "enumerate", "(", "resultModels", ")", ":", "\n", "              ", "self", ".", "net", ".", "load_state_dict", "(", "previousModels", "[", "'model_state'", "]", ")", "\n", "defField", "=", "self", ".", "getDeformationField", "(", "validationData", ",", "previousModels", "[", "'samplingRate'", "]", ",", "self", ".", "userOpts", ".", "patchSize", "[", "modelIdx", "]", ",", "self", ".", "userOpts", ".", "useMedianForSampling", "[", "modelIdx", "]", ",", "samplerShift", ")", "\n", "upSampleRate", "=", "samplingRate", "/", "previousModels", "[", "'samplingRate'", "]", "\n", "defField", "=", "defField", "*", "upSampleRate", "\n", "defField", "=", "sampleImg", "(", "defField", ",", "upSampleRate", ")", "\n", "if", "lastField", "is", "None", ":", "\n", "                ", "lastField", "=", "defField", "\n", "", "else", ":", "\n", "                ", "lastField", "=", "Utils", ".", "combineDeformationFields", "(", "defField", ",", "lastField", ")", "\n", "", "", "self", ".", "net", ".", "load_state_dict", "(", "currentState", ")", "\n", "\n", "#############", "\n", "#############", "\n", "#############", "\n", "#         sampler = Sampler( validationData['mask'], validationData['image'], validationData['label'], self.userOpts.patchSize[samplingRateIdx])", "\n", "#         idxs = sampler.getIndicesForOneShotSampling(samplerShift, self.userOpts.useMedianForSampling[samplingRateIdx])        ", "\n", "#         if lastField is None:", "\n", "#           currValidationField = torch.zeros((validationData['image'].shape[0], validationData['image'].shape[1] * 3, validationData['image'].shape[2], validationData['image'].shape[3], validationData['image'].shape[4]), device=\"cpu\", requires_grad=False)", "\n", "#         else:", "\n", "#           currValidationField = lastField.clone()", "\n", "#           ", "\n", "#         currValidationField = currValidationField * samplingRate", "\n", "#         currValidationField = sampleImg(currValidationField, samplingRate)", "\n", "#         ", "\n", "#         for _ , idx in enumerate(idxs):", "\n", "#           imgDataToWork = sampler.getSubSampleImg(idx, self.userOpts.normImgPatches)", "\n", "#           imgDataToWork = imgDataToWork.to(self.userOpts.device)", "\n", "#           currDefFieldIdx, offset = self.getSubCurrDefFieldIdx(currValidationField, idx)", "\n", "#           currDefFieldGPU = currValidationField[:, :, currDefFieldIdx[0]:currDefFieldIdx[0]+currDefFieldIdx[3], currDefFieldIdx[1]:currDefFieldIdx[1]+currDefFieldIdx[4], currDefFieldIdx[2]:currDefFieldIdx[2]+currDefFieldIdx[5]].to(device=self.userOpts.device)", "\n", "#           lastDeffieldGPU = lastField[:, :, currDefFieldIdx[0]:currDefFieldIdx[0]+currDefFieldIdx[3], currDefFieldIdx[1]:currDefFieldIdx[1]+currDefFieldIdx[4], currDefFieldIdx[2]:currDefFieldIdx[2]+currDefFieldIdx[5]].to(device=self.userOpts.device)", "\n", "#            ", "\n", "#           loss = netOptim.optimizeNetOneShot(imgDataToWork, None, lastDeffieldGPU, currDefFieldGPU, offset, samplingRateIdx, False, optimizeTmp=False)", "\n", "#            ", "\n", "#           detachLoss = loss.detach()      ", "\n", "#           validationLosses.append(float(detachLoss))          ", "\n", "#  ", "\n", "#           currValidationField[:, :, idx[0]:idx[0]+imgDataToWork.shape[2], idx[1]:idx[1]+imgDataToWork.shape[3], idx[2]:idx[2]+imgDataToWork.shape[4]] = currDefFieldGPU[:,:,offset[0]:offset[0]+imgDataToWork.shape[2],offset[1]:offset[1]+imgDataToWork.shape[3],offset[2]:offset[2]+imgDataToWork.shape[4]].to(\"cpu\")        ", "\n", "\n", "#############", "\n", "#############", "\n", "#############", "\n", "\n", "", "currValidationField", "=", "self", ".", "getDeformationField", "(", "validationData", ",", "samplingRate", ",", "self", ".", "userOpts", ".", "patchSize", "[", "samplingRateIdx", "]", ",", "self", ".", "userOpts", ".", "useMedianForSampling", "[", "samplingRateIdx", "]", ",", "samplerShift", ")", "\n", "if", "lastField", "is", "not", "None", ":", "\n", "            ", "currValidationField", "=", "Utils", ".", "combineDeformationFields", "(", "currValidationField", ",", "lastField", ")", "\n", "#validationLoss = netOptim.calculateLoss(validationData['image'].to(self.userOpts.device), currValidationField, samplingRateIdx, (0, 0, 0, validationData['image'].shape[2],validationData['image'].shape[3], validationData['image'].shape[4]))", "\n", "", "validationLosses", ".", "append", "(", "0.0", ")", "#float(validationLoss.detach()))", "\n", "\n", "if", "len", "(", "landmarksBeforeDeformation", ")", ">", "0", ":", "\n", "            ", "if", "self", ".", "userOpts", ".", "diffeomorphicRegistration", ":", "\n", "              ", "sas", "=", "ScalingAndSquaring", "(", "self", ".", "userOpts", ".", "sasSteps", ")", "\n", "deformationField", "=", "sas", "(", "currValidationField", ")", "\n", "", "else", ":", "\n", "              ", "deformationField", "=", "currValidationField", "\n", "", "upSampleRate", "=", "1.0", "/", "samplingRate", "\n", "deformationField", "=", "deformationField", "*", "upSampleRate", "\n", "deformationField", "=", "sampleImg", "(", "deformationField", ",", "upSampleRate", ")", "\n", "validationData", "[", "'landmarks'", "]", "=", "deformLandmarks", "(", "validationData", "[", "'landmarks'", "]", ",", "validationData", "[", "'image'", "]", ",", "deformationField", ",", "validationDataLoader", ".", "dataset", ".", "getSpacing", "(", "validationDataIdx", ")", ",", "\n", "validationDataLoader", ".", "dataset", ".", "getOrigin", "(", "validationDataIdx", ")", ",", "\n", "validationDataLoader", ".", "dataset", ".", "getDirectionCosines", "(", "validationDataIdx", ")", ")", "\n", "totalMeanPointDist", "=", "0.0", "\n", "for", "landmarkChannel", "in", "range", "(", "-", "1", ",", "len", "(", "landmarksBeforeDeformation", ")", "-", "1", ")", ":", "\n", "              ", "meanPointDistance", ",", "_", "=", "pp", ".", "calculatePointSetDistance", "(", "landmarksBeforeDeformation", "[", "landmarkChannel", "+", "1", "]", ",", "validationData", "[", "'landmarks'", "]", "[", "landmarkChannel", "]", ",", "False", ")", "\n", "totalMeanPointDist", "+=", "meanPointDistance", "\n", "", "landmarkDistances", ".", "append", "(", "totalMeanPointDist", "/", "float", "(", "len", "(", "landmarksBeforeDeformation", ")", ")", ")", "\n", "\n", "", "", "del", "validationData", ",", "currValidationField", "\n", "\n", "self", ".", "userOpts", ".", "useContext", "=", "useContext", "\n", "return", "validationLosses", ",", "landmarkDistances", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Optimise.Optimise.__init__": [[16, 24], ["open", "Optimise.Optimise.logFile.write", "Optimise.Optimise.logFile.flush"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "userOpts", ")", ":", "\n", "      ", "self", ".", "userOpts", "=", "userOpts", "\n", "self", ".", "net", "=", "None", "\n", "logfileName", "=", "self", ".", "userOpts", ".", "outputPath", "+", "os", ".", "path", ".", "sep", "+", "'lossLog.csv'", "\n", "self", ".", "logFile", "=", "open", "(", "logfileName", ",", "'w'", ")", "\n", "self", ".", "logFile", ".", "write", "(", "'PatchIdx;Loss;CrossCorr;DSC;Smmoth;Cycle\\n'", ")", "\n", "self", ".", "logFile", ".", "flush", "(", ")", "\n", "self", ".", "finalNumberIterations", "=", "[", "0", ",", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Optimise.Optimise.__exit__": [[25, 27], ["Optimise.Optimise.logFile.close"], "methods", ["None"], ["", "def", "__exit__", "(", "self", ",", "exc_type", ",", "exc_value", ",", "traceback", ")", ":", "\n", "      ", "self", ".", "logFile", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Optimise.Optimise.__enter__": [[28, 30], ["None"], "methods", ["None"], ["", "def", "__enter__", "(", "self", ")", ":", "\n", "      ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Optimise.Optimise.getDeformationField": [[32, 43], ["Utils.sampleImgData", "Sampler.Sampler.Sampler", "Sampler.Sampler.Sampler.getIndicesForOneShotSampling", "torch.zeros", "enumerate", "Sampler.Sampler.Sampler.getSubSampleImg", "validationImageSample.to.to.to", "Optimise.Optimise.net"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.sampleImgData", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Sampler.Sampler.getIndicesForOneShotSampling", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Sampler.Sampler.getSubSampleImg"], ["", "def", "getDeformationField", "(", "self", ",", "imageData", ",", "samplingRate", ",", "patchSize", ",", "useMedianSampling", ",", "samplerShift", ")", ":", "\n", "      ", "sampledValidationImgData", ",", "sampledValidationMaskData", ",", "sampledValidationLabelData", ",", "_", "=", "Utils", ".", "sampleImgData", "(", "imageData", ",", "samplingRate", ")", "\n", "validationSampler", "=", "Sampler", "(", "sampledValidationMaskData", ",", "sampledValidationImgData", ",", "sampledValidationLabelData", ",", "patchSize", ")", "\n", "idxs", "=", "validationSampler", ".", "getIndicesForOneShotSampling", "(", "samplerShift", ",", "useMedianSampling", ")", "\n", "currValidationField", "=", "torch", ".", "zeros", "(", "(", "sampledValidationImgData", ".", "shape", "[", "0", "]", ",", "sampledValidationImgData", ".", "shape", "[", "1", "]", "*", "3", ",", "sampledValidationImgData", ".", "shape", "[", "2", "]", ",", "sampledValidationImgData", ".", "shape", "[", "3", "]", ",", "sampledValidationImgData", ".", "shape", "[", "4", "]", ")", ",", "device", "=", "self", ".", "userOpts", ".", "device", ",", "requires_grad", "=", "False", ")", "\n", "for", "_", ",", "idx", "in", "enumerate", "(", "idxs", ")", ":", "\n", "        ", "validationImageSample", "=", "validationSampler", ".", "getSubSampleImg", "(", "idx", ",", "self", ".", "userOpts", ".", "normImgPatches", ")", "\n", "validationImageSample", "=", "validationImageSample", ".", "to", "(", "self", ".", "userOpts", ".", "device", ")", "\n", "defField", "=", "self", ".", "net", "(", "validationImageSample", ")", "\n", "currValidationField", "[", ":", ",", ":", ",", "idx", "[", "0", "]", ":", "idx", "[", "0", "]", "+", "validationImageSample", ".", "shape", "[", "2", "]", ",", "idx", "[", "1", "]", ":", "idx", "[", "1", "]", "+", "validationImageSample", ".", "shape", "[", "3", "]", ",", "idx", "[", "2", "]", ":", "idx", "[", "2", "]", "+", "validationImageSample", ".", "shape", "[", "4", "]", "]", "=", "defField", "\n", "", "return", "currValidationField", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Optimise.Optimise.terminateLoopByLoss": [[44, 51], ["torch.abs"], "methods", ["None"], ["", "def", "terminateLoopByLoss", "(", "self", ",", "loss", ",", "meanLoss", ",", "currIteration", ",", "itThreshold", ",", "iterIdx", ",", "tollerance", ")", ":", "\n", "      ", "if", "(", "torch", ".", "abs", "(", "meanLoss", "-", "loss", ")", "<", "tollerance", ")", ":", "\n", "        ", "self", ".", "finalLoss", "=", "loss", "\n", "self", ".", "finalNumberIterations", "[", "iterIdx", "]", "=", "currIteration", "\n", "return", "True", "\n", "", "else", ":", "\n", "        ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Optimise.Optimise.terminateLoopByLossAndItCount": [[52, 59], ["torch.abs"], "methods", ["None"], ["", "", "def", "terminateLoopByLossAndItCount", "(", "self", ",", "loss", ",", "meanLoss", ",", "currIteration", ",", "itThreshold", ",", "iterIdx", ",", "tollerance", ")", ":", "\n", "      ", "if", "(", "torch", ".", "abs", "(", "meanLoss", "-", "loss", ")", "<", "tollerance", ")", "or", "(", "currIteration", ">=", "itThreshold", ")", ":", "\n", "        ", "self", ".", "finalLoss", "=", "loss", "\n", "self", ".", "finalNumberIterations", "[", "iterIdx", "]", "=", "currIteration", "\n", "return", "True", "\n", "", "else", ":", "\n", "        ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Optimise.Optimise.terminateLoopByItCount": [[60, 67], ["None"], "methods", ["None"], ["", "", "def", "terminateLoopByItCount", "(", "self", ",", "loss", ",", "runningLoss", ",", "currIteration", ",", "itThreshold", ",", "iterIdx", ",", "tollerance", ")", ":", "\n", "      ", "if", "(", "currIteration", ">=", "itThreshold", ")", ":", "\n", "        ", "self", ".", "finalLoss", "=", "loss", "\n", "self", ".", "finalNumberIterations", "[", "iterIdx", "]", "=", "currIteration", "\n", "return", "True", "\n", "", "else", ":", "\n", "        ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Optimise.Optimise.getSubCurrDefFieldIdx": [[68, 103], ["list", "range", "range", "range", "range", "range", "range"], "methods", ["None"], ["", "", "def", "getSubCurrDefFieldIdx", "(", "self", ",", "currDeffield", ",", "idx", ")", ":", "\n", "      ", "newIdx", "=", "list", "(", "idx", ")", "\n", "offset", "=", "[", "0", ",", "0", ",", "0", "]", "\n", "radius", "=", "1", "\n", "for", "i", "in", "range", "(", "radius", ",", "-", "1", ",", "-", "1", ")", ":", "\n", "        ", "if", "idx", "[", "0", "]", "-", "i", ">", "0", ":", "\n", "          ", "newIdx", "[", "0", "]", "=", "idx", "[", "0", "]", "-", "1", "-", "i", "\n", "newIdx", "[", "3", "]", "=", "idx", "[", "3", "]", "+", "1", "+", "i", "\n", "offset", "[", "0", "]", "=", "1", "+", "i", "\n", "break", "\n", "", "", "for", "i", "in", "range", "(", "radius", ",", "0", ",", "-", "1", ")", ":", "\n", "        ", "if", "newIdx", "[", "0", "]", "<", "currDeffield", ".", "shape", "[", "2", "]", "-", "newIdx", "[", "3", "]", "-", "i", ":", "\n", "          ", "newIdx", "[", "3", "]", "=", "newIdx", "[", "3", "]", "+", "i", "+", "1", "\n", "break", "\n", "", "", "for", "i", "in", "range", "(", "radius", ",", "-", "1", ",", "-", "1", ")", ":", "\n", "        ", "if", "idx", "[", "1", "]", "-", "i", ">", "0", ":", "\n", "          ", "newIdx", "[", "1", "]", "=", "idx", "[", "1", "]", "-", "1", "-", "i", "\n", "newIdx", "[", "4", "]", "=", "idx", "[", "4", "]", "+", "1", "+", "i", "\n", "offset", "[", "1", "]", "=", "1", "+", "i", "\n", "break", "\n", "", "", "for", "i", "in", "range", "(", "radius", ",", "0", ",", "-", "1", ")", ":", "\n", "        ", "if", "newIdx", "[", "1", "]", "<", "currDeffield", ".", "shape", "[", "3", "]", "-", "newIdx", "[", "4", "]", "-", "i", ":", "\n", "          ", "newIdx", "[", "4", "]", "=", "newIdx", "[", "4", "]", "+", "i", "+", "1", "\n", "break", "\n", "", "", "for", "i", "in", "range", "(", "radius", ",", "-", "1", ",", "-", "1", ")", ":", "\n", "        ", "if", "idx", "[", "2", "]", "-", "i", ">", "i", ":", "\n", "          ", "newIdx", "[", "2", "]", "=", "idx", "[", "2", "]", "-", "1", "-", "i", "\n", "newIdx", "[", "5", "]", "=", "idx", "[", "5", "]", "+", "1", "+", "i", "\n", "offset", "[", "2", "]", "=", "1", "+", "i", "\n", "break", "\n", "", "", "for", "i", "in", "range", "(", "radius", ",", "0", ",", "-", "1", ")", ":", "\n", "        ", "if", "newIdx", "[", "2", "]", "<", "currDeffield", ".", "shape", "[", "4", "]", "-", "newIdx", "[", "5", "]", "-", "i", ":", "\n", "          ", "newIdx", "[", "5", "]", "=", "newIdx", "[", "5", "]", "+", "i", "+", "1", "\n", "break", "\n", "", "", "return", "newIdx", ",", "offset", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.ScalingAndSquaring.ScalingAndSquaring.__init__": [[6, 9], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.DecoderBrick.DecoderBrick.__init__"], ["  ", "def", "__init__", "(", "self", ",", "num_steps", "=", "0", ")", ":", "\n", "      ", "super", "(", "ScalingAndSquaring", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_steps", "=", "num_steps", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.ScalingAndSquaring.ScalingAndSquaring.forward": [[11, 23], ["range", "torch.empty", "torch.empty", "torch.empty", "torch.empty", "range", "x.add.add.add", "range", "int", "Utils.deformWithNearestNeighborInterpolation"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.deformWithNearestNeighborInterpolation"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "x", "=", "x", "/", "(", "2", "**", "self", ".", "num_steps", ")", "\n", "for", "_", "in", "range", "(", "self", ".", "num_steps", ")", ":", "\n", "      ", "xDef", "=", "torch", ".", "empty", "(", "x", ".", "shape", ",", "device", "=", "x", ".", "device", ",", "requires_grad", "=", "False", ")", "\n", "for", "chanIdx", "in", "range", "(", "-", "1", ",", "int", "(", "x", ".", "shape", "[", "1", "]", "/", "3", ")", "-", "1", ")", ":", "\n", "        ", "chanRange", "=", "range", "(", "chanIdx", "*", "3", ",", "chanIdx", "*", "3", "+", "3", ")", "\n", "for", "channel", "in", "chanRange", ":", "\n", "          ", "imgToDef", "=", "x", "[", ":", ",", "None", ",", "channel", ",", "]", "\n", "deformedTmp", "=", "Utils", ".", "deformWithNearestNeighborInterpolation", "(", "imgToDef", ",", "x", "[", ":", ",", "chanRange", ",", "]", ",", "x", ".", "device", ")", "#Utils.deformImage(imgToDef, x[: , chanRange, ], x.device, True, False)", "\n", "xDef", "[", ":", ",", "channel", ",", "]", "=", "deformedTmp", "[", ":", ",", "0", ",", "]", "\n", "", "", "x", "=", "x", ".", "add", "(", "xDef", ")", "\n", "", "return", "x", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Net.UNet.__init__": [[12, 59], ["torch.Module.__init__", "range", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "Net.UNet.reset_params", "ValueError", "Net.UNet.encoders.append", "Net.UNet.selfSupervisions.append", "range", "EncoderBrick.EncoderBrick.EncoderBrick", "Net.UNet.pools.append", "Net.UNet.decoders.append", "Net.UNet.selfSupervisions.append", "SelfSupervisionBrick.SelfSupervisionBrick.SelfSupervisionBrick", "range", "torch.AvgPool3d", "torch.AvgPool3d", "DecoderBrick.DecoderBrick.DecoderBrick", "SelfSupervisionBrick.SelfSupervisionBrick.SelfSupervisionBrick", "numpy.power"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.DecoderBrick.DecoderBrick.__init__", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Net.UNet.reset_params"], ["  ", "def", "__init__", "(", "self", ",", "in_channels", "=", "2", ",", "useBatchNorm", "=", "True", ",", "concatLayer", "=", "True", ",", "depth", "=", "5", ",", "numberOfFiltersFirstLayer", "=", "32", ",", "useDeepSelfSupervision", "=", "False", ",", "padImg", "=", "True", ")", ":", "\n", "    ", "super", "(", "UNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "(", "depth", "<", "2", ")", ":", "\n", "      ", "raise", "ValueError", "(", "\"minimum depth is 2\"", ")", "\n", "\n", "", "self", ".", "useBatchNorm", "=", "useBatchNorm", "\n", "self", ".", "concatLayer", "=", "concatLayer", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "useDeepSelfSupervision", "=", "useDeepSelfSupervision", "\n", "\n", "self", ".", "encoders", "=", "[", "]", "\n", "self", ".", "decoders", "=", "[", "]", "\n", "self", ".", "pools", "=", "[", "]", "\n", "self", ".", "selfSupervisions", "=", "[", "]", "\n", "\n", "self", ".", "depth", "=", "depth", "\n", "for", "i", "in", "range", "(", "self", ".", "depth", ")", ":", "\n", "      ", "currentNumberOfInputChannels", "=", "self", ".", "in_channels", "if", "i", "==", "0", "else", "outputFilterNumber", "\n", "outputFilterNumber", "=", "numberOfFiltersFirstLayer", "*", "(", "2", "**", "i", ")", "\n", "self", ".", "encoders", ".", "append", "(", "EncoderBrick", "(", "outputFilterNumber", ",", "currentNumberOfInputChannels", ",", "self", ".", "useBatchNorm", ",", "self", ".", "concatLayer", ",", "padImg", ")", ")", "\n", "if", "(", "i", "<", "self", ".", "depth", "-", "1", ")", ":", "\n", "        ", "self", ".", "pools", ".", "append", "(", "nn", ".", "AvgPool3d", "(", "2", ",", "2", ")", ")", "\n", "self", ".", "decoders", ".", "append", "(", "DecoderBrick", "(", "outputFilterNumber", ",", "outputFilterNumber", "*", "2", ",", "self", ".", "useBatchNorm", ",", "self", ".", "concatLayer", ",", "padImg", ")", ")", "\n", "", "if", "self", ".", "useDeepSelfSupervision", ":", "\n", "        ", "self", ".", "selfSupervisions", ".", "append", "(", "SelfSupervisionBrick", "(", "in_channels", ",", "outputFilterNumber", ",", "i", ",", "padImg", ")", ")", "\n", "\n", "", "", "if", "not", "self", ".", "useDeepSelfSupervision", ":", "\n", "      ", "self", ".", "selfSupervisions", ".", "append", "(", "SelfSupervisionBrick", "(", "in_channels", ",", "numberOfFiltersFirstLayer", ",", "0", ",", "padImg", ")", ")", "\n", "\n", "", "self", ".", "encoders", "=", "nn", ".", "ModuleList", "(", "self", ".", "encoders", ")", "\n", "self", ".", "decoders", "=", "nn", ".", "ModuleList", "(", "self", ".", "decoders", ")", "\n", "self", ".", "pools", "=", "nn", ".", "ModuleList", "(", "self", ".", "pools", ")", "\n", "self", ".", "selfSupervisions", "=", "nn", ".", "ModuleList", "(", "self", ".", "selfSupervisions", ")", "\n", "\n", "self", ".", "receptiveFieldOffsets", "=", "[", "0", "]", "*", "(", "depth", "-", "1", ")", "\n", "if", "not", "padImg", ":", "\n", "      ", "offsetBase", "=", "2", "\n", "offsetCenter", "=", "2", "\n", "for", "i", "in", "range", "(", "depth", "-", "1", ")", ":", "\n", "        ", "offsetCenter", "=", "offsetBase", "*", "offsetCenter", "\n", "offset", "=", "offsetCenter", "\n", "for", "j", "in", "range", "(", "i", ")", ":", "\n", "          ", "offset", "+=", "2", "*", "power", "(", "offsetBase", ",", "2", "+", "j", ")", "\n", "", "self", ".", "receptiveFieldOffsets", "[", "i", "]", "=", "offset", "\n", "\n", "", "", "self", ".", "reset_params", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Net.UNet.forward": [[61, 91], ["list", "enumerate", "range", "range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "range", "encoder", "encoder_outs.append", "decoder", "outputFields.append", "len", "len", "len", "Net.UNet."], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "    ", "encoder_outs", "=", "[", "]", "\n", "supervisionInputs", "=", "list", "(", "range", "(", "len", "(", "self", ".", "encoders", ")", ")", ")", "#python3", "\n", "for", "i", ",", "encoder", "in", "enumerate", "(", "self", ".", "encoders", ")", ":", "\n", "      ", "x", "=", "encoder", "(", "x", ")", "\n", "rFOffSet", "=", "self", ".", "receptiveFieldOffsets", "[", "self", ".", "depth", "-", "2", "-", "i", "]", "\n", "encoder_outs", ".", "append", "(", "x", "[", ":", ",", ":", ",", "rFOffSet", ":", "x", ".", "shape", "[", "2", "]", "-", "rFOffSet", ",", "rFOffSet", ":", "x", ".", "shape", "[", "3", "]", "-", "rFOffSet", ",", "rFOffSet", ":", "x", ".", "shape", "[", "4", "]", "-", "rFOffSet", "]", ")", "\n", "if", "(", "i", "<", "self", ".", "depth", "-", "1", ")", ":", "\n", "        ", "x", "=", "self", ".", "pools", "[", "i", "]", "(", "x", ")", "\n", "", "else", ":", "\n", "        ", "supervisionInputs", "[", "i", "]", "=", "x", "\n", "\n", "", "", "for", "i", "in", "range", "(", "len", "(", "self", ".", "decoders", ")", "-", "1", ",", "-", "1", ",", "-", "1", ")", ":", "\n", "      ", "decoder", "=", "self", ".", "decoders", "[", "i", "]", "\n", "encOut", "=", "encoder_outs", "[", "i", "]", "\n", "x", "=", "decoder", "(", "x", ",", "encOut", ")", "\n", "supervisionInputs", "[", "i", "]", "=", "x", "\n", "\n", "\n", "", "outputFields", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "selfSupervisions", ")", "-", "1", ",", "-", "1", ",", "-", "1", ")", ":", "\n", "      ", "decOut", "=", "supervisionInputs", "[", "i", "]", "\n", "selfSupervision", "=", "self", ".", "selfSupervisions", "[", "i", "]", "\n", "outputFields", ".", "append", "(", "selfSupervision", "(", "decOut", ")", ")", "\n", "\n", "", "x", "=", "torch", ".", "stack", "(", "outputFields", ")", "\n", "tmp", "=", "torch", ".", "sum", "(", "x", ",", "dim", "=", "0", ")", "\n", "\n", "return", "tmp", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Net.UNet.reset_params": [[93, 104], ["enumerate", "Net.UNet.modules", "isinstance", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.constant_", "torch.nn.init.constant_", "isinstance", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.constant_", "torch.nn.init.constant_", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_"], "methods", ["None"], ["", "def", "reset_params", "(", "self", ")", ":", "\n", "    ", "for", "_", ",", "m", "in", "enumerate", "(", "self", ".", "modules", "(", ")", ")", ":", "\n", "      ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv3d", ")", ":", "\n", "        ", "init", ".", "xavier_normal_", "(", "m", ".", "weight", ")", "\n", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "ConvTranspose3d", ")", ":", "\n", "        ", "init", ".", "xavier_normal_", "(", "m", ".", "weight", ")", "\n", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm3d", ")", ":", "\n", "        ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.NetOptimizer.NetOptimizer.__init__": [[9, 18], ["ScalingAndSquaring.ScalingAndSquaring", "GaussSmoothing.GaussianSmoothing"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "net", ",", "channels", ",", "optimizer", ",", "options", ")", ":", "\n", "    ", "self", ".", "optimizer", "=", "optimizer", "\n", "self", ".", "net", "=", "net", "\n", "self", ".", "userOpts", "=", "options", "\n", "self", ".", "scalingSquaring", "=", "sas", ".", "ScalingAndSquaring", "(", "options", ".", "sasSteps", ")", "\n", "if", "channels", "is", "not", "None", ":", "\n", "      ", "self", ".", "smoother", "=", "gs", ".", "GaussianSmoothing", "(", "channels", ",", "options", ".", "finalGaussKernelSize", ",", "options", ".", "finalGaussKernelStd", ",", "3", ",", "options", ".", "device", ")", "\n", "", "else", ":", "\n", "      ", "self", ".", "smoother", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.NetOptimizer.NetOptimizer.setOptimizer": [[19, 21], ["None"], "methods", ["None"], ["", "", "def", "setOptimizer", "(", "self", ",", "optimizer", ")", ":", "\n", "    ", "self", ".", "optimizer", "=", "optimizer", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.NetOptimizer.NetOptimizer.initSmoother": [[22, 24], ["GaussSmoothing.GaussianSmoothing"], "methods", ["None"], ["", "def", "initSmoother", "(", "self", ",", "channels", ")", ":", "\n", "    ", "self", ".", "smoother", "=", "gs", ".", "GaussianSmoothing", "(", "channels", ",", "self", ".", "userOpts", ".", "finalGaussKernelSize", ",", "self", ".", "userOpts", ".", "finalGaussKernelStd", ",", "3", ",", "self", ".", "userOpts", ".", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.NetOptimizer.NetOptimizer.setUserOpts": [[25, 27], ["None"], "methods", ["None"], ["", "def", "setUserOpts", "(", "self", ",", "options", ")", ":", "\n", "    ", "self", ".", "userOpts", "=", "options", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.NetOptimizer.NetOptimizer.normalizeWeights": [[28, 31], ["None"], "methods", ["None"], ["", "def", "normalizeWeights", "(", "self", ",", "ccW", ",", "sW", ",", "cyW", ",", "dscWeight", ")", ":", "\n", "    ", "weightSum", "=", "ccW", "+", "sW", "+", "cyW", "+", "dscWeight", "\n", "return", "[", "ccW", "/", "weightSum", ",", "sW", "/", "weightSum", ",", "cyW", "/", "weightSum", ",", "dscWeight", "/", "weightSum", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.NetOptimizer.NetOptimizer.cycleLossCalculationsNearestNeighbor": [[33, 83], ["zeroIndices[].round().long", "zeroIndices[].round().long", "zeroIndices[].round().long", "cycleImgData[].detach", "cycleImgData[].detach", "cycleImgData[].detach", "currDefFields.clone", "zeroIndices[].round", "zeroIndices[].round", "zeroIndices[].round"], "methods", ["None"], ["", "def", "cycleLossCalculationsNearestNeighbor", "(", "self", ",", "zeroIndices", ",", "defFields", ",", "currDefFields", ",", "idx", ",", "borderCrossingArry", "=", "None", ")", ":", "\n", "    ", "fieldsIdxs4", "=", "zeroIndices", "[", "4", "]", ".", "round", "(", ")", ".", "long", "(", ")", "\n", "fieldsIdxs3", "=", "zeroIndices", "[", "3", "]", ".", "round", "(", ")", ".", "long", "(", ")", "\n", "fieldsIdxs2", "=", "zeroIndices", "[", "2", "]", ".", "round", "(", ")", ".", "long", "(", ")", "\n", "\n", "if", "currDefFields", "is", "not", "None", ":", "\n", "      ", "currentAndActualField", "=", "currDefFields", ".", "clone", "(", ")", "\n", "currentAndActualField", "[", ":", ",", ":", ",", "idx", "[", "0", "]", ":", "idx", "[", "0", "]", "+", "defFields", ".", "shape", "[", "2", "]", ",", "idx", "[", "1", "]", ":", "idx", "[", "1", "]", "+", "defFields", ".", "shape", "[", "3", "]", ",", "idx", "[", "2", "]", ":", "idx", "[", "2", "]", "+", "defFields", ".", "shape", "[", "4", "]", "]", "=", "defFields", "\n", "fieldsIdxs4", "+=", "idx", "[", "2", "]", "\n", "fieldsIdxs3", "+=", "idx", "[", "1", "]", "\n", "fieldsIdxs2", "+=", "idx", "[", "0", "]", "\n", "", "else", ":", "\n", "      ", "currentAndActualField", "=", "defFields", "\n", "\n", "", "boolMask", "=", "(", "(", "(", "fieldsIdxs4", ">", "(", "currentAndActualField", ".", "shape", "[", "4", "]", "-", "1", ")", ")", "|", "(", "fieldsIdxs4", "<", "0", ")", ")", "|", "(", "(", "fieldsIdxs3", ">", "(", "currentAndActualField", ".", "shape", "[", "3", "]", "-", "1", ")", ")", "|", "(", "fieldsIdxs3", "<", "0", ")", ")", "|", "(", "(", "fieldsIdxs2", ">", "(", "currentAndActualField", ".", "shape", "[", "2", "]", "-", "1", ")", ")", "|", "(", "fieldsIdxs2", "<", "0", ")", ")", ")", "\n", "borderCrossingArry", "[", "boolMask", "]", "=", "1", "\n", "\n", "fieldsIdxs4", "[", "fieldsIdxs4", ">", "(", "currentAndActualField", ".", "shape", "[", "4", "]", "-", "1", ")", "]", "=", "currentAndActualField", ".", "shape", "[", "4", "]", "-", "1", "\n", "fieldsIdxs4", "[", "fieldsIdxs4", "<", "0", "]", "=", "0", "\n", "\n", "fieldsIdxs3", "[", "fieldsIdxs3", ">", "(", "currentAndActualField", ".", "shape", "[", "3", "]", "-", "1", ")", "]", "=", "currentAndActualField", ".", "shape", "[", "3", "]", "-", "1", "\n", "fieldsIdxs3", "[", "fieldsIdxs3", "<", "0", "]", "=", "0", "\n", "\n", "fieldsIdxs2", "[", "fieldsIdxs2", ">", "(", "currentAndActualField", ".", "shape", "[", "2", "]", "-", "1", ")", "]", "=", "currentAndActualField", ".", "shape", "[", "2", "]", "-", "1", "\n", "fieldsIdxs2", "[", "fieldsIdxs2", "<", "0", "]", "=", "0", "\n", "\n", "fields0", "=", "zeroIndices", "[", "0", "]", "\n", "fields1", "=", "zeroIndices", "[", "1", "]", "\n", "\n", "cycleImgData", "=", "currentAndActualField", "[", "fields0", ",", "fields1", ",", "fieldsIdxs2", ",", "fieldsIdxs3", ",", "fieldsIdxs4", "]", "\n", "\n", "zeroIndices", "[", "1", "]", "=", "zeroIndices", "[", "1", "]", "+", "3", "\n", "\n", "##take care of def vec order !!!", "\n", "tmpField", "=", "cycleImgData", "[", ":", ",", "None", ",", "2", ",", "]", ".", "detach", "(", ")", "\n", "zeroIndices", "[", "2", "]", "[", ":", ",", "None", ",", "0", ",", "]", "+=", "tmpField", "\n", "zeroIndices", "[", "2", "]", "[", ":", ",", "None", ",", "1", ",", "]", "+=", "tmpField", "\n", "zeroIndices", "[", "2", "]", "[", ":", ",", "None", ",", "2", ",", "]", "+=", "tmpField", "\n", "\n", "tmpField", "=", "cycleImgData", "[", ":", ",", "None", ",", "1", ",", "]", ".", "detach", "(", ")", "\n", "zeroIndices", "[", "3", "]", "[", ":", ",", "None", ",", "0", ",", "]", "+=", "tmpField", "\n", "zeroIndices", "[", "3", "]", "[", ":", ",", "None", ",", "1", ",", "]", "+=", "tmpField", "\n", "zeroIndices", "[", "3", "]", "[", ":", ",", "None", ",", "2", ",", "]", "+=", "tmpField", "\n", "\n", "tmpField", "=", "cycleImgData", "[", ":", ",", "None", ",", "0", ",", "]", ".", "detach", "(", ")", "\n", "zeroIndices", "[", "4", "]", "[", ":", ",", "None", ",", "0", ",", "]", "+=", "tmpField", "\n", "zeroIndices", "[", "4", "]", "[", ":", ",", "None", ",", "1", ",", "]", "+=", "tmpField", "\n", "zeroIndices", "[", "4", "]", "[", ":", ",", "None", ",", "2", ",", "]", "+=", "tmpField", "\n", "\n", "return", "cycleImgData", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.NetOptimizer.NetOptimizer.getCycleImageData": [[85, 100], ["Utils.getCycleImgData", "Utils.getZeroIdxField", "float", "torch.zeros", "torch.zeros", "range", "range", "NetOptimizer.NetOptimizer.cycleLossCalculationsNearestNeighbor", "int"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getCycleImgData", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getZeroIdxField", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.NetOptimizer.NetOptimizer.cycleLossCalculationsNearestNeighbor"], ["", "def", "getCycleImageData", "(", "self", ",", "addedField", ")", ":", "\n", "    ", "cycleImgData", "=", "Utils", ".", "getCycleImgData", "(", "addedField", ".", "shape", ",", "self", ".", "userOpts", ".", "device", ")", "#torch.empty(defFields.shape, device=self.userOpts.device)", "\n", "zeroIndices", "=", "Utils", ".", "getZeroIdxField", "(", "addedField", ".", "shape", ",", "self", ".", "userOpts", ".", "device", ")", "\n", "if", "float", "(", "torch", ".", "__version__", "[", "0", ":", "3", "]", ")", "<", "1.2", ":", "\n", "      ", "outOfBoundsTensor", "=", "torch", ".", "zeros", "(", "zeroIndices", "[", "0", "]", ".", "shape", ",", "dtype", "=", "torch", ".", "uint8", ",", "device", "=", "self", ".", "userOpts", ".", "device", ")", "\n", "", "else", ":", "\n", "     ", "outOfBoundsTensor", "=", "torch", ".", "zeros", "(", "zeroIndices", "[", "0", "]", ".", "shape", ",", "dtype", "=", "torch", ".", "bool", ",", "device", "=", "self", ".", "userOpts", ".", "device", ")", "\n", "", "if", "self", ".", "userOpts", ".", "cycleW", ">", "0.0", ":", "\n", "      ", "for", "chanIdx", "in", "range", "(", "int", "(", "addedField", ".", "shape", "[", "1", "]", "/", "3.0", ")", "-", "1", ",", "-", "1", ",", "-", "1", ")", ":", "\n", "        ", "chanRange", "=", "range", "(", "chanIdx", "*", "3", ",", "chanIdx", "*", "3", "+", "3", ")", "\n", "cycleImgData", "[", ":", ",", "chanRange", ",", "]", "=", "self", ".", "cycleLossCalculationsNearestNeighbor", "(", "zeroIndices", ",", "addedField", ",", "None", ",", "None", ",", "outOfBoundsTensor", ")", "\n", "#         tmp = self.cycleLossCalculationsNearestNeighbor(zeroIndices, addedField, None, None, outOfBoundsTensor)", "\n", "#         cycleImageDataList[chanIdx] = tmp", "\n", "\n", "", "", "return", "cycleImgData", ",", "outOfBoundsTensor", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.NetOptimizer.NetOptimizer.getCycleImageDataNew": [[101, 113], ["Utils.getZeroIdxField", "torch.zeros", "range", "torch.cat", "NetOptimizer.NetOptimizer.cycleLossCalculationsNearestNeighbor"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getZeroIdxField", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.NetOptimizer.NetOptimizer.cycleLossCalculationsNearestNeighbor"], ["", "def", "getCycleImageDataNew", "(", "self", ",", "addedField", ")", ":", "\n", "    ", "zeroIndices", "=", "Utils", ".", "getZeroIdxField", "(", "addedField", ".", "shape", ",", "self", ".", "userOpts", ".", "device", ")", "\n", "outOfBoundsTensor", "=", "torch", ".", "zeros", "(", "zeroIndices", "[", "0", "]", ".", "shape", ",", "dtype", "=", "torch", ".", "uint8", ",", "device", "=", "self", ".", "userOpts", ".", "device", ")", "\n", "cycleImageDataList", "=", "[", "None", "]", "*", "(", "addedField", ".", "shape", "[", "1", "]", "/", "3", ")", "\n", "if", "self", ".", "userOpts", ".", "cycleW", ">", "0.0", ":", "\n", "      ", "for", "chanIdx", "in", "range", "(", "(", "addedField", ".", "shape", "[", "1", "]", "/", "3", ")", "-", "1", ",", "-", "1", ",", "-", "1", ")", ":", "\n", "#         chanRange = range(chanIdx * 3, chanIdx * 3 + 3)   ", "\n", "#         cycleImgData[:,chanRange, ] = self.cycleLossCalculationsNearestNeighbor(zeroIndices, addedField, None, None, outOfBoundsTensor)", "\n", "        ", "tmp", "=", "self", ".", "cycleLossCalculationsNearestNeighbor", "(", "zeroIndices", ",", "addedField", ",", "None", ",", "None", ",", "outOfBoundsTensor", ")", "\n", "cycleImageDataList", "[", "chanIdx", "]", "=", "tmp", "\n", "\n", "", "", "return", "torch", ".", "cat", "(", "cycleImageDataList", ",", "dim", "=", "1", ")", ",", "outOfBoundsTensor", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.NetOptimizer.NetOptimizer.optimizeNet": [[114, 226], ["NetOptimizer.NetOptimizer.optimizer.zero_grad", "NetOptimizer.NetOptimizer.net", "int", "int", "int", "addedField.detach", "lossCalculator.update", "NetOptimizer.NetOptimizer.normalizeWeights", "torch.tensor", "torch.tensor", "Utils.deformWholeImage", "NetOptimizer.NetOptimizer.getCycleImageData", "torch.tensor", "lossCalculator.cycleLoss", "torch.tensor", "torch.cuda.empty_cache", "loss.backward", "NetOptimizer.NetOptimizer.optimizer.step", "NetOptimizer.NetOptimizer.smoother", "torch.zeros_like", "Utils.combineDeformationFields", "lossCalculator.smoothBoundary", "lossCalculator.smoothnessVecField", "NetOptimizer.NetOptimizer.scalingSquaring", "torch.zeros_like", "Utils.deformWholeImage().detach", "lossCalculator.normCrossCorr", "print", "Utils.deformWholeImage", "lossCalculator.normCrossCorr2Images", "lossCalculator.multiLabelDiceLoss", "Utils.deformWholeImage", "torch.zeros_like", "Utils.deformWholeImage().detach", "Utils.deformWholeImage"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.LossFunctions.LossFunctions.update", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.NetOptimizer.NetOptimizer.normalizeWeights", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.deformWholeImage", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.NetOptimizer.NetOptimizer.getCycleImageData", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.LossFunctions.LossFunctions.cycleLoss", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.DefFieldHandler.combineDeformationFields", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.LossFunctions.LossFunctions.smoothBoundary", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.LossFunctions.LossFunctions.smoothnessVecField", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.LossFunctions.LossFunctions.normCrossCorr", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.deformWholeImage", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.LossFunctions.LossFunctions.normCrossCorr2Images", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.LossFunctions.LossFunctions.multiLabelDiceLoss", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.deformWholeImage", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.deformWholeImage"], ["", "def", "optimizeNet", "(", "self", ",", "imgDataToWork", ",", "lossCalculator", ",", "labelToWork", ",", "lastVecField", "=", "None", ",", "currVecFields", "=", "None", ",", "idx", "=", "None", ",", "itIdx", "=", "0", ",", "printLoss", "=", "False", ")", ":", "\n", "# zero the parameter gradients", "\n", "    ", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "vecFields", "=", "self", ".", "net", "(", "imgDataToWork", ")", "\n", "if", "self", ".", "userOpts", ".", "diffeomorphicRegistration", "and", "self", ".", "smoother", "is", "not", "None", ":", "\n", "      ", "vecFields", "=", "self", ".", "smoother", "(", "vecFields", ")", "\n", "\n", "", "cropStart0", "=", "int", "(", "(", "imgDataToWork", ".", "shape", "[", "2", "]", "-", "vecFields", ".", "shape", "[", "2", "]", ")", "/", "2", ")", "\n", "cropStart1", "=", "int", "(", "(", "imgDataToWork", ".", "shape", "[", "3", "]", "-", "vecFields", ".", "shape", "[", "3", "]", ")", "/", "2", ")", "\n", "cropStart2", "=", "int", "(", "(", "imgDataToWork", ".", "shape", "[", "4", "]", "-", "vecFields", ".", "shape", "[", "4", "]", ")", "/", "2", ")", "\n", "\n", "\n", "\n", "if", "self", ".", "userOpts", ".", "addVectorFields", ":", "\n", "      ", "addedField", "=", "lastVecField", "[", ":", ",", ":", ",", "idx", "[", "0", "]", "+", "cropStart0", ":", "idx", "[", "0", "]", "+", "cropStart0", "+", "vecFields", ".", "shape", "[", "2", "]", ",", "\n", "idx", "[", "1", "]", "+", "cropStart1", ":", "idx", "[", "1", "]", "+", "cropStart1", "+", "vecFields", ".", "shape", "[", "3", "]", ",", "\n", "idx", "[", "2", "]", "+", "cropStart2", ":", "idx", "[", "2", "]", "+", "cropStart2", "+", "vecFields", ".", "shape", "[", "4", "]", "]", "+", "vecFields", "\n", "", "else", ":", "\n", "      ", "tmpField", "=", "torch", ".", "zeros_like", "(", "lastVecField", ")", "\n", "tmpField", "[", ":", ",", ":", ",", "idx", "[", "0", "]", "+", "cropStart0", ":", "idx", "[", "0", "]", "+", "cropStart0", "+", "vecFields", ".", "shape", "[", "2", "]", ",", "\n", "idx", "[", "1", "]", "+", "cropStart1", ":", "idx", "[", "1", "]", "+", "cropStart1", "+", "vecFields", ".", "shape", "[", "3", "]", ",", "\n", "idx", "[", "2", "]", "+", "cropStart2", ":", "idx", "[", "2", "]", "+", "cropStart2", "+", "vecFields", ".", "shape", "[", "4", "]", "]", "=", "tmpField", "[", ":", ",", ":", ",", "idx", "[", "0", "]", "+", "cropStart0", ":", "idx", "[", "0", "]", "+", "cropStart0", "+", "vecFields", ".", "shape", "[", "2", "]", ",", "\n", "idx", "[", "1", "]", "+", "cropStart1", ":", "idx", "[", "1", "]", "+", "cropStart1", "+", "vecFields", ".", "shape", "[", "3", "]", ",", "\n", "idx", "[", "2", "]", "+", "cropStart2", ":", "idx", "[", "2", "]", "+", "cropStart2", "+", "vecFields", ".", "shape", "[", "4", "]", "]", "+", "vecFields", "\n", "tmpField", "=", "Utils", ".", "combineDeformationFields", "(", "tmpField", ",", "lastVecField", ")", "\n", "addedField", "=", "tmpField", "[", ":", ",", ":", ",", "idx", "[", "0", "]", "+", "cropStart0", ":", "idx", "[", "0", "]", "+", "cropStart0", "+", "vecFields", ".", "shape", "[", "2", "]", ",", "\n", "idx", "[", "1", "]", "+", "cropStart1", ":", "idx", "[", "1", "]", "+", "cropStart1", "+", "vecFields", ".", "shape", "[", "3", "]", ",", "\n", "idx", "[", "2", "]", "+", "cropStart2", ":", "idx", "[", "2", "]", "+", "cropStart2", "+", "vecFields", ".", "shape", "[", "4", "]", "]", "\n", "\n", "\n", "", "currVecFields", "[", ":", ",", ":", ",", "idx", "[", "0", "]", "+", "cropStart0", ":", "idx", "[", "0", "]", "+", "cropStart0", "+", "vecFields", ".", "shape", "[", "2", "]", ",", "\n", "idx", "[", "1", "]", "+", "cropStart1", ":", "idx", "[", "1", "]", "+", "cropStart1", "+", "vecFields", ".", "shape", "[", "3", "]", ",", "\n", "idx", "[", "2", "]", "+", "cropStart2", ":", "idx", "[", "2", "]", "+", "cropStart2", "+", "vecFields", ".", "shape", "[", "4", "]", "]", "=", "addedField", ".", "detach", "(", ")", "\n", "\n", "imgDataToWork", "=", "imgDataToWork", "[", ":", ",", ":", ",", "cropStart0", ":", "cropStart0", "+", "vecFields", ".", "shape", "[", "2", "]", ",", "cropStart1", ":", "cropStart1", "+", "vecFields", ".", "shape", "[", "3", "]", ",", "cropStart2", ":", "cropStart2", "+", "vecFields", ".", "shape", "[", "4", "]", "]", "\n", "\n", "lossCalculator", ".", "update", "(", "imgDataToWork", ",", "addedField", ",", "currVecFields", ")", "\n", "\n", "smoothNessWeight", "=", "self", ".", "userOpts", ".", "smoothW", "[", "itIdx", "]", "\n", "crossCorrWeight", "=", "self", ".", "userOpts", ".", "ccW", "\n", "cyclicWeight", "=", "self", ".", "userOpts", ".", "cycleW", "\n", "dscWeight", "=", "self", ".", "userOpts", ".", "dscWeight", "\n", "crossCorrWeight", ",", "smoothNessWeight", ",", "cyclicWeight", ",", "dscWeight", "=", "self", ".", "normalizeWeights", "(", "crossCorrWeight", ",", "smoothNessWeight", ",", "cyclicWeight", ",", "dscWeight", ")", "\n", "\n", "boundaryLoss", "=", "torch", ".", "tensor", "(", "0.0", ",", "device", "=", "self", ".", "userOpts", ".", "device", ")", "\n", "if", "self", ".", "userOpts", ".", "boundarySmoothnessW", "[", "itIdx", "]", ">", "0.0", ":", "\n", "      ", "boundaryLoss", "=", "lossCalculator", ".", "smoothBoundary", "(", "idx", ",", "self", ".", "userOpts", ".", "device", ",", "addedField", ")", "\n", "\n", "", "smoothnessLoss", "=", "torch", ".", "tensor", "(", "0.0", ",", "device", "=", "self", ".", "userOpts", ".", "device", ")", "\n", "if", "self", ".", "userOpts", ".", "smoothVF", ":", "\n", "      ", "smoothnessLoss", "=", "lossCalculator", ".", "smoothnessVecField", "(", "self", ".", "userOpts", ".", "device", ")", "\n", "\n", "", "smoothnessDF", "=", "smoothnessLoss", "+", "boundaryLoss", "*", "self", ".", "userOpts", ".", "boundarySmoothnessW", "[", "itIdx", "]", "\n", "\n", "if", "self", ".", "userOpts", ".", "diffeomorphicRegistration", ":", "\n", "      ", "deformationField", "=", "self", ".", "scalingSquaring", "(", "addedField", ")", "\n", "", "else", ":", "\n", "      ", "deformationField", "=", "addedField", "\n", "\n", "", "imgDataDef", "=", "Utils", ".", "deformWholeImage", "(", "imgDataToWork", ",", "deformationField", ")", "\n", "cycleImgData", ",", "outOfBoundsTensor", "=", "self", ".", "getCycleImageData", "(", "deformationField", ")", "\n", "\n", "\n", "if", "self", ".", "userOpts", ".", "valueToIgnore", "is", "not", "None", ":", "\n", "      ", "contextSet", "=", "False", "\n", "if", "self", ".", "userOpts", ".", "useContext", ":", "\n", "        ", "self", ".", "userOpts", ".", "useContext", "=", "False", "\n", "contextSet", "=", "True", "\n", "", "idxArray", "=", "torch", ".", "zeros_like", "(", "imgDataToWork", ")", "\n", "idxArray", "[", "imgDataToWork", "==", "self", ".", "userOpts", ".", "valueToIgnore", "]", "=", "1.0", "\n", "idxArray", "=", "Utils", ".", "deformWholeImage", "(", "idxArray", ",", "deformationField", ")", ".", "detach", "(", ")", "\n", "imgDataDef", "[", "idxArray", ">", "0.0", "]", "=", "self", ".", "userOpts", ".", "valueToIgnore", "\n", "if", "contextSet", ":", "\n", "        ", "self", ".", "userOpts", ".", "useContext", "=", "True", "\n", "\n", "", "", "crossCorr", "=", "torch", ".", "tensor", "(", "0.0", ",", "device", "=", "self", ".", "userOpts", ".", "device", ")", "\n", "if", "crossCorrWeight", ">", "0.0", ":", "\n", "      ", "crossCorr", "=", "lossCalculator", ".", "normCrossCorr", "(", "imgDataDef", ",", "self", ".", "userOpts", ".", "device", ",", "self", ".", "userOpts", ".", "valueToIgnore", ")", "\n", "", "cycleLoss", "=", "lossCalculator", ".", "cycleLoss", "(", "cycleImgData", ",", "outOfBoundsTensor", ",", "self", ".", "userOpts", ".", "device", ")", "\n", "\n", "diceLoss", "=", "torch", ".", "tensor", "(", "0.0", ",", "device", "=", "self", ".", "userOpts", ".", "device", ")", "\n", "if", "labelToWork", "is", "not", "None", "and", "dscWeight", ">", "0.0", ":", "\n", "      ", "sublabelToWork", "=", "labelToWork", "[", ":", ",", ":", ",", "cropStart0", ":", "cropStart0", "+", "vecFields", ".", "shape", "[", "2", "]", ",", "cropStart1", ":", "cropStart1", "+", "vecFields", ".", "shape", "[", "3", "]", ",", "cropStart2", ":", "cropStart2", "+", "vecFields", ".", "shape", "[", "4", "]", "]", "\n", "if", "self", ".", "userOpts", ".", "handleStructsAsImages", ":", "\n", "        ", "contextSet", "=", "False", "\n", "if", "self", ".", "userOpts", ".", "useContext", ":", "\n", "          ", "self", ".", "userOpts", ".", "useContext", "=", "False", "\n", "contextSet", "=", "True", "\n", "", "sublabelToWorkDeformed", "=", "Utils", ".", "deformWholeImage", "(", "sublabelToWork", ",", "deformationField", ",", "imgIdx", "=", "-", "1", ")", "\n", "if", "self", ".", "userOpts", ".", "valueToIgnore", "is", "not", "None", ":", "\n", "          ", "idxArray", "=", "torch", ".", "zeros_like", "(", "sublabelToWork", ")", "\n", "idxArray", "[", "sublabelToWork", "==", "self", ".", "userOpts", ".", "valueToIgnore", "]", "=", "1.0", "\n", "idxArray", "=", "Utils", ".", "deformWholeImage", "(", "idxArray", ",", "deformationField", ")", ".", "detach", "(", ")", "\n", "sublabelToWorkDeformed", "[", "idxArray", ">", "0.0", "]", "=", "self", ".", "userOpts", ".", "valueToIgnore", "\n", "", "diceLoss", "=", "lossCalculator", ".", "normCrossCorr2Images", "(", "sublabelToWork", ",", "sublabelToWorkDeformed", ",", "self", ".", "userOpts", ".", "device", ",", "self", ".", "userOpts", ".", "valueToIgnore", ")", "\n", "if", "contextSet", ":", "\n", "          ", "self", ".", "userOpts", ".", "useContext", "=", "True", "\n", "", "", "else", ":", "\n", "        ", "diceLoss", "=", "lossCalculator", ".", "multiLabelDiceLoss", "(", "sublabelToWork", ",", "deformationField", ",", "True", ",", "self", ".", "userOpts", ".", "valueToIgnore", ")", "\n", "\n", "#     vecLengthLoss = lossCalculator.vecLength(deformationField)", "\n", "\n", "", "", "loss", "=", "crossCorrWeight", "*", "crossCorr", "+", "dscWeight", "*", "diceLoss", "+", "smoothNessWeight", "*", "smoothnessDF", "+", "self", ".", "userOpts", ".", "cycleW", "*", "cycleLoss", "\n", "if", "printLoss", ":", "\n", "      ", "print", "(", "'%.5f; %.5f; %5f; %5f; %.5f'", "%", "(", "loss", ",", "crossCorr", ",", "smoothnessDF", ",", "cycleLoss", ",", "diceLoss", ")", ")", "\n", "", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "#     print(torch.cuda.memory_allocated() / 1048576.0) ", "\n", "\n", "loss", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "return", "[", "loss", ",", "crossCorr", ",", "diceLoss", ",", "smoothnessDF", ",", "cycleLoss", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.deform": [[10, 28], ["SimpleITK.GetImageFromArray", "numpy.stack", "numpy.moveaxis", "SimpleITK.GetImageFromArray", "SimpleITK.DisplacementFieldTransform", "SimpleITK.ResampleImageFilter", "sitk.ResampleImageFilter.SetReferenceImage", "sitk.ResampleImageFilter.SetInterpolator", "sitk.ResampleImageFilter.SetDefaultPixelValue", "sitk.ResampleImageFilter.SetTransform", "sitk.ResampleImageFilter.Execute", "SimpleITK.GetArrayFromImage", "np.moveaxis.astype"], "function", ["None"], ["def", "deform", "(", "inputVol", ",", "x1", ",", "y1", ",", "z1", ")", ":", "\n", "##http://simpleitk.github.io/SimpleITK-Notebooks/01_Image_Basics.html", "\n", "  ", "imgToDeform", "=", "sitk", ".", "GetImageFromArray", "(", "inputVol", ")", "\n", "defField", "=", "np", ".", "stack", "(", "[", "x1", ",", "y1", ",", "z1", "]", ")", "\n", "defField", "=", "np", ".", "moveaxis", "(", "defField", ",", "0", ",", "-", "1", ")", "\n", "itkVecImg", "=", "sitk", ".", "GetImageFromArray", "(", "defField", ".", "astype", "(", "'f8'", ")", ")", "\n", "displacement", "=", "sitk", ".", "DisplacementFieldTransform", "(", "itkVecImg", ")", "\n", "\n", "resampler", "=", "sitk", ".", "ResampleImageFilter", "(", ")", "\n", "resampler", ".", "SetReferenceImage", "(", "imgToDeform", ")", "\n", "resampler", ".", "SetInterpolator", "(", "sitk", ".", "sitkLinear", ")", "\n", "resampler", ".", "SetDefaultPixelValue", "(", "0", ")", "\n", "resampler", ".", "SetTransform", "(", "displacement", ")", "\n", "moving", "=", "resampler", ".", "Execute", "(", "imgToDeform", ")", "\n", "\n", "deformedVol", "=", "sitk", ".", "GetArrayFromImage", "(", "moving", ")", "\n", "\n", "return", "deformedVol", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getDefField": [[29, 33], ["numpy.stack", "numpy.moveaxis"], "function", ["None"], ["", "def", "getDefField", "(", "x1", ",", "y1", ",", "z1", ")", ":", "\n", "  ", "defField", "=", "np", ".", "stack", "(", "[", "x1", ",", "y1", ",", "z1", "]", ")", "\n", "defField", "=", "np", ".", "moveaxis", "(", "defField", ",", "0", ",", "-", "1", ")", "\n", "return", "defField", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getZeroDefField": [[35, 48], ["numpy.linspace", "numpy.linspace", "numpy.linspace", "numpy.meshgrid", "numpy.stack", "numpy.expand_dims", "numpy.tile", "torch.from_numpy", "torch.from_numpy.to"], "function", ["None"], ["", "def", "getZeroDefField", "(", "imagShape", ",", "device", ")", ":", "\n", "  ", "if", "(", "Context", ".", "zeroDefField", "is", "None", ")", "or", "(", "imagShape", "[", "2", ":", "]", "!=", "Context", ".", "zeroDefField", ".", "shape", ")", ":", "\n", "    ", "m0", "=", "np", ".", "linspace", "(", "-", "1", ",", "1", ",", "imagShape", "[", "2", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "m1", "=", "np", ".", "linspace", "(", "-", "1", ",", "1", ",", "imagShape", "[", "3", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "m2", "=", "np", ".", "linspace", "(", "-", "1", ",", "1", ",", "imagShape", "[", "4", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "grid0", ",", "grid1", ",", "grid2", "=", "np", ".", "meshgrid", "(", "m0", ",", "m1", ",", "m2", ",", "indexing", "=", "'ij'", ")", "\n", "defField", "=", "np", ".", "stack", "(", "[", "grid2", ",", "grid1", ",", "grid0", "]", ",", "axis", "=", "3", ")", "\n", "defField", "=", "np", ".", "expand_dims", "(", "defField", ",", "axis", "=", "0", ")", "\n", "defField", "=", "np", ".", "tile", "(", "defField", ",", "(", "imagShape", "[", "0", "]", ",", "1", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "defField", "=", "torch", ".", "from_numpy", "(", "defField", ")", "\n", "Context", ".", "zeroDefField", "=", "defField", ".", "to", "(", "device", ")", "\n", "\n", "", "return", "Context", ".", "zeroDefField", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getZeroIdxFieldImg": [[50, 63], ["torch.from_numpy", "zeroIndices[].long().to", "zeroIndices[].long().to", "zeroIndices[].to", "zeroIndices[].to", "zeroIndices[].to", "zeroIndices[].long().to.clone().to", "zeroIndices[].long().to.clone().to", "zeroIndices[].to.clone().to", "zeroIndices[].to.clone().to", "zeroIndices[].to.clone().to", "numpy.indices", "zeroIndices[].long", "zeroIndices[].long", "zeroIndices[].long().to.clone", "zeroIndices[].long().to.clone", "zeroIndices[].to.clone", "zeroIndices[].to.clone", "zeroIndices[].to.clone"], "function", ["None"], ["", "def", "getZeroIdxFieldImg", "(", "imagShape", ",", "device", ")", ":", "\n", "  ", "if", "(", "Context", ".", "zeroIndicesImg", "is", "None", ")", "or", "(", "imagShape", "[", "2", ":", "]", "!=", "Context", ".", "zeroIndicesImg", "[", "0", "]", ".", "shape", "[", "2", ":", "]", ")", ":", "\n", "    ", "zeroIndices", "=", "torch", ".", "from_numpy", "(", "np", ".", "indices", "(", "[", "imagShape", "[", "0", "]", ",", "imagShape", "[", "1", "]", ",", "imagShape", "[", "2", "]", ",", "imagShape", "[", "3", "]", ",", "imagShape", "[", "4", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", ")", "\n", "idxs0", "=", "zeroIndices", "[", "0", "]", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "idxs1", "=", "zeroIndices", "[", "1", "]", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "idxs2", "=", "zeroIndices", "[", "2", "]", ".", "to", "(", "device", ")", "\n", "idxs3", "=", "zeroIndices", "[", "3", "]", ".", "to", "(", "device", ")", "\n", "idxs4", "=", "zeroIndices", "[", "4", "]", ".", "to", "(", "device", ")", "\n", "if", "not", "useropts", ".", "useContext", ":", "\n", "      ", "return", "[", "idxs0", ",", "idxs1", ",", "idxs2", ",", "idxs3", ",", "idxs4", "]", "\n", "", "Context", ".", "zeroIndicesImg", "=", "[", "idxs0", ",", "idxs1", ",", "idxs2", ",", "idxs3", ",", "idxs4", "]", "\n", "", "[", "idxs0", ",", "idxs1", ",", "idxs2", ",", "idxs3", ",", "idxs4", "]", "=", "Context", ".", "zeroIndicesImg", "\n", "return", "[", "idxs0", ".", "clone", "(", ")", ".", "to", "(", "device", ")", ",", "idxs1", ".", "clone", "(", ")", ".", "to", "(", "device", ")", ",", "idxs2", ".", "clone", "(", ")", ".", "to", "(", "device", ")", ",", "idxs3", ".", "clone", "(", ")", ".", "to", "(", "device", ")", ",", "idxs4", ".", "clone", "(", ")", ".", "to", "(", "device", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getZeroIdxField": [[65, 79], ["torch.from_numpy", "zeroIndices[].long().to", "zeroIndices[].long().to", "zeroIndices[].to", "zeroIndices[].to", "zeroIndices[].to", "zeroIndices[].long().to.clone", "zeroIndices[].long().to.clone", "zeroIndices[].to.clone", "zeroIndices[].to.clone", "zeroIndices[].to.clone", "numpy.indices", "zeroIndices[].long", "zeroIndices[].long"], "function", ["None"], ["", "def", "getZeroIdxField", "(", "imagShape", ",", "device", ")", ":", "\n", "  ", "if", "(", "Context", ".", "zeroIndices", "is", "None", ")", "or", "(", "imagShape", "[", "2", ":", "]", "!=", "Context", ".", "zeroIndices", "[", "0", "]", ".", "shape", "[", "2", ":", "]", ")", ":", "\n", "    ", "zeroIndices", "=", "torch", ".", "from_numpy", "(", "np", ".", "indices", "(", "[", "imagShape", "[", "0", "]", ",", "3", ",", "imagShape", "[", "2", "]", ",", "imagShape", "[", "3", "]", ",", "imagShape", "[", "4", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", ")", "\n", "zeroIndices", "[", "1", "]", "-=", "3.0", "\n", "idxs0", "=", "zeroIndices", "[", "0", "]", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "idxs1", "=", "zeroIndices", "[", "1", "]", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "idxs2", "=", "zeroIndices", "[", "2", "]", ".", "to", "(", "device", ")", "\n", "idxs3", "=", "zeroIndices", "[", "3", "]", ".", "to", "(", "device", ")", "\n", "idxs4", "=", "zeroIndices", "[", "4", "]", ".", "to", "(", "device", ")", "\n", "if", "not", "useropts", ".", "useContext", ":", "\n", "      ", "return", "[", "idxs0", ",", "idxs1", ",", "idxs2", ",", "idxs3", ",", "idxs4", "]", "\n", "", "Context", ".", "zeroIndices", "=", "[", "idxs0", ",", "idxs1", ",", "idxs2", ",", "idxs3", ",", "idxs4", "]", "\n", "", "[", "idxs0", ",", "idxs1", ",", "idxs2", ",", "idxs3", ",", "idxs4", "]", "=", "Context", ".", "zeroIndices", "\n", "return", "[", "idxs0", ".", "clone", "(", ")", ",", "idxs1", ".", "clone", "(", ")", ",", "idxs2", ".", "clone", "(", ")", ",", "idxs3", ".", "clone", "(", ")", ",", "idxs4", ".", "clone", "(", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getImgDataDef": [[80, 90], ["torch.empty", "torch.empty", "Context.imgDataDef[].detach_"], "function", ["None"], ["", "def", "getImgDataDef", "(", "imagShape", ",", "device", ",", "dataType", "=", "torch", ".", "float32", ",", "imgIdx", "=", "0", ")", ":", "\n", "  ", "if", "useropts", ".", "useContext", "and", "imgIdx", ">", "-", "1", ":", "\n", "    ", "if", "(", "imgIdx", "not", "in", "Context", ".", "imgDataDef", ")", "or", "(", "imagShape", "!=", "Context", ".", "imgDataDef", "[", "imgIdx", "]", ".", "shape", ")", "or", "Context", ".", "imgDataDef", "[", "imgIdx", "]", ".", "dtype", "!=", "dataType", ":", "\n", "      ", "imgDataDef", "=", "torch", ".", "empty", "(", "imagShape", ",", "device", "=", "device", ",", "dtype", "=", "dataType", ",", "requires_grad", "=", "False", ")", "\n", "Context", ".", "imgDataDef", "[", "imgIdx", "]", "=", "imgDataDef", "\n", "", "else", ":", "\n", "      ", "Context", ".", "imgDataDef", "[", "imgIdx", "]", ".", "detach_", "(", ")", "\n", "", "return", "Context", ".", "imgDataDef", "[", "imgIdx", "]", "\n", "", "else", ":", "\n", "    ", "return", "torch", ".", "empty", "(", "imagShape", ",", "device", "=", "device", ",", "dtype", "=", "dataType", ",", "requires_grad", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getImgDataDef2": [[91, 101], ["torch.empty", "torch.empty", "Context.imgDataDef2.detach_"], "function", ["None"], ["", "", "def", "getImgDataDef2", "(", "imagShape", ",", "device", ")", ":", "\n", "  ", "if", "useropts", ".", "useContext", ":", "\n", "    ", "if", "(", "Context", ".", "imgDataDef2", "is", "None", ")", "or", "(", "Context", ".", "imgDataDef2", "is", "None", ")", "or", "(", "imagShape", "!=", "Context", ".", "imgDataDef2", ".", "shape", ")", ":", "\n", "      ", "imgDataDef2", "=", "torch", ".", "empty", "(", "imagShape", ",", "device", "=", "device", ",", "requires_grad", "=", "False", ")", "\n", "Context", ".", "imgDataDef2", "=", "imgDataDef2", "\n", "", "else", ":", "\n", "      ", "Context", ".", "imgDataDef2", ".", "detach_", "(", ")", "\n", "", "return", "Context", ".", "imgDataDef2", "\n", "", "else", ":", "\n", "    ", "return", "torch", ".", "empty", "(", "imagShape", ",", "device", "=", "device", ",", "requires_grad", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getCycleImgData": [[102, 111], ["torch.empty", "torch.empty", "Context.cycleImgData.detach_"], "function", ["None"], ["", "", "def", "getCycleImgData", "(", "defFieldShape", ",", "device", ")", ":", "\n", "  ", "if", "useropts", ".", "useContext", ":", "\n", "    ", "if", "(", "Context", ".", "cycleImgData", "is", "None", ")", "or", "(", "defFieldShape", "!=", "Context", ".", "cycleImgData", ".", "shape", ")", ":", "\n", "      ", "Context", ".", "cycleImgData", "=", "torch", ".", "empty", "(", "defFieldShape", ",", "device", "=", "device", ")", "\n", "", "else", ":", "\n", "      ", "Context", ".", "cycleImgData", ".", "detach_", "(", ")", "\n", "", "return", "Context", ".", "cycleImgData", "\n", "", "else", ":", "\n", "    ", "return", "torch", ".", "empty", "(", "defFieldShape", ",", "device", "=", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getLoss10": [[112, 121], ["torch.zeros", "torch.zeros", "Context.loss10.detach_"], "function", ["None"], ["", "", "def", "getLoss10", "(", "vecFieldShape", ",", "device", ")", ":", "\n", "  ", "if", "useropts", ".", "useContext", ":", "\n", "    ", "if", "(", "Context", ".", "loss10", "is", "None", ")", "or", "(", "vecFieldShape", "!=", "Context", ".", "loss10", ".", "shape", ")", ":", "\n", "      ", "Context", ".", "loss10", "=", "torch", ".", "zeros", "(", "vecFieldShape", ",", "device", "=", "device", ",", "requires_grad", "=", "False", ")", "\n", "", "else", ":", "\n", "      ", "Context", ".", "loss10", ".", "detach_", "(", ")", "\n", "", "return", "Context", ".", "loss10", "\n", "", "else", ":", "\n", "    ", "return", "torch", ".", "zeros", "(", "vecFieldShape", ",", "device", "=", "device", ",", "requires_grad", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getLoss11": [[122, 131], ["torch.zeros", "torch.zeros", "Context.loss11.detach_"], "function", ["None"], ["", "", "def", "getLoss11", "(", "vecFieldShape", ",", "device", ")", ":", "\n", "  ", "if", "useropts", ".", "useContext", ":", "\n", "    ", "if", "(", "Context", ".", "loss11", "is", "None", ")", "or", "(", "vecFieldShape", "!=", "Context", ".", "loss11", ".", "shape", ")", ":", "\n", "      ", "Context", ".", "loss11", "=", "torch", ".", "zeros", "(", "vecFieldShape", ",", "device", "=", "device", ",", "requires_grad", "=", "False", ")", "\n", "", "else", ":", "\n", "      ", "Context", ".", "loss11", ".", "detach_", "(", ")", "\n", "", "return", "Context", ".", "loss11", "\n", "", "else", ":", "\n", "    ", "return", "torch", ".", "zeros", "(", "vecFieldShape", ",", "device", "=", "device", ",", "requires_grad", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getLoss20": [[132, 141], ["torch.zeros", "torch.zeros", "Context.loss20.detach_"], "function", ["None"], ["", "", "def", "getLoss20", "(", "vecFieldShape", ",", "device", ")", ":", "\n", "  ", "if", "useropts", ".", "useContext", ":", "\n", "    ", "if", "(", "Context", ".", "loss20", "is", "None", ")", "or", "(", "vecFieldShape", "!=", "Context", ".", "loss20", ".", "shape", ")", ":", "\n", "      ", "Context", ".", "loss20", "=", "torch", ".", "zeros", "(", "vecFieldShape", ",", "device", "=", "device", ",", "requires_grad", "=", "False", ")", "\n", "", "else", ":", "\n", "      ", "Context", ".", "loss20", ".", "detach_", "(", ")", "\n", "", "return", "Context", ".", "loss20", "\n", "", "else", ":", "\n", "    ", "return", "torch", ".", "zeros", "(", "vecFieldShape", ",", "device", "=", "device", ",", "requires_grad", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getLoss21": [[142, 151], ["torch.zeros", "torch.zeros", "Context.loss21.detach_"], "function", ["None"], ["", "", "def", "getLoss21", "(", "vecFieldShape", ",", "device", ")", ":", "\n", "  ", "if", "useropts", ".", "useContext", ":", "\n", "    ", "if", "(", "Context", ".", "loss21", "is", "None", ")", "or", "(", "vecFieldShape", "!=", "Context", ".", "loss21", ".", "shape", ")", ":", "\n", "      ", "Context", ".", "loss21", "=", "torch", ".", "zeros", "(", "vecFieldShape", ",", "device", "=", "device", ",", "requires_grad", "=", "False", ")", "\n", "", "else", ":", "\n", "      ", "Context", ".", "loss21", ".", "detach_", "(", ")", "\n", "", "return", "Context", ".", "loss21", "\n", "", "else", ":", "\n", "    ", "return", "torch", ".", "zeros", "(", "vecFieldShape", ",", "device", "=", "device", ",", "requires_grad", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getLoss30": [[152, 161], ["torch.zeros", "torch.zeros", "Context.loss30.detach_"], "function", ["None"], ["", "", "def", "getLoss30", "(", "vecFieldShape", ",", "device", ")", ":", "\n", "  ", "if", "useropts", ".", "useContext", ":", "\n", "    ", "if", "(", "Context", ".", "loss30", "is", "None", ")", "or", "(", "vecFieldShape", "!=", "Context", ".", "loss30", ".", "shape", ")", ":", "\n", "      ", "Context", ".", "loss30", "=", "torch", ".", "zeros", "(", "vecFieldShape", ",", "device", "=", "device", ",", "requires_grad", "=", "False", ")", "\n", "", "else", ":", "\n", "      ", "Context", ".", "loss30", ".", "detach_", "(", ")", "\n", "", "return", "Context", ".", "loss30", "\n", "", "else", ":", "\n", "    ", "return", "torch", ".", "zeros", "(", "vecFieldShape", ",", "device", "=", "device", ",", "requires_grad", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getLoss31": [[162, 171], ["torch.zeros", "torch.zeros", "Context.loss31.detach_"], "function", ["None"], ["", "", "def", "getLoss31", "(", "vecFieldShape", ",", "device", ")", ":", "\n", "  ", "if", "useropts", ".", "useContext", ":", "\n", "    ", "if", "(", "Context", ".", "loss31", "is", "None", ")", "or", "(", "vecFieldShape", "!=", "Context", ".", "loss31", ".", "shape", ")", ":", "\n", "      ", "Context", ".", "loss31", "=", "torch", ".", "zeros", "(", "vecFieldShape", ",", "device", "=", "device", ",", "requires_grad", "=", "False", ")", "\n", "", "else", ":", "\n", "      ", "Context", ".", "loss31", ".", "detach_", "(", ")", "\n", "", "return", "Context", ".", "loss31", "\n", "", "else", ":", "\n", "    ", "return", "torch", ".", "zeros", "(", "vecFieldShape", ",", "device", "=", "device", ",", "requires_grad", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.smoothArray3D": [[172, 180], ["GaussSmoothing.GaussianSmoothing", "int", "range", "torch.nn.functional.pad", "GaussSmoothing.GaussianSmoothing."], "function", ["None"], ["", "", "def", "smoothArray3D", "(", "inputArray", ",", "nrOfFilters", "=", "2", ",", "variance", "=", "2", ",", "kernelSize", "=", "5", ")", ":", "\n", "    ", "smoothing", "=", "GaussianSmoothing", "(", "1", ",", "kernelSize", ",", "variance", ",", "3", ")", "\n", "padVal", "=", "int", "(", "kernelSize", "/", "2", ")", "\n", "subInputArray", "=", "inputArray", "[", "None", ",", "None", ",", "]", "\n", "for", "_", "in", "range", "(", "0", ",", "nrOfFilters", ")", ":", "\n", "      ", "subInputArray", "=", "torch", ".", "nn", ".", "functional", ".", "pad", "(", "subInputArray", ",", "(", "padVal", ",", "padVal", ",", "padVal", ",", "padVal", ",", "padVal", ",", "padVal", ")", ")", "\n", "subInputArray", "=", "smoothing", "(", "subInputArray", ")", "\n", "", "return", "subInputArray", "[", "0", ",", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getMaxIdxs": [[181, 186], ["Utils.getMaxIdxsTuple", "Utils.getMaxIdxsScalar", "type", "type"], "function", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getMaxIdxsTuple", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getMaxIdxsScalar"], ["", "def", "getMaxIdxs", "(", "imgShape", ",", "imgPatchSize", ")", ":", "\n", "  ", "if", "type", "(", "imgPatchSize", ")", "is", "list", "or", "type", "(", "imgPatchSize", ")", "is", "tuple", ":", "\n", "    ", "return", "getMaxIdxsTuple", "(", "imgShape", ",", "imgPatchSize", ")", "\n", "", "else", ":", "\n", "    ", "return", "getMaxIdxsScalar", "(", "imgShape", ",", "imgPatchSize", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getMaxIdxsScalar": [[187, 203], ["None"], "function", ["None"], ["", "", "def", "getMaxIdxsScalar", "(", "imgShape", ",", "imgPatchSize", ")", ":", "\n", "  ", "if", "imgShape", "[", "2", "]", "-", "imgPatchSize", ">", "0", ":", "\n", "    ", "maxidx0", "=", "imgShape", "[", "2", "]", "-", "imgPatchSize", "+", "1", "\n", "", "else", ":", "\n", "    ", "maxidx0", "=", "1", "\n", "\n", "", "if", "imgShape", "[", "3", "]", "-", "imgPatchSize", ">", "0", ":", "\n", "    ", "maxidx1", "=", "imgShape", "[", "3", "]", "-", "imgPatchSize", "+", "1", "\n", "", "else", ":", "\n", "    ", "maxidx1", "=", "1", "\n", "\n", "", "if", "imgShape", "[", "4", "]", "-", "imgPatchSize", ">", "0", ":", "\n", "    ", "maxidx2", "=", "imgShape", "[", "4", "]", "-", "imgPatchSize", "+", "1", "\n", "", "else", ":", "\n", "    ", "maxidx2", "=", "1", "\n", "", "return", "(", "maxidx0", ",", "maxidx1", ",", "maxidx2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getMaxIdxsTuple": [[204, 220], ["None"], "function", ["None"], ["", "def", "getMaxIdxsTuple", "(", "imgShape", ",", "imgPatchSizes", ")", ":", "\n", "  ", "if", "imgShape", "[", "2", "]", "-", "imgPatchSizes", "[", "0", "]", ">", "0", ":", "\n", "    ", "maxidx0", "=", "imgShape", "[", "2", "]", "-", "imgPatchSizes", "[", "0", "]", "+", "1", "\n", "", "else", ":", "\n", "    ", "maxidx0", "=", "1", "\n", "\n", "", "if", "imgShape", "[", "3", "]", "-", "imgPatchSizes", "[", "1", "]", ">", "0", ":", "\n", "    ", "maxidx1", "=", "imgShape", "[", "3", "]", "-", "imgPatchSizes", "[", "1", "]", "+", "1", "\n", "", "else", ":", "\n", "    ", "maxidx1", "=", "1", "\n", "\n", "", "if", "imgShape", "[", "4", "]", "-", "imgPatchSizes", "[", "2", "]", ">", "0", ":", "\n", "    ", "maxidx2", "=", "imgShape", "[", "4", "]", "-", "imgPatchSizes", "[", "2", "]", "+", "1", "\n", "", "else", ":", "\n", "    ", "maxidx2", "=", "1", "\n", "", "return", "(", "maxidx0", ",", "maxidx1", ",", "maxidx2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getPatchSize": [[221, 238], ["None"], "function", ["None"], ["", "def", "getPatchSize", "(", "imgShape", ",", "imgPatchSize", ")", ":", "\n", "  ", "if", "imgShape", "[", "2", "]", "-", "imgPatchSize", ">", "0", ":", "\n", "    ", "patchSize0", "=", "imgPatchSize", "\n", "", "else", ":", "\n", "    ", "patchSize0", "=", "imgShape", "[", "2", "]", "\n", "\n", "", "if", "imgShape", "[", "3", "]", "-", "imgPatchSize", ">", "0", ":", "\n", "    ", "patchSize1", "=", "imgPatchSize", "\n", "", "else", ":", "\n", "    ", "patchSize1", "=", "imgShape", "[", "3", "]", "\n", "\n", "", "if", "imgShape", "[", "4", "]", "-", "imgPatchSize", ">", "0", ":", "\n", "    ", "patchSize2", "=", "imgPatchSize", "\n", "", "else", ":", "\n", "    ", "patchSize2", "=", "imgShape", "[", "4", "]", "\n", "\n", "", "return", "[", "patchSize0", ",", "patchSize1", ",", "patchSize2", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.deformWithNearestNeighborInterpolation": [[239, 263], ["Utils.getZeroIdxFieldImg", "zeroIdxField[].round().long", "zeroIdxField[].round().long", "zeroIdxField[].round().long", "deformed[].detach", "zeroIdxField[].round", "zeroIdxField[].round", "zeroIdxField[].round"], "function", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getZeroIdxFieldImg"], ["", "def", "deformWithNearestNeighborInterpolation", "(", "imgToDef", ",", "defField", ",", "device", ")", ":", "\n", "  ", "zeroIdxField", "=", "getZeroIdxFieldImg", "(", "imgToDef", ".", "shape", ",", "device", ")", "\n", "zeroIdxField", "[", "4", "]", "+=", "defField", "[", ":", ",", "None", ",", "0", ",", "]", "\n", "zeroIdxField", "[", "3", "]", "+=", "defField", "[", ":", ",", "None", ",", "1", ",", "]", "\n", "zeroIdxField", "[", "2", "]", "+=", "defField", "[", ":", ",", "None", ",", "2", ",", "]", "\n", "\n", "zeroIdxField", "[", "4", "]", "=", "zeroIdxField", "[", "4", "]", ".", "round", "(", ")", ".", "long", "(", ")", "\n", "zeroIdxField", "[", "3", "]", "=", "zeroIdxField", "[", "3", "]", ".", "round", "(", ")", ".", "long", "(", ")", "\n", "zeroIdxField", "[", "2", "]", "=", "zeroIdxField", "[", "2", "]", ".", "round", "(", ")", ".", "long", "(", ")", "\n", "\n", "boolMask", "=", "(", "(", "(", "zeroIdxField", "[", "4", "]", ">", "(", "defField", ".", "shape", "[", "4", "]", "-", "1", ")", ")", "|", "(", "zeroIdxField", "[", "4", "]", "<", "0", ")", ")", "|", "(", "(", "zeroIdxField", "[", "3", "]", ">", "(", "defField", ".", "shape", "[", "3", "]", "-", "1", ")", ")", "|", "(", "zeroIdxField", "[", "3", "]", "<", "0", ")", ")", "|", "(", "(", "zeroIdxField", "[", "2", "]", ">", "(", "defField", ".", "shape", "[", "2", "]", "-", "1", ")", ")", "|", "(", "zeroIdxField", "[", "2", "]", "<", "0", ")", ")", ")", "\n", "\n", "zeroIdxField", "[", "4", "]", "[", "zeroIdxField", "[", "4", "]", ">", "(", "defField", ".", "shape", "[", "4", "]", "-", "1", ")", "]", "=", "defField", ".", "shape", "[", "4", "]", "-", "1", "\n", "zeroIdxField", "[", "4", "]", "[", "zeroIdxField", "[", "4", "]", "<", "0", "]", "=", "0", "\n", "\n", "zeroIdxField", "[", "3", "]", "[", "zeroIdxField", "[", "3", "]", ">", "(", "defField", ".", "shape", "[", "3", "]", "-", "1", ")", "]", "=", "defField", ".", "shape", "[", "3", "]", "-", "1", "\n", "zeroIdxField", "[", "3", "]", "[", "zeroIdxField", "[", "3", "]", "<", "0", "]", "=", "0", "\n", "\n", "zeroIdxField", "[", "2", "]", "[", "zeroIdxField", "[", "2", "]", ">", "(", "defField", ".", "shape", "[", "2", "]", "-", "1", ")", "]", "=", "defField", ".", "shape", "[", "2", "]", "-", "1", "\n", "zeroIdxField", "[", "2", "]", "[", "zeroIdxField", "[", "2", "]", "<", "0", "]", "=", "0", "\n", "\n", "deformed", "=", "imgToDef", "[", "zeroIdxField", "[", "0", "]", ",", "zeroIdxField", "[", "1", "]", ",", "zeroIdxField", "[", "2", "]", ",", "zeroIdxField", "[", "3", "]", ",", "zeroIdxField", "[", "4", "]", "]", "\n", "deformed", "[", "boolMask", "]", "=", "deformed", "[", "boolMask", "]", ".", "detach", "(", ")", "\n", "return", "deformed", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.deformWholeImage": [[265, 276], ["Utils.getImgDataDef", "range", "range", "Utils.deformWithNearestNeighborInterpolation", "Utils.deformImage"], "function", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getImgDataDef", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.deformWithNearestNeighborInterpolation", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.deformImage"], ["", "def", "deformWholeImage", "(", "imgDataToWork", ",", "addedField", ",", "nearestNeighbor", "=", "False", ",", "imgIdx", "=", "0", ")", ":", "\n", "  ", "imgDataDef", "=", "getImgDataDef", "(", "imgDataToWork", ".", "shape", ",", "imgDataToWork", ".", "device", ",", "imgDataToWork", ".", "dtype", ",", "imgIdx", ")", "\n", "for", "chanIdx", "in", "range", "(", "-", "1", ",", "imgDataToWork", ".", "shape", "[", "1", "]", "-", "1", ")", ":", "\n", "    ", "imgToDef", "=", "imgDataToWork", "[", ":", ",", "None", ",", "chanIdx", ",", "]", "\n", "chanRange", "=", "range", "(", "chanIdx", "*", "3", ",", "chanIdx", "*", "3", "+", "3", ")", "\n", "if", "nearestNeighbor", ":", "\n", "      ", "deformedTmp", "=", "deformWithNearestNeighborInterpolation", "(", "imgToDef", ",", "addedField", "[", ":", ",", "chanRange", ",", "]", ",", "imgDataToWork", ".", "device", ")", "\n", "", "else", ":", "\n", "      ", "deformedTmp", "=", "deformImage", "(", "imgToDef", ",", "addedField", "[", ":", ",", "chanRange", ",", "]", ",", "imgDataToWork", ".", "device", ",", "False", ",", "nearestNeighbor", ")", "\n", "", "imgDataDef", "[", ":", ",", "chanIdx", "+", "1", ",", "]", "=", "deformedTmp", "[", ":", ",", "0", ",", "]", "\n", "", "return", "imgDataDef", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.deformImage": [[277, 294], ["Utils.getZeroDefField", "torch.empty", "torch.nn.functional.grid_sample", "torch.nn.functional.grid_sample", "defFields[].detach", "defFields[].detach", "defFields[].detach"], "function", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getZeroDefField"], ["", "def", "deformImage", "(", "imgToDef", ",", "defFields", ",", "device", ",", "detach", "=", "True", ",", "NN", "=", "False", ",", "padMode", "=", "'border'", ")", ":", "\n", "  ", "zeroDefField", "=", "getZeroDefField", "(", "imgToDef", ".", "shape", ",", "device", ")", "\n", "currDefField", "=", "torch", ".", "empty", "(", "zeroDefField", ".", "shape", ",", "device", "=", "device", ",", "requires_grad", "=", "False", ")", "\n", "if", "(", "detach", ")", ":", "\n", "## our image are of the form z,y,x; grid_sample takes as input the order x,y,z", "\n", "    ", "currDefField", "[", "...", ",", "0", "]", "=", "zeroDefField", "[", "...", ",", "0", "]", "+", "defFields", "[", ":", ",", "0", ",", "]", ".", "detach", "(", ")", "/", "(", "(", "imgToDef", ".", "shape", "[", "4", "]", "-", "1", ")", "/", "2.0", ")", "\n", "currDefField", "[", "...", ",", "1", "]", "=", "zeroDefField", "[", "...", ",", "1", "]", "+", "defFields", "[", ":", ",", "1", ",", "]", ".", "detach", "(", ")", "/", "(", "(", "imgToDef", ".", "shape", "[", "3", "]", "-", "1", ")", "/", "2.0", ")", "\n", "currDefField", "[", "...", ",", "2", "]", "=", "zeroDefField", "[", "...", ",", "2", "]", "+", "defFields", "[", ":", ",", "2", ",", "]", ".", "detach", "(", ")", "/", "(", "(", "imgToDef", ".", "shape", "[", "2", "]", "-", "1", ")", "/", "2.0", ")", "\n", "", "else", ":", "\n", "    ", "currDefField", "[", "...", ",", "0", "]", "=", "zeroDefField", "[", "...", ",", "0", "]", "+", "defFields", "[", ":", ",", "0", ",", "]", "/", "(", "(", "imgToDef", ".", "shape", "[", "4", "]", "-", "1", ")", "/", "2.0", ")", "\n", "currDefField", "[", "...", ",", "1", "]", "=", "zeroDefField", "[", "...", ",", "1", "]", "+", "defFields", "[", ":", ",", "1", ",", "]", "/", "(", "(", "imgToDef", ".", "shape", "[", "3", "]", "-", "1", ")", "/", "2.0", ")", "\n", "currDefField", "[", "...", ",", "2", "]", "=", "zeroDefField", "[", "...", ",", "2", "]", "+", "defFields", "[", ":", ",", "2", ",", "]", "/", "(", "(", "imgToDef", ".", "shape", "[", "2", "]", "-", "1", ")", "/", "2.0", ")", "\n", "", "if", "NN", ":", "#needs pytorch > 1.0", "\n", "    ", "deformedTmp", "=", "torch", ".", "nn", ".", "functional", ".", "grid_sample", "(", "imgToDef", ",", "currDefField", ",", "mode", "=", "'nearest'", ",", "padding_mode", "=", "padMode", ")", "\n", "", "else", ":", "\n", "    ", "deformedTmp", "=", "torch", ".", "nn", ".", "functional", ".", "grid_sample", "(", "imgToDef", ",", "currDefField", ",", "mode", "=", "'bilinear'", ",", "padding_mode", "=", "padMode", ")", "\n", "", "return", "deformedTmp", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getReceptiveFieldOffset": [[295, 300], ["numpy.power", "range", "numpy.power"], "function", ["None"], ["", "def", "getReceptiveFieldOffset", "(", "nuOfLayers", ")", ":", "\n", "  ", "receptiveFieldOffset", "=", "np", ".", "power", "(", "2", ",", "nuOfLayers", ")", "\n", "for", "i", "in", "range", "(", "nuOfLayers", "-", "1", ",", "0", ",", "-", "1", ")", ":", "\n", "    ", "receptiveFieldOffset", "+=", "2", "*", "np", ".", "power", "(", "2", ",", "i", ")", "\n", "", "return", "receptiveFieldOffset", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.loadImage": [[301, 308], ["SimpleITK.ReadImage", "SimpleITK.GetArrayFromImage", "numpy.expand_dims", "numpy.expand_dims", "torch.from_numpy", "str"], "function", ["None"], ["", "def", "loadImage", "(", "filename", ")", ":", "\n", "  ", "tmp", "=", "sitk", ".", "ReadImage", "(", "str", "(", "filename", ")", ")", "\n", "img0", "=", "sitk", ".", "GetArrayFromImage", "(", "tmp", ")", "\n", "img0", "=", "np", ".", "expand_dims", "(", "img0", ",", "axis", "=", "0", ")", "\n", "img0", "=", "np", ".", "expand_dims", "(", "img0", ",", "axis", "=", "0", ")", "\n", "img0", "=", "torch", ".", "from_numpy", "(", "img0", ")", "\n", "return", "img0", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.saveImg": [[309, 312], ["SimpleITK.GetImageFromArray", "SimpleITK.WriteImage"], "function", ["None"], ["", "def", "saveImg", "(", "imgData", ",", "filename", ",", "isVector", "=", "False", ")", ":", "\n", "    ", "itkImg", "=", "sitk", ".", "GetImageFromArray", "(", "imgData", ",", "isVector", "=", "isVector", ")", "\n", "sitk", ".", "WriteImage", "(", "itkImg", ",", "filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.normalizeImg": [[313, 319], ["img.mean", "imgData.std"], "function", ["None"], ["", "def", "normalizeImg", "(", "img", ")", ":", "\n", "  ", "imgMean", "=", "img", ".", "mean", "(", ")", "\n", "imgData", "=", "img", "-", "imgMean", "\n", "imgStd", "=", "imgData", ".", "std", "(", ")", "\n", "imgData", "=", "imgData", "/", "imgStd", "\n", "return", "imgData", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.compareDicts": [[320, 323], ["len", "bool", "torch.all"], "function", ["None"], ["", "def", "compareDicts", "(", "dict1", ",", "dict2", ")", ":", "\n", "  ", "shared_items", "=", "{", "k", ":", "dict1", "[", "k", "]", "for", "k", "in", "dict1", "if", "k", "in", "dict2", "and", "bool", "(", "torch", ".", "all", "(", "dict1", "[", "k", "]", "==", "dict2", "[", "k", "]", ")", ")", "}", "\n", "return", "len", "(", "shared_items", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.printHash": [[324, 326], ["pickle.dumps"], "function", ["None"], ["", "def", "printHash", "(", "obj", ")", ":", "\n", "  ", "h", "=", "pickle", ".", "dumps", "(", "obj", ")", "\n", "#   print hash(h)", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.numpyRepeat": [[328, 332], ["obj.view().repeat().view", "obj.view().repeat", "obj.view"], "function", ["None"], ["", "def", "numpyRepeat", "(", "obj", ",", "times", ")", ":", "\n", "  ", "objShape", "=", "obj", ".", "shape", "\n", "tmp", "=", "obj", ".", "view", "(", "objShape", "[", "0", "]", ",", "-", "1", ")", ".", "repeat", "(", "1", ",", "times", ")", ".", "view", "(", "objShape", "[", "0", "]", "*", "times", ",", "objShape", "[", "1", "]", ",", "objShape", "[", "2", "]", ",", "objShape", "[", "3", "]", ")", "\n", "return", "tmp", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.sampleImgData": [[333, 372], ["torch.nn.functional.interpolate", "torch.zeros_like", "torch.nn.functional.interpolate", "maskDataOrig.float.dim", "imgDataOrig.dim", "maskDataOrig.float.float", "torch.nn.functional.interpolate", "maskData.byte.byte", "labelDataOrig.dim", "imgDataOrig.dim", "torch.nn.functional.interpolate", "torch.nn.functional.interpolate", "torch.zeros_like", "torch.nn.functional.interpolate"], "function", ["None"], ["", "def", "sampleImgData", "(", "data", ",", "samplingRate", ")", ":", "\n", "    ", "imgDataOrig", "=", "data", "[", "'image'", "]", "\n", "labelDataOrig", "=", "data", "[", "'label'", "]", "\n", "maskDataOrig", "=", "data", "[", "'mask'", "]", "\n", "landmarkData", "=", "data", "[", "'landmarks'", "]", "\n", "if", "samplingRate", "<", "1", ":", "\n", "\n", "      ", "imgData", "=", "torch", ".", "nn", ".", "functional", ".", "interpolate", "(", "imgDataOrig", ",", "scale_factor", "=", "samplingRate", ",", "mode", "=", "'trilinear'", ")", "\n", "if", "useropts", ".", "valueToIgnore", "is", "not", "None", ":", "\n", "        ", "boolValToIgnore", "=", "torch", ".", "zeros_like", "(", "imgDataOrig", ")", "\n", "boolValToIgnore", "[", "imgDataOrig", "==", "useropts", ".", "valueToIgnore", "]", "=", "1.0", "\n", "boolValToIgnore", "=", "torch", ".", "nn", ".", "functional", ".", "interpolate", "(", "boolValToIgnore", ",", "scale_factor", "=", "samplingRate", ",", "mode", "=", "'trilinear'", ")", "\n", "imgData", "[", "boolValToIgnore", ">", "0", "]", "=", "useropts", ".", "valueToIgnore", "\n", "", "if", "(", "maskDataOrig", ".", "dim", "(", ")", "==", "imgDataOrig", ".", "dim", "(", ")", ")", ":", "\n", "        ", "maskDataOrig", "=", "maskDataOrig", ".", "float", "(", ")", "\n", "maskData", "=", "torch", ".", "nn", ".", "functional", ".", "interpolate", "(", "maskDataOrig", ",", "scale_factor", "=", "samplingRate", ",", "mode", "=", "'nearest'", ")", "\n", "maskData", "=", "maskData", ".", "byte", "(", ")", "\n", "", "else", ":", "\n", "        ", "maskData", "=", "maskDataOrig", "\n", "", "if", "(", "labelDataOrig", ".", "dim", "(", ")", "==", "imgDataOrig", ".", "dim", "(", ")", ")", ":", "\n", "#         labelDataOrig = labelDataOrig.float()", "\n", "        ", "if", "useropts", ".", "handleStructsAsImages", ":", "\n", "          ", "labelData", "=", "torch", ".", "nn", ".", "functional", ".", "interpolate", "(", "labelDataOrig", ",", "scale_factor", "=", "samplingRate", ",", "mode", "=", "'trilinear'", ")", "\n", "if", "useropts", ".", "valueToIgnore", "is", "not", "None", ":", "\n", "            ", "boolValToIgnore", "=", "torch", ".", "zeros_like", "(", "labelDataOrig", ")", "\n", "boolValToIgnore", "[", "labelDataOrig", "==", "useropts", ".", "valueToIgnore", "]", "=", "1.0", "\n", "boolValToIgnore", "=", "torch", ".", "nn", ".", "functional", ".", "interpolate", "(", "boolValToIgnore", ",", "scale_factor", "=", "samplingRate", ",", "mode", "=", "'trilinear'", ")", "\n", "labelData", "[", "boolValToIgnore", ">", "0", "]", "=", "useropts", ".", "valueToIgnore", "\n", "", "", "else", ":", "\n", "          ", "labelData", "=", "torch", ".", "nn", ".", "functional", ".", "interpolate", "(", "labelDataOrig", ",", "scale_factor", "=", "samplingRate", ",", "mode", "=", "'nearest'", ")", "\n", "#         labelData = labelData.byte()", "\n", "", "", "else", ":", "\n", "        ", "labelData", "=", "labelDataOrig", "\n", "", "", "else", ":", "\n", "      ", "imgData", "=", "imgDataOrig", "\n", "maskData", "=", "maskDataOrig", "\n", "labelData", "=", "labelDataOrig", "\n", "\n", "", "return", "(", "imgData", ",", "maskData", ",", "labelData", ",", "landmarkData", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.deformLandmarks": [[373, 396], ["len", "eval.LandmarkHandler.PointProcessor", "list", "range", "range", "Utils.getDefField", "numpy.moveaxis", "numpy.moveaxis", "torch.from_numpy", "eval.LandmarkHandler.PointProcessor.deformPointsWithField", "defField[].detach", "defField[].detach", "defField[].detach"], "function", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getDefField", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointProcessor.deformPointsWithField"], ["", "def", "deformLandmarks", "(", "landmarkData", ",", "image", ",", "defField", ",", "spacing", ",", "origin", ",", "cosines", ")", ":", "\n", "  ", "if", "(", "len", "(", "landmarkData", ")", ">", "0", ")", ":", "\n", "    ", "pp", "=", "PointProcessor", "(", ")", "\n", "deformedlandmarkData", "=", "list", "(", "landmarkData", ")", "\n", "for", "imgIdx", "in", "range", "(", "image", ".", "shape", "[", "0", "]", ")", ":", "\n", "      ", "for", "chanIdx", "in", "range", "(", "-", "1", ",", "image", ".", "shape", "[", "1", "]", "-", "1", ")", ":", "\n", "        ", "dataSetSpacing", "=", "spacing", "\n", "dataSetDirCosines", "=", "cosines", "\n", "defX", "=", "defField", "[", "imgIdx", ",", "chanIdx", "*", "3", ",", "]", ".", "detach", "(", ")", "*", "dataSetSpacing", "[", "0", "]", "*", "dataSetDirCosines", "[", "0", "]", "\n", "defY", "=", "defField", "[", "imgIdx", ",", "chanIdx", "*", "3", "+", "1", ",", "]", ".", "detach", "(", ")", "*", "dataSetSpacing", "[", "1", "]", "*", "dataSetDirCosines", "[", "4", "]", "\n", "defZ", "=", "defField", "[", "imgIdx", ",", "chanIdx", "*", "3", "+", "2", ",", "]", ".", "detach", "(", ")", "*", "dataSetSpacing", "[", "2", "]", "*", "dataSetDirCosines", "[", "8", "]", "\n", "defFieldPerturbated", "=", "getDefField", "(", "defX", ",", "defY", ",", "defZ", ")", "\n", "defFieldPerturbated", "=", "np", ".", "moveaxis", "(", "defFieldPerturbated", ",", "0", ",", "2", ")", "\n", "defFieldPerturbated", "=", "np", ".", "moveaxis", "(", "defFieldPerturbated", ",", "0", ",", "1", ")", "\n", "defFieldPerturbated", "=", "torch", ".", "from_numpy", "(", "defFieldPerturbated", ")", "\n", "currLandmarks", "=", "landmarkData", "[", "chanIdx", "+", "1", "]", "##the def field points from output to input therefore we need no take the next landmarks to be able to deform them", "\n", "defFieldOrigin", "=", "origin", "\n", "deformedPoints", "=", "pp", ".", "deformPointsWithField", "(", "currLandmarks", ",", "defFieldPerturbated", ",", "defFieldOrigin", ",", "dataSetSpacing", ",", "dataSetDirCosines", ")", "\n", "deformedlandmarkData", "[", "chanIdx", "+", "1", "]", "=", "deformedPoints", "\n", "", "", "deformedData", "=", "deformedlandmarkData", "\n", "", "else", ":", "\n", "    ", "deformedData", "=", "[", "]", "\n", "", "return", "deformedData", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.sampleImg": [[397, 401], ["torch.nn.functional.interpolate"], "function", ["None"], ["", "def", "sampleImg", "(", "img", ",", "samplingRate", ")", ":", "\n", "  ", "if", "samplingRate", "!=", "1.0", ":", "\n", "    ", "img", "=", "torch", ".", "nn", ".", "functional", ".", "interpolate", "(", "img", ",", "scale_factor", "=", "samplingRate", ",", "mode", "=", "'trilinear'", ")", "\n", "", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getPaddedData": [[402, 413], ["torch.nn.functional.pad", "maskData.byte.float", "torch.nn.functional.pad", "maskData.byte.byte", "torch.nn.functional.pad", "maskData.byte.dim", "torch.nn.functional.pad.dim", "torch.nn.functional.pad.dim", "torch.nn.functional.pad.dim"], "function", ["None"], ["", "def", "getPaddedData", "(", "imgData", ",", "maskData", ",", "labelData", ",", "padVals", ")", ":", "\n", "  ", "imgData", "=", "torch", ".", "nn", ".", "functional", ".", "pad", "(", "imgData", ",", "padVals", ",", "\"constant\"", ",", "0", ")", "\n", "if", "(", "(", "maskData", "is", "not", "None", ")", "and", "(", "maskData", ".", "dim", "(", ")", "==", "imgData", ".", "dim", "(", ")", ")", ")", ":", "\n", "    ", "maskData", "=", "maskData", ".", "float", "(", ")", "\n", "maskData", "=", "torch", ".", "nn", ".", "functional", ".", "pad", "(", "maskData", ",", "padVals", ",", "\"constant\"", ",", "0", ")", "\n", "maskData", "=", "maskData", ".", "byte", "(", ")", "\n", "", "if", "(", "(", "labelData", "is", "not", "None", ")", "and", "(", "labelData", ".", "dim", "(", ")", "==", "imgData", ".", "dim", "(", ")", ")", ")", ":", "\n", "    ", "labelData", "=", "torch", ".", "nn", ".", "functional", ".", "pad", "(", "labelData", ",", "padVals", ",", "\"constant\"", ",", "0", ")", "\n", "#     labelData = labelData.byte()", "\n", "\n", "", "return", "(", "imgData", ",", "maskData", ",", "labelData", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.save_grad": [[414, 422], ["print", "print", "print", "numpy.float64", "numpy.float64", "numpy.float64", "torch.sum", "torch.min", "torch.max"], "function", ["None"], ["", "def", "save_grad", "(", "name", ")", ":", "\n", "\n", "  ", "def", "hook", "(", "grad", ")", ":", "\n", "      ", "print", "(", "name", ",", "np", ".", "float64", "(", "torch", ".", "sum", "(", "grad", ")", ")", ")", "\n", "print", "(", "name", ",", "np", ".", "float64", "(", "torch", ".", "min", "(", "grad", ")", ")", ")", "\n", "print", "(", "name", ",", "np", ".", "float64", "(", "torch", ".", "max", "(", "grad", ")", ")", ")", "\n", "\n", "", "return", "hook", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.combineDeformationFields": [[424, 438], ["torch.empty", "range", "defField0.add.add", "range", "int", "Utils.deformImage"], "function", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.deformImage"], ["", "def", "combineDeformationFields", "(", "defField0", ",", "defField1", ",", "requiresGrad", "=", "False", ")", ":", "\n", "  ", "if", "useropts", ".", "addVectorFields", ":", "\n", "    ", "defField0", "=", "defField0", "+", "defField1", "\n", "", "else", ":", "\n", "    ", "xDef", "=", "torch", ".", "empty", "(", "defField0", ".", "shape", ",", "device", "=", "defField0", ".", "device", ",", "requires_grad", "=", "requiresGrad", ")", "\n", "for", "chanIdx", "in", "range", "(", "-", "1", ",", "int", "(", "defField0", ".", "shape", "[", "1", "]", "/", "3", ")", "-", "1", ")", ":", "\n", "      ", "chanRange", "=", "range", "(", "chanIdx", "*", "3", ",", "chanIdx", "*", "3", "+", "3", ")", "\n", "for", "channel", "in", "chanRange", ":", "\n", "        ", "imgToDef", "=", "defField1", "[", ":", ",", "None", ",", "channel", ",", "]", "\n", "#deformedTmp = deformWithNearestNeighborInterpolation(imgToDef, defField0[: , chanRange, ], defField0.device)", "\n", "deformedTmp", "=", "deformImage", "(", "imgToDef", ",", "defField0", "[", ":", ",", "chanRange", ",", "]", ",", "defField0", ".", "device", ",", "not", "requiresGrad", ")", "\n", "xDef", "[", ":", ",", "channel", ",", "]", "=", "deformedTmp", "[", ":", ",", "0", ",", "]", "\n", "", "", "defField0", "=", "defField0", ".", "add", "(", "xDef", ")", "\n", "", "return", "defField0", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.__init__": [[14, 86], ["open", "unicodecsv.reader", "len", "open.close", "HeadAndNeckDataset.HeadAndNeckDataset.dataFileList.append", "HeadAndNeckDataset.HeadAndNeckDataset.labelFileList.append", "HeadAndNeckDataset.HeadAndNeckDataset.maskFileList.append", "HeadAndNeckDataset.HeadAndNeckDataset.landMarkFileList.append", "len", "os.path.isfile", "os.path.isfile", "os.path.isfile", "os.path.isfile", "os.path.isfile", "os.path.isfile", "HeadAndNeckDataset.HeadAndNeckDataset.loadData", "imgFiles.append", "os.path.isfile", "maskFiles.append", "maskFiles.append", "landMarkFiles.append", "labelFiles.append", "labelFiles.append", "str", "imgFiles.append", "str", "str", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointReader.loadData"], ["def", "__init__", "(", "self", ",", "csv_file", ",", "transform", "=", "None", ",", "loadOnInstantiation", "=", "True", ",", "smoothFilter", "=", "None", ",", "normlizeImages", "=", "True", ")", ":", "\n", "        ", "self", ".", "normlizeImages", "=", "normlizeImages", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "smooth", "=", "smoothFilter", "\n", "self", ".", "loadOnInstantiation", "=", "loadOnInstantiation", "\n", "csvtrainingFiles", "=", "open", "(", "csv_file", ",", "'rb'", ")", "\n", "self", ".", "meansAndStds", "=", "{", "}", "\n", "self", ".", "spacings", "=", "{", "}", "\n", "self", ".", "origins", "=", "{", "}", "\n", "self", ".", "directionCosines", "=", "{", "}", "\n", "try", ":", "\n", "          ", "trianingCSVFileReader", "=", "csv", ".", "reader", "(", "csvtrainingFiles", ",", "delimiter", "=", "';'", ",", "encoding", "=", "'iso8859_15'", ")", "\n", "if", "(", "self", ".", "loadOnInstantiation", ")", ":", "\n", "            ", "self", ".", "loadedIgSamples", "=", "{", "}", "\n", "\n", "", "self", ".", "dataFileList", "=", "[", "]", "\n", "self", ".", "labelFileList", "=", "[", "]", "\n", "self", ".", "maskFileList", "=", "[", "]", "\n", "self", ".", "landMarkFileList", "=", "[", "]", "\n", "\n", "idx", "=", "0", "\n", "for", "trainingFilePath", "in", "trianingCSVFileReader", ":", "\n", "            ", "imgFiles", "=", "[", "]", "\n", "maskFiles", "=", "[", "]", "\n", "landMarkFiles", "=", "[", "]", "\n", "labelFiles", "=", "[", "]", "\n", "i", "=", "0", "\n", "while", "(", "True", ")", ":", "\n", "              ", "trainingFileName", "=", "trainingFilePath", "[", "0", "]", "+", "os", ".", "path", ".", "sep", "+", "'img'", "+", "str", "(", "i", ")", "+", "'.nii.gz'", "\n", "if", "(", "os", ".", "path", ".", "isfile", "(", "trainingFileName", ")", ")", ":", "\n", "                ", "imgFiles", ".", "append", "(", "trainingFileName", ")", "\n", "", "else", ":", "\n", "                ", "trainingFileName", "=", "trainingFilePath", "[", "0", "]", "+", "os", ".", "path", ".", "sep", "+", "'img'", "+", "str", "(", "i", ")", "+", "'.nrrd'", "\n", "if", "(", "os", ".", "path", ".", "isfile", "(", "trainingFileName", ")", ")", ":", "\n", "                  ", "imgFiles", ".", "append", "(", "trainingFileName", ")", "\n", "", "else", ":", "\n", "                  ", "break", "\n", "\n", "", "", "maskFileName", "=", "trainingFilePath", "[", "0", "]", "+", "os", ".", "path", ".", "sep", "+", "'mask'", "+", "str", "(", "i", ")", "+", "'.nii.gz'", "\n", "if", "(", "os", ".", "path", ".", "isfile", "(", "maskFileName", ")", ")", ":", "\n", "                ", "maskFiles", ".", "append", "(", "maskFileName", ")", "\n", "", "maskFileName", "=", "trainingFilePath", "[", "0", "]", "+", "os", ".", "path", ".", "sep", "+", "'mask'", "+", "str", "(", "i", ")", "+", "'.nrrd'", "\n", "if", "(", "os", ".", "path", ".", "isfile", "(", "maskFileName", ")", ")", ":", "\n", "                ", "maskFiles", ".", "append", "(", "maskFileName", ")", "\n", "\n", "", "landmarkFileName", "=", "trainingFilePath", "[", "0", "]", "+", "os", ".", "path", ".", "sep", "+", "str", "(", "i", ")", "+", "'0.pts'", "\n", "if", "(", "os", ".", "path", ".", "isfile", "(", "landmarkFileName", ")", ")", ":", "\n", "                ", "landMarkFiles", ".", "append", "(", "landmarkFileName", ")", "\n", "\n", "", "labelsFileName", "=", "trainingFilePath", "[", "0", "]", "+", "os", ".", "path", ".", "sep", "+", "'struct'", "+", "str", "(", "i", ")", "+", "'.nii.gz'", "\n", "if", "(", "os", ".", "path", ".", "isfile", "(", "labelsFileName", ")", ")", ":", "\n", "                ", "labelFiles", ".", "append", "(", "labelsFileName", ")", "\n", "", "labelsFileName", "=", "trainingFilePath", "[", "0", "]", "+", "os", ".", "path", ".", "sep", "+", "'struct'", "+", "str", "(", "i", ")", "+", "'.nrrd'", "\n", "if", "(", "os", ".", "path", ".", "isfile", "(", "labelsFileName", ")", ")", ":", "\n", "                ", "labelFiles", ".", "append", "(", "labelsFileName", ")", "\n", "", "i", "=", "i", "+", "1", "\n", "\n", "", "self", ".", "dataFileList", ".", "append", "(", "imgFiles", ")", "\n", "self", ".", "labelFileList", ".", "append", "(", "labelFiles", ")", "\n", "self", ".", "maskFileList", ".", "append", "(", "maskFiles", ")", "\n", "self", ".", "landMarkFileList", ".", "append", "(", "landMarkFiles", ")", "\n", "\n", "self", ".", "channels", "=", "len", "(", "imgFiles", ")", "\n", "if", "(", "self", ".", "loadOnInstantiation", ")", ":", "\n", "              ", "sample", "=", "self", ".", "loadData", "(", "idx", ")", "\n", "self", ".", "loadedIgSamples", "[", "idx", "]", "=", "sample", "\n", "idx", "=", "idx", "+", "1", "\n", "\n", "\n", "", "", "self", ".", "length", "=", "len", "(", "self", ".", "dataFileList", ")", "\n", "", "finally", ":", "\n", "          ", "csvtrainingFiles", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.__len__": [[87, 89], ["None"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "length", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.getChannels": [[90, 92], ["None"], "methods", ["None"], ["", "def", "getChannels", "(", "self", ")", ":", "\n", "      ", "return", "self", ".", "channels", ";", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.loadData": [[93, 179], ["numpy.stack().astype", "HeadAndNeckDataset.HeadAndNeckDataset.getRightSizedData", "SimpleITK.ReadImage", "SimpleITK.GetArrayFromImage", "SimpleITK.ReadImage.GetSpacing", "SimpleITK.ReadImage.GetSize", "len", "len", "HeadAndNeckDataset.HeadAndNeckDataset.append", "SimpleITK.ReadImage.GetOrigin", "len", "len", "numpy.stack().astype", "len", "len", "numpy.stack", "HeadAndNeckDataset.HeadAndNeckDataset.normalize", "len", "len", "eval.LandmarkHandler.PointReader", "HeadAndNeckDataset.HeadAndNeckDataset.transform", "HeadAndNeckDataset.HeadAndNeckDataset.smooth", "str", "numpy.stack", "SimpleITK.ReadImage", "SimpleITK.GetArrayFromImage", "HeadAndNeckDataset.HeadAndNeckDataset.append", "SimpleITK.ReadImage", "SimpleITK.GetArrayFromImage", "numpy.ones.append", "numpy.ones", "HeadAndNeckDataset.HeadAndNeckDataset.normalize", "HeadAndNeckDataset.HeadAndNeckDataset.normalize", "len", "len", "len", "HeadAndNeckDataset.HeadAndNeckDataset.normalize", "eval.LandmarkHandler.PointReader.loadData", "landmarkData.append", "print", "print", "str", "numpy.stack", "str"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.getRightSizedData", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.normalize", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.normalize", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.normalize", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.normalize", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointReader.loadData"], ["", "def", "loadData", "(", "self", ",", "idx", ")", ":", "\n", "      ", "imgData", "=", "[", "]", "\n", "spacing", "=", "[", "]", "\n", "imgSize", "=", "[", "]", "\n", "trainingFileNames", "=", "self", ".", "dataFileList", "[", "idx", "]", "\n", "maskFileNames", "=", "self", ".", "maskFileList", "[", "idx", "]", "\n", "labelsFileNames", "=", "self", ".", "labelFileList", "[", "idx", "]", "\n", "landMarkFileNames", "=", "self", ".", "landMarkFileList", "[", "idx", "]", "\n", "\n", "for", "trainingFileName", "in", "trainingFileNames", ":", "\n", "#https://na-mic.org/w/images/a/a7/SimpleITK_with_Slicer_HansJohnson.pdf", "\n", "        ", "tmp", "=", "sitk", ".", "ReadImage", "(", "str", "(", "trainingFileName", ")", ")", "\n", "imgNii", "=", "sitk", ".", "GetArrayFromImage", "(", "tmp", ")", "\n", "curSpacing", "=", "tmp", ".", "GetSpacing", "(", ")", "\n", "currImgSize", "=", "tmp", ".", "GetSize", "(", ")", "\n", "if", "(", "len", "(", "spacing", ")", ")", ":", "\n", "          ", "if", "(", "curSpacing", "!=", "spacing", ")", ":", "\n", "            ", "print", "(", "'Error: input images do not have same voxel spacing.'", ")", "\n", "", "", "else", ":", "\n", "          ", "spacing", "=", "curSpacing", "\n", "\n", "", "if", "(", "len", "(", "imgSize", ")", ")", ":", "\n", "          ", "if", "(", "currImgSize", "!=", "imgSize", ")", ":", "\n", "            ", "print", "(", "'Error: input images do not have same size.'", ")", "\n", "", "", "else", ":", "\n", "          ", "imgSize", "=", "currImgSize", "\n", "\n", "", "imgData", ".", "append", "(", "imgNii", ")", "\n", "\n", "## we process the image in the form the form z,y,x but meta data comes as x,y,z", "\n", "self", ".", "spacings", "[", "idx", "]", "=", "spacing", "\n", "self", ".", "origins", "[", "idx", "]", "=", "tmp", ".", "GetOrigin", "(", ")", "\n", "self", ".", "directionCosines", "[", "idx", "]", "=", "[", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", "]", "#tmp.GetDirection()", "\n", "\n", "", "imgData", "=", "np", ".", "stack", "(", "imgData", ")", ".", "astype", "(", "'float32'", ")", "\n", "\n", "#       imgData[imgData < -1000] = -1000", "\n", "#       imgData[imgData > 100] = 100", "\n", "\n", "labelData", "=", "[", "]", "\n", "if", "(", "len", "(", "trainingFileNames", ")", "==", "len", "(", "labelsFileNames", ")", ")", ":", "\n", "        ", "for", "labelsFileName", "in", "labelsFileNames", ":", "\n", "          ", "tmp", "=", "sitk", ".", "ReadImage", "(", "str", "(", "labelsFileName", ")", ")", "\n", "labelsNii", "=", "sitk", ".", "GetArrayFromImage", "(", "tmp", ")", "\n", "labelData", ".", "append", "(", "labelsNii", ")", "\n", "", "labelData", "=", "np", ".", "stack", "(", "labelData", ")", ".", "astype", "(", "'float32'", ")", "\n", "\n", "", "maskData", "=", "[", "]", "\n", "if", "(", "len", "(", "trainingFileNames", ")", "==", "len", "(", "maskFileNames", ")", ")", ":", "\n", "        ", "for", "maskFileName", "in", "maskFileNames", ":", "\n", "          ", "tmp", "=", "sitk", ".", "ReadImage", "(", "str", "(", "maskFileName", ")", ")", "\n", "maskNii", "=", "sitk", ".", "GetArrayFromImage", "(", "tmp", ")", "\n", "maskData", ".", "append", "(", "maskNii", ")", "\n", "", "maskData", "=", "np", ".", "stack", "(", "maskData", ")", "\n", "\n", "imgData", "=", "self", ".", "normalize", "(", "imgData", ",", "maskData", ",", "idx", ")", "\n", "", "elif", "Options", ".", "maskOutZeros", ":", "\n", "        ", "maskData", "=", "np", ".", "ones", "(", "imgData", ".", "shape", ",", "dtype", "=", "np", ".", "ubyte", ")", "\n", "maskData", "[", "imgData", "==", "0", "]", "=", "0", "\n", "\n", "imgData", "=", "self", ".", "normalize", "(", "imgData", ",", "maskData", ",", "idx", ")", "\n", "\n", "", "else", ":", "\n", "        ", "imgData", "=", "self", ".", "normalize", "(", "imgData", ",", "None", ",", "idx", ")", "\n", "\n", "", "if", "(", "len", "(", "labelsFileNames", ")", ">", "0", ")", "and", "(", "len", "(", "labelsFileNames", ")", "==", "len", "(", "maskFileNames", ")", ")", ":", "\n", "        ", "if", "Options", ".", "handleStructsAsImages", ":", "\n", "          ", "labelData", "=", "self", ".", "normalize", "(", "labelData", ",", "maskData", ",", "-", "1", ")", "\n", "", "else", ":", "\n", "          ", "labelData", "[", "maskData", "==", "0", "]", "=", "0", "\n", "\n", "", "", "imgData", ",", "maskData", ",", "labelData", "=", "self", ".", "getRightSizedData", "(", "imgData", ",", "maskData", ",", "labelData", ",", "idx", ")", "\n", "\n", "landmarkData", "=", "[", "]", "\n", "if", "(", "len", "(", "trainingFileNames", ")", "==", "len", "(", "landMarkFileNames", ")", ")", ":", "\n", "        ", "pr", "=", "PointReader", "(", ")", "\n", "for", "lmFileName", "in", "landMarkFileNames", ":", "\n", "          ", "points", "=", "pr", ".", "loadData", "(", "lmFileName", ")", "\n", "landmarkData", ".", "append", "(", "points", ")", "\n", "\n", "", "", "sample", "=", "{", "'image'", ":", "imgData", ",", "'label'", ":", "labelData", ",", "'mask'", ":", "maskData", ",", "'landmarks'", ":", "landmarkData", "}", "\n", "if", "self", ".", "transform", ":", "\n", "        ", "sample", "=", "self", ".", "transform", "(", "sample", ")", "\n", "", "if", "self", ".", "smooth", ":", "\n", "        ", "sample", "=", "self", ".", "smooth", "(", "sample", ")", "\n", "", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.normalize": [[181, 205], ["imgData[].mean", "imgData[].std", "imgData.mean", "imgData.std"], "methods", ["None"], ["", "def", "normalize", "(", "self", ",", "imgData", ",", "maskData", ",", "idx", ")", ":", "\n", "      ", "if", "self", ".", "normlizeImages", ":", "\n", "        ", "if", "maskData", "is", "not", "None", ":", "\n", "          ", "imgMean", "=", "imgData", "[", "maskData", ">", "0", "]", ".", "mean", "(", ")", "\n", "imgData", "=", "imgData", "-", "imgMean", "\n", "imgStd", "=", "imgData", "[", "maskData", ">", "0", "]", ".", "std", "(", ")", "\n", "imgData", "=", "imgData", "/", "imgStd", "\n", "if", "Options", ".", "valueToIgnore", "is", "not", "None", ":", "\n", "            ", "imgData", "[", "maskData", "==", "0", "]", "=", "Options", ".", "valueToIgnore", "\n", "", "else", ":", "\n", "            ", "imgData", "[", "maskData", "==", "0", "]", "=", "0", "\n", "", "if", "idx", ">", "-", "1", ":", "\n", "            ", "self", ".", "meansAndStds", "[", "idx", "]", "=", "(", "imgMean", ",", "imgStd", ")", "\n", "", "", "else", ":", "\n", "          ", "imgMean", "=", "imgData", ".", "mean", "(", ")", "\n", "imgData", "=", "imgData", "-", "imgMean", "\n", "imgStd", "=", "imgData", ".", "std", "(", ")", "\n", "imgData", "=", "imgData", "/", "imgStd", "\n", "if", "idx", ">", "-", "1", ":", "\n", "            ", "self", ".", "meansAndStds", "[", "idx", "]", "=", "(", "imgMean", ",", "imgStd", ")", "\n", "", "", "", "else", ":", "\n", "        ", "if", "idx", ">", "-", "1", ":", "\n", "          ", "self", ".", "meansAndStds", "[", "idx", "]", "=", "(", "0", ",", "1", ")", "\n", "", "", "return", "imgData", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.getSpacing": [[206, 208], ["None"], "methods", ["None"], ["", "def", "getSpacing", "(", "self", ",", "idx", ")", ":", "\n", "      ", "return", "self", ".", "spacings", "[", "idx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.getSpacingXZFlip": [[209, 211], ["None"], "methods", ["None"], ["", "def", "getSpacingXZFlip", "(", "self", ",", "idx", ")", ":", "\n", "      ", "return", "(", "self", ".", "spacings", "[", "idx", "]", "[", "2", "]", ",", "self", ".", "spacings", "[", "idx", "]", "[", "1", "]", ",", "self", ".", "spacings", "[", "idx", "]", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.getOrigin": [[212, 214], ["None"], "methods", ["None"], ["", "def", "getOrigin", "(", "self", ",", "idx", ")", ":", "\n", "      ", "return", "self", ".", "origins", "[", "idx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.getOriginXZFlip": [[215, 217], ["None"], "methods", ["None"], ["", "def", "getOriginXZFlip", "(", "self", ",", "idx", ")", ":", "\n", "      ", "return", "(", "self", ".", "origins", "[", "idx", "]", "[", "2", "]", ",", "self", ".", "origins", "[", "idx", "]", "[", "1", "]", ",", "self", ".", "origins", "[", "idx", "]", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.getDirectionCosines": [[218, 220], ["None"], "methods", ["None"], ["", "def", "getDirectionCosines", "(", "self", ",", "idx", ")", ":", "\n", "      ", "return", "self", ".", "directionCosines", "[", "idx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.getRightSizedData": [[221, 277], ["range", "numpy.pad", "HeadAndNeckDataset.HeadAndNeckDataset.getMinMax", "HeadAndNeckDataset.HeadAndNeckDataset.getMinMax", "HeadAndNeckDataset.HeadAndNeckDataset.getMinMax", "tuple", "len", "numpy.pad", "numpy.sum", "numpy.nonzero", "minMaxXYZ[].min", "minMaxXYZ[].min", "minMaxXYZ[].min", "len", "len", "numpy.pad", "minMaxXYZ[].max", "minMaxXYZ[].max", "minMaxXYZ[].max", "int", "int", "numpy.asarray"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.getMinMax", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.getMinMax", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.getMinMax"], ["", "def", "getRightSizedData", "(", "self", ",", "imgData", ",", "maskData", ",", "labelData", ",", "idx", ")", ":", "\n", "\n", "      ", "nuOfDownSampleLayers", "=", "Options", ".", "netDepth", "-", "1", "\n", "nuOfDownSampleSteps", "=", "Options", ".", "downSampleSteps", "\n", "timesDividableByTwo", "=", "2", "**", "(", "nuOfDownSampleLayers", "+", "nuOfDownSampleSteps", ")", "\n", "\n", "padValues", "=", "[", "[", "0", ",", "0", "]", ",", "[", "0", ",", "0", "]", ",", "[", "0", ",", "0", "]", ",", "[", "0", ",", "0", "]", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "4", ")", ":", "\n", "        ", "if", "imgData", ".", "shape", "[", "i", "]", "<", "2", "*", "timesDividableByTwo", ":", "\n", "          ", "padValues", "[", "i", "]", "[", "0", "]", "=", "int", "(", "2", "*", "timesDividableByTwo", "-", "imgData", ".", "shape", "[", "i", "]", "+", "1", ")", "/", "2", "\n", "padValues", "[", "i", "]", "[", "1", "]", "=", "int", "(", "2", "*", "timesDividableByTwo", "-", "imgData", ".", "shape", "[", "i", "]", "+", "1", ")", "/", "2", "\n", "\n", "", "", "imgData", "=", "np", ".", "pad", "(", "imgData", ",", "padValues", ",", "'constant'", ",", "constant_values", "=", "[", "[", "0", ",", "0", "]", ",", "[", "0", ",", "0", "]", ",", "[", "0", ",", "0", "]", ",", "[", "0", ",", "0", "]", "]", ")", "\n", "\n", "#self.origins[idx] = tuple(self.origins[idx] - np.asarray([padValues[3][0], padValues[2][0], padValues[1][0]]) *  self.spacings[idx])", "\n", "\n", "if", "len", "(", "maskData", ")", ">", "0", ":", "\n", "        ", "maskData", "=", "np", ".", "pad", "(", "maskData", ",", "padValues", ",", "'constant'", ",", "constant_values", "=", "[", "[", "0", ",", "0", "]", ",", "[", "0", ",", "0", "]", ",", "[", "0", ",", "0", "]", ",", "[", "0", ",", "0", "]", "]", ")", "\n", "maskChanSum", "=", "np", ".", "sum", "(", "maskData", ",", "0", ")", "\n", "minMaxXYZ", "=", "np", ".", "nonzero", "(", "maskChanSum", ")", "\n", "min0", "=", "minMaxXYZ", "[", "0", "]", ".", "min", "(", ")", "\n", "max0", "=", "minMaxXYZ", "[", "0", "]", ".", "max", "(", ")", "+", "1", "\n", "\n", "min1", "=", "minMaxXYZ", "[", "1", "]", ".", "min", "(", ")", "\n", "max1", "=", "minMaxXYZ", "[", "1", "]", ".", "max", "(", ")", "+", "1", "\n", "\n", "min2", "=", "minMaxXYZ", "[", "2", "]", ".", "min", "(", ")", "\n", "max2", "=", "minMaxXYZ", "[", "2", "]", ".", "max", "(", ")", "+", "1", "\n", "minMaxShape", "=", "maskData", ".", "shape", "\n", "\n", "", "else", ":", "\n", "        ", "min0", "=", "0", "\n", "min1", "=", "0", "\n", "min2", "=", "0", "\n", "max0", "=", "imgData", ".", "shape", "[", "1", "]", "\n", "max1", "=", "imgData", ".", "shape", "[", "2", "]", "\n", "max2", "=", "imgData", ".", "shape", "[", "3", "]", "\n", "minMaxShape", "=", "imgData", ".", "shape", "\n", "\n", "", "min0", ",", "max0", "=", "self", ".", "getMinMax", "(", "min0", ",", "max0", ",", "minMaxShape", "[", "1", "]", ",", "timesDividableByTwo", ")", "\n", "min1", ",", "max1", "=", "self", ".", "getMinMax", "(", "min1", ",", "max1", ",", "minMaxShape", "[", "2", "]", ",", "timesDividableByTwo", ")", "\n", "min2", ",", "max2", "=", "self", ".", "getMinMax", "(", "min2", ",", "max2", ",", "minMaxShape", "[", "3", "]", ",", "timesDividableByTwo", ")", "\n", "\n", "if", "len", "(", "maskData", ")", ">", "0", ":", "\n", "        ", "maskData", "=", "maskData", "[", ":", ",", "min0", ":", "max0", ",", "min1", ":", "max1", ",", "min2", ":", "max2", "]", "\n", "", "imgData", "=", "imgData", "[", ":", ",", "min0", ":", "max0", ",", "min1", ":", "max1", ",", "min2", ":", "max2", "]", "\n", "\n", "#self.origins[idx] = tuple(self.origins[idx] + np.asarray([min0, min1, min2]) *  self.spacings[idx])", "\n", "self", ".", "origins", "[", "idx", "]", "=", "tuple", "(", "self", ".", "origins", "[", "idx", "]", "+", "np", ".", "asarray", "(", "[", "min2", ",", "min1", ",", "min0", "]", ")", "*", "self", ".", "spacings", "[", "idx", "]", ")", "\n", "\n", "if", "len", "(", "labelData", ")", ">", "0", ":", "\n", "        ", "labelData", "=", "np", ".", "pad", "(", "labelData", ",", "padValues", ",", "'constant'", ",", "constant_values", "=", "[", "[", "0", ",", "0", "]", ",", "[", "0", ",", "0", "]", ",", "[", "0", ",", "0", "]", ",", "[", "0", ",", "0", "]", "]", ")", "\n", "labelData", "=", "labelData", "[", ":", ",", "min0", ":", "max0", ",", "min1", ":", "max1", ",", "min2", ":", "max2", "]", "\n", "\n", "\n", "", "return", "imgData", ",", "maskData", ",", "labelData", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.getMinMax": [[278, 302], ["int", "int", "int", "int"], "methods", ["None"], ["", "def", "getMinMax", "(", "self", ",", "minVal", ",", "maxVal", ",", "maxLength", ",", "timesDividableByTwo", ")", ":", "\n", "      ", "l", "=", "maxVal", "-", "minVal", "\n", "if", "l", "%", "timesDividableByTwo", "==", "0", ":", "\n", "        ", "return", "minVal", ",", "maxVal", "\n", "", "else", ":", "\n", "        ", "lNew", "=", "(", "int", "(", "l", "/", "timesDividableByTwo", ")", "+", "1", ")", "*", "timesDividableByTwo", "\n", "if", "lNew", ">", "maxLength", ":", "\n", "          ", "minVal", "=", "0", "\n", "maxVal", "=", "int", "(", "(", "maxLength", ")", "/", "timesDividableByTwo", ")", "*", "timesDividableByTwo", "\n", "", "else", ":", "\n", "          ", "lDiff", "=", "lNew", "-", "l", "\n", "lDiffHalf", "=", "int", "(", "lDiff", "/", "2", ")", "\n", "if", "minVal", "-", "lDiffHalf", ">", "0", "and", "maxVal", "+", "(", "lDiff", "-", "lDiffHalf", ")", "<", "maxLength", ":", "\n", "            ", "minVal", "=", "minVal", "-", "lDiffHalf", "\n", "maxVal", "=", "maxVal", "+", "(", "lDiff", "-", "lDiffHalf", ")", "\n", "", "elif", "minVal", "-", "lDiff", ">", "0", ":", "\n", "            ", "minVal", "=", "minVal", "-", "lDiff", "\n", "", "elif", "maxVal", "+", "lDiff", "<=", "maxLength", ":", "\n", "            ", "maxVal", "=", "maxVal", "+", "lDiff", "\n", "", "else", ":", "\n", "            ", "minVal", "=", "0", "\n", "maxVal", "=", "int", "(", "(", "maxLength", ")", "/", "timesDividableByTwo", ")", "*", "timesDividableByTwo", "\n", "\n", "", "", "return", "minVal", ",", "maxVal", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.__getitem__": [[305, 314], ["HeadAndNeckDataset.HeadAndNeckDataset.loadData"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointReader.loadData"], ["", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "\n", "##works currently only for single thread", "\n", "        ", "if", "self", ".", "loadOnInstantiation", ":", "\n", "          ", "sample", "=", "self", ".", "loadedIgSamples", "[", "idx", "]", "\n", "", "else", ":", "\n", "          ", "sample", "=", "self", ".", "loadData", "(", "idx", ")", "\n", "\n", "", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.saveData": [[315, 327], ["SimpleITK.WriteImage", "data.SetSpacing", "data.SetOrigin", "data.SetDirection", "os.path.isdir", "os.makedirs", "HeadAndNeckDataset.HeadAndNeckDataset.getSpacing", "HeadAndNeckDataset.HeadAndNeckDataset.getOrigin", "data.GetPixelIDValue"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.getSpacing", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.getOrigin"], ["", "def", "saveData", "(", "self", ",", "data", ",", "path", ",", "filename", ",", "idx", "=", "-", "1", ",", "meanSubtract", "=", "True", ")", ":", "\n", "      ", "if", "idx", ">", "-", "1", ":", "\n", "        ", "if", "(", "data", ".", "GetPixelIDValue", "(", ")", "<", "12", "and", "meanSubtract", ")", ":", "\n", "          ", "(", "imgMean", ",", "imgStd", ")", "=", "self", ".", "meansAndStds", "[", "idx", "]", "\n", "data", "=", "data", "*", "imgStd", "\n", "data", "=", "data", "+", "imgMean", "\n", "", "data", ".", "SetSpacing", "(", "self", ".", "getSpacing", "(", "idx", ")", ")", "\n", "data", ".", "SetOrigin", "(", "self", ".", "getOrigin", "(", "idx", ")", ")", "\n", "data", ".", "SetDirection", "(", "self", ".", "directionCosines", "[", "idx", "]", ")", "\n", "", "if", "not", "os", ".", "path", ".", "isdir", "(", "path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "path", ")", "\n", "", "sitk", ".", "WriteImage", "(", "data", ",", "path", "+", "os", ".", "path", ".", "sep", "+", "filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.ToTensor.__call__": [[329, 345], ["torch.tensor", "torch.tensor", "len", "torch.from_numpy", "len", "torch.from_numpy", "torch.from_numpy"], "methods", ["None"], ["    ", "def", "__call__", "(", "self", ",", "sample", ")", ":", "\n", "        ", "image", ",", "label", ",", "mask", ",", "landmarkData", "=", "sample", "[", "'image'", "]", ",", "sample", "[", "'label'", "]", ",", "sample", "[", "'mask'", "]", ",", "sample", "[", "'landmarks'", "]", "\n", "\n", "labelTorch", "=", "torch", ".", "tensor", "(", "[", "1", "]", ")", "\n", "if", "(", "len", "(", "label", ")", ">", "0", ")", ":", "\n", "          ", "labelTorch", "=", "torch", ".", "from_numpy", "(", "label", ")", "\n", "\n", "", "maskTorch", "=", "torch", ".", "tensor", "(", "[", "1", "]", ")", "\n", "if", "(", "len", "(", "mask", ")", ">", "0", ")", ":", "\n", "          ", "maskTorch", "=", "torch", ".", "from_numpy", "(", "mask", ")", "\n", "\n", "\n", "", "return", "{", "'image'", ":", "torch", ".", "from_numpy", "(", "image", ")", ",", "\n", "'label'", ":", "labelTorch", ",", "\n", "'mask'", ":", "maskTorch", ",", "\n", "'landmarks'", ":", "landmarkData", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.SmoothImage.__call__": [[348, 359], ["range", "Utils.smoothArray3D"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.smoothArray3D"], ["    ", "def", "__call__", "(", "self", ",", "sample", ")", ":", "\n", "      ", "image", ",", "label", ",", "mask", ",", "landmarkData", "=", "sample", "[", "'image'", "]", ",", "sample", "[", "'label'", "]", ",", "sample", "[", "'mask'", "]", ",", "sample", "[", "'landmarks'", "]", "\n", "\n", "for", "i", "in", "range", "(", "0", ",", "image", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "imgToSmooth", "=", "image", "[", "i", ",", "]", "\n", "image", "[", "i", ",", "]", "=", "Utils", ".", "smoothArray3D", "(", "imgToSmooth", ",", "image", ".", "device", ",", "1", ",", "0.5", ",", "3", ")", "\n", "\n", "", "return", "{", "'image'", ":", "image", ",", "\n", "'label'", ":", "label", ",", "\n", "'mask'", ":", "mask", ",", "\n", "'landmarks'", ":", "landmarkData", "}", "\n", "", "", ""]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.GaussSmoothing.GaussianSmoothing.__init__": [[20, 66], ["torch.nn.Module.__init__", "isinstance", "isinstance", "torch.meshgrid", "zip", "kernel.to.to.view", "kernel.to.to.repeat", "kernel.to.to.to", "GaussSmoothing.GaussianSmoothing.register_buffer", "int", "GaussSmoothing.GaussianSmoothing.padVals.append", "GaussSmoothing.GaussianSmoothing.padVals.append", "torch.sum", "torch.arange", "torch.exp", "kernel.to.to.size", "RuntimeError", "math.sqrt", "kernel.to.to.dim"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.DecoderBrick.DecoderBrick.__init__"], ["def", "__init__", "(", "self", ",", "channels", ",", "kernel_size", ",", "sigma", ",", "dim", ",", "device", ")", ":", "\n", "        ", "super", "(", "GaussianSmoothing", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "isinstance", "(", "kernel_size", ",", "numbers", ".", "Number", ")", ":", "\n", "            ", "kernel_size", "=", "[", "kernel_size", "]", "*", "dim", "\n", "", "if", "isinstance", "(", "sigma", ",", "numbers", ".", "Number", ")", ":", "\n", "            ", "sigma", "=", "[", "sigma", "]", "*", "dim", "\n", "\n", "# The gaussian kernel is the product of the", "\n", "# gaussian function of each dimension.", "\n", "", "self", ".", "padVals", "=", "[", "]", "\n", "for", "ks", "in", "kernel_size", ":", "\n", "          ", "padVal", "=", "int", "(", "ks", "/", "2", ")", "\n", "self", ".", "padVals", ".", "append", "(", "padVal", ")", "\n", "self", ".", "padVals", ".", "append", "(", "padVal", ")", "\n", "\n", "", "kernel", "=", "1", "\n", "meshgrids", "=", "torch", ".", "meshgrid", "(", "\n", "[", "\n", "torch", ".", "arange", "(", "size", ",", "dtype", "=", "torch", ".", "float32", ")", "\n", "for", "size", "in", "kernel_size", "\n", "]", "\n", ")", "\n", "for", "size", ",", "std", ",", "mgrid", "in", "zip", "(", "kernel_size", ",", "sigma", ",", "meshgrids", ")", ":", "\n", "            ", "mean", "=", "(", "size", "-", "1", ")", "/", "2", "\n", "kernel", "*=", "1", "/", "(", "std", "*", "math", ".", "sqrt", "(", "2", "*", "math", ".", "pi", ")", ")", "*", "torch", ".", "exp", "(", "-", "(", "(", "mgrid", "-", "mean", ")", "/", "std", ")", "**", "2", "/", "2", ")", "\n", "\n", "# Make sure sum of values in gaussian kernel equals 1.", "\n", "", "kernel", "=", "kernel", "/", "torch", ".", "sum", "(", "kernel", ")", "\n", "\n", "# Reshape to depthwise convolutional weight", "\n", "kernel", "=", "kernel", ".", "view", "(", "1", ",", "1", ",", "*", "kernel", ".", "size", "(", ")", ")", "\n", "kernel", "=", "kernel", ".", "repeat", "(", "channels", ",", "*", "[", "1", "]", "*", "(", "kernel", ".", "dim", "(", ")", "-", "1", ")", ")", "\n", "kernel", "=", "kernel", ".", "to", "(", "device", ")", "\n", "self", ".", "register_buffer", "(", "'weight'", ",", "kernel", ")", "\n", "self", ".", "groups", "=", "channels", "\n", "\n", "if", "dim", "==", "1", ":", "\n", "            ", "self", ".", "conv", "=", "F", ".", "conv1d", "\n", "", "elif", "dim", "==", "2", ":", "\n", "            ", "self", ".", "conv", "=", "F", ".", "conv2d", "\n", "", "elif", "dim", "==", "3", ":", "\n", "            ", "self", ".", "conv", "=", "F", ".", "conv3d", "\n", "", "else", ":", "\n", "            ", "raise", "RuntimeError", "(", "\n", "'Only 1, 2 and 3 dimensions are supported. Received {}.'", ".", "format", "(", "dim", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.GaussSmoothing.GaussianSmoothing.forward": [[68, 79], ["GaussSmoothing.GaussianSmoothing.conv"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "inputArray", ")", ":", "\n", "        ", "\"\"\"\n        Apply gaussian filter to input.\n        Arguments:\n            input (torch.Tensor): Input to apply gaussian filter on.\n        Returns:\n            filtered (torch.Tensor): Filtered output.\n        \"\"\"", "\n", "## padding deactivated as replicate padding has nondeterministic behaviour", "\n", "#         input = nn.functional.pad(input, self.padVals, \"replicate\")", "\n", "return", "self", ".", "conv", "(", "inputArray", ",", "weight", "=", "self", ".", "weight", ",", "groups", "=", "self", ".", "groups", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OneShotOptimise.OneShotOptimise.__init__": [[17, 35], ["Optimise.Optimise.Optimise.__init__", "int", "int", "numpy.ceil", "float"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.DecoderBrick.DecoderBrick.__init__"], ["    ", "def", "__init__", "(", "self", ",", "userOpts", ")", ":", "\n", "      ", "Optimise", ".", "__init__", "(", "self", ",", "userOpts", ")", "\n", "self", ".", "netOptim", "=", "None", "\n", "self", ".", "data", "=", "None", "\n", "modValue", "=", "2", "**", "(", "self", ".", "userOpts", ".", "netDepth", "-", "1", ")", "\n", "\n", "if", "self", ".", "userOpts", ".", "overlappingPatches", ":", "\n", "        ", "self", ".", "patchShift", "=", "int", "(", "self", ".", "userOpts", ".", "finalGaussKernelSize", "/", "2", ")", "\n", "padVal", "=", "(", "int", "(", "np", ".", "ceil", "(", "self", ".", "patchShift", "/", "float", "(", "modValue", ")", ")", ")", "*", "modValue", ")", "\n", "self", ".", "padVals", "=", "(", "padVal", ",", "padVal", ",", "padVal", ",", "padVal", ",", "padVal", ",", "padVal", ")", "\n", "self", ".", "samplerShift", "=", "(", "self", ".", "patchShift", "*", "2", ",", "self", ".", "patchShift", "*", "2", ",", "self", ".", "patchShift", "*", "2", ")", "\n", "", "else", ":", "\n", "        ", "self", ".", "samplerShift", "=", "(", "0", ",", "0", ",", "0", ")", "\n", "\n", "", "if", "self", ".", "userOpts", ".", "trainTillConvergence", ":", "\n", "        ", "self", ".", "iterationValidation", "=", "self", ".", "terminateLoopByLossAndItCount", "\n", "", "else", ":", "\n", "        ", "self", ".", "iterationValidation", "=", "self", ".", "terminateLoopByItCount", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OneShotOptimise.OneShotOptimise.runNoOverlap": [[38, 68], ["enumerate", "print", "Utils.sampleImgData", "Sampler.Sampler.Sampler", "Sampler.Sampler.Sampler.getIndicesForOneShotSampling", "print", "Utils.sampleImg.clone", "OneShotOptimise.OneShotOptimise.processPatchIdxNoOverlap", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "len", "OneShotOptimise.OneShotOptimise.net.load_state_dict", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "Utils.sampleImg", "len"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.sampleImgData", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Sampler.Sampler.getIndicesForOneShotSampling", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OneShotOptimise.OneShotOptimise.processPatchIdxNoOverlap", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.sampleImg"], ["", "", "def", "runNoOverlap", "(", "self", ",", "spacing", ",", "samplingRates", ",", "resultModels", ")", ":", "\n", "      ", "currVectorField", "=", "None", "\n", "for", "samplingRateIdx", ",", "samplingRate", "in", "enumerate", "(", "samplingRates", ")", ":", "\n", "        ", "print", "(", "'sampleRate: '", ",", "samplingRate", ")", "\n", "sampledImgData", ",", "sampledMaskData", ",", "sampledLabelData", ",", "_", "=", "Utils", ".", "sampleImgData", "(", "self", ".", "data", ",", "samplingRate", ")", "\n", "\n", "if", "currVectorField", "is", "None", ":", "\n", "          ", "currVectorField", "=", "torch", ".", "zeros", "(", "(", "sampledImgData", ".", "shape", "[", "0", "]", ",", "sampledImgData", ".", "shape", "[", "1", "]", "*", "3", ",", "sampledImgData", ".", "shape", "[", "2", "]", ",", "sampledImgData", ".", "shape", "[", "3", "]", ",", "sampledImgData", ".", "shape", "[", "4", "]", ")", ",", "device", "=", "\"cpu\"", ",", "requires_grad", "=", "False", ")", "\n", "\n", "", "sampler", "=", "Sampler", "(", "sampledMaskData", ",", "sampledImgData", ",", "sampledLabelData", ",", "self", ".", "userOpts", ".", "patchSize", "[", "samplingRateIdx", "]", ")", "\n", "idxs", "=", "sampler", ".", "getIndicesForOneShotSampling", "(", "self", ".", "samplerShift", ",", "self", ".", "userOpts", ".", "useMedianForSampling", "[", "samplingRateIdx", "]", ")", "\n", "print", "(", "'idxs: '", ",", "idxs", ")", "\n", "\n", "lastVectorField", "=", "currVectorField", ".", "clone", "(", ")", "\n", "\n", "if", "len", "(", "resultModels", ")", ">", "samplingRateIdx", ":", "\n", "            ", "self", ".", "net", ".", "load_state_dict", "(", "resultModels", "[", "samplingRateIdx", "]", "[", "'model_state'", "]", ")", "\n", "\n", "", "self", ".", "processPatchIdxNoOverlap", "(", "currVectorField", ",", "lastVectorField", ",", "idxs", ",", "samplingRateIdx", ",", "spacing", ",", "sampler", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "          ", "if", "samplingRate", "<", "1", ":", "\n", "            ", "if", "samplingRateIdx", "+", "1", "==", "len", "(", "samplingRates", ")", ":", "\n", "              ", "nextSamplingRate", "=", "1.0", "\n", "", "else", ":", "\n", "              ", "nextSamplingRate", "=", "samplingRates", "[", "samplingRateIdx", "+", "1", "]", "\n", "", "upSampleRate", "=", "nextSamplingRate", "/", "samplingRate", "\n", "currVectorField", "=", "currVectorField", "*", "upSampleRate", "\n", "currVectorField", "=", "Utils", ".", "sampleImg", "(", "currVectorField", ",", "upSampleRate", ")", "\n", "", "", "", "return", "currVectorField", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OneShotOptimise.OneShotOptimise.runOverlap": [[69, 113], ["enumerate", "print", "Utils.sampleImgData", "Utils.getPaddedData", "Utils.getPaddedData", "Sampler.Sampler.Sampler", "Sampler.Sampler.Sampler.getIndicesForOneShotSampling", "print", "Utils.sampleImg.clone", "Utils.sampleImg.fill_", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "OneShotOptimise.OneShotOptimise.processPatchIdxOverlap", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "Utils.sampleImg", "len"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.sampleImgData", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getPaddedData", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getPaddedData", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Sampler.Sampler.getIndicesForOneShotSampling", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OneShotOptimise.OneShotOptimise.processPatchIdxOverlap", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.sampleImg"], ["", "def", "runOverlap", "(", "self", ",", "spacing", ",", "samplingRates", ")", ":", "\n", "      ", "currVectorField", "=", "None", "\n", "for", "samplingRateIdx", ",", "samplingRate", "in", "enumerate", "(", "samplingRates", ")", ":", "\n", "        ", "print", "(", "'sampleRate: '", ",", "samplingRate", ")", "\n", "sampledImgData", ",", "sampledMaskData", ",", "sampledLabelData", ",", "_", "=", "Utils", ".", "sampleImgData", "(", "self", ".", "data", ",", "samplingRate", ")", "\n", "\n", "if", "currVectorField", "is", "None", ":", "\n", "          ", "currVectorField", "=", "torch", ".", "zeros", "(", "(", "sampledImgData", ".", "shape", "[", "0", "]", ",", "sampledImgData", ".", "shape", "[", "1", "]", "*", "3", ",", "sampledImgData", ".", "shape", "[", "2", "]", ",", "sampledImgData", ".", "shape", "[", "3", "]", ",", "sampledImgData", ".", "shape", "[", "4", "]", ")", ",", "device", "=", "\"cpu\"", ",", "requires_grad", "=", "False", ")", "\n", "\n", "", "sampledImgData", ",", "sampledMaskData", ",", "sampledLabelData", "=", "Utils", ".", "getPaddedData", "(", "sampledImgData", ",", "sampledMaskData", ",", "sampledLabelData", ",", "self", ".", "padVals", ")", "\n", "currVectorField", ",", "_", ",", "_", "=", "Utils", ".", "getPaddedData", "(", "currVectorField", ",", "None", ",", "None", ",", "self", ".", "padVals", ")", "\n", "\n", "sampler", "=", "Sampler", "(", "sampledMaskData", ",", "sampledImgData", ",", "sampledLabelData", ",", "self", ".", "userOpts", ".", "patchSize", "[", "samplingRateIdx", "]", ")", "\n", "idxs", "=", "sampler", ".", "getIndicesForOneShotSampling", "(", "self", ".", "samplerShift", ",", "self", ".", "userOpts", ".", "useMedianForSampling", "[", "samplingRateIdx", "]", ")", "\n", "\n", "print", "(", "'idxs: '", ",", "idxs", ")", "\n", "\n", "lastVectorField", "=", "currVectorField", ".", "clone", "(", ")", "\n", "currVectorField", ".", "fill_", "(", "0", ")", "\n", "indexArray", "=", "torch", ".", "zeros", "(", "(", "currVectorField", ".", "shape", "[", "2", "]", ",", "currVectorField", ".", "shape", "[", "3", "]", ",", "currVectorField", ".", "shape", "[", "4", "]", ")", ",", "requires_grad", "=", "False", ",", "device", "=", "\"cpu\"", ")", "\n", "\n", "self", ".", "processPatchIdxOverlap", "(", "currVectorField", ",", "indexArray", ",", "lastVectorField", ",", "idxs", ",", "samplingRateIdx", ",", "spacing", ",", "sampler", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "          ", "currVectorField", "[", ":", ",", ":", ",", "indexArray", "<", "1", "]", "=", "lastVectorField", "[", ":", ",", ":", ",", "indexArray", "<", "1", "]", "\n", "indexArray", "[", "indexArray", "<", "1", "]", "=", "1", "\n", "currVectorField", "=", "currVectorField", "/", "indexArray", "[", "None", ",", "None", ",", "...", "]", "\n", "\n", "indexArray", "=", "indexArray", "[", "self", ".", "padVals", "[", "0", "]", ":", "-", "self", ".", "padVals", "[", "0", "]", ",", "self", ".", "padVals", "[", "0", "]", ":", "-", "self", ".", "padVals", "[", "0", "]", ",", "self", ".", "padVals", "[", "0", "]", ":", "-", "self", ".", "padVals", "[", "0", "]", "]", "\n", "\n", "#           idxArray = sitk.GetImageFromArray(indexArray.cpu())", "\n", "#           dataloader.dataset.saveData(idxArray, self.userOpts.outputPath, 'idxArray.nrrd', 0, False)", "\n", "\n", "del", "indexArray", "\n", "currVectorField", "=", "currVectorField", "[", ":", ",", ":", ",", "self", ".", "padVals", "[", "0", "]", ":", "-", "self", ".", "padVals", "[", "0", "]", ",", "self", ".", "padVals", "[", "0", "]", ":", "-", "self", ".", "padVals", "[", "0", "]", ",", "self", ".", "padVals", "[", "0", "]", ":", "-", "self", ".", "padVals", "[", "0", "]", "]", "\n", "if", "samplingRate", "<", "1", ":", "\n", "            ", "if", "samplingRateIdx", "+", "1", "==", "len", "(", "samplingRates", ")", ":", "\n", "              ", "nextSamplingRate", "=", "1.0", "\n", "", "else", ":", "\n", "              ", "nextSamplingRate", "=", "samplingRates", "[", "samplingRateIdx", "+", "1", "]", "\n", "", "upSampleRate", "=", "nextSamplingRate", "/", "samplingRate", "\n", "currVectorField", "=", "currVectorField", "*", "upSampleRate", "\n", "currVectorField", "=", "Utils", ".", "sampleImg", "(", "currVectorField", ",", "upSampleRate", ")", "\n", "", "", "", "return", "currVectorField", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OneShotOptimise.OneShotOptimise.run": [[114, 123], ["torch.Adam", "torch.Adam", "NetOptimizer.NetOptimizer", "OneShotOptimise.OneShotOptimise.net.parameters", "OneShotOptimise.OneShotOptimise.runOverlap", "OneShotOptimise.OneShotOptimise.runNoOverlap"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OneShotOptimise.OneShotOptimise.runOverlap", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OneShotOptimise.OneShotOptimise.runNoOverlap"], ["", "def", "run", "(", "self", ",", "net", ",", "data", ",", "spacing", ",", "samplingRates", ",", "resultModels", "=", "[", "]", ")", ":", "\n", "      ", "self", ".", "net", "=", "net", "\n", "self", ".", "data", "=", "data", "\n", "optimizer", "=", "optim", ".", "Adam", "(", "self", ".", "net", ".", "parameters", "(", ")", ",", "amsgrad", "=", "True", ")", "\n", "self", ".", "netOptim", "=", "NetOptimizer", ".", "NetOptimizer", "(", "self", ".", "net", ",", "data", "[", "'image'", "]", ".", "shape", "[", "1", "]", "*", "3", ",", "optimizer", ",", "self", ".", "userOpts", ")", "\n", "if", "self", ".", "userOpts", ".", "overlappingPatches", ":", "\n", "        ", "return", "self", ".", "runOverlap", "(", "spacing", ",", "samplingRates", ")", "\n", "", "else", ":", "\n", "        ", "return", "self", ".", "runNoOverlap", "(", "spacing", ",", "samplingRates", ",", "resultModels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OneShotOptimise.OneShotOptimise.processPatchIdxNoOverlap": [[124, 170], ["enumerate", "print", "torch.Adam", "torch.Adam", "OneShotOptimise.OneShotOptimise.netOptim.setOptimizer", "sampler.getSubSample", "imgDataToWork.to.to.to", "OneShotOptimise.OneShotOptimise.getSubCurrDefFieldIdx", "currVectorField[].to", "lastVectorField[].to", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "LossFunctions.LossFunctions", "currVectorFieldGPU[].to", "OneShotOptimise.OneShotOptimise.net.parameters", "labelDataToWork.to.to.to", "OneShotOptimise.OneShotOptimise.netOptim.optimizeNet", "loss.detach", "crossCorr.detach", "diceLoss.detach", "smoothnessDF.detach", "cycleLoss.detach", "OneShotOptimise.OneShotOptimise.printParameterInfo", "torch.ones.mean", "torch.ones.mean", "OneShotOptimise.OneShotOptimise.logFile.write", "OneShotOptimise.OneShotOptimise.logFile.flush", "OneShotOptimise.OneShotOptimise.iterationValidation", "len", "str", "str", "float"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.NetOptimizer.NetOptimizer.setOptimizer", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Sampler.Sampler.getSubSample", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Optimise.Optimise.getSubCurrDefFieldIdx", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.NetOptimizer.NetOptimizer.optimizeNet", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OptimizeCaller.OptimizeCaller.printParameterInfo"], ["", "", "def", "processPatchIdxNoOverlap", "(", "self", ",", "currVectorField", ",", "lastVectorField", ",", "idxs", ",", "samplingRateIdx", ",", "spacing", ",", "sampler", ")", ":", "\n", "      ", "for", "patchIdx", ",", "idx", "in", "enumerate", "(", "idxs", ")", ":", "\n", "        ", "print", "(", "'register patch %i out of %i patches.'", "%", "(", "patchIdx", ",", "len", "(", "idxs", ")", ")", ")", "\n", "optimizer", "=", "optim", ".", "Adam", "(", "self", ".", "net", ".", "parameters", "(", ")", ",", "amsgrad", "=", "True", ")", "\n", "self", ".", "netOptim", ".", "setOptimizer", "(", "optimizer", ")", "\n", "\n", "imgDataToWork", ",", "labelDataToWork", "=", "sampler", ".", "getSubSample", "(", "idx", ",", "self", ".", "userOpts", ".", "normImgPatches", ")", "\n", "imgDataToWork", "=", "imgDataToWork", ".", "to", "(", "self", ".", "userOpts", ".", "device", ")", "\n", "if", "labelDataToWork", "is", "not", "None", ":", "\n", "          ", "labelDataToWork", "=", "labelDataToWork", ".", "to", "(", "self", ".", "userOpts", ".", "device", ")", "\n", "\n", "", "currDefFieldIdx", ",", "offset", "=", "self", ".", "getSubCurrDefFieldIdx", "(", "currVectorField", ",", "idx", ")", "\n", "currVectorFieldGPU", "=", "currVectorField", "[", ":", ",", ":", ",", "currDefFieldIdx", "[", "0", "]", ":", "currDefFieldIdx", "[", "0", "]", "+", "currDefFieldIdx", "[", "3", "]", ",", "currDefFieldIdx", "[", "1", "]", ":", "currDefFieldIdx", "[", "1", "]", "+", "currDefFieldIdx", "[", "4", "]", ",", "currDefFieldIdx", "[", "2", "]", ":", "currDefFieldIdx", "[", "2", "]", "+", "currDefFieldIdx", "[", "5", "]", "]", ".", "to", "(", "device", "=", "self", ".", "userOpts", ".", "device", ")", "\n", "lastVectorFieldGPU", "=", "lastVectorField", "[", ":", ",", ":", ",", "currDefFieldIdx", "[", "0", "]", ":", "currDefFieldIdx", "[", "0", "]", "+", "currDefFieldIdx", "[", "3", "]", ",", "currDefFieldIdx", "[", "1", "]", ":", "currDefFieldIdx", "[", "1", "]", "+", "currDefFieldIdx", "[", "4", "]", ",", "currDefFieldIdx", "[", "2", "]", ":", "currDefFieldIdx", "[", "2", "]", "+", "currDefFieldIdx", "[", "5", "]", "]", ".", "to", "(", "device", "=", "self", ".", "userOpts", ".", "device", ")", "\n", "\n", "patchIteration", "=", "0", "\n", "lossCounter", "=", "0", "\n", "runningLoss", "=", "torch", ".", "ones", "(", "10", ",", "device", "=", "self", ".", "userOpts", ".", "device", ")", "\n", "runningCC", "=", "torch", ".", "ones", "(", "10", ",", "device", "=", "self", ".", "userOpts", ".", "device", ")", "\n", "runningDSC", "=", "torch", ".", "ones", "(", "10", ",", "device", "=", "self", ".", "userOpts", ".", "device", ")", "\n", "runningSmmoth", "=", "torch", ".", "ones", "(", "10", ",", "device", "=", "self", ".", "userOpts", ".", "device", ")", "\n", "runningCycle", "=", "torch", ".", "ones", "(", "10", ",", "device", "=", "self", ".", "userOpts", ".", "device", ")", "\n", "\n", "lossCalculator", "=", "lf", ".", "LossFunctions", "(", "imgDataToWork", ",", "spacing", ")", "\n", "\n", "while", "True", ":", "\n", "          ", "[", "loss", ",", "crossCorr", ",", "diceLoss", ",", "smoothnessDF", ",", "cycleLoss", "]", "=", "self", ".", "netOptim", ".", "optimizeNet", "(", "imgDataToWork", ",", "lossCalculator", ",", "labelDataToWork", ",", "lastVectorFieldGPU", ",", "currVectorFieldGPU", ",", "offset", ",", "samplingRateIdx", ",", "False", ")", "\n", "if", "False", ":", "\n", "            ", "self", ".", "printParameterInfo", "(", ")", "\n", "", "detachLoss", "=", "loss", ".", "detach", "(", ")", "\n", "runningLoss", "[", "lossCounter", "]", "=", "detachLoss", "\n", "runningCC", "[", "lossCounter", "]", "=", "crossCorr", ".", "detach", "(", ")", "\n", "runningDSC", "[", "lossCounter", "]", "=", "diceLoss", ".", "detach", "(", ")", "\n", "runningSmmoth", "[", "lossCounter", "]", "=", "smoothnessDF", ".", "detach", "(", ")", "\n", "runningCycle", "[", "lossCounter", "]", "=", "cycleLoss", ".", "detach", "(", ")", "\n", "if", "lossCounter", "==", "9", ":", "\n", "            ", "meanLoss", "=", "runningLoss", ".", "mean", "(", ")", "\n", "self", ".", "logFile", ".", "write", "(", "str", "(", "float", "(", "meanLoss", ")", ")", "+", "';'", "+", "str", "(", "patchIdx", ")", "+", "'\\n'", ")", "\n", "self", ".", "logFile", ".", "flush", "(", ")", "\n", "lossCounter", "=", "0", "\n", "if", "(", "self", ".", "iterationValidation", "(", "detachLoss", ",", "meanLoss", ",", "patchIteration", ",", "self", ".", "userOpts", ".", "numberOfEpochs", "[", "samplingRateIdx", "]", ",", "0", ",", "self", ".", "userOpts", ".", "lossTollerance", ")", ")", ":", "\n", "              ", "break", "\n", "", "", "else", ":", "\n", "            ", "lossCounter", "+=", "1", "\n", "", "patchIteration", "+=", "1", "\n", "", "currVectorField", "[", ":", ",", ":", ",", "idx", "[", "0", "]", ":", "idx", "[", "0", "]", "+", "imgDataToWork", ".", "shape", "[", "2", "]", ",", "idx", "[", "1", "]", ":", "idx", "[", "1", "]", "+", "imgDataToWork", ".", "shape", "[", "3", "]", ",", "idx", "[", "2", "]", ":", "idx", "[", "2", "]", "+", "imgDataToWork", ".", "shape", "[", "4", "]", "]", "=", "currVectorFieldGPU", "[", ":", ",", ":", ",", "offset", "[", "0", "]", ":", "offset", "[", "0", "]", "+", "imgDataToWork", ".", "shape", "[", "2", "]", ",", "offset", "[", "1", "]", ":", "offset", "[", "1", "]", "+", "imgDataToWork", ".", "shape", "[", "3", "]", ",", "offset", "[", "2", "]", ":", "offset", "[", "2", "]", "+", "imgDataToWork", ".", "shape", "[", "4", "]", "]", ".", "to", "(", "\"cpu\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OneShotOptimise.OneShotOptimise.processPatchIdxOverlap": [[171, 225], ["enumerate", "print", "torch.Adam", "torch.Adam", "OneShotOptimise.OneShotOptimise.netOptim.setOptimizer", "sampler.getSubSample", "imgDataToWork.to.to.to", "OneShotOptimise.OneShotOptimise.getSubCurrDefFieldIdx", "currVectorField[].to", "indexArray[].to", "lastVectorField[].to", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "LossFunctions.LossFunctions", "currVectorFieldGPU[].to", "OneShotOptimise.OneShotOptimise.net.parameters", "labelDataToWork.to.to.to", "OneShotOptimise.OneShotOptimise.netOptim.optimizeNet", "loss.detach", "crossCorr.detach", "diceLoss.detach", "smoothnessDF.detach", "cycleLoss.detach", "OneShotOptimise.OneShotOptimise.printParameterInfo", "torch.ones.mean", "torch.ones.mean", "OneShotOptimise.OneShotOptimise.logFile.write", "OneShotOptimise.OneShotOptimise.logFile.flush", "OneShotOptimise.OneShotOptimise.iterationValidation", "len", "str", "str", "float"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.NetOptimizer.NetOptimizer.setOptimizer", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Sampler.Sampler.getSubSample", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Optimise.Optimise.getSubCurrDefFieldIdx", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.NetOptimizer.NetOptimizer.optimizeNet", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OptimizeCaller.OptimizeCaller.printParameterInfo"], ["", "", "def", "processPatchIdxOverlap", "(", "self", ",", "currVectorField", ",", "indexArray", ",", "lastVectorField", ",", "idxs", ",", "samplingRateIdx", ",", "spacing", ",", "sampler", ")", ":", "\n", "      ", "for", "patchIdx", ",", "idx", "in", "enumerate", "(", "idxs", ")", ":", "\n", "        ", "print", "(", "'register patch %i out of %i patches.'", "%", "(", "patchIdx", ",", "len", "(", "idxs", ")", ")", ")", "\n", "optimizer", "=", "optim", ".", "Adam", "(", "self", ".", "net", ".", "parameters", "(", ")", ",", "amsgrad", "=", "True", ")", "\n", "self", ".", "netOptim", ".", "setOptimizer", "(", "optimizer", ")", "\n", "\n", "imgDataToWork", ",", "labelDataToWork", "=", "sampler", ".", "getSubSample", "(", "idx", ",", "self", ".", "userOpts", ".", "normImgPatches", ")", "\n", "imgDataToWork", "=", "imgDataToWork", ".", "to", "(", "self", ".", "userOpts", ".", "device", ")", "\n", "if", "labelDataToWork", "is", "not", "None", ":", "\n", "          ", "labelDataToWork", "=", "labelDataToWork", ".", "to", "(", "self", ".", "userOpts", ".", "device", ")", "\n", "\n", "", "currDefFieldIdx", ",", "offset", "=", "self", ".", "getSubCurrDefFieldIdx", "(", "currVectorField", ",", "idx", ")", "\n", "currVectorFieldGPU", "=", "currVectorField", "[", ":", ",", ":", ",", "currDefFieldIdx", "[", "0", "]", ":", "currDefFieldIdx", "[", "0", "]", "+", "currDefFieldIdx", "[", "3", "]", ",", "currDefFieldIdx", "[", "1", "]", ":", "currDefFieldIdx", "[", "1", "]", "+", "currDefFieldIdx", "[", "4", "]", ",", "currDefFieldIdx", "[", "2", "]", ":", "currDefFieldIdx", "[", "2", "]", "+", "currDefFieldIdx", "[", "5", "]", "]", ".", "to", "(", "device", "=", "self", ".", "userOpts", ".", "device", ")", "\n", "idxGPU", "=", "indexArray", "[", "currDefFieldIdx", "[", "0", "]", ":", "currDefFieldIdx", "[", "0", "]", "+", "currDefFieldIdx", "[", "3", "]", ",", "currDefFieldIdx", "[", "1", "]", ":", "currDefFieldIdx", "[", "1", "]", "+", "currDefFieldIdx", "[", "4", "]", ",", "currDefFieldIdx", "[", "2", "]", ":", "currDefFieldIdx", "[", "2", "]", "+", "currDefFieldIdx", "[", "5", "]", "]", ".", "to", "(", "device", "=", "self", ".", "userOpts", ".", "device", ")", "\n", "idxGPU", "[", "idxGPU", "<", "1", "]", "=", "1", "\n", "currVectorFieldGPU", "=", "currVectorFieldGPU", "/", "idxGPU", "[", "None", ",", "None", ",", "...", "]", "\n", "lastVectorFieldGPU", "=", "lastVectorField", "[", ":", ",", ":", ",", "currDefFieldIdx", "[", "0", "]", ":", "currDefFieldIdx", "[", "0", "]", "+", "currDefFieldIdx", "[", "3", "]", ",", "currDefFieldIdx", "[", "1", "]", ":", "currDefFieldIdx", "[", "1", "]", "+", "currDefFieldIdx", "[", "4", "]", ",", "currDefFieldIdx", "[", "2", "]", ":", "currDefFieldIdx", "[", "2", "]", "+", "currDefFieldIdx", "[", "5", "]", "]", ".", "to", "(", "device", "=", "self", ".", "userOpts", ".", "device", ")", "\n", "\n", "patchIteration", "=", "0", "\n", "lossCounter", "=", "0", "\n", "runningLoss", "=", "torch", ".", "ones", "(", "10", ",", "device", "=", "self", ".", "userOpts", ".", "device", ")", "\n", "runningCC", "=", "torch", ".", "ones", "(", "10", ",", "device", "=", "self", ".", "userOpts", ".", "device", ")", "\n", "runningDSC", "=", "torch", ".", "ones", "(", "10", ",", "device", "=", "self", ".", "userOpts", ".", "device", ")", "\n", "runningSmmoth", "=", "torch", ".", "ones", "(", "10", ",", "device", "=", "self", ".", "userOpts", ".", "device", ")", "\n", "runningCycle", "=", "torch", ".", "ones", "(", "10", ",", "device", "=", "self", ".", "userOpts", ".", "device", ")", "\n", "\n", "lossCalculator", "=", "lf", ".", "LossFunctions", "(", "imgDataToWork", ",", "spacing", ")", "\n", "\n", "while", "True", ":", "\n", "          ", "[", "loss", ",", "crossCorr", ",", "diceLoss", ",", "smoothnessDF", ",", "cycleLoss", "]", "=", "self", ".", "netOptim", ".", "optimizeNet", "(", "imgDataToWork", ",", "lossCalculator", ",", "labelDataToWork", ",", "lastVectorFieldGPU", ",", "currVectorFieldGPU", ",", "offset", ",", "samplingRateIdx", ",", "False", ")", "\n", "if", "False", ":", "\n", "            ", "self", ".", "printParameterInfo", "(", ")", "\n", "", "detachLoss", "=", "loss", ".", "detach", "(", ")", "\n", "runningLoss", "[", "lossCounter", "]", "=", "detachLoss", "\n", "runningCC", "[", "lossCounter", "]", "=", "crossCorr", ".", "detach", "(", ")", "\n", "runningDSC", "[", "lossCounter", "]", "=", "diceLoss", ".", "detach", "(", ")", "\n", "runningSmmoth", "[", "lossCounter", "]", "=", "smoothnessDF", ".", "detach", "(", ")", "\n", "runningCycle", "[", "lossCounter", "]", "=", "cycleLoss", ".", "detach", "(", ")", "\n", "if", "lossCounter", "==", "9", ":", "\n", "            ", "meanLoss", "=", "runningLoss", ".", "mean", "(", ")", "\n", "self", ".", "logFile", ".", "write", "(", "str", "(", "float", "(", "meanLoss", ")", ")", "+", "';'", "+", "str", "(", "patchIdx", ")", "+", "'\\n'", ")", "\n", "self", ".", "logFile", ".", "flush", "(", ")", "\n", "lossCounter", "=", "0", "\n", "if", "(", "self", ".", "iterationValidation", "(", "detachLoss", ",", "meanLoss", ",", "patchIteration", ",", "self", ".", "userOpts", ".", "numberOfEpochs", "[", "samplingRateIdx", "]", ",", "0", ",", "self", ".", "userOpts", ".", "lossTollerance", ")", ")", ":", "\n", "              ", "break", "\n", "", "", "else", ":", "\n", "            ", "lossCounter", "+=", "1", "\n", "", "patchIteration", "+=", "1", "\n", "", "currVectorField", "[", ":", ",", ":", ",", "idx", "[", "0", "]", "+", "self", ".", "patchShift", ":", "idx", "[", "0", "]", "+", "imgDataToWork", ".", "shape", "[", "2", "]", "-", "self", ".", "patchShift", ",", "\n", "idx", "[", "1", "]", "+", "self", ".", "patchShift", ":", "idx", "[", "1", "]", "+", "imgDataToWork", ".", "shape", "[", "3", "]", "-", "self", ".", "patchShift", ",", "\n", "idx", "[", "2", "]", "+", "self", ".", "patchShift", ":", "idx", "[", "2", "]", "+", "imgDataToWork", ".", "shape", "[", "4", "]", "-", "self", ".", "patchShift", "]", "+=", "currVectorFieldGPU", "[", ":", ",", ":", ",", "offset", "[", "0", "]", "+", "self", ".", "patchShift", ":", "offset", "[", "0", "]", "+", "imgDataToWork", ".", "shape", "[", "2", "]", "-", "self", ".", "patchShift", ",", "offset", "[", "1", "]", "+", "self", ".", "patchShift", ":", "offset", "[", "1", "]", "+", "imgDataToWork", ".", "shape", "[", "3", "]", "-", "self", ".", "patchShift", ",", "offset", "[", "2", "]", "+", "self", ".", "patchShift", ":", "offset", "[", "2", "]", "+", "imgDataToWork", ".", "shape", "[", "4", "]", "-", "self", ".", "patchShift", "]", ".", "to", "(", "\"cpu\"", ")", "\n", "indexArray", "[", "idx", "[", "0", "]", "+", "self", ".", "patchShift", ":", "idx", "[", "0", "]", "+", "imgDataToWork", ".", "shape", "[", "2", "]", "-", "self", ".", "patchShift", ",", "\n", "idx", "[", "1", "]", "+", "self", ".", "patchShift", ":", "idx", "[", "1", "]", "+", "imgDataToWork", ".", "shape", "[", "3", "]", "-", "self", ".", "patchShift", ",", "\n", "idx", "[", "2", "]", "+", "self", ".", "patchShift", ":", "idx", "[", "2", "]", "+", "imgDataToWork", ".", "shape", "[", "4", "]", "-", "self", ".", "patchShift", "]", "+=", "1", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Sampler.Sampler.__init__": [[8, 18], ["torch.sum", "Utils.getMaxIdxs", "Utils.getPatchSize", "torch.ones.dim", "imgData.dim", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getMaxIdxs", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getPatchSize"], ["  ", "def", "__init__", "(", "self", ",", "maskData", ",", "imgData", ",", "labelData", ",", "imgPatchSize", ")", ":", "\n", "\n", "    ", "if", "(", "maskData", ".", "dim", "(", ")", "!=", "imgData", ".", "dim", "(", ")", ")", ":", "\n", "      ", "maskData", "=", "torch", ".", "ones", "(", "imgData", ".", "shape", ",", "dtype", "=", "torch", ".", "int8", ")", "\n", "\n", "", "self", ".", "maskChanSum", "=", "torch", ".", "sum", "(", "maskData", ",", "1", ")", "\n", "self", ".", "imgData", "=", "imgData", "\n", "self", ".", "labelData", "=", "labelData", "\n", "self", ".", "maxIdxs", "=", "getMaxIdxs", "(", "imgData", ".", "shape", ",", "imgPatchSize", ")", "\n", "self", ".", "patchSizes", "=", "getPatchSize", "(", "imgData", ".", "shape", ",", "imgPatchSize", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Sampler.Sampler.getRandomSubSamples": [[19, 48], ["torch.empty", "numpy.random.randint", "range", "Sampler.Sampler.labelData.dim", "Sampler.Sampler.imgData.dim", "torch.empty", "len", "usedIdx.append", "Sampler.Sampler.labelData.dim", "Sampler.Sampler.imgData.dim", "torch.Tensor", "Utils.normalizeImg", "Sampler.Sampler.labelData.dim", "Sampler.Sampler.imgData.dim"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.normalizeImg"], ["", "def", "getRandomSubSamples", "(", "self", ",", "numberofSamplesPerRun", ",", "idxs", ",", "normImgPatch", "=", "False", ")", ":", "\n", "\n", "    ", "imgDataNew", "=", "torch", ".", "empty", "(", "(", "numberofSamplesPerRun", ",", "self", ".", "imgData", ".", "shape", "[", "1", "]", ",", "self", ".", "patchSizes", "[", "0", "]", ",", "self", ".", "patchSizes", "[", "1", "]", ",", "self", ".", "patchSizes", "[", "2", "]", ")", ",", "requires_grad", "=", "False", ")", "\n", "if", "(", "self", ".", "labelData", ".", "dim", "(", ")", "==", "self", ".", "imgData", ".", "dim", "(", ")", ")", ":", "\n", "      ", "labelDataNew", "=", "torch", ".", "empty", "(", "(", "numberofSamplesPerRun", ",", "self", ".", "imgData", ".", "shape", "[", "1", "]", ",", "self", ".", "patchSizes", "[", "0", "]", ",", "self", ".", "patchSizes", "[", "1", "]", ",", "self", ".", "patchSizes", "[", "2", "]", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "", "randSampleIdxs", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "len", "(", "idxs", "[", "0", "]", ")", ",", "(", "numberofSamplesPerRun", ",", ")", ")", "\n", "usedIdx", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "0", ",", "numberofSamplesPerRun", ")", ":", "\n", "      ", "idx0", "=", "idxs", "[", "0", "]", "[", "randSampleIdxs", "[", "j", "]", "]", "\n", "idx2", "=", "idxs", "[", "1", "]", "[", "randSampleIdxs", "[", "j", "]", "]", "\n", "idx3", "=", "idxs", "[", "2", "]", "[", "randSampleIdxs", "[", "j", "]", "]", "\n", "idx4", "=", "idxs", "[", "3", "]", "[", "randSampleIdxs", "[", "j", "]", "]", "\n", "usedIdx", ".", "append", "(", "(", "idx2", ",", "idx3", ",", "idx4", ",", "self", ".", "patchSizes", "[", "0", "]", ",", "self", ".", "patchSizes", "[", "1", "]", ",", "self", ".", "patchSizes", "[", "2", "]", ")", ")", "\n", "imgPatch", "=", "self", ".", "imgData", "[", "idx0", ",", ":", ",", "idx2", ":", "idx2", "+", "self", ".", "patchSizes", "[", "0", "]", ",", "idx3", ":", "idx3", "+", "self", ".", "patchSizes", "[", "1", "]", ",", "idx4", ":", "idx4", "+", "self", ".", "patchSizes", "[", "2", "]", "]", "\n", "if", "normImgPatch", ":", "\n", "        ", "imgPatch", "=", "normalizeImg", "(", "imgPatch", ")", "\n", "", "imgDataNew", "[", "j", ",", "]", "=", "imgPatch", "\n", "#     indexArrayTest[idx2:idx2 + patchSizes[0], idx3:idx3 + patchSizes[1], idx4:idx4 + patchSizes[2]] += 1", "\n", "if", "(", "self", ".", "labelData", ".", "dim", "(", ")", "==", "self", ".", "imgData", ".", "dim", "(", ")", ")", ":", "\n", "        ", "labelDataNew", "[", "j", ",", "]", "=", "self", ".", "labelData", "[", "idx0", ",", ":", ",", "idx2", ":", "idx2", "+", "self", ".", "patchSizes", "[", "0", "]", ",", "idx3", ":", "idx3", "+", "self", ".", "patchSizes", "[", "1", "]", ",", "idx4", ":", "idx4", "+", "self", ".", "patchSizes", "[", "2", "]", "]", "\n", "\n", "", "", "imgDataToWork", "=", "imgDataNew", "\n", "if", "(", "self", ".", "labelData", ".", "dim", "(", ")", "==", "self", ".", "imgData", ".", "dim", "(", ")", ")", ":", "\n", "      ", "labelDataToWork", "=", "labelDataNew", "\n", "", "else", ":", "\n", "      ", "labelDataToWork", "=", "torch", ".", "Tensor", "(", ")", ";", "\n", "\n", "", "return", "(", "imgDataToWork", ",", "labelDataToWork", ",", "usedIdx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Sampler.Sampler.getRandomSubSamplesIdxs": [[49, 59], ["numpy.random.randint", "range", "len", "usedIdx.append"], "methods", ["None"], ["", "def", "getRandomSubSamplesIdxs", "(", "self", ",", "numberofSamplesPerRun", ",", "idxs", ")", ":", "\n", "\n", "    ", "randSampleIdxs", "=", "np", ".", "random", ".", "randint", "(", "0", ",", "len", "(", "idxs", "[", "0", "]", ")", ",", "(", "numberofSamplesPerRun", ",", ")", ")", "\n", "usedIdx", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "0", ",", "numberofSamplesPerRun", ")", ":", "\n", "      ", "idx2", "=", "idxs", "[", "1", "]", "[", "randSampleIdxs", "[", "j", "]", "]", "\n", "idx3", "=", "idxs", "[", "2", "]", "[", "randSampleIdxs", "[", "j", "]", "]", "\n", "idx4", "=", "idxs", "[", "3", "]", "[", "randSampleIdxs", "[", "j", "]", "]", "\n", "usedIdx", ".", "append", "(", "(", "idx2", ",", "idx3", ",", "idx4", ",", "self", ".", "patchSizes", "[", "0", "]", ",", "self", ".", "patchSizes", "[", "1", "]", ",", "self", ".", "patchSizes", "[", "2", "]", ")", ")", "\n", "", "return", "usedIdx", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Sampler.Sampler.getSubSample": [[60, 68], ["torch.empty", "Utils.normalizeImg", "Sampler.Sampler.labelData.dim", "Sampler.Sampler.imgData.dim"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.normalizeImg"], ["", "def", "getSubSample", "(", "self", ",", "idx", ",", "normImgPatch", ")", ":", "\n", "      ", "imgPatch", "=", "self", ".", "imgData", "[", ":", ",", ":", ",", "idx", "[", "0", "]", ":", "idx", "[", "0", "]", "+", "idx", "[", "3", "]", ",", "idx", "[", "1", "]", ":", "idx", "[", "1", "]", "+", "idx", "[", "4", "]", ",", "idx", "[", "2", "]", ":", "idx", "[", "2", "]", "+", "idx", "[", "5", "]", "]", "\n", "labelData", "=", "torch", ".", "empty", "(", "(", "1", ",", "self", ".", "imgData", ".", "shape", "[", "1", "]", ",", "idx", "[", "3", "]", ",", "idx", "[", "4", "]", ",", "idx", "[", "5", "]", ")", ",", "requires_grad", "=", "False", ")", "\n", "if", "normImgPatch", ":", "\n", "        ", "imgPatch", "=", "normalizeImg", "(", "imgPatch", ")", "\n", "", "if", "(", "self", ".", "labelData", ".", "dim", "(", ")", "==", "self", ".", "imgData", ".", "dim", "(", ")", ")", ":", "\n", "        ", "labelData", "=", "self", ".", "labelData", "[", ":", ",", ":", ",", "idx", "[", "0", "]", ":", "idx", "[", "0", "]", "+", "idx", "[", "3", "]", ",", "idx", "[", "1", "]", ":", "idx", "[", "1", "]", "+", "idx", "[", "4", "]", ",", "idx", "[", "2", "]", ":", "idx", "[", "2", "]", "+", "idx", "[", "5", "]", "]", "\n", "", "return", "(", "imgPatch", ",", "labelData", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Sampler.Sampler.getSubSampleImg": [[69, 74], ["Utils.normalizeImg"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.normalizeImg"], ["", "def", "getSubSampleImg", "(", "self", ",", "idx", ",", "normImgPatch", ")", ":", "\n", "      ", "imgPatch", "=", "self", ".", "imgData", "[", ":", ",", ":", ",", "idx", "[", "0", "]", ":", "idx", "[", "0", "]", "+", "idx", "[", "3", "]", ",", "idx", "[", "1", "]", ":", "idx", "[", "1", "]", "+", "idx", "[", "4", "]", ",", "idx", "[", "2", "]", ":", "idx", "[", "2", "]", "+", "idx", "[", "5", "]", "]", "\n", "if", "normImgPatch", ":", "\n", "        ", "imgPatch", "=", "normalizeImg", "(", "imgPatch", ")", "\n", "", "return", "imgPatch", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Sampler.Sampler.getUniformlyDistributedSubsamples": [[75, 104], ["torch.empty", "numpy.arange", "Sampler.Sampler.labelData.dim", "Sampler.Sampler.imgData.dim", "torch.empty", "len", "Sampler.Sampler.labelData.dim", "Sampler.Sampler.imgData.dim", "torch.Tensor", "Utils.normalizeImg", "Sampler.Sampler.labelData.dim", "Sampler.Sampler.imgData.dim", "len", "len"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.normalizeImg"], ["", "def", "getUniformlyDistributedSubsamples", "(", "self", ",", "numberofSamplesPerRun", ",", "idxs", ",", "currIteration", ",", "normImgPatch", "=", "False", ")", ":", "\n", "\n", "    ", "startIdx", "=", "currIteration", "%", "numberofSamplesPerRun", "\n", "\n", "\n", "imgDataNew", "=", "torch", ".", "empty", "(", "(", "numberofSamplesPerRun", ",", "self", ".", "imgData", ".", "shape", "[", "1", "]", ",", "self", ".", "patchSizes", "[", "0", "]", ",", "self", ".", "patchSizes", "[", "1", "]", ",", "self", ".", "patchSizes", "[", "2", "]", ")", ",", "requires_grad", "=", "False", ")", "\n", "if", "(", "self", ".", "labelData", ".", "dim", "(", ")", "==", "self", ".", "imgData", ".", "dim", "(", ")", ")", ":", "\n", "      ", "labelDataNew", "=", "torch", ".", "empty", "(", "(", "numberofSamplesPerRun", ",", "self", ".", "imgData", ".", "shape", "[", "1", "]", ",", "self", ".", "patchSizes", "[", "0", "]", ",", "self", ".", "patchSizes", "[", "1", "]", ",", "self", ".", "patchSizes", "[", "2", "]", ")", ",", "requires_grad", "=", "False", ")", "\n", "\n", "", "iterationRange", "=", "np", ".", "arange", "(", "startIdx", ",", "startIdx", "+", "numberofSamplesPerRun", ")", "\n", "iterationRange", "[", "iterationRange", ">=", "len", "(", "idxs", ")", "]", "=", "iterationRange", "[", "iterationRange", ">=", "len", "(", "idxs", ")", "]", "-", "len", "(", "idxs", ")", "\n", "j", "=", "0", "\n", "for", "i", "in", "iterationRange", ":", "\n", "      ", "idx", "=", "idxs", "[", "i", "]", "\n", "imgPatch", "=", "self", ".", "imgData", "[", ":", ",", ":", ",", "idx", "[", "0", "]", ":", "idx", "[", "0", "]", "+", "idx", "[", "3", "]", ",", "idx", "[", "1", "]", ":", "idx", "[", "1", "]", "+", "idx", "[", "4", "]", ",", "idx", "[", "2", "]", ":", "idx", "[", "2", "]", "+", "idx", "[", "5", "]", "]", "\n", "if", "normImgPatch", ":", "\n", "        ", "imgPatch", "=", "normalizeImg", "(", "imgPatch", ")", "\n", "", "imgDataNew", "[", "j", ",", "]", "=", "imgPatch", "\n", "if", "(", "self", ".", "labelData", ".", "dim", "(", ")", "==", "self", ".", "imgData", ".", "dim", "(", ")", ")", ":", "\n", "        ", "labelDataNew", "[", "j", ",", "]", "=", "self", ".", "labelData", "[", ":", ",", ":", ",", "idx", "[", "0", "]", ":", "idx", "[", "0", "]", "+", "idx", "[", "3", "]", ",", "idx", "[", "1", "]", ":", "idx", "[", "1", "]", "+", "idx", "[", "4", "]", ",", "idx", "[", "2", "]", ":", "idx", "[", "2", "]", "+", "idx", "[", "5", "]", "]", "\n", "", "j", "=", "j", "+", "1", "\n", "\n", "", "imgDataToWork", "=", "imgDataNew", "\n", "if", "(", "self", ".", "labelData", ".", "dim", "(", ")", "==", "self", ".", "imgData", ".", "dim", "(", ")", ")", ":", "\n", "      ", "labelDataToWork", "=", "labelDataNew", "\n", "", "else", ":", "\n", "      ", "labelDataToWork", "=", "torch", ".", "Tensor", "(", ")", ";", "\n", "\n", "", "return", "(", "imgDataToWork", ",", "labelDataToWork", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Sampler.Sampler.getIndicesForRandomization": [[105, 112], ["numpy.where"], "methods", ["None"], ["", "def", "getIndicesForRandomization", "(", "self", ")", ":", "\n", "#we look in the middle of the patch whether it is zero or not, therefore we add half of the patchsize; helpful with high downsampling when patchsize is bigger than image", "\n", "    ", "maskChanSumCrop", "=", "self", ".", "maskChanSum", "[", ":", ",", "0", "+", "self", ".", "patchSizes", "[", "0", "]", "/", "2", ":", "self", ".", "maxIdxs", "[", "0", "]", "+", "self", ".", "patchSizes", "[", "0", "]", "/", "2", ",", "\n", "0", "+", "self", ".", "patchSizes", "[", "1", "]", "/", "2", ":", "self", ".", "maxIdxs", "[", "1", "]", "+", "self", ".", "patchSizes", "[", "1", "]", "/", "2", ",", "0", "+", "self", ".", "patchSizes", "[", "2", "]", "/", "2", ":", "self", ".", "maxIdxs", "[", "2", "]", "+", "self", ".", "patchSizes", "[", "2", "]", "/", "2", "]", "\n", "idxs", "=", "np", ".", "where", "(", "maskChanSumCrop", ">", "0", ")", "\n", "\n", "return", "idxs", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Sampler.Sampler.getIndicesForOneShotSampling": [[113, 116], ["Sampler.Sampler.getIndicesForUniformSamplingPathShiftNoOverlap", "int"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Sampler.Sampler.getIndicesForUniformSamplingPathShiftNoOverlap"], ["", "def", "getIndicesForOneShotSampling", "(", "self", ",", "minusShift", ",", "medianSampler", "=", "True", ")", ":", "\n", "    ", "patchSizeMinusShift", "=", "(", "self", ".", "patchSizes", "[", "0", "]", "-", "minusShift", "[", "0", "]", ",", "self", ".", "patchSizes", "[", "1", "]", "-", "minusShift", "[", "1", "]", ",", "self", ".", "patchSizes", "[", "2", "]", "-", "minusShift", "[", "2", "]", ")", "\n", "return", "self", ".", "getIndicesForUniformSamplingPathShiftNoOverlap", "(", "patchSizeMinusShift", ",", "useMedian", "=", "medianSampler", ",", "offset", "=", "int", "(", "minusShift", "[", "0", "]", "/", "2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Sampler.Sampler.getIndicesForOneShotSamplingOverlap": [[117, 120], ["Sampler.Sampler.getIndicesForUniformSamplingPathShift", "int"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Sampler.Sampler.getIndicesForUniformSamplingPathShift"], ["", "def", "getIndicesForOneShotSamplingOverlap", "(", "self", ",", "minusShift", ",", "medianSampler", "=", "True", ")", ":", "\n", "    ", "patchSizeMinusShift", "=", "(", "self", ".", "patchSizes", "[", "0", "]", "-", "minusShift", "[", "0", "]", ",", "self", ".", "patchSizes", "[", "1", "]", "-", "minusShift", "[", "1", "]", ",", "self", ".", "patchSizes", "[", "2", "]", "-", "minusShift", "[", "2", "]", ")", "\n", "return", "self", ".", "getIndicesForUniformSamplingPathShift", "(", "patchSizeMinusShift", ",", "useMedian", "=", "medianSampler", ",", "offset", "=", "int", "(", "minusShift", "[", "0", "]", "/", "2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Sampler.Sampler.iterateImgMedian": [[121, 131], ["range", "range", "range", "Sampler.Sampler.maskChanSum[].contiguous().median", "idxs.append", "Sampler.Sampler.maskChanSum[].contiguous"], "methods", ["None"], ["", "def", "iterateImgMedian", "(", "self", ",", "startidx", ",", "shift", ",", "offset", "=", "0", ")", ":", "\n", "    ", "idxs", "=", "[", "]", "\n", "for", "patchIdx0", "in", "range", "(", "startidx", "[", "0", "]", ",", "self", ".", "maxIdxs", "[", "0", "]", ",", "shift", "[", "0", "]", ")", ":", "\n", "      ", "for", "patchIdx1", "in", "range", "(", "startidx", "[", "1", "]", ",", "self", ".", "maxIdxs", "[", "1", "]", ",", "shift", "[", "1", "]", ")", ":", "\n", "        ", "for", "patchIdx2", "in", "range", "(", "startidx", "[", "2", "]", ",", "self", ".", "maxIdxs", "[", "2", "]", ",", "shift", "[", "2", "]", ")", ":", "\n", "          ", "if", "(", "self", ".", "maskChanSum", "[", ":", ",", "patchIdx0", "+", "offset", ":", "patchIdx0", "+", "self", ".", "patchSizes", "[", "0", "]", "-", "offset", ",", "\n", "patchIdx1", "+", "offset", ":", "patchIdx1", "+", "self", ".", "patchSizes", "[", "1", "]", "-", "offset", ",", "\n", "patchIdx2", "+", "offset", ":", "patchIdx2", "+", "self", ".", "patchSizes", "[", "2", "]", "-", "offset", "]", ".", "contiguous", "(", ")", ".", "median", "(", ")", ">", "0", ")", ":", "\n", "            ", "idxs", ".", "append", "(", "(", "patchIdx0", ",", "patchIdx1", ",", "patchIdx2", ",", "self", ".", "patchSizes", "[", "0", "]", ",", "self", ".", "patchSizes", "[", "1", "]", ",", "self", ".", "patchSizes", "[", "2", "]", ")", ")", "\n", "", "", "", "", "return", "idxs", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Sampler.Sampler.iterateImgSum": [[132, 142], ["range", "range", "range", "Sampler.Sampler.maskChanSum[].sum", "idxs.append"], "methods", ["None"], ["", "def", "iterateImgSum", "(", "self", ",", "startidx", ",", "shift", ",", "offset", "=", "0", ")", ":", "\n", "    ", "idxs", "=", "[", "]", "\n", "for", "patchIdx0", "in", "range", "(", "startidx", "[", "0", "]", ",", "self", ".", "maxIdxs", "[", "0", "]", ",", "shift", "[", "0", "]", ")", ":", "\n", "      ", "for", "patchIdx1", "in", "range", "(", "startidx", "[", "1", "]", ",", "self", ".", "maxIdxs", "[", "1", "]", ",", "shift", "[", "1", "]", ")", ":", "\n", "        ", "for", "patchIdx2", "in", "range", "(", "startidx", "[", "2", "]", ",", "self", ".", "maxIdxs", "[", "2", "]", ",", "shift", "[", "2", "]", ")", ":", "\n", "          ", "if", "(", "self", ".", "maskChanSum", "[", ":", ",", "patchIdx0", "+", "offset", ":", "patchIdx0", "+", "self", ".", "patchSizes", "[", "0", "]", "-", "offset", ",", "\n", "patchIdx1", "+", "offset", ":", "patchIdx1", "+", "self", ".", "patchSizes", "[", "1", "]", "-", "offset", ",", "\n", "patchIdx2", "+", "offset", ":", "patchIdx2", "+", "self", ".", "patchSizes", "[", "2", "]", "-", "offset", "]", ".", "sum", "(", ")", ">", "0", ")", ":", "\n", "            ", "idxs", ".", "append", "(", "(", "patchIdx0", ",", "patchIdx1", ",", "patchIdx2", ",", "self", ".", "patchSizes", "[", "0", "]", ",", "self", ".", "patchSizes", "[", "1", "]", ",", "self", ".", "patchSizes", "[", "2", "]", ")", ")", "\n", "", "", "", "", "return", "idxs", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Sampler.Sampler.iterateImg": [[143, 150], ["range", "range", "range", "idxs.append"], "methods", ["None"], ["", "def", "iterateImg", "(", "self", ",", "startidx", ",", "shift", ",", "offset", "=", "0", ")", ":", "\n", "    ", "idxs", "=", "[", "]", "\n", "for", "patchIdx0", "in", "range", "(", "startidx", "[", "0", "]", ",", "self", ".", "maxIdxs", "[", "0", "]", ",", "shift", "[", "0", "]", ")", ":", "\n", "      ", "for", "patchIdx1", "in", "range", "(", "startidx", "[", "1", "]", ",", "self", ".", "maxIdxs", "[", "1", "]", ",", "shift", "[", "1", "]", ")", ":", "\n", "        ", "for", "patchIdx2", "in", "range", "(", "startidx", "[", "2", "]", ",", "self", ".", "maxIdxs", "[", "2", "]", ",", "shift", "[", "2", "]", ")", ":", "\n", "          ", "idxs", ".", "append", "(", "(", "patchIdx0", ",", "patchIdx1", ",", "patchIdx2", ",", "self", ".", "patchSizes", "[", "0", "]", ",", "self", ".", "patchSizes", "[", "1", "]", ",", "self", ".", "patchSizes", "[", "2", "]", ")", ")", "\n", "", "", "", "return", "idxs", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Sampler.Sampler.getIndicesForUniformSamplingPathShiftNoOverlap": [[152, 217], ["iterateMethod", "Sampler.Sampler.getLeftovers", "list", "list", "Sampler.Sampler.getNextPatchSize", "Utils.getMaxIdxs", "Sampler.Sampler.getNextPatchSize", "Utils.getMaxIdxs", "Sampler.Sampler.getNextPatchSize", "Utils.getMaxIdxs", "iterateMethod", "Sampler.Sampler.getNextPatchSize", "Utils.getMaxIdxs", "iterateMethod", "Sampler.Sampler.getNextPatchSize", "Utils.getMaxIdxs", "iterateMethod", "Sampler.Sampler.getNextPatchSize", "Utils.getMaxIdxs", "iterateMethod", "Sampler.Sampler.getNextPatchSize", "Utils.getMaxIdxs", "iterateMethod", "iterateMethod", "iterateMethod"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Sampler.Sampler.getLeftovers", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Sampler.Sampler.getNextPatchSize", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getMaxIdxs", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Sampler.Sampler.getNextPatchSize", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getMaxIdxs", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Sampler.Sampler.getNextPatchSize", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getMaxIdxs", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Sampler.Sampler.getNextPatchSize", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getMaxIdxs", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Sampler.Sampler.getNextPatchSize", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getMaxIdxs", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Sampler.Sampler.getNextPatchSize", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getMaxIdxs", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Sampler.Sampler.getNextPatchSize", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getMaxIdxs"], ["", "def", "getIndicesForUniformSamplingPathShiftNoOverlap", "(", "self", ",", "patchShift", ",", "useMedian", "=", "True", ",", "offset", "=", "0", ")", ":", "\n", "    ", "imgShape", "=", "self", ".", "imgData", ".", "shape", "\n", "\n", "if", "useMedian", "is", "not", "None", ":", "\n", "      ", "if", "useMedian", ":", "\n", "        ", "iterateMethod", "=", "self", ".", "iterateImgMedian", "\n", "", "else", ":", "\n", "        ", "iterateMethod", "=", "self", ".", "iterateImgSum", "\n", "", "", "else", ":", "\n", "      ", "iterateMethod", "=", "self", ".", "iterateImg", "\n", "\n", "", "idxs", "=", "iterateMethod", "(", "(", "0", ",", "0", ",", "0", ")", ",", "patchShift", ",", "offset", ")", "\n", "\n", "leftover0", ",", "leftover1", ",", "leftover2", "=", "self", ".", "getLeftovers", "(", "imgShape", ",", "patchShift", ")", "\n", "\n", "oldPatchSize", "=", "list", "(", "self", ".", "patchSizes", ")", "\n", "if", "leftover0", ">", "0", ":", "\n", "\n", "      ", "self", ".", "patchSizes", "[", "0", "]", "=", "self", ".", "getNextPatchSize", "(", "leftover0", ")", "\n", "self", ".", "maxIdxs", "=", "getMaxIdxs", "(", "imgShape", ",", "self", ".", "patchSizes", ")", "\n", "\n", "startidx0", "=", "imgShape", "[", "2", "]", "-", "self", ".", "patchSizes", "[", "0", "]", "if", "(", "leftover0", ">", "0", ")", "else", "0", "\n", "idxs", "=", "idxs", "+", "iterateMethod", "(", "(", "startidx0", ",", "0", ",", "0", ")", ",", "patchShift", ",", "offset", ")", "\n", "if", "leftover1", ">", "0", ":", "\n", "\n", "        ", "self", ".", "patchSizes", "[", "1", "]", "=", "self", ".", "getNextPatchSize", "(", "leftover1", ")", "\n", "self", ".", "maxIdxs", "=", "getMaxIdxs", "(", "imgShape", ",", "self", ".", "patchSizes", ")", "\n", "\n", "startidx1", "=", "imgShape", "[", "3", "]", "-", "self", ".", "patchSizes", "[", "1", "]", "if", "(", "leftover1", ">", "0", ")", "else", "0", "\n", "idxs", "=", "idxs", "+", "iterateMethod", "(", "(", "startidx0", ",", "startidx1", ",", "0", ")", ",", "patchShift", ",", "offset", ")", "\n", "if", "leftover2", ">", "0", ":", "\n", "\n", "          ", "self", ".", "patchSizes", "[", "2", "]", "=", "self", ".", "getNextPatchSize", "(", "leftover2", ")", "\n", "self", ".", "maxIdxs", "=", "getMaxIdxs", "(", "imgShape", ",", "self", ".", "patchSizes", ")", "\n", "\n", "startidx2", "=", "imgShape", "[", "4", "]", "-", "self", ".", "patchSizes", "[", "2", "]", "if", "(", "leftover2", ">", "0", ")", "else", "0", "\n", "idxs", "=", "idxs", "+", "iterateMethod", "(", "(", "startidx0", ",", "startidx1", ",", "startidx2", ")", ",", "patchShift", ",", "offset", ")", "\n", "", "", "", "self", ".", "patchSizes", "=", "list", "(", "oldPatchSize", ")", "\n", "if", "leftover1", ">", "0", ":", "\n", "      ", "self", ".", "patchSizes", "[", "1", "]", "=", "self", ".", "getNextPatchSize", "(", "leftover1", ")", "\n", "self", ".", "maxIdxs", "=", "getMaxIdxs", "(", "imgShape", ",", "self", ".", "patchSizes", ")", "\n", "\n", "startidx1", "=", "imgShape", "[", "3", "]", "-", "self", ".", "patchSizes", "[", "1", "]", "if", "(", "leftover1", ">", "0", ")", "else", "0", "\n", "idxs", "=", "idxs", "+", "iterateMethod", "(", "(", "0", ",", "startidx1", ",", "0", ")", ",", "patchShift", ",", "offset", ")", "\n", "if", "leftover2", ">", "0", ":", "\n", "        ", "self", ".", "patchSizes", "[", "2", "]", "=", "self", ".", "getNextPatchSize", "(", "leftover2", ")", "\n", "self", ".", "maxIdxs", "=", "getMaxIdxs", "(", "imgShape", ",", "self", ".", "patchSizes", ")", "\n", "\n", "startidx2", "=", "imgShape", "[", "4", "]", "-", "self", ".", "patchSizes", "[", "2", "]", "if", "(", "leftover2", ">", "0", ")", "else", "0", "\n", "idxs", "=", "idxs", "+", "iterateMethod", "(", "(", "0", ",", "startidx1", ",", "startidx2", ")", ",", "patchShift", ",", "offset", ")", "\n", "", "", "self", ".", "patchSizes", "=", "oldPatchSize", "\n", "if", "leftover2", ">", "0", ":", "\n", "      ", "self", ".", "patchSizes", "[", "2", "]", "=", "self", ".", "getNextPatchSize", "(", "leftover2", ")", "\n", "self", ".", "maxIdxs", "=", "getMaxIdxs", "(", "imgShape", ",", "self", ".", "patchSizes", ")", "\n", "\n", "startidx2", "=", "imgShape", "[", "4", "]", "-", "self", ".", "patchSizes", "[", "2", "]", "if", "(", "leftover2", ">", "0", ")", "else", "0", "\n", "idxs", "=", "idxs", "+", "iterateMethod", "(", "(", "0", ",", "0", ",", "startidx2", ")", ",", "patchShift", ",", "offset", ")", "\n", "if", "leftover0", ">", "0", ":", "\n", "        ", "self", ".", "patchSizes", "[", "0", "]", "=", "self", ".", "getNextPatchSize", "(", "leftover0", ")", "\n", "self", ".", "maxIdxs", "=", "getMaxIdxs", "(", "imgShape", ",", "self", ".", "patchSizes", ")", "\n", "\n", "startidx0", "=", "imgShape", "[", "2", "]", "-", "self", ".", "patchSizes", "[", "0", "]", "if", "(", "leftover0", ">", "0", ")", "else", "0", "\n", "idxs", "=", "idxs", "+", "iterateMethod", "(", "(", "startidx0", ",", "0", ",", "startidx2", ")", ",", "patchShift", ",", "offset", ")", "\n", "\n", "", "", "return", "idxs", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Sampler.Sampler.getLeftovers": [[219, 242], ["None"], "methods", ["None"], ["", "def", "getLeftovers", "(", "self", ",", "imgShape", ",", "patchShift", ")", ":", "\n", "    ", "if", "imgShape", "[", "2", "]", "<=", "self", ".", "patchSizes", "[", "0", "]", ":", "\n", "      ", "leftover0", "=", "0", "\n", "", "else", ":", "\n", "      ", "leftover0", "=", "(", "imgShape", "[", "2", "]", "-", "self", ".", "patchSizes", "[", "0", "]", ")", "%", "patchShift", "[", "0", "]", "\n", "if", "leftover0", ">", "0", ":", "\n", "        ", "leftover0", "=", "leftover0", "+", "self", ".", "patchSizes", "[", "0", "]", "-", "patchShift", "[", "0", "]", "\n", "\n", "", "", "if", "imgShape", "[", "3", "]", "<=", "self", ".", "patchSizes", "[", "1", "]", ":", "\n", "      ", "leftover1", "=", "0", "\n", "", "else", ":", "\n", "      ", "leftover1", "=", "(", "imgShape", "[", "3", "]", "-", "self", ".", "patchSizes", "[", "1", "]", ")", "%", "patchShift", "[", "1", "]", "\n", "if", "leftover1", ">", "0", ":", "\n", "        ", "leftover1", "=", "leftover1", "+", "self", ".", "patchSizes", "[", "1", "]", "-", "patchShift", "[", "1", "]", "\n", "\n", "", "", "if", "imgShape", "[", "4", "]", "<=", "self", ".", "patchSizes", "[", "2", "]", ":", "\n", "      ", "leftover2", "=", "0", "\n", "", "else", ":", "\n", "      ", "leftover2", "=", "(", "imgShape", "[", "4", "]", "-", "self", ".", "patchSizes", "[", "2", "]", ")", "%", "patchShift", "[", "2", "]", "\n", "if", "leftover2", ">", "0", ":", "\n", "        ", "leftover2", "=", "leftover2", "+", "self", ".", "patchSizes", "[", "2", "]", "-", "patchShift", "[", "2", "]", "\n", "\n", "", "", "return", "leftover0", ",", "leftover1", ",", "leftover2", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Sampler.Sampler.getIndicesForUniformSamplingPathShift": [[243, 275], ["iterateMethod", "Sampler.Sampler.getLeftovers", "iterateMethod", "iterateMethod", "iterateMethod", "iterateMethod", "iterateMethod", "iterateMethod", "iterateMethod"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Sampler.Sampler.getLeftovers"], ["", "def", "getIndicesForUniformSamplingPathShift", "(", "self", ",", "patchShift", ",", "useMedian", "=", "True", ",", "offset", "=", "0", ")", ":", "\n", "    ", "imgShape", "=", "self", ".", "imgData", ".", "shape", "\n", "\n", "if", "useMedian", ":", "\n", "      ", "iterateMethod", "=", "self", ".", "iterateImgMedian", "\n", "", "else", ":", "\n", "      ", "iterateMethod", "=", "self", ".", "iterateImgSum", "\n", "\n", "", "idxs", "=", "iterateMethod", "(", "(", "0", ",", "0", ",", "0", ")", ",", "patchShift", ",", "offset", ")", "\n", "\n", "leftover0", ",", "leftover1", ",", "leftover2", "=", "self", ".", "getLeftovers", "(", "imgShape", ",", "patchShift", ")", "\n", "\n", "startidx0", "=", "imgShape", "[", "2", "]", "-", "self", ".", "patchSizes", "[", "0", "]", "if", "(", "leftover0", ">", "0", ")", "else", "0", "\n", "startidx1", "=", "imgShape", "[", "3", "]", "-", "self", ".", "patchSizes", "[", "1", "]", "if", "(", "leftover1", ">", "0", ")", "else", "0", "\n", "startidx2", "=", "imgShape", "[", "4", "]", "-", "self", ".", "patchSizes", "[", "2", "]", "if", "(", "leftover2", ">", "0", ")", "else", "0", "\n", "\n", "if", "startidx0", ">", "0", ":", "\n", "      ", "idxs", "=", "idxs", "+", "iterateMethod", "(", "(", "startidx0", ",", "0", ",", "0", ")", ",", "patchShift", ",", "offset", ")", "\n", "if", "startidx1", ">", "0", ":", "\n", "        ", "idxs", "=", "idxs", "+", "iterateMethod", "(", "(", "startidx0", ",", "startidx1", ",", "0", ")", ",", "patchShift", ",", "offset", ")", "\n", "if", "startidx2", ">", "0", ":", "\n", "          ", "idxs", "=", "idxs", "+", "iterateMethod", "(", "(", "startidx0", ",", "startidx1", ",", "startidx2", ")", ",", "patchShift", ",", "offset", ")", "\n", "", "", "", "if", "startidx1", ">", "0", ":", "\n", "      ", "idxs", "=", "idxs", "+", "iterateMethod", "(", "(", "0", ",", "startidx1", ",", "0", ")", ",", "patchShift", ",", "offset", ")", "\n", "if", "startidx2", ">", "0", ":", "\n", "        ", "idxs", "=", "idxs", "+", "iterateMethod", "(", "(", "0", ",", "startidx1", ",", "startidx2", ")", ",", "patchShift", ",", "offset", ")", "\n", "", "", "if", "startidx2", ">", "0", ":", "\n", "      ", "idxs", "=", "idxs", "+", "iterateMethod", "(", "(", "0", ",", "0", ",", "startidx2", ")", ",", "patchShift", ",", "offset", ")", "\n", "if", "startidx0", ">", "0", ":", "\n", "        ", "idxs", "=", "idxs", "+", "iterateMethod", "(", "(", "startidx0", ",", "0", ",", "startidx2", ")", ",", "patchShift", ",", "offset", ")", "\n", "\n", "", "", "return", "idxs", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Sampler.Sampler.getNextPatchSize": [[276, 287], ["int", "int", "numpy.ceil", "float"], "methods", ["None"], ["", "def", "getNextPatchSize", "(", "self", ",", "leftover", ")", ":", "\n", "    ", "nuOfDownSampleLayers", "=", "netDepth", "-", "1", "\n", "modValue", "=", "2", "**", "(", "nuOfDownSampleLayers", ")", "\n", "if", "diffeomorphicRegistration", ":", "\n", "      ", "minSize", "=", "netMinPatchSizePadded", "+", "(", "2", "*", "int", "(", "finalGaussKernelSize", "/", "2", ")", ")", "\n", "", "else", ":", "\n", "      ", "minSize", "=", "netMinPatchSizePadded", "\n", "", "minPatchSize", "=", "leftover", "if", "leftover", ">", "minSize", "else", "minSize", "\n", "if", "minPatchSize", "%", "modValue", "!=", "0", ":", "\n", "      ", "minPatchSize", "=", "(", "int", "(", "np", ".", "ceil", "(", "minPatchSize", "/", "float", "(", "modValue", ")", ")", ")", "*", "modValue", ")", "\n", "", "return", "minPatchSize", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Sampler.Sampler.getIndicesForUniformSampling": [[289, 292], ["Sampler.Sampler.getIndicesForUniformSamplingPathShift"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Sampler.Sampler.getIndicesForUniformSamplingPathShift"], ["", "def", "getIndicesForUniformSampling", "(", "self", ")", ":", "\n", "    ", "shift", "=", "(", "self", ".", "patchSizes", "[", "0", "]", "/", "2", ",", "self", ".", "patchSizes", "[", "1", "]", "/", "2", ",", "self", ".", "patchSizes", "[", "2", "]", "/", "2", ")", "\n", "return", "self", ".", "getIndicesForUniformSamplingPathShift", "(", "shift", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OptimizeCaller.OptimizeCaller.__init__": [[21, 29], ["OptimizeCaller.OptimizeCaller.net.to"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "net", ",", "userOpts", ")", ":", "\n", "    ", "self", ".", "net", "=", "net", "\n", "self", ".", "userOpts", "=", "userOpts", "\n", "\n", "self", ".", "net", ".", "to", "(", "self", ".", "userOpts", ".", "device", ")", "\n", "self", ".", "finalNumberIterations", "=", "[", "0", ",", "0", "]", "\n", "\n", "self", ".", "resultModels", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OptimizeCaller.OptimizeCaller.__enter__": [[30, 32], ["None"], "methods", ["None"], ["", "def", "__enter__", "(", "self", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OptimizeCaller.OptimizeCaller.__exit__": [[33, 35], ["None"], "methods", ["None"], ["", "def", "__exit__", "(", "self", ",", "exc_type", ",", "exc_value", ",", "traceback", ")", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OptimizeCaller.OptimizeCaller.loadNet": [[36, 38], ["OptimizeCaller.OptimizeCaller.net.load_state_dict", "torch.load"], "methods", ["None"], ["", "def", "loadNet", "(", "self", ",", "filepath", ")", ":", "\n", "    ", "self", ".", "net", ".", "load_state_dict", "(", "torch", ".", "load", "(", "filepath", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OptimizeCaller.OptimizeCaller.saveNet": [[39, 41], ["torch.save", "OptimizeCaller.OptimizeCaller.net.state_dict"], "methods", ["None"], ["", "def", "saveNet", "(", "self", ",", "filepath", ")", ":", "\n", "    ", "torch", ".", "save", "(", "self", ".", "net", ".", "state_dict", "(", ")", ",", "filepath", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OptimizeCaller.OptimizeCaller.saveResults": [[43, 95], ["eval.LandmarkHandler.PointProcessor", "eval.LandmarkHandler.PointReader", "range", "range", "imgToDef.to.to.to", "range", "Utils.deformImage", "SimpleITK.GetImageFromArray", "SimpleITK.GetImageFromArray", "dataloader.dataset.saveData", "dataloader.dataset.saveData", "dataloader.dataset.getSpacing", "dataloader.dataset.getDirectionCosines", "Utils.getDefField", "SimpleITK.GetImageFromArray", "dataloader.dataset.saveData", "labelData[].float", "labelToDef.to.to.to", "SimpleITK.GetImageFromArray", "SimpleITK.GetImageFromArray", "dataloader.dataset.saveData", "dataloader.dataset.saveData", "deformedTmp[].cpu", "imgToDef[].cpu", "defX.cpu", "defY.cpu", "defZ.cpu", "len", "numpy.moveaxis", "numpy.moveaxis", "torch.from_numpy", "dataloader.dataset.getOrigin", "eval.LandmarkHandler.PointProcessor.deformPointsWithField", "eval.LandmarkHandler.PointReader.saveDataTensor", "labelData.dim", "imgData.dim", "int", "Utils.deformWithNearestNeighborInterpolation", "Utils.deformImage", "deformedLabelTmp[].cpu", "labelToDef[].cpu", "defFields[].detach", "defFields[].detach", "defFields[].detach", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.deformImage", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.saveData", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.saveData", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.getSpacing", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.getDirectionCosines", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getDefField", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.saveData", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.saveData", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.saveData", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.getOrigin", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointProcessor.deformPointsWithField", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointReader.saveDataTensor", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.deformWithNearestNeighborInterpolation", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.deformImage"], ["", "def", "saveResults", "(", "self", ",", "data", ",", "defFields", ",", "dataloader", ",", "datasetIdx", ")", ":", "\n", "    ", "imgData", "=", "data", "[", "'image'", "]", "\n", "labelData", "=", "data", "[", "'label'", "]", "\n", "landmarkData", "=", "data", "[", "'landmarks'", "]", "\n", "pp", "=", "PointProcessor", "(", ")", "\n", "pr", "=", "PointReader", "(", ")", "\n", "for", "imgIdx", "in", "range", "(", "imgData", ".", "shape", "[", "0", "]", ")", ":", "\n", "      ", "for", "chanIdx", "in", "range", "(", "-", "1", ",", "imgData", ".", "shape", "[", "1", "]", "-", "1", ")", ":", "\n", "        ", "imgToDef", "=", "imgData", "[", "None", ",", "None", ",", "imgIdx", ",", "chanIdx", ",", "]", "\n", "imgToDef", "=", "imgToDef", ".", "to", "(", "self", ".", "userOpts", ".", "device", ")", "\n", "chanRange", "=", "range", "(", "chanIdx", "*", "3", ",", "chanIdx", "*", "3", "+", "3", ")", "\n", "deformedTmp", "=", "deformImage", "(", "imgToDef", ",", "defFields", "[", "None", ",", "imgIdx", ",", "chanRange", ",", "]", ",", "self", ".", "userOpts", ".", "device", ")", "\n", "\n", "if", "(", "labelData", "is", "not", "None", ")", "and", "(", "labelData", ".", "dim", "(", ")", "==", "imgData", ".", "dim", "(", ")", ")", ":", "\n", "          ", "labelToDef", "=", "labelData", "[", "None", ",", "None", ",", "imgIdx", ",", "chanIdx", ",", "]", ".", "float", "(", ")", "\n", "labelToDef", "=", "labelToDef", ".", "to", "(", "self", ".", "userOpts", ".", "device", ")", "\n", "\n", "if", "int", "(", "torch", ".", "__version__", "[", "0", "]", ")", "<", "1", ":", "\n", "            ", "deformedLabelTmp", "=", "deformWithNearestNeighborInterpolation", "(", "labelToDef", ",", "defFields", "[", "None", ",", "imgIdx", ",", "chanRange", ",", "]", ",", "self", ".", "userOpts", ".", "device", ")", "\n", "", "else", ":", "\n", "            ", "deformedLabelTmp", "=", "deformImage", "(", "labelToDef", ",", "defFields", "[", "None", ",", "imgIdx", ",", "chanRange", ",", "]", ",", "self", ".", "userOpts", ".", "device", ",", "NN", "=", "True", ")", "\n", "", "labelDataDef", "=", "sitk", ".", "GetImageFromArray", "(", "deformedLabelTmp", "[", "0", ",", "0", ",", "]", ".", "cpu", "(", ")", ")", "\n", "labelDataOrig", "=", "sitk", ".", "GetImageFromArray", "(", "labelToDef", "[", "0", ",", "0", ",", "]", ".", "cpu", "(", ")", ")", "\n", "dataloader", ".", "dataset", ".", "saveData", "(", "labelDataDef", ",", "self", ".", "userOpts", ".", "outputPath", ",", "'deformedLabelDataset'", "+", "str", "(", "datasetIdx", ")", "+", "'image'", "+", "str", "(", "imgIdx", ")", "+", "'channel'", "+", "str", "(", "chanIdx", ")", "+", "'.nrrd'", ",", "datasetIdx", ",", "False", ")", "\n", "dataloader", ".", "dataset", ".", "saveData", "(", "labelDataOrig", ",", "self", ".", "userOpts", ".", "outputPath", ",", "'origLabelDataset'", "+", "str", "(", "datasetIdx", ")", "+", "'image'", "+", "str", "(", "imgIdx", ")", "+", "'channel'", "+", "str", "(", "chanIdx", ")", "+", "'.nrrd'", ",", "datasetIdx", ",", "False", ")", "\n", "\n", "", "imgDataDef", "=", "sitk", ".", "GetImageFromArray", "(", "deformedTmp", "[", "0", ",", "0", ",", "]", ".", "cpu", "(", ")", ")", "\n", "imgDataOrig", "=", "sitk", ".", "GetImageFromArray", "(", "imgToDef", "[", "0", ",", "0", ",", "]", ".", "cpu", "(", ")", ")", "\n", "\n", "dataloader", ".", "dataset", ".", "saveData", "(", "imgDataDef", ",", "self", ".", "userOpts", ".", "outputPath", ",", "'deformedImgDataset'", "+", "str", "(", "datasetIdx", ")", "+", "'image'", "+", "str", "(", "imgIdx", ")", "+", "'channel'", "+", "str", "(", "chanIdx", ")", "+", "'.nrrd'", ",", "datasetIdx", ",", "False", ")", "\n", "dataloader", ".", "dataset", ".", "saveData", "(", "imgDataOrig", ",", "self", ".", "userOpts", ".", "outputPath", ",", "'origImgDataset'", "+", "str", "(", "datasetIdx", ")", "+", "'image'", "+", "str", "(", "imgIdx", ")", "+", "'channel'", "+", "str", "(", "chanIdx", ")", "+", "'.nrrd'", ",", "datasetIdx", ",", "False", ")", "\n", "#deformation calculated for idx coordinates; transform to world coordinates", "\n", "dataSetSpacing", "=", "dataloader", ".", "dataset", ".", "getSpacing", "(", "datasetIdx", ")", "\n", "dataSetDirCosines", "=", "dataloader", ".", "dataset", ".", "getDirectionCosines", "(", "datasetIdx", ")", "\n", "defX", "=", "defFields", "[", "imgIdx", ",", "chanIdx", "*", "3", ",", "]", ".", "detach", "(", ")", "*", "dataSetSpacing", "[", "0", "]", "*", "dataSetDirCosines", "[", "0", "]", "\n", "defY", "=", "defFields", "[", "imgIdx", ",", "chanIdx", "*", "3", "+", "1", ",", "]", ".", "detach", "(", ")", "*", "dataSetSpacing", "[", "1", "]", "*", "dataSetDirCosines", "[", "4", "]", "\n", "defZ", "=", "defFields", "[", "imgIdx", ",", "chanIdx", "*", "3", "+", "2", ",", "]", ".", "detach", "(", ")", "*", "dataSetSpacing", "[", "2", "]", "*", "dataSetDirCosines", "[", "8", "]", "\n", "defField", "=", "getDefField", "(", "defX", ".", "cpu", "(", ")", ",", "defY", ".", "cpu", "(", ")", ",", "defZ", ".", "cpu", "(", ")", ")", "\n", "defDataToSave", "=", "sitk", ".", "GetImageFromArray", "(", "defField", ",", "isVector", "=", "True", ")", "\n", "dataloader", ".", "dataset", ".", "saveData", "(", "defDataToSave", ",", "self", ".", "userOpts", ".", "outputPath", ",", "'deformationFieldDataset'", "+", "str", "(", "datasetIdx", ")", "+", "'image'", "+", "str", "(", "imgIdx", ")", "+", "'channel'", "+", "str", "(", "chanIdx", ")", "+", "'.nrrd'", ",", "datasetIdx", ",", "False", ")", "\n", "\n", "\n", "if", "(", "len", "(", "landmarkData", ")", ">", "0", ")", ":", "\n", "          ", "defField", "=", "np", ".", "moveaxis", "(", "defField", ",", "0", ",", "2", ")", "\n", "defField", "=", "np", ".", "moveaxis", "(", "defField", ",", "0", ",", "1", ")", "\n", "defField", "=", "torch", ".", "from_numpy", "(", "defField", ")", "\n", "currLandmarks", "=", "landmarkData", "[", "chanIdx", "+", "1", "]", "##the def field points from output to input therefore we need no take the next landmarks to be able to deform them", "\n", "\n", "defFieldOrigin", "=", "dataloader", ".", "dataset", ".", "getOrigin", "(", "datasetIdx", ")", "\n", "\n", "deformedPoints", "=", "pp", ".", "deformPointsWithField", "(", "currLandmarks", ",", "defField", ",", "defFieldOrigin", ",", "dataSetSpacing", ",", "dataSetDirCosines", ")", "\n", "pr", ".", "saveDataTensor", "(", "self", ".", "userOpts", ".", "outputPath", "+", "os", ".", "path", ".", "sep", "+", "'dataset'", "+", "str", "(", "datasetIdx", ")", "+", "'channel'", "+", "str", "(", "chanIdx", "+", "1", ")", "+", "'0deformed.pts'", ",", "deformedPoints", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OptimizeCaller.OptimizeCaller.saveDefField": [[96, 107], ["dataloader.dataset.getSpacing", "dataloader.dataset.getDirectionCosines", "range", "range", "Utils.getDefField", "SimpleITK.GetImageFromArray", "dataloader.dataset.saveData", "defFields[].detach", "defFields[].detach", "defFields[].detach", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.getSpacing", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.getDirectionCosines", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getDefField", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.saveData"], ["", "", "", "", "def", "saveDefField", "(", "self", ",", "defFields", ",", "dataloader", ",", "datasetIdx", ",", "outputName", "=", "'deformationFieldDataset'", ")", ":", "\n", "    ", "dataSetSpacing", "=", "dataloader", ".", "dataset", ".", "getSpacing", "(", "datasetIdx", ")", "\n", "dataSetDirCosines", "=", "dataloader", ".", "dataset", ".", "getDirectionCosines", "(", "datasetIdx", ")", "\n", "for", "imgIdx", "in", "range", "(", "defFields", ".", "shape", "[", "0", "]", ")", ":", "\n", "      ", "for", "chanIdx", "in", "range", "(", "-", "1", ",", "(", "defFields", ".", "shape", "[", "1", "]", "/", "3", ")", "-", "1", ")", ":", "\n", "        ", "defX", "=", "defFields", "[", "imgIdx", ",", "chanIdx", "*", "3", ",", "]", ".", "detach", "(", ")", "*", "dataSetSpacing", "[", "0", "]", "*", "dataSetDirCosines", "[", "0", "]", "\n", "defY", "=", "defFields", "[", "imgIdx", ",", "chanIdx", "*", "3", "+", "1", ",", "]", ".", "detach", "(", ")", "*", "dataSetSpacing", "[", "1", "]", "*", "dataSetDirCosines", "[", "4", "]", "\n", "defZ", "=", "defFields", "[", "imgIdx", ",", "chanIdx", "*", "3", "+", "2", ",", "]", ".", "detach", "(", ")", "*", "dataSetSpacing", "[", "2", "]", "*", "dataSetDirCosines", "[", "8", "]", "\n", "defField", "=", "getDefField", "(", "defX", ",", "defY", ",", "defZ", ")", "\n", "defDataToSave", "=", "sitk", ".", "GetImageFromArray", "(", "defField", ",", "isVector", "=", "True", ")", "\n", "dataloader", ".", "dataset", ".", "saveData", "(", "defDataToSave", ",", "self", ".", "userOpts", ".", "outputPath", ",", "outputName", "+", "str", "(", "datasetIdx", ")", "+", "'image'", "+", "str", "(", "imgIdx", ")", "+", "'channel'", "+", "str", "(", "chanIdx", ")", "+", "'.nrrd'", ",", "datasetIdx", ",", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OptimizeCaller.OptimizeCaller.saveDeformedData": [[108, 129], ["eval.LandmarkHandler.PointReader", "range", "range", "SimpleITK.GetImageFromArray", "dataloader.dataset.saveData", "labelData[].float", "labelToDef.to.to.to", "SimpleITK.GetImageFromArray", "dataloader.dataset.saveData", "len", "eval.LandmarkHandler.PointReader.saveDataTensor", "labelData.dim", "imgData.dim", "str", "str", "str", "str", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.saveData", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.saveData", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointReader.saveDataTensor"], ["", "", "", "def", "saveDeformedData", "(", "self", ",", "data", ",", "dataloader", ",", "datasetIdx", ",", "imgName", "=", "'imgDataset'", ")", ":", "\n", "    ", "imgData", "=", "data", "[", "'image'", "]", "\n", "labelData", "=", "data", "[", "'label'", "]", "\n", "landmarkData", "=", "data", "[", "'landmarks'", "]", "\n", "pr", "=", "PointReader", "(", ")", "\n", "for", "imgIdx", "in", "range", "(", "imgData", ".", "shape", "[", "0", "]", ")", ":", "\n", "      ", "for", "chanIdx", "in", "range", "(", "-", "1", ",", "imgData", ".", "shape", "[", "1", "]", "-", "1", ")", ":", "\n", "        ", "imgToDef", "=", "imgData", "[", "None", ",", "None", ",", "imgIdx", ",", "chanIdx", ",", "]", "\n", "\n", "if", "(", "labelData", "is", "not", "None", ")", "and", "(", "labelData", ".", "dim", "(", ")", "==", "imgData", ".", "dim", "(", ")", ")", ":", "\n", "          ", "labelToDef", "=", "labelData", "[", "None", ",", "None", ",", "imgIdx", ",", "chanIdx", ",", "]", ".", "float", "(", ")", "\n", "labelToDef", "=", "labelToDef", ".", "to", "(", "self", ".", "userOpts", ".", "device", ")", "\n", "labelDataOrig", "=", "sitk", ".", "GetImageFromArray", "(", "labelToDef", "[", "0", ",", "0", ",", "]", ")", "\n", "dataloader", ".", "dataset", ".", "saveData", "(", "labelDataOrig", ",", "self", ".", "userOpts", ".", "outputPath", ",", "'labelDataset'", "+", "str", "(", "datasetIdx", ")", "+", "'image'", "+", "str", "(", "imgIdx", ")", "+", "'channel'", "+", "str", "(", "chanIdx", ")", "+", "'.nrrd'", ",", "datasetIdx", ",", "False", ")", "\n", "\n", "", "imgDataOrig", "=", "sitk", ".", "GetImageFromArray", "(", "imgToDef", "[", "0", ",", "0", ",", "]", ")", "\n", "dataloader", ".", "dataset", ".", "saveData", "(", "imgDataOrig", ",", "self", ".", "userOpts", ".", "outputPath", ",", "imgName", "+", "str", "(", "datasetIdx", ")", "+", "'image'", "+", "str", "(", "imgIdx", ")", "+", "'channel'", "+", "str", "(", "chanIdx", ")", "+", "'.nrrd'", ",", "datasetIdx", ",", "False", ")", "\n", "\n", "if", "(", "len", "(", "landmarkData", ")", ">", "0", ")", ":", "\n", "          ", "currLandmarks", "=", "landmarkData", "[", "chanIdx", "+", "1", "]", "##the def field points from output to input therefore we need no take the next landmarks to be able to deform them", "\n", "pr", ".", "saveDataTensor", "(", "self", ".", "userOpts", ".", "outputPath", "+", "os", ".", "path", ".", "sep", "+", "'dataset'", "+", "str", "(", "datasetIdx", ")", "+", "'channel'", "+", "str", "(", "chanIdx", "+", "1", ")", "+", "'0deformed.pts'", ",", "currLandmarks", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OptimizeCaller.OptimizeCaller.printGPUMemoryAllocated": [[130, 133], ["torch.cuda.synchronize", "print", "torch.cuda.memory_allocated"], "methods", ["None"], ["", "", "", "", "def", "printGPUMemoryAllocated", "(", "self", ")", ":", "\n", "    ", "torch", ".", "cuda", ".", "synchronize", "(", ")", "\n", "print", "(", "torch", ".", "cuda", ".", "memory_allocated", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OptimizeCaller.OptimizeCaller.updateStateDicts": [[134, 145], ["enumerate", "netStateDictsNew.append", "optimizerStateDictsNew.append"], "methods", ["None"], ["", "def", "updateStateDicts", "(", "self", ",", "netStateDicts", ",", "optimizerStateDicts", ",", "patchIdxsOld", ",", "patchIdxsNew", ")", ":", "\n", "    ", "netStateDictsNew", "=", "[", "]", "\n", "optimizerStateDictsNew", "=", "[", "]", "\n", "for", "patchIdxNew", "in", "patchIdxsNew", ":", "\n", "      ", "lastMatchinIdx", "=", "0", "\n", "for", "oldIdx", ",", "patchIdxOld", "in", "enumerate", "(", "patchIdxsOld", ")", ":", "\n", "        ", "if", "patchIdxNew", "[", "0", "]", "<=", "patchIdxOld", "[", "0", "]", "and", "patchIdxNew", "[", "1", "]", "<=", "patchIdxOld", "[", "1", "]", "and", "patchIdxNew", "[", "2", "]", "<=", "patchIdxOld", "[", "2", "]", ":", "\n", "          ", "lastMatchinIdx", "=", "oldIdx", "\n", "", "", "netStateDictsNew", ".", "append", "(", "netStateDicts", "[", "lastMatchinIdx", "]", ")", "\n", "optimizerStateDictsNew", ".", "append", "(", "optimizerStateDicts", "[", "lastMatchinIdx", "]", ")", "\n", "", "return", "(", "netStateDictsNew", ",", "optimizerStateDictsNew", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OptimizeCaller.OptimizeCaller.getDownSampleRates": [[147, 152], ["numpy.ones", "range"], "methods", ["None"], ["", "def", "getDownSampleRates", "(", "self", ")", ":", "\n", "    ", "samplingRates", "=", "np", ".", "ones", "(", "self", ".", "userOpts", ".", "downSampleSteps", "+", "1", ")", "\n", "for", "samplingRateIdx", "in", "range", "(", "0", ",", "self", ".", "userOpts", ".", "downSampleSteps", ")", ":", "\n", "      ", "samplingRates", "[", "samplingRateIdx", "]", "=", "1.0", "/", "(", "2", "**", "(", "self", ".", "userOpts", ".", "downSampleSteps", "-", "samplingRateIdx", ")", ")", "\n", "", "return", "samplingRates", "[", "0", ":", "self", ".", "userOpts", ".", "stoptAtSampleStep", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OptimizeCaller.OptimizeCaller.printParameterInfo": [[153, 170], ["OptimizeCaller.OptimizeCaller.net.parameters", "print", "dataMean.append", "p.grad.data.norm", "p.grad.data.abs().max", "float", "p.grad.data.norm.item", "p.data.mean", "p.grad.data.abs"], "methods", ["None"], ["", "def", "printParameterInfo", "(", "self", ")", ":", "\n", "      ", "maxNorm", "=", "0.0", "\n", "maxVal", "=", "0.0", "\n", "total_norm", "=", "0", "\n", "dataMean", "=", "[", "]", "\n", "for", "p", "in", "self", ".", "net", ".", "parameters", "(", ")", ":", "\n", "        ", "dataMean", ".", "append", "(", "float", "(", "p", ".", "data", ".", "mean", "(", ")", ")", ")", "\n", "param_norm", "=", "p", ".", "grad", ".", "data", ".", "norm", "(", "2.0", ")", "\n", "param_val", "=", "p", ".", "grad", ".", "data", ".", "abs", "(", ")", ".", "max", "(", ")", "\n", "if", "param_norm", ">", "maxNorm", ":", "\n", "          ", "maxNorm", "=", "param_norm", "\n", "", "if", "param_val", ">", "maxVal", ":", "\n", "          ", "maxVal", "=", "param_val", "\n", "", "total_norm", "+=", "param_norm", ".", "item", "(", ")", "**", "2.0", "\n", "total_norm", "=", "total_norm", "**", "(", "1.", "/", "2.0", ")", "\n", "\n", "", "print", "(", "total_norm", ",", "maxNorm", ",", "maxVal", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OptimizeCaller.OptimizeCaller.applyDefField": [[172, 186], ["Utils.deformLandmarks", "Utils.deformWholeImage", "data[].dim", "data[].dim", "Utils.deformWholeImage", "torch.tensor", "data[].dim", "data[].dim", "Utils.deformWholeImage", "torch.tensor", "dataset.getSpacing", "dataset.getOrigin", "dataset.getDirectionCosines", "data[].to", "data[].to", "data[].to"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.deformLandmarks", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.deformWholeImage", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.deformWholeImage", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.deformWholeImage", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.getSpacing", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.getOrigin", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.getDirectionCosines"], ["", "def", "applyDefField", "(", "self", ",", "defField", ",", "data", ",", "datasetIdx", ",", "dataset", ")", ":", "\n", "    ", "deformedData", "=", "{", "'image'", ":", "deformWholeImage", "(", "data", "[", "'image'", "]", ".", "to", "(", "self", ".", "userOpts", ".", "device", ")", ",", "defField", ",", "imgIdx", "=", "-", "1", ")", "}", "\n", "if", "(", "data", "[", "'mask'", "]", ".", "dim", "(", ")", "==", "data", "[", "'image'", "]", ".", "dim", "(", ")", ")", ":", "\n", "      ", "deformedData", "[", "'mask'", "]", "=", "deformWholeImage", "(", "data", "[", "'mask'", "]", ".", "to", "(", "self", ".", "userOpts", ".", "device", ")", ",", "defField", ",", "True", ",", "imgIdx", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "      ", "deformedData", "[", "'mask'", "]", "=", "torch", ".", "tensor", "(", "[", "1", "]", ")", "\n", "", "if", "(", "data", "[", "'label'", "]", ".", "dim", "(", ")", "==", "data", "[", "'image'", "]", ".", "dim", "(", ")", ")", ":", "\n", "      ", "deformedData", "[", "'label'", "]", "=", "deformWholeImage", "(", "data", "[", "'label'", "]", ".", "to", "(", "self", ".", "userOpts", ".", "device", ")", ",", "defField", ",", "True", ",", "imgIdx", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "      ", "deformedData", "[", "'label'", "]", "=", "torch", ".", "tensor", "(", "[", "1", "]", ")", "\n", "\n", "", "deformedData", "[", "'landmarks'", "]", "=", "deformLandmarks", "(", "data", "[", "'landmarks'", "]", ",", "data", "[", "'image'", "]", ",", "defField", ",", "dataset", ".", "getSpacing", "(", "datasetIdx", ")", ",", "dataset", ".", "getOrigin", "(", "datasetIdx", ")", ",", "dataset", ".", "getDirectionCosines", "(", "datasetIdx", ")", ")", "\n", "\n", "return", "deformedData", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OptimizeCaller.OptimizeCaller.setOldModels": [[189, 196], ["torch.load", "torch.load.has_key", "OptimizeCaller.OptimizeCaller.resultModels.append", "OptimizeCaller.OptimizeCaller.resultModels.append"], "methods", ["None"], ["", "def", "setOldModels", "(", "self", ",", "oldModelList", ")", ":", "\n", "    ", "for", "modelPath", "in", "oldModelList", ":", "\n", "      ", "modelDict", "=", "torch", ".", "load", "(", "modelPath", ")", "\n", "if", "modelDict", ".", "has_key", "(", "'optimizer_state_dict'", ")", ":", "\n", "        ", "self", ".", "resultModels", ".", "append", "(", "{", "'samplingRate'", ":", "modelDict", "[", "'samplingRate'", "]", ",", "'model_state'", ":", "modelDict", "[", "'model_state_dict'", "]", ",", "'optimizer_state'", ":", "modelDict", "[", "'optimizer_state_dict'", "]", "}", ")", "\n", "", "else", ":", "\n", "        ", "self", ".", "resultModels", ".", "append", "(", "{", "'samplingRate'", ":", "modelDict", "[", "'samplingRate'", "]", ",", "'model_state'", ":", "modelDict", "[", "'model_state_dict'", "]", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OptimizeCaller.OptimizeCaller.resetRandomSeeds": [[198, 202], ["torch.manual_seed", "torch.cuda.manual_seed", "numpy.random.seed"], "methods", ["None"], ["", "", "", "def", "resetRandomSeeds", "(", "self", ")", ":", "\n", "    ", "torch", ".", "manual_seed", "(", "0", ")", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "0", ")", "\n", "np", ".", "random", ".", "seed", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OptimizeCaller.OptimizeCaller.resetNet": [[203, 206], ["OptimizeCaller.OptimizeCaller.resetRandomSeeds", "OptimizeCaller.OptimizeCaller.net.reset_params"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OptimizeCaller.OptimizeCaller.resetRandomSeeds", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Net.UNet.reset_params"], ["", "def", "resetNet", "(", "self", ")", ":", "\n", "    ", "self", ".", "resetRandomSeeds", "(", ")", "\n", "self", ".", "net", ".", "reset_params", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OptimizeCaller.OptimizeCaller.testNetDownSamplePatch": [[208, 244], ["Optimise.Optimise.Optimise", "ScalingAndSquaring.ScalingAndSquaring", "open", "torch.no_grad", "enumerate", "len", "eval.LandmarkHandler.PointProcessor", "enumerate", "ScalingAndSquaring.ScalingAndSquaring.", "OptimizeCaller.OptimizeCaller.saveDefField", "OptimizeCaller.OptimizeCaller.applyDefField", "OptimizeCaller.OptimizeCaller.saveDeformedData", "range", "testlogFile.write", "OptimizeCaller.OptimizeCaller.net.load_state_dict", "Optimise.Optimise.Optimise.getDeformationField", "OptimizeCaller.OptimizeCaller.saveDefField", "eval.LandmarkHandler.PointProcessor.calculatePointSetDistance", "Utils.combineDeformationFields", "ScalingAndSquaring.ScalingAndSquaring.", "len", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OptimizeCaller.OptimizeCaller.saveDefField", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OptimizeCaller.OptimizeCaller.applyDefField", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OptimizeCaller.OptimizeCaller.saveDeformedData", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Optimise.Optimise.getDeformationField", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OptimizeCaller.OptimizeCaller.saveDefField", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointProcessor.calculatePointSetDistance", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.DefFieldHandler.combineDeformationFields"], ["", "def", "testNetDownSamplePatch", "(", "self", ",", "dataloader", ")", ":", "\n", "    ", "samplerShift", "=", "(", "0", ",", "0", ",", "0", ")", "\n", "logfileName", "=", "self", ".", "userOpts", ".", "outputPath", "+", "os", ".", "path", ".", "sep", "+", "'testLog.csv'", "\n", "optimise", "=", "Optimise", "(", "self", ".", "userOpts", ")", "\n", "scalingSquaring", "=", "sas", ".", "ScalingAndSquaring", "(", "self", ".", "userOpts", ".", "sasSteps", ")", "\n", "with", "open", "(", "logfileName", ",", "'w'", ")", "as", "testlogFile", ":", "\n", "      ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "#         self.net.eval()", "\n", "        ", "useContext", "=", "self", ".", "userOpts", ".", "useContext", "\n", "self", ".", "userOpts", ".", "useContext", "=", "False", "\n", "for", "datasetIdx", ",", "data", "in", "enumerate", "(", "dataloader", ",", "0", ")", ":", "\n", "          ", "if", "len", "(", "self", ".", "resultModels", ")", ">", "0", ":", "\n", "            ", "pp", "=", "PointProcessor", "(", ")", "\n", "dataBeforeDeformation", "=", "data", "\n", "\n", "lastField", "=", "None", "\n", "for", "modelIdx", ",", "previousModels", "in", "enumerate", "(", "self", ".", "resultModels", ")", ":", "\n", "              ", "self", ".", "net", ".", "load_state_dict", "(", "previousModels", "[", "'model_state'", "]", ")", "\n", "defField", "=", "optimise", ".", "getDeformationField", "(", "data", ",", "previousModels", "[", "'samplingRate'", "]", ",", "self", ".", "userOpts", ".", "patchSize", "[", "modelIdx", "]", ",", "self", ".", "userOpts", ".", "useMedianForSampling", "[", "modelIdx", "]", ",", "samplerShift", ")", "\n", "if", "lastField", "is", "None", ":", "\n", "                ", "lastField", "=", "defField", "\n", "", "else", ":", "\n", "                ", "lastField", "=", "combineDeformationFields", "(", "defField", ",", "lastField", ")", "\n", "\n", "", "self", ".", "saveDefField", "(", "scalingSquaring", "(", "defField", ")", ",", "dataloader", ",", "datasetIdx", ",", "'tmpField'", "+", "str", "(", "modelIdx", ")", ")", "\n", "\n", "", "deformationField", "=", "scalingSquaring", "(", "lastField", ")", "\n", "self", ".", "saveDefField", "(", "deformationField", ",", "dataloader", ",", "datasetIdx", ")", "\n", "data", "=", "self", ".", "applyDefField", "(", "deformationField", ",", "data", ",", "datasetIdx", ",", "dataloader", ".", "dataset", ")", "\n", "self", ".", "saveDeformedData", "(", "data", ",", "dataloader", ",", "datasetIdx", ")", "\n", "pointDistance", "=", "''", "\n", "for", "landmarkChannel", "in", "range", "(", "-", "1", ",", "len", "(", "dataBeforeDeformation", "[", "'landmarks'", "]", ")", "-", "1", ")", ":", "\n", "              ", "meanPointDistance", ",", "_", "=", "pp", ".", "calculatePointSetDistance", "(", "dataBeforeDeformation", "[", "'landmarks'", "]", "[", "landmarkChannel", "+", "1", "]", ",", "data", "[", "'landmarks'", "]", "[", "landmarkChannel", "]", ",", "False", ")", "\n", "pointDistance", "+=", "str", "(", "meanPointDistance", ")", "+", "';'", "\n", "", "testlogFile", ".", "write", "(", "str", "(", "datasetIdx", ")", "+", "';'", "+", "pointDistance", "+", "'\\n'", ")", "\n", "", "", "self", ".", "userOpts", ".", "useContext", "=", "useContext", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OptimizeCaller.OptimizeCaller.trainNetDownSamplePatch": [[248, 277], ["TrainOptimise.TrainOptimise.TrainOptimise", "OptimizeCaller.OptimizeCaller.getDownSampleRates", "enumerate", "OptimizeCaller.OptimizeCaller.resetNet", "len", "print", "print", "trainOptimiser.run", "OptimizeCaller.OptimizeCaller.resultModels.append", "torch.save", "print", "OptimizeCaller.OptimizeCaller.net.load_state_dict", "trainOptimiser.run", "torch.save", "str", "copy.deepcopy", "str", "copy.deepcopy", "OptimizeCaller.OptimizeCaller.net.state_dict", "str", "OptimizeCaller.OptimizeCaller.net.state_dict", "OptimizeCaller.OptimizeCaller.net.state_dict", "OptimizeCaller.OptimizeCaller.net.state_dict", "str", "str"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OptimizeCaller.OptimizeCaller.getDownSampleRates", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OptimizeCaller.OptimizeCaller.resetNet", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OneShotOptimise.OneShotOptimise.run", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OneShotOptimise.OneShotOptimise.run"], ["", "", "", "def", "trainNetDownSamplePatch", "(", "self", ",", "dataloader", ",", "validationDataLoader", ")", ":", "\n", "    ", "with", "TrainOptimise", "(", "self", ".", "userOpts", ")", "as", "trainOptimiser", ":", "\n", "        ", "samplingRates", "=", "self", ".", "getDownSampleRates", "(", ")", "\n", "for", "samplingRateIdx", ",", "samplingRate", "in", "enumerate", "(", "samplingRates", ")", ":", "\n", "          ", "self", ".", "resetNet", "(", ")", "\n", "if", "len", "(", "self", ".", "resultModels", ")", ">", "samplingRateIdx", ":", "\n", "            ", "print", "(", "\"found model for saplingrate: \"", "+", "str", "(", "samplingRate", ")", ")", "\n", "if", "self", ".", "userOpts", ".", "fineTuneOldModel", "[", "samplingRateIdx", "]", ":", "\n", "              ", "print", "(", "\"finetuning model for saplingrate: \"", "+", "str", "(", "samplingRate", ")", ")", "\n", "resultModelsBUP", "=", "self", ".", "resultModels", "\n", "self", ".", "resultModels", "=", "self", ".", "resultModels", "[", "0", ":", "samplingRateIdx", "]", "\n", "self", ".", "net", ".", "load_state_dict", "(", "resultModelsBUP", "[", "samplingRateIdx", "]", "[", "'model_state'", "]", ")", "\n", "trainOptimiser", ".", "run", "(", "self", ".", "net", ",", "samplingRate", ",", "samplingRateIdx", ",", "dataloader", ",", "validationDataLoader", ",", "self", ".", "resultModels", ")", "\n", "self", ".", "resultModels", "=", "resultModelsBUP", "\n", "self", ".", "resultModels", "[", "samplingRateIdx", "]", "=", "{", "'samplingRate'", ":", "samplingRate", ",", "'model_state'", ":", "copy", ".", "deepcopy", "(", "self", ".", "net", ".", "state_dict", "(", ")", ")", "}", "\n", "torch", ".", "save", "(", "{", "\n", "'model_state_dict'", ":", "self", ".", "net", ".", "state_dict", "(", ")", ",", "\n", "'samplingRate'", ":", "samplingRate", "\n", "}", ",", "self", ".", "userOpts", ".", "outputPath", "+", "os", ".", "path", ".", "sep", "+", "'finalModel'", "+", "str", "(", "samplingRateIdx", ")", "+", "'.pt'", ")", "\n", "", "else", ":", "\n", "              ", "continue", "\n", "", "", "else", ":", "\n", "            ", "print", "(", "\"train model for saplingrate: \"", "+", "str", "(", "samplingRate", ")", ")", "\n", "trainOptimiser", ".", "run", "(", "self", ".", "net", ",", "samplingRate", ",", "samplingRateIdx", ",", "dataloader", ",", "validationDataLoader", ",", "self", ".", "resultModels", ")", "\n", "self", ".", "resultModels", ".", "append", "(", "{", "'samplingRate'", ":", "samplingRate", ",", "'model_state'", ":", "copy", ".", "deepcopy", "(", "self", ".", "net", ".", "state_dict", "(", ")", ")", "}", ")", "\n", "torch", ".", "save", "(", "{", "\n", "'model_state_dict'", ":", "self", ".", "net", ".", "state_dict", "(", ")", ",", "\n", "'samplingRate'", ":", "samplingRate", "\n", "}", ",", "self", ".", "userOpts", ".", "outputPath", "+", "os", ".", "path", ".", "sep", "+", "'finalModel'", "+", "str", "(", "samplingRateIdx", ")", "+", "'.pt'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OptimizeCaller.OptimizeCaller.trainTestNetDownSamplePatch": [[278, 307], ["OneShotOptimise.OneShotOptimise.OneShotOptimise", "OptimizeCaller.OptimizeCaller.getDownSampleRates", "enumerate", "torch.manual_seed", "torch.cuda.manual_seed", "numpy.random.seed", "OptimizeCaller.OptimizeCaller.net.reset_params", "OptimizeCaller.OptimizeCaller.net.train", "time.time", "oneShotOptimiser.run", "time.time", "print", "dataloader.dataset.getSpacingXZFlip", "torch.no_grad", "OptimizeCaller.OptimizeCaller.saveResults", "currVectorField.to.to.to", "ScalingAndSquaring.ScalingAndSquaring", "ScalingAndSquaring.ScalingAndSquaring.", "deformationField.to.to.to", "currVectorField.to.to.to"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OptimizeCaller.OptimizeCaller.getDownSampleRates", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Net.UNet.reset_params", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OneShotOptimise.OneShotOptimise.run", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.getSpacingXZFlip", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OptimizeCaller.OptimizeCaller.saveResults"], ["", "", "", "", "def", "trainTestNetDownSamplePatch", "(", "self", ",", "dataloader", ")", ":", "\n", "\n", "      ", "with", "OneShotOptimise", "(", "self", ".", "userOpts", ")", "as", "oneShotOptimiser", ":", "\n", "          ", "samplingRates", "=", "self", ".", "getDownSampleRates", "(", ")", "\n", "for", "i", ",", "data", "in", "enumerate", "(", "dataloader", ",", "0", ")", ":", "\n", "            ", "torch", ".", "manual_seed", "(", "0", ")", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "0", ")", "\n", "np", ".", "random", ".", "seed", "(", "0", ")", "\n", "self", ".", "net", ".", "reset_params", "(", ")", "\n", "self", ".", "net", ".", "train", "(", ")", "\n", "start", "=", "time", ".", "time", "(", ")", "\n", "\n", "currVectorField", "=", "oneShotOptimiser", ".", "run", "(", "self", ".", "net", ",", "data", ",", "dataloader", ".", "dataset", ".", "getSpacingXZFlip", "(", "i", ")", ",", "samplingRates", ")", "\n", "\n", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "'Registration of dataset %i took:'", "%", "(", "i", ")", ",", "end", "-", "start", ",", "'seconds'", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "\n", "              ", "if", "self", ".", "userOpts", ".", "diffeomorphicRegistration", ":", "\n", "                ", "currVectorField", "=", "currVectorField", ".", "to", "(", "'cpu'", ")", "# for big datasets we run out of memory when scaling and squaring is run on gpu", "\n", "scalingSquaring", "=", "sas", ".", "ScalingAndSquaring", "(", "self", ".", "userOpts", ".", "sasSteps", ")", "\n", "deformationField", "=", "scalingSquaring", "(", "currVectorField", ")", "\n", "deformationField", "=", "deformationField", ".", "to", "(", "self", ".", "userOpts", ".", "device", ")", "\n", "", "else", ":", "\n", "                ", "currVectorField", "=", "currVectorField", ".", "to", "(", "self", ".", "userOpts", ".", "device", ")", "\n", "deformationField", "=", "currVectorField", "\n", "\n", "", "self", ".", "saveResults", "(", "data", ",", "deformationField", ",", "dataloader", ",", "i", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.ElasticCycle.computeDefField": [[16, 24], ["SimpleITK.TransformixImageFilter", "sitk.TransformixImageFilter.ReadParameterFile", "sitk.TransformixImageFilter.SetTransformParameterMap", "sitk.TransformixImageFilter.SetMovingImage", "sitk.TransformixImageFilter.ComputeDeformationFieldOn", "sitk.TransformixImageFilter.SetOutputDirectory", "sitk.TransformixImageFilter.Execute"], "function", ["None"], ["def", "computeDefField", "(", "parameterFile", ",", "outputDir", ",", "imageToReg", ")", ":", "\n", "  ", "transformixImageFilter", "=", "sitk", ".", "TransformixImageFilter", "(", ")", "\n", "parameterMap", "=", "transformixImageFilter", ".", "ReadParameterFile", "(", "parameterFile", ")", "\n", "transformixImageFilter", ".", "SetTransformParameterMap", "(", "parameterMap", ")", "\n", "transformixImageFilter", ".", "SetMovingImage", "(", "imageToReg", ")", "\n", "transformixImageFilter", ".", "ComputeDeformationFieldOn", "(", ")", "\n", "transformixImageFilter", ".", "SetOutputDirectory", "(", "outputDir", ")", "\n", "transformixImageFilter", ".", "Execute", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.ElasticCycle.main": [[26, 137], ["HeadAndNeckDataset.HeadAndNeckDataset", "torch.utils.data.DataLoader", "enumerate", "time.time", "print", "getopt.getopt", "len", "print", "os.path.isdir", "os.makedirs", "SimpleITK.VectorOfImage", "SimpleITK.VectorOfImage", "range", "time.time", "SimpleITK.JoinSeries", "sitk.JoinSeries.SetSpacing", "sitk.JoinSeries.SetOrigin", "print", "print", "str", "os.path.isdir", "os.makedirs", "sitk.VectorOfImage.push_back", "ElasticCycle.computeDefField", "SimpleITK.WriteImage", "SimpleITK.ElastixImageFilter", "sitk.ElastixImageFilter.ReadParameterFile", "sitk.ElastixImageFilter.ReadParameterFile", "sitk.ElastixImageFilter.SetParameterMap", "sitk.ElastixImageFilter.AddParameterMap", "sitk.ElastixImageFilter.SetFixedImage", "sitk.ElastixImageFilter.SetFixedMask", "sitk.ElastixImageFilter.SetMovingImage", "sitk.ElastixImageFilter.SetOutputDirectory", "sitk.ElastixImageFilter.LogToConsoleOn", "sitk.ElastixImageFilter.Execute", "SimpleITK.GetImageFromArray", "sitk.VectorOfImage.push_back", "HeadAndNeckDataset.HeadAndNeckDataset.getSpacing", "HeadAndNeckDataset.HeadAndNeckDataset.getOrigin", "SimpleITK.JoinSeries", "sitk.JoinSeries.SetSpacing", "sitk.JoinSeries.SetOrigin", "SimpleITK.WriteImage", "SimpleITK.GetImageFromArray", "img.to", "HeadAndNeckDataset.HeadAndNeckDataset.getSpacing", "HeadAndNeckDataset.HeadAndNeckDataset.getOrigin"], "function", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.ElasticCycle.computeDefField", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.getSpacing", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.getOrigin", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.getSpacing", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.getOrigin"], ["", "def", "main", "(", "argv", ")", ":", "\n", "\n", "#torch.backends.cudnn.enabled = False", "\n", "#CUDA_LAUNCH_BLOCKING = 1", "\n", "  ", "callString", "=", "'ElasticCycle.py --regFiles=files.csv --outputPath=PATH'", "\n", "\n", "try", ":", "\n", "    ", "opts", ",", "args", "=", "getopt", ".", "getopt", "(", "argv", ",", "''", ",", "[", "'regFiles='", ",", "'outputPath='", ",", "'defFieldConf='", ",", "'noMask'", "]", ")", "\n", "", "except", "getopt", ".", "GetoptError", "as", "e", ":", "#python3", "\n", "    ", "print", "(", "e", ")", "\n", "print", "(", "callString", ")", "\n", "return", "\n", "\n", "", "if", "not", "(", "len", "(", "opts", ")", ")", ":", "\n", "    ", "print", "(", "callString", ")", "\n", "return", "\n", "\n", "", "inputFiles", "=", "None", "\n", "compDefField", "=", "None", "\n", "doMask", "=", "True", "\n", "for", "opt", ",", "arg", "in", "opts", ":", "\n", "    ", "if", "opt", "==", "'--regFiles'", ":", "\n", "      ", "inputFiles", "=", "arg", "\n", "", "elif", "opt", "==", "'--outputPath'", ":", "\n", "      ", "outputPath", "=", "arg", "\n", "", "elif", "opt", "==", "'--defFieldConf'", ":", "\n", "      ", "compDefField", "=", "arg", "\n", "", "elif", "opt", "==", "'--noMask'", ":", "\n", "      ", "doMask", "=", "False", "\n", "\n", "", "", "if", "not", "os", ".", "path", ".", "isdir", "(", "outputPath", ")", ":", "\n", "    ", "os", ".", "makedirs", "(", "outputPath", ")", "\n", "\n", "\n", "", "headAndNeckTrainSet", "=", "HeadAndNeckDataset", "(", "inputFiles", ",", "loadOnInstantiation", "=", "False", ",", "normlizeImages", "=", "False", ")", "\n", "dataloader", "=", "DataLoader", "(", "headAndNeckTrainSet", ",", "batch_size", "=", "1", ",", "shuffle", "=", "False", ",", "num_workers", "=", "0", ")", "\n", "for", "dataIdx", ",", "data", "in", "enumerate", "(", "dataloader", ",", "0", ")", ":", "\n", "    ", "outputDir", "=", "outputPath", "+", "os", ".", "path", ".", "sep", "+", "str", "(", "dataIdx", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "outputDir", ")", ":", "\n", "      ", "os", ".", "makedirs", "(", "outputDir", ")", "\n", "", "img", "=", "data", "[", "'image'", "]", "\n", "if", "doMask", ":", "\n", "      ", "mask", "=", "data", "[", "'mask'", "]", "\n", "mask", "[", "mask", ">", "0", "]", "=", "1", "\n", "\n", "", "timebins", "=", "img", ".", "shape", "[", "1", "]", "\n", "vectorOfImages", "=", "sitk", ".", "VectorOfImage", "(", ")", "\n", "vectorOfMasks", "=", "sitk", ".", "VectorOfImage", "(", ")", "\n", "for", "t", "in", "range", "(", "0", ",", "timebins", ")", ":", "\n", "      ", "vectorOfImages", ".", "push_back", "(", "sitk", ".", "GetImageFromArray", "(", "img", ".", "to", "(", "torch", ".", "short", ")", "[", "0", ",", "t", ",", "...", "]", ")", ")", "\n", "if", "doMask", ":", "\n", "        ", "vectorOfMasks", ".", "push_back", "(", "sitk", ".", "GetImageFromArray", "(", "mask", "[", "0", ",", "t", ",", "...", "]", ")", ")", "\n", "\n", "", "", "start", "=", "time", ".", "time", "(", ")", "\n", "\n", "\n", "\n", "\n", "\n", "image", "=", "sitk", ".", "JoinSeries", "(", "vectorOfImages", ")", "\n", "\n", "\n", "image", ".", "SetSpacing", "(", "headAndNeckTrainSet", ".", "getSpacing", "(", "dataIdx", ")", "+", "(", "1", ",", ")", ")", "\n", "image", ".", "SetOrigin", "(", "headAndNeckTrainSet", ".", "getOrigin", "(", "dataIdx", ")", "+", "(", "0", ",", ")", ")", "\n", "\n", "\n", "if", "compDefField", "is", "not", "None", ":", "\n", "      ", "computeDefField", "(", "compDefField", ",", "outputPath", ",", "image", ")", "\n", "", "else", ":", "\n", "        ", "sitk", ".", "WriteImage", "(", "image", ",", "outputDir", "+", "os", ".", "path", ".", "sep", "+", "'image4D.nrrd'", ")", "\n", "\n", "if", "doMask", ":", "\n", "          ", "mask", "=", "sitk", ".", "JoinSeries", "(", "vectorOfMasks", ")", "\n", "mask", ".", "SetSpacing", "(", "headAndNeckTrainSet", ".", "getSpacing", "(", "dataIdx", ")", "+", "(", "1", ",", ")", ")", "\n", "mask", ".", "SetOrigin", "(", "headAndNeckTrainSet", ".", "getOrigin", "(", "dataIdx", ")", "+", "(", "0", ",", ")", ")", "\n", "sitk", ".", "WriteImage", "(", "mask", ",", "outputDir", "+", "os", ".", "path", ".", "sep", "+", "'mask4D.nrrd'", ")", "\n", "\n", "\n", "", "continue", "\n", "elastixImageFilter", "=", "sitk", ".", "ElastixImageFilter", "(", ")", "\n", "\n", "parameterMapForward", "=", "elastixImageFilter", ".", "ReadParameterFile", "(", "'/home/fechter/workspace/OneShotImageRegistration/Elastix_ct-lungs/proposed/spacing1-cylic/par000.forward.txt'", ")", "\n", "parameterMapBackward", "=", "elastixImageFilter", ".", "ReadParameterFile", "(", "'/home/fechter/workspace/OneShotImageRegistration/Elastix_ct-lungs/proposed/spacing1-cylic/par001.inverse.txt'", ")", "\n", "\n", "elastixImageFilter", ".", "SetParameterMap", "(", "parameterMapForward", ")", "\n", "elastixImageFilter", ".", "AddParameterMap", "(", "parameterMapBackward", ")", "\n", "\n", "elastixImageFilter", ".", "SetFixedImage", "(", "image", ")", "\n", "elastixImageFilter", ".", "SetFixedMask", "(", "mask", ")", "\n", "elastixImageFilter", ".", "SetMovingImage", "(", "image", ")", "\n", "#     elastixImageFilter.SetMovingMask(mask)", "\n", "\n", "elastixImageFilter", ".", "SetOutputDirectory", "(", "outputDir", ")", "\n", "\n", "elastixImageFilter", ".", "LogToConsoleOn", "(", ")", "\n", "elastixImageFilter", ".", "Execute", "(", ")", "\n", "\n", "\n", "#   ", "\n", "#   resultImages = elastixImageFilter.GetResultImage()", "\n", "#   image3dSize = list(resultImages.GetSize())", "\n", "#   image3dSize[3] = 0", "\n", "#   for resultImgIdx in range(0, resultImages.GetSize()[3]):", "\n", "#     Extractor = sitk.ExtractImageFilter()", "\n", "#     Extractor.SetSize( image3dSize )", "\n", "#     Extractor.SetIndex( [0,0,0,resultImgIdx] )", "\n", "#     sitk.WriteImage( Extractor.Execute( resultImages ), outputPath + os.path.sep + \"result_timeBin_\" + str(resultImgIdx) )", "\n", "\n", "\n", "", "", "end", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "'Registration took overall:'", ",", "end", "-", "start", ",", "'seconds'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.LossFunctions.LossFunctions.__init__": [[9, 15], ["LossFunctions.LossFunctions.initGaussKernels"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.LossFunctions.LossFunctions.initGaussKernels"], ["  ", "def", "__init__", "(", "self", ",", "imgDataToWork", ",", "spacing", ")", ":", "\n", "    ", "self", ".", "imgData", "=", "imgDataToWork", "\n", "self", ".", "defFields", "=", "None", "\n", "self", ".", "currDefFields", "=", "None", "\n", "self", ".", "dimWeight", "=", "spacing", "\n", "self", ".", "initGaussKernels", "(", "imgDataToWork", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.LossFunctions.LossFunctions.initGaussKernels": [[17, 23], ["LossFunctions.LossFunctions.gaussSmothingKernels.append", "LossFunctions.LossFunctions.gaussSmothingKernels.append", "GaussSmoothing.GaussianSmoothing", "GaussSmoothing.GaussianSmoothing"], "methods", ["None"], ["", "def", "initGaussKernels", "(", "self", ",", "imgDataToWork", ")", ":", "\n", "    ", "self", ".", "gaussSmothingKernels", "=", "[", "]", "\n", "self", ".", "gaussSmothingKernels", ".", "append", "(", "gs", ".", "GaussianSmoothing", "(", "imgDataToWork", ".", "shape", "[", "1", "]", ",", "7", ",", "2", ",", "3", ",", "imgDataToWork", ".", "device", ")", ")", "\n", "self", ".", "gaussSmothingKernels", ".", "append", "(", "gs", ".", "GaussianSmoothing", "(", "imgDataToWork", ".", "shape", "[", "1", "]", ",", "13", ",", "4", ",", "3", ",", "imgDataToWork", ".", "device", ")", ")", "\n", "#     self.gaussSmothingKernels.append(gs.GaussianSmoothing(imgDataToWork.shape[1], 49, 16,3,imgDataToWork.device))", "\n", "self", ".", "diceKernelMapping", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.LossFunctions.LossFunctions.update": [[24, 31], ["LossFunctions.LossFunctions.initGaussKernels"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.LossFunctions.LossFunctions.initGaussKernels"], ["", "def", "update", "(", "self", ",", "imgDataToWork", ",", "defFields", ",", "currDefFields", ")", ":", "\n", "    ", "if", "self", ".", "imgData", ".", "shape", "!=", "imgDataToWork", ".", "shape", ":", "\n", "      ", "self", ".", "imgData", "=", "imgDataToWork", "\n", "self", ".", "initGaussKernels", "(", "imgDataToWork", ")", "\n", "\n", "", "self", ".", "defFields", "=", "defFields", "\n", "self", ".", "currDefFields", "=", "currDefFields", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.LossFunctions.LossFunctions.dice_coeff": [[33, 41], ["torch.reshape", "torch.reshape", "torch.sum", "torch.sum", "torch.sum"], "methods", ["None"], ["", "def", "dice_coeff", "(", "self", ",", "y_true", ",", "y_pred", ")", ":", "\n", "    ", "smooth", "=", "0.000001", "\n", "# Flatten", "\n", "y_true_f", "=", "torch", ".", "reshape", "(", "y_true", ",", "(", "-", "1", ",", ")", ")", "\n", "y_pred_f", "=", "torch", ".", "reshape", "(", "y_pred", ",", "(", "-", "1", ",", ")", ")", "\n", "intersection", "=", "torch", ".", "sum", "(", "y_true_f", "*", "y_pred_f", ")", "\n", "score", "=", "2.", "*", "intersection", "/", "(", "torch", ".", "sum", "(", "y_true_f", ")", "+", "torch", ".", "sum", "(", "y_pred_f", ")", "+", "smooth", ")", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.LossFunctions.LossFunctions.dice_loss": [[43, 46], ["LossFunctions.LossFunctions.dice_coeff"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.LossFunctions.LossFunctions.dice_coeff"], ["", "def", "dice_loss", "(", "self", ",", "y_true", ",", "y_pred", ")", ":", "\n", "      ", "loss", "=", "1", "-", "self", ".", "dice_coeff", "(", "y_true", ",", "y_pred", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.LossFunctions.LossFunctions.multiLabelDiceLoss": [[50, 125], ["torch.unique", "torch.tensor", "torch.tensor", "torch.sum", "valsEuqalIgnoreVal.repeat.repeat.repeat", "torch.zeros_like", "Utils.deformWholeImage", "torch.sum", "torch.sum", "torch.sum", "Utils.deformWholeImage", "torch.sum", "LossFunctions.LossFunctions.diceKernelMapping.has_key", "LossFunctions.LossFunctions.diceKernelMapping[].has_key", "torch.zeros_like", "gaussKernel", "LossFunctions.LossFunctions.diceKernelMapping.has_key", "torch.sum", "torch.sum", "str", "str", "str", "str", "int", "int", "int", "int", "int", "int"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.deformWholeImage", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.deformWholeImage"], ["", "def", "multiLabelDiceLoss", "(", "self", ",", "y_true", ",", "deformationField", ",", "multiScale", "=", "False", ",", "valueToIgnore", "=", "None", ")", ":", "\n", "    ", "smooth", "=", "0.0000000001", "\n", "uniqueVals", "=", "torch", ".", "unique", "(", "y_true", ",", "sorted", "=", "True", ")", "\n", "\n", "denominator", "=", "torch", ".", "tensor", "(", "0.0", ",", "device", "=", "deformationField", ".", "device", ")", "\n", "numerator", "=", "torch", ".", "tensor", "(", "0.0", ",", "device", "=", "deformationField", ".", "device", ")", "\n", "\n", "if", "valueToIgnore", "is", "not", "None", ":", "\n", "      ", "valsEuqalIgnoreVal", "=", "self", ".", "imgData", "==", "valueToIgnore", "\n", "valsEuqalIgnoreVal", "=", "torch", ".", "sum", "(", "valsEuqalIgnoreVal", ",", "1", ")", "\n", "valsEuqalIgnoreVal", "=", "valsEuqalIgnoreVal", ".", "repeat", "(", "1", ",", "self", ".", "imgData", ".", "shape", "[", "1", "]", ",", "1", ",", "1", ",", "1", ")", "\n", "\n", "", "idx", "=", "0", "\n", "for", "label", "in", "uniqueVals", "[", "1", ":", "]", ":", "\n", "      ", "trueLabelVol", "=", "torch", ".", "zeros_like", "(", "y_true", ")", "\n", "if", "valueToIgnore", "is", "not", "None", ":", "\n", "        ", "boolArray0", "=", "y_true", "==", "label", "\n", "boolArray1", "=", "valsEuqalIgnoreVal", "==", "0", "\n", "trueLabelVol", "[", "boolArray0", "&", "boolArray1", "]", "=", "1.0", "\n", "", "else", ":", "\n", "        ", "trueLabelVol", "[", "y_true", "==", "label", "]", "=", "1.0", "\n", "", "defLabelVol", "=", "Utils", ".", "deformWholeImage", "(", "trueLabelVol", ",", "deformationField", ",", "False", ",", "1", "+", "idx", ")", "\n", "\n", "intersection", "=", "torch", ".", "sum", "(", "trueLabelVol", "*", "defLabelVol", ")", "\n", "\n", "labelSum", "=", "torch", ".", "sum", "(", "defLabelVol", ")", "+", "torch", ".", "sum", "(", "trueLabelVol", ")", "\n", "denominator", "=", "denominator", "+", "labelSum", "\n", "numerator", "=", "numerator", "+", "intersection", "\n", "idx", "=", "idx", "+", "1", "\n", "\n", "", "dice", "=", "2.", "*", "numerator", "/", "(", "denominator", "+", "smooth", ")", "\n", "\n", "loss", "=", "1", "-", "dice", "\n", "if", "multiScale", ":", "\n", "      ", "gaussKernelsApplied", "=", "0", "\n", "for", "gaussKernel", "in", "self", ".", "gaussSmothingKernels", ":", "\n", "        ", "if", "y_true", ".", "shape", "[", "2", "]", "<", "gaussKernel", ".", "weight", ".", "shape", "[", "2", "]", "or", "y_true", ".", "shape", "[", "3", "]", "<", "gaussKernel", ".", "weight", ".", "shape", "[", "3", "]", "or", "y_true", ".", "shape", "[", "4", "]", "<", "gaussKernel", ".", "weight", ".", "shape", "[", "4", "]", ":", "\n", "          ", "continue", "\n", "", "else", ":", "\n", "          ", "gaussAdded", "=", "False", "\n", "denominator", "=", "0.0", "\n", "numerator", "=", "0.0", "\n", "for", "label", "in", "uniqueVals", "[", "1", ":", "]", ":", "\n", "            ", "if", "not", "gaussAdded", ":", "\n", "              ", "gaussKernelsApplied", "=", "gaussKernelsApplied", "+", "1", "\n", "gaussAdded", "=", "True", "\n", "", "if", "self", ".", "diceKernelMapping", ".", "has_key", "(", "gaussKernel", ")", "and", "self", ".", "diceKernelMapping", "[", "gaussKernel", "]", ".", "has_key", "(", "str", "(", "label", ")", ")", ":", "\n", "              ", "trueLabelVol", "=", "self", ".", "diceKernelMapping", "[", "gaussKernel", "]", "[", "str", "(", "label", ")", "]", "\n", "", "else", ":", "\n", "              ", "trueLabelVol", "=", "torch", ".", "zeros_like", "(", "y_true", ")", "\n", "if", "valueToIgnore", "is", "not", "None", ":", "\n", "                ", "boolArray0", "=", "y_true", "==", "label", "\n", "boolArray1", "=", "valsEuqalIgnoreVal", "==", "0", "\n", "trueLabelVol", "[", "boolArray0", "&", "boolArray1", "]", "=", "1.0", "\n", "", "else", ":", "\n", "                ", "trueLabelVol", "[", "y_true", "==", "label", "]", "=", "1.0", "\n", "", "trueLabelVol", "=", "gaussKernel", "(", "trueLabelVol", ")", "\n", "if", "self", ".", "diceKernelMapping", ".", "has_key", "(", "gaussKernel", ")", ":", "\n", "                ", "self", ".", "diceKernelMapping", "[", "gaussKernel", "]", "[", "str", "(", "label", ")", "]", "=", "trueLabelVol", "\n", "", "else", ":", "\n", "                ", "self", ".", "diceKernelMapping", "[", "gaussKernel", "]", "=", "{", "str", "(", "label", ")", ":", "trueLabelVol", "}", "\n", "\n", "", "", "defLabelVol", "=", "Utils", ".", "deformWholeImage", "(", "trueLabelVol", ",", "deformationField", "[", "...", ",", "int", "(", "(", "deformationField", ".", "shape", "[", "2", "]", "-", "trueLabelVol", ".", "shape", "[", "2", "]", ")", "/", "2.0", ")", ":", "trueLabelVol", ".", "shape", "[", "2", "]", "+", "int", "(", "(", "deformationField", ".", "shape", "[", "2", "]", "-", "trueLabelVol", ".", "shape", "[", "2", "]", ")", "/", "2.0", ")", ",", "\n", "int", "(", "(", "deformationField", ".", "shape", "[", "3", "]", "-", "trueLabelVol", ".", "shape", "[", "3", "]", ")", "/", "2.0", ")", ":", "trueLabelVol", ".", "shape", "[", "3", "]", "+", "int", "(", "(", "deformationField", ".", "shape", "[", "3", "]", "-", "trueLabelVol", ".", "shape", "[", "3", "]", ")", "/", "2.0", ")", ",", "\n", "int", "(", "(", "deformationField", ".", "shape", "[", "4", "]", "-", "trueLabelVol", ".", "shape", "[", "4", "]", ")", "/", "2.0", ")", ":", "trueLabelVol", ".", "shape", "[", "4", "]", "+", "int", "(", "(", "deformationField", ".", "shape", "[", "4", "]", "-", "trueLabelVol", ".", "shape", "[", "4", "]", ")", "/", "2.0", ")", "]", ",", "False", ",", "1", "+", "idx", ")", "\n", "intersection", "=", "torch", ".", "sum", "(", "trueLabelVol", "*", "defLabelVol", ")", "\n", "labelSum", "=", "torch", ".", "sum", "(", "defLabelVol", ")", "+", "torch", ".", "sum", "(", "trueLabelVol", ")", "\n", "denominator", "=", "denominator", "+", "labelSum", "\n", "numerator", "=", "numerator", "+", "intersection", "\n", "idx", "=", "idx", "+", "1", "\n", "", "dice", "=", "2.", "*", "numerator", "/", "(", "denominator", "+", "smooth", ")", "\n", "loss", "=", "loss", "+", "(", "1", "-", "dice", ")", "\n", "", "", "return", "loss", "/", "(", "gaussKernelsApplied", "+", "1.0", ")", "\n", "", "else", ":", "\n", "      ", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.LossFunctions.LossFunctions.multiScaleDiceLoss": [[129, 141], ["LossFunctions.LossFunctions.dice_loss", "LossFunctions.LossFunctions.diceKernelMapping.has_key", "gaussKernel", "gaussKernel", "LossFunctions.LossFunctions.dice_loss", "len"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.LossFunctions.LossFunctions.dice_loss", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.LossFunctions.LossFunctions.dice_loss"], ["", "", "def", "multiScaleDiceLoss", "(", "self", ",", "y_true", ",", "y_pred", ")", ":", "\n", "    ", "currDscLoss", "=", "self", ".", "dice_loss", "(", "y_true", ",", "y_pred", ")", "\n", "for", "gaussKernel", "in", "self", ".", "gaussSmothingKernels", ":", "\n", "      ", "if", "self", ".", "diceKernelMapping", ".", "has_key", "(", "gaussKernel", ")", ":", "\n", "        ", "trueSmooth", "=", "self", ".", "diceKernelMapping", "[", "gaussKernel", "]", "\n", "", "else", ":", "\n", "        ", "trueSmooth", "=", "gaussKernel", "(", "y_true", ")", "\n", "self", ".", "diceKernelMapping", "[", "gaussKernel", "]", "=", "trueSmooth", "\n", "", "predSmooth", "=", "gaussKernel", "(", "y_pred", ")", "\n", "currDscLoss", "=", "currDscLoss", "+", "self", ".", "dice_loss", "(", "trueSmooth", ",", "predSmooth", ")", "\n", "\n", "", "return", "currDscLoss", "/", "(", "len", "(", "self", ".", "gaussSmothingKernels", ")", "+", "1.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.LossFunctions.LossFunctions.cycleLoss": [[144, 167], ["torch.empty", "range", "range", "range", "range", "torch.sum", "torch.sum", "torch.sum", "torch.pow", "torch.pow", "torch.pow", "torch.mean", "torch.empty.sum"], "methods", ["None"], ["", "def", "cycleLoss", "(", "self", ",", "vecFields", ",", "outOfBoundsTensor", ",", "device0", ")", ":", "\n", "    ", "loss", "=", "torch", ".", "empty", "(", "vecFields", ".", "shape", "[", "0", "]", ",", "device", "=", "device0", ")", "\n", "for", "imgIdx", "in", "range", "(", "vecFields", ".", "shape", "[", "0", "]", ")", ":", "\n", "      ", "vecField", "=", "vecFields", "[", "imgIdx", "]", "\n", "oOBT", "=", "outOfBoundsTensor", "[", "imgIdx", "]", "\n", "\n", "dir0Idx", "=", "range", "(", "0", ",", "vecField", ".", "shape", "[", "0", "]", ",", "3", ")", "\n", "dir1Idx", "=", "range", "(", "1", ",", "vecField", ".", "shape", "[", "0", "]", ",", "3", ")", "\n", "dir2Idx", "=", "range", "(", "2", ",", "vecField", ".", "shape", "[", "0", "]", ",", "3", ")", "\n", "\n", "dir0Sum", "=", "torch", ".", "sum", "(", "vecField", "[", "dir0Idx", ",", "]", ",", "dim", "=", "0", ")", "\n", "dir0Sum", "[", "oOBT", "[", "0", ",", ":", "]", "]", "=", "0", "\n", "dir1Sum", "=", "torch", ".", "sum", "(", "vecField", "[", "dir1Idx", ",", "]", ",", "dim", "=", "0", ")", "\n", "dir1Sum", "[", "oOBT", "[", "1", ",", ":", "]", "]", "=", "0", "\n", "dir2Sum", "=", "torch", ".", "sum", "(", "vecField", "[", "dir2Idx", ",", "]", ",", "dim", "=", "0", ")", "\n", "dir2Sum", "[", "oOBT", "[", "2", ",", ":", "]", "]", "=", "0", "\n", "\n", "dir0Pow", "=", "torch", ".", "pow", "(", "dir0Sum", ",", "2", ")", "\n", "dir1Pow", "=", "torch", ".", "pow", "(", "dir1Sum", ",", "2", ")", "\n", "dir2Pow", "=", "torch", ".", "pow", "(", "dir2Sum", ",", "2", ")", "\n", "\n", "loss", "[", "imgIdx", "]", "=", "torch", ".", "mean", "(", "dir0Pow", "+", "dir1Pow", "+", "dir2Pow", ")", "\n", "", "return", "loss", ".", "sum", "(", ")", "/", "vecFields", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.LossFunctions.LossFunctions.smoothBoundary": [[169, 228], ["torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.pow", "torch.pow", "torch.sum", "torch.pow", "torch.pow", "torch.sum", "torch.pow", "torch.pow", "torch.sum", "torch.sum"], "methods", ["None"], ["", "def", "smoothBoundary", "(", "self", ",", "idx", ",", "device0", ",", "addedField", ")", ":", "\n", "    ", "loss00", "=", "torch", ".", "tensor", "(", "0.0", ",", "device", "=", "device0", ")", "\n", "loss01", "=", "torch", ".", "tensor", "(", "0.0", ",", "device", "=", "device0", ")", "\n", "loss11", "=", "torch", ".", "tensor", "(", "0.0", ",", "device", "=", "device0", ")", "\n", "loss10", "=", "torch", ".", "tensor", "(", "0.0", ",", "device", "=", "device0", ")", "\n", "loss20", "=", "torch", ".", "tensor", "(", "0.0", ",", "device", "=", "device0", ")", "\n", "loss21", "=", "torch", ".", "tensor", "(", "0.0", ",", "device", "=", "device0", ")", "\n", "currDefFields", "=", "self", ".", "currDefFields", "\n", "defFields", "=", "addedField", "\n", "if", "idx", "[", "0", "]", ">", "0", ":", "\n", "      ", "loss000", "=", "currDefFields", "[", ":", ",", ":", ",", "idx", "[", "0", "]", "-", "1", ",", "idx", "[", "1", "]", ":", "idx", "[", "1", "]", "+", "defFields", ".", "shape", "[", "3", "]", ",", "idx", "[", "2", "]", ":", "idx", "[", "2", "]", "+", "defFields", ".", "shape", "[", "4", "]", "]", "-", "defFields", "[", ":", ",", ":", ",", "0", ",", ":", ",", ":", "]", "\n", "loss001", "=", "(", "currDefFields", "[", ":", ",", ":", ",", "idx", "[", "0", "]", "-", "1", ",", "idx", "[", "1", "]", ":", "idx", "[", "1", "]", "+", "defFields", ".", "shape", "[", "3", "]", ",", "idx", "[", "2", "]", ":", "idx", "[", "2", "]", "+", "defFields", ".", "shape", "[", "4", "]", "]", "-", "defFields", "[", ":", ",", ":", ",", "1", ",", ":", ",", ":", "]", ")", "*", "0.8", "\n", "loss002", "=", "(", "currDefFields", "[", ":", ",", ":", ",", "idx", "[", "0", "]", "-", "1", ",", "idx", "[", "1", "]", ":", "idx", "[", "1", "]", "+", "defFields", ".", "shape", "[", "3", "]", ",", "idx", "[", "2", "]", ":", "idx", "[", "2", "]", "+", "defFields", ".", "shape", "[", "4", "]", "]", "-", "defFields", "[", ":", ",", ":", ",", "2", ",", ":", ",", ":", "]", ")", "*", "0.6", "\n", "loss003", "=", "(", "currDefFields", "[", ":", ",", ":", ",", "idx", "[", "0", "]", "-", "1", ",", "idx", "[", "1", "]", ":", "idx", "[", "1", "]", "+", "defFields", ".", "shape", "[", "3", "]", ",", "idx", "[", "2", "]", ":", "idx", "[", "2", "]", "+", "defFields", ".", "shape", "[", "4", "]", "]", "-", "defFields", "[", ":", ",", ":", ",", "3", ",", ":", ",", ":", "]", ")", "*", "0.4", "\n", "loss004", "=", "(", "currDefFields", "[", ":", ",", ":", ",", "idx", "[", "0", "]", "-", "1", ",", "idx", "[", "1", "]", ":", "idx", "[", "1", "]", "+", "defFields", ".", "shape", "[", "3", "]", ",", "idx", "[", "2", "]", ":", "idx", "[", "2", "]", "+", "defFields", ".", "shape", "[", "4", "]", "]", "-", "defFields", "[", ":", ",", ":", ",", "4", ",", ":", ",", ":", "]", ")", "*", "0.2", "\n", "loss00", "=", "torch", ".", "pow", "(", "loss000", "+", "loss001", "+", "loss002", "+", "loss003", "+", "loss004", ",", "2", ")", "\n", "", "if", "idx", "[", "0", "]", "<", "currDefFields", ".", "shape", "[", "2", "]", "-", "defFields", ".", "shape", "[", "2", "]", ":", "\n", "      ", "loss010", "=", "(", "currDefFields", "[", ":", ",", ":", ",", "idx", "[", "0", "]", "+", "defFields", ".", "shape", "[", "2", "]", "+", "1", ",", "idx", "[", "1", "]", ":", "idx", "[", "1", "]", "+", "defFields", ".", "shape", "[", "3", "]", ",", "idx", "[", "2", "]", ":", "idx", "[", "2", "]", "+", "defFields", ".", "shape", "[", "4", "]", "]", "-", "defFields", "[", ":", ",", ":", ",", "-", "1", ",", ":", ",", ":", "]", ")", "\n", "loss011", "=", "(", "currDefFields", "[", ":", ",", ":", ",", "idx", "[", "0", "]", "+", "defFields", ".", "shape", "[", "2", "]", "+", "1", ",", "idx", "[", "1", "]", ":", "idx", "[", "1", "]", "+", "defFields", ".", "shape", "[", "3", "]", ",", "idx", "[", "2", "]", ":", "idx", "[", "2", "]", "+", "defFields", ".", "shape", "[", "4", "]", "]", "-", "defFields", "[", ":", ",", ":", ",", "-", "2", ",", ":", ",", ":", "]", ")", "*", "0.8", "\n", "loss012", "=", "(", "currDefFields", "[", ":", ",", ":", ",", "idx", "[", "0", "]", "+", "defFields", ".", "shape", "[", "2", "]", "+", "1", ",", "idx", "[", "1", "]", ":", "idx", "[", "1", "]", "+", "defFields", ".", "shape", "[", "3", "]", ",", "idx", "[", "2", "]", ":", "idx", "[", "2", "]", "+", "defFields", ".", "shape", "[", "4", "]", "]", "-", "defFields", "[", ":", ",", ":", ",", "-", "3", ",", ":", ",", ":", "]", ")", "*", "0.6", "\n", "loss013", "=", "(", "currDefFields", "[", ":", ",", ":", ",", "idx", "[", "0", "]", "+", "defFields", ".", "shape", "[", "2", "]", "+", "1", ",", "idx", "[", "1", "]", ":", "idx", "[", "1", "]", "+", "defFields", ".", "shape", "[", "3", "]", ",", "idx", "[", "2", "]", ":", "idx", "[", "2", "]", "+", "defFields", ".", "shape", "[", "4", "]", "]", "-", "defFields", "[", ":", ",", ":", ",", "-", "4", ",", ":", ",", ":", "]", ")", "*", "0.4", "\n", "loss014", "=", "(", "currDefFields", "[", ":", ",", ":", ",", "idx", "[", "0", "]", "+", "defFields", ".", "shape", "[", "2", "]", "+", "1", ",", "idx", "[", "1", "]", ":", "idx", "[", "1", "]", "+", "defFields", ".", "shape", "[", "3", "]", ",", "idx", "[", "2", "]", ":", "idx", "[", "2", "]", "+", "defFields", ".", "shape", "[", "4", "]", "]", "-", "defFields", "[", ":", ",", ":", ",", "-", "5", ",", ":", ",", ":", "]", ")", "*", "0.2", "\n", "loss01", "=", "torch", ".", "pow", "(", "loss010", "+", "loss011", "+", "loss012", "+", "loss013", "+", "loss014", ",", "2", ")", "\n", "", "loss0", "=", "torch", ".", "sum", "(", "loss00", "+", "loss01", ")", "/", "self", ".", "dimWeight", "[", "0", "]", "\n", "\n", "if", "idx", "[", "1", "]", ">", "0", ":", "\n", "      ", "loss100", "=", "(", "currDefFields", "[", ":", ",", ":", ",", "idx", "[", "0", "]", ":", "idx", "[", "0", "]", "+", "defFields", ".", "shape", "[", "2", "]", ",", "idx", "[", "1", "]", "-", "1", ",", "idx", "[", "2", "]", ":", "idx", "[", "2", "]", "+", "defFields", ".", "shape", "[", "4", "]", "]", "-", "defFields", "[", ":", ",", ":", ",", ":", ",", "0", ",", ":", "]", ")", "\n", "loss101", "=", "(", "currDefFields", "[", ":", ",", ":", ",", "idx", "[", "0", "]", ":", "idx", "[", "0", "]", "+", "defFields", ".", "shape", "[", "2", "]", ",", "idx", "[", "1", "]", "-", "1", ",", "idx", "[", "2", "]", ":", "idx", "[", "2", "]", "+", "defFields", ".", "shape", "[", "4", "]", "]", "-", "defFields", "[", ":", ",", ":", ",", ":", ",", "1", ",", ":", "]", ")", "*", "0.8", "\n", "loss102", "=", "(", "currDefFields", "[", ":", ",", ":", ",", "idx", "[", "0", "]", ":", "idx", "[", "0", "]", "+", "defFields", ".", "shape", "[", "2", "]", ",", "idx", "[", "1", "]", "-", "1", ",", "idx", "[", "2", "]", ":", "idx", "[", "2", "]", "+", "defFields", ".", "shape", "[", "4", "]", "]", "-", "defFields", "[", ":", ",", ":", ",", ":", ",", "2", ",", ":", "]", ")", "*", "0.6", "\n", "loss103", "=", "(", "currDefFields", "[", ":", ",", ":", ",", "idx", "[", "0", "]", ":", "idx", "[", "0", "]", "+", "defFields", ".", "shape", "[", "2", "]", ",", "idx", "[", "1", "]", "-", "1", ",", "idx", "[", "2", "]", ":", "idx", "[", "2", "]", "+", "defFields", ".", "shape", "[", "4", "]", "]", "-", "defFields", "[", ":", ",", ":", ",", ":", ",", "3", ",", ":", "]", ")", "*", "0.4", "\n", "loss104", "=", "(", "currDefFields", "[", ":", ",", ":", ",", "idx", "[", "0", "]", ":", "idx", "[", "0", "]", "+", "defFields", ".", "shape", "[", "2", "]", ",", "idx", "[", "1", "]", "-", "1", ",", "idx", "[", "2", "]", ":", "idx", "[", "2", "]", "+", "defFields", ".", "shape", "[", "4", "]", "]", "-", "defFields", "[", ":", ",", ":", ",", ":", ",", "4", ",", ":", "]", ")", "*", "0.2", "\n", "loss10", "=", "torch", ".", "pow", "(", "loss100", "+", "loss101", "+", "loss102", "+", "loss103", "+", "loss104", ",", "2", ")", "\n", "", "if", "idx", "[", "1", "]", "<", "currDefFields", ".", "shape", "[", "3", "]", "-", "defFields", ".", "shape", "[", "3", "]", ":", "\n", "      ", "loss110", "=", "(", "currDefFields", "[", ":", ",", ":", ",", "idx", "[", "0", "]", ":", "idx", "[", "0", "]", "+", "defFields", ".", "shape", "[", "2", "]", ",", "idx", "[", "1", "]", "+", "defFields", ".", "shape", "[", "3", "]", "+", "1", ",", "idx", "[", "2", "]", ":", "idx", "[", "2", "]", "+", "defFields", ".", "shape", "[", "4", "]", "]", "-", "defFields", "[", ":", ",", ":", ",", ":", ",", "-", "1", ",", ":", "]", ")", "\n", "loss111", "=", "(", "currDefFields", "[", ":", ",", ":", ",", "idx", "[", "0", "]", ":", "idx", "[", "0", "]", "+", "defFields", ".", "shape", "[", "2", "]", ",", "idx", "[", "1", "]", "+", "defFields", ".", "shape", "[", "3", "]", "+", "1", ",", "idx", "[", "2", "]", ":", "idx", "[", "2", "]", "+", "defFields", ".", "shape", "[", "4", "]", "]", "-", "defFields", "[", ":", ",", ":", ",", ":", ",", "-", "2", ",", ":", "]", ")", "*", "0.8", "\n", "loss112", "=", "(", "currDefFields", "[", ":", ",", ":", ",", "idx", "[", "0", "]", ":", "idx", "[", "0", "]", "+", "defFields", ".", "shape", "[", "2", "]", ",", "idx", "[", "1", "]", "+", "defFields", ".", "shape", "[", "3", "]", "+", "1", ",", "idx", "[", "2", "]", ":", "idx", "[", "2", "]", "+", "defFields", ".", "shape", "[", "4", "]", "]", "-", "defFields", "[", ":", ",", ":", ",", ":", ",", "-", "3", ",", ":", "]", ")", "*", "0.6", "\n", "loss113", "=", "(", "currDefFields", "[", ":", ",", ":", ",", "idx", "[", "0", "]", ":", "idx", "[", "0", "]", "+", "defFields", ".", "shape", "[", "2", "]", ",", "idx", "[", "1", "]", "+", "defFields", ".", "shape", "[", "3", "]", "+", "1", ",", "idx", "[", "2", "]", ":", "idx", "[", "2", "]", "+", "defFields", ".", "shape", "[", "4", "]", "]", "-", "defFields", "[", ":", ",", ":", ",", ":", ",", "-", "4", ",", ":", "]", ")", "*", "0.4", "\n", "loss114", "=", "(", "currDefFields", "[", ":", ",", ":", ",", "idx", "[", "0", "]", ":", "idx", "[", "0", "]", "+", "defFields", ".", "shape", "[", "2", "]", ",", "idx", "[", "1", "]", "+", "defFields", ".", "shape", "[", "3", "]", "+", "1", ",", "idx", "[", "2", "]", ":", "idx", "[", "2", "]", "+", "defFields", ".", "shape", "[", "4", "]", "]", "-", "defFields", "[", ":", ",", ":", ",", ":", ",", "-", "5", ",", ":", "]", ")", "*", "0.2", "\n", "loss11", "=", "torch", ".", "pow", "(", "loss110", "+", "loss111", "+", "loss112", "+", "loss113", "+", "loss114", ",", "2", ")", "\n", "", "loss1", "=", "torch", ".", "sum", "(", "loss10", "+", "loss11", ")", "/", "self", ".", "dimWeight", "[", "1", "]", "\n", "\n", "if", "idx", "[", "2", "]", ">", "0", ":", "\n", "      ", "loss200", "=", "(", "currDefFields", "[", ":", ",", ":", ",", "idx", "[", "0", "]", ":", "idx", "[", "0", "]", "+", "defFields", ".", "shape", "[", "2", "]", ",", "idx", "[", "1", "]", ":", "idx", "[", "1", "]", "+", "defFields", ".", "shape", "[", "3", "]", ",", "idx", "[", "2", "]", "-", "1", "]", "-", "defFields", "[", ":", ",", ":", ",", ":", ",", ":", ",", "0", "]", ")", "\n", "loss201", "=", "(", "currDefFields", "[", ":", ",", ":", ",", "idx", "[", "0", "]", ":", "idx", "[", "0", "]", "+", "defFields", ".", "shape", "[", "2", "]", ",", "idx", "[", "1", "]", ":", "idx", "[", "1", "]", "+", "defFields", ".", "shape", "[", "3", "]", ",", "idx", "[", "2", "]", "-", "1", "]", "-", "defFields", "[", ":", ",", ":", ",", ":", ",", ":", ",", "1", "]", ")", "*", "0.8", "\n", "loss202", "=", "(", "currDefFields", "[", ":", ",", ":", ",", "idx", "[", "0", "]", ":", "idx", "[", "0", "]", "+", "defFields", ".", "shape", "[", "2", "]", ",", "idx", "[", "1", "]", ":", "idx", "[", "1", "]", "+", "defFields", ".", "shape", "[", "3", "]", ",", "idx", "[", "2", "]", "-", "1", "]", "-", "defFields", "[", ":", ",", ":", ",", ":", ",", ":", ",", "2", "]", ")", "*", "0.6", "\n", "loss203", "=", "(", "currDefFields", "[", ":", ",", ":", ",", "idx", "[", "0", "]", ":", "idx", "[", "0", "]", "+", "defFields", ".", "shape", "[", "2", "]", ",", "idx", "[", "1", "]", ":", "idx", "[", "1", "]", "+", "defFields", ".", "shape", "[", "3", "]", ",", "idx", "[", "2", "]", "-", "1", "]", "-", "defFields", "[", ":", ",", ":", ",", ":", ",", ":", ",", "3", "]", ")", "*", "0.4", "\n", "loss204", "=", "(", "currDefFields", "[", ":", ",", ":", ",", "idx", "[", "0", "]", ":", "idx", "[", "0", "]", "+", "defFields", ".", "shape", "[", "2", "]", ",", "idx", "[", "1", "]", ":", "idx", "[", "1", "]", "+", "defFields", ".", "shape", "[", "3", "]", ",", "idx", "[", "2", "]", "-", "1", "]", "-", "defFields", "[", ":", ",", ":", ",", ":", ",", ":", ",", "4", "]", ")", "*", "0.2", "\n", "loss20", "=", "torch", ".", "pow", "(", "loss200", "+", "loss201", "+", "loss202", "+", "loss203", "+", "loss204", ",", "2", ")", "\n", "", "if", "idx", "[", "2", "]", "<", "currDefFields", ".", "shape", "[", "4", "]", "-", "defFields", ".", "shape", "[", "4", "]", ":", "\n", "      ", "loss210", "=", "(", "currDefFields", "[", ":", ",", ":", ",", "idx", "[", "0", "]", ":", "idx", "[", "0", "]", "+", "defFields", ".", "shape", "[", "2", "]", ",", "idx", "[", "1", "]", ":", "idx", "[", "1", "]", "+", "defFields", ".", "shape", "[", "3", "]", ",", "idx", "[", "2", "]", "+", "defFields", ".", "shape", "[", "4", "]", "+", "1", "]", "-", "defFields", "[", ":", ",", ":", ",", ":", ",", ":", ",", "-", "1", "]", ")", "\n", "loss211", "=", "(", "currDefFields", "[", ":", ",", ":", ",", "idx", "[", "0", "]", ":", "idx", "[", "0", "]", "+", "defFields", ".", "shape", "[", "2", "]", ",", "idx", "[", "1", "]", ":", "idx", "[", "1", "]", "+", "defFields", ".", "shape", "[", "3", "]", ",", "idx", "[", "2", "]", "+", "defFields", ".", "shape", "[", "4", "]", "+", "1", "]", "-", "defFields", "[", ":", ",", ":", ",", ":", ",", ":", ",", "-", "2", "]", ")", "*", "0.8", "\n", "loss212", "=", "(", "currDefFields", "[", ":", ",", ":", ",", "idx", "[", "0", "]", ":", "idx", "[", "0", "]", "+", "defFields", ".", "shape", "[", "2", "]", ",", "idx", "[", "1", "]", ":", "idx", "[", "1", "]", "+", "defFields", ".", "shape", "[", "3", "]", ",", "idx", "[", "2", "]", "+", "defFields", ".", "shape", "[", "4", "]", "+", "1", "]", "-", "defFields", "[", ":", ",", ":", ",", ":", ",", ":", ",", "-", "3", "]", ")", "*", "0.6", "\n", "loss213", "=", "(", "currDefFields", "[", ":", ",", ":", ",", "idx", "[", "0", "]", ":", "idx", "[", "0", "]", "+", "defFields", ".", "shape", "[", "2", "]", ",", "idx", "[", "1", "]", ":", "idx", "[", "1", "]", "+", "defFields", ".", "shape", "[", "3", "]", ",", "idx", "[", "2", "]", "+", "defFields", ".", "shape", "[", "4", "]", "+", "1", "]", "-", "defFields", "[", ":", ",", ":", ",", ":", ",", ":", ",", "-", "4", "]", ")", "*", "0.4", "\n", "loss214", "=", "(", "currDefFields", "[", ":", ",", ":", ",", "idx", "[", "0", "]", ":", "idx", "[", "0", "]", "+", "defFields", ".", "shape", "[", "2", "]", ",", "idx", "[", "1", "]", ":", "idx", "[", "1", "]", "+", "defFields", ".", "shape", "[", "3", "]", ",", "idx", "[", "2", "]", "+", "defFields", ".", "shape", "[", "4", "]", "+", "1", "]", "-", "defFields", "[", ":", ",", ":", ",", ":", ",", ":", ",", "-", "5", "]", ")", "*", "0.2", "\n", "loss21", "=", "torch", ".", "pow", "(", "loss210", "+", "loss211", "+", "loss212", "+", "loss213", "+", "loss214", ",", "2", ")", "\n", "", "loss2", "=", "torch", ".", "sum", "(", "loss20", "+", "loss21", ")", "/", "self", ".", "dimWeight", "[", "2", "]", "\n", "\n", "loss", "=", "torch", ".", "sum", "(", "loss0", "+", "loss1", "+", "loss2", ")", "/", "(", "defFields", ".", "shape", "[", "2", "]", "*", "defFields", ".", "shape", "[", "3", "]", "*", "defFields", ".", "shape", "[", "4", "]", ")", "\n", "return", "loss", "/", "defFields", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.LossFunctions.LossFunctions.getSmoothnessForDir1": [[229, 244], ["numpy.arange", "vecField[].detach", "Utils.getLoss10", "vecField[].detach", "Utils.getLoss11"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getLoss10", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getLoss11"], ["", "def", "getSmoothnessForDir1", "(", "self", ",", "imgidx", ",", "device", ")", ":", "\n", "\n", "    ", "vecField", "=", "self", ".", "defFields", "[", "imgidx", "]", "\n", "idx", "=", "np", ".", "arange", "(", "0", ",", "vecField", ".", "shape", "[", "1", "]", "-", "1", ")", "\n", "\n", "t", "=", "vecField", "[", ":", ",", "idx", "+", "1", ",", ":", ",", ":", "]", ".", "detach", "(", ")", "\n", "loss10", "=", "Utils", ".", "getLoss10", "(", "vecField", ".", "shape", ",", "device", ")", "\n", "loss10", "[", ":", ",", "idx", ",", ":", ",", ":", "]", "=", "t", "-", "vecField", "[", ":", ",", "idx", ",", ":", ",", ":", "]", "# * weights", "\n", "\n", "t", "=", "vecField", "[", ":", ",", "idx", ",", ":", ",", ":", "]", ".", "detach", "(", ")", "\n", "loss11", "=", "Utils", ".", "getLoss11", "(", "vecField", ".", "shape", ",", "device", ")", "\n", "loss11", "[", ":", ",", "idx", "+", "1", ",", ":", ",", ":", "]", "=", "t", "-", "vecField", "[", ":", ",", "idx", "+", "1", ",", ":", ",", ":", "]", "# * weights", "\n", "loss1", "=", "(", "loss10", "+", "loss11", ")", "/", "self", ".", "dimWeight", "[", "0", "]", "\n", "\n", "return", "loss1", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.LossFunctions.LossFunctions.getSmoothnessForDir2": [[245, 258], ["numpy.arange", "vecField[].detach", "Utils.getLoss20", "vecField[].detach", "Utils.getLoss21"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getLoss20", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getLoss21"], ["", "def", "getSmoothnessForDir2", "(", "self", ",", "imgidx", ",", "device", ")", ":", "\n", "    ", "vecField", "=", "self", ".", "defFields", "[", "imgidx", "]", "\n", "idx", "=", "np", ".", "arange", "(", "0", ",", "vecField", ".", "shape", "[", "2", "]", "-", "1", ")", "\n", "\n", "t", "=", "vecField", "[", ":", ",", ":", ",", "idx", "+", "1", ",", ":", "]", ".", "detach", "(", ")", "\n", "loss20", "=", "Utils", ".", "getLoss20", "(", "vecField", ".", "shape", ",", "device", ")", "\n", "loss20", "[", ":", ",", ":", ",", "idx", ",", ":", "]", "=", "t", "-", "vecField", "[", ":", ",", ":", ",", "idx", ",", ":", "]", "# * weights", "\n", "\n", "t", "=", "vecField", "[", ":", ",", ":", ",", "idx", ",", ":", "]", ".", "detach", "(", ")", "\n", "loss21", "=", "Utils", ".", "getLoss21", "(", "vecField", ".", "shape", ",", "device", ")", "\n", "loss21", "[", ":", ",", ":", ",", "idx", "+", "1", ",", ":", "]", "=", "t", "-", "vecField", "[", ":", ",", ":", ",", "idx", "+", "1", ",", ":", "]", "# * weights", "\n", "loss2", "=", "(", "loss20", "+", "loss21", ")", "/", "self", ".", "dimWeight", "[", "1", "]", "\n", "return", "loss2", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.LossFunctions.LossFunctions.getSmoothnessForDir3": [[259, 272], ["numpy.arange", "vecField[].detach", "Utils.getLoss30", "vecField[].detach", "Utils.getLoss31"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getLoss30", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getLoss31"], ["", "def", "getSmoothnessForDir3", "(", "self", ",", "imgidx", ",", "device", ")", ":", "\n", "    ", "vecField", "=", "self", ".", "defFields", "[", "imgidx", "]", "\n", "idx", "=", "np", ".", "arange", "(", "0", ",", "vecField", ".", "shape", "[", "3", "]", "-", "1", ")", "\n", "\n", "t", "=", "vecField", "[", ":", ",", ":", ",", ":", ",", "idx", "+", "1", "]", ".", "detach", "(", ")", "\n", "loss30", "=", "Utils", ".", "getLoss30", "(", "vecField", ".", "shape", ",", "device", ")", "\n", "loss30", "[", ":", ",", ":", ",", ":", ",", "idx", "]", "=", "t", "-", "vecField", "[", ":", ",", ":", ",", ":", ",", "idx", "]", "# * weights", "\n", "\n", "t", "=", "vecField", "[", ":", ",", ":", ",", ":", ",", "idx", "]", ".", "detach", "(", ")", "\n", "loss31", "=", "Utils", ".", "getLoss31", "(", "vecField", ".", "shape", ",", "device", ")", "\n", "loss31", "[", ":", ",", ":", ",", ":", ",", "idx", "+", "1", "]", "=", "t", "-", "vecField", "[", ":", ",", ":", ",", ":", ",", "idx", "+", "1", "]", "# * weights", "\n", "loss3", "=", "(", "loss30", "+", "loss31", ")", "/", "self", ".", "dimWeight", "[", "2", "]", "\n", "return", "loss3", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.LossFunctions.LossFunctions.smoothnessVecField": [[273, 286], ["torch.empty", "range", "LossFunctions.LossFunctions.getSmoothnessForDir1", "LossFunctions.LossFunctions.getSmoothnessForDir2", "LossFunctions.LossFunctions.getSmoothnessForDir3", "torch.empty.sum", "torch.sum", "torch.pow"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.LossFunctions.LossFunctions.getSmoothnessForDir1", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.LossFunctions.LossFunctions.getSmoothnessForDir2", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.LossFunctions.LossFunctions.getSmoothnessForDir3"], ["", "def", "smoothnessVecField", "(", "self", ",", "device", ")", ":", "\n", "    ", "loss", "=", "torch", ".", "empty", "(", "self", ".", "defFields", ".", "shape", "[", "0", "]", ",", "device", "=", "device", ")", "\n", "for", "imgIdx", "in", "range", "(", "self", ".", "defFields", ".", "shape", "[", "0", "]", ")", ":", "\n", "      ", "vecField", "=", "self", ".", "defFields", "[", "imgIdx", "]", "\n", "\n", "loss1", "=", "self", ".", "getSmoothnessForDir1", "(", "imgIdx", ",", "device", ")", "\n", "\n", "loss2", "=", "self", ".", "getSmoothnessForDir2", "(", "imgIdx", ",", "device", ")", "\n", "#        ", "\n", "loss3", "=", "self", ".", "getSmoothnessForDir3", "(", "imgIdx", ",", "device", ")", "\n", "\n", "loss", "[", "imgIdx", "]", "=", "torch", ".", "sum", "(", "torch", ".", "pow", "(", "loss1", "+", "loss2", "+", "loss3", ",", "2", ")", ")", "/", "(", "vecField", ".", "shape", "[", "1", "]", "*", "vecField", ".", "shape", "[", "2", "]", "*", "vecField", ".", "shape", "[", "3", "]", ")", "\n", "", "return", "loss", ".", "sum", "(", ")", "/", "self", ".", "defFields", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.LossFunctions.LossFunctions.smoothnessVecFieldT": [[287, 306], ["torch.empty", "range", "LossFunctions.LossFunctions.getSmoothnessForDir1", "LossFunctions.LossFunctions.getSmoothnessForDir2", "LossFunctions.LossFunctions.getSmoothnessForDir3", "torch.empty.sum", "torch.sum", "torch.pow"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.LossFunctions.LossFunctions.getSmoothnessForDir1", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.LossFunctions.LossFunctions.getSmoothnessForDir2", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.LossFunctions.LossFunctions.getSmoothnessForDir3"], ["", "def", "smoothnessVecFieldT", "(", "self", ",", "device", ")", ":", "\n", "    ", "loss", "=", "torch", ".", "empty", "(", "self", ".", "defFields", ".", "shape", "[", "0", "]", ",", "device", "=", "device", ")", "\n", "for", "imgIdx", "in", "range", "(", "self", ".", "defFields", ".", "shape", "[", "0", "]", ")", ":", "\n", "      ", "vecField", "=", "self", ".", "defFields", "[", "imgIdx", "]", "\n", "\n", "#idx = np.roll(range(0,vecField.shape[0]),-3)", "\n", "#t = vecField[idx,:,:,:].detach()", "\n", "#loss0 = torch.abs(t - vecField)", "\n", "\n", "loss1", "=", "self", ".", "getSmoothnessForDir1", "(", "imgIdx", ",", "device", ")", "\n", "\n", "loss2", "=", "self", ".", "getSmoothnessForDir2", "(", "imgIdx", ",", "device", ")", "\n", "\n", "loss3", "=", "self", ".", "getSmoothnessForDir3", "(", "imgIdx", ",", "device", ")", "\n", "\n", "#       loss[imgIdx] = torch.sum(loss0 + loss1 + loss2 + loss3) / (vecField.shape[1]*vecField.shape[2]*vecField.shape[3]*((vecField.shape[0]/3)-1))", "\n", "loss", "[", "imgIdx", "]", "=", "torch", ".", "sum", "(", "torch", ".", "pow", "(", "loss1", "+", "loss2", "+", "loss3", ",", "2", ")", ")", "/", "(", "vecField", ".", "shape", "[", "1", "]", "*", "vecField", ".", "shape", "[", "2", "]", "*", "vecField", ".", "shape", "[", "3", "]", "*", "(", "(", "vecField", ".", "shape", "[", "0", "]", "/", "3", ")", "-", "1", ")", ")", "\n", "\n", "", "return", "loss", ".", "sum", "(", ")", "/", "self", ".", "defFields", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.LossFunctions.LossFunctions.normCrossCorr": [[308, 329], ["torch.empty", "range", "range", "torch.sum", "torch.reshape", "torch.reshape", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.tensor", "torch.nn.functional.normalize.numel", "torch.nn.functional.normalize.numel", "torch.dot"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.normalize", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.normalize"], ["", "def", "normCrossCorr", "(", "self", ",", "defImg", ",", "device0", ",", "valueToIgnore", "=", "None", ")", ":", "\n", "    ", "results", "=", "torch", ".", "empty", "(", "self", ".", "imgData", ".", "shape", "[", "0", "]", "*", "self", ".", "imgData", ".", "shape", "[", "1", "]", ",", "device", "=", "device0", ")", "\n", "for", "imgIdx", "in", "range", "(", "self", ".", "imgData", ".", "shape", "[", "0", "]", ")", ":", "\n", "      ", "for", "chanIdx", "in", "range", "(", "self", ".", "imgData", ".", "shape", "[", "1", "]", ")", ":", "\n", "        ", "x", "=", "self", ".", "imgData", "[", "imgIdx", ",", "chanIdx", ",", "]", "\n", "y", "=", "defImg", "[", "imgIdx", ",", "chanIdx", ",", "]", "\n", "if", "valueToIgnore", "is", "not", "None", ":", "\n", "          ", "valuesToConsider", "=", "(", "x", "!=", "valueToIgnore", ")", "&", "(", "y", "!=", "valueToIgnore", ")", "\n", "x", "=", "x", "[", "valuesToConsider", "]", "\n", "y", "=", "y", "[", "valuesToConsider", "]", "\n", "", "else", ":", "\n", "          ", "x", "=", "torch", ".", "reshape", "(", "x", ",", "(", "-", "1", ",", ")", ")", "\n", "y", "=", "torch", ".", "reshape", "(", "y", ",", "(", "-", "1", ",", ")", ")", "\n", "", "if", "(", "x", ".", "numel", "(", ")", ">", "0", "and", "y", ".", "numel", "(", ")", ">", "0", ")", ":", "\n", "          ", "x", "=", "torch", ".", "nn", ".", "functional", ".", "normalize", "(", "x", ",", "2", ",", "-", "1", ")", "\n", "y", "=", "torch", ".", "nn", ".", "functional", ".", "normalize", "(", "y", ",", "2", ",", "-", "1", ")", "\n", "dotProd", "=", "torch", ".", "dot", "(", "x", ",", "y", ")", "+", "1", "\n", "", "else", ":", "\n", "          ", "dotProd", "=", "torch", ".", "tensor", "(", "2.0", ")", "\n", "", "results", "[", "imgIdx", "*", "self", ".", "imgData", ".", "shape", "[", "0", "]", "+", "chanIdx", "]", "=", "dotProd", "\n", "", "", "return", "1", "-", "(", "torch", ".", "sum", "(", "results", ")", "/", "(", "2", "*", "self", ".", "imgData", ".", "shape", "[", "0", "]", "*", "self", ".", "imgData", ".", "shape", "[", "1", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.LossFunctions.LossFunctions.normCrossCorr2Images": [[331, 349], ["torch.empty", "range", "range", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "torch.sum", "torch.reshape", "torch.reshape", "torch.dot"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.normalize", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.normalize"], ["", "def", "normCrossCorr2Images", "(", "self", ",", "origImg", ",", "defImg", ",", "device0", ",", "valueToIgnore", "=", "None", ")", ":", "\n", "    ", "results", "=", "torch", ".", "empty", "(", "origImg", ".", "shape", "[", "0", "]", "*", "origImg", ".", "shape", "[", "1", "]", ",", "device", "=", "device0", ")", "\n", "for", "imgIdx", "in", "range", "(", "origImg", ".", "shape", "[", "0", "]", ")", ":", "\n", "      ", "for", "chanIdx", "in", "range", "(", "origImg", ".", "shape", "[", "1", "]", ")", ":", "\n", "        ", "x", "=", "origImg", "[", "imgIdx", ",", "chanIdx", ",", "]", "\n", "y", "=", "defImg", "[", "imgIdx", ",", "chanIdx", ",", "]", "\n", "if", "valueToIgnore", "is", "not", "None", ":", "\n", "          ", "valuesToConsider", "=", "(", "x", "!=", "valueToIgnore", ")", "&", "(", "y", "!=", "valueToIgnore", ")", "\n", "x", "=", "x", "[", "valuesToConsider", "]", "\n", "y", "=", "y", "[", "valuesToConsider", "]", "\n", "", "else", ":", "\n", "          ", "x", "=", "torch", ".", "reshape", "(", "x", ",", "(", "-", "1", ",", ")", ")", "\n", "y", "=", "torch", ".", "reshape", "(", "y", ",", "(", "-", "1", ",", ")", ")", "\n", "", "x", "=", "torch", ".", "nn", ".", "functional", ".", "normalize", "(", "x", ",", "2", ",", "-", "1", ")", "\n", "y", "=", "torch", ".", "nn", ".", "functional", ".", "normalize", "(", "y", ",", "2", ",", "-", "1", ")", "\n", "dotProd", "=", "torch", ".", "dot", "(", "x", ",", "y", ")", "+", "1", "\n", "results", "[", "imgIdx", "*", "origImg", ".", "shape", "[", "0", "]", "+", "chanIdx", "]", "=", "dotProd", "\n", "", "", "return", "1", "-", "(", "torch", ".", "sum", "(", "results", ")", "/", "(", "2", "*", "origImg", ".", "shape", "[", "0", "]", "*", "origImg", ".", "shape", "[", "1", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.LossFunctions.LossFunctions.vecLength": [[350, 358], ["torch.sqrt", "torch.sqrt.mean", "range", "range", "range", "range", "range", "range"], "methods", ["None"], ["", "def", "vecLength", "(", "self", ",", "defField", ")", ":", "\n", "    ", "tmp0", "=", "defField", "[", ":", ",", "range", "(", "0", ",", "defField", ".", "shape", "[", "1", "]", ",", "3", ")", ",", "]", "*", "defField", "[", ":", ",", "range", "(", "0", ",", "defField", ".", "shape", "[", "1", "]", ",", "3", ")", ",", "]", "\n", "tmp1", "=", "defField", "[", ":", ",", "range", "(", "1", ",", "defField", ".", "shape", "[", "1", "]", ",", "3", ")", ",", "]", "*", "defField", "[", ":", ",", "range", "(", "1", ",", "defField", ".", "shape", "[", "1", "]", ",", "3", ")", ",", "]", "\n", "tmp2", "=", "defField", "[", ":", ",", "range", "(", "2", ",", "defField", ".", "shape", "[", "1", "]", ",", "3", ")", ",", "]", "*", "defField", "[", ":", ",", "range", "(", "2", ",", "defField", ".", "shape", "[", "1", "]", ",", "3", ")", ",", "]", "\n", "tmpSum", "=", "tmp0", "+", "tmp1", "+", "tmp2", "\n", "del", "tmp0", ",", "tmp1", ",", "tmp2", "\n", "tmpSqrt", "=", "torch", ".", "sqrt", "(", "tmpSum", ")", "\n", "return", "tmpSqrt", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.EncoderBrick.EncoderBrick.__init__": [[4, 22], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.DecoderBrick.DecoderBrick.__init__"], ["  ", "def", "__init__", "(", "self", ",", "num_filters", ",", "in_channels", "=", "2", ",", "useBatchNorm", "=", "True", ",", "concatLayer", "=", "True", ",", "padImg", "=", "True", ")", ":", "\n", "      ", "super", "(", "EncoderBrick", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "useBatchNorm", "=", "useBatchNorm", "\n", "self", ".", "concatLayer", "=", "concatLayer", "\n", "self", ".", "padVals", "=", "(", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ")", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "\n", "self", ".", "conv0", "=", "nn", ".", "Conv3d", "(", "in_channels", ",", "num_filters", ",", "3", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv3d", "(", "num_filters", ",", "num_filters", ",", "3", ")", "\n", "if", "(", "self", ".", "useBatchNorm", ")", ":", "\n", "        ", "self", ".", "batch0", "=", "nn", ".", "BatchNorm3d", "(", "num_filters", ")", "\n", "self", ".", "batch1", "=", "nn", ".", "BatchNorm3d", "(", "num_filters", ")", "\n", "\n", "", "if", "padImg", ":", "\n", "        ", "self", ".", "forwardFunction", "=", "self", ".", "forwardPad", "\n", "", "else", ":", "\n", "        ", "self", ".", "forwardFunction", "=", "self", ".", "forwardNoPad", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.EncoderBrick.EncoderBrick.forwardPad": [[24, 38], ["torch.functional.pad", "EncoderBrick.EncoderBrick.conv0", "torch.functional.relu", "torch.functional.pad", "EncoderBrick.EncoderBrick.conv1", "torch.functional.relu", "EncoderBrick.EncoderBrick.batch0", "EncoderBrick.EncoderBrick.batch1"], "methods", ["None"], ["", "", "def", "forwardPad", "(", "self", ",", "x", ")", ":", "\n", "    ", "encoder", "=", "nn", ".", "functional", ".", "pad", "(", "x", ",", "self", ".", "padVals", ",", "\"constant\"", ",", "0", ")", "\n", "encoder", "=", "self", ".", "conv0", "(", "encoder", ")", "\n", "if", "(", "self", ".", "useBatchNorm", ")", ":", "\n", "      ", "encoder", "=", "self", ".", "batch0", "(", "encoder", ")", "\n", "", "encoder", "=", "nn", ".", "functional", ".", "relu", "(", "encoder", ")", "\n", "\n", "encoder", "=", "nn", ".", "functional", ".", "pad", "(", "encoder", ",", "self", ".", "padVals", ",", "\"constant\"", ",", "0", ")", "\n", "encoder", "=", "self", ".", "conv1", "(", "encoder", ")", "\n", "if", "(", "self", ".", "useBatchNorm", ")", ":", "\n", "      ", "encoder", "=", "self", ".", "batch1", "(", "encoder", ")", "\n", "", "encoder", "=", "nn", ".", "functional", ".", "relu", "(", "encoder", ")", "\n", "\n", "return", "encoder", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.EncoderBrick.EncoderBrick.forwardNoPad": [[39, 51], ["EncoderBrick.EncoderBrick.conv0", "torch.functional.relu", "EncoderBrick.EncoderBrick.conv1", "torch.functional.relu", "EncoderBrick.EncoderBrick.batch0", "EncoderBrick.EncoderBrick.batch1"], "methods", ["None"], ["", "def", "forwardNoPad", "(", "self", ",", "x", ")", ":", "\n", "    ", "encoder", "=", "self", ".", "conv0", "(", "x", ")", "\n", "if", "(", "self", ".", "useBatchNorm", ")", ":", "\n", "      ", "encoder", "=", "self", ".", "batch0", "(", "encoder", ")", "\n", "", "encoder", "=", "nn", ".", "functional", ".", "relu", "(", "encoder", ")", "\n", "\n", "encoder", "=", "self", ".", "conv1", "(", "encoder", ")", "\n", "if", "(", "self", ".", "useBatchNorm", ")", ":", "\n", "      ", "encoder", "=", "self", ".", "batch1", "(", "encoder", ")", "\n", "", "encoder", "=", "nn", ".", "functional", ".", "relu", "(", "encoder", ")", "\n", "\n", "return", "encoder", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.EncoderBrick.EncoderBrick.forward": [[53, 55], ["EncoderBrick.EncoderBrick.forwardFunction"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "forwardFunction", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.SelfSupervisionBrick.SelfSupervisionBrick.__init__": [[5, 11], ["torch.Module.__init__", "torch.Conv3d", "torch.Conv3d"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.DecoderBrick.DecoderBrick.__init__"], ["  ", "def", "__init__", "(", "self", ",", "num_filters", ",", "in_channels", "=", "2", ",", "upSampletimes", "=", "0", ",", "padImg", "=", "True", ")", ":", "\n", "      ", "super", "(", "SelfSupervisionBrick", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv", "=", "nn", ".", "Conv3d", "(", "in_channels", ",", "num_filters", "*", "3", ",", "1", ")", "\n", "self", ".", "upSampletimes", "=", "upSampletimes", "\n", "self", ".", "padImg", "=", "padImg", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.SelfSupervisionBrick.SelfSupervisionBrick.forward": [[11, 21], ["SelfSupervisionBrick.SelfSupervisionBrick.conv", "range", "torch.functional.interpolate", "torch.functional.interpolate"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "\n", "    ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "\n", "for", "i", "in", "range", "(", "self", ".", "upSampletimes", ")", ":", "\n", "      ", "x", "=", "nn", ".", "functional", ".", "interpolate", "(", "x", ",", "scale_factor", "=", "2", ",", "mode", "=", "'trilinear'", ")", "\n", "if", "not", "self", ".", "padImg", ":", "#if there is no padding in the encoder/decoders we need to pad here", "\n", "        ", "x", "=", "x", "[", ":", ",", ":", ",", "2", ":", "-", "2", ",", "2", ":", "-", "2", ",", "2", ":", "-", "2", "]", "\n", "\n", "", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OnePatchShot.main": [[17, 124], ["torch.manual_seed", "torch.manual_seed", "numpy.random.seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "HeadAndNeckDataset.HeadAndNeckDataset", "hasattr", "torch.utils.data.DataLoader", "Net.UNet", "getopt.getopt", "len", "print", "torch.autograd.set_detect_anomaly", "torch.autograd.set_detect_anomaly", "os.path.isdir", "os.makedirs", "HeadAndNeckDataset.ToTensor", "HeadAndNeckDataset.HeadAndNeckDataset", "torch.utils.data.DataLoader", "HeadAndNeckDataset.HeadAndNeckDataset.getChannels", "OptimizeCaller.OptimizeCaller", "print", "time.time", "time.time", "print", "print", "print", "HeadAndNeckDataset.ToTensor", "trainTestOptimize.setOldModels", "Net.UNet.share_memory", "range", "mp.Process.start", "processes.append", "mp.Process.join", "trainTestOptimize.testNetDownSamplePatch", "hasattr", "torch.Process", "hasattr", "trainTestOptimize.trainNetDownSamplePatch", "trainTestOptimize.trainTestNetDownSamplePatch", "torch.Process", "torch.Process", "int", "int", "float", "arg.split", "float", "arg.split", "float", "arg.split", "arg.split", "arg.split", "i.lower", "i.lower"], "function", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.HeadAndNeckDataset.HeadAndNeckDataset.getChannels", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OptimizeCaller.OptimizeCaller.setOldModels", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OptimizeCaller.OptimizeCaller.testNetDownSamplePatch", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OptimizeCaller.OptimizeCaller.trainNetDownSamplePatch", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.OptimizeCaller.OptimizeCaller.trainTestNetDownSamplePatch"], ["def", "main", "(", "argv", ")", ":", "\n", "\n", "#torch.backends.cudnn.enabled = False", "\n", "#CUDA_LAUNCH_BLOCKING = 1", "\n", "  ", "callString", "=", "'OnePatchShot.py --trainingFiles=files.csv --device=device --outputPath=PATH'", "\n", "\n", "try", ":", "\n", "    ", "opts", ",", "args", "=", "getopt", ".", "getopt", "(", "argv", ",", "''", ",", "[", "'trainingFiles='", ",", "'testModels'", ",", "'fineTune='", ",", "'randomSampling='", ",", "'validationFiles='", ",", "'previousModels='", ",", "'device='", ",", "'maskOutZeros'", ",", "'noDiff'", ",", "'outputPath='", ",", "'stoptAtSampleStep='", ",", "'downSampleSteps='", ",", "'cycleW='", ",", "'smoothW='", ",", "'boundarySmoothW='", "]", ")", "\n", "", "except", "getopt", ".", "GetoptError", "as", "e", ":", "#python3", "\n", "    ", "print", "(", "e", ")", "\n", "print", "(", "callString", ")", "\n", "return", "\n", "\n", "", "if", "not", "(", "len", "(", "opts", ")", ")", ":", "\n", "    ", "print", "(", "callString", ")", "\n", "return", "\n", "\n", "", "oldModelList", "=", "None", "\n", "testModels", "=", "False", "\n", "for", "opt", ",", "arg", "in", "opts", ":", "\n", "    ", "if", "opt", "==", "'--trainingFiles'", ":", "\n", "      ", "userOpts", ".", "trainingFileNamesCSV", "=", "arg", "\n", "", "elif", "opt", "==", "'--validationFiles'", ":", "\n", "      ", "userOpts", ".", "validationFileNameCSV", "=", "arg", "\n", "", "elif", "opt", "==", "'--device'", ":", "\n", "      ", "userOpts", ".", "device", "=", "arg", "\n", "", "elif", "opt", "==", "'--outputPath'", ":", "\n", "      ", "userOpts", ".", "outputPath", "=", "arg", "\n", "", "elif", "opt", "==", "'--maskOutZeros'", ":", "\n", "      ", "userOpts", ".", "maskOutZeros", "=", "True", "\n", "", "elif", "opt", "==", "'--stoptAtSampleStep'", ":", "\n", "      ", "userOpts", ".", "stoptAtSampleStep", "=", "int", "(", "arg", ")", "\n", "", "elif", "opt", "==", "'--downSampleSteps'", ":", "\n", "      ", "userOpts", ".", "downSampleSteps", "=", "int", "(", "arg", ")", "\n", "", "elif", "opt", "==", "'--cycleW'", ":", "\n", "      ", "userOpts", ".", "cycleW", "=", "float", "(", "arg", ")", "\n", "", "elif", "opt", "==", "'--noDiff'", ":", "\n", "      ", "userOpts", ".", "diffeomorphicRegistration", "=", "False", "\n", "userOpts", ".", "overlappingPatches", "=", "False", "\n", "", "elif", "opt", "==", "'--smoothW'", ":", "\n", "      ", "stringList", "=", "arg", ".", "split", "(", ")", "\n", "userOpts", ".", "smoothW", "=", "[", "float", "(", "i", ")", "for", "i", "in", "stringList", "]", "\n", "", "elif", "opt", "==", "'--boundarySmoothW'", ":", "\n", "      ", "stringList", "=", "arg", ".", "split", "(", ")", "\n", "userOpts", ".", "boundarySmoothnessW", "=", "[", "float", "(", "i", ")", "for", "i", "in", "stringList", "]", "\n", "", "elif", "opt", "==", "'--previousModels'", ":", "\n", "      ", "oldModelList", "=", "arg", ".", "split", "(", ")", "\n", "", "elif", "opt", "==", "'--testModels'", ":", "\n", "      ", "testModels", "=", "True", "\n", "", "elif", "opt", "==", "'--fineTune'", ":", "\n", "      ", "stringList", "=", "arg", ".", "split", "(", ")", "\n", "userOpts", ".", "fineTuneOldModel", "=", "[", "i", ".", "lower", "(", ")", "in", "(", "\"true\"", ",", "\"t\"", ")", "for", "i", "in", "stringList", "]", "\n", "", "elif", "opt", "==", "'--randomSampling'", ":", "\n", "      ", "stringList", "=", "arg", ".", "split", "(", ")", "\n", "userOpts", ".", "randomSampling", "=", "[", "i", ".", "lower", "(", ")", "in", "(", "\"true\"", ",", "\"t\"", ")", "for", "i", "in", "stringList", "]", "\n", "\n", "\n", "", "", "torch", ".", "manual_seed", "(", "0", ")", "\n", "np", ".", "random", ".", "seed", "(", "0", ")", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "0", ")", "\n", "torch", ".", "backends", ".", "cudnn", ".", "deterministic", "=", "True", "\n", "torch", ".", "backends", ".", "cudnn", ".", "benchmark", "=", "False", "\n", "if", "userOpts", ".", "debugMode", ":", "\n", "    ", "torch", ".", "autograd", ".", "set_detect_anomaly", "(", "True", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "isdir", "(", "userOpts", ".", "outputPath", ")", ":", "\n", "    ", "os", ".", "makedirs", "(", "userOpts", ".", "outputPath", ")", "\n", "\n", "", "headAndNeckTrainSet", "=", "HeadAndNeckDataset", "(", "userOpts", ".", "trainingFileNamesCSV", ",", "ToTensor", "(", ")", ",", "True", ")", "\n", "if", "hasattr", "(", "userOpts", ",", "'validationFileNameCSV'", ")", ":", "\n", "    ", "validationSet", "=", "HeadAndNeckDataset", "(", "userOpts", ".", "validationFileNameCSV", ",", "ToTensor", "(", ")", ",", "True", ")", "\n", "validationDataLoader", "=", "DataLoader", "(", "validationSet", ",", "batch_size", "=", "1", ",", "shuffle", "=", "False", ",", "num_workers", "=", "0", ")", "\n", "\n", "", "dataloader", "=", "DataLoader", "(", "headAndNeckTrainSet", ",", "batch_size", "=", "1", ",", "\n", "shuffle", "=", "False", ",", "num_workers", "=", "0", ")", "\n", "\n", "net", "=", "UNet", "(", "headAndNeckTrainSet", ".", "getChannels", "(", ")", ",", "True", ",", "False", ",", "userOpts", ".", "netDepth", ",", "userOpts", ".", "numberOfFiltersFirstLayer", ",", "useDeepSelfSupervision", "=", "False", ")", "\n", "with", "OptimizeCaller", "(", "net", ",", "userOpts", ")", "as", "trainTestOptimize", ":", "\n", "    ", "print", "(", "net", ")", "\n", "start", "=", "time", ".", "time", "(", ")", "\n", "if", "oldModelList", "is", "not", "None", ":", "\n", "      ", "trainTestOptimize", ".", "setOldModels", "(", "oldModelList", ")", "\n", "", "if", "False", ":", "#userOpts.device == \"cpu\":", "\n", "      ", "net", ".", "share_memory", "(", ")", "\n", "processes", "=", "[", "]", "\n", "num_processes", "=", "2", "\n", "for", "rank", "in", "range", "(", "num_processes", ")", ":", "\n", "        ", "if", "testModels", ":", "\n", "          ", "p", "=", "mp", ".", "Process", "(", "target", "=", "trainTestOptimize", ".", "testNetDownSamplePatch", ",", "args", "=", "(", "dataloader", ")", ")", "\n", "", "elif", "hasattr", "(", "userOpts", ",", "'validationFileNameCSV'", ")", ":", "\n", "          ", "p", "=", "mp", ".", "Process", "(", "target", "=", "trainTestOptimize", ".", "trainNetDownSamplePatch", ",", "args", "=", "(", "dataloader", ",", "validationDataLoader", ")", ")", "\n", "", "else", ":", "\n", "          ", "p", "=", "mp", ".", "Process", "(", "target", "=", "trainTestOptimize", ".", "trainTestNetDownSamplePatch", ",", "args", "=", "(", "dataloader", ")", ")", "\n", "", "p", ".", "start", "(", ")", "\n", "processes", ".", "append", "(", "p", ")", "\n", "", "for", "p", "in", "processes", ":", "\n", "        ", "p", ".", "join", "(", ")", "\n", "\n", "", "", "else", ":", "\n", "      ", "if", "testModels", ":", "\n", "        ", "trainTestOptimize", ".", "testNetDownSamplePatch", "(", "dataloader", ")", "\n", "", "elif", "hasattr", "(", "userOpts", ",", "'validationFileNameCSV'", ")", ":", "\n", "        ", "trainTestOptimize", ".", "trainNetDownSamplePatch", "(", "dataloader", ",", "validationDataLoader", ")", "\n", "", "else", ":", "\n", "        ", "trainTestOptimize", ".", "trainTestNetDownSamplePatch", "(", "dataloader", ")", "\n", "", "", "end", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "'Registration took overall:'", ",", "end", "-", "start", ",", "'seconds'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.DecoderBrick.DecoderBrick.__init__": [[5, 28], ["torch.Module.__init__", "torch.ConvTranspose3d", "torch.ConvTranspose3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.Conv3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d", "torch.BatchNorm3d"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.DecoderBrick.DecoderBrick.__init__"], ["  ", "def", "__init__", "(", "self", ",", "num_filters", ",", "in_channels", "=", "2", ",", "useBatchNorm", "=", "True", ",", "concatLayer", "=", "True", ",", "padImg", "=", "True", ")", ":", "\n", "      ", "super", "(", "DecoderBrick", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "useBatchNorm", "=", "useBatchNorm", "\n", "self", ".", "concatLayer", "=", "concatLayer", "\n", "self", ".", "padVals", "=", "(", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ")", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "\n", "self", ".", "deconv0", "=", "nn", ".", "ConvTranspose3d", "(", "in_channels", ",", "num_filters", ",", "2", ",", "2", ")", "\n", "if", "(", "self", ".", "concatLayer", ")", ":", "\n", "        ", "self", ".", "conv0", "=", "nn", ".", "Conv3d", "(", "2", "*", "num_filters", ",", "num_filters", ",", "3", ")", "\n", "", "else", ":", "\n", "        ", "self", ".", "conv0", "=", "nn", ".", "Conv3d", "(", "num_filters", ",", "num_filters", ",", "3", ")", "\n", "", "self", ".", "conv1", "=", "nn", ".", "Conv3d", "(", "num_filters", ",", "num_filters", ",", "3", ")", "\n", "\n", "if", "padImg", ":", "\n", "        ", "self", ".", "forwardFunction", "=", "self", ".", "forwardPad", "\n", "", "else", ":", "\n", "        ", "self", ".", "forwardFunction", "=", "self", ".", "forwardNoPad", "\n", "\n", "", "if", "(", "self", ".", "useBatchNorm", ")", ":", "\n", "        ", "self", ".", "batch0", "=", "nn", ".", "BatchNorm3d", "(", "num_filters", ")", "\n", "self", ".", "batch1", "=", "nn", ".", "BatchNorm3d", "(", "num_filters", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.DecoderBrick.DecoderBrick.forwardPad": [[29, 51], ["DecoderBrick.DecoderBrick.deconv0", "torch.functional.pad", "torch.functional.pad", "DecoderBrick.DecoderBrick.conv0", "torch.functional.relu", "torch.functional.relu", "torch.functional.pad", "torch.functional.pad", "DecoderBrick.DecoderBrick.conv1", "torch.functional.relu", "torch.functional.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.add", "torch.add", "torch.add", "torch.add", "DecoderBrick.DecoderBrick.batch0", "DecoderBrick.DecoderBrick.batch1"], "methods", ["None"], ["", "", "def", "forwardPad", "(", "self", ",", "x", ",", "encodeTensor", ")", ":", "\n", "    ", "decoder", "=", "self", ".", "deconv0", "(", "x", ")", "\n", "if", "(", "self", ".", "concatLayer", ")", ":", "\n", "      ", "decoder", "=", "torch", ".", "cat", "(", "(", "decoder", ",", "encodeTensor", ")", ",", "1", ")", "\n", "", "else", ":", "\n", "      ", "decoder", "=", "torch", ".", "add", "(", "decoder", ",", "encodeTensor", ")", "\n", "\n", "", "decoder", "=", "nn", ".", "functional", ".", "pad", "(", "decoder", ",", "self", ".", "padVals", ",", "\"constant\"", ",", "0", ")", "\n", "decoder", "=", "self", ".", "conv0", "(", "decoder", ")", "\n", "if", "(", "self", ".", "useBatchNorm", ")", ":", "\n", "      ", "decoder", "=", "self", ".", "batch0", "(", "decoder", ")", "\n", "\n", "", "decoder", "=", "nn", ".", "functional", ".", "relu", "(", "decoder", ")", "\n", "\n", "decoder", "=", "nn", ".", "functional", ".", "pad", "(", "decoder", ",", "self", ".", "padVals", ",", "\"constant\"", ",", "0", ")", "\n", "decoder", "=", "self", ".", "conv1", "(", "decoder", ")", "\n", "if", "(", "self", ".", "useBatchNorm", ")", ":", "\n", "      ", "decoder", "=", "self", ".", "batch1", "(", "decoder", ")", "\n", "\n", "", "decoder", "=", "nn", ".", "functional", ".", "relu", "(", "decoder", ")", "\n", "\n", "return", "decoder", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.DecoderBrick.DecoderBrick.forwardNoPad": [[52, 72], ["DecoderBrick.DecoderBrick.deconv0", "DecoderBrick.DecoderBrick.conv0", "torch.functional.relu", "torch.functional.relu", "DecoderBrick.DecoderBrick.conv1", "torch.functional.relu", "torch.functional.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.add", "torch.add", "torch.add", "torch.add", "DecoderBrick.DecoderBrick.batch0", "DecoderBrick.DecoderBrick.batch1"], "methods", ["None"], ["", "def", "forwardNoPad", "(", "self", ",", "x", ",", "encodeTensor", ")", ":", "\n", "    ", "decoder", "=", "self", ".", "deconv0", "(", "x", ")", "\n", "if", "(", "self", ".", "concatLayer", ")", ":", "\n", "      ", "decoder", "=", "torch", ".", "cat", "(", "(", "decoder", ",", "encodeTensor", ")", ",", "1", ")", "\n", "", "else", ":", "\n", "      ", "decoder", "=", "torch", ".", "add", "(", "decoder", ",", "encodeTensor", ")", "\n", "\n", "", "decoder", "=", "self", ".", "conv0", "(", "decoder", ")", "\n", "if", "(", "self", ".", "useBatchNorm", ")", ":", "\n", "      ", "decoder", "=", "self", ".", "batch0", "(", "decoder", ")", "\n", "\n", "", "decoder", "=", "nn", ".", "functional", ".", "relu", "(", "decoder", ")", "\n", "\n", "decoder", "=", "self", ".", "conv1", "(", "decoder", ")", "\n", "if", "(", "self", ".", "useBatchNorm", ")", ":", "\n", "      ", "decoder", "=", "self", ".", "batch1", "(", "decoder", ")", "\n", "\n", "", "decoder", "=", "nn", ".", "functional", ".", "relu", "(", "decoder", ")", "\n", "\n", "return", "decoder", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.DecoderBrick.DecoderBrick.forward": [[74, 76], ["DecoderBrick.DecoderBrick.forwardFunction"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "encodeTensor", ")", ":", "\n", "    ", "return", "self", ".", "forwardFunction", "(", "x", ",", "encodeTensor", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.DefFieldHandler.invertDirectionOfField": [[10, 128], ["range", "torch.zeros_like", "range", "range", "range", "range", "range", "int", "int", "int", "vectorList[].append", "vectorList[].append", "vectorList[].append", "vectorList[].append", "vectorList[].append", "vectorList[].append", "vectorList[].append", "vectorList[].append"], "function", ["None"], ["def", "invertDirectionOfField", "(", "defField", ")", ":", "\n", "  ", "fieldShape", "=", "defField", ".", "shape", "[", "2", ":", "]", "\n", "nuOfItems", "=", "fieldShape", "[", "0", "]", "*", "fieldShape", "[", "1", "]", "*", "fieldShape", "[", "2", "]", "\n", "vectorList", "=", "[", "None", "]", "*", "nuOfItems", "\n", "for", "idx0", "in", "range", "(", "fieldShape", "[", "0", "]", ")", ":", "\n", "    ", "for", "idx1", "in", "range", "(", "fieldShape", "[", "1", "]", ")", ":", "\n", "      ", "for", "idx2", "in", "range", "(", "fieldShape", "[", "2", "]", ")", ":", "\n", "        ", "defVec", "=", "defField", "[", "0", ",", ":", ",", "idx0", ",", "idx1", ",", "idx2", "]", "\n", "newPos0", "=", "idx0", "+", "defVec", "[", "2", "]", "\n", "if", "newPos0", "<", "0", ":", "\n", "          ", "newPos0", "=", "0", "\n", "", "elif", "newPos0", ">", "fieldShape", "[", "0", "]", "-", "2", ":", "\n", "          ", "newPos0", "=", "fieldShape", "[", "0", "]", "-", "2", "\n", "", "newPos1", "=", "idx1", "+", "defVec", "[", "1", "]", "\n", "if", "newPos1", "<", "0", ":", "\n", "          ", "newPos1", "=", "0", "\n", "", "elif", "newPos1", ">", "fieldShape", "[", "1", "]", "-", "2", ":", "\n", "          ", "newPos1", "=", "fieldShape", "[", "1", "]", "-", "2", "\n", "", "newPos2", "=", "idx2", "+", "defVec", "[", "0", "]", "\n", "if", "newPos2", "<", "0", ":", "\n", "          ", "newPos2", "=", "0", "\n", "", "elif", "newPos2", ">", "fieldShape", "[", "2", "]", "-", "2", ":", "\n", "          ", "newPos2", "=", "fieldShape", "[", "2", "]", "-", "2", "\n", "\n", "", "roundLow0", "=", "int", "(", "newPos0", ")", "\n", "roundUp0", "=", "roundLow0", "+", "1", "\n", "roundLow1", "=", "int", "(", "newPos1", ")", "\n", "roundUp1", "=", "roundLow1", "+", "1", "\n", "roundLow2", "=", "int", "(", "newPos2", ")", "\n", "roundUp2", "=", "roundLow2", "+", "1", "\n", "\n", "\n", "upperPart0", "=", "newPos0", "-", "roundLow0", "\n", "lowerPart0", "=", "1", "-", "upperPart0", "\n", "\n", "upperPart1", "=", "newPos1", "-", "roundLow1", "\n", "lowerPart1", "=", "1", "-", "upperPart1", "\n", "\n", "upperPart2", "=", "newPos2", "-", "roundLow2", "\n", "lowerPart2", "=", "1", "-", "upperPart2", "\n", "\n", "idx000", "=", "roundLow0", "+", "roundLow1", "*", "fieldShape", "[", "0", "]", "+", "roundLow2", "*", "fieldShape", "[", "0", "]", "*", "fieldShape", "[", "1", "]", "\n", "idx001", "=", "roundLow0", "+", "roundLow1", "*", "fieldShape", "[", "0", "]", "+", "roundUp2", "*", "fieldShape", "[", "0", "]", "*", "fieldShape", "[", "1", "]", "\n", "idx010", "=", "roundLow0", "+", "roundUp1", "*", "fieldShape", "[", "0", "]", "+", "roundUp2", "*", "fieldShape", "[", "0", "]", "*", "fieldShape", "[", "1", "]", "\n", "idx100", "=", "roundUp0", "+", "roundLow1", "*", "fieldShape", "[", "0", "]", "+", "roundLow2", "*", "fieldShape", "[", "0", "]", "*", "fieldShape", "[", "1", "]", "\n", "idx011", "=", "roundLow0", "+", "roundUp1", "*", "fieldShape", "[", "0", "]", "+", "roundUp2", "*", "fieldShape", "[", "0", "]", "*", "fieldShape", "[", "1", "]", "\n", "idx101", "=", "roundUp0", "+", "roundLow1", "*", "fieldShape", "[", "0", "]", "+", "roundUp2", "*", "fieldShape", "[", "0", "]", "*", "fieldShape", "[", "1", "]", "\n", "idx110", "=", "roundUp0", "+", "roundUp1", "*", "fieldShape", "[", "0", "]", "+", "roundLow2", "*", "fieldShape", "[", "0", "]", "*", "fieldShape", "[", "1", "]", "\n", "idx111", "=", "roundUp0", "+", "roundUp1", "*", "fieldShape", "[", "0", "]", "+", "roundUp2", "*", "fieldShape", "[", "0", "]", "*", "fieldShape", "[", "1", "]", "\n", "\n", "if", "vectorList", "[", "idx000", "]", "is", "None", ":", "\n", "          ", "vectorList", "[", "idx000", "]", "=", "[", "[", "(", "lowerPart0", ",", "lowerPart1", ",", "lowerPart2", ")", ",", "(", "-", "defVec", "[", "0", "]", ",", "-", "defVec", "[", "1", "]", ",", "-", "defVec", "[", "2", "]", ")", "]", "]", "\n", "", "else", ":", "\n", "          ", "vectorList", "[", "idx000", "]", ".", "append", "(", "[", "(", "lowerPart0", ",", "lowerPart1", ",", "lowerPart2", ")", ",", "(", "-", "defVec", "[", "0", "]", ",", "-", "defVec", "[", "1", "]", ",", "-", "defVec", "[", "2", "]", ")", "]", ")", "\n", "\n", "", "if", "vectorList", "[", "idx001", "]", "is", "None", ":", "\n", "          ", "vectorList", "[", "idx001", "]", "=", "[", "[", "(", "lowerPart0", ",", "lowerPart1", ",", "upperPart2", ")", ",", "(", "-", "defVec", "[", "0", "]", ",", "-", "defVec", "[", "1", "]", ",", "-", "defVec", "[", "2", "]", ")", "]", "]", "\n", "", "else", ":", "\n", "          ", "vectorList", "[", "idx001", "]", ".", "append", "(", "[", "(", "lowerPart0", ",", "lowerPart1", ",", "upperPart2", ")", ",", "(", "-", "defVec", "[", "0", "]", ",", "-", "defVec", "[", "1", "]", ",", "-", "defVec", "[", "2", "]", ")", "]", ")", "\n", "\n", "", "if", "vectorList", "[", "idx010", "]", "is", "None", ":", "\n", "          ", "vectorList", "[", "idx010", "]", "=", "[", "[", "(", "lowerPart0", ",", "upperPart1", ",", "lowerPart2", ")", ",", "(", "-", "defVec", "[", "0", "]", ",", "-", "defVec", "[", "1", "]", ",", "-", "defVec", "[", "2", "]", ")", "]", "]", "\n", "", "else", ":", "\n", "          ", "vectorList", "[", "idx010", "]", ".", "append", "(", "[", "(", "lowerPart0", ",", "upperPart1", ",", "lowerPart2", ")", ",", "(", "-", "defVec", "[", "0", "]", ",", "-", "defVec", "[", "1", "]", ",", "-", "defVec", "[", "2", "]", ")", "]", ")", "\n", "\n", "", "if", "vectorList", "[", "idx100", "]", "is", "None", ":", "\n", "          ", "vectorList", "[", "idx100", "]", "=", "[", "[", "(", "upperPart0", ",", "lowerPart1", ",", "lowerPart2", ")", ",", "(", "-", "defVec", "[", "0", "]", ",", "-", "defVec", "[", "1", "]", ",", "-", "defVec", "[", "2", "]", ")", "]", "]", "\n", "", "else", ":", "\n", "          ", "vectorList", "[", "idx100", "]", ".", "append", "(", "[", "(", "upperPart0", ",", "lowerPart1", ",", "lowerPart2", ")", ",", "(", "-", "defVec", "[", "0", "]", ",", "-", "defVec", "[", "1", "]", ",", "-", "defVec", "[", "2", "]", ")", "]", ")", "\n", "\n", "", "if", "vectorList", "[", "idx011", "]", "is", "None", ":", "\n", "          ", "vectorList", "[", "idx011", "]", "=", "[", "[", "(", "lowerPart0", ",", "upperPart1", ",", "upperPart2", ")", ",", "(", "-", "defVec", "[", "0", "]", ",", "-", "defVec", "[", "1", "]", ",", "-", "defVec", "[", "2", "]", ")", "]", "]", "\n", "", "else", ":", "\n", "          ", "vectorList", "[", "idx011", "]", ".", "append", "(", "[", "(", "lowerPart0", ",", "upperPart1", ",", "upperPart2", ")", ",", "(", "-", "defVec", "[", "0", "]", ",", "-", "defVec", "[", "1", "]", ",", "-", "defVec", "[", "2", "]", ")", "]", ")", "\n", "\n", "", "if", "vectorList", "[", "idx101", "]", "is", "None", ":", "\n", "          ", "vectorList", "[", "idx101", "]", "=", "[", "[", "(", "upperPart0", ",", "lowerPart1", ",", "upperPart2", ")", ",", "(", "-", "defVec", "[", "0", "]", ",", "-", "defVec", "[", "1", "]", ",", "-", "defVec", "[", "2", "]", ")", "]", "]", "\n", "", "else", ":", "\n", "          ", "vectorList", "[", "idx101", "]", ".", "append", "(", "[", "(", "upperPart0", ",", "lowerPart1", ",", "upperPart2", ")", ",", "(", "-", "defVec", "[", "0", "]", ",", "-", "defVec", "[", "1", "]", ",", "-", "defVec", "[", "2", "]", ")", "]", ")", "\n", "\n", "", "if", "vectorList", "[", "idx110", "]", "is", "None", ":", "\n", "          ", "vectorList", "[", "idx110", "]", "=", "[", "[", "(", "upperPart0", ",", "upperPart1", ",", "lowerPart2", ")", ",", "(", "-", "defVec", "[", "0", "]", ",", "-", "defVec", "[", "1", "]", ",", "-", "defVec", "[", "2", "]", ")", "]", "]", "\n", "", "else", ":", "\n", "          ", "vectorList", "[", "idx110", "]", ".", "append", "(", "[", "(", "upperPart0", ",", "upperPart1", ",", "lowerPart2", ")", ",", "(", "-", "defVec", "[", "0", "]", ",", "-", "defVec", "[", "1", "]", ",", "-", "defVec", "[", "2", "]", ")", "]", ")", "\n", "\n", "", "if", "vectorList", "[", "idx111", "]", "is", "None", ":", "\n", "          ", "vectorList", "[", "idx111", "]", "=", "[", "[", "(", "upperPart0", ",", "upperPart1", ",", "upperPart2", ")", ",", "(", "-", "defVec", "[", "0", "]", ",", "-", "defVec", "[", "1", "]", ",", "-", "defVec", "[", "2", "]", ")", "]", "]", "\n", "", "else", ":", "\n", "          ", "vectorList", "[", "idx111", "]", ".", "append", "(", "[", "(", "upperPart0", ",", "upperPart1", ",", "upperPart2", ")", ",", "(", "-", "defVec", "[", "0", "]", ",", "-", "defVec", "[", "1", "]", ",", "-", "defVec", "[", "2", "]", ")", "]", ")", "\n", "\n", "", "", "", "", "newField", "=", "torch", ".", "zeros_like", "(", "defField", ")", "\n", "for", "idx0", "in", "range", "(", "fieldShape", "[", "0", "]", ")", ":", "\n", "    ", "for", "idx1", "in", "range", "(", "fieldShape", "[", "1", "]", ")", ":", "\n", "      ", "for", "idx2", "in", "range", "(", "fieldShape", "[", "2", "]", ")", ":", "\n", "\n", "        ", "idx", "=", "idx0", "+", "idx1", "*", "fieldShape", "[", "0", "]", "+", "idx2", "*", "fieldShape", "[", "0", "]", "*", "fieldShape", "[", "1", "]", "\n", "vectorParsList", "=", "vectorList", "[", "idx", "]", "\n", "if", "vectorParsList", "is", "not", "None", ":", "\n", "          ", "partSum0", ",", "partSum1", ",", "partSum2", "=", "0.0", ",", "0.0", ",", "0.0", "\n", "for", "vectPart", "in", "vectorParsList", ":", "\n", "            ", "partSum0", "=", "partSum0", "+", "vectPart", "[", "0", "]", "[", "0", "]", "\n", "partSum1", "=", "partSum1", "+", "vectPart", "[", "0", "]", "[", "1", "]", "\n", "partSum2", "=", "partSum2", "+", "vectPart", "[", "0", "]", "[", "2", "]", "\n", "\n", "", "vecPart0", ",", "vecPart1", ",", "vecPart2", "=", "0.0", ",", "0.0", ",", "0.0", "\n", "for", "vectPart", "in", "vectorParsList", ":", "\n", "            ", "if", "partSum0", ">", "0", ":", "\n", "              ", "vecPart2", "=", "vecPart2", "+", "(", "vectPart", "[", "0", "]", "[", "0", "]", "/", "partSum0", ")", "*", "vectPart", "[", "1", "]", "[", "2", "]", "\n", "", "if", "partSum1", ">", "0", ":", "\n", "              ", "vecPart1", "=", "vecPart1", "+", "(", "vectPart", "[", "0", "]", "[", "1", "]", "/", "partSum1", ")", "*", "vectPart", "[", "1", "]", "[", "1", "]", "\n", "", "if", "partSum2", ">", "0", ":", "\n", "              ", "vecPart0", "=", "vecPart0", "+", "(", "vectPart", "[", "0", "]", "[", "2", "]", "/", "partSum2", ")", "*", "vectPart", "[", "1", "]", "[", "0", "]", "\n", "\n", "", "", "newField", "[", "0", ",", "0", ",", "idx0", ",", "idx1", ",", "idx2", "]", "=", "vecPart0", "\n", "newField", "[", "0", ",", "1", ",", "idx0", ",", "idx1", ",", "idx2", "]", "=", "vecPart1", "\n", "newField", "[", "0", ",", "2", ",", "idx0", ",", "idx1", ",", "idx2", "]", "=", "vecPart2", "\n", "\n", "", "", "", "", "return", "newField", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.DefFieldHandler.combineDeformationFields": [[130, 152], ["SimpleITK.ReadImage", "sitk.ReadImage.GetSpacing", "sitk.ReadImage.GetOrigin", "sitk.ReadImage.GetDirection", "SimpleITK.GetArrayFromImage", "numpy.moveaxis", "numpy.expand_dims", "torch.from_numpy", "str", "OneShotImageRegistration.src.Utils.combineDeformationFields"], "function", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.DefFieldHandler.combineDeformationFields"], ["", "def", "combineDeformationFields", "(", "filenames", ")", ":", "\n", "  ", "oldNet", "=", "None", "\n", "for", "filename", "in", "filenames", ":", "\n", "    ", "defFieldITK", "=", "sitk", ".", "ReadImage", "(", "str", "(", "filename", ")", ")", "\n", "defFieldSpacing", "=", "defFieldITK", ".", "GetSpacing", "(", ")", "\n", "defFieldOrigin", "=", "defFieldITK", ".", "GetOrigin", "(", ")", "\n", "defFieldDirection", "=", "defFieldITK", ".", "GetDirection", "(", ")", "\n", "\n", "defField", "=", "sitk", ".", "GetArrayFromImage", "(", "defFieldITK", ")", "\n", "defField", "[", "...", ",", "0", "]", "=", "(", "defField", "[", "...", ",", "0", "]", "/", "defFieldSpacing", "[", "0", "]", ")", "*", "defFieldDirection", "[", "0", "]", "\n", "defField", "[", "...", ",", "1", "]", "=", "(", "defField", "[", "...", ",", "1", "]", "/", "defFieldSpacing", "[", "1", "]", ")", "*", "defFieldDirection", "[", "4", "]", "\n", "defField", "[", "...", ",", "2", "]", "=", "(", "defField", "[", "...", ",", "2", "]", "/", "defFieldSpacing", "[", "2", "]", ")", "*", "defFieldDirection", "[", "8", "]", "\n", "\n", "defField", "=", "np", ".", "moveaxis", "(", "defField", ",", "-", "1", ",", "0", ")", "\n", "defField", "=", "np", ".", "expand_dims", "(", "defField", ",", "axis", "=", "0", ")", "\n", "defField", "=", "torch", ".", "from_numpy", "(", "defField", ")", "\n", "if", "oldNet", "is", "None", ":", "\n", "      ", "oldNet", "=", "defField", "\n", "", "else", ":", "\n", "      ", "oldNet", "=", "Utils", ".", "combineDeformationFields", "(", "defField", ",", "oldNet", ")", "\n", "\n", "", "", "return", "oldNet", ",", "defFieldSpacing", ",", "defFieldOrigin", ",", "defFieldDirection", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.DefFieldHandler.main": [[153, 193], ["getopt.getopt", "DefFieldHandler.combineDeformationFields", "arg.split", "OneShotImageRegistration.src.Utils.getDefField", "SimpleITK.GetImageFromArray", "sitk.GetImageFromArray.SetSpacing", "sitk.GetImageFromArray.SetOrigin", "sitk.GetImageFromArray.SetDirection", "SimpleITK.WriteImage", "str", "DefFieldHandler.invertDirectionOfField", "oldNet[].detach", "oldNet[].detach", "oldNet[].detach"], "function", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.DefFieldHandler.combineDeformationFields", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getDefField", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.DefFieldHandler.invertDirectionOfField"], ["", "def", "main", "(", "argv", "=", "None", ")", ":", "# IGNORE:C0111", "\n", "  ", "try", ":", "\n", "    ", "opts", ",", "_", "=", "getopt", ".", "getopt", "(", "argv", ",", "'f:o:i'", ",", "[", "'files='", ",", "'output='", ",", "'invert'", "]", ")", "\n", "", "except", "getopt", ".", "GetoptError", ":", "\n", "    ", "return", "\n", "\n", "", "filenames", "=", "None", "\n", "outputFilename", "=", "\"combinedDefField.nrrd\"", "\n", "invertField", "=", "False", "\n", "for", "opt", ",", "arg", "in", "opts", ":", "\n", "    ", "if", "opt", "in", "(", "\"-f\"", ",", "\"--files\"", ")", ":", "\n", "      ", "filenames", "=", "arg", ".", "split", "(", ")", "\n", "", "elif", "opt", "in", "(", "\"-o\"", ",", "\"--output\"", ")", ":", "\n", "      ", "outputFilename", "=", "str", "(", "arg", ")", "\n", "", "elif", "opt", "in", "(", "\"-i\"", ",", "\"--invert\"", ")", ":", "\n", "      ", "invertField", "=", "True", "\n", "\n", "\n", "", "", "if", "filenames", "is", "not", "None", ":", "\n", "    ", "oldNet", ",", "defFieldSpacing", ",", "defFieldOrigin", ",", "defFieldDirection", "=", "combineDeformationFields", "(", "filenames", ")", "\n", "\n", "\n", "if", "oldNet", "is", "not", "None", ":", "\n", "      ", "if", "invertField", ":", "\n", "        ", "oldNet", "=", "invertDirectionOfField", "(", "oldNet", ")", "\n", "\n", "", "defX", "=", "oldNet", "[", "0", ",", "0", ",", "]", ".", "detach", "(", ")", "*", "defFieldSpacing", "[", "0", "]", "*", "defFieldDirection", "[", "0", "]", "\n", "defY", "=", "oldNet", "[", "0", ",", "1", ",", "]", ".", "detach", "(", ")", "*", "defFieldSpacing", "[", "1", "]", "*", "defFieldDirection", "[", "4", "]", "\n", "defZ", "=", "oldNet", "[", "0", ",", "2", ",", "]", ".", "detach", "(", ")", "*", "defFieldSpacing", "[", "2", "]", "*", "defFieldDirection", "[", "8", "]", "\n", "defField", "=", "Utils", ".", "getDefField", "(", "defX", ",", "defY", ",", "defZ", ")", "\n", "\n", "\n", "\n", "defDataToSave", "=", "sitk", ".", "GetImageFromArray", "(", "defField", ",", "isVector", "=", "True", ")", "\n", "\n", "defDataToSave", ".", "SetSpacing", "(", "defFieldSpacing", ")", "\n", "defDataToSave", ".", "SetOrigin", "(", "defFieldOrigin", ")", "\n", "defDataToSave", ".", "SetDirection", "(", "defFieldDirection", ")", "\n", "\n", "sitk", ".", "WriteImage", "(", "defDataToSave", ",", "outputFilename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointReader.loadData": [[11, 31], ["open", "os.path.splitext", "line.split", "currPoints.append", "numpy.float32", "line.split", "currPoints.append", "numpy.float32", "numpy.float32", "numpy.float32", "numpy.float32", "numpy.float32", "line.split", "currPoints.append", "numpy.float32", "numpy.float32", "numpy.float32"], "methods", ["None"], ["  ", "def", "loadData", "(", "self", ",", "filename", ")", ":", "\n", "    ", "currPoints", "=", "[", "]", "\n", "pointFile", "=", "open", "(", "filename", ",", "'r'", ")", "\n", "filename", ",", "file_extension", "=", "os", ".", "path", ".", "splitext", "(", "filename", ")", "\n", "if", "file_extension", "==", "'.fcsv'", ":", "#slicer datasets", "\n", "      ", "for", "line", "in", "pointFile", ":", "\n", "        ", "pointsStr", "=", "line", ".", "split", "(", "','", ")", "\n", "point", "=", "(", "np", ".", "float32", "(", "pointsStr", "[", "1", "]", ")", "*", "-", "1", ",", "np", ".", "float32", "(", "pointsStr", "[", "2", "]", ")", "*", "-", "1", ",", "np", ".", "float32", "(", "pointsStr", "[", "3", "]", ")", ")", "\n", "currPoints", ".", "append", "(", "point", ")", "\n", "", "", "elif", "file_extension", "==", "'.pts'", ":", "#popi datasets", "\n", "      ", "for", "line", "in", "pointFile", ":", "\n", "        ", "pointsStr", "=", "line", ".", "split", "(", ")", "\n", "point", "=", "(", "np", ".", "float32", "(", "pointsStr", "[", "0", "]", ")", ",", "np", ".", "float32", "(", "pointsStr", "[", "1", "]", ")", ",", "np", ".", "float32", "(", "pointsStr", "[", "2", "]", ")", ")", "\n", "currPoints", ".", "append", "(", "point", ")", "\n", "", "", "elif", "file_extension", "==", "'.txt'", ":", "#dirlab datasetes", "\n", "      ", "for", "line", "in", "pointFile", ":", "\n", "        ", "pointsStr", "=", "line", ".", "split", "(", "'\\t'", ")", "\n", "point", "=", "(", "np", ".", "float32", "(", "pointsStr", "[", "0", "]", ")", ",", "np", ".", "float32", "(", "pointsStr", "[", "1", "]", ")", ",", "np", ".", "float32", "(", "pointsStr", "[", "2", "]", ")", ")", "\n", "currPoints", ".", "append", "(", "point", ")", "\n", "", "", "return", "currPoints", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointReader.saveDataTensor": [[32, 37], ["open", "open.close", "open.write", "str", "str", "numpy.float32", "str", "numpy.float32", "numpy.float32"], "methods", ["None"], ["", "def", "saveDataTensor", "(", "self", ",", "filename", ",", "points", ",", "seperator", "=", "' '", ")", ":", "\n", "    ", "pointFile", "=", "open", "(", "filename", ",", "'w'", ")", "\n", "for", "point", "in", "points", ":", "\n", "      ", "pointFile", ".", "write", "(", "str", "(", "np", ".", "float32", "(", "point", "[", "0", "]", ")", "[", "0", "]", ")", "+", "seperator", "+", "str", "(", "np", ".", "float32", "(", "point", "[", "1", "]", ")", "[", "0", "]", ")", "+", "seperator", "+", "str", "(", "np", ".", "float32", "(", "point", "[", "2", "]", ")", "[", "0", "]", ")", "+", "'\\n'", ")", "\n", "", "pointFile", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointReader.saveDataList": [[38, 43], ["open", "open.close", "open.write", "str", "str", "str"], "methods", ["None"], ["", "def", "saveDataList", "(", "self", ",", "filename", ",", "points", ",", "seperator", "=", "' '", ")", ":", "\n", "    ", "pointFile", "=", "open", "(", "filename", ",", "'w'", ")", "\n", "for", "point", "in", "points", ":", "\n", "      ", "pointFile", ".", "write", "(", "str", "(", "point", "[", "0", "]", ")", "+", "seperator", "+", "str", "(", "point", "[", "1", "]", ")", "+", "seperator", "+", "str", "(", "point", "[", "2", "]", ")", "+", "'\\n'", ")", "\n", "", "pointFile", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointReader.saveDataFcsv": [[44, 51], ["open", "open.close", "open.write", "str", "str", "str", "str"], "methods", ["None"], ["", "def", "saveDataFcsv", "(", "self", ",", "filename", ",", "points", ")", ":", "\n", "    ", "pointFile", "=", "open", "(", "filename", ",", "'w'", ")", "\n", "i", "=", "0", "\n", "for", "point", "in", "points", ":", "\n", "      ", "pointFile", ".", "write", "(", "'Landmark'", "+", "str", "(", "i", ")", "+", "','", "+", "str", "(", "point", "[", "0", "]", ")", "+", "','", "+", "str", "(", "point", "[", "1", "]", ")", "+", "','", "+", "str", "(", "point", "[", "2", "]", ")", "+", "'\\n'", ")", "\n", "i", "+=", "1", "\n", "", "pointFile", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointReader.saveDataFcsvSlicer": [[52, 67], ["open", "open.close", "len", "type", "open.write", "open.write", "str", "str", "numpy.float32", "str", "numpy.float32", "str", "str", "str", "numpy.float32", "numpy.float32", "str", "str", "numpy.float32", "numpy.float32"], "methods", ["None"], ["", "def", "saveDataFcsvSlicer", "(", "self", ",", "filename", ",", "points", ")", ":", "\n", "    ", "pointFile", "=", "open", "(", "filename", ",", "'w'", ")", "\n", "i", "=", "0", "\n", "pointsAreLists", "=", "False", "\n", "if", "len", "(", "points", ")", ">", "0", ":", "\n", "      ", "if", "type", "(", "points", "[", "0", "]", "[", "0", "]", ")", "==", "list", ":", "\n", "        ", "pointsAreLists", "=", "True", "\n", "\n", "", "", "for", "point", "in", "points", ":", "\n", "      ", "if", "pointsAreLists", ":", "\n", "        ", "pointFile", ".", "write", "(", "'Landmark'", "+", "str", "(", "i", ")", "+", "','", "+", "str", "(", "np", ".", "float32", "(", "point", "[", "0", "]", ")", "[", "0", "]", "*", "-", "1", ")", "+", "','", "+", "str", "(", "np", ".", "float32", "(", "point", "[", "1", "]", ")", "[", "0", "]", "*", "-", "1", ")", "+", "','", "+", "str", "(", "np", ".", "float32", "(", "point", "[", "2", "]", ")", "[", "0", "]", ")", "+", "'\\n'", ")", "\n", "", "else", ":", "\n", "        ", "pointFile", ".", "write", "(", "'Landmark'", "+", "str", "(", "i", ")", "+", "','", "+", "str", "(", "np", ".", "float32", "(", "point", "[", "0", "]", ")", "*", "-", "1", ")", "+", "','", "+", "str", "(", "np", ".", "float32", "(", "point", "[", "1", "]", ")", "*", "-", "1", ")", "+", "','", "+", "str", "(", "np", ".", "float32", "(", "point", "[", "2", "]", ")", ")", "+", "'\\n'", ")", "\n", "", "i", "+=", "1", "\n", "", "pointFile", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointProcessor.getFileName": [[70, 81], ["os.path.isfile", "os.path.isfile", "os.path.isfile"], "methods", ["None"], ["  ", "def", "getFileName", "(", "self", ",", "path", ",", "fileName", ")", ":", "\n", "    ", "landmarkFileName", "=", "path", "+", "os", ".", "path", ".", "sep", "+", "fileName", "+", "'.pts'", "\n", "if", "(", "os", ".", "path", ".", "isfile", "(", "landmarkFileName", ")", ")", ":", "\n", "      ", "return", "landmarkFileName", "\n", "", "landmarkFileName", "=", "path", "+", "os", ".", "path", ".", "sep", "+", "fileName", "+", "'.txt'", "\n", "if", "(", "os", ".", "path", ".", "isfile", "(", "landmarkFileName", ")", ")", ":", "\n", "      ", "return", "landmarkFileName", "\n", "", "landmarkFileName", "=", "path", "+", "os", ".", "path", ".", "sep", "+", "fileName", "+", "'.fcsv'", "\n", "if", "(", "os", ".", "path", ".", "isfile", "(", "landmarkFileName", ")", ")", ":", "\n", "      ", "return", "landmarkFileName", "\n", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointProcessor.calculatePointDistance": [[82, 118], ["LandmarkHandler.PointReader", "range", "os.path.isfile", "os.path.isfile", "origFiles.append", "deformedFiles.append", "len", "len", "LandmarkHandler.PointReader.loadData", "LandmarkHandler.PointReader.loadData", "LandmarkHandler.PointProcessor.calculatePointSetDistance", "distances.append", "stds.append", "LandmarkHandler.PointProcessor.getFileName", "LandmarkHandler.PointProcessor.getFileName", "origFiles.append", "deformedFiles.append", "str", "str"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointReader.loadData", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointReader.loadData", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointProcessor.calculatePointSetDistance", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointProcessor.getFileName", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointProcessor.getFileName"], ["", "def", "calculatePointDistance", "(", "self", ",", "filepath0", ",", "filepath1", ")", ":", "\n", "    ", "i", "=", "0", "\n", "origFiles", "=", "[", "]", "\n", "deformedFiles", "=", "[", "]", "\n", "if", "os", ".", "path", ".", "isfile", "(", "filepath0", ")", "and", "os", ".", "path", ".", "isfile", "(", "filepath1", ")", ":", "\n", "      ", "origFiles", ".", "append", "(", "filepath0", ")", "\n", "deformedFiles", ".", "append", "(", "filepath1", ")", "\n", "i", "=", "i", "+", "1", "\n", "", "else", ":", "\n", "      ", "while", "(", "True", ")", ":", "\n", "        ", "landmarkFileName", "=", "self", ".", "getFileName", "(", "filepath0", ",", "str", "(", "i", ")", "+", "'0'", ")", "\n", "if", "(", "landmarkFileName", "is", "not", "None", ")", ":", "\n", "          ", "origFiles", ".", "append", "(", "landmarkFileName", ")", "\n", "", "else", ":", "\n", "          ", "break", "\n", "\n", "", "landmarkFileName", "=", "self", ".", "getFileName", "(", "filepath1", ",", "str", "(", "i", ")", "+", "'0deformed'", ")", "\n", "if", "(", "landmarkFileName", "is", "not", "None", ")", ":", "\n", "          ", "deformedFiles", ".", "append", "(", "landmarkFileName", ")", "\n", "\n", "", "i", "=", "i", "+", "1", "\n", "\n", "", "", "if", "(", "len", "(", "origFiles", ")", "!=", "len", "(", "deformedFiles", ")", ")", ":", "\n", "      ", "deformedFiles", "=", "origFiles", "\n", "\n", "", "pr", "=", "PointReader", "(", ")", "\n", "distances", "=", "[", "]", "\n", "stds", "=", "[", "]", "\n", "for", "pIdx", "in", "range", "(", "-", "1", ",", "i", "-", "1", ")", ":", "\n", "      ", "origPoints", "=", "pr", ".", "loadData", "(", "origFiles", "[", "pIdx", "]", ")", "\n", "deformedPoints", "=", "pr", ".", "loadData", "(", "deformedFiles", "[", "pIdx", "+", "1", "]", ")", "\n", "mean", ",", "std", "=", "self", ".", "calculatePointSetDistance", "(", "origPoints", ",", "deformedPoints", ")", "\n", "distances", ".", "append", "(", "mean", ")", "\n", "stds", ".", "append", "(", "std", ")", "\n", "\n", "", "return", "distances", ",", "stds", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointProcessor.calculatePointSetDistance": [[119, 140], ["range", "len", "range", "math.sqrt", "distances.append", "len", "numpy.mean", "numpy.std", "len", "print"], "methods", ["None"], ["", "def", "calculatePointSetDistance", "(", "self", ",", "points0", ",", "points1", ",", "printToCmdLine", "=", "True", ")", ":", "\n", "    ", "distances", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "0", ",", "len", "(", "points0", ")", ")", ":", "\n", "      ", "point0", "=", "points0", "[", "idx", "]", "\n", "point1", "=", "points1", "[", "idx", "]", "\n", "distance", "=", "0.0", "\n", "for", "dim", "in", "range", "(", "0", ",", "len", "(", "point0", ")", ")", ":", "\n", "        ", "diff", "=", "point0", "[", "dim", "]", "-", "point1", "[", "dim", "]", "\n", "diff", "*=", "diff", "\n", "distance", "+=", "diff", "\n", "", "currDist", "=", "sqrt", "(", "distance", ")", "\n", "distances", ".", "append", "(", "currDist", ")", "\n", "if", "printToCmdLine", ":", "\n", "        ", "print", "(", "currDist", ")", "\n", "", "", "if", "len", "(", "distances", ")", ">", "0", ":", "\n", "      ", "meanDistance", "=", "np", ".", "mean", "(", "distances", ")", "\n", "std", "=", "np", ".", "std", "(", "distances", ")", "\n", "", "else", ":", "\n", "      ", "meanDistance", "=", "-", "1.0", "\n", "std", "=", "-", "1.0", "\n", "", "return", "meanDistance", ",", "std", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointProcessor.deformPoints": [[143, 166], ["SimpleITK.ReadImage", "SimpleITK.GetArrayFromImage", "numpy.moveaxis", "numpy.moveaxis", "LandmarkHandler.PointReader", "LandmarkHandler.PointReader.loadData", "LandmarkHandler.PointProcessor.deformPointsWithField", "os.path.splitext", "LandmarkHandler.PointReader.saveDataList", "str", "SimpleITK.ReadImage", "SimpleITK.ReadImage.GetSpacing", "SimpleITK.ReadImage.GetOrigin", "SimpleITK.ReadImage.GetDirection", "SimpleITK.ReadImage.GetSpacing", "SimpleITK.ReadImage.GetOrigin", "SimpleITK.ReadImage.GetDirection", "str"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointReader.loadData", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointProcessor.deformPointsWithField", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointReader.saveDataList"], ["", "def", "deformPoints", "(", "self", ",", "filePath", ",", "defFieldFileName", ",", "referenceImg", "=", "0", ")", ":", "\n", "\n", "    ", "defFieldITK", "=", "sitk", ".", "ReadImage", "(", "str", "(", "defFieldFileName", ")", ")", "\n", "defField", "=", "sitk", ".", "GetArrayFromImage", "(", "defFieldITK", ")", "\n", "if", "(", "referenceImg", "!=", "0", ")", ":", "\n", "      ", "refImgItk", "=", "sitk", ".", "ReadImage", "(", "str", "(", "referenceImg", ")", ")", "\n", "defFieldSpacing", "=", "refImgItk", ".", "GetSpacing", "(", ")", "\n", "defFieldOrigin", "=", "refImgItk", ".", "GetOrigin", "(", ")", "\n", "defFieldDirection", "=", "refImgItk", ".", "GetDirection", "(", ")", "\n", "", "else", ":", "\n", "      ", "defFieldSpacing", "=", "defFieldITK", ".", "GetSpacing", "(", ")", "\n", "defFieldOrigin", "=", "defFieldITK", ".", "GetOrigin", "(", ")", "\n", "defFieldDirection", "=", "defFieldITK", ".", "GetDirection", "(", ")", "\n", "\n", "", "defField", "=", "np", ".", "moveaxis", "(", "defField", ",", "0", ",", "2", ")", "\n", "defField", "=", "np", ".", "moveaxis", "(", "defField", ",", "0", ",", "1", ")", "\n", "\n", "pr", "=", "PointReader", "(", ")", "\n", "points", "=", "pr", ".", "loadData", "(", "filePath", ")", "\n", "\n", "newPoints", "=", "self", ".", "deformPointsWithField", "(", "points", ",", "defField", ",", "defFieldOrigin", ",", "defFieldSpacing", ",", "defFieldDirection", ")", "\n", "filename", ",", "file_extension", "=", "os", ".", "path", ".", "splitext", "(", "filePath", ")", "\n", "pr", ".", "saveDataList", "(", "filename", "+", "'deformed.pts'", ",", "newPoints", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointProcessor.deformPointsWithField": [[167, 205], ["range", "range", "newPoints.append", "idxCoords.append", "int", "idx0.append", "idx1.append", "part1.append", "part0.append"], "methods", ["None"], ["", "def", "deformPointsWithField", "(", "self", ",", "points", ",", "defField", ",", "defFieldOrigin", ",", "defFieldSpacing", ",", "direction", ")", ":", "\n", "\n", "    ", "newPoints", "=", "[", "]", "\n", "for", "point", "in", "points", ":", "\n", "\n", "      ", "idx0", "=", "[", "]", "\n", "idx1", "=", "[", "]", "\n", "part0", "=", "[", "]", "\n", "part1", "=", "[", "]", "\n", "pointMinusOrigin", "=", "[", "point", "[", "0", "]", "-", "defFieldOrigin", "[", "0", "]", ",", "\n", "point", "[", "1", "]", "-", "defFieldOrigin", "[", "1", "]", ",", "\n", "point", "[", "2", "]", "-", "defFieldOrigin", "[", "2", "]", "]", "\n", "#so far we consider only axis aligend images ", "\n", "idxCoords", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "0", ",", "3", ")", ":", "\n", "        ", "ijk", "=", "pointMinusOrigin", "[", "idx", "]", "/", "(", "defFieldSpacing", "[", "idx", "]", "*", "direction", "[", "idx", "*", "3", "+", "idx", "]", ")", "\n", "idxCoords", ".", "append", "(", "ijk", ")", "\n", "firstIdx", "=", "int", "(", "ijk", ")", "\n", "idx0", ".", "append", "(", "firstIdx", ")", "\n", "idx1", ".", "append", "(", "firstIdx", "+", "1", ")", "\n", "firsPart", "=", "ijk", "-", "firstIdx", "\n", "part1", ".", "append", "(", "firsPart", ")", "\n", "part0", ".", "append", "(", "1", "-", "firsPart", ")", "\n", "\n", "", "defVec", "=", "(", "0", ",", "0", ",", "0", ")", "\n", "if", "(", "idx0", "[", "0", "]", ">", "0", "and", "idx0", "[", "1", "]", ">", "0", "and", "idx0", "[", "2", "]", ">", "0", "and", "idx1", "[", "0", "]", "<", "defField", ".", "shape", "[", "0", "]", "and", "idx1", "[", "1", "]", "<", "defField", ".", "shape", "[", "1", "]", "and", "idx1", "[", "2", "]", "<", "defField", ".", "shape", "[", "2", "]", ")", ":", "\n", "        ", "defVec", "=", "part0", "[", "0", "]", "*", "part0", "[", "1", "]", "*", "part0", "[", "2", "]", "*", "defField", "[", "idx0", "[", "0", "]", ",", "idx0", "[", "1", "]", ",", "idx0", "[", "2", "]", ",", ":", "]", "+", "part0", "[", "0", "]", "*", "part0", "[", "1", "]", "*", "part1", "[", "2", "]", "*", "defField", "[", "idx0", "[", "0", "]", ",", "idx0", "[", "1", "]", ",", "idx1", "[", "2", "]", ",", ":", "]", "+", "part0", "[", "0", "]", "*", "part1", "[", "1", "]", "*", "part0", "[", "2", "]", "*", "defField", "[", "idx0", "[", "0", "]", ",", "idx1", "[", "1", "]", ",", "idx0", "[", "2", "]", ",", ":", "]", "+", "part1", "[", "0", "]", "*", "part0", "[", "1", "]", "*", "part0", "[", "2", "]", "*", "defField", "[", "idx1", "[", "0", "]", ",", "idx0", "[", "1", "]", ",", "idx0", "[", "2", "]", ",", ":", "]", "+", "part0", "[", "0", "]", "*", "part1", "[", "1", "]", "*", "part1", "[", "2", "]", "*", "defField", "[", "idx0", "[", "0", "]", ",", "idx1", "[", "1", "]", ",", "idx1", "[", "2", "]", ",", ":", "]", "+", "part1", "[", "0", "]", "*", "part1", "[", "1", "]", "*", "part0", "[", "2", "]", "*", "defField", "[", "idx1", "[", "0", "]", ",", "idx1", "[", "1", "]", ",", "idx0", "[", "2", "]", ",", ":", "]", "+", "part1", "[", "0", "]", "*", "part0", "[", "1", "]", "*", "part1", "[", "2", "]", "*", "defField", "[", "idx1", "[", "0", "]", ",", "idx0", "[", "1", "]", ",", "idx1", "[", "2", "]", ",", ":", "]", "+", "part1", "[", "0", "]", "*", "part1", "[", "1", "]", "*", "part1", "[", "2", "]", "*", "defField", "[", "idx1", "[", "0", "]", ",", "idx1", "[", "1", "]", ",", "idx1", "[", "2", "]", ",", ":", "]", "\n", "\n", "", "pointPosNew", "=", "[", "0.0", ",", "0.0", ",", "0.0", "]", "\n", "for", "idx", "in", "range", "(", "0", ",", "3", ")", ":", "\n", "        ", "pointPosNew", "[", "idx", "]", "=", "(", "(", "point", "[", "idx", "]", "+", "defVec", "[", "idx", "]", ")", ")", "# * defFieldSpacing[idx] * direction[idx*3 + idx]) + defFieldOrigin[idx]", "\n", "\n", "", "newPoints", ".", "append", "(", "pointPosNew", ")", "\n", "\n", "", "return", "newPoints", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointProcessor.convertToFcsv": [[207, 223], ["LandmarkHandler.PointReader", "os.path.isfile", "LandmarkHandler.PointReader.loadData", "os.path.splitext", "LandmarkHandler.PointReader.saveDataFcsvSlicer", "os.path.isfile", "LandmarkHandler.PointReader.loadData", "LandmarkHandler.PointReader.saveDataFcsvSlicer", "str", "str"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointReader.loadData", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointReader.saveDataFcsvSlicer", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointReader.loadData", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointReader.saveDataFcsvSlicer"], ["", "def", "convertToFcsv", "(", "self", ",", "filepath", ")", ":", "\n", "    ", "pr", "=", "PointReader", "(", ")", "\n", "if", "(", "os", ".", "path", ".", "isfile", "(", "filepath", ")", ")", ":", "\n", "      ", "points", "=", "pr", ".", "loadData", "(", "filepath", ")", "\n", "filePathName", ",", "_", "=", "os", ".", "path", ".", "splitext", "(", "filepath", ")", "\n", "pr", ".", "saveDataFcsvSlicer", "(", "filePathName", "+", "'.fcsv'", ",", "points", ")", "\n", "", "else", ":", "\n", "      ", "i", "=", "0", "\n", "while", "(", "True", ")", ":", "\n", "        ", "pointFileName", "=", "filepath", "+", "os", ".", "path", ".", "sep", "+", "str", "(", "i", ")", "+", "'0.pts'", "\n", "if", "(", "os", ".", "path", ".", "isfile", "(", "pointFileName", ")", ")", ":", "\n", "          ", "points", "=", "pr", ".", "loadData", "(", "pointFileName", ")", "\n", "pr", ".", "saveDataFcsvSlicer", "(", "filepath", "+", "os", ".", "path", ".", "sep", "+", "str", "(", "i", ")", "+", "'0.fcsv'", ",", "points", ")", "\n", "", "else", ":", "\n", "          ", "break", "\n", "", "i", "=", "i", "+", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointProcessor.convertTxtToPts": [[224, 233], ["SimpleITK.ReadImage", "LandmarkHandler.PointReader", "LandmarkHandler.PointReader.loadData", "SimpleITK.ReadImage.TransformIndexToPhysicalPoint", "newPoints.append", "SimpleITK.VectorInt64", "int", "int", "int"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointReader.loadData"], ["", "", "", "def", "convertTxtToPts", "(", "self", ",", "filename", ",", "referenceImg", ")", ":", "\n", "    ", "sitkImg", "=", "sitk", ".", "ReadImage", "(", "referenceImg", ")", "\n", "pr", "=", "PointReader", "(", ")", "\n", "newPoints", "=", "[", "]", "\n", "points", "=", "pr", ".", "loadData", "(", "filename", ")", "\n", "for", "point", "in", "points", ":", "\n", "      ", "pointWorldCoord", "=", "sitkImg", ".", "TransformIndexToPhysicalPoint", "(", "sitk", ".", "VectorInt64", "(", "[", "int", "(", "point", "[", "0", "]", ")", ",", "int", "(", "point", "[", "1", "]", ")", ",", "int", "(", "point", "[", "2", "]", ")", "]", ")", ")", "\n", "newPoints", ".", "append", "(", "(", "[", "pointWorldCoord", "[", "0", "]", "]", ",", "[", "pointWorldCoord", "[", "1", "]", "]", ",", "[", "pointWorldCoord", "[", "2", "]", "]", ")", ")", "\n", "", "return", "newPoints", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointProcessor.convertPtsToTxt": [[234, 243], ["SimpleITK.ReadImage", "LandmarkHandler.PointReader", "LandmarkHandler.PointReader.loadData", "SimpleITK.ReadImage.TransformPhysicalPointToIndex", "newPoints.append", "SimpleITK.VectorDouble", "int", "int", "int"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointReader.loadData"], ["", "def", "convertPtsToTxt", "(", "self", ",", "filename", ",", "referenceImg", ")", ":", "\n", "    ", "sitkImg", "=", "sitk", ".", "ReadImage", "(", "referenceImg", ")", "\n", "pr", "=", "PointReader", "(", ")", "\n", "newPoints", "=", "[", "]", "\n", "points", "=", "pr", ".", "loadData", "(", "filename", ")", "\n", "for", "point", "in", "points", ":", "\n", "      ", "pointWorldCoord", "=", "sitkImg", ".", "TransformPhysicalPointToIndex", "(", "sitk", ".", "VectorDouble", "(", "[", "int", "(", "point", "[", "0", "]", ")", ",", "int", "(", "point", "[", "1", "]", ")", ",", "int", "(", "point", "[", "2", "]", ")", "]", ")", ")", "\n", "newPoints", ".", "append", "(", "(", "[", "pointWorldCoord", "[", "0", "]", "]", ",", "[", "pointWorldCoord", "[", "1", "]", "]", ",", "[", "pointWorldCoord", "[", "2", "]", "]", ")", ")", "\n", "", "return", "newPoints", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointProcessor.convertPtsToTxt2": [[244, 253], ["SimpleITK.ReadImage", "LandmarkHandler.PointReader", "LandmarkHandler.PointReader.loadData", "SimpleITK.ReadImage.TransformPhysicalPointToIndex", "newPoints.append", "SimpleITK.VectorDouble", "int", "int", "int"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointReader.loadData"], ["", "def", "convertPtsToTxt2", "(", "self", ",", "filename", ",", "referenceImg", ")", ":", "\n", "    ", "sitkImg", "=", "sitk", ".", "ReadImage", "(", "referenceImg", ")", "\n", "pr", "=", "PointReader", "(", ")", "\n", "newPoints", "=", "[", "]", "\n", "points", "=", "pr", ".", "loadData", "(", "filename", ")", "\n", "for", "point", "in", "points", ":", "\n", "      ", "pointWorldCoord", "=", "sitkImg", ".", "TransformPhysicalPointToIndex", "(", "sitk", ".", "VectorDouble", "(", "[", "int", "(", "point", "[", "0", "]", ")", ",", "int", "(", "point", "[", "1", "]", ")", ",", "int", "(", "point", "[", "2", "]", ")", "]", ")", ")", "\n", "newPoints", ".", "append", "(", "(", "pointWorldCoord", "[", "0", "]", ",", "pointWorldCoord", "[", "1", "]", ",", "pointWorldCoord", "[", "2", "]", ")", ")", "\n", "", "return", "newPoints", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointProcessor.convertPoints": [[254, 267], ["LandmarkHandler.PointReader", "os.path.splitext", "LandmarkHandler.PointProcessor.convertPtsToTxt", "LandmarkHandler.PointReader.saveDataTensor", "LandmarkHandler.PointProcessor.convertTxtToPts", "LandmarkHandler.PointReader.saveDataTensor"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointProcessor.convertPtsToTxt", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointReader.saveDataTensor", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointProcessor.convertTxtToPts", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointReader.saveDataTensor"], ["", "def", "convertPoints", "(", "self", ",", "filename", ",", "referenceImg", ")", ":", "\n", "    ", "pr", "=", "PointReader", "(", ")", "\n", "filePathName", ",", "_", "=", "os", ".", "path", ".", "splitext", "(", "filename", ")", "\n", "if", "'.pts'", "in", "filename", ":", "\n", "      ", "newPoints", "=", "self", ".", "convertPtsToTxt", "(", "filename", ",", "referenceImg", ")", "\n", "fileNameNew", "=", "filePathName", "+", "'.txt'", "\n", "pr", ".", "saveDataTensor", "(", "fileNameNew", ",", "newPoints", ",", "'\\t'", ")", "\n", "", "elif", "'.txt'", "in", "filename", ":", "\n", "      ", "newPoints", "=", "self", ".", "convertTxtToPts", "(", "filename", ",", "referenceImg", ")", "\n", "fileNameNew", "=", "filePathName", "+", "'.pts'", "\n", "pr", ".", "saveDataTensor", "(", "fileNameNew", ",", "newPoints", ")", "\n", "", "else", ":", "\n", "      ", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointProcessor.correctPointPositions": [[268, 300], ["os.path.isfile", "SimpleITK.ReadImage", "SimpleITK.ReadImage.GetSize", "SimpleITK.ReadImage.GetSpacing", "SimpleITK.ReadImage.GetOrigin", "LandmarkHandler.PointReader", "print", "LandmarkHandler.PointProcessor.getFileName", "LandmarkHandler.PointReader.loadData", "LandmarkHandler.PointReader.saveDataTensor", "LandmarkHandler.PointReader.saveDataFcsvSlicer", "str", "newPoints.append", "str", "str"], "methods", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointProcessor.getFileName", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointReader.loadData", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointReader.saveDataTensor", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointReader.saveDataFcsvSlicer"], ["", "", "def", "correctPointPositions", "(", "self", ",", "filepath", ",", "referenceImg", ")", ":", "\n", "    ", "imgFilePath", "=", "filepath", "+", "os", ".", "path", ".", "sep", "+", "referenceImg", "\n", "if", "(", "os", ".", "path", ".", "isfile", "(", "imgFilePath", ")", ")", ":", "\n", "      ", "sitkImg", "=", "sitk", ".", "ReadImage", "(", "imgFilePath", ")", "\n", "\n", "imgSize", "=", "sitkImg", ".", "GetSize", "(", ")", "\n", "imgSpacing", "=", "sitkImg", ".", "GetSpacing", "(", ")", "\n", "imgOrigin", "=", "sitkImg", ".", "GetOrigin", "(", ")", "\n", "\n", "ySizeHalf", "=", "imgSize", "[", "1", "]", "/", "2.0", "\n", "offset", "=", "imgOrigin", "[", "1", "]", "+", "ySizeHalf", "*", "imgSpacing", "[", "1", "]", "\n", "if", "(", "imgSize", "[", "1", "]", "%", "2", "==", "0", ")", ":", "\n", "        ", "offset", "-=", "imgSpacing", "[", "1", "]", "/", "2", "\n", "\n", "", "i", "=", "0", "\n", "pr", "=", "PointReader", "(", ")", "\n", "while", "(", "True", ")", ":", "\n", "        ", "pointFileName", "=", "self", ".", "getFileName", "(", "filepath", ",", "str", "(", "i", ")", "+", "'0'", ")", "\n", "if", "pointFileName", "is", "not", "None", ":", "\n", "          ", "newPoints", "=", "[", "]", "\n", "points", "=", "pr", ".", "loadData", "(", "pointFileName", ")", "\n", "if", "'.pts'", "in", "pointFileName", ":", "\n", "            ", "for", "point", "in", "points", ":", "\n", "              ", "newPoint", "=", "(", "[", "point", "[", "0", "]", "]", ",", "[", "point", "[", "1", "]", "+", "offset", "]", ",", "[", "point", "[", "2", "]", "]", ")", "\n", "newPoints", ".", "append", "(", "newPoint", ")", "\n", "", "", "pr", ".", "saveDataTensor", "(", "filepath", "+", "os", ".", "path", ".", "sep", "+", "str", "(", "i", ")", "+", "'00.pts'", ",", "newPoints", ")", "\n", "pr", ".", "saveDataFcsvSlicer", "(", "filepath", "+", "os", ".", "path", ".", "sep", "+", "str", "(", "i", ")", "+", "'00.fcsv'", ",", "newPoints", ")", "\n", "", "else", ":", "\n", "          ", "break", "\n", "", "i", "=", "i", "+", "1", "\n", "", "", "else", ":", "\n", "      ", "print", "(", "'reference imgage not found'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.main": [[301, 375], ["LandmarkHandler.PointProcessor", "getopt.getopt", "LandmarkHandler.PointProcessor.correctPointPositions", "print", "LandmarkHandler.PointProcessor.convertPoints", "LandmarkHandler.PointProcessor.calculatePointDistance", "open", "zip", "open.write", "open.close", "open.write", "LandmarkHandler.PointProcessor.deformPoints", "LandmarkHandler.PointProcessor.convertPtsToTxt2", "open", "os.path.splitext", "SimpleITK.ReadImage", "scipy.interpolate.griddata", "SimpleITK.GetImageFromArray", "sitk.GetImageFromArray.SetSpacing", "sitk.GetImageFromArray.SetOrigin", "sitk.GetImageFromArray.SetDirection", "SimpleITK.WriteImage", "LandmarkHandler.PointProcessor.convertToFcsv", "str", "line.split", "numpy.float32", "pointDiffs.append", "numpy.swapaxes", "sitk.WriteImage.GetSpacing", "sitk.WriteImage.GetOrigin", "sitk.WriteImage.GetDirection", "str", "sitk.WriteImage.GetSize", "sitk.WriteImage.GetSize", "sitk.WriteImage.GetSize"], "function", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointProcessor.correctPointPositions", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointProcessor.convertPoints", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointProcessor.calculatePointDistance", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointProcessor.deformPoints", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointProcessor.convertPtsToTxt2", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.LandmarkHandler.PointProcessor.convertToFcsv"], ["", "", "", "def", "main", "(", "argv", ")", ":", "\n", "  ", "try", ":", "\n", "    ", "opts", ",", "args", "=", "getopt", ".", "getopt", "(", "argv", ",", "''", ",", "[", "'path0='", ",", "'refImg='", ",", "'correctPos'", ",", "'path1='", ",", "'calcDiff'", ",", "'outputPath='", ",", "'convert'", ",", "'deformPoints'", ",", "'visErr'", "]", ")", "\n", "", "except", "getopt", ".", "GetoptError", "as", "e", ":", "#python3", "\n", "    ", "print", "(", "e", ")", "\n", "return", "\n", "\n", "", "filepath0", "=", "''", "\n", "filepath1", "=", "''", "\n", "outputPath", "=", "'.'", "\n", "calcDiff", "=", "False", "\n", "correctPos", "=", "False", "\n", "convertPoints", "=", "False", "\n", "deformPoints", "=", "False", "\n", "visualiseError", "=", "False", "\n", "referenceImg", "=", "0", "\n", "for", "opt", ",", "arg", "in", "opts", ":", "\n", "    ", "if", "opt", "==", "'--path0'", ":", "\n", "      ", "filepath0", "=", "arg", "\n", "", "elif", "opt", "==", "'--correctPos'", ":", "\n", "      ", "correctPos", "=", "True", "\n", "", "elif", "opt", "==", "'--calcDiff'", ":", "\n", "      ", "calcDiff", "=", "True", "\n", "", "elif", "opt", "==", "'--path1'", ":", "\n", "      ", "filepath1", "=", "arg", "\n", "", "elif", "opt", "==", "'--outputPath'", ":", "\n", "      ", "outputPath", "=", "arg", "\n", "", "elif", "opt", "==", "'--convert'", ":", "\n", "      ", "convertPoints", "=", "True", "\n", "", "elif", "opt", "==", "'--deformPoints'", ":", "\n", "      ", "deformPoints", "=", "True", "\n", "", "elif", "opt", "==", "'--refImg'", ":", "\n", "      ", "referenceImg", "=", "arg", "\n", "", "elif", "opt", "==", "'--visErr'", ":", "\n", "      ", "visualiseError", "=", "True", "\n", "\n", "", "", "pointProcessor", "=", "PointProcessor", "(", ")", "\n", "if", "(", "correctPos", ")", ":", "\n", "    ", "pointProcessor", ".", "correctPointPositions", "(", "filepath0", ",", "referenceImg", ")", "\n", "", "elif", "(", "convertPoints", ")", ":", "\n", "    ", "pointProcessor", ".", "convertPoints", "(", "filepath0", ",", "referenceImg", ")", "\n", "", "elif", "(", "calcDiff", ")", ":", "\n", "    ", "distances", ",", "stds", "=", "pointProcessor", ".", "calculatePointDistance", "(", "filepath0", ",", "filepath1", ")", "\n", "logfile", "=", "outputPath", "+", "os", ".", "path", ".", "sep", "+", "'distances.csv'", "\n", "logFile", "=", "open", "(", "logfile", ",", "'a'", ",", "buffering", "=", "0", ")", "\n", "for", "dist", ",", "std", "in", "zip", "(", "distances", ",", "stds", ")", ":", "\n", "      ", "logFile", ".", "write", "(", "str", "(", "dist", ")", "+", "';'", "+", "str", "(", "std", ")", ")", "\n", "", "logFile", ".", "write", "(", "'\\n'", ")", "\n", "logFile", ".", "close", "(", ")", "\n", "\n", "", "elif", "(", "deformPoints", ")", ":", "##ATTENTION: the def field points from output to input therefore we need no take the target landmarks and deform them", "\n", "    ", "pointProcessor", ".", "deformPoints", "(", "filepath0", ",", "filepath1", ",", "referenceImg", ")", "\n", "", "elif", "(", "visualiseError", ")", ":", "\n", "    ", "pointsIdx", "=", "pointProcessor", ".", "convertPtsToTxt2", "(", "filepath0", ",", "referenceImg", ")", "\n", "pointDiffs", "=", "[", "]", "\n", "pointDiffFile", "=", "open", "(", "filepath1", ",", "'r'", ")", "\n", "filename", ",", "file_extension", "=", "os", ".", "path", ".", "splitext", "(", "referenceImg", ")", "\n", "for", "line", "in", "pointDiffFile", ":", "\n", "      ", "pointsStr", "=", "line", ".", "split", "(", "';'", ")", "\n", "pointDiff", "=", "np", ".", "float32", "(", "pointsStr", "[", "0", "]", ")", "\n", "pointDiffs", ".", "append", "(", "pointDiff", ")", "\n", "\n", "", "sitkImg", "=", "sitk", ".", "ReadImage", "(", "referenceImg", ")", "\n", "\n", "grid_x", ",", "grid_y", ",", "grid_z", "=", "np", ".", "mgrid", "[", "0", ":", "sitkImg", ".", "GetSize", "(", ")", "[", "0", "]", ",", "0", ":", "sitkImg", ".", "GetSize", "(", ")", "[", "1", "]", ",", "0", ":", "sitkImg", ".", "GetSize", "(", ")", "[", "2", "]", "]", "\n", "grid", "=", "griddata", "(", "pointsIdx", ",", "pointDiffs", ",", "(", "grid_x", ",", "grid_y", ",", "grid_z", ")", ",", "method", "=", "'linear'", ")", "\n", "errrImg", "=", "sitk", ".", "GetImageFromArray", "(", "np", ".", "swapaxes", "(", "grid", ",", "-", "1", ",", "0", ")", ")", "\n", "errrImg", ".", "SetSpacing", "(", "sitkImg", ".", "GetSpacing", "(", ")", ")", "\n", "errrImg", ".", "SetOrigin", "(", "sitkImg", ".", "GetOrigin", "(", ")", ")", "\n", "errrImg", ".", "SetDirection", "(", "sitkImg", ".", "GetDirection", "(", ")", ")", "\n", "sitkImg", "=", "sitk", ".", "WriteImage", "(", "errrImg", ",", "filename", "+", "\"Error.nrrd\"", ")", "\n", "\n", "", "else", ":", "\n", "    ", "pointProcessor", ".", "convertToFcsv", "(", "filepath0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.EvalBinaryImage.BinaryImageEvaluator.calculateDice": [[9, 12], ["medpy.binary.dc"], "methods", ["None"], ["  ", "def", "calculateDice", "(", "self", ",", "img0", ",", "img1", ")", ":", "\n", "    ", "dc", "=", "medMet", ".", "binary", ".", "dc", "(", "img0", ",", "img1", ")", "\n", "return", "dc", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.EvalBinaryImage.BinaryImageEvaluator.calculateHausdorffDistance": [[13, 16], ["medpy.binary.hd"], "methods", ["None"], ["", "def", "calculateHausdorffDistance", "(", "self", ",", "img0", ",", "img1", ",", "spacing", ")", ":", "\n", "    ", "hd", "=", "medMet", ".", "binary", ".", "hd", "(", "img0", ",", "img1", ",", "spacing", ")", "\n", "return", "hd", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.EvalBinaryImage.BinaryImageEvaluator.calculateASSD": [[17, 20], ["medpy.binary.assd"], "methods", ["None"], ["", "def", "calculateASSD", "(", "self", ",", "img0", ",", "img1", ",", "spacing", ")", ":", "\n", "    ", "assd", "=", "medMet", ".", "binary", ".", "assd", "(", "img0", ",", "img1", ",", "spacing", ")", "\n", "return", "assd", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.EvalBinaryImage.loadImage": [[22, 27], ["SimpleITK.ReadImage", "SimpleITK.GetArrayFromImage", "sitk.ReadImage.GetSpacing", "str"], "function", ["None"], ["", "", "def", "loadImage", "(", "fileName", ")", ":", "\n", "    ", "imgITK", "=", "sitk", ".", "ReadImage", "(", "str", "(", "fileName", ")", ")", "\n", "img", "=", "sitk", ".", "GetArrayFromImage", "(", "imgITK", ")", "\n", "spacing", "=", "imgITK", ".", "GetSpacing", "(", ")", "\n", "return", "img", ",", "(", "spacing", "[", "2", "]", ",", "spacing", "[", "1", "]", ",", "spacing", "[", "0", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.EvalBinaryImage.main": [[28, 72], ["EvalBinaryImage.loadImage", "EvalBinaryImage.loadImage", "getopt.getopt", "open", "open.write", "open.close", "EvalBinaryImage.BinaryImageEvaluator", "EvalBinaryImage.BinaryImageEvaluator.calculateHausdorffDistance", "EvalBinaryImage.BinaryImageEvaluator.calculateDice", "EvalBinaryImage.BinaryImageEvaluator.calculateASSD", "open.write", "open.write", "img0.max", "img1.max", "numpy.where", "numpy.where", "numpy.min", "numpy.max", "str", "numpy.max", "numpy.max", "numpy.min", "numpy.min", "str", "str"], "function", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.EvalBinaryImage.loadImage", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.EvalBinaryImage.loadImage", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.EvalBinaryImage.BinaryImageEvaluator.calculateHausdorffDistance", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.EvalBinaryImage.BinaryImageEvaluator.calculateDice", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.EvalBinaryImage.BinaryImageEvaluator.calculateASSD"], ["", "def", "main", "(", "argv", ")", ":", "\n", "  ", "try", ":", "\n", "    ", "opts", ",", "args", "=", "getopt", ".", "getopt", "(", "argv", ",", "'f:m:o:c'", ",", "[", "'file0='", ",", "'file1='", ",", "'outputFileName='", ",", "'cropZ'", "]", ")", "\n", "", "except", "getopt", ".", "GetoptError", ":", "\n", "    ", "return", "\n", "\n", "", "outputfile", "=", "None", "\n", "cropZ", "=", "False", "\n", "for", "opt", ",", "arg", "in", "opts", ":", "\n", "    ", "if", "opt", "in", "(", "\"-f\"", ",", "\"--file0\"", ")", ":", "\n", "      ", "filename0", "=", "arg", "\n", "", "elif", "opt", "in", "(", "\"-m\"", ",", "\"--file1\"", ")", ":", "\n", "      ", "filename1", "=", "arg", "\n", "", "elif", "opt", "in", "(", "\"-o\"", ",", "\"--outputFileName\"", ")", ":", "\n", "      ", "outputfile", "=", "arg", "\n", "", "elif", "opt", "in", "(", "\"-c\"", ",", "\"--cropZ\"", ")", ":", "\n", "      ", "cropZ", "=", "True", "\n", "\n", "", "", "img0", ",", "spacing", "=", "loadImage", "(", "filename0", ")", "\n", "img1", ",", "_", "=", "loadImage", "(", "filename1", ")", "\n", "\n", "if", "outputfile", "is", "not", "None", ":", "\n", "    ", "logFile", "=", "open", "(", "outputfile", ",", "'a'", ",", "buffering", "=", "0", ")", "\n", "\n", "if", "img0", ".", "shape", "==", "img1", ".", "shape", "and", "img0", ".", "max", "(", ")", ">", "0", "and", "img1", ".", "max", "(", ")", ">", "0", ":", "\n", "      ", "bie", "=", "BinaryImageEvaluator", "(", ")", "\n", "\n", "if", "cropZ", ":", "\n", "        ", "indices0", "=", "np", ".", "where", "(", "img0", ">", "0", ")", "\n", "indices1", "=", "np", ".", "where", "(", "img1", ">", "0", ")", "\n", "upperbound", "=", "np", ".", "min", "(", "[", "np", ".", "max", "(", "indices0", "[", "0", "]", ")", ",", "np", ".", "max", "(", "indices1", "[", "0", "]", ")", "]", ")", "\n", "lowerBound", "=", "np", ".", "max", "(", "[", "np", ".", "min", "(", "indices0", "[", "0", "]", ")", ",", "np", ".", "min", "(", "indices1", "[", "0", "]", ")", "]", ")", "\n", "img0", "=", "img0", "[", "lowerBound", ":", "upperbound", ",", ":", ",", ":", "]", "\n", "img1", "=", "img1", "[", "lowerBound", ":", "upperbound", ",", ":", ",", ":", "]", "\n", "\n", "", "hd", "=", "bie", ".", "calculateHausdorffDistance", "(", "img0", ",", "img1", ",", "spacing", ")", "\n", "dc", "=", "bie", ".", "calculateDice", "(", "img0", ",", "img1", ")", "\n", "assd", "=", "bie", ".", "calculateASSD", "(", "img0", ",", "img1", ",", "spacing", ")", "\n", "\n", "logFile", ".", "write", "(", "str", "(", "dc", ")", "+", "';'", "+", "str", "(", "hd", ")", "+", "';'", "+", "str", "(", "assd", ")", ")", "\n", "", "else", ":", "\n", "      ", "logFile", ".", "write", "(", "''", ")", "\n", "", "logFile", ".", "write", "(", "'\\n'", ")", "\n", "logFile", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.ImageWarper.main": [[8, 72], ["getopt.getopt", "SimpleITK.ReadImage", "SimpleITK.GetArrayFromImage", "sitk.ReadImage.GetSpacing", "sitk.ReadImage.GetDirection", "numpy.moveaxis", "numpy.expand_dims", "SimpleITK.ReadImage", "SimpleITK.GetArrayFromImage", "numpy.expand_dims", "numpy.expand_dims", "sitk.ReadImage.GetSpacing", "sitk.ReadImage.GetOrigin", "sitk.ReadImage.GetDirection", "torch.from_numpy", "imageTorch.float.float", "torch.from_numpy", "SimpleITK.GetImageFromArray", "sitk.GetImageFromArray.SetSpacing", "sitk.GetImageFromArray.SetOrigin", "sitk.GetImageFromArray.SetDirection", "SimpleITK.WriteImage", "print", "str", "str", "Utils.deformWithNearestNeighborInterpolation", "Utils.deformImage", "torch.tensor"], "function", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.deformWithNearestNeighborInterpolation", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.deformImage"], ["def", "main", "(", "argv", ")", ":", "\n", "  ", "try", ":", "\n", "    ", "opts", ",", "_", "=", "getopt", ".", "getopt", "(", "argv", ",", "'i:d:o:b'", ",", "[", "'img='", ",", "'defField='", ",", "'output='", ",", "'binary'", "]", ")", "\n", "", "except", "getopt", ".", "GetoptError", "as", "e", ":", "#python3", "\n", "    ", "print", "(", "e", ")", "\n", "return", "\n", "\n", "", "outputfile", "=", "None", "\n", "imageFileName", "=", "None", "\n", "defFieldFileName", "=", "None", "\n", "isBinary", "=", "False", "\n", "for", "opt", ",", "arg", "in", "opts", ":", "\n", "    ", "if", "opt", "in", "(", "\"-i\"", ",", "\"--img\"", ")", ":", "\n", "      ", "imageFileName", "=", "arg", "\n", "", "elif", "opt", "in", "(", "\"-d\"", ",", "\"--defField\"", ")", ":", "\n", "      ", "defFieldFileName", "=", "arg", "\n", "", "elif", "opt", "in", "(", "\"-o\"", ",", "\"--output\"", ")", ":", "\n", "      ", "outputfile", "=", "arg", "\n", "", "elif", "opt", "in", "(", "\"-b\"", ",", "\"--binary\"", ")", ":", "\n", "      ", "isBinary", "=", "True", "\n", "\n", "\n", "", "", "if", "outputfile", "is", "not", "None", "and", "imageFileName", "is", "not", "None", "and", "defFieldFileName", "is", "not", "None", ":", "\n", "    ", "defFieldITK", "=", "sitk", ".", "ReadImage", "(", "str", "(", "defFieldFileName", ")", ")", "\n", "defField", "=", "sitk", ".", "GetArrayFromImage", "(", "defFieldITK", ")", "\n", "\n", "#     defField = np.moveaxis(defField, 0, 2)", "\n", "#     defField = np.moveaxis(defField, 0, 1)", "\n", "defFieldSpacing", "=", "defFieldITK", ".", "GetSpacing", "(", ")", "\n", "defFieldDirection", "=", "defFieldITK", ".", "GetDirection", "(", ")", "\n", "defField", "[", "...", ",", "0", "]", "=", "(", "defField", "[", "...", ",", "0", "]", "/", "defFieldSpacing", "[", "0", "]", ")", "*", "defFieldDirection", "[", "0", "]", "\n", "defField", "[", "...", ",", "1", "]", "=", "(", "defField", "[", "...", ",", "1", "]", "/", "defFieldSpacing", "[", "1", "]", ")", "*", "defFieldDirection", "[", "4", "]", "\n", "defField", "[", "...", ",", "2", "]", "=", "(", "defField", "[", "...", ",", "2", "]", "/", "defFieldSpacing", "[", "2", "]", ")", "*", "defFieldDirection", "[", "8", "]", "\n", "\n", "defField", "=", "np", ".", "moveaxis", "(", "defField", ",", "-", "1", ",", "0", ")", "\n", "defField", "=", "np", ".", "expand_dims", "(", "defField", ",", "axis", "=", "0", ")", "\n", "\n", "\n", "imageITK", "=", "sitk", ".", "ReadImage", "(", "str", "(", "imageFileName", ")", ")", "\n", "image", "=", "sitk", ".", "GetArrayFromImage", "(", "imageITK", ")", "\n", "image", "=", "np", ".", "expand_dims", "(", "image", ",", "axis", "=", "0", ")", "\n", "image", "=", "np", ".", "expand_dims", "(", "image", ",", "axis", "=", "0", ")", "\n", "imageSpacing", "=", "imageITK", ".", "GetSpacing", "(", ")", "\n", "imageOrigin", "=", "imageITK", ".", "GetOrigin", "(", ")", "\n", "imageDirection", "=", "imageITK", ".", "GetDirection", "(", ")", "\n", "\n", "imageTorch", "=", "torch", ".", "from_numpy", "(", "image", ")", "\n", "imageType", "=", "imageTorch", ".", "dtype", "\n", "imageTorch", "=", "imageTorch", ".", "float", "(", ")", "\n", "defFieldTorch", "=", "torch", ".", "from_numpy", "(", "defField", ")", "\n", "\n", "\n", "\n", "\n", "if", "isBinary", ":", "\n", "      ", "deformedImage", "=", "Utils", ".", "deformWithNearestNeighborInterpolation", "(", "imageTorch", ",", "defFieldTorch", ",", "'cpu'", ")", "\n", "", "else", ":", "\n", "      ", "deformedImage", "=", "Utils", ".", "deformImage", "(", "imageTorch", ",", "defFieldTorch", ",", "'cpu'", ")", "\n", "", "deformedImageITK", "=", "sitk", ".", "GetImageFromArray", "(", "torch", ".", "tensor", "(", "deformedImage", "[", "0", ",", "0", ",", "]", ",", "dtype", "=", "imageType", ")", ")", "\n", "\n", "deformedImageITK", ".", "SetSpacing", "(", "imageSpacing", ")", "\n", "deformedImageITK", ".", "SetOrigin", "(", "imageOrigin", ")", "\n", "deformedImageITK", ".", "SetDirection", "(", "imageDirection", ")", "\n", "sitk", ".", "WriteImage", "(", "deformedImageITK", ",", "outputfile", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.eval.ScalingAndSqaringTest.main": [[10, 54], ["getopt.getopt", "SimpleITK.ReadImage", "SimpleITK.GetArrayFromImage", "sitk.ReadImage.GetOrigin", "sitk.ReadImage.GetSpacing", "sitk.ReadImage.GetDirection", "numpy.moveaxis", "numpy.expand_dims", "torch.from_numpy", "src.ScalingAndSquaring", "sas.ScalingAndSquaring.", "src.Utils.getDefField", "src.Utils.getDefField", "SimpleITK.GetImageFromArray", "sitk.GetImageFromArray.SetSpacing", "sitk.GetImageFromArray.SetOrigin", "sitk.GetImageFromArray.SetDirection", "SimpleITK.WriteImage", "print", "str"], "function", ["home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getDefField", "home.repos.pwc.inspect_result.ToFec_OneShotImageRegistration.src.Utils.getDefField"], ["def", "main", "(", "argv", ")", ":", "\n", "\n", "  ", "try", ":", "\n", "    ", "opts", ",", "args", "=", "getopt", ".", "getopt", "(", "argv", ",", "'d:o:'", ",", "[", "'defField='", ",", "'output='", "]", ")", "\n", "", "except", "getopt", ".", "GetoptError", "as", "e", ":", "#python3", "\n", "    ", "print", "(", "e", ")", "\n", "return", "\n", "\n", "", "outputfile", "=", "None", "\n", "defFieldFileName", "=", "None", "\n", "for", "opt", ",", "arg", "in", "opts", ":", "\n", "    ", "if", "opt", "in", "(", "\"-d\"", ",", "\"--defField\"", ")", ":", "\n", "      ", "defFieldFileName", "=", "arg", "\n", "", "elif", "opt", "in", "(", "\"-o\"", ",", "\"--output\"", ")", ":", "\n", "      ", "outputfile", "=", "arg", "\n", "\n", "", "", "if", "outputfile", "is", "not", "None", "and", "defFieldFileName", "is", "not", "None", ":", "\n", "    ", "defFieldITK", "=", "sitk", ".", "ReadImage", "(", "str", "(", "defFieldFileName", ")", ")", "\n", "defField", "=", "sitk", ".", "GetArrayFromImage", "(", "defFieldITK", ")", "\n", "defFieldOrigin", "=", "defFieldITK", ".", "GetOrigin", "(", ")", "\n", "defFieldSpacing", "=", "defFieldITK", ".", "GetSpacing", "(", ")", "\n", "defFieldDirection", "=", "defFieldITK", ".", "GetDirection", "(", ")", "\n", "defField", "[", "...", ",", "0", "]", "=", "(", "defField", "[", "...", ",", "0", "]", ")", "*", "defFieldDirection", "[", "0", "]", "\n", "defField", "[", "...", ",", "1", "]", "=", "(", "defField", "[", "...", ",", "1", "]", ")", "*", "defFieldDirection", "[", "4", "]", "\n", "defField", "[", "...", ",", "2", "]", "=", "(", "defField", "[", "...", ",", "2", "]", ")", "*", "defFieldDirection", "[", "8", "]", "\n", "\n", "defField", "=", "np", ".", "moveaxis", "(", "defField", ",", "-", "1", ",", "0", ")", "\n", "defField", "=", "np", ".", "expand_dims", "(", "defField", ",", "axis", "=", "0", ")", "\n", "\n", "defFieldTorch", "=", "torch", ".", "from_numpy", "(", "defField", ")", "\n", "\n", "scalingSquaring", "=", "sas", ".", "ScalingAndSquaring", "(", "num_steps", "=", "3", ")", "\n", "\n", "deformationField", "=", "scalingSquaring", "(", "defFieldTorch", ")", "\n", "\n", "defX", "=", "deformationField", "[", "0", ",", "0", ",", "]", "*", "defFieldDirection", "[", "0", "]", "\n", "defY", "=", "deformationField", "[", "0", ",", "1", ",", "]", "*", "defFieldDirection", "[", "4", "]", "\n", "defZ", "=", "deformationField", "[", "0", ",", "2", ",", "]", "*", "defFieldDirection", "[", "8", "]", "\n", "defField", "=", "src", ".", "Utils", ".", "getDefField", "(", "defX", ",", "defY", ",", "defZ", ")", "\n", "defDataToSave", "=", "sitk", ".", "GetImageFromArray", "(", "defField", ",", "isVector", "=", "True", ")", "\n", "defDataToSave", ".", "SetSpacing", "(", "defFieldSpacing", ")", "\n", "defDataToSave", ".", "SetOrigin", "(", "defFieldOrigin", ")", "\n", "defDataToSave", ".", "SetDirection", "(", "defFieldDirection", ")", "\n", "sitk", ".", "WriteImage", "(", "defDataToSave", ",", "outputfile", ")", "\n", "\n"]]}