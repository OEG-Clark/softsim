{"home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.None.path_dict.PathDict.__init__": [[5, 11], ["socket.gethostname", "os.path.dirname", "os.path.dirname", "os.path.abspath", "os.path.abspath"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "hostname", "=", "socket", ".", "gethostname", "(", ")", "\n", "if", "'abci'", "in", "hostname", ":", "\n", "            ", "self", ".", "proj_root", "=", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "abspath", "(", "__file__", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "proj_root", "=", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "abspath", "(", "__file__", ")", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.LongRangeSample.long_range_rand": [[5, 16], ["int", "int", "range", "frame_ind.append", "math.ceil", "frame_ind.append", "random.randint", "random.randint", "len"], "function", ["None"], ["def", "long_range_rand", "(", "seq_len", ",", "num_seg", ")", ":", "\n", "    ", "r", "=", "int", "(", "seq_len", "/", "num_seg", ")", "\n", "real_num_seg", "=", "int", "(", "math", ".", "ceil", "(", "seq_len", "/", "r", ")", ")", "\n", "\n", "frame_ind", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "real_num_seg", "-", "1", ")", ":", "\n", "        ", "frame_ind", ".", "append", "(", "random", ".", "randint", "(", "i", "*", "r", ",", "(", "i", "+", "1", ")", "*", "r", "-", "1", ")", ")", "\n", "", "frame_ind", ".", "append", "(", "random", ".", "randint", "(", "(", "real_num_seg", "-", "1", ")", "*", "r", ",", "seq_len", "-", "1", ")", ")", "\n", "\n", "frame_ind", "=", "frame_ind", "[", "len", "(", "frame_ind", ")", "-", "num_seg", ":", "]", "\n", "return", "frame_ind", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.LongRangeSample.long_range_first": [[17, 25], ["int", "range", "frame_ind.append", "len"], "function", ["None"], ["", "def", "long_range_first", "(", "seq_len", ",", "num_seg", ")", ":", "\n", "    ", "r", "=", "int", "(", "seq_len", "/", "num_seg", ")", "\n", "\n", "frame_ind", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "seq_len", ",", "r", ")", ":", "\n", "        ", "frame_ind", ".", "append", "(", "i", ")", "\n", "", "frame_ind", "=", "frame_ind", "[", "len", "(", "frame_ind", ")", "-", "num_seg", ":", "]", "\n", "return", "frame_ind", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.LongRangeSample.long_range_last": [[26, 36], ["int", "range", "frame_ind.reverse", "frame_ind.append"], "function", ["None"], ["", "def", "long_range_last", "(", "seq_len", ",", "num_seg", ")", ":", "\n", "    ", "r", "=", "int", "(", "seq_len", "/", "num_seg", ")", "\n", "\n", "frame_ind", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "seq_len", "-", "1", ",", "-", "1", ",", "-", "r", ")", ":", "\n", "        ", "frame_ind", ".", "append", "(", "i", ")", "\n", "\n", "", "frame_ind", "=", "frame_ind", "[", "0", ":", "num_seg", "]", "\n", "frame_ind", ".", "reverse", "(", ")", "\n", "return", "frame_ind", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.LongRangeSample.long_range_sample": [[37, 46], ["LongRangeSample.long_range_rand", "LongRangeSample.long_range_first", "LongRangeSample.long_range_last", "Exception"], "function", ["home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.LongRangeSample.long_range_rand", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.LongRangeSample.long_range_first", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.LongRangeSample.long_range_last"], ["", "def", "long_range_sample", "(", "seq_len", ",", "num_seg", ",", "mode", ")", ":", "\n", "    ", "if", "mode", "==", "\"random\"", ":", "\n", "        ", "return", "long_range_rand", "(", "seq_len", ",", "num_seg", ")", "\n", "", "elif", "mode", "==", "\"first\"", ":", "\n", "        ", "return", "long_range_first", "(", "seq_len", ",", "num_seg", ")", "\n", "", "elif", "mode", "==", "\"last\"", ":", "\n", "        ", "return", "long_range_last", "(", "seq_len", ",", "num_seg", ")", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "f\"Given mode is unacceptable!\"", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.ConfusionMatrix.plot_confusion_matrix": [[16, 70], ["sklearn.metrics.confusion_matrix", "matplotlib.subplots", "ax.imshow", "matplotlib.colorbar", "ax.set", "matplotlib.setp", "matplotlib.setp", "fig.tight_layout", "print", "print", "ax.get_xticklabels", "ax.get_yticklabels", "sklearn.utils.multiclass.unique_labels", "sklearn.metrics.confusion_matrix.astype", "matplotlib.get_cmap", "numpy.arange", "numpy.arange", "sklearn.metrics.confusion_matrix.sum"], "function", ["None"], ["def", "plot_confusion_matrix", "(", "y_true", ",", "y_pred", ",", "classes", ",", "\n", "normalize", "=", "False", ",", "\n", "title", "=", "None", ",", "\n", "cmap", "=", "plt", ".", "cm", ".", "Blues", ")", ":", "\n", "    ", "\"\"\"\n    This function prints and plots the confusion matrix.\n    Normalization can be applied by setting `normalize=True`.\n    \"\"\"", "\n", "if", "not", "title", ":", "\n", "        ", "if", "normalize", ":", "\n", "            ", "title", "=", "'Normalized confusion matrix'", "\n", "", "else", ":", "\n", "            ", "title", "=", "'Confusion matrix, without normalization'", "\n", "\n", "# Compute confusion matrix", "\n", "", "", "cm", "=", "confusion_matrix", "(", "y_true", ",", "y_pred", ")", "\n", "# Only use the labels that appear in the data", "\n", "classes", "=", "classes", "[", "unique_labels", "(", "y_true", ",", "y_pred", ")", "]", "\n", "if", "normalize", ":", "\n", "        ", "cm", "=", "cm", ".", "astype", "(", "'float'", ")", "/", "cm", ".", "sum", "(", "axis", "=", "1", ")", "[", ":", ",", "np", ".", "newaxis", "]", "\n", "print", "(", "\"Normalized confusion matrix\"", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "'Confusion matrix, without normalization'", ")", "\n", "\n", "# print(cm)", "\n", "\n", "", "fig", ",", "ax", "=", "plt", ".", "subplots", "(", "figsize", "=", "(", "10", ",", "10", ")", ")", "\n", "im", "=", "ax", ".", "imshow", "(", "cm", ",", "interpolation", "=", "'nearest'", ",", "cmap", "=", "plt", ".", "get_cmap", "(", "'Blues'", ")", ")", "\n", "# ax.figure.colorbar(im, ax=ax)", "\n", "plt", ".", "colorbar", "(", "im", ",", "fraction", "=", "0.046", ",", "pad", "=", "0.04", ")", "\n", "# We want to show all ticks...", "\n", "ax", ".", "set", "(", "xticks", "=", "np", ".", "arange", "(", "cm", ".", "shape", "[", "1", "]", ")", ",", "\n", "yticks", "=", "np", ".", "arange", "(", "cm", ".", "shape", "[", "0", "]", ")", ",", "\n", "# ... and label them with the respective list entries", "\n", "xticklabels", "=", "classes", ",", "yticklabels", "=", "classes", ",", "\n", "title", "=", "title", ",", "\n", "ylabel", "=", "'True label'", ",", "\n", "xlabel", "=", "'Predicted label'", ")", "\n", "\n", "# Rotate the tick labels and set their alignment.", "\n", "plt", ".", "setp", "(", "ax", ".", "get_xticklabels", "(", ")", ",", "rotation", "=", "45", ",", "ha", "=", "\"right\"", ",", "\n", "rotation_mode", "=", "\"anchor\"", ",", "fontsize", "=", "6", ")", "\n", "plt", ".", "setp", "(", "ax", ".", "get_yticklabels", "(", ")", ",", "fontsize", "=", "6", ")", "\n", "\n", "# Loop over data dimensions and create text annotations.", "\n", "# fmt = '.2f' if normalize else 'd'", "\n", "# thresh = cm.max() / 2.", "\n", "# for i in range(cm.shape[0]):", "\n", "#     for j in range(cm.shape[1]):", "\n", "#         ax.text(j, i, format(cm[i, j], fmt),", "\n", "#                 ha=\"center\", va=\"center\",", "\n", "#                 color=\"white\" if cm[i, j] > thresh else \"black\")", "\n", "fig", ".", "tight_layout", "(", ")", "\n", "return", "fig", ",", "ax", "", "", ""]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.CalAcc.AverageMeter.__init__": [[6, 10], ["CalAcc.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.CalAcc.AverageMeter.reset"], ["def", "__init__", "(", "self", ",", "name", ",", "fmt", "=", "':f'", ")", ":", "\n", "        ", "self", ".", "name", "=", "name", "\n", "self", ".", "fmt", "=", "fmt", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.CalAcc.AverageMeter.reset": [[11, 16], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.CalAcc.AverageMeter.update": [[17, 22], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.CalAcc.AverageMeter.__str__": [[23, 26], ["fmtstr.format"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "fmtstr", "=", "'{name} {val'", "+", "self", ".", "fmt", "+", "'} ({avg'", "+", "self", ".", "fmt", "+", "'})'", "\n", "return", "fmtstr", ".", "format", "(", "**", "self", ".", "__dict__", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.CalAcc.accuracy": [[31, 46], ["torch.no_grad", "max", "target.size", "output.topk", "pred.t.t", "pred.t.eq", "target.view().expand_as", "correct[].view().float().sum", "res.append", "correct[].view().float().sum.mul_", "target.view", "correct[].view().float", "correct[].view"], "function", ["None"], ["", "", "def", "accuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", "5", ")", ")", ":", "\n", "    ", "\"\"\"Computes the accuracy over the k top predictions for the specified values of k\"\"\"", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "maxk", "=", "max", "(", "topk", ")", "\n", "batch_size", "=", "target", ".", "size", "(", "0", ")", "\n", "\n", "_", ",", "pred", "=", "output", ".", "topk", "(", "maxk", ",", "1", ",", "True", ",", "True", ")", "\n", "pred", "=", "pred", ".", "t", "(", ")", "\n", "correct", "=", "pred", ".", "eq", "(", "target", ".", "view", "(", "1", ",", "-", "1", ")", ".", "expand_as", "(", "pred", ")", ")", "\n", "\n", "res", "=", "[", "]", "\n", "for", "k", "in", "topk", ":", "\n", "            ", "correct_k", "=", "correct", "[", ":", "k", "]", ".", "view", "(", "-", "1", ")", ".", "float", "(", ")", ".", "sum", "(", "0", ",", "keepdim", "=", "True", ")", "\n", "res", ".", "append", "(", "correct_k", ".", "mul_", "(", "100.0", "/", "batch_size", ")", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.CalAcc.process_activations": [[47, 66], ["torch.arange", "torch.max", "targets.repeat.repeat", "torch.nn.functional.softmax"], "function", ["None"], ["", "", "def", "process_activations", "(", "activations", ",", "targets", ",", "softmaxed", "=", "True", ")", ":", "\n", "    ", "assert", "activations", ".", "shape", "[", "0", "]", "%", "targets", ".", "shape", "[", "0", "]", "==", "0", ",", "f\"Check the batch size of activations and targets!\"", "\n", "\n", "b_repeat", "=", "activations", ".", "shape", "[", "0", "]", "//", "targets", ".", "shape", "[", "0", "]", "\n", "if", "b_repeat", ">", "1", ":", "\n", "        ", "targets", "=", "targets", ".", "repeat", "(", "b_repeat", ")", "\n", "\n", "", "if", "not", "softmaxed", ":", "\n", "        ", "soft_act", "=", "torch", ".", "nn", ".", "functional", ".", "softmax", "(", "activations", ",", "dim", "=", "1", ")", "\n", "", "else", ":", "\n", "        ", "soft_act", "=", "activations", "\n", "\n", "", "row_idx", "=", "torch", ".", "arange", "(", "\n", "soft_act", ".", "shape", "[", "0", "]", ",", "dtype", "=", "torch", ".", "long", ",", "device", "=", "activations", ".", "device", ")", "\n", "probs", "=", "soft_act", "[", "row_idx", ",", "targets", "]", "# batch_size", "\n", "pred_label_probs", ",", "pred_labels", "=", "torch", ".", "max", "(", "soft_act", ",", "dim", "=", "1", ")", "\n", "\n", "return", "probs", ",", "pred_labels", ",", "pred_label_probs", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.ImageShow.pil_to_tensor": [[14, 26], ["numpy.array", "len", "torch.tensor().permute", "torch.tensor"], "function", ["None"], ["def", "pil_to_tensor", "(", "pil_image", ")", ":", "\n", "    ", "r\"\"\"Convert a PIL image to a tensor.\n    Args:\n        pil_image (:class:`PIL.Image`): PIL image.\n    Returns:\n        :class:`torch.Tensor`: the image as a :math:`3\\times H\\times W` tensor\n        in the [0, 1] range.\n    \"\"\"", "\n", "pil_image", "=", "np", ".", "array", "(", "pil_image", ")", "\n", "if", "len", "(", "pil_image", ".", "shape", ")", "==", "2", ":", "\n", "        ", "pil_image", "=", "pil_image", "[", ":", ",", ":", ",", "None", "]", "\n", "", "return", "torch", ".", "tensor", "(", "pil_image", ",", "dtype", "=", "torch", ".", "float32", ")", ".", "permute", "(", "2", ",", "0", ",", "1", ")", "/", "255", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.ImageShow.img_tensor_to_pil": [[27, 34], ["torch.clamp.mul_", "torch.clamp", "torchvision.to_pil_image", "torch.clamp.min", "torch.clamp.max"], "function", ["None"], ["", "def", "img_tensor_to_pil", "(", "img_tensor", ")", ":", "\n", "    ", "lim", "=", "[", "img_tensor", ".", "min", "(", ")", ",", "img_tensor", ".", "max", "(", ")", "]", "\n", "img_tensor", "=", "img_tensor", "-", "lim", "[", "0", "]", "# also makes a copy", "\n", "img_tensor", ".", "mul_", "(", "1", "/", "(", "lim", "[", "1", "]", "-", "lim", "[", "0", "]", ")", ")", "\n", "img_tensor", "=", "torch", ".", "clamp", "(", "img_tensor", ",", "min", "=", "0", ",", "max", "=", "1", ")", "\n", "img_pil", "=", "TF", ".", "to_pil_image", "(", "img_tensor", ")", "\n", "return", "img_pil", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.ImageShow.img_tensor_to_np": [[35, 42], ["torch.clamp.mul_", "torch.clamp", "torch.clamp.numpy", "torch.clamp.min", "torch.clamp.max"], "function", ["None"], ["", "def", "img_tensor_to_np", "(", "img_tensor", ")", ":", "\n", "    ", "lim", "=", "[", "img_tensor", ".", "min", "(", ")", ",", "img_tensor", ".", "max", "(", ")", "]", "\n", "img_tensor", "=", "img_tensor", "-", "lim", "[", "0", "]", "# also makes a copy", "\n", "img_tensor", ".", "mul_", "(", "1", "/", "(", "lim", "[", "1", "]", "-", "lim", "[", "0", "]", ")", ")", "\n", "img_tensor", "=", "torch", ".", "clamp", "(", "img_tensor", ",", "min", "=", "0", ",", "max", "=", "1", ")", "\n", "img_np", "=", "img_tensor", ".", "numpy", "(", ")", "\n", "return", "img_np", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.ImageShow.voxel_tensor_to_np": [[43, 51], ["range", "numpy.stack", "ImageShow.img_tensor_to_np", "np.stack.append"], "function", ["home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.ImageShow.img_tensor_to_np"], ["", "def", "voxel_tensor_to_np", "(", "voxel_tensor", ")", ":", "\n", "# voxel_tensor: CxTxHxW", "\n", "    ", "voxel_np", "=", "[", "]", "\n", "for", "t", "in", "range", "(", "voxel_tensor", ".", "shape", "[", "1", "]", ")", ":", "\n", "        ", "img_np", "=", "img_tensor_to_np", "(", "voxel_tensor", "[", ":", ",", "t", ",", ":", ",", ":", "]", ")", "\n", "voxel_np", ".", "append", "(", "img_np", ")", "\n", "", "voxel_np", "=", "np", ".", "stack", "(", "voxel_np", ",", "axis", "=", "1", ")", "\n", "return", "voxel_np", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.ImageShow.map_to_colormap": [[52, 72], ["filters.gaussian.copy", "matplotlib.get_cmap", "plt.get_cmap.", "numpy.delete", "numpy.transpose", "filters.gaussian.min", "skimage.transform.resize", "skimage.filters.gaussian", "filters.gaussian.min", "filters.gaussian.max", "filters.gaussian.max", "filters.gaussian.max", "max"], "function", ["None"], ["", "def", "map_to_colormap", "(", "attMap", ",", "resize", "=", "(", ")", ",", "norm_map", "=", "False", ",", "blur", "=", "False", ")", ":", "\n", "    ", "attMap", "=", "attMap", ".", "copy", "(", ")", "\n", "if", "norm_map", ":", "\n", "        ", "attMap", "-=", "attMap", ".", "min", "(", ")", "\n", "if", "attMap", ".", "max", "(", ")", ">", "0", ":", "\n", "            ", "attMap", "/=", "attMap", ".", "max", "(", ")", "\n", "\n", "", "", "if", "resize", "!=", "(", ")", ":", "\n", "        ", "attMap", "=", "transform", ".", "resize", "(", "attMap", ",", "resize", ",", "order", "=", "3", ")", "\n", "\n", "", "if", "blur", ":", "\n", "        ", "attMap", "=", "filters", ".", "gaussian", "(", "attMap", ",", "0.02", "*", "max", "(", "resize", ")", ")", "\n", "attMap", "-=", "attMap", ".", "min", "(", ")", "\n", "attMap", "/=", "attMap", ".", "max", "(", ")", "\n", "\n", "", "cmap", "=", "plt", ".", "get_cmap", "(", "'jet'", ")", "\n", "colormap", "=", "cmap", "(", "attMap", ")", "\n", "colormap", "=", "np", ".", "delete", "(", "colormap", ",", "3", ",", "2", ")", "\n", "colormap", "=", "np", ".", "transpose", "(", "colormap", ",", "(", "2", ",", "0", ",", "1", ")", ")", "#3x224x224", "\n", "return", "attMap", ",", "colormap", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.ImageShow.overlap_map_on_img": [[73, 79], ["matplotlib.axis", "ImageShow.map_to_colormap"], "function", ["home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.ImageShow.map_to_colormap"], ["", "def", "overlap_map_on_img", "(", "img_np", ",", "attMap", ",", "norm_map", "=", "False", ",", "blur", "=", "False", ")", ":", "\n", "# img_np: CxHxW, attMap: h x w", "\n", "    ", "plt", ".", "axis", "(", "'off'", ")", "\n", "resized_map", ",", "colormap", "=", "map_to_colormap", "(", "attMap", ",", "resize", "=", "(", "img_np", ".", "shape", "[", "1", ":", "]", ")", ",", "norm_map", "=", "False", ",", "blur", "=", "blur", ")", "\n", "resized_map", "=", "1", "*", "(", "1", "-", "resized_map", "**", "0.8", ")", "*", "img_np", "+", "(", "resized_map", "**", "0.8", ")", "*", "colormap", "\n", "return", "resized_map", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.ImageShow.overlap_maps_on_voxel_np": [[80, 89], ["range", "numpy.stack", "ImageShow.overlap_map_on_img", "np.stack.append"], "function", ["home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.ImageShow.overlap_map_on_img"], ["", "def", "overlap_maps_on_voxel_np", "(", "voxel_np", ",", "attMaps", ",", "norm_map", "=", "False", ",", "blur", "=", "False", ")", ":", "\n", "    ", "overlaps", "=", "[", "]", "\n", "for", "t", "in", "range", "(", "voxel_np", ".", "shape", "[", "1", "]", ")", ":", "\n", "        ", "img_np", "=", "voxel_np", "[", ":", ",", "t", ",", ":", ",", ":", "]", "\n", "attMap", "=", "attMaps", "[", "t", ",", ":", ",", ":", "]", "\n", "overlap", "=", "overlap_map_on_img", "(", "img_np", ",", "attMap", ",", "norm_map", ",", "blur", ")", "\n", "overlaps", ".", "append", "(", "overlap", ")", "\n", "", "overlaps", "=", "np", ".", "stack", "(", "overlaps", ",", "axis", "=", "1", ")", "# 3x16x224x224", "\n", "return", "overlaps", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.ImageShow.img_np_show": [[90, 97], ["numpy.transpose", "matplotlib.imshow", "matplotlib.gca", "plt.gca.axis"], "function", ["None"], ["", "def", "img_np_show", "(", "img_np", ",", "interpolation", "=", "'lanczos'", ")", ":", "\n", "    ", "bitmap", "=", "np", ".", "transpose", "(", "img_np", ",", "(", "1", ",", "2", ",", "0", ")", ")", "# HxWxC", "\n", "handle", "=", "plt", ".", "imshow", "(", "\n", "bitmap", ",", "interpolation", "=", "interpolation", ",", "vmin", "=", "0", ",", "vmax", "=", "1", ")", "\n", "curr_ax", "=", "plt", ".", "gca", "(", ")", "\n", "curr_ax", ".", "axis", "(", "'off'", ")", "\n", "return", "handle", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.ImageShow.imsc": [[98, 131], ["isinstance", "ImageShow.pil_to_tensor", "torch.no_grad", "torch.clamp.mul_", "torch.clamp", "torch.clamp.expand().permute().cpu().numpy", "matplotlib.imshow", "matplotlib.gca", "plt.gca.axis", "torch.clamp.min", "torch.clamp.max", "torch.clamp.expand().permute().cpu", "torch.clamp.expand().permute", "torch.clamp.expand"], "function", ["home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.ImageShow.pil_to_tensor"], ["", "def", "imsc", "(", "img", ",", "*", "args", ",", "lim", "=", "None", ",", "quiet", "=", "False", ",", "interpolation", "=", "'lanczos'", ",", "**", "kwargs", ")", ":", "\n", "    ", "r\"\"\"Rescale and displays an image represented as a img.\n    The function scales the img :attr:`im` to the [0 ,1] range.\n    The img is assumed to have shape :math:`3\\times H\\times W` (RGB)\n    :math:`1\\times H\\times W` (grayscale).\n    Args:\n        img (:class:`torch.Tensor` or :class:`PIL.Image`): image.\n        quiet (bool, optional): if False, do not display image.\n            Default: ``False``.\n        lim (list, optional): maximum and minimum intensity value for\n            rescaling. Default: ``None``.\n        interpolation (str, optional): The interpolation mode to use with\n            :func:`matplotlib.pyplot.imshow` (e.g. ``'lanczos'`` or\n            ``'nearest'``). Default: ``'lanczos'``.\n    Returns:\n        :class:`torch.Tensor`: Rescaled image img.\n    \"\"\"", "\n", "if", "isinstance", "(", "img", ",", "Image", ".", "Image", ")", ":", "\n", "        ", "img", "=", "pil_to_tensor", "(", "img", ")", "\n", "", "handle", "=", "None", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "if", "not", "lim", ":", "\n", "            ", "lim", "=", "[", "img", ".", "min", "(", ")", ",", "img", ".", "max", "(", ")", "]", "\n", "", "img", "=", "img", "-", "lim", "[", "0", "]", "# also makes a copy", "\n", "img", ".", "mul_", "(", "1", "/", "(", "lim", "[", "1", "]", "-", "lim", "[", "0", "]", ")", ")", "\n", "img", "=", "torch", ".", "clamp", "(", "img", ",", "min", "=", "0", ",", "max", "=", "1", ")", "\n", "if", "not", "quiet", ":", "\n", "            ", "bitmap", "=", "img", ".", "expand", "(", "3", ",", "*", "img", ".", "shape", "[", "1", ":", "]", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "handle", "=", "plt", ".", "imshow", "(", "\n", "bitmap", ",", "*", "args", ",", "interpolation", "=", "interpolation", ",", "**", "kwargs", ")", "\n", "curr_ax", "=", "plt", ".", "gca", "(", ")", "\n", "curr_ax", ".", "axis", "(", "'off'", ")", "\n", "", "", "return", "img", ",", "handle", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.ImageShow.plot_voxel": [[132, 159], ["matplotlib.clf", "matplotlib.figure", "range", "matplotlib.subplot", "ImageShow.imsc", "matplotlib.title", "matplotlib.subplot", "ImageShow.imsc", "os.path.dirname", "[].strip", "matplotlib.savefig", "matplotlib.show", "os.path.abspath", "os.path.exists", "os.makedirs", "os.path.splitext"], "function", ["home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.ImageShow.imsc", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.ImageShow.imsc"], ["", "def", "plot_voxel", "(", "voxel", ",", "saliency", ",", "show_plot", "=", "False", ",", "save_path", "=", "None", ")", ":", "\n", "# batch_size = len(input)", "\n", "    ", "num_frame", "=", "voxel", ".", "shape", "[", "1", "]", "\n", "num_row", "=", "2", "*", "num_frame", "//", "8", "\n", "\n", "plt", ".", "clf", "(", ")", "\n", "fig", "=", "plt", ".", "figure", "(", "figsize", "=", "(", "16", ",", "num_row", "*", "2", ")", ")", "\n", "for", "i", "in", "range", "(", "num_frame", ")", ":", "\n", "        ", "plt", ".", "subplot", "(", "num_row", ",", "8", ",", "(", "i", "//", "8", ")", "*", "16", "+", "i", "%", "8", "+", "1", ")", "\n", "imsc", "(", "voxel", "[", ":", ",", "i", ",", ":", ",", ":", "]", ")", "\n", "plt", ".", "title", "(", "i", ",", "fontsize", "=", "8", ")", "\n", "\n", "plt", ".", "subplot", "(", "num_row", ",", "8", ",", "(", "i", "//", "8", ")", "*", "16", "+", "i", "%", "8", "+", "8", "+", "1", ")", "\n", "imsc", "(", "saliency", "[", ":", ",", "i", ",", ":", ",", ":", "]", ",", "interpolation", "=", "'none'", ")", "\n", "\n", "# Save figure if path is specified.", "\n", "", "if", "save_path", ":", "\n", "        ", "save_dir", "=", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "abspath", "(", "save_path", ")", ")", "\n", "# Create directory if necessary.", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "save_dir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "save_dir", ")", "\n", "", "ext", "=", "os", ".", "path", ".", "splitext", "(", "save_path", ")", "[", "1", "]", ".", "strip", "(", "'.'", ")", "\n", "plt", ".", "savefig", "(", "save_path", ",", "format", "=", "ext", ",", "bbox_inches", "=", "'tight'", ")", "\n", "\n", "# Show plot if desired.", "\n", "", "if", "show_plot", ":", "\n", "        ", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.ImageShow.plot_voxel_wbbox": [[160, 195], ["range", "matplotlib.clf", "matplotlib.figure", "range", "bbox_tensor[].tolist", "matplotlib.subplot", "ImageShow.imsc", "matplotlib.title", "matplotlib.subplot", "ImageShow.imsc", "os.path.dirname", "[].strip", "matplotlib.savefig", "matplotlib.show", "os.path.abspath", "os.path.exists", "os.makedirs", "os.path.splitext"], "function", ["home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.ImageShow.imsc", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.ImageShow.imsc"], ["", "", "def", "plot_voxel_wbbox", "(", "voxel", ",", "saliency", ",", "bbox_tensor", ",", "\n", "show_plot", "=", "False", ",", "save_path", "=", "None", ")", ":", "\n", "# batch_size = len(input)", "\n", "    ", "num_frame", "=", "voxel", ".", "shape", "[", "1", "]", "\n", "num_row", "=", "2", "*", "num_frame", "//", "8", "\n", "\n", "for", "idx", "in", "range", "(", "num_frame", ")", ":", "\n", "        ", "x0", ",", "y0", ",", "x1", ",", "y1", "=", "bbox_tensor", "[", "idx", ",", ":", "]", ".", "tolist", "(", ")", "\n", "voxel", "[", "1", ",", "idx", ",", "y0", ":", "y1", "+", "1", ",", "x0", "]", "=", "1.0", "\n", "voxel", "[", "1", ",", "idx", ",", "y0", ":", "y1", "+", "1", ",", "x1", "]", "=", "1.0", "\n", "voxel", "[", "1", ",", "idx", ",", "y0", ",", "x0", ":", "x1", "+", "1", "]", "=", "1.0", "\n", "voxel", "[", "1", ",", "idx", ",", "y1", ",", "x0", ":", "x1", "+", "1", "]", "=", "1.0", "\n", "\n", "", "plt", ".", "clf", "(", ")", "\n", "fig", "=", "plt", ".", "figure", "(", "figsize", "=", "(", "16", ",", "num_row", "*", "2", ")", ")", "\n", "for", "i", "in", "range", "(", "num_frame", ")", ":", "\n", "        ", "plt", ".", "subplot", "(", "num_row", ",", "8", ",", "(", "i", "//", "8", ")", "*", "16", "+", "i", "%", "8", "+", "1", ")", "\n", "imsc", "(", "voxel", "[", ":", ",", "i", ",", ":", ",", ":", "]", ")", "\n", "plt", ".", "title", "(", "i", ",", "fontsize", "=", "8", ")", "\n", "\n", "plt", ".", "subplot", "(", "num_row", ",", "8", ",", "(", "i", "//", "8", ")", "*", "16", "+", "i", "%", "8", "+", "8", "+", "1", ")", "\n", "imsc", "(", "saliency", "[", ":", ",", "i", ",", ":", ",", ":", "]", ",", "interpolation", "=", "'none'", ")", "\n", "\n", "# Save figure if path is specified.", "\n", "", "if", "save_path", ":", "\n", "        ", "save_dir", "=", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "abspath", "(", "save_path", ")", ")", "\n", "# Create directory if necessary.", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "save_dir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "save_dir", ")", "\n", "", "ext", "=", "os", ".", "path", ".", "splitext", "(", "save_path", ")", "[", "1", "]", ".", "strip", "(", "'.'", ")", "\n", "plt", ".", "savefig", "(", "save_path", ",", "format", "=", "ext", ",", "bbox_inches", "=", "'tight'", ")", "\n", "\n", "# Show plot if desired.", "\n", "", "if", "show_plot", ":", "\n", "        ", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.ImageShow.plot_voxel_np": [[196, 228], ["matplotlib.clf", "matplotlib.figure", "range", "matplotlib.subplot", "ImageShow.img_np_show", "matplotlib.title", "matplotlib.subplot", "ImageShow.img_np_show", "plt.figure.suptitle", "os.path.dirname", "[].strip", "matplotlib.savefig", "matplotlib.show", "os.path.abspath", "os.path.exists", "os.makedirs", "os.path.splitext"], "function", ["home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.ImageShow.img_np_show", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.ImageShow.img_np_show"], ["", "", "def", "plot_voxel_np", "(", "voxel_np", ",", "saliency_np", ",", "title", "=", "None", ",", "\n", "show_plot", "=", "False", ",", "save_path", "=", "None", ")", ":", "\n", "# batch_size = len(input)", "\n", "    ", "num_frame", "=", "voxel_np", ".", "shape", "[", "1", "]", "\n", "num_row", "=", "2", "*", "num_frame", "//", "8", "\n", "\n", "plt", ".", "clf", "(", ")", "\n", "fig", "=", "plt", ".", "figure", "(", "figsize", "=", "(", "16", ",", "num_row", "*", "2", ")", ")", "\n", "for", "i", "in", "range", "(", "num_frame", ")", ":", "\n", "        ", "plt", ".", "subplot", "(", "num_row", ",", "8", ",", "(", "i", "//", "8", ")", "*", "16", "+", "i", "%", "8", "+", "1", ")", "\n", "img_np_show", "(", "voxel_np", "[", ":", ",", "i", ",", ":", ",", ":", "]", ")", "\n", "plt", ".", "title", "(", "i", ",", "fontsize", "=", "8", ")", "\n", "\n", "plt", ".", "subplot", "(", "num_row", ",", "8", ",", "(", "i", "//", "8", ")", "*", "16", "+", "i", "%", "8", "+", "8", "+", "1", ")", "\n", "img_np_show", "(", "saliency_np", "[", ":", ",", "i", ",", ":", ",", ":", "]", ",", "interpolation", "=", "'none'", ")", "\n", "# fig.close()", "\n", "\n", "", "if", "title", "is", "not", "None", ":", "\n", "        ", "fig", ".", "suptitle", "(", "title", ",", "fontsize", "=", "14", ")", "\n", "\n", "# Save figure if path is specified.", "\n", "", "if", "save_path", ":", "\n", "        ", "save_dir", "=", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "abspath", "(", "save_path", ")", ")", "\n", "# Create directory if necessary.", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "save_dir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "save_dir", ")", "\n", "", "ext", "=", "os", ".", "path", ".", "splitext", "(", "save_path", ")", "[", "1", "]", ".", "strip", "(", "'.'", ")", "\n", "plt", ".", "savefig", "(", "save_path", ",", "format", "=", "ext", ",", "bbox_inches", "=", "'tight'", ")", "\n", "\n", "# Show plot if desired.", "\n", "", "if", "show_plot", ":", "\n", "        ", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.ImageShow.plot_voxel_wbbox_np": [[229, 269], ["range", "matplotlib.clf", "matplotlib.figure", "range", "matplotlib.close", "bbox_tensor[].tolist", "matplotlib.subplot", "ImageShow.img_np_show", "matplotlib.title", "matplotlib.subplot", "ImageShow.img_np_show", "plt.figure.suptitle", "os.path.dirname", "[].strip", "matplotlib.savefig", "matplotlib.show", "os.path.abspath", "os.path.exists", "os.makedirs", "os.path.splitext"], "function", ["home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.ImageShow.img_np_show", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.ImageShow.img_np_show"], ["", "", "def", "plot_voxel_wbbox_np", "(", "voxel_np", ",", "saliency_np", ",", "bbox_tensor", ",", "title", "=", "None", ",", "\n", "show_plot", "=", "False", ",", "save_path", "=", "None", ")", ":", "\n", "# batch_size = len(input)", "\n", "    ", "num_frame", "=", "voxel_np", ".", "shape", "[", "1", "]", "\n", "num_row", "=", "2", "*", "num_frame", "//", "8", "\n", "\n", "for", "idx", "in", "range", "(", "num_frame", ")", ":", "\n", "        ", "x0", ",", "y0", ",", "x1", ",", "y1", "=", "bbox_tensor", "[", "idx", ",", ":", "]", ".", "tolist", "(", ")", "\n", "voxel_np", "[", "1", ",", "idx", ",", "y0", ":", "y1", "+", "1", ",", "x0", "]", "=", "1.0", "\n", "voxel_np", "[", "1", ",", "idx", ",", "y0", ":", "y1", "+", "1", ",", "x1", "]", "=", "1.0", "\n", "voxel_np", "[", "1", ",", "idx", ",", "y0", ",", "x0", ":", "x1", "+", "1", "]", "=", "1.0", "\n", "voxel_np", "[", "1", ",", "idx", ",", "y1", ",", "x0", ":", "x1", "+", "1", "]", "=", "1.0", "\n", "\n", "", "plt", ".", "clf", "(", ")", "\n", "fig", "=", "plt", ".", "figure", "(", "figsize", "=", "(", "16", ",", "num_row", "*", "2", ")", ")", "\n", "for", "i", "in", "range", "(", "num_frame", ")", ":", "\n", "        ", "plt", ".", "subplot", "(", "num_row", ",", "8", ",", "(", "i", "//", "8", ")", "*", "16", "+", "i", "%", "8", "+", "1", ")", "\n", "img_np_show", "(", "voxel_np", "[", ":", ",", "i", ",", ":", ",", ":", "]", ")", "\n", "plt", ".", "title", "(", "i", ",", "fontsize", "=", "8", ")", "\n", "\n", "plt", ".", "subplot", "(", "num_row", ",", "8", ",", "(", "i", "//", "8", ")", "*", "16", "+", "i", "%", "8", "+", "8", "+", "1", ")", "\n", "img_np_show", "(", "saliency_np", "[", ":", ",", "i", ",", ":", ",", ":", "]", ",", "interpolation", "=", "'none'", ")", "\n", "\n", "", "if", "title", "is", "not", "None", ":", "\n", "        ", "fig", ".", "suptitle", "(", "title", ",", "fontsize", "=", "14", ")", "\n", "\n", "# Save figure if path is specified.", "\n", "", "if", "save_path", ":", "\n", "        ", "save_dir", "=", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "abspath", "(", "save_path", ")", ")", "\n", "# Create directory if necessary.", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "save_dir", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "save_dir", ")", "\n", "", "ext", "=", "os", ".", "path", ".", "splitext", "(", "save_path", ")", "[", "1", "]", ".", "strip", "(", "'.'", ")", "\n", "plt", ".", "savefig", "(", "save_path", ",", "format", "=", "ext", ",", "bbox_inches", "=", "'tight'", ")", "\n", "\n", "# Show plot if desired.", "\n", "", "if", "show_plot", ":", "\n", "        ", "plt", ".", "show", "(", ")", "\n", "\n", "", "plt", ".", "close", "(", "fig", ")", "", "", ""]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.smooth_grad.smooth_grad": [[4, 59], ["model.eval", "inputs.to.to", "labels.to.to", "stdev.view().expand.view().expand", "model", "torch.zeros_like", "range", "range", "torch.stack", "torch.var.numpy", "numpy.sum", "numpy.percentile", "numpy.min", "numpy.clip", "torch.from_numpy", "torch.max", "torch.min", "torch.normal().to().reshape", "noisy_inputs.requires_grad_", "model", "torch.max", "model.backward", "noisy_inputs.grad.cpu", "torch.stack.append", "torch.mean", "numpy.abs", "numpy.repeat", "inputs.to.view", "inputs.to.view", "stdev.view().expand.view", "torch.mean", "torch.normal().to", "torch.var", "labels[].cpu().item", "torch.normal", "labels[].cpu"], "function", ["home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.Perturbation.to", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.Perturbation.to", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.Perturbation.to"], ["def", "smooth_grad", "(", "inputs", ",", "labels", ",", "model", ",", "device", ",", "\n", "nsamples", "=", "25", ",", "variant", "=", "None", ",", "stdev_spread", "=", "0.15", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "# Set model to evaluate mode", "\n", "\n", "bs", ",", "ch", ",", "nt", ",", "h", ",", "w", "=", "inputs", ".", "shape", "\n", "assert", "ch", "==", "3", "\n", "assert", "labels", ".", "shape", "[", "0", "]", "==", "bs", "\n", "assert", "variant", "in", "[", "None", ",", "'square'", ",", "'variance'", "]", "\n", "\n", "inputs", "=", "inputs", ".", "to", "(", "device", ")", "\n", "# labels = labels.to(device)", "\n", "labels", "=", "labels", ".", "to", "(", "dtype", "=", "torch", ".", "long", ")", "\n", "\n", "inputs_max", "=", "torch", ".", "max", "(", "inputs", ".", "view", "(", "bs", ",", "-", "1", ")", ",", "dim", "=", "1", ")", "[", "0", "]", "\n", "inputs_min", "=", "torch", ".", "min", "(", "inputs", ".", "view", "(", "bs", ",", "-", "1", ")", ",", "dim", "=", "1", ")", "[", "0", "]", "\n", "stdev", "=", "stdev_spread", "*", "(", "inputs_max", "-", "inputs_min", ")", "# bs", "\n", "stdev", "=", "stdev", ".", "view", "(", "-", "1", ",", "1", ")", ".", "expand", "(", "-", "1", ",", "ch", "*", "nt", "*", "h", "*", "w", ")", "\n", "\n", "outputs", "=", "model", "(", "inputs", ")", "\n", "backward_signals", "=", "torch", ".", "zeros_like", "(", "outputs", ",", "device", "=", "device", ")", "\n", "\n", "for", "bidx", "in", "range", "(", "bs", ")", ":", "\n", "        ", "backward_signals", "[", "bidx", ",", "labels", "[", "bidx", "]", ".", "cpu", "(", ")", ".", "item", "(", ")", "]", "=", "1.0", "\n", "\n", "", "all_grads", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "nsamples", ")", ":", "\n", "        ", "noise", "=", "torch", ".", "normal", "(", "0.0", ",", "stdev", ")", ".", "to", "(", "device", ")", ".", "reshape", "(", "bs", ",", "ch", ",", "nt", ",", "h", ",", "w", ")", "\n", "# print(noise.shape, noise.min(), noise.max())", "\n", "noisy_inputs", "=", "inputs", "+", "noise", "\n", "noisy_inputs", ".", "requires_grad_", "(", ")", "\n", "\n", "# Forward", "\n", "outputs", "=", "model", "(", "noisy_inputs", ")", "\n", "_", ",", "preds", "=", "torch", ".", "max", "(", "outputs", ",", "dim", "=", "1", ")", "\n", "\n", "# Backward", "\n", "outputs", ".", "backward", "(", "backward_signals", ")", "\n", "noisy_grads", "=", "noisy_inputs", ".", "grad", ".", "cpu", "(", ")", "\n", "all_grads", ".", "append", "(", "noisy_grads", ")", "\n", "", "all_grads", "=", "torch", ".", "stack", "(", "all_grads", ",", "dim", "=", "1", ")", "# bs x nsamples x ch x nt x h x w", "\n", "\n", "if", "variant", "==", "None", ":", "\n", "        ", "smth_grad", "=", "torch", ".", "mean", "(", "all_grads", ",", "dim", "=", "1", ")", "\n", "", "elif", "variant", "==", "'square'", ":", "\n", "        ", "smth_grad", "=", "torch", ".", "mean", "(", "all_grads", "**", "2", ",", "dim", "=", "1", ")", "\n", "", "elif", "variant", "==", "'variance'", ":", "\n", "        ", "smth_grad", "=", "torch", ".", "var", "(", "all_grads", ",", "dim", "=", "1", ")", "\n", "", "smth_grad", "=", "smth_grad", ".", "numpy", "(", ")", "# bs x ch x nt x h x w", "\n", "\n", "grad_show", "=", "np", ".", "sum", "(", "np", ".", "abs", "(", "smth_grad", ")", ",", "axis", "=", "1", ",", "keepdims", "=", "True", ")", "\n", "vmax", "=", "np", ".", "percentile", "(", "grad_show", ",", "99.9", ")", "\n", "vmin", "=", "np", ".", "min", "(", "grad_show", ")", "\n", "grad_show", "=", "np", ".", "clip", "(", "(", "grad_show", "-", "vmin", ")", "/", "(", "vmax", "-", "vmin", ")", ",", "0", ",", "1", ")", "# Nx1xTxHxW", "\n", "grad_show", "=", "torch", ".", "from_numpy", "(", "np", ".", "repeat", "(", "grad_show", ",", "3", ",", "axis", "=", "1", ")", ")", "\n", "return", "grad_show", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.gradients.gradients": [[4, 52], ["model.eval", "inputs.to.to", "labels.to.to", "inputs.to.grad.cpu", "inputs_grad.mean().repeat.clamp", "torch.set_grad_enabled", "model", "torch.max", "torch.zeros_like", "range", "model.backward", "inputs.to.detach().cpu", "torch.clamp", "inputs_grad.mean().repeat.mean().repeat", "inputs_grad.mean().repeat.view().sort", "int", "inputs.to.detach", "torch.clamp", "inputs_grad.mean().repeat.mean", "inputs_grad.mean().repeat.view", "labels[].cpu().item", "labels[].cpu"], "function", ["home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.Perturbation.to", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.Perturbation.to"], ["def", "gradients", "(", "inputs", ",", "labels", ",", "model", ",", "device", ",", "multiply_input", "=", "False", ",", "\n", "polarity", "=", "'both'", ",", "show_gray", "=", "False", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "# Set model to evaluate mode", "\n", "\n", "bs", ",", "ch", ",", "nt", ",", "h", ",", "w", "=", "inputs", ".", "shape", "\n", "assert", "ch", "==", "3", "\n", "assert", "labels", ".", "shape", "[", "0", "]", "==", "bs", "\n", "\n", "inputs", "=", "inputs", ".", "to", "(", "device", ")", "\n", "# labels = labels.to(device)", "\n", "labels", "=", "labels", ".", "to", "(", "dtype", "=", "torch", ".", "long", ")", "\n", "\n", "# Get model outputs and calculate loss", "\n", "inputs", ".", "requires_grad", "=", "True", "\n", "with", "torch", ".", "set_grad_enabled", "(", "True", ")", ":", "\n", "        ", "outputs", "=", "model", "(", "inputs", ")", "\n", "_", ",", "preds", "=", "torch", ".", "max", "(", "outputs", ",", "1", ")", "\n", "\n", "backward_signals", "=", "torch", ".", "zeros_like", "(", "outputs", ",", "device", "=", "device", ")", "\n", "for", "bidx", "in", "range", "(", "bs", ")", ":", "\n", "            ", "backward_signals", "[", "bidx", ",", "labels", "[", "bidx", "]", ".", "cpu", "(", ")", ".", "item", "(", ")", "]", "=", "1.0", "\n", "", "outputs", ".", "backward", "(", "backward_signals", ")", "\n", "", "inputs_grad", "=", "inputs", ".", "grad", ".", "cpu", "(", ")", "\n", "if", "multiply_input", ":", "\n", "        ", "inputs_grad", "*=", "inputs", ".", "detach", "(", ")", ".", "cpu", "(", ")", "\n", "\n", "", "if", "polarity", "==", "'positive'", ":", "\n", "        ", "inputs_grad", "=", "torch", ".", "clamp", "(", "inputs_grad", ",", "min", "=", "0.0", ")", "\n", "", "elif", "polarity", "==", "'negative'", ":", "\n", "        ", "inputs_grad", "=", "-", "1.0", "*", "torch", ".", "clamp", "(", "inputs_grad", ",", "max", "=", "0.0", ")", "\n", "\n", "", "if", "show_gray", ":", "\n", "        ", "inputs_grad", "=", "inputs_grad", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ".", "repeat", "(", "1", ",", "ch", ",", "1", ",", "1", ",", "1", ")", "\n", "\n", "", "grad_sorted", "=", "inputs_grad", ".", "view", "(", "-", "1", ")", ".", "sort", "(", ")", "[", "0", "]", "\n", "length", "=", "grad_sorted", ".", "shape", "[", "0", "]", "\n", "grad_min", "=", "0.0", "\n", "grad_max", "=", "grad_sorted", "[", "int", "(", "0.999", "*", "length", ")", "]", "\n", "grad_show", "=", "inputs_grad", ".", "clamp", "(", "min", "=", "grad_min", ",", "max", "=", "grad_max", ")", "\n", "grad_show", "=", "(", "grad_show", "-", "grad_min", ")", "/", "(", "grad_max", "-", "grad_min", ")", "\n", "# print(grad_show.max(), grad_show.min())", "\n", "\n", "if", "polarity", "==", "'positive'", ":", "\n", "        ", "grad_show", "[", ":", ",", "1", ":", ",", "...", "]", "=", "0.0", "\n", "", "elif", "polarity", "==", "'negative'", ":", "\n", "        ", "grad_show", "[", ":", ",", ":", "2", ",", "...", "]", "=", "0.0", "\n", "\n", "", "return", "grad_show", "\n", "", ""]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.integrated_grad.integrated_grad_show": [[4, 26], ["torch.clamp.mean", "torch.clamp.cpu().numpy", "numpy.percentile", "numpy.min", "numpy.clip", "torch.abs", "torch.tensor().reshape", "torch.from_numpy", "torch.clamp", "torch.tensor().reshape", "torch.clamp.cpu", "np.clip.repeat", "torch.tensor", "torch.tensor().reshape", "torch.tensor", "torch.clamp", "torch.tensor"], "function", ["None"], ["def", "integrated_grad_show", "(", "grads", ",", "polarity", ")", ":", "\n", "    ", "positive_channel", "=", "[", "0", ",", "1", ",", "0", "]", "# Green", "\n", "negative_channel", "=", "[", "1", ",", "0", ",", "0", "]", "# Red", "\n", "assert", "polarity", "in", "[", "'both'", ",", "'positive'", ",", "'negative'", "]", "\n", "\n", "if", "polarity", "==", "'both'", ":", "\n", "        ", "grads", "=", "torch", ".", "abs", "(", "grads", ")", "\n", "channel", "=", "torch", ".", "tensor", "(", "[", "1", ",", "1", ",", "1", "]", ")", ".", "reshape", "(", "1", ",", "3", ",", "1", ",", "1", ",", "1", ")", "\n", "", "elif", "polarity", "==", "'positive'", ":", "\n", "        ", "grads", "=", "torch", ".", "clamp", "(", "grads", ",", "min", "=", "0.0", ")", "\n", "channel", "=", "torch", ".", "tensor", "(", "positive_channel", ")", ".", "reshape", "(", "1", ",", "3", ",", "1", ",", "1", ",", "1", ")", "\n", "", "elif", "polarity", "==", "'negative'", ":", "\n", "        ", "grads", "=", "-", "1.0", "*", "torch", ".", "clamp", "(", "grads", ",", "max", "=", "0.0", ")", "\n", "channel", "=", "torch", ".", "tensor", "(", "negative_channel", ")", ".", "reshape", "(", "1", ",", "3", ",", "1", ",", "1", ",", "1", ")", "\n", "", "grads", "=", "grads", ".", "mean", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "# convert to gray, Nx1xTxHxW", "\n", "\n", "grads_np", "=", "grads", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "vmax", "=", "np", ".", "percentile", "(", "grads_np", ",", "99.9", ")", "\n", "vmin", "=", "np", ".", "min", "(", "grads_np", ")", "\n", "grad_show_np", "=", "np", ".", "clip", "(", "(", "grads_np", "-", "vmin", ")", "/", "(", "vmax", "-", "vmin", ")", ",", "0", ",", "1", ")", "# Nx1xTxHxW", "\n", "grad_show", "=", "torch", ".", "from_numpy", "(", "grad_show_np", ".", "repeat", "(", "3", ",", "axis", "=", "1", ")", ")", "*", "channel", "# Nx3xTxHxW", "\n", "return", "grad_show", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.integrated_grad.integrated_grad": [[27, 85], ["model.eval", "inputs.to.to", "labels.to.to", "torch.zeros_like", "model", "torch.zeros_like", "range", "range", "integrated_grad.integrated_grad_show", "model", "torch.max", "model.backward", "scaled_inputs.grad.cpu", "labels[].cpu().item", "float", "labels[].cpu"], "function", ["home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.Perturbation.to", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.Perturbation.to", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.integrated_grad.integrated_grad_show"], ["", "def", "integrated_grad", "(", "inputs", ",", "labels", ",", "model", ",", "device", ",", "steps", ",", "\n", "polarity", "=", "'both'", ",", "show_gray", "=", "True", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "# Set model to evaluate mode", "\n", "\n", "bs", ",", "ch", ",", "nt", ",", "h", ",", "w", "=", "inputs", ".", "shape", "\n", "assert", "ch", "==", "3", "\n", "assert", "labels", ".", "shape", "[", "0", "]", "==", "bs", "\n", "\n", "inputs", "=", "inputs", ".", "to", "(", "device", ")", "\n", "# labels = labels.to(device)", "\n", "labels", "=", "labels", ".", "to", "(", "dtype", "=", "torch", ".", "long", ")", "\n", "\n", "baseline", "=", "torch", ".", "zeros_like", "(", "inputs", ",", "device", "=", "device", ")", "\n", "baseline", "[", ":", ",", "0", ",", "...", "]", "=", "-", "1.8952", "\n", "baseline", "[", ":", ",", "1", ",", "...", "]", "=", "-", "1.7822", "\n", "baseline", "[", ":", ",", "2", ",", "...", "]", "=", "-", "1.7349", "\n", "baseline_out", "=", "model", "(", "baseline", ")", "\n", "\n", "backward_signals", "=", "torch", ".", "zeros_like", "(", "baseline_out", ",", "device", "=", "device", ")", "\n", "for", "bidx", "in", "range", "(", "bs", ")", ":", "\n", "        ", "backward_signals", "[", "bidx", ",", "labels", "[", "bidx", "]", ".", "cpu", "(", ")", ".", "item", "(", ")", "]", "=", "1.0", "\n", "\n", "", "intg_grads", "=", "0", "\n", "for", "i", "in", "range", "(", "steps", ")", ":", "\n", "        ", "scaled_inputs", "=", "baseline", "+", "(", "float", "(", "i", ")", "/", "steps", ")", "*", "(", "inputs", "-", "baseline", ")", "\n", "scaled_inputs", ".", "requires_grad", "=", "True", "\n", "\n", "# Forward", "\n", "outputs", "=", "model", "(", "scaled_inputs", ")", "\n", "_", ",", "preds", "=", "torch", ".", "max", "(", "outputs", ",", "dim", "=", "1", ")", "\n", "\n", "# Backward", "\n", "outputs", ".", "backward", "(", "backward_signals", ")", "\n", "intg_grads", "+=", "scaled_inputs", ".", "grad", ".", "cpu", "(", ")", "/", "steps", "\n", "", "intg_grads", "*=", "(", "inputs", "-", "baseline", ")", ".", "detach", "(", ")", ".", "cpu", "(", ")", "\n", "\n", "# if polarity == 'positive':", "\n", "#     intg_grads = torch.clamp(intg_grads, min=0.0)", "\n", "# elif polarity == 'negative':", "\n", "#     intg_grads = -1.0 * torch.clamp(intg_grads, max=0.0)", "\n", "\n", "# if show_gray:", "\n", "#     intg_grads = intg_grads.mean(dim=1, keepdim=True).repeat(1,ch,1,1,1)", "\n", "\n", "# grad_sorted = intg_grads.view(-1).sort()[0]", "\n", "# length = grad_sorted.shape[0]", "\n", "# grad_min = 0.0", "\n", "# grad_max = grad_sorted[int(0.999 * length)]", "\n", "# grad_show = intg_grads.clamp(min=grad_min, max=grad_max)", "\n", "# grad_show = (grad_show - grad_min) / (grad_max - grad_min)  # NxCxTxHxW", "\n", "\n", "# if polarity == 'positive':", "\n", "#     intg_grads[:,1:,...] = 0.0", "\n", "# elif polarity == 'negative':", "\n", "#     intg_grads[:,:2,...] = 0.0", "\n", "\n", "grad_show", "=", "integrated_grad_show", "(", "intg_grads", ",", "polarity", ")", "\n", "return", "grad_show", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.grad_cam.backward_hook": [[7, 10], ["observ_grad_.insert", "o_grad[].detach"], "function", ["None"], ["def", "backward_hook", "(", "m", ",", "i_grad", ",", "o_grad", ")", ":", "\n", "    ", "global", "observ_grad_", "\n", "observ_grad_", ".", "insert", "(", "0", ",", "o_grad", "[", "0", "]", ".", "detach", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.grad_cam.forward_hook": [[13, 16], ["observ_actv_.append", "o.detach"], "function", ["None"], ["def", "forward_hook", "(", "m", ",", "i", ",", "o", ")", ":", "\n", "    ", "global", "observ_actv_", "\n", "observ_actv_", ".", "append", "(", "o", ".", "detach", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.grad_cam.grad_cam": [[17, 65], ["model.eval", "observ_layer.register_backward_hook", "observ_layer.register_forward_hook", "inputs.to.to", "labels.to.to", "model", "torch.max", "torch.max", "torch.repeat_interleave", "torch.repeat_interleave", "torch.zeros_like", "torch.zeros_like", "range", "model.backward", "torch.repeat_interleave", "torch.repeat_interleave", "torch.repeat_interleave.mean().mean", "torch.relu", "int", "int", "dict", "torch.repeat_interleave.mean", "observ_layer.named_children", "F.relu.min", "F.relu.max", "F.relu.min", "labels[].cpu().item", "labels[].cpu"], "function", ["home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.Perturbation.to", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.Perturbation.to"], ["", "def", "grad_cam", "(", "inputs", ",", "labels", ",", "model", ",", "device", ",", "layer_name", ",", "norm_vis", "=", "True", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "# Set model to evaluate mode", "\n", "\n", "bs", ",", "ch", ",", "nt", ",", "h", ",", "w", "=", "inputs", ".", "shape", "\n", "assert", "ch", "==", "3", "\n", "assert", "labels", ".", "shape", "[", "0", "]", "==", "bs", "\n", "\n", "# layer_dict = dict(model.module.named_children())", "\n", "# assert layer_name in layer_dict, \\", "\n", "#     f'Given layer ({layer_name}) is not in model. {model}'", "\n", "# observ_layer = layer_dict[layer_name]", "\n", "\n", "observ_layer", "=", "model", "\n", "for", "name", "in", "layer_name", ":", "\n", "# print(dict(observ_layer.named_children()).keys())", "\n", "        ", "observ_layer", "=", "dict", "(", "observ_layer", ".", "named_children", "(", ")", ")", "[", "name", "]", "\n", "\n", "", "observ_layer", ".", "register_backward_hook", "(", "backward_hook", ")", "\n", "observ_layer", ".", "register_forward_hook", "(", "forward_hook", ")", "\n", "\n", "inputs", "=", "inputs", ".", "to", "(", "device", ")", "\n", "labels", "=", "labels", ".", "to", "(", "dtype", "=", "torch", ".", "long", ")", "\n", "\n", "# Forward pass", "\n", "outputs", "=", "model", "(", "inputs", ")", "\n", "_", ",", "preds", "=", "torch", ".", "max", "(", "outputs", ",", "1", ")", "\n", "\n", "observ_actv", "=", "observ_actv_", "[", "0", "]", "# 1 x C x num_f/8 x 56 x 56", "\n", "# print('observ_actv:', observ_actv.shape)", "\n", "observ_actv", "=", "torch", ".", "repeat_interleave", "(", "observ_actv", ",", "int", "(", "nt", "/", "observ_actv", ".", "shape", "[", "2", "]", ")", ",", "dim", "=", "2", ")", "\n", "\n", "# backward pass", "\n", "backward_signals", "=", "torch", ".", "zeros_like", "(", "outputs", ",", "device", "=", "device", ")", "\n", "for", "bidx", "in", "range", "(", "bs", ")", ":", "\n", "        ", "backward_signals", "[", "bidx", ",", "labels", "[", "bidx", "]", ".", "cpu", "(", ")", ".", "item", "(", ")", "]", "=", "1.0", "\n", "", "outputs", ".", "backward", "(", "backward_signals", ")", "\n", "\n", "observ_grad", "=", "observ_grad_", "[", "0", "]", "# 1 x C x num_f/8 x 56 x 56", "\n", "# print('observ_grad:', observ_grad.shape)", "\n", "observ_grad", "=", "torch", ".", "repeat_interleave", "(", "observ_grad", ",", "int", "(", "nt", "/", "observ_grad", ".", "shape", "[", "2", "]", ")", ",", "dim", "=", "2", ")", "\n", "\n", "observ_grad_w", "=", "observ_grad", ".", "mean", "(", "dim", "=", "4", ",", "keepdim", "=", "True", ")", ".", "mean", "(", "dim", "=", "3", ",", "keepdim", "=", "True", ")", "# 1 x 512 x num_f x 1x1", "\n", "out_masks", "=", "F", ".", "relu", "(", "(", "observ_grad_w", "*", "observ_actv", ")", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", ")", "# 1 x 1 x num_f x 14x14", "\n", "\n", "if", "norm_vis", ":", "\n", "        ", "out_masks", "=", "(", "out_masks", "-", "out_masks", ".", "min", "(", ")", ")", "/", "(", "out_masks", ".", "max", "(", ")", "-", "out_masks", ".", "min", "(", ")", ")", "\n", "\n", "", "return", "out_masks", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.MaskGenerator.__init__": [[46, 102], ["torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "range", "int", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "math.ceil", "math.ceil", "math.ceil", "range", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "zip", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.meshgrid", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "perturbation.MaskGenerator.kernel", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor", "torch.floor"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "shape", ",", "step", ",", "sigma", ",", "batch_size", "=", "1", ",", "clamp", "=", "True", ",", "pooling_method", "=", "'softmax'", ")", ":", "\n", "        ", "self", ".", "shape", "=", "shape", "\n", "self", ".", "step", "=", "step", "\n", "self", ".", "sigma", "=", "sigma", "\n", "self", ".", "coldness", "=", "20", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "clamp", "=", "clamp", "\n", "self", ".", "pooling_method", "=", "pooling_method", "\n", "\n", "assert", "int", "(", "step", ")", "==", "step", "\n", "\n", "# self.kernel = lambda z: (z < 1).float()", "\n", "self", ".", "kernel", "=", "lambda", "z", ":", "torch", ".", "exp", "(", "-", "2", "*", "(", "(", "z", "-", ".5", ")", ".", "clamp", "(", "min", "=", "0", ")", "**", "2", ")", ")", "\n", "\n", "self", ".", "margin", "=", "self", ".", "sigma", "\n", "self", ".", "padding", "=", "1", "+", "math", ".", "ceil", "(", "(", "self", ".", "margin", "+", "sigma", ")", "/", "step", ")", "\n", "self", ".", "radius", "=", "1", "+", "math", ".", "ceil", "(", "sigma", "/", "step", ")", "\n", "self", ".", "shape_in", "=", "[", "math", ".", "ceil", "(", "z", "/", "step", ")", "for", "z", "in", "self", ".", "shape", "]", "\n", "self", ".", "shape_mid", "=", "[", "\n", "z", "+", "2", "*", "self", ".", "padding", "-", "(", "2", "*", "self", ".", "radius", "+", "1", ")", "+", "1", "\n", "for", "z", "in", "self", ".", "shape_in", "\n", "]", "\n", "self", ".", "shape_up", "=", "[", "self", ".", "step", "*", "z", "for", "z", "in", "self", ".", "shape_mid", "]", "\n", "self", ".", "shape_out", "=", "[", "z", "-", "step", "+", "1", "for", "z", "in", "self", ".", "shape_up", "]", "\n", "\n", "step_inv", "=", "[", "\n", "torch", ".", "tensor", "(", "zm", ",", "dtype", "=", "torch", ".", "float32", ")", "/", "\n", "torch", ".", "tensor", "(", "zo", ",", "dtype", "=", "torch", ".", "float32", ")", "\n", "for", "zm", ",", "zo", "in", "zip", "(", "self", ".", "shape_mid", ",", "self", ".", "shape_up", ")", "\n", "]", "\n", "\n", "# Generate kernel weights for smoothing mask_in", "\n", "self", ".", "weight", "=", "torch", ".", "zeros", "(", "(", "\n", "1", ",", "\n", "(", "2", "*", "self", ".", "radius", "+", "1", ")", "**", "2", ",", "\n", "self", ".", "shape_out", "[", "0", "]", ",", "\n", "self", ".", "shape_out", "[", "1", "]", "\n", ")", ")", "\n", "\n", "for", "ky", "in", "range", "(", "2", "*", "self", ".", "radius", "+", "1", ")", ":", "\n", "            ", "for", "kx", "in", "range", "(", "2", "*", "self", ".", "radius", "+", "1", ")", ":", "\n", "                ", "uy", ",", "ux", "=", "torch", ".", "meshgrid", "(", "\n", "torch", ".", "arange", "(", "self", ".", "shape_out", "[", "0", "]", ",", "dtype", "=", "torch", ".", "float32", ")", ",", "\n", "torch", ".", "arange", "(", "self", ".", "shape_out", "[", "1", "]", ",", "dtype", "=", "torch", ".", "float32", ")", "\n", ")", "\n", "iy", "=", "torch", ".", "floor", "(", "step_inv", "[", "0", "]", "*", "uy", ")", "+", "ky", "-", "self", ".", "padding", "\n", "ix", "=", "torch", ".", "floor", "(", "step_inv", "[", "1", "]", "*", "ux", ")", "+", "kx", "-", "self", ".", "padding", "\n", "\n", "delta", "=", "torch", ".", "sqrt", "(", "\n", "(", "uy", "-", "(", "self", ".", "margin", "+", "self", ".", "step", "*", "iy", ")", ")", "**", "2", "+", "\n", "(", "ux", "-", "(", "self", ".", "margin", "+", "self", ".", "step", "*", "ix", ")", ")", "**", "2", "\n", ")", "\n", "\n", "k", "=", "ky", "*", "(", "2", "*", "self", ".", "radius", "+", "1", ")", "+", "kx", "\n", "\n", "self", ".", "weight", "[", "0", ",", "k", "]", "=", "self", ".", "kernel", "(", "delta", "/", "sigma", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.MaskGenerator.generate": [[103, 138], ["torch.unfold", "torch.unfold", "torch.unfold", "mask.sum.sum.reshape", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.pad", "torch.pad", "torch.pad", "round", "mask.sum.sum.clamp", "float", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "float", "mask.sum.sum.sum", "mask.sum.sum.max", "mask.sum.sum.sum", "mask.sum.sum.sum", "torch.softmax", "torch.softmax", "torch.softmax"], "methods", ["None"], ["", "", "", "def", "generate", "(", "self", ",", "mask_in", ")", ":", "\n", "# mask_in: Nx1xHxW --> mask: Nx1xS_outxS_out", "\n", "        ", "mask", "=", "F", ".", "unfold", "(", "mask_in", ",", "\n", "(", "2", "*", "self", ".", "radius", "+", "1", ",", ")", "*", "2", ",", "\n", "padding", "=", "(", "self", ".", "padding", ",", ")", "*", "2", ")", "\n", "mask", "=", "mask", ".", "reshape", "(", "\n", "mask_in", ".", "shape", "[", "0", "]", ",", "-", "1", ",", "self", ".", "shape_mid", "[", "0", "]", ",", "self", ".", "shape_mid", "[", "1", "]", ")", "\n", "mask", "=", "F", ".", "interpolate", "(", "mask", ",", "size", "=", "self", ".", "shape_up", ",", "mode", "=", "'nearest'", ")", "\n", "mask", "=", "F", ".", "pad", "(", "mask", ",", "(", "0", ",", "-", "self", ".", "step", "+", "1", ",", "0", ",", "-", "self", ".", "step", "+", "1", ")", ")", "\n", "mask", "=", "self", ".", "weight", "*", "mask", "\n", "\n", "if", "self", ".", "pooling_method", "==", "'sigmoid'", ":", "\n", "            ", "if", "self", ".", "coldness", "==", "float", "(", "'+Inf'", ")", ":", "\n", "                ", "mask", "=", "(", "mask", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "-", "5", ">", "0", ")", ".", "float", "(", ")", "\n", "", "else", ":", "\n", "                ", "mask", "=", "torch", ".", "sigmoid", "(", "\n", "self", ".", "coldness", "*", "mask", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "-", "3", "\n", ")", "\n", "", "", "elif", "self", ".", "pooling_method", "==", "'softmax'", ":", "\n", "            ", "if", "self", ".", "coldness", "==", "float", "(", "'+Inf'", ")", ":", "# max normalization", "\n", "                ", "mask", "=", "mask", ".", "max", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "[", "0", "]", "\n", "", "else", ":", "# smax normalization", "\n", "                ", "mask", "=", "(", "\n", "mask", "*", "F", ".", "softmax", "(", "self", ".", "coldness", "*", "mask", ",", "dim", "=", "1", ")", "\n", ")", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "", "", "elif", "self", ".", "pooling_method", "==", "'sum'", ":", "\n", "            ", "mask", "=", "mask", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "assert", "False", ",", "f\"Unknown pooling method {self.pooling_method}\"", "\n", "\n", "", "m", "=", "round", "(", "self", ".", "margin", ")", "\n", "if", "self", ".", "clamp", ":", "\n", "            ", "mask", "=", "mask", ".", "clamp", "(", "min", "=", "0", ",", "max", "=", "1", ")", "\n", "", "cropped", "=", "mask", "[", ":", ",", ":", ",", "m", ":", "m", "+", "self", ".", "shape", "[", "0", "]", ",", "m", ":", "m", "+", "self", ".", "shape", "[", "1", "]", "]", "\n", "return", "cropped", ",", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.MaskGenerator.to": [[139, 148], ["perturbation.MaskGenerator.weight.to"], "methods", ["home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.Perturbation.to"], ["", "def", "to", "(", "self", ",", "dev", ")", ":", "\n", "        ", "\"\"\"Switch to another device.\n        Args:\n            dev: PyTorch device.\n        Returns:\n            MaskGenerator: self.\n        \"\"\"", "\n", "self", ".", "weight", "=", "self", ".", "weight", ".", "to", "(", "dev", ")", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.Perturbation.__init__": [[150, 169], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.linspace", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "perturbation.Perturbation.pyramid.append", "torchray.utils.imsmooth"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "input", ",", "num_levels", "=", "8", ",", "max_blur", "=", "20", ",", "type", "=", "BLUR_PERTURBATION", ")", ":", "\n", "        ", "self", ".", "type", "=", "type", "\n", "self", ".", "num_levels", "=", "num_levels", "\n", "self", ".", "pyramid", "=", "[", "]", "\n", "assert", "num_levels", ">=", "2", "\n", "assert", "max_blur", ">", "0", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "sigma", "in", "torch", ".", "linspace", "(", "0", ",", "1", ",", "self", ".", "num_levels", ")", ":", "\n", "                ", "if", "type", "==", "BLUR_PERTURBATION", ":", "\n", "# input could be a batched tensor with size of NxCxHxW", "\n", "                    ", "y", "=", "imsmooth", "(", "input", ",", "sigma", "=", "(", "1", "-", "sigma", ")", "*", "max_blur", ")", "\n", "# ouput y has size of NxCxHxW", "\n", "", "elif", "type", "==", "FADE_PERTURBATION", ":", "\n", "                    ", "y", "=", "input", "*", "sigma", "\n", "", "else", ":", "\n", "                    ", "assert", "False", "\n", "", "self", ".", "pyramid", ".", "append", "(", "y", ")", "\n", "# self.pyramid = torch.cat(self.pyramid, dim=0)", "\n", "", "self", ".", "pyramid", "=", "torch", ".", "stack", "(", "self", ".", "pyramid", ",", "dim", "=", "1", ")", "# NxLxCxHxW, L=num_levels", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.Perturbation.apply": [[170, 191], ["mask.reshape", "mask.reshape.floor", "k.expand.expand.long", "k.expand.expand.expand", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.gather", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp"], "methods", ["None"], ["", "", "def", "apply", "(", "self", ",", "mask", ")", ":", "\n", "# mask: Nx1xHxW", "\n", "        ", "n", "=", "mask", ".", "shape", "[", "0", "]", "\n", "# starred expression: unpack a list to separated numbers", "\n", "w", "=", "mask", ".", "reshape", "(", "n", ",", "1", ",", "*", "mask", ".", "shape", "[", "1", ":", "]", ")", "# Nx1x1xHxW, mask.unsqueeze(1)", "\n", "w", "=", "w", "*", "(", "self", ".", "num_levels", "-", "1", ")", "# w = 7*w", "\n", "k", "=", "w", ".", "floor", "(", ")", "# Integral part of w", "\n", "w", "=", "w", "-", "k", "# Fractional part of w", "\n", "k", "=", "k", ".", "long", "(", ")", "# Transfer k to long int", "\n", "\n", "# y = self.pyramid[None, :] #1xLxCxHxW", "\n", "# y = y.expand(n, *y.shape[1:]) #nxLxCxHxW", "\n", "# k = k.expand(n, 1, *y.shape[2:])  #nx1xCxHxW", "\n", "y", "=", "self", ".", "pyramid", "# NxLxCxHxW", "\n", "k", "=", "k", ".", "expand", "(", "n", ",", "1", ",", "*", "y", ".", "shape", "[", "2", ":", "]", ")", "#Nx1xCxHxW", "\n", "y0", "=", "torch", ".", "gather", "(", "y", ",", "1", ",", "k", ")", "# select low level, Nx1xCxHxW", "\n", "y1", "=", "torch", ".", "gather", "(", "y", ",", "1", ",", "torch", ".", "clamp", "(", "k", "+", "1", ",", "max", "=", "self", ".", "num_levels", "-", "1", ")", ")", "# select high level, Nx1xCxHxW", "\n", "\n", "# return ((1 - w) * y0 + w * y1).squeeze(dim=1)", "\n", "perturb_x", "=", "(", "(", "1", "-", "w", ")", "*", "y0", "+", "w", "*", "y1", ")", "#Nx1xCxHxW ", "\n", "return", "perturb_x", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.Perturbation.to": [[192, 201], ["perturbation.Perturbation.pyramid.to"], "methods", ["home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.Perturbation.to"], ["", "def", "to", "(", "self", ",", "dev", ")", ":", "\n", "        ", "\"\"\"Switch to another device.\n        Args:\n            dev: PyTorch device.\n        Returns:\n            Perturbation: self.\n        \"\"\"", "\n", "self", ".", "pyramid", ".", "to", "(", "dev", ")", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.Perturbation.__str__": [[202, 205], ["list"], "methods", ["None"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "(", "\n", "f\"Perturbation:\\n\"", "\n", "f\"- type: {self.type}\\n\"", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.CoreLossCalulator.__init__": [[212, 243], ["len", "int", "enumerate", "perturbation.CoreLossCalulator.core_kernels.append", "perturbation.CoreLossCalulator.core_topks.append", "perturbation.CoreLossCalulator.get_ellipsoid_kernel().to", "math.ceil", "perturbation.CoreLossCalulator.get_cylinder_kernel().to", "Exception", "perturbation.CoreLossCalulator.get_ellipsoid_kernel", "perturbation.CoreLossCalulator.get_cylinder_kernel"], "methods", ["home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.Perturbation.to", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.Perturbation.to", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.CoreLossCalulator.get_ellipsoid_kernel", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.CoreLossCalulator.get_cylinder_kernel"], ["    ", "def", "__init__", "(", "self", ",", "bs", ",", "nt", ",", "nrow", ",", "ncol", ",", "areas", ",", "device", ",", "\n", "num_key_frames", "=", "7", ",", "spatial_range", "=", "(", "11", ",", "11", ")", ",", "\n", "core_shape", "=", "'ellipsoid'", ")", ":", "\n", "        ", "self", ".", "bs", "=", "bs", "\n", "self", ".", "nt", "=", "nt", "\n", "self", ".", "nrow", "=", "nrow", "\n", "self", ".", "ncol", "=", "ncol", "\n", "self", ".", "areas", "=", "areas", "\n", "self", ".", "narea", "=", "len", "(", "areas", ")", "\n", "self", ".", "device", "=", "device", "\n", "\n", "self", ".", "new_nrow", "=", "nrow", "\n", "self", ".", "new_ncol", "=", "ncol", "\n", "\n", "self", ".", "num_key_frames", "=", "num_key_frames", "\n", "self", ".", "spatial_range", "=", "spatial_range", "\n", "self", ".", "core_shape", "=", "core_shape", "\n", "self", ".", "conv_stride", "=", "spatial_range", "[", "0", "]", "\n", "self", ".", "core_kernel_ones", "=", "int", "(", "num_key_frames", "*", "spatial_range", "[", "0", "]", "*", "spatial_range", "[", "1", "]", "*", "0.5236", ")", "\n", "self", ".", "core_kernels", "=", "[", "]", "\n", "self", ".", "core_topks", "=", "[", "]", "\n", "\n", "for", "a_idx", ",", "area", "in", "enumerate", "(", "areas", ")", ":", "\n", "            ", "if", "self", ".", "core_shape", "==", "'ellipsoid'", ":", "\n", "                ", "core_kernel", "=", "self", ".", "get_ellipsoid_kernel", "(", "[", "num_key_frames", ",", "spatial_range", "[", "0", "]", ",", "spatial_range", "[", "1", "]", "]", ")", ".", "to", "(", "device", ")", "\n", "", "elif", "self", ".", "core_shape", "==", "'cylinder'", ":", "\n", "                ", "core_kernel", "=", "self", ".", "get_cylinder_kernel", "(", "[", "num_key_frames", ",", "spatial_range", "[", "0", "]", ",", "spatial_range", "[", "1", "]", "]", ")", ".", "to", "(", "device", ")", "\n", "", "else", ":", "\n", "                ", "raise", "Exception", "(", "f'Unsurported core_shape, given {self.core_shape}'", ")", "\n", "", "self", ".", "core_kernels", ".", "append", "(", "core_kernel", ")", "\n", "self", ".", "core_topks", ".", "append", "(", "math", ".", "ceil", "(", "(", "area", "*", "self", ".", "nt", "*", "self", ".", "new_nrow", "*", "self", ".", "new_ncol", ")", "/", "self", ".", "core_kernel_ones", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.CoreLossCalulator.calculate": [[245, 267], ["enumerate", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "core_kernel.sum", "torch.conv3d", "torch.conv3d", "torch.conv3d", "torch.conv3d.view", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.stack.append", "torch.stack.append", "torch.stack.append", "mask_conv_sorted[].sort"], "methods", ["None"], ["", "", "def", "calculate", "(", "self", ",", "masks", ")", ":", "\n", "        ", "losses", "=", "[", "]", "\n", "small_masks", "=", "masks", "\n", "\n", "losses", "=", "[", "]", "\n", "for", "a_idx", ",", "area", "in", "enumerate", "(", "self", ".", "areas", ")", ":", "\n", "            ", "core_kernel", "=", "self", ".", "core_kernels", "[", "a_idx", "]", "\n", "core_kernel_sum", "=", "core_kernel", ".", "sum", "(", ")", "\n", "mask_conv", "=", "F", ".", "conv3d", "(", "small_masks", "[", "a_idx", "]", ",", "core_kernel", ",", "bias", "=", "None", ",", "\n", "stride", "=", "(", "1", ",", "self", ".", "conv_stride", ",", "self", ".", "conv_stride", ")", ",", "\n", "padding", "=", "0", ",", "dilation", "=", "1", ",", "groups", "=", "1", ")", "\n", "# mask_conv_sorted = mask_conv.view(self.bs, -1).sort(dim=1, descending=True)[0]", "\n", "mask_conv_sorted", "=", "mask_conv", ".", "view", "(", "self", ".", "bs", ",", "-", "1", ")", "\n", "shuffled_inds", "=", "torch", ".", "randperm", "(", "mask_conv_sorted", ".", "shape", "[", "1", "]", ",", "device", "=", "mask_conv_sorted", ".", "device", ")", "\n", "mask_conv_sorted", "=", "mask_conv_sorted", "[", ":", ",", "shuffled_inds", "]", ".", "sort", "(", "dim", "=", "1", ",", "descending", "=", "True", ")", "[", "0", "]", "\n", "# loss = ((mask_conv_sorted[:, :self.core_topks[a_idx]] - 1) ** 2).mean(dim=1) \\", "\n", "#         + ((mask_conv_sorted[:, self.core_topks[a_idx]:] - 0) ** 2).mean(dim=1)", "\n", "loss", "=", "(", "(", "mask_conv_sorted", "[", ":", ",", ":", "self", ".", "core_topks", "[", "a_idx", "]", "]", "/", "core_kernel_sum", "-", "1", ")", "**", "2", ")", ".", "mean", "(", "dim", "=", "1", ")", "+", "(", "(", "mask_conv_sorted", "[", ":", ",", "self", ".", "core_topks", "[", "a_idx", "]", ":", "]", "/", "core_kernel_sum", "-", "0", ")", "**", "2", ")", ".", "mean", "(", "dim", "=", "1", ")", "\n", "losses", ".", "append", "(", "loss", ")", "\n", "", "losses", "=", "torch", ".", "stack", "(", "losses", ",", "dim", "=", "0", ")", "# A x N", "\n", "return", "losses", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.CoreLossCalulator.get_ellipsoid_kernel": [[268, 274], ["numpy.meshgrid", "numpy.sqrt", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "len", "numpy.linspace", "numpy.linspace", "numpy.linspace", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy"], "methods", ["None"], ["", "def", "get_ellipsoid_kernel", "(", "self", ",", "dims", ")", ":", "\n", "        ", "assert", "(", "len", "(", "dims", ")", "==", "3", ")", "\n", "d1", ",", "d2", ",", "d3", "=", "dims", "\n", "v1", ",", "v2", ",", "v3", "=", "np", ".", "meshgrid", "(", "np", ".", "linspace", "(", "-", "1", ",", "1", ",", "d1", ")", ",", "np", ".", "linspace", "(", "-", "1", ",", "1", ",", "d2", ")", ",", "np", ".", "linspace", "(", "-", "1", ",", "1", ",", "d3", ")", ",", "indexing", "=", "'ij'", ")", "\n", "dist", "=", "np", ".", "sqrt", "(", "v1", "**", "2", "+", "v2", "**", "2", "+", "v3", "**", "2", ")", "\n", "return", "torch", ".", "from_numpy", "(", "(", "dist", "<=", "1", ")", "[", "np", ".", "newaxis", ",", "np", ".", "newaxis", ",", "...", "]", ")", ".", "float", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.CoreLossCalulator.get_cylinder_kernel": [[275, 281], ["numpy.meshgrid", "numpy.sqrt", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "torch.from_numpy().float", "len", "numpy.linspace", "numpy.linspace", "numpy.linspace", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy"], "methods", ["None"], ["", "def", "get_cylinder_kernel", "(", "self", ",", "dims", ")", ":", "\n", "        ", "assert", "(", "len", "(", "dims", ")", "==", "3", ")", "\n", "d1", ",", "d2", ",", "d3", "=", "dims", "\n", "v1", ",", "v2", ",", "v3", "=", "np", ".", "meshgrid", "(", "np", ".", "linspace", "(", "-", "1", ",", "1", ",", "d1", ")", ",", "np", ".", "linspace", "(", "-", "1", ",", "1", ",", "d2", ")", ",", "np", ".", "linspace", "(", "-", "1", ",", "1", ",", "d3", ")", ",", "indexing", "=", "'ij'", ")", "\n", "dist", "=", "np", ".", "sqrt", "(", "v2", "**", "2", "+", "v3", "**", "2", ")", "\n", "return", "torch", ".", "from_numpy", "(", "(", "dist", "<=", "1", ")", "[", "np", ".", "newaxis", ",", "np", ".", "newaxis", ",", "...", "]", ")", ".", "float", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.simple_log_reward": [[25, 44], ["int", "target.repeat", "torch.arange", "torch.arange", "torch.arange", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log"], "function", ["None"], ["def", "simple_log_reward", "(", "activation", ",", "target", ",", "variant", ")", ":", "\n", "    ", "N", "=", "target", ".", "shape", "[", "0", "]", "\n", "bs", "=", "activation", ".", "shape", "[", "0", "]", "\n", "b_repeat", "=", "int", "(", "bs", "//", "N", ")", "\n", "device", "=", "activation", ".", "device", "\n", "\n", "col_idx", "=", "target", ".", "repeat", "(", "b_repeat", ")", "# batch_size", "\n", "row_idx", "=", "torch", ".", "arange", "(", "activation", ".", "shape", "[", "0", "]", ",", "dtype", "=", "torch", ".", "long", ",", "device", "=", "device", ")", "# batch_size", "\n", "prob", "=", "activation", "[", "row_idx", ",", "col_idx", "]", "# batch_size", "\n", "\n", "if", "variant", "==", "DELETE_VARIANT", ":", "\n", "        ", "reward", "=", "-", "torch", ".", "log", "(", "1", "-", "prob", ")", "\n", "", "elif", "variant", "==", "PRESERVE_VARIANT", ":", "\n", "        ", "reward", "=", "-", "torch", ".", "log", "(", "prob", ")", "\n", "", "elif", "variant", "==", "DUAL_VARIANT", ":", "\n", "        ", "reward", "=", "(", "-", "torch", ".", "log", "(", "1", "-", "prob", "[", "N", ":", "]", ")", ")", "+", "(", "-", "torch", ".", "log", "(", "prob", "[", ":", "N", "]", ")", ")", "\n", "", "else", ":", "\n", "        ", "assert", "False", "\n", "", "return", "reward", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.video_perturbation": [[282, 478], ["isinstance", "len", "print", "model.parameters", "model.eval", "model", "utils.CalAcc.process_activations", "input.transpose().contiguous", "pmt_inp.view.view", "perturbation.Perturbation.to", "perturbation.MaskGenerator.to", "torch.ones().to", "torch.ones().to", "torch.ones().to", "numpy.prod", "torch.SGD", "torch.zeros", "torch.zeros", "torch.zeros", "range", "masks.view().transpose.detach", "range", "torch.stack", "torch.stack", "torch.stack", "print", "p.requires_grad_", "numpy.prod", "perturbation.CoreLossCalulator", "torch.ones().to", "torch.ones().to", "torch.ones().to", "torch.ones().to.requires_grad_", "MaskGenerator().to.generate", "torch.cat.view", "torch.cat.permute().contiguous", "torch.cat.view", "masks.view().transpose.view().transpose", "padded_masks.view().transpose.view().transpose", "model", "torch.softmax", "utils.CalAcc.process_activations", "optim.SGD.zero_grad", "energy.backward", "optim.SGD.step", "torch.ones().to.data.clamp", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torchray.attribution.common.resize_saliency", "list_mask.append", "input.transpose", "perturbation.Perturbation", "perturbation.MaskGenerator", "torch.ones", "torch.ones", "torch.ones", "torch.ones().to", "torch.ones().to", "torch.ones().to", "Perturbation().to.apply", "perturbation.simple_log_reward", "Exception", "simple_log_reward.view().mean", "print", "range", "torchray.utils.imsmooth", "target.detach().cpu().tolist", "torch.ones", "torch.ones", "torch.ones", "torch.ones().to", "torch.ones().to", "torch.ones().to", "Perturbation().to.apply", "torch.cat.permute", "masks.view().transpose.view", "padded_masks.view().transpose.view", "padded_masks.view().transpose.squeeze().reshape().sort", "CoreLossCalulator.calculate().squeeze", "simple_log_reward.detach().cpu().view", "regul.detach().cpu().view", "print", "list", "int", "torch.ones", "torch.ones", "torch.ones", "torch.cat", "torch.cat", "torch.cat", "simple_log_reward.view", "padded_masks.view().transpose.squeeze().reshape().sort", "print", "print", "target.detach().cpu", "int", "torch.ones", "torch.ones", "torch.ones", "padded_masks.view().transpose.squeeze().reshape", "perturbation.CoreLossCalulator.calculate", "padded_masks.view().transpose.squeeze().reshape().sort", "simple_log_reward.detach().cpu", "regul.detach().cpu", "min", "int", "Perturbation().to.apply", "Perturbation().to.apply", "padded_masks.view().transpose.contiguous().unsqueeze", "padded_masks.view().transpose.squeeze().reshape", "target.detach", "padded_masks.view().transpose.squeeze", "padded_masks.view().transpose.squeeze().reshape", "simple_log_reward.detach", "regul.detach", "padded_masks.view().transpose.contiguous", "padded_masks.view().transpose.squeeze", "padded_masks.view().transpose.squeeze"], "function", ["home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.CalAcc.process_activations", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.Perturbation.to", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.Perturbation.to", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.Perturbation.to", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.Perturbation.to", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.Perturbation.to", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.Perturbation.to", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.Perturbation.to", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.Perturbation.to", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.MaskGenerator.generate", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.CalAcc.process_activations", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.Perturbation.to", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.Perturbation.to", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.Perturbation.to", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.Perturbation.apply", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.simple_log_reward", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.Perturbation.to", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.Perturbation.to", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.Perturbation.to", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.Perturbation.apply", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.CoreLossCalulator.calculate", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.Perturbation.apply", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.visual_meth.perturbation.Perturbation.apply"], ["", "", "def", "video_perturbation", "(", "model", ",", "input", ",", "target", ",", "method", ",", "\n", "areas", "=", "[", "0.1", "]", ",", "perturb_type", "=", "FADE_PERTURBATION", ",", "\n", "max_iter", "=", "2000", ",", "num_levels", "=", "8", ",", "step", "=", "7", ",", "sigma", "=", "11", ",", "variant", "=", "PRESERVE_VARIANT", ",", "\n", "print_iter", "=", "None", ",", "debug", "=", "False", ",", "reward_func", "=", "\"simple_log\"", ",", "resize", "=", "False", ",", "\n", "resize_mode", "=", "'bilinear'", ",", "smooth", "=", "0", ",", "num_devices", "=", "1", ",", "\n", "core_num_keyframe", "=", "7", ",", "core_spatial_size", "=", "11", ",", "core_shape", "=", "'ellipsoid'", ")", ":", "\n", "\n", "    ", "if", "isinstance", "(", "areas", ",", "float", ")", ":", "\n", "        ", "areas", "=", "[", "areas", "]", "\n", "", "momentum", "=", "0.9", "\n", "learning_rate", "=", "0.05", "\n", "regul_weight", "=", "300", "\n", "if", "method", "==", "'step'", ":", "\n", "        ", "reward_weight", "=", "1", "\n", "", "else", ":", "\n", "        ", "reward_weight", "=", "100", "\n", "", "core_weight", "=", "0", "\n", "device", "=", "input", ".", "device", "\n", "\n", "iter_period", "=", "2000", "\n", "\n", "# input shape: NxCxTxHxW (1x3x16x112x112)", "\n", "batch_size", "=", "input", ".", "shape", "[", "0", "]", "\n", "num_frame", "=", "input", ".", "shape", "[", "2", "]", "#16", "\n", "num_areas", "=", "len", "(", "areas", ")", "\n", "\n", "if", "debug", ":", "\n", "        ", "print", "(", "\n", "f\"video_perturbation:\\n\"", "\n", "f\"- method: {method}\\n\"", "\n", "f\"- target: {target}\\n\"", "\n", "f\"- areas: {areas}\\n\"", "\n", "f\"- variant: {variant}\\n\"", "\n", "f\"- max_iter: {max_iter}\\n\"", "\n", "f\"- step/sigma: {step}, {sigma}\\n\"", "\n", "f\"- voxel size: {list(input.shape)}\\n\"", "\n", "f\"- reward function: {reward_func}\"", "\n", ")", "\n", "", "print", "(", "f\"- Target: {target.detach().cpu().tolist()}\"", ")", "\n", "\n", "# Disable gradients for model parameters.", "\n", "for", "p", "in", "model", ".", "parameters", "(", ")", ":", "\n", "        ", "p", ".", "requires_grad_", "(", "False", ")", "\n", "", "model", ".", "eval", "(", ")", "\n", "\n", "ori_y", "=", "model", "(", "input", ")", "\n", "ori_prob", ",", "ori_pred_label", ",", "_", "=", "process_activations", "(", "ori_y", ",", "target", ",", "softmaxed", "=", "True", ")", "\n", "\n", "# NxCxTxHxW --> N*T x CxHxW", "\n", "pmt_inp", "=", "input", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", "# NxTxCxHxW", "\n", "pmt_inp", "=", "pmt_inp", ".", "view", "(", "batch_size", "*", "num_frame", ",", "*", "pmt_inp", ".", "shape", "[", "2", ":", "]", ")", "# N*T x CxHxW", "\n", "\n", "# Get the perturbation operator.", "\n", "# perturbation.pyramid: T*N x LxCxHxW", "\n", "perturbation", "=", "Perturbation", "(", "pmt_inp", ",", "num_levels", "=", "num_levels", ",", "\n", "type", "=", "perturb_type", ")", ".", "to", "(", "device", ")", "\n", "\n", "# Prepare the mask generator (generating mask(134x134) from pmask(16x16)).", "\n", "shape", "=", "perturbation", ".", "pyramid", ".", "shape", "[", "3", ":", "]", "# 112x112", "\n", "mask_generator", "=", "MaskGenerator", "(", "shape", ",", "step", ",", "sigma", ",", "pooling_method", "=", "'softmax'", ")", ".", "to", "(", "device", ")", "\n", "h", ",", "w", "=", "mask_generator", ".", "shape_in", "# h=112/step, w=112/step, 16x16", "\n", "pmasks", "=", "torch", ".", "ones", "(", "batch_size", "*", "num_frame", ",", "1", ",", "h", ",", "w", ")", ".", "to", "(", "device", ")", "#N*T x 1x16x16", "\n", "\n", "max_area", "=", "np", ".", "prod", "(", "mask_generator", ".", "shape_out", ")", "\n", "max_volume", "=", "np", ".", "prod", "(", "mask_generator", ".", "shape_out", ")", "*", "num_frame", "\n", "\n", "# Prepare reference area vector.", "\n", "if", "method", "==", "'step'", ":", "\n", "        ", "mask_core", "=", "CoreLossCalulator", "(", "batch_size", ",", "num_frame", ",", "\n", "mask_generator", ".", "shape_out", "[", "0", "]", ",", "mask_generator", ".", "shape_out", "[", "1", "]", ",", "\n", "areas", ",", "device", ",", "num_key_frames", "=", "core_num_keyframe", ",", "\n", "spatial_range", "=", "(", "core_spatial_size", ",", "core_spatial_size", ")", ",", "\n", "core_shape", "=", "core_shape", ")", "\n", "vref", "=", "torch", ".", "ones", "(", "batch_size", ",", "max_volume", ")", ".", "to", "(", "device", ")", "\n", "vref", "[", ":", ",", ":", "int", "(", "max_volume", "*", "(", "1", "-", "areas", "[", "0", "]", ")", ")", "]", "=", "0", "\n", "", "elif", "method", "==", "'3d_ep'", ":", "\n", "        ", "vref", "=", "torch", ".", "ones", "(", "batch_size", ",", "max_volume", ")", ".", "to", "(", "device", ")", "\n", "vref", "[", ":", ",", ":", "int", "(", "max_volume", "*", "(", "1", "-", "areas", "[", "0", "]", ")", ")", "]", "=", "0", "\n", "", "elif", "method", "==", "'2d_ep'", ":", "\n", "        ", "aref", "=", "torch", ".", "ones", "(", "batch_size", ",", "num_frame", ",", "max_area", ")", ".", "to", "(", "device", ")", "\n", "aref", "[", ":", ",", ":", ",", ":", "int", "(", "max_area", "*", "(", "1", "-", "areas", "[", "0", "]", ")", ")", "]", "=", "0", "\n", "\n", "# Initialize optimizer.", "\n", "", "optimizer", "=", "optim", ".", "SGD", "(", "[", "pmasks", "]", ",", "\n", "lr", "=", "learning_rate", ",", "\n", "momentum", "=", "momentum", ",", "\n", "dampening", "=", "momentum", ")", "\n", "hist", "=", "torch", ".", "zeros", "(", "(", "batch_size", ",", "2", ",", "0", ")", ")", "\n", "\n", "for", "t", "in", "range", "(", "max_iter", ")", ":", "\n", "        ", "pmasks", ".", "requires_grad_", "(", "True", ")", "\n", "masks", ",", "padded_masks", "=", "mask_generator", ".", "generate", "(", "pmasks", ")", "\n", "\n", "if", "variant", "==", "DELETE_VARIANT", ":", "\n", "            ", "perturb_x", "=", "perturbation", ".", "apply", "(", "1", "-", "masks", ")", "# N*T x 1xCxHxW", "\n", "", "elif", "variant", "==", "PRESERVE_VARIANT", ":", "\n", "            ", "perturb_x", "=", "perturbation", ".", "apply", "(", "masks", ")", "# N*T x 1xCxHxW", "\n", "", "elif", "variant", "==", "DUAL_VARIANT", ":", "\n", "            ", "perturb_x", "=", "torch", ".", "cat", "(", "(", "\n", "perturbation", ".", "apply", "(", "masks", ")", ",", "#preserve", "\n", "perturbation", ".", "apply", "(", "1", "-", "masks", ")", ",", "#delete", "\n", ")", ",", "dim", "=", "1", ")", "# N*T x 2xCxHxW", "\n", "", "else", ":", "\n", "            ", "assert", "False", "\n", "\n", "", "perturb_x", "=", "perturb_x", ".", "view", "(", "batch_size", ",", "num_frame", ",", "*", "perturb_x", ".", "shape", "[", "1", ":", "]", ")", "# NxTx2xCxHxW", "\n", "perturb_x", "=", "perturb_x", ".", "permute", "(", "2", ",", "0", ",", "3", ",", "1", ",", "4", ",", "5", ")", ".", "contiguous", "(", ")", "# 2xNxCxTxHxW", "\n", "perturb_x", "=", "perturb_x", ".", "view", "(", "perturb_x", ".", "shape", "[", "0", "]", "*", "perturb_x", ".", "shape", "[", "1", "]", ",", "*", "perturb_x", ".", "shape", "[", "2", ":", "]", ")", "# 2*N x CxTxHxW", "\n", "\n", "masks", "=", "masks", ".", "view", "(", "batch_size", ",", "num_frame", ",", "*", "masks", ".", "shape", "[", "1", ":", "]", ")", ".", "transpose", "(", "1", ",", "2", ")", "# Nx1xTxHxW", "\n", "padded_masks", "=", "padded_masks", ".", "view", "(", "batch_size", ",", "num_frame", ",", "*", "padded_masks", ".", "shape", "[", "1", ":", "]", ")", ".", "transpose", "(", "1", ",", "2", ")", "# Nx1xTx S_out x S_out", "\n", "\n", "# Evaluate the model on the masked data", "\n", "# The input of model should have size of NxCxTxHxW", "\n", "y", "=", "model", "(", "perturb_x", ")", "# 2*N x num_classes", "\n", "y", "=", "F", ".", "softmax", "(", "y", ",", "dim", "=", "1", ")", "\n", "\n", "# Cal probability", "\n", "prob", ",", "pred_label", ",", "pred_label_prob", "=", "process_activations", "(", "y", ",", "target", ",", "softmaxed", "=", "True", ")", "\n", "\n", "# Get reward.", "\n", "if", "reward_func", "==", "\"simple_log\"", ":", "\n", "            ", "reward", "=", "simple_log_reward", "(", "y", ",", "target", ",", "variant", "=", "variant", ")", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "\"Do not support other reward function now.\"", ")", "\n", "# print(f\"Reward shape: {reward.shape}\")", "\n", "", "reward", "=", "reward", ".", "view", "(", "batch_size", ",", "-", "1", ")", ".", "mean", "(", "dim", "=", "1", ")", "*", "reward_weight", "# batch_size", "\n", "\n", "# Area regularization.", "\n", "# padded_masks: N x 1 x T x S_out x S_out", "\n", "if", "method", "==", "'step'", ":", "\n", "            ", "mask_sorted", "=", "padded_masks", ".", "squeeze", "(", "1", ")", ".", "reshape", "(", "batch_size", ",", "-", "1", ")", ".", "sort", "(", "dim", "=", "1", ")", "[", "0", "]", "\n", "regul", "=", "(", "(", "mask_sorted", "-", "vref", ")", "**", "2", ")", ".", "mean", "(", "dim", "=", "1", ")", "*", "regul_weight", "# batch_size", "\n", "regul", "+=", "mask_core", ".", "calculate", "(", "padded_masks", ".", "contiguous", "(", ")", ".", "unsqueeze", "(", "0", ")", ")", ".", "squeeze", "(", "0", ")", "*", "core_weight", "# batch_size", "\n", "", "elif", "method", "==", "'3d_ep'", ":", "\n", "            ", "mask_sorted", "=", "padded_masks", ".", "squeeze", "(", "1", ")", ".", "reshape", "(", "batch_size", ",", "-", "1", ")", ".", "sort", "(", "dim", "=", "1", ")", "[", "0", "]", "\n", "regul", "=", "(", "(", "mask_sorted", "-", "vref", ")", "**", "2", ")", ".", "mean", "(", "dim", "=", "1", ")", "*", "regul_weight", "# batch_size", "\n", "", "elif", "method", "==", "'2d_ep'", ":", "\n", "            ", "mask_sorted", "=", "padded_masks", ".", "squeeze", "(", "1", ")", ".", "reshape", "(", "batch_size", ",", "num_frame", ",", "-", "1", ")", ".", "sort", "(", "dim", "=", "2", ")", "[", "0", "]", "\n", "regul", "=", "(", "(", "mask_sorted", "-", "aref", ")", "**", "2", ")", ".", "mean", "(", "dim", "=", "2", ")", ".", "mean", "(", "dim", "=", "1", ")", "*", "regul_weight", "# batch_size", "\n", "\n", "# Energy summary", "\n", "", "energy", "=", "(", "reward", "+", "regul", ")", ".", "sum", "(", ")", "\n", "\n", "# Gradient step.", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "energy", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "pmasks", ".", "data", "=", "pmasks", ".", "data", ".", "clamp", "(", "0", ",", "1", ")", "\n", "\n", "if", "method", "==", "'step'", ":", "\n", "            ", "regul_weight", "*=", "1.0008668", "#1.00069^800=2", "\n", "if", "t", "==", "100", ":", "\n", "                ", "core_weight", "=", "300", "\n", "\n", "# Record energy", "\n", "# hist: batch_size x 2 x num_iter", "\n", "", "", "hist_item", "=", "torch", ".", "cat", "(", "\n", "(", "\n", "reward", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "view", "(", "-", "1", ",", "1", ",", "1", ")", ",", "\n", "regul", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "view", "(", "-", "1", ",", "1", ",", "1", ")", "\n", ")", ",", "dim", "=", "1", ")", "\n", "# print(f\"Item shape: {hist_item.shape}\")", "\n", "hist", "=", "torch", ".", "cat", "(", "(", "hist", ",", "hist_item", ")", ",", "dim", "=", "2", ")", "\n", "\n", "# if (print_iter is not None and t % print_iter == 0) or debug_this_iter:", "\n", "if", "(", "print_iter", "!=", "None", ")", "and", "(", "t", "%", "print_iter", "==", "0", ")", ":", "\n", "            ", "print", "(", "\"[{:04d}/{:04d}]\"", ".", "format", "(", "t", "+", "1", ",", "max_iter", ")", ",", "end", "=", "\"\\n\"", ")", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "                ", "if", "variant", "==", "\"dual\"", ":", "\n", "                    ", "print", "(", "\" [area:{:.2f} loss:{:.2f} reg:{:.2f} presv:{:.2f}/{} del:{:.2f}/{}]\"", ".", "format", "(", "\n", "areas", "[", "0", "]", ",", "hist", "[", "i", ",", "0", ",", "-", "1", "]", ",", "hist", "[", "i", ",", "1", ",", "-", "1", "]", ",", "\n", "prob", "[", "i", "]", ",", "pred_label", "[", "i", "]", ",", "\n", "prob", "[", "i", "+", "batch_size", "]", ",", "pred_label", "[", "i", "+", "batch_size", "]", ")", ",", "end", "=", "\"\"", ")", "\n", "", "else", ":", "\n", "                    ", "print", "(", "\" [area:{:.2f} loss:{:.2f} reg:{:.2f} {}:{:.2f}/{}]\"", ".", "format", "(", "\n", "areas", "[", "0", "]", ",", "hist", "[", "i", ",", "0", ",", "-", "1", "]", ",", "hist", "[", "i", ",", "1", ",", "-", "1", "]", ",", "\n", "variant", ",", "prob", "[", "i", "]", ",", "pred_label", "[", "i", "]", ")", ",", "end", "=", "\"\"", ")", "\n", "", "print", "(", ")", "\n", "\n", "", "", "", "masks", "=", "masks", ".", "detach", "(", ")", "\n", "# Resize saliency map.", "\n", "list_mask", "=", "[", "]", "\n", "for", "frame_idx", "in", "range", "(", "num_frame", ")", ":", "\n", "        ", "mask", "=", "masks", "[", ":", ",", ":", ",", "frame_idx", ",", ":", ",", ":", "]", "\n", "mask", "=", "resize_saliency", "(", "pmt_inp", ",", "mask", ",", "resize", ",", "mode", "=", "resize_mode", ")", "\n", "# Smooth saliency map.", "\n", "if", "smooth", ">", "0", ":", "\n", "            ", "mask", "=", "imsmooth", "(", "mask", ",", "sigma", "=", "smooth", "*", "min", "(", "mask", ".", "shape", "[", "2", ":", "]", ")", ",", "padding_mode", "=", "'constant'", ")", "\n", "", "list_mask", ".", "append", "(", "mask", ")", "\n", "", "masks", "=", "torch", ".", "stack", "(", "list_mask", ",", "dim", "=", "2", ")", "# NxCxTxHxW", "\n", "\n", "# masks: NxCxTxHxW; hist: Nx3xmax_iter", "\n", "return", "masks", ",", "hist", "", "", ""]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.datasets.universal_dataset.UniversalDataset.__init__": [[18, 47], ["sorted", "os.listdir", "len", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "torchvision.transforms.Resize", "torchvision.transforms.CenterCrop", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.Compose", "torchvision.transforms.Resize", "torchvision.transforms.CenterCrop", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize", "torchvision.transforms.Resize", "torchvision.transforms.CenterCrop", "torchvision.transforms.ToTensor", "torchvision.transforms.Normalize"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data_dir", ",", "model_name", ",", "class_namelist", ",", "clip_length", "=", "16", ")", ":", "\n", "        ", "self", ".", "data_dir", "=", "data_dir", "\n", "self", ".", "model_name", "=", "model_name", "\n", "self", ".", "class_namelist", "=", "class_namelist", "\n", "self", ".", "clip_length", "=", "clip_length", "\n", "\n", "self", ".", "video_names", "=", "sorted", "(", "os", ".", "listdir", "(", "data_dir", ")", ")", "\n", "assert", "len", "(", "self", ".", "video_names", ")", ">", "0", ",", "f'Given directory contains no video.'", "\n", "\n", "if", "model_name", "==", "'i3d'", ":", "\n", "            ", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "344", ",", "256", ")", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "(", "224", ",", "224", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "[", "0.43216", ",", "0.39467", ",", "0.37645", "]", ",", "[", "0.22803", ",", "0.22145", ",", "0.21699", "]", ")", ",", "\n", "]", ")", "\n", "", "elif", "model_name", "in", "[", "'r2plus1d'", ",", "'r3d'", ",", "'mc3'", "]", ":", "\n", "            ", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "172", ",", "128", ")", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "(", "112", ",", "112", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "[", "0.43216", ",", "0.39467", ",", "0.37645", "]", ",", "[", "0.22803", ",", "0.22145", ",", "0.21699", "]", ")", ",", "\n", "]", ")", "\n", "", "elif", "model_name", "in", "[", "'tsm'", ",", "'tsn'", "]", ":", "# mean = [0.485, 0.456, 0.406], std = [0.229, 0.224, 0.225]", "\n", "            ", "self", ".", "transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "344", ",", "256", ")", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "(", "224", ",", "224", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.datasets.universal_dataset.UniversalDataset.__len__": [[49, 51], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "video_names", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.datasets.universal_dataset.UniversalDataset.__getitem__": [[52, 73], ["os.path.join", "sorted", "len", "utils.LongRangeSample.long_range_sample", "torch.tensor().long", "torch.stack", "universal_dataset.UniversalDataset.class_namelist.index", "Exception", "PIL.Image.open", "video_name.split", "torch.tensor", "os.path.join", "universal_dataset.UniversalDataset.transform", "os.listdir"], "methods", ["home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.utils.LongRangeSample.long_range_sample"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "video_name", "=", "self", ".", "video_names", "[", "idx", "]", "\n", "if", "'.mp4'", "not", "in", "video_name", ":", "\n", "            ", "video_frames_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "data_dir", ",", "video_name", ")", "\n", "frame_names", "=", "sorted", "(", "[", "f", "for", "f", "in", "os", ".", "listdir", "(", "video_frames_dir", ")", "if", "'.png'", "in", "f", "or", "'.jpg'", "in", "f", "]", ")", "\n", "num_frame", "=", "len", "(", "frame_names", ")", "\n", "assert", "num_frame", ">=", "self", ".", "clip_length", ",", "f\"Number of frames should be larger than {self.clip_length}, given {num_frame}\"", "\n", "\n", "clip_fidxs", "=", "long_range_sample", "(", "num_frame", ",", "self", ".", "clip_length", ",", "'first'", ")", "\n", "clip_fidxs_tensor", "=", "torch", ".", "tensor", "(", "clip_fidxs", ")", ".", "long", "(", ")", "\n", "\n", "clip_frames", "=", "[", "Image", ".", "open", "(", "os", ".", "path", ".", "join", "(", "video_frames_dir", ",", "\n", "f'{fidx+1:09d}.png'", ")", ")", "for", "fidx", "in", "clip_fidxs", "]", "\n", "clip_tensor", "=", "torch", ".", "stack", "(", "[", "self", ".", "transform", "(", "frame", ")", "for", "frame", "in", "clip_frames", "]", ",", "dim", "=", "1", ")", "\n", "\n", "label_name", "=", "video_name", ".", "split", "(", "'-'", ")", "[", "0", "]", "\n", "label_idx", "=", "self", ".", "class_namelist", ".", "index", "(", "label_name", ")", "\n", "return", "clip_tensor", ",", "label_idx", ",", "video_name", ",", "clip_fidxs_tensor", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "'Cannot process MP4 file yet.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.tsm.tsm.__init__": [[10, 29], ["torch.nn.Module.__init__", "torch.hub.load", "torch.hub.load", "os.path.isfile", "print", "tsm.tsm.model.load_state_dict", "torch.load", "state_dict.items"], "methods", ["home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.I3D.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", ",", "segment_count", ",", "pretrained", ")", ":", "\n", "        ", "super", "(", "tsm", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pretrained", "=", "pretrained", "\n", "self", ".", "repo", "=", "'epic-kitchens/action-models'", "\n", "if", "'epic-kitchens'", "in", "self", ".", "pretrained", ":", "\n", "            ", "all_classes_num", "=", "(", "125", ",", "352", ")", "\n", "self", ".", "model", "=", "torch", ".", "hub", ".", "load", "(", "self", ".", "repo", ",", "'TSM'", ",", "all_classes_num", ",", "segment_count", ",", "'RGB'", ",", "\n", "base_model", "=", "'resnet50'", ",", "pretrained", "=", "'epic-kitchens'", ")", "\n", "", "elif", "'kinetics'", "in", "self", ".", "pretrained", ":", "\n", "            ", "kinetics_classes_num", "=", "400", "\n", "self", ".", "model", "=", "torch", ".", "hub", ".", "load", "(", "self", ".", "repo", ",", "'TSM'", ",", "kinetics_classes_num", ",", "segment_count", ",", "'RGB'", ",", "\n", "base_model", "=", "'resnet50'", ")", "\n", "checkpoint_path", "=", "'model_param/TSM_kinetics_RGB_resnet50_shift8_blockres_avg_segment8_e100_dense.pth'", "\n", "assert", "os", ".", "path", ".", "isfile", "(", "checkpoint_path", ")", ",", "f'Something wrong with pretrained parameters of TSM-Kinetics, Given {checkpoint_path}.'", "\n", "print", "(", "f'Load checkpoint of TSM from {checkpoint_path}.'", ")", "\n", "state_dict", "=", "torch", ".", "load", "(", "checkpoint_path", ")", "[", "'state_dict'", "]", "\n", "state_dict", "=", "{", "k", "[", "7", ":", "]", ":", "v", "for", "k", ",", "v", "in", "state_dict", ".", "items", "(", ")", "}", "\n", "self", ".", "model", ".", "load_state_dict", "(", "state_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.tsm.tsm.forward": [[30, 40], ["tsm.tsm.model.features", "tsm.tsm.model.logits", "tsm.tsm.model"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "inp", ")", ":", "\n", "        ", "if", "'epic-kitchens'", "in", "self", ".", "pretrained", ":", "\n", "            ", "feat", "=", "self", ".", "model", ".", "features", "(", "inp", ")", "\n", "verb_logits", ",", "noun_logits", "=", "self", ".", "model", ".", "logits", "(", "feat", ")", "\n", "if", "'noun'", "in", "self", ".", "pretrained", ":", "\n", "                ", "return", "noun_logits", "\n", "", "elif", "'verb'", "in", "self", ".", "pretrained", ":", "\n", "                ", "return", "verb_logits", "\n", "", "", "elif", "'kinetics'", "in", "self", ".", "pretrained", ":", "\n", "            ", "return", "self", ".", "model", "(", "inp", ")", "", "", "", "", ""]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.Unit3Dpy.__init__": [[39, 97], ["super().__init__", "i3d.get_padding_shape", "i3d.simplify_padding", "torch.nn.BatchNorm3d", "ValueError", "torch.nn.ConstantPad3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "torch.nn.Conv3d", "ValueError"], "methods", ["home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.I3D.__init__", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.get_padding_shape", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.simplify_padding"], ["    ", "def", "__init__", "(", "self", ",", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", "=", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "activation", "=", "'relu'", ",", "\n", "padding", "=", "'SAME'", ",", "\n", "use_bias", "=", "False", ",", "\n", "use_bn", "=", "True", ")", ":", "\n", "        ", "super", "(", "Unit3Dpy", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "padding", "=", "padding", "\n", "self", ".", "activation", "=", "activation", "\n", "self", ".", "use_bn", "=", "use_bn", "\n", "if", "padding", "==", "'SAME'", ":", "\n", "            ", "padding_shape", "=", "get_padding_shape", "(", "kernel_size", ",", "stride", ")", "\n", "simplify_pad", ",", "pad_size", "=", "simplify_padding", "(", "padding_shape", ")", "\n", "self", ".", "simplify_pad", "=", "simplify_pad", "\n", "", "elif", "padding", "==", "'VALID'", ":", "\n", "            ", "padding_shape", "=", "0", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'padding should be in [VALID|SAME] but got {}'", ".", "format", "(", "padding", ")", ")", "\n", "\n", "", "if", "padding", "==", "'SAME'", ":", "\n", "            ", "if", "not", "simplify_pad", ":", "\n", "                ", "self", ".", "pad", "=", "torch", ".", "nn", ".", "ConstantPad3d", "(", "padding_shape", ",", "0", ")", "\n", "self", ".", "conv3d", "=", "torch", ".", "nn", ".", "Conv3d", "(", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "\n", "bias", "=", "use_bias", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "conv3d", "=", "torch", ".", "nn", ".", "Conv3d", "(", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "\n", "padding", "=", "pad_size", ",", "\n", "bias", "=", "use_bias", ")", "\n", "", "", "elif", "padding", "==", "'VALID'", ":", "\n", "            ", "self", ".", "conv3d", "=", "torch", ".", "nn", ".", "Conv3d", "(", "\n", "in_channels", ",", "\n", "out_channels", ",", "\n", "kernel_size", ",", "\n", "padding", "=", "padding_shape", ",", "\n", "stride", "=", "stride", ",", "\n", "bias", "=", "use_bias", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'padding should be in [VALID|SAME] but got {}'", ".", "format", "(", "padding", ")", ")", "\n", "\n", "", "if", "self", ".", "use_bn", ":", "\n", "            ", "self", ".", "batch3d", "=", "torch", ".", "nn", ".", "BatchNorm3d", "(", "out_channels", ")", "\n", "\n", "", "if", "activation", "==", "'relu'", ":", "\n", "            ", "self", ".", "activation", "=", "torch", ".", "nn", ".", "functional", ".", "relu", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.Unit3Dpy.forward": [[98, 107], ["i3d.Unit3Dpy.conv3d", "i3d.Unit3Dpy.pad", "i3d.Unit3Dpy.batch3d", "torch.nn.functional.relu"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "inp", ")", ":", "\n", "        ", "if", "self", ".", "padding", "==", "'SAME'", "and", "self", ".", "simplify_pad", "is", "False", ":", "\n", "            ", "inp", "=", "self", ".", "pad", "(", "inp", ")", "\n", "", "out", "=", "self", ".", "conv3d", "(", "inp", ")", "\n", "if", "self", ".", "use_bn", ":", "\n", "            ", "out", "=", "self", ".", "batch3d", "(", "out", ")", "\n", "", "if", "self", ".", "activation", "is", "not", "None", ":", "\n", "            ", "out", "=", "torch", ".", "nn", ".", "functional", ".", "relu", "(", "out", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.MaxPool3dTFPadding.__init__": [[110, 117], ["super().__init__", "torch.nn.MaxPool3d", "i3d.get_padding_shape", "torch.nn.ConstantPad3d"], "methods", ["home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.I3D.__init__", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.get_padding_shape"], ["    ", "def", "__init__", "(", "self", ",", "kernel_size", ",", "stride", "=", "None", ",", "padding", "=", "'SAME'", ")", ":", "\n", "        ", "super", "(", "MaxPool3dTFPadding", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "padding", "==", "'SAME'", ":", "\n", "            ", "padding_shape", "=", "get_padding_shape", "(", "kernel_size", ",", "stride", ")", "\n", "self", ".", "padding_shape", "=", "padding_shape", "\n", "self", ".", "pad", "=", "torch", ".", "nn", ".", "ConstantPad3d", "(", "padding_shape", ",", "0", ")", "\n", "", "self", ".", "pool", "=", "torch", ".", "nn", ".", "MaxPool3d", "(", "kernel_size", ",", "stride", ",", "ceil_mode", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.MaxPool3dTFPadding.forward": [[118, 122], ["i3d.MaxPool3dTFPadding.pad", "i3d.MaxPool3dTFPadding.pool"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inp", ")", ":", "\n", "        ", "inp", "=", "self", ".", "pad", "(", "inp", ")", "\n", "out", "=", "self", ".", "pool", "(", "inp", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.Mixed.__init__": [[125, 151], ["super().__init__", "i3d.Unit3Dpy", "i3d.Unit3Dpy", "i3d.Unit3Dpy", "torch.nn.Sequential", "i3d.Unit3Dpy", "i3d.Unit3Dpy", "torch.nn.Sequential", "i3d.MaxPool3dTFPadding", "i3d.Unit3Dpy", "torch.nn.Sequential"], "methods", ["home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.I3D.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ")", ":", "\n", "        ", "super", "(", "Mixed", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# Branch 0", "\n", "self", ".", "branch_0", "=", "Unit3Dpy", "(", "\n", "in_channels", ",", "out_channels", "[", "0", "]", ",", "kernel_size", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "\n", "# Branch 1", "\n", "branch_1_conv1", "=", "Unit3Dpy", "(", "\n", "in_channels", ",", "out_channels", "[", "1", "]", ",", "kernel_size", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "branch_1_conv2", "=", "Unit3Dpy", "(", "\n", "out_channels", "[", "1", "]", ",", "out_channels", "[", "2", "]", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ")", "\n", "self", ".", "branch_1", "=", "torch", ".", "nn", ".", "Sequential", "(", "branch_1_conv1", ",", "branch_1_conv2", ")", "\n", "\n", "# Branch 2", "\n", "branch_2_conv1", "=", "Unit3Dpy", "(", "\n", "in_channels", ",", "out_channels", "[", "3", "]", ",", "kernel_size", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "branch_2_conv2", "=", "Unit3Dpy", "(", "\n", "out_channels", "[", "3", "]", ",", "out_channels", "[", "4", "]", ",", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ")", "\n", "self", ".", "branch_2", "=", "torch", ".", "nn", ".", "Sequential", "(", "branch_2_conv1", ",", "branch_2_conv2", ")", "\n", "\n", "# Branch3", "\n", "branch_3_pool", "=", "MaxPool3dTFPadding", "(", "\n", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "1", ",", "1", ")", ",", "padding", "=", "'SAME'", ")", "\n", "branch_3_conv2", "=", "Unit3Dpy", "(", "\n", "in_channels", ",", "out_channels", "[", "5", "]", ",", "kernel_size", "=", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "branch_3", "=", "torch", ".", "nn", ".", "Sequential", "(", "branch_3_pool", ",", "branch_3_conv2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.Mixed.forward": [[152, 159], ["i3d.Mixed.branch_0", "i3d.Mixed.branch_1", "i3d.Mixed.branch_2", "i3d.Mixed.branch_3", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inp", ")", ":", "\n", "        ", "out_0", "=", "self", ".", "branch_0", "(", "inp", ")", "\n", "out_1", "=", "self", ".", "branch_1", "(", "inp", ")", "\n", "out_2", "=", "self", ".", "branch_2", "(", "inp", ")", "\n", "out_3", "=", "self", ".", "branch_3", "(", "inp", ")", "\n", "out", "=", "torch", ".", "cat", "(", "(", "out_0", ",", "out_1", ",", "out_2", ",", "out_3", ")", ",", "1", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.I3D.__init__": [[162, 237], ["super().__init__", "i3d.Unit3Dpy", "i3d.MaxPool3dTFPadding", "i3d.Unit3Dpy", "i3d.Unit3Dpy", "i3d.MaxPool3dTFPadding", "i3d.Mixed", "i3d.Mixed", "i3d.MaxPool3dTFPadding", "i3d.Mixed", "i3d.Mixed", "i3d.Mixed", "i3d.Mixed", "i3d.Mixed", "i3d.MaxPool3dTFPadding", "i3d.Mixed", "i3d.Mixed", "torch.nn.AvgPool3d", "torch.nn.Dropout", "i3d.Unit3Dpy", "torch.nn.Softmax", "ValueError"], "methods", ["home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.I3D.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "num_classes", ",", "\n", "modality", "=", "'rgb'", ",", "\n", "dropout_prob", "=", "0", ",", "\n", "name", "=", "'inception'", ")", ":", "\n", "        ", "super", "(", "I3D", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "name", "=", "name", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "if", "modality", "==", "'rgb'", ":", "\n", "            ", "in_channels", "=", "3", "\n", "", "elif", "modality", "==", "'flow'", ":", "\n", "            ", "in_channels", "=", "2", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "'{} not among known modalities [rgb|flow]'", ".", "format", "(", "modality", ")", ")", "\n", "", "self", ".", "modality", "=", "modality", "\n", "\n", "conv3d_1a_7x7", "=", "Unit3Dpy", "(", "\n", "out_channels", "=", "64", ",", "\n", "in_channels", "=", "in_channels", ",", "\n", "kernel_size", "=", "(", "7", ",", "7", ",", "7", ")", ",", "\n", "stride", "=", "(", "2", ",", "2", ",", "2", ")", ",", "\n", "padding", "=", "'SAME'", ")", "\n", "# 1st conv-pool", "\n", "self", ".", "conv3d_1a_7x7", "=", "conv3d_1a_7x7", "\n", "self", ".", "maxPool3d_2a_3x3", "=", "MaxPool3dTFPadding", "(", "\n", "kernel_size", "=", "(", "1", ",", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "padding", "=", "'SAME'", ")", "\n", "# conv conv", "\n", "conv3d_2b_1x1", "=", "Unit3Dpy", "(", "\n", "out_channels", "=", "64", ",", "\n", "in_channels", "=", "64", ",", "\n", "kernel_size", "=", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "padding", "=", "'SAME'", ")", "\n", "self", ".", "conv3d_2b_1x1", "=", "conv3d_2b_1x1", "\n", "conv3d_2c_3x3", "=", "Unit3Dpy", "(", "\n", "out_channels", "=", "192", ",", "\n", "in_channels", "=", "64", ",", "\n", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "\n", "padding", "=", "'SAME'", ")", "\n", "self", ".", "conv3d_2c_3x3", "=", "conv3d_2c_3x3", "\n", "self", ".", "maxPool3d_3a_3x3", "=", "MaxPool3dTFPadding", "(", "\n", "kernel_size", "=", "(", "1", ",", "3", ",", "3", ")", ",", "stride", "=", "(", "1", ",", "2", ",", "2", ")", ",", "padding", "=", "'SAME'", ")", "\n", "\n", "# Mixed_3b", "\n", "self", ".", "mixed_3b", "=", "Mixed", "(", "192", ",", "[", "64", ",", "96", ",", "128", ",", "16", ",", "32", ",", "32", "]", ")", "\n", "self", ".", "mixed_3c", "=", "Mixed", "(", "256", ",", "[", "128", ",", "128", ",", "192", ",", "32", ",", "96", ",", "64", "]", ")", "\n", "\n", "self", ".", "maxPool3d_4a_3x3", "=", "MaxPool3dTFPadding", "(", "\n", "kernel_size", "=", "(", "3", ",", "3", ",", "3", ")", ",", "stride", "=", "(", "2", ",", "2", ",", "2", ")", ",", "padding", "=", "'SAME'", ")", "\n", "\n", "# Mixed 4", "\n", "self", ".", "mixed_4b", "=", "Mixed", "(", "480", ",", "[", "192", ",", "96", ",", "208", ",", "16", ",", "48", ",", "64", "]", ")", "\n", "self", ".", "mixed_4c", "=", "Mixed", "(", "512", ",", "[", "160", ",", "112", ",", "224", ",", "24", ",", "64", ",", "64", "]", ")", "\n", "self", ".", "mixed_4d", "=", "Mixed", "(", "512", ",", "[", "128", ",", "128", ",", "256", ",", "24", ",", "64", ",", "64", "]", ")", "\n", "self", ".", "mixed_4e", "=", "Mixed", "(", "512", ",", "[", "112", ",", "144", ",", "288", ",", "32", ",", "64", ",", "64", "]", ")", "\n", "self", ".", "mixed_4f", "=", "Mixed", "(", "528", ",", "[", "256", ",", "160", ",", "320", ",", "32", ",", "128", ",", "128", "]", ")", "\n", "\n", "self", ".", "maxPool3d_5a_2x2", "=", "MaxPool3dTFPadding", "(", "\n", "kernel_size", "=", "(", "2", ",", "2", ",", "2", ")", ",", "stride", "=", "(", "2", ",", "2", ",", "2", ")", ",", "padding", "=", "'SAME'", ")", "\n", "\n", "# Mixed 5", "\n", "self", ".", "mixed_5b", "=", "Mixed", "(", "832", ",", "[", "256", ",", "160", ",", "320", ",", "32", ",", "128", ",", "128", "]", ")", "\n", "self", ".", "mixed_5c", "=", "Mixed", "(", "832", ",", "[", "384", ",", "192", ",", "384", ",", "48", ",", "128", ",", "128", "]", ")", "\n", "\n", "self", ".", "avg_pool", "=", "torch", ".", "nn", ".", "AvgPool3d", "(", "(", "2", ",", "7", ",", "7", ")", ",", "(", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "dropout", "=", "torch", ".", "nn", ".", "Dropout", "(", "dropout_prob", ")", "\n", "self", ".", "conv3d_0c_1x1", "=", "Unit3Dpy", "(", "\n", "in_channels", "=", "1024", ",", "\n", "out_channels", "=", "self", ".", "num_classes", ",", "\n", "kernel_size", "=", "(", "1", ",", "1", ",", "1", ")", ",", "\n", "activation", "=", "None", ",", "\n", "use_bias", "=", "True", ",", "\n", "use_bn", "=", "False", ")", "\n", "self", ".", "softmax", "=", "torch", ".", "nn", ".", "Softmax", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.I3D.forward": [[238, 266], ["i3d.I3D.conv3d_1a_7x7", "i3d.I3D.maxPool3d_2a_3x3", "i3d.I3D.conv3d_2b_1x1", "i3d.I3D.conv3d_2c_3x3", "i3d.I3D.maxPool3d_3a_3x3", "i3d.I3D.mixed_3b", "i3d.I3D.mixed_3c", "i3d.I3D.maxPool3d_4a_3x3", "i3d.I3D.mixed_4b", "i3d.I3D.mixed_4c", "i3d.I3D.mixed_4d", "i3d.I3D.mixed_4e", "i3d.I3D.mixed_4f", "i3d.I3D.maxPool3d_5a_2x2", "i3d.I3D.mixed_5b", "i3d.I3D.mixed_5c", "i3d.I3D.avg_pool", "i3d.I3D.dropout", "i3d.I3D.conv3d_0c_1x1", "out.mean.mean.squeeze", "out.mean.mean.squeeze", "out.mean.mean.mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inp", ")", ":", "\n", "# Preprocessing", "\n", "        ", "out", "=", "self", ".", "conv3d_1a_7x7", "(", "inp", ")", "\n", "out", "=", "self", ".", "maxPool3d_2a_3x3", "(", "out", ")", "\n", "out", "=", "self", ".", "conv3d_2b_1x1", "(", "out", ")", "\n", "out", "=", "self", ".", "conv3d_2c_3x3", "(", "out", ")", "\n", "out", "=", "self", ".", "maxPool3d_3a_3x3", "(", "out", ")", "\n", "out", "=", "self", ".", "mixed_3b", "(", "out", ")", "\n", "out", "=", "self", ".", "mixed_3c", "(", "out", ")", "\n", "out", "=", "self", ".", "maxPool3d_4a_3x3", "(", "out", ")", "\n", "out", "=", "self", ".", "mixed_4b", "(", "out", ")", "\n", "out", "=", "self", ".", "mixed_4c", "(", "out", ")", "\n", "out", "=", "self", ".", "mixed_4d", "(", "out", ")", "\n", "out", "=", "self", ".", "mixed_4e", "(", "out", ")", "\n", "out", "=", "self", ".", "mixed_4f", "(", "out", ")", "\n", "out", "=", "self", ".", "maxPool3d_5a_2x2", "(", "out", ")", "\n", "out", "=", "self", ".", "mixed_5b", "(", "out", ")", "\n", "out", "=", "self", ".", "mixed_5c", "(", "out", ")", "\n", "out", "=", "self", ".", "avg_pool", "(", "out", ")", "\n", "out", "=", "self", ".", "dropout", "(", "out", ")", "\n", "out", "=", "self", ".", "conv3d_0c_1x1", "(", "out", ")", "\n", "out", "=", "out", ".", "squeeze", "(", "3", ")", "\n", "out", "=", "out", ".", "squeeze", "(", "3", ")", "\n", "out", "=", "out", ".", "mean", "(", "2", ")", "\n", "# out_logits = out", "\n", "# out = self.softmax(out_logits)", "\n", "# return out, out_logits", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.I3D.load_tf_weights": [[267, 312], ["i3d.load_conv3d", "i3d.load_conv3d", "i3d.load_conv3d", "i3d.load_mixed", "i3d.load_mixed", "i3d.load_mixed", "i3d.load_mixed", "i3d.load_mixed", "i3d.load_mixed", "i3d.load_mixed", "i3d.load_mixed", "i3d.load_mixed", "i3d.load_conv3d", "i3d.I3D.load_state_dict", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.load_conv3d", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.load_conv3d", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.load_conv3d", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.load_mixed", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.load_mixed", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.load_mixed", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.load_mixed", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.load_mixed", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.load_mixed", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.load_mixed", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.load_mixed", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.load_mixed", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.load_conv3d"], ["", "def", "load_tf_weights", "(", "self", ",", "sess", ")", ":", "\n", "        ", "state_dict", "=", "{", "}", "\n", "if", "self", ".", "modality", "==", "'rgb'", ":", "\n", "            ", "prefix", "=", "'RGB/inception_i3d'", "\n", "", "elif", "self", ".", "modality", "==", "'flow'", ":", "\n", "            ", "prefix", "=", "'Flow/inception_i3d'", "\n", "", "load_conv3d", "(", "state_dict", ",", "'conv3d_1a_7x7'", ",", "sess", ",", "\n", "os", ".", "path", ".", "join", "(", "prefix", ",", "'Conv3d_1a_7x7'", ")", ")", "\n", "load_conv3d", "(", "state_dict", ",", "'conv3d_2b_1x1'", ",", "sess", ",", "\n", "os", ".", "path", ".", "join", "(", "prefix", ",", "'Conv3d_2b_1x1'", ")", ")", "\n", "load_conv3d", "(", "state_dict", ",", "'conv3d_2c_3x3'", ",", "sess", ",", "\n", "os", ".", "path", ".", "join", "(", "prefix", ",", "'Conv3d_2c_3x3'", ")", ")", "\n", "\n", "load_mixed", "(", "state_dict", ",", "'mixed_3b'", ",", "sess", ",", "\n", "os", ".", "path", ".", "join", "(", "prefix", ",", "'Mixed_3b'", ")", ")", "\n", "load_mixed", "(", "state_dict", ",", "'mixed_3c'", ",", "sess", ",", "\n", "os", ".", "path", ".", "join", "(", "prefix", ",", "'Mixed_3c'", ")", ")", "\n", "load_mixed", "(", "state_dict", ",", "'mixed_4b'", ",", "sess", ",", "\n", "os", ".", "path", ".", "join", "(", "prefix", ",", "'Mixed_4b'", ")", ")", "\n", "load_mixed", "(", "state_dict", ",", "'mixed_4c'", ",", "sess", ",", "\n", "os", ".", "path", ".", "join", "(", "prefix", ",", "'Mixed_4c'", ")", ")", "\n", "load_mixed", "(", "state_dict", ",", "'mixed_4d'", ",", "sess", ",", "\n", "os", ".", "path", ".", "join", "(", "prefix", ",", "'Mixed_4d'", ")", ")", "\n", "load_mixed", "(", "state_dict", ",", "'mixed_4e'", ",", "sess", ",", "\n", "os", ".", "path", ".", "join", "(", "prefix", ",", "'Mixed_4e'", ")", ")", "\n", "# Here goest to 0.1 max error with tf", "\n", "load_mixed", "(", "state_dict", ",", "'mixed_4f'", ",", "sess", ",", "\n", "os", ".", "path", ".", "join", "(", "prefix", ",", "'Mixed_4f'", ")", ")", "\n", "\n", "load_mixed", "(", "\n", "state_dict", ",", "\n", "'mixed_5b'", ",", "\n", "sess", ",", "\n", "os", ".", "path", ".", "join", "(", "prefix", ",", "'Mixed_5b'", ")", ",", "\n", "fix_typo", "=", "True", ")", "\n", "load_mixed", "(", "state_dict", ",", "'mixed_5c'", ",", "sess", ",", "\n", "os", ".", "path", ".", "join", "(", "prefix", ",", "'Mixed_5c'", ")", ")", "\n", "load_conv3d", "(", "\n", "state_dict", ",", "\n", "'conv3d_0c_1x1'", ",", "\n", "sess", ",", "\n", "os", ".", "path", ".", "join", "(", "prefix", ",", "'Logits'", ",", "'Conv3d_0c_1x1'", ")", ",", "\n", "bias", "=", "True", ",", "\n", "bn", "=", "False", ")", "\n", "self", ".", "load_state_dict", "(", "state_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.get_padding_shape": [[9, 27], ["zip", "padding_shape.pop", "padding_shape.pop", "padding_shape.append", "padding_shape.append", "tuple", "max", "i3d.get_padding_shape._pad_top_bottom"], "function", ["None"], ["def", "get_padding_shape", "(", "filter_shape", ",", "stride", ")", ":", "\n", "    ", "def", "_pad_top_bottom", "(", "filter_dim", ",", "stride_val", ")", ":", "\n", "        ", "pad_along", "=", "max", "(", "filter_dim", "-", "stride_val", ",", "0", ")", "\n", "pad_top", "=", "pad_along", "//", "2", "\n", "pad_bottom", "=", "pad_along", "-", "pad_top", "\n", "return", "pad_top", ",", "pad_bottom", "\n", "\n", "", "padding_shape", "=", "[", "]", "\n", "for", "filter_dim", ",", "stride_val", "in", "zip", "(", "filter_shape", ",", "stride", ")", ":", "\n", "        ", "pad_top", ",", "pad_bottom", "=", "_pad_top_bottom", "(", "filter_dim", ",", "stride_val", ")", "\n", "padding_shape", ".", "append", "(", "pad_top", ")", "\n", "padding_shape", ".", "append", "(", "pad_bottom", ")", "\n", "", "depth_top", "=", "padding_shape", ".", "pop", "(", "0", ")", "\n", "depth_bottom", "=", "padding_shape", ".", "pop", "(", "0", ")", "\n", "padding_shape", ".", "append", "(", "depth_top", ")", "\n", "padding_shape", ".", "append", "(", "depth_bottom", ")", "\n", "\n", "return", "tuple", "(", "padding_shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.simplify_padding": [[29, 36], ["None"], "function", ["None"], ["", "def", "simplify_padding", "(", "padding_shapes", ")", ":", "\n", "    ", "all_same", "=", "True", "\n", "padding_init", "=", "padding_shapes", "[", "0", "]", "\n", "for", "pad", "in", "padding_shapes", "[", "1", ":", "]", ":", "\n", "        ", "if", "pad", "!=", "padding_init", ":", "\n", "            ", "all_same", "=", "False", "\n", "", "", "return", "all_same", ",", "padding_init", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.get_conv_params": [[314, 341], ["sess.graph.get_tensor_by_name", "sess.run", "sess.graph.get_operation_by_name", "sess.graph.get_operation_by_name.get_attr", "i3d._get_padding", "sess.graph.get_operation_by_name.get_attr", "os.path.join", "sess.graph.get_tensor_by_name", "sess.run", "os.path.join", "conv_params.append", "os.path.join"], "function", ["home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d._get_padding"], ["", "", "def", "get_conv_params", "(", "sess", ",", "name", ",", "bias", "=", "False", ")", ":", "\n", "# Get conv weights", "\n", "    ", "conv_weights_tensor", "=", "sess", ".", "graph", ".", "get_tensor_by_name", "(", "\n", "os", ".", "path", ".", "join", "(", "name", ",", "'w:0'", ")", ")", "\n", "if", "bias", ":", "\n", "        ", "conv_bias_tensor", "=", "sess", ".", "graph", ".", "get_tensor_by_name", "(", "\n", "os", ".", "path", ".", "join", "(", "name", ",", "'b:0'", ")", ")", "\n", "conv_bias", "=", "sess", ".", "run", "(", "conv_bias_tensor", ")", "\n", "", "conv_weights", "=", "sess", ".", "run", "(", "conv_weights_tensor", ")", "\n", "conv_shape", "=", "conv_weights", ".", "shape", "\n", "\n", "kernel_shape", "=", "conv_shape", "[", "0", ":", "3", "]", "\n", "in_channels", "=", "conv_shape", "[", "3", "]", "\n", "out_channels", "=", "conv_shape", "[", "4", "]", "\n", "\n", "conv_op", "=", "sess", ".", "graph", ".", "get_operation_by_name", "(", "\n", "os", ".", "path", ".", "join", "(", "name", ",", "'convolution'", ")", ")", "\n", "padding_name", "=", "conv_op", ".", "get_attr", "(", "'padding'", ")", "\n", "padding", "=", "_get_padding", "(", "padding_name", ",", "kernel_shape", ")", "\n", "all_strides", "=", "conv_op", ".", "get_attr", "(", "'strides'", ")", "\n", "strides", "=", "all_strides", "[", "1", ":", "4", "]", "\n", "conv_params", "=", "[", "\n", "conv_weights", ",", "kernel_shape", ",", "in_channels", ",", "out_channels", ",", "strides", ",", "padding", "\n", "]", "\n", "if", "bias", ":", "\n", "        ", "conv_params", ".", "append", "(", "conv_bias", ")", "\n", "", "return", "conv_params", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.get_bn_params": [[343, 353], ["sess.graph.get_tensor_by_name", "sess.graph.get_tensor_by_name", "sess.graph.get_tensor_by_name", "sess.run", "sess.run", "sess.run", "os.path.join", "os.path.join", "os.path.join"], "function", ["None"], ["", "def", "get_bn_params", "(", "sess", ",", "name", ")", ":", "\n", "    ", "moving_mean_tensor", "=", "sess", ".", "graph", ".", "get_tensor_by_name", "(", "\n", "os", ".", "path", ".", "join", "(", "name", ",", "'moving_mean:0'", ")", ")", "\n", "moving_var_tensor", "=", "sess", ".", "graph", ".", "get_tensor_by_name", "(", "\n", "os", ".", "path", ".", "join", "(", "name", ",", "'moving_variance:0'", ")", ")", "\n", "beta_tensor", "=", "sess", ".", "graph", ".", "get_tensor_by_name", "(", "os", ".", "path", ".", "join", "(", "name", ",", "'beta:0'", ")", ")", "\n", "moving_mean", "=", "sess", ".", "run", "(", "moving_mean_tensor", ")", "\n", "moving_var", "=", "sess", ".", "run", "(", "moving_var_tensor", ")", "\n", "beta", "=", "sess", ".", "run", "(", "beta_tensor", ")", "\n", "return", "moving_mean", ",", "moving_var", ",", "beta", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d._get_padding": [[355, 368], ["padding_name.decode.decode", "ValueError", "math.floor", "math.floor", "math.floor", "int", "int", "int"], "function", ["None"], ["", "def", "_get_padding", "(", "padding_name", ",", "conv_shape", ")", ":", "\n", "    ", "padding_name", "=", "padding_name", ".", "decode", "(", "\"utf-8\"", ")", "\n", "if", "padding_name", "==", "\"VALID\"", ":", "\n", "        ", "return", "[", "0", ",", "0", "]", "\n", "", "elif", "padding_name", "==", "\"SAME\"", ":", "\n", "# return [math.ceil(int(conv_shape[0])/2), math.ceil(int(conv_shape[1])/2)]", "\n", "        ", "return", "[", "\n", "math", ".", "floor", "(", "int", "(", "conv_shape", "[", "0", "]", ")", "/", "2", ")", ",", "\n", "math", ".", "floor", "(", "int", "(", "conv_shape", "[", "1", "]", ")", "/", "2", ")", ",", "\n", "math", ".", "floor", "(", "int", "(", "conv_shape", "[", "2", "]", ")", "/", "2", ")", "\n", "]", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "'Invalid padding name '", "+", "padding_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.load_conv3d": [[370, 399], ["os.path.join", "i3d.get_conv_params", "numpy.transpose", "torch.from_numpy", "torch.from_numpy", "os.path.join", "i3d.get_bn_params", "torch.ones", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "beta.squeeze", "moving_mean.squeeze", "moving_var.squeeze"], "function", ["home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.get_conv_params", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.get_bn_params"], ["", "", "def", "load_conv3d", "(", "state_dict", ",", "name_pt", ",", "sess", ",", "name_tf", ",", "bias", "=", "False", ",", "bn", "=", "True", ")", ":", "\n", "# Transfer convolution params", "\n", "    ", "conv_name_tf", "=", "os", ".", "path", ".", "join", "(", "name_tf", ",", "'conv_3d'", ")", "\n", "conv_params", "=", "get_conv_params", "(", "sess", ",", "conv_name_tf", ",", "bias", "=", "bias", ")", "\n", "if", "bias", ":", "\n", "        ", "conv_weights", ",", "kernel_shape", ",", "in_channels", ",", "out_channels", ",", "strides", ",", "padding", ",", "conv_bias", "=", "conv_params", "\n", "", "else", ":", "\n", "        ", "conv_weights", ",", "kernel_shape", ",", "in_channels", ",", "out_channels", ",", "strides", ",", "padding", "=", "conv_params", "\n", "\n", "", "conv_weights_rs", "=", "np", ".", "transpose", "(", "\n", "conv_weights", ",", "(", "4", ",", "3", ",", "0", ",", "1", ",", "\n", "2", ")", ")", "# to pt format (out_c, in_c, depth, height, width)", "\n", "state_dict", "[", "name_pt", "+", "'.conv3d.weight'", "]", "=", "torch", ".", "from_numpy", "(", "conv_weights_rs", ")", "\n", "if", "bias", ":", "\n", "        ", "state_dict", "[", "name_pt", "+", "'.conv3d.bias'", "]", "=", "torch", ".", "from_numpy", "(", "conv_bias", ")", "\n", "\n", "# Transfer batch norm params", "\n", "", "if", "bn", ":", "\n", "        ", "conv_tf_name", "=", "os", ".", "path", ".", "join", "(", "name_tf", ",", "'batch_norm'", ")", "\n", "moving_mean", ",", "moving_var", ",", "beta", "=", "get_bn_params", "(", "sess", ",", "conv_tf_name", ")", "\n", "\n", "out_planes", "=", "conv_weights_rs", ".", "shape", "[", "0", "]", "\n", "state_dict", "[", "name_pt", "+", "'.batch3d.weight'", "]", "=", "torch", ".", "ones", "(", "out_planes", ")", "\n", "state_dict", "[", "name_pt", "+", "\n", "'.batch3d.bias'", "]", "=", "torch", ".", "from_numpy", "(", "beta", ".", "squeeze", "(", ")", ")", "\n", "state_dict", "[", "name_pt", "\n", "+", "'.batch3d.running_mean'", "]", "=", "torch", ".", "from_numpy", "(", "moving_mean", ".", "squeeze", "(", ")", ")", "\n", "state_dict", "[", "name_pt", "\n", "+", "'.batch3d.running_var'", "]", "=", "torch", ".", "from_numpy", "(", "moving_var", ".", "squeeze", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.load_mixed": [[401, 425], ["i3d.load_conv3d", "i3d.load_conv3d", "i3d.load_conv3d", "i3d.load_conv3d", "i3d.load_conv3d", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "i3d.load_conv3d", "i3d.load_conv3d", "os.path.join", "os.path.join", "os.path.join"], "function", ["home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.load_conv3d", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.load_conv3d", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.load_conv3d", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.load_conv3d", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.load_conv3d", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.load_conv3d", "home.repos.pwc.inspect_result.shinkyo0513_Video-Visual-Explanations.model_def.i3d.load_conv3d"], ["", "", "def", "load_mixed", "(", "state_dict", ",", "name_pt", ",", "sess", ",", "name_tf", ",", "fix_typo", "=", "False", ")", ":", "\n", "# Branch 0", "\n", "    ", "load_conv3d", "(", "state_dict", ",", "name_pt", "+", "'.branch_0'", ",", "sess", ",", "\n", "os", ".", "path", ".", "join", "(", "name_tf", ",", "'Branch_0/Conv3d_0a_1x1'", ")", ")", "\n", "\n", "# Branch .1", "\n", "load_conv3d", "(", "state_dict", ",", "name_pt", "+", "'.branch_1.0'", ",", "sess", ",", "\n", "os", ".", "path", ".", "join", "(", "name_tf", ",", "'Branch_1/Conv3d_0a_1x1'", ")", ")", "\n", "load_conv3d", "(", "state_dict", ",", "name_pt", "+", "'.branch_1.1'", ",", "sess", ",", "\n", "os", ".", "path", ".", "join", "(", "name_tf", ",", "'Branch_1/Conv3d_0b_3x3'", ")", ")", "\n", "\n", "# Branch 2", "\n", "load_conv3d", "(", "state_dict", ",", "name_pt", "+", "'.branch_2.0'", ",", "sess", ",", "\n", "os", ".", "path", ".", "join", "(", "name_tf", ",", "'Branch_2/Conv3d_0a_1x1'", ")", ")", "\n", "if", "fix_typo", ":", "\n", "        ", "load_conv3d", "(", "state_dict", ",", "name_pt", "+", "'.branch_2.1'", ",", "sess", ",", "\n", "os", ".", "path", ".", "join", "(", "name_tf", ",", "'Branch_2/Conv3d_0a_3x3'", ")", ")", "\n", "", "else", ":", "\n", "        ", "load_conv3d", "(", "state_dict", ",", "name_pt", "+", "'.branch_2.1'", ",", "sess", ",", "\n", "os", ".", "path", ".", "join", "(", "name_tf", ",", "'Branch_2/Conv3d_0b_3x3'", ")", ")", "\n", "\n", "# Branch 3", "\n", "", "load_conv3d", "(", "state_dict", ",", "name_pt", "+", "'.branch_3.1'", ",", "sess", ",", "\n", "os", ".", "path", ".", "join", "(", "name_tf", ",", "'Branch_3/Conv3d_0b_1x1'", ")", ")", "\n", "", ""]]}