{"home.repos.pwc.inspect_result.gramuah_ia.source.online_eval_online_action_detection.OnlineEvalOAD.__init__": [[79, 107], ["print", "list", "open", "json.load", "online_eval_online_action_detection.OnlineEvalOAD.gt[].items", "open", "json.load"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dataset", ",", "subset", ",", "gt_json", ",", "result_json", ",", "f_pkl", "=", "'./ia.pkl'", ")", ":", "\n", "\n", "# Set dataset", "\n", "        ", "self", ".", "dataset", "=", "dataset", "\n", "self", ".", "subset", "=", "subset", "\n", "\n", "# Files", "\n", "self", ".", "gt_json", "=", "gt_json", "\n", "self", ".", "result_json", "=", "result_json", "\n", "self", ".", "eval_info_pkl", "=", "f_pkl", "\n", "\n", "# Parameter of Instantaneous Accuracy metric", "\n", "self", ".", "slot", "=", "0.5", "\n", "\n", "print", "(", "'Collecting ground truth and results...'", ")", "\n", "\n", "# Loading gt and remove videos from other subsets", "\n", "with", "open", "(", "self", ".", "gt_json", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "self", ".", "gt", "=", "json", ".", "load", "(", "f", ")", "\n", "", "for", "videoid", ",", "v", "in", "list", "(", "self", ".", "gt", "[", "'database'", "]", ".", "items", "(", ")", ")", ":", "\n", "            ", "if", "self", ".", "gt", "[", "'database'", "]", "[", "videoid", "]", "[", "'subset'", "]", "==", "self", ".", "subset", ":", "\n", "                ", "continue", "\n", "", "else", ":", "\n", "                ", "del", "self", ".", "gt", "[", "'database'", "]", "[", "videoid", "]", "\n", "\n", "# Load predictions", "\n", "", "", "with", "open", "(", "self", ".", "result_json", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "self", ".", "pred", "=", "json", ".", "load", "(", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.gramuah_ia.source.online_eval_online_action_detection.OnlineEvalOAD.online_eval": [[108, 172], ["dict", "dict", "list", "list", "print", "online_eval_online_action_detection.OnlineEvalOAD.gt[].items", "print", "numpy.mean", "numpy.mean", "print", "print", "print", "online_eval_online_action_detection.instantaneous_accuracy", "numpy.mean", "list.append", "numpy.mean", "list.append", "numpy.array", "numpy.array", "open", "pickle.dump"], "methods", ["home.repos.pwc.inspect_result.gramuah_ia.source.online_eval_online_action_detection.instantaneous_accuracy"], ["", "", "def", "online_eval", "(", "self", ")", ":", "\n", "\n", "# Dict to save metric stuff", "\n", "        ", "eval_info", "=", "dict", "(", ")", "\n", "eval_info", "[", "'results-by-video'", "]", "=", "dict", "(", ")", "\n", "eval_info", "[", "'slot'", "]", "=", "self", ".", "slot", "\n", "\n", "# List to save values", "\n", "aia", "=", "list", "(", ")", "\n", "nw_aia", "=", "list", "(", ")", "\n", "\n", "print", "(", "'Computing Instantaneous Accuracy for each video...'", ")", "\n", "\n", "# Iterate over videos to compute IA for each video", "\n", "for", "videoid", ",", "v", "in", "self", ".", "gt", "[", "'database'", "]", ".", "items", "(", ")", ":", "\n", "# Get gt of this video", "\n", "            ", "vid_gt", "=", "self", ".", "gt", "[", "'database'", "]", "[", "videoid", "]", "\n", "\n", "# Check if video was used", "\n", "try", ":", "\n", "                ", "vid_pred", "=", "self", ".", "pred", "[", "'results'", "]", "[", "videoid", "]", "\n", "", "except", ":", "\n", "                ", "continue", "\n", "\n", "# Get duration of this video", "\n", "", "d", "=", "self", ".", "gt", "[", "'database'", "]", "[", "videoid", "]", "[", "'duration'", "]", "\n", "\n", "# Compute IA", "\n", "ia", ",", "nw_ia", "=", "instantaneous_accuracy", "(", "vid_gt", ",", "vid_pred", ",", "d", ",", "self", ".", "slot", ")", "\n", "\n", "# Compute average instantaneous accuracy", "\n", "vid_aia", "=", "np", ".", "mean", "(", "ia", ")", "\n", "aia", ".", "append", "(", "vid_aia", ")", "\n", "vid_nw_aia", "=", "np", ".", "mean", "(", "nw_ia", ")", "\n", "nw_aia", ".", "append", "(", "vid_nw_aia", ")", "\n", "\n", "# Save stuff about the video", "\n", "this_vid_info", "=", "{", "'IA'", ":", "ia", ",", "\n", "'nw-IA'", ":", "nw_ia", ",", "\n", "'aIA'", ":", "aia", ",", "\n", "'nw-aIA'", ":", "nw_aia", ",", "\n", "}", "\n", "eval_info", "[", "'results-by-video'", "]", "[", "videoid", "]", "=", "this_vid_info", "\n", "\n", "", "print", "(", "'Calculating mean average Instantaneous Accuracy...'", ")", "\n", "# Compute mean average instantaneous accuracy (maIA)", "\n", "maia", "=", "np", ".", "mean", "(", "np", ".", "array", "(", "aia", ")", ")", "\n", "nw_maia", "=", "np", ".", "mean", "(", "np", ".", "array", "(", "nw_aia", ")", ")", "\n", "\n", "print", "(", "'Saving results...'", ")", "\n", "\n", "# Save metric", "\n", "eval_info", "[", "'maIA'", "]", "=", "maia", "\n", "eval_info", "[", "'nw-maIA'", "]", "=", "nw_maia", "\n", "\n", "# Save file with this dataset results", "\n", "with", "open", "(", "self", ".", "eval_info_pkl", ",", "'wb'", ")", "as", "f", ":", "\n", "            ", "pkl", ".", "dump", "(", "eval_info", ",", "f", ")", "\n", "\n", "# Done", "\n", "", "print", "(", "'maIA: {0:.4f}'", ".", "format", "(", "maia", ")", ")", "\n", "print", "(", "'Check generated .pkl file for more information.'", ")", "\n", "\n", "return", "\n", "", "", ""]], "home.repos.pwc.inspect_result.gramuah_ia.source.online_eval_online_action_detection.build_grid": [[7, 17], ["numpy.ones", "int", "int", "math.floor", "math.floor"], "function", ["None"], ["def", "build_grid", "(", "segments", ",", "n_slots", ",", "slot", ")", ":", "\n", "\n", "# Build action grid for gt", "\n", "    ", "grid", "=", "np", ".", "ones", "(", "(", "1", ",", "n_slots", ")", ",", "dtype", "=", "object", ")", "*", "'Background'", "\n", "for", "ann", "in", "segments", ":", "\n", "        ", "i_slot", "=", "int", "(", "math", ".", "floor", "(", "ann", "[", "'segment'", "]", "[", "0", "]", "/", "slot", ")", ")", "\n", "e_slot", "=", "int", "(", "math", ".", "floor", "(", "ann", "[", "'segment'", "]", "[", "1", "]", "/", "slot", ")", ")", "\n", "grid", "[", "0", ",", "i_slot", ":", "e_slot", "]", "=", "ann", "[", "'label'", "]", "\n", "\n", "", "return", "grid", "\n", "\n"]], "home.repos.pwc.inspect_result.gramuah_ia.source.online_eval_online_action_detection.instantaneous_accuracy": [[19, 75], ["int", "online_eval_online_action_detection.build_grid", "online_eval_online_action_detection.build_grid", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "numpy.zeros", "enumerate", "numpy.cumsum", "numpy.cumsum", "numpy.cumsum", "numpy.cumsum", "math.ceil", "float", "float"], "function", ["home.repos.pwc.inspect_result.gramuah_ia.source.online_eval_online_action_detection.build_grid", "home.repos.pwc.inspect_result.gramuah_ia.source.online_eval_online_action_detection.build_grid"], ["", "def", "instantaneous_accuracy", "(", "vid_gt", ",", "vid_pred", ",", "d", ",", "slot", ")", ":", "\n", "\n", "# Number of slots to be evaluated until duration", "\n", "    ", "n_slots", "=", "int", "(", "math", ".", "ceil", "(", "d", "/", "slot", ")", ")", "\n", "\n", "# Build action grid for gt and prediction", "\n", "agrid_gt", "=", "build_grid", "(", "vid_gt", "[", "'annotations'", "]", ",", "n_slots", ",", "slot", ")", "\n", "agrid_pr", "=", "build_grid", "(", "vid_pred", ",", "n_slots", ",", "slot", ")", "\n", "\n", "# Arrays to store factors and weights to compute IA", "\n", "tp", "=", "np", ".", "zeros", "(", "(", "1", ",", "n_slots", ")", ",", "dtype", "=", "float", ")", "\n", "tn", "=", "np", ".", "zeros", "(", "(", "1", ",", "n_slots", ")", ",", "dtype", "=", "float", ")", "\n", "fp", "=", "np", ".", "zeros", "(", "(", "1", ",", "n_slots", ")", ",", "dtype", "=", "float", ")", "\n", "fn", "=", "np", ".", "zeros", "(", "(", "1", ",", "n_slots", ")", ",", "dtype", "=", "float", ")", "\n", "tnw", "=", "np", ".", "zeros", "(", "(", "1", ",", "n_slots", ")", ",", "dtype", "=", "float", ")", "\n", "tpw", "=", "np", ".", "zeros", "(", "(", "1", ",", "n_slots", ")", ",", "dtype", "=", "float", ")", "\n", "\n", "# Factors and weights", "\n", "for", "i", ",", "v", "in", "enumerate", "(", "agrid_gt", "[", "0", ",", ":", "]", ")", ":", "\n", "# Factor", "\n", "        ", "if", "agrid_pr", "[", "0", ",", "i", "]", "==", "'Background'", "and", "v", "==", "agrid_pr", "[", "0", ",", "i", "]", ":", "\n", "# It's a true negative", "\n", "            ", "tn", "[", "0", ",", "i", "]", "=", "1.0", "\n", "", "elif", "agrid_pr", "[", "0", ",", "i", "]", "!=", "'Background'", "and", "v", "==", "agrid_pr", "[", "0", ",", "i", "]", ":", "\n", "# It's a true positive", "\n", "            ", "tp", "[", "0", ",", "i", "]", "=", "1.0", "\n", "", "elif", "agrid_pr", "[", "0", ",", "i", "]", "!=", "'Background'", "and", "v", "!=", "agrid_pr", "[", "0", ",", "i", "]", ":", "\n", "# It's a false positive", "\n", "            ", "fp", "[", "0", ",", "i", "]", "=", "1.0", "\n", "", "elif", "agrid_pr", "[", "0", ",", "i", "]", "==", "'Background'", "and", "v", "!=", "agrid_pr", "[", "0", ",", "i", "]", ":", "\n", "# It's a false negative", "\n", "            ", "fn", "[", "0", ",", "i", "]", "=", "1.0", "\n", "\n", "# Weights", "\n", "", "n_action", "=", "float", "(", "(", "agrid_gt", "[", "0", ",", "0", ":", "i", "+", "1", "]", "!=", "'Background'", ")", ".", "sum", "(", ")", ")", "\n", "n_bg", "=", "float", "(", "(", "agrid_gt", "[", "0", ",", "0", ":", "i", "+", "1", "]", "==", "'Background'", ")", ".", "sum", "(", ")", ")", "\n", "\n", "# Weights aren't considered until different action/background number", "\n", "if", "n_action", "==", "0.0", "or", "n_bg", "==", "0.0", ":", "\n", "            ", "tpw", "[", "0", ",", "i", "]", "=", "1.0", "\n", "tnw", "[", "0", ",", "i", "]", "=", "1.0", "\n", "", "else", ":", "\n", "            ", "tpw", "[", "0", ",", "i", "]", "=", "n_bg", "/", "n_action", "\n", "tnw", "[", "0", ",", "i", "]", "=", "n_action", "/", "n_bg", "\n", "\n", "# Accumulate factors for each slot", "\n", "", "", "tp", "=", "np", ".", "cumsum", "(", "tp", ")", "\n", "tn", "=", "np", ".", "cumsum", "(", "tn", ")", "\n", "fp", "=", "np", ".", "cumsum", "(", "fp", ")", "\n", "fn", "=", "np", ".", "cumsum", "(", "fn", ")", "\n", "\n", "# Computing Instantaneous Accuracy", "\n", "ia", "=", "(", "tp", "*", "tpw", "+", "tn", "*", "tnw", ")", "/", "(", "tp", "+", "tn", "+", "fp", "+", "fn", ")", "\n", "nw_ia", "=", "(", "tp", "+", "tn", ")", "/", "(", "tp", "+", "tn", "+", "fp", "+", "fn", ")", "\n", "\n", "return", "ia", ",", "nw_ia", "\n", "\n"]], "home.repos.pwc.inspect_result.gramuah_ia.source.compute_instantaneous_accuracy.parse_input_args": [[5, 22], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["def", "parse_input_args", "(", ")", ":", "\n", "\n", "    ", "description", "=", "(", "'Online evaluation for Online Action Detection. This '", "\n", "'script evaluates the performance of a method for Online '", "\n", "'Action Detection.'", ")", "\n", "\n", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "description", ")", "\n", "\n", "parser", ".", "add_argument", "(", "'-d'", ",", "default", "=", "'Noname'", ",", "help", "=", "'Dataset name.'", ")", "\n", "parser", ".", "add_argument", "(", "'-gt'", ",", "help", "=", "'Ground Truth file.'", ")", "\n", "parser", ".", "add_argument", "(", "'-subset'", ",", "default", "=", "'Test'", ",", "help", "=", "'Dataset subset.'", ")", "\n", "parser", ".", "add_argument", "(", "'-pred'", ",", "help", "=", "'Prediction file.'", ")", "\n", "parser", ".", "add_argument", "(", "'-pkl'", ",", "default", "=", "'../pkl/ia.pkl'", ",", "help", "=", "'File to store'", "\n", "'info about '", "\n", "'evaluation.'", ")", "\n", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]]}