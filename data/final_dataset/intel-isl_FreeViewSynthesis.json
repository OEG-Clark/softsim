{"home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.TrainSampler.__init__": [[71, 74], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "n_train_iters", ",", "train_iter", "=", "0", ")", ":", "\n", "        ", "self", ".", "n_train_iters", "=", "n_train_iters", "\n", "self", ".", "train_iter", "=", "train_iter", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.TrainSampler.__len__": [[75, 77], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "n_train_iters", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.TrainSampler.__iter__": [[78, 84], ["numpy.random.RandomState", "numpy.random.RandomState.seed", "numpy.random.RandomState.permutation().tolist", "iter", "numpy.random.RandomState.permutation"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "rng", "=", "np", ".", "random", ".", "RandomState", "(", ")", "\n", "rng", ".", "seed", "(", "27644437", ")", "\n", "ind", "=", "rng", ".", "permutation", "(", "self", ".", "n_train_iters", ")", ".", "tolist", "(", ")", "\n", "ind", "=", "ind", "[", "self", ".", "train_iter", ":", "]", "\n", "return", "iter", "(", "ind", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.WorkerObjects.__init__": [[87, 94], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "\n", "self", ",", "*", ",", "net_f", "=", "None", ",", "optim_f", "=", "None", ",", "lr_scheduler_f", "=", "None", ",", "net_init_f", "=", "None", "\n", ")", ":", "\n", "        ", "self", ".", "net_f", "=", "net_f", "\n", "self", ".", "optim_f", "=", "optim_f", "\n", "self", ".", "lr_scheduler_f", "=", "lr_scheduler_f", "\n", "self", ".", "net_init_f", "=", "net_init_f", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.WorkerObjects.get_net": [[95, 100], ["mytorch.WorkerObjects.net_f", "mytorch.WorkerObjects.apply"], "methods", ["None"], ["", "def", "get_net", "(", "self", ")", ":", "\n", "        ", "net", "=", "self", ".", "net_f", "(", ")", "\n", "if", "self", ".", "net_init_f", "is", "not", "None", ":", "\n", "            ", "net", ".", "apply", "(", "self", ".", "net_init_f", ")", "\n", "", "return", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.WorkerObjects.get_optimizer": [[101, 103], ["mytorch.WorkerObjects.optim_f"], "methods", ["None"], ["", "def", "get_optimizer", "(", "self", ",", "net", ")", ":", "\n", "        ", "return", "self", ".", "optim_f", "(", "net", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.WorkerObjects.get_lr_scheduler": [[104, 109], ["mytorch.WorkerObjects.lr_scheduler_f"], "methods", ["None"], ["", "def", "get_lr_scheduler", "(", "self", ",", "optimizer", ")", ":", "\n", "        ", "return", "(", "\n", "None", "\n", "if", "self", ".", "lr_scheduler_f", "is", "None", "\n", "else", "self", ".", "lr_scheduler_f", "(", "optimizer", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Frequency.__init__": [[113, 121], ["datetime.timedelta().total_seconds", "Exception", "datetime.timedelta"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "iter", "=", "0", ",", "hours", "=", "0", ",", "minutes", "=", "0", ",", "seconds", "=", "0", ")", ":", "\n", "        ", "self", ".", "freq_iter", "=", "iter", "\n", "self", ".", "freq_time_delta", "=", "datetime", ".", "timedelta", "(", "\n", "hours", "=", "hours", ",", "minutes", "=", "minutes", ",", "seconds", "=", "seconds", "\n", ")", ".", "total_seconds", "(", ")", "\n", "self", ".", "n_resets", "=", "-", "1", "\n", "if", "self", ".", "freq_iter", "<", "0", "and", "self", ".", "freq_time_delta", "<", "0", ":", "\n", "            ", "raise", "Exception", "(", "\"invalid Frequency, will never be True\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Frequency.set_train_set_len": [[122, 125], ["None"], "methods", ["None"], ["", "", "def", "set_train_set_len", "(", "self", ",", "train_set_len", ")", ":", "\n", "        ", "if", "self", ".", "freq_iter", "<", "0", ":", "\n", "            ", "self", ".", "freq_iter", "=", "-", "self", ".", "freq_iter", "*", "train_set_len", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Frequency.reset": [[126, 130], ["time.time"], "methods", ["None"], ["", "", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "n_resets", "+=", "1", "\n", "self", ".", "start_time", "=", "time", ".", "time", "(", ")", "\n", "self", ".", "current_iter", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Frequency.advance": [[131, 141], ["time.time", "mytorch.Frequency.reset"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.reset"], ["", "def", "advance", "(", "self", ")", ":", "\n", "        ", "self", ".", "current_time", "=", "time", ".", "time", "(", ")", "\n", "self", ".", "current_iter", "+=", "1", "\n", "if", "(", "self", ".", "freq_iter", ">", "0", "and", "self", ".", "current_iter", ">=", "self", ".", "freq_iter", ")", "or", "(", "\n", "self", ".", "freq_time_delta", ">", "0", "\n", "and", "(", "self", ".", "current_time", "-", "self", ".", "start_time", ")", ">", "self", ".", "freq_time_delta", "\n", ")", ":", "\n", "            ", "self", ".", "reset", "(", ")", "\n", "return", "True", "\n", "", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Frequency.get_elapsed_time": [[142, 144], ["None"], "methods", ["None"], ["", "def", "get_elapsed_time", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "current_time", "-", "self", ".", "start_time", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Frequency.get_item_time": [[145, 147], ["mytorch.Frequency.get_elapsed_time"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.ETA.get_elapsed_time"], ["", "def", "get_item_time", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "get_elapsed_time", "(", ")", "/", "(", "self", ".", "current_iter", "+", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Frequency.get_remaining_time": [[148, 163], ["mytorch.Frequency.get_item_time", "min", "Exception"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.ETA.get_item_time"], ["", "def", "get_remaining_time", "(", "self", ")", ":", "\n", "        ", "iter_time", "=", "self", ".", "get_item_time", "(", ")", "*", "(", "\n", "self", ".", "freq_iter", "-", "self", ".", "current_iter", "+", "1", "\n", ")", "\n", "time_delta_time", "=", "self", ".", "freq_time_delta", "-", "(", "\n", "self", ".", "current_time", "-", "self", ".", "start_time", "\n", ")", "\n", "if", "self", ".", "freq_iter", ">", "0", "and", "self", ".", "freq_time_delta", ">", "0", ":", "\n", "            ", "return", "min", "(", "iter_time", ",", "time_delta_time", ")", "\n", "", "elif", "self", ".", "freq_iter", ">", "0", ":", "\n", "            ", "return", "iter_time", "\n", "", "elif", "self", ".", "freq_time_delta", ">", "0", ":", "\n", "            ", "return", "time_delta_time", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "\"invalid Frequency\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Frequency.get_total_time": [[164, 174], ["mytorch.Frequency.get_item_time", "min", "Exception"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.ETA.get_item_time"], ["", "", "def", "get_total_time", "(", "self", ")", ":", "\n", "        ", "iter_time", "=", "self", ".", "get_item_time", "(", ")", "*", "self", ".", "freq_iter", "\n", "if", "self", ".", "freq_iter", ">", "0", "and", "self", ".", "freq_time_delta", ">", "0", ":", "\n", "            ", "return", "min", "(", "iter_time", ",", "self", ".", "freq_time_delta", ")", "\n", "", "elif", "self", ".", "freq_iter", ">", "0", ":", "\n", "            ", "return", "iter_time", "\n", "", "elif", "self", ".", "freq_time_delta", ">", "0", ":", "\n", "            ", "return", "self", ".", "freq_time_delta", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "\"invalid Frequency\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Frequency.get_elapsed_time_str": [[175, 177], ["utils.format_seconds", "mytorch.Frequency.get_elapsed_time"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.format_seconds", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.ETA.get_elapsed_time"], ["", "", "def", "get_elapsed_time_str", "(", "self", ",", "millis", "=", "True", ")", ":", "\n", "        ", "return", "utils", ".", "format_seconds", "(", "self", ".", "get_elapsed_time", "(", ")", ",", "millis", "=", "millis", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Frequency.get_remaining_time_str": [[178, 180], ["utils.format_seconds", "mytorch.Frequency.get_remaining_time"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.format_seconds", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.ETA.get_remaining_time"], ["", "def", "get_remaining_time_str", "(", "self", ",", "millis", "=", "True", ")", ":", "\n", "        ", "return", "utils", ".", "format_seconds", "(", "self", ".", "get_remaining_time", "(", ")", ",", "millis", "=", "millis", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Frequency.get_percentage_str": [[181, 184], ["mytorch.Frequency.get_elapsed_time", "mytorch.Frequency.get_total_time", "int"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.ETA.get_elapsed_time", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.ETA.get_total_time"], ["", "def", "get_percentage_str", "(", "self", ")", ":", "\n", "        ", "perc", "=", "self", ".", "get_elapsed_time", "(", ")", "/", "self", ".", "get_total_time", "(", ")", "*", "100", "\n", "return", "f\"{int(perc):02d}%\"", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Frequency.get_str": [[185, 196], ["s.append", "s.append", "s.append", "mytorch.Frequency.get_percentage_str", "mytorch.Frequency.get_elapsed_time_str", "mytorch.Frequency.get_remaining_time_str"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.ETA.get_percentage_str", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.ETA.get_elapsed_time_str", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.ETA.get_remaining_time_str"], ["", "def", "get_str", "(", "\n", "self", ",", "percentage", "=", "True", ",", "elapsed", "=", "True", ",", "remaining", "=", "True", ",", "millis", "=", "False", "\n", ")", ":", "\n", "        ", "s", "=", "[", "]", "\n", "if", "percentage", ":", "\n", "            ", "s", ".", "append", "(", "self", ".", "get_percentage_str", "(", ")", ")", "\n", "", "if", "elapsed", ":", "\n", "            ", "s", ".", "append", "(", "self", ".", "get_elapsed_time_str", "(", "millis", "=", "millis", ")", ")", "\n", "", "if", "remaining", ":", "\n", "            ", "s", ".", "append", "(", "self", ".", "get_remaining_time_str", "(", "millis", "=", "millis", ")", ")", "\n", "", "return", "\"/\"", ".", "join", "(", "s", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.BaseDataset.__init__": [[205, 210], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "name", ",", "train", "=", "True", ",", "logging_rate", "=", "16", ")", ":", "\n", "        ", "self", ".", "name", "=", "name", "\n", "self", ".", "current_epoch", "=", "0", "\n", "self", ".", "train", "=", "train", "\n", "self", ".", "logging_rate", "=", "logging_rate", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.BaseDataset.base_len": [[211, 213], ["NotImplementedError"], "methods", ["None"], ["", "def", "base_len", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "\"\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.BaseDataset.base_getitem": [[214, 216], ["NotImplementedError"], "methods", ["None"], ["", "def", "base_getitem", "(", "self", ",", "idx", ",", "rng", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", "\"\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.BaseDataset.__len__": [[217, 219], ["mytorch.BaseDataset.base_len"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.Dataset.base_len"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "base_len", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.BaseDataset.__getitem__": [[220, 224], ["mytorch.dataset_rng", "mytorch.BaseDataset.base_getitem", "len"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.dataset_rng", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.Dataset.base_getitem"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "rng", "=", "dataset_rng", "(", "idx", ")", "\n", "idx", "=", "idx", "%", "len", "(", "self", ")", "\n", "return", "self", ".", "base_getitem", "(", "idx", ",", "rng", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.MultiDataset.__init__": [[227, 236], ["mytorch.MultiDataset.append"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append"], ["    ", "def", "__init__", "(", "self", ",", "name", ",", "*", "datasets", ",", "uniform_sampling", "=", "False", ")", ":", "\n", "        ", "self", ".", "name", "=", "name", "\n", "self", ".", "datasets", "=", "[", "]", "\n", "self", ".", "n_samples", "=", "[", "]", "\n", "self", ".", "cum_n_samples", "=", "[", "0", "]", "\n", "self", ".", "uniform_sampling", "=", "uniform_sampling", "\n", "\n", "for", "dataset", "in", "datasets", ":", "\n", "            ", "self", ".", "append", "(", "dataset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.MultiDataset.logging_rate": [[241, 245], ["None"], "methods", ["None"], ["", "@", "logging_rate", ".", "setter", "\n", "def", "logging_rate", "(", "self", ",", "logging_rate", ")", ":", "\n", "        ", "for", "dset", "in", "self", ".", "datasets", ":", "\n", "            ", "dset", ".", "logging_rate", "=", "logging_rate", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.MultiDataset.append": [[246, 253], ["mytorch.MultiDataset.datasets.append", "mytorch.MultiDataset.n_samples.append", "mytorch.MultiDataset.cum_n_samples.append", "isinstance", "Exception", "len", "len"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append"], ["", "", "def", "append", "(", "self", ",", "dataset", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "dataset", ",", "BaseDataset", ")", ":", "\n", "            ", "raise", "Exception", "(", "\"invalid Dataset in append\"", ")", "\n", "", "self", ".", "datasets", ".", "append", "(", "dataset", ")", "\n", "self", ".", "n_samples", ".", "append", "(", "len", "(", "dataset", ")", ")", "\n", "n_samples", "=", "self", ".", "cum_n_samples", "[", "-", "1", "]", "+", "len", "(", "dataset", ")", "\n", "self", ".", "cum_n_samples", ".", "append", "(", "n_samples", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.MultiDataset.__len__": [[254, 256], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "cum_n_samples", "[", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.MultiDataset.__getitem__": [[257, 267], ["mytorch.dataset_rng", "mytorch.MultiDataset.datasets[].base_getitem", "dataset_rng.randint", "dataset_rng.randint", "len", "len", "numpy.searchsorted"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.dataset_rng", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.Dataset.base_getitem"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "rng", "=", "dataset_rng", "(", "idx", ")", "\n", "if", "self", ".", "uniform_sampling", ":", "\n", "            ", "didx", "=", "rng", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "datasets", ")", ")", "\n", "sidx", "=", "rng", ".", "randint", "(", "0", ",", "self", ".", "n_samples", "[", "didx", "]", ")", "\n", "", "else", ":", "\n", "            ", "idx", "=", "idx", "%", "len", "(", "self", ")", "\n", "didx", "=", "np", ".", "searchsorted", "(", "self", ".", "cum_n_samples", ",", "idx", ",", "side", "=", "\"right\"", ")", "-", "1", "\n", "sidx", "=", "idx", "-", "self", ".", "cum_n_samples", "[", "didx", "]", "\n", "", "return", "self", ".", "datasets", "[", "didx", "]", ".", "base_getitem", "(", "sidx", ",", "rng", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.__init__": [[270, 315], ["pathlib.Path", "utils.StopWatch", "mytorch.Worker.exec_script_name", "mytorch.Frequency", "mytorch.Frequency"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.exec_script_name"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "experiments_root", "=", "\"./experiments\"", ",", "\n", "experiment_name", "=", "None", ",", "\n", "n_train_iters", "=", "-", "128", ",", "\n", "seed", "=", "42", ",", "\n", "train_batch_size", "=", "8", ",", "\n", "train_batch_acc_steps", "=", "1", ",", "\n", "eval_batch_size", "=", "16", ",", "\n", "num_workers", "=", "16", ",", "\n", "save_frequency", "=", "None", ",", "\n", "eval_frequency", "=", "None", ",", "\n", "train_device", "=", "\"cuda:0\"", ",", "\n", "eval_device", "=", "\"cuda:0\"", ",", "\n", "clip_gradient_value", "=", "None", ",", "\n", "clip_gradient_norm", "=", "None", ",", "\n", "empty_cache_per_batch", "=", "False", ",", "\n", "log_debug", "=", "None", ",", "\n", ")", ":", "\n", "        ", "self", ".", "experiments_root", "=", "Path", "(", "experiments_root", ")", "\n", "if", "experiment_name", "is", "None", ":", "\n", "            ", "experiment_name", "=", "self", ".", "exec_script_name", "(", ")", "\n", "", "self", ".", "experiment_name", "=", "experiment_name", "\n", "self", ".", "n_train_iters", "=", "n_train_iters", "\n", "self", ".", "seed", "=", "seed", "\n", "self", ".", "train_batch_size", "=", "train_batch_size", "\n", "self", ".", "train_batch_acc_steps", "=", "train_batch_acc_steps", "\n", "self", ".", "eval_batch_size", "=", "eval_batch_size", "\n", "self", ".", "num_workers", "=", "num_workers", "\n", "self", ".", "save_frequency", "=", "(", "\n", "save_frequency", "if", "save_frequency", "is", "not", "None", "else", "Frequency", "(", "iter", "=", "-", "1", ")", "\n", ")", "\n", "self", ".", "eval_frequency", "=", "(", "\n", "eval_frequency", "if", "eval_frequency", "is", "not", "None", "else", "Frequency", "(", "iter", "=", "-", "1", ")", "\n", ")", "\n", "self", ".", "train_device", "=", "train_device", "\n", "self", ".", "eval_device", "=", "eval_device", "\n", "self", ".", "clip_gradient_value", "=", "clip_gradient_value", "\n", "self", ".", "clip_gradient_norm", "=", "clip_gradient_norm", "\n", "self", ".", "empty_cache_per_batch", "=", "empty_cache_per_batch", "\n", "# all, param, grad, grad_norm, loss, out", "\n", "self", ".", "log_debug", "=", "[", "]", "if", "log_debug", "is", "None", "else", "log_debug", "\n", "\n", "self", ".", "train_iter_messages", "=", "[", "]", "\n", "self", ".", "stopwatch", "=", "utils", ".", "StopWatch", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.exec_script_name": [[316, 319], ["os.path.splitext", "os.path.basename", "os.path.abspath"], "methods", ["None"], ["", "def", "exec_script_name", "(", "self", ")", ":", "\n", "        ", "return", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "basename", "(", "os", ".", "path", ".", "abspath", "(", "sys", ".", "argv", "[", "0", "]", ")", ")", ")", "[", "\n", "0", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.setup_experiment": [[321, 351], ["socket.gethostname", "mytorch.Worker.exp_out_root.mkdir", "utils.logging_setup", "logging.info", "numpy.random.seed", "random.seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "torch.cuda.manual_seed", "sqlite.Logger", "mytorch.Worker.db_logger.add_table", "sqlite.Table", "sqlite.StrField", "sqlite.IntField", "sqlite.StrField", "sqlite.StrField", "sqlite.FloatField", "sqlite.Constraint"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.logging_setup", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sqlite.Logger.add_table"], ["", "def", "setup_experiment", "(", "self", ")", ":", "\n", "        ", "hostname", "=", "socket", ".", "gethostname", "(", ")", "\n", "self", ".", "exp_out_root", "=", "self", ".", "experiments_root", "/", "self", ".", "experiment_name", "\n", "self", ".", "exp_out_root", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "\n", "utils", ".", "logging_setup", "(", "\n", "out_path", "=", "self", ".", "exp_out_root", "/", "f\"train.{hostname}.log\"", "\n", ")", "\n", "\n", "logging", ".", "info", "(", "f\"Set seed to {self.seed}\"", ")", "\n", "np", ".", "random", ".", "seed", "(", "self", ".", "seed", ")", "\n", "random", ".", "seed", "(", "self", ".", "seed", ")", "\n", "torch", ".", "manual_seed", "(", "self", ".", "seed", ")", "\n", "torch", ".", "cuda", ".", "manual_seed", "(", "self", ".", "seed", ")", "\n", "\n", "self", ".", "db_path", "=", "self", ".", "exp_out_root", "/", "f\"exp.{hostname}.db\"", "\n", "self", ".", "db_logger", "=", "sqlite", ".", "Logger", "(", "self", ".", "db_path", ")", "\n", "self", ".", "db_logger", ".", "add_table", "(", "\n", "sqlite", ".", "Table", "(", "\n", "\"metrics\"", ",", "\n", "fields", "=", "[", "\n", "sqlite", ".", "StrField", "(", "\"method\"", ")", ",", "\n", "sqlite", ".", "IntField", "(", "\"iter\"", ")", ",", "\n", "sqlite", ".", "StrField", "(", "\"dataset\"", ")", ",", "\n", "sqlite", ".", "StrField", "(", "\"metric\"", ")", ",", "\n", "sqlite", ".", "FloatField", "(", "\"value\"", ")", ",", "\n", "]", ",", "\n", "constraints", "=", "[", "\n", "sqlite", ".", "Constraint", "(", "\n", "field_names", "=", "[", "\"method\"", ",", "\"iter\"", ",", "\"dataset\"", ",", "\"metric\"", "]", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.log_experiment_start": [[356, 377], ["logging.info", "logging.info", "mytorch.log_datetime", "logging.info", "logging.info", "mytorch.Worker.__dict__.items", "logging.info", "logging.info", "env_str.append", "logging.info", "logging.info", "logging.info", "logging.info", "socket.gethostname", "utils.git_hash", "collect_env.get_pretty_env_info", "torch.cuda.get_device_properties", "torch.cuda.get_device_properties", "torch.cuda.get_device_properties", "torch.cuda.get_device_properties"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.log_datetime", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.Metric.items", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.git_hash"], ["", "def", "log_experiment_start", "(", "self", ",", "type", "=", "\"UNKNOWN\"", ",", "log_env_info", "=", "False", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"=\"", "*", "80", ")", "\n", "logging", ".", "info", "(", "f'Start cmd \"{type}\": {self.experiment_name}'", ")", "\n", "log_datetime", "(", ")", "\n", "logging", ".", "info", "(", "f\"host: {socket.gethostname()}\"", ")", "\n", "\n", "logging", ".", "info", "(", "\"-\"", "*", "80", ")", "\n", "env_str", "=", "[", "]", "\n", "for", "k", ",", "v", "in", "self", ".", "__dict__", ".", "items", "(", ")", ":", "\n", "            ", "env_str", ".", "append", "(", "f\"    {k}: {v}\"", ")", "\n", "", "env_str", "=", "\"\\n\"", ".", "join", "(", "env_str", ")", "\n", "logging", ".", "info", "(", "f\"worker env:\\n{env_str}\"", ")", "\n", "\n", "if", "log_env_info", ":", "\n", "            ", "from", "torch", ".", "utils", "import", "collect_env", "\n", "\n", "logging", ".", "info", "(", "\"-\"", "*", "80", ")", "\n", "logging", ".", "info", "(", "f\"git hash of project: {utils.git_hash()}\"", ")", "\n", "logging", ".", "info", "(", "f\"ENV:\\n{collect_env.get_pretty_env_info()}\"", ")", "\n", "logging", ".", "info", "(", "f\"Device: {torch.cuda.get_device_properties(0)}\"", ")", "\n", "", "logging", ".", "info", "(", "\"=\"", "*", "80", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.metric_add_train": [[378, 388], ["mytorch.Worker.db_logger.insert"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sqlite.Logger.insert"], ["", "def", "metric_add_train", "(", "self", ",", "iter", ",", "metric", ",", "value", ",", "method", "=", "None", ")", ":", "\n", "        ", "if", "method", "is", "None", ":", "\n", "            ", "method", "=", "self", ".", "experiment_name", "\n", "", "self", ".", "db_logger", ".", "insert", "(", "\n", "\"metrics\"", ",", "\n", "method", "=", "method", ",", "\n", "iter", "=", "iter", ",", "\n", "dataset", "=", "\"train\"", ",", "\n", "metric", "=", "metric", ",", "\n", "value", "=", "value", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.metric_add_eval": [[390, 400], ["mytorch.Worker.db_logger.insert"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sqlite.Logger.insert"], ["", "def", "metric_add_eval", "(", "self", ",", "iter", ",", "dataset", ",", "metric", ",", "value", ",", "method", "=", "None", ")", ":", "\n", "        ", "if", "method", "is", "None", ":", "\n", "            ", "method", "=", "self", ".", "experiment_name", "\n", "", "self", ".", "db_logger", ".", "insert", "(", "\n", "\"metrics\"", ",", "\n", "method", "=", "method", ",", "\n", "iter", "=", "iter", ",", "\n", "dataset", "=", "\"eval/\"", "+", "dataset", ",", "\n", "metric", "=", "metric", ",", "\n", "value", "=", "value", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.do_cmd": [[402, 420], ["mytorch.Worker.log_experiment_start", "mytorch.Worker.train", "mytorch.Worker.train", "mytorch.Worker.eval_iters", "mytorch.Worker.get_eval_sets", "mytorch.Worker.eval", "worker_objects.get_net", "mytorch.Worker.slurm", "Exception"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.log_experiment_start", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.train", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.train", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.eval_iters", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.exp.Worker.get_eval_sets", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.eval", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.WorkerObjects.get_net", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.slurm"], ["", "def", "do_cmd", "(", "self", ",", "args", ",", "worker_objects", ")", ":", "\n", "        ", "self", ".", "log_experiment_start", "(", "type", "=", "args", ".", "cmd", ",", "log_env_info", "=", "args", ".", "log_env_info", ")", "\n", "\n", "if", "args", ".", "cmd", "==", "\"retrain\"", ":", "\n", "            ", "self", ".", "train", "(", "worker_objects", ",", "resume", "=", "False", ")", "\n", "", "elif", "args", ".", "cmd", "==", "\"resume\"", ":", "\n", "            ", "self", ".", "train", "(", "worker_objects", ",", "resume", "=", "True", ")", "\n", "", "elif", "args", ".", "cmd", "==", "\"eval\"", ":", "\n", "            ", "self", ".", "eval_iters", "(", "\n", "worker_objects", ",", "iters", "=", "args", ".", "iter", ",", "net_root", "=", "args", ".", "eval_net_root", "\n", ")", "\n", "", "elif", "args", ".", "cmd", "==", "\"eval-init\"", ":", "\n", "            ", "eval_sets", "=", "self", ".", "get_eval_sets", "(", ")", "\n", "self", ".", "eval", "(", "-", "1", ",", "worker_objects", ".", "get_net", "(", ")", ",", "eval_sets", ")", "\n", "", "elif", "args", ".", "cmd", "==", "\"slurm\"", ":", "\n", "            ", "self", ".", "slurm", "(", "args", ")", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "\"invalid cmd\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.do": [[421, 424], ["mytorch.Worker.setup_experiment", "mytorch.Worker.do_cmd"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.setup_experiment", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.do_cmd"], ["", "", "def", "do", "(", "self", ",", "args", ",", "worker_objects", ")", ":", "\n", "        ", "self", ".", "setup_experiment", "(", ")", "\n", "self", ".", "do_cmd", "(", "args", ",", "worker_objects", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.slurm": [[425, 477], ["pathlib.Path().resolve", "vars", "logging.info", "subprocess.run", "logging.info", "logging.info", "isinstance", "mytorch.Worker.slurm._unparse"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_data_pw.run"], ["", "def", "slurm", "(", "self", ",", "args", ")", ":", "\n", "        ", "slurm_cmd", "=", "args", ".", "slurm_cmd", "\n", "\n", "if", "args", ".", "slurm_n_cpus", "<=", "0", ":", "\n", "            ", "n_cpus", "=", "args", ".", "slurm_n_gpus", "*", "12", "\n", "", "slurm_sh_path", "=", "(", "\n", "self", ".", "exp_out_root", "\n", "/", "f\"{self.experiment_name}_slurm_{slurm_cmd}_{int(time.time())}.sh\"", "\n", ")", "\n", "# slurm_err_path = self.exp_out_root / f\"slurm%j_err.txt\"", "\n", "slurm_out_path", "=", "self", ".", "exp_out_root", "/", "f\"slurm%j_out.txt\"", "\n", "script_path", "=", "Path", "(", "sys", ".", "argv", "[", "0", "]", ")", ".", "resolve", "(", ")", "\n", "\n", "def", "_unparse", "(", "k", ",", "v", ")", ":", "\n", "            ", "if", "isinstance", "(", "v", ",", "list", ")", ":", "\n", "                ", "return", "f\"--{k.replace('_', '-')} {' '.join(map(str, v))}\"", "\n", "", "else", ":", "\n", "                ", "return", "f\"--{k.replace('_', '-')} {str(v)}\"", "\n", "\n", "", "", "slurm_args", "=", "vars", "(", "args", ")", "\n", "slurm_args", "[", "\"cmd\"", "]", "=", "slurm_cmd", "\n", "slurm_args", "[", "\"log_env_info\"", "]", "=", "\"1\"", "\n", "slurm_args", "=", "[", "\n", "_unparse", "(", "k", ",", "v", ")", "\n", "for", "k", ",", "v", "in", "slurm_args", ".", "items", "(", ")", "\n", "if", "not", "(", "\n", "\"slurm\"", "in", "k", "\n", "or", "v", "is", "None", "\n", "or", "(", "isinstance", "(", "v", ",", "str", ")", "and", "len", "(", "v", ")", "==", "0", ")", "\n", "or", "(", "isinstance", "(", "v", ",", "list", ")", "and", "len", "(", "v", ")", "==", "0", ")", "\n", ")", "\n", "]", "\n", "slurm_args", "=", "\" \"", ".", "join", "(", "slurm_args", ")", "\n", "\n", "def", "_write", "(", "fp", ",", "txt", ")", ":", "\n", "            ", "logging", ".", "info", "(", "txt", ")", "\n", "fp", ".", "write", "(", "f\"{txt}\\n\"", ")", "\n", "\n", "", "with", "open", "(", "slurm_sh_path", ",", "\"w\"", ")", "as", "fp", ":", "\n", "            ", "_write", "(", "fp", ",", "f\"#!/bin/bash\"", ")", "\n", "_write", "(", "fp", ",", "f\"#SBATCH --partition {args.slurm_queue}\"", ")", "\n", "_write", "(", "fp", ",", "f\"#SBATCH --gres=gpu:{args.slurm_n_gpus}\"", ")", "\n", "_write", "(", "fp", ",", "f\"#SBATCH --cpus-per-task {n_cpus}\"", ")", "\n", "_write", "(", "fp", ",", "f\"#SBATCH --time {args.slurm_time}\"", ")", "\n", "# _write(fp, f\"#SBATCH --error {slurm_err_path}\")", "\n", "_write", "(", "fp", ",", "f\"#SBATCH --output {slurm_out_path}\"", ")", "\n", "_write", "(", "fp", ",", "f\"python -u {script_path} {slurm_args}\"", ")", "\n", "", "cmd", "=", "[", "\"sbatch\"", ",", "str", "(", "slurm_sh_path", ")", "]", "\n", "logging", ".", "info", "(", "\" \"", ".", "join", "(", "cmd", ")", ")", "\n", "ret", "=", "subprocess", ".", "run", "(", "cmd", ")", "\n", "logging", ".", "info", "(", "ret", ".", "stdout", ")", "\n", "logging", ".", "info", "(", "ret", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.get_train_set": [[478, 481], ["NotImplementedError"], "methods", ["None"], ["", "def", "get_train_set", "(", "self", ")", ":", "\n", "# returns train_set", "\n", "        ", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.get_eval_sets": [[482, 485], ["NotImplementedError"], "methods", ["None"], ["", "def", "get_eval_sets", "(", "self", ")", ":", "\n", "# returns eval_sets", "\n", "        ", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.copy_data": [[486, 489], ["NotImplementedError"], "methods", ["None"], ["", "def", "copy_data", "(", "self", ",", "data", ",", "device", ",", "train", ")", ":", "\n", "# self.im = data['im'].to(self.device).requires_grad_(requires_grad=train)", "\n", "        ", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.free_copied_data": [[490, 492], ["None"], "methods", ["None"], ["", "def", "free_copied_data", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.net_forward": [[493, 495], ["NotImplementedError"], "methods", ["None"], ["", "def", "net_forward", "(", "self", ",", "net", ",", "train", ",", "iter", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.loss_forward": [[496, 498], ["NotImplementedError"], "methods", ["None"], ["", "def", "loss_forward", "(", "self", ",", "output", ",", "train", ",", "iter", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.callback_train_post_backward": [[499, 509], ["None"], "methods", ["None"], ["", "def", "callback_train_post_backward", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "# net = kwargs['net']", "\n", "# err = False", "\n", "# for name, param in net.named_parameters():", "\n", "#   if not torch.isfinite(param.grad).all():", "\n", "#     print(f'{name} has non-finite gradient')", "\n", "#     err = True", "\n", "# if err:", "\n", "#   __import__('ipdb').set_trace()", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.callback_eval_start": [[510, 512], ["None"], "methods", ["None"], ["", "def", "callback_eval_start", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.callback_eval_add": [[513, 515], ["None"], "methods", ["None"], ["", "def", "callback_eval_add", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.callback_eval_stop": [[516, 518], ["None"], "methods", ["None"], ["", "def", "callback_eval_stop", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.get_train_data_loader": [[519, 530], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "mytorch.TrainSampler"], "methods", ["None"], ["", "def", "get_train_data_loader", "(", "self", ",", "dset", ",", "iter", ")", ":", "\n", "        ", "return", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "dset", ",", "\n", "batch_size", "=", "self", ".", "train_batch_size", ",", "\n", "shuffle", "=", "False", ",", "\n", "sampler", "=", "TrainSampler", "(", "\n", "self", ".", "n_train_iters", "*", "self", ".", "train_batch_size", ",", "train_iter", "=", "iter", "\n", ")", ",", "\n", "num_workers", "=", "self", ".", "num_workers", ",", "\n", "drop_last", "=", "True", ",", "\n", "pin_memory", "=", "True", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.get_eval_data_loader": [[532, 540], ["torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader"], "methods", ["None"], ["", "def", "get_eval_data_loader", "(", "self", ",", "dset", ")", ":", "\n", "        ", "return", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "dset", ",", "\n", "batch_size", "=", "self", ".", "eval_batch_size", ",", "\n", "shuffle", "=", "False", ",", "\n", "num_workers", "=", "self", ".", "num_workers", ",", "\n", "drop_last", "=", "False", ",", "\n", "pin_memory", "=", "True", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.format_err_str": [[542, 557], ["errs.values", "sum", "isinstance", "len", "err_list.extend", "err_list.append", "v.ravel"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append"], ["", "def", "format_err_str", "(", "self", ",", "errs", ",", "div", "=", "1", ")", ":", "\n", "        ", "err_list", "=", "[", "]", "\n", "for", "v", "in", "errs", ".", "values", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "v", ",", "(", "list", ",", "np", ".", "ndarray", ")", ")", ":", "\n", "                ", "err_list", ".", "extend", "(", "v", ".", "ravel", "(", ")", ")", "\n", "", "else", ":", "\n", "                ", "err_list", ".", "append", "(", "v", ")", "\n", "", "", "err", "=", "sum", "(", "err_list", ")", "\n", "if", "len", "(", "err_list", ")", ">", "1", ":", "\n", "            ", "err_str", "=", "f\"{err/div:0.4f}=\"", "+", "\"+\"", ".", "join", "(", "\n", "[", "f\"{e/div:0.4f}\"", "for", "e", "in", "err_list", "]", "\n", ")", "\n", "", "else", ":", "\n", "            ", "err_str", "=", "f\"{err/div:0.4f}\"", "\n", "", "return", "err_str", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.get_net_path": [[558, 562], ["None"], "methods", ["None"], ["", "def", "get_net_path", "(", "self", ",", "iter", ",", "net_root", "=", "None", ")", ":", "\n", "        ", "if", "net_root", "is", "None", ":", "\n", "            ", "net_root", "=", "self", ".", "exp_out_root", "\n", "", "return", "net_root", "/", "f\"net_{iter:016d}.params\"", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.get_net_paths": [[563, 572], ["sorted", "net_root.glob", "int", "str", "net_path.with_suffix"], "methods", ["None"], ["", "def", "get_net_paths", "(", "self", ",", "net_root", "=", "None", ")", ":", "\n", "        ", "if", "net_root", "is", "None", ":", "\n", "            ", "net_root", "=", "self", ".", "exp_out_root", "\n", "", "net_paths", "=", "{", "}", "\n", "for", "net_path", "in", "sorted", "(", "net_root", ".", "glob", "(", "\"net_*.params\"", ")", ")", ":", "\n", "            ", "iter", "=", "int", "(", "net_path", ".", "with_suffix", "(", "\"\"", ")", ".", "name", "[", "4", ":", "]", ")", "\n", "net_paths", "[", "str", "(", "iter", ")", "]", "=", "(", "net_path", ",", "iter", ")", "\n", "net_paths", "[", "\"last\"", "]", "=", "(", "net_path", ",", "iter", ")", "\n", "", "return", "net_paths", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.eval_iters": [[573, 603], ["mytorch.Worker.get_net_paths", "mytorch.Worker.get_eval_sets", "worker_objects.get_net", "pathlib.Path", "mytorch.Worker.eval", "iters.remove", "len", "logging.info", "torch.load", "torch.load", "torch.load", "torch.load", "worker_objects.get_net.load_state_dict", "mytorch.Worker.eval", "logging.info", "mytorch.Worker.keys", "str"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.get_net_paths", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.exp.Worker.get_eval_sets", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.WorkerObjects.get_net", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.eval", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.load", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.load", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.load", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.load", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.eval"], ["", "def", "eval_iters", "(", "self", ",", "worker_objects", ",", "iters", "=", "None", ",", "net_root", "=", "None", ")", ":", "\n", "        ", "if", "net_root", "is", "None", "or", "net_root", "==", "\"\"", ":", "\n", "            ", "net_root", "=", "self", ".", "exp_out_root", "\n", "", "else", ":", "\n", "            ", "net_root", "=", "Path", "(", "net_root", ")", "\n", "", "net_paths", "=", "self", ".", "get_net_paths", "(", "net_root", "=", "net_root", ")", "\n", "\n", "if", "iters", "is", "None", "or", "len", "(", "iters", ")", "==", "0", ":", "\n", "            ", "iters", "=", "[", "iter", "for", "iter", "in", "net_paths", ".", "keys", "(", ")", "if", "iter", "!=", "\"last\"", "]", "\n", "\n", "", "eval_sets", "=", "self", ".", "get_eval_sets", "(", ")", "\n", "net", "=", "worker_objects", ".", "get_net", "(", ")", "\n", "\n", "if", "\"init\"", "in", "iters", ":", "\n", "            ", "self", ".", "eval", "(", "-", "1", ",", "net", ",", "eval_sets", ")", "\n", "iters", ".", "remove", "(", "\"init\"", ")", "\n", "\n", "", "for", "iter_str", "in", "iters", ":", "\n", "            ", "if", "iter_str", "in", "net_paths", ":", "\n", "                ", "net_path", ",", "iter", "=", "net_paths", "[", "iter_str", "]", "\n", "logging", ".", "info", "(", "\n", "f\"[EVAL] loading net for iter {iter_str}: {net_path}\"", "\n", ")", "\n", "state_dict", "=", "torch", ".", "load", "(", "\n", "str", "(", "net_path", ")", ",", "map_location", "=", "self", ".", "eval_device", "\n", ")", "\n", "net", ".", "load_state_dict", "(", "state_dict", ")", "\n", "self", ".", "eval", "(", "iter", ",", "net", ",", "eval_sets", ")", "\n", "", "else", ":", "\n", "                ", "logging", ".", "info", "(", "f\"[EVAL] no network params for iter {iter_str}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.eval": [[604, 610], ["enumerate", "logging.info", "logging.info", "logging.info", "mytorch.Worker.eval_set"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.eval_set"], ["", "", "", "def", "eval", "(", "self", ",", "iter", ",", "net", ",", "eval_sets", ",", "epoch", "=", "\"x\"", ")", ":", "\n", "        ", "for", "eval_set_idx", ",", "eval_set", "in", "enumerate", "(", "eval_sets", ")", ":", "\n", "            ", "logging", ".", "info", "(", "\"\"", ")", "\n", "logging", ".", "info", "(", "\"=\"", "*", "80", ")", "\n", "logging", ".", "info", "(", "f\"Evaluating set {eval_set.name}\"", ")", "\n", "self", ".", "eval_set", "(", "iter", ",", "net", ",", "eval_set_idx", ",", "eval_set", ",", "epoch", "=", "epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.eval_set": [[611, 715], ["torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "logging.info", "mytorch.log_datetime", "logging.info", "mytorch.Worker.get_eval_data_loader", "net.to.to.to", "net.to.to.eval", "utils.CumulativeMovingAverage", "mytorch.Worker.stopwatch.reset", "mytorch.Worker.stopwatch.start", "mytorch.Worker.callback_eval_start", "mytorch.Worker.stopwatch.stop", "utils.ETA", "mytorch.Worker.stopwatch.start", "mytorch.Worker.stopwatch.start", "enumerate", "mytorch.Worker.stopwatch.stop", "mytorch.Worker.stopwatch.start", "mytorch.Worker.callback_eval_stop", "mytorch.Worker.stopwatch.stop", "logging.info", "mytorch.Worker.format_err_str", "logging.info", "mytorch.Worker.db_logger.commit", "mytorch.Worker.copy_data", "mytorch.Worker.stopwatch.stop", "mytorch.Worker.stopwatch.start", "mytorch.Worker.net_forward", "mytorch.Worker.stopwatch.stop", "mytorch.Worker.stopwatch.start", "mytorch.Worker.loss_forward", "mytorch.Worker.keys", "utils.CumulativeMovingAverage.append", "mytorch.Worker.stopwatch.stop", "utils.ETA.update", "mytorch.Worker.stopwatch.start", "mytorch.Worker.callback_eval_add", "mytorch.Worker.stopwatch.stop", "mytorch.Worker.free_copied_data", "mytorch.Worker.stopwatch.start", "len", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.empty_cache", "torch.cuda.synchronize", "torch.cuda.synchronize", "torch.cuda.synchronize", "torch.cuda.synchronize", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "mytorch.Worker.format_err_str", "logging.info", "errs[].item", "len", "v.item", "len", "numpy.sum", "utils.ETA.get_str", "utils.CumulativeMovingAverage.vals_list"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.log_datetime", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.get_eval_data_loader", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.eval", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.reset", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.start", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.exp.Worker.callback_eval_start", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.stop", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.start", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.start", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.stop", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.start", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.exp.Worker.callback_eval_stop", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.stop", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.format_err_str", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sqlite.Logger.commit", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.exp.Worker.copy_data", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.stop", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.start", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.exp.Worker.net_forward", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.stop", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.start", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.exp.Worker.loss_forward", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.stop", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.ETA.update", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.start", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.exp.Worker.callback_eval_add", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.stop", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.free_copied_data", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.start", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.format_err_str", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.ETA.get_str", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.vals_list"], ["", "", "def", "eval_set", "(", "self", ",", "iter", ",", "net", ",", "eval_set_idx", ",", "eval_set", ",", "epoch", "=", "\"x\"", ")", ":", "\n", "        ", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "logging", ".", "info", "(", "\"-\"", "*", "80", ")", "\n", "log_datetime", "(", ")", "\n", "logging", ".", "info", "(", "\"Eval iter %d\"", "%", "iter", ")", "\n", "eval_loader", "=", "self", ".", "get_eval_data_loader", "(", "eval_set", ")", "\n", "\n", "net", "=", "net", ".", "to", "(", "self", ".", "eval_device", ")", "\n", "net", ".", "eval", "(", ")", "\n", "\n", "mean_loss", "=", "utils", ".", "CumulativeMovingAverage", "(", ")", "\n", "self", ".", "stopwatch", ".", "reset", "(", ")", "\n", "\n", "self", ".", "stopwatch", ".", "start", "(", "\"callback\"", ")", "\n", "self", ".", "callback_eval_start", "(", "\n", "iter", "=", "iter", ",", "net", "=", "net", ",", "set_idx", "=", "eval_set_idx", ",", "eval_set", "=", "eval_set", "\n", ")", "\n", "self", ".", "stopwatch", ".", "stop", "(", "\"callback\"", ")", "\n", "\n", "# torch.cuda.empty_cache()", "\n", "# logging.info(\"--------- init ----------\")", "\n", "# log_cuda_mem()", "\n", "# log_tensor_memory_report()", "\n", "# logging.info(\"-------------------------\")", "\n", "\n", "eta", "=", "utils", ".", "ETA", "(", "length", "=", "len", "(", "eval_loader", ")", ")", "\n", "self", ".", "stopwatch", ".", "start", "(", "\"total\"", ")", "\n", "self", ".", "stopwatch", ".", "start", "(", "\"data\"", ")", "\n", "for", "batch_idx", ",", "data", "in", "enumerate", "(", "eval_loader", ")", ":", "\n", "# if batch_idx == 4:", "\n", "#     break", "\n", "\n", "                ", "if", "self", ".", "empty_cache_per_batch", ":", "\n", "                    ", "torch", ".", "cuda", ".", "empty_cache", "(", ")", "\n", "\n", "", "self", ".", "copy_data", "(", "data", ",", "device", "=", "self", ".", "eval_device", ",", "train", "=", "False", ")", "\n", "# logging.info(\"--------- copy data ----------\")", "\n", "# log_cuda_mem()", "\n", "self", ".", "stopwatch", ".", "stop", "(", "\"data\"", ")", "\n", "\n", "self", ".", "stopwatch", ".", "start", "(", "\"forward\"", ")", "\n", "output", "=", "self", ".", "net_forward", "(", "net", ",", "train", "=", "False", ",", "iter", "=", "iter", ")", "\n", "if", "\"cuda\"", "in", "self", ".", "eval_device", ":", "\n", "                    ", "torch", ".", "cuda", ".", "synchronize", "(", ")", "\n", "# logging.info(\"--------- forward ----------\")", "\n", "# log_cuda_mem()", "\n", "", "self", ".", "stopwatch", ".", "stop", "(", "\"forward\"", ")", "\n", "\n", "self", ".", "stopwatch", ".", "start", "(", "\"loss\"", ")", "\n", "errs", "=", "self", ".", "loss_forward", "(", "output", ",", "train", "=", "False", ",", "iter", "=", "iter", ")", "\n", "err_items", "=", "{", "}", "\n", "for", "k", "in", "errs", ".", "keys", "(", ")", ":", "\n", "                    ", "if", "torch", ".", "is_tensor", "(", "errs", "[", "k", "]", ")", ":", "\n", "                        ", "err_items", "[", "k", "]", "=", "errs", "[", "k", "]", ".", "item", "(", ")", "\n", "", "else", ":", "\n", "                        ", "err_items", "[", "k", "]", "=", "[", "v", ".", "item", "(", ")", "for", "v", "in", "errs", "[", "k", "]", "]", "\n", "", "", "del", "errs", "\n", "mean_loss", ".", "append", "(", "err_items", ")", "\n", "# logging.info(\"--------- loss ----------\")", "\n", "# log_cuda_mem()", "\n", "self", ".", "stopwatch", ".", "stop", "(", "\"loss\"", ")", "\n", "\n", "eta", ".", "update", "(", "batch_idx", ")", "\n", "if", "batch_idx", "%", "eval_set", ".", "logging_rate", "==", "0", ":", "\n", "                    ", "err_str", "=", "self", ".", "format_err_str", "(", "err_items", ")", "\n", "logging", ".", "info", "(", "\n", "f\"eval {epoch}/{iter}: {batch_idx+1}/{len(eval_loader)}: loss={err_str} ({np.sum(mean_loss.vals_list()):0.4f}) | {eta.get_str(percentage=True, elapsed=True, remaining=True)}\"", "\n", ")", "\n", "\n", "", "self", ".", "stopwatch", ".", "start", "(", "\"callback\"", ")", "\n", "self", ".", "callback_eval_add", "(", "\n", "iter", "=", "iter", ",", "\n", "net", "=", "net", ",", "\n", "set_idx", "=", "eval_set_idx", ",", "\n", "eval_set", "=", "eval_set", ",", "\n", "batch_idx", "=", "batch_idx", ",", "\n", "n_batches", "=", "len", "(", "eval_loader", ")", ",", "\n", "output", "=", "output", ",", "\n", ")", "\n", "self", ".", "stopwatch", ".", "stop", "(", "\"callback\"", ")", "\n", "\n", "self", ".", "free_copied_data", "(", ")", "\n", "# logging.info(\"--------- end ----------\")", "\n", "# log_cuda_mem()", "\n", "\n", "self", ".", "stopwatch", ".", "start", "(", "\"data\"", ")", "\n", "", "self", ".", "stopwatch", ".", "stop", "(", "\"total\"", ")", "\n", "\n", "self", ".", "stopwatch", ".", "start", "(", "\"callback\"", ")", "\n", "self", ".", "callback_eval_stop", "(", "\n", "iter", "=", "iter", ",", "\n", "net", "=", "net", ",", "\n", "set_idx", "=", "eval_set_idx", ",", "\n", "eval_set", "=", "eval_set", ",", "\n", "mean_loss", "=", "mean_loss", ".", "vals", ",", "\n", ")", "\n", "self", ".", "stopwatch", ".", "stop", "(", "\"callback\"", ")", "\n", "\n", "logging", ".", "info", "(", "\"timings: %s\"", "%", "self", ".", "stopwatch", ")", "\n", "\n", "err_str", "=", "self", ".", "format_err_str", "(", "mean_loss", ".", "vals", ")", "\n", "logging", ".", "info", "(", "f\"avg eval_loss={err_str}\"", ")", "\n", "self", ".", "db_logger", ".", "commit", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.train": [[716, 939], ["mytorch.Worker.get_train_set", "mytorch.Worker.get_eval_sets", "worker_objects.get_net", "net.to.to.to", "worker_objects.get_optimizer", "worker_objects.get_lr_scheduler", "mytorch.Worker.get_train_data_loader", "list", "utils.ETA", "utils.CumulativeMovingAverage", "net.to.to.train", "worker_objects.get_optimizer.zero_grad", "mytorch.Worker.save_frequency.set_train_set_len", "mytorch.Worker.eval_frequency.set_train_set_len", "mytorch.Worker.save_frequency.reset", "mytorch.Worker.eval_frequency.reset", "mytorch.Worker.stopwatch.reset", "mytorch.Worker.stopwatch.start", "mytorch.Worker.stopwatch.start", "zip", "logging.info", "logging.info", "mytorch.log_datetime", "logging.info", "state_path.exists", "logging.info", "logging.info", "logging.info", "torch.load", "torch.load", "torch.load", "torch.load", "net.to.to.load_state_dict", "worker_objects.get_optimizer.load_state_dict", "torch.set_rng_state", "torch.set_rng_state", "torch.set_rng_state", "torch.set_rng_state", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "worker_objects.get_lr_scheduler.get_lr", "range", "worker_objects.get_lr_scheduler.get_lr", "range", "len", "len", "mytorch.Worker.copy_data", "mytorch.Worker.stopwatch.stop", "mytorch.Worker.stopwatch.start", "mytorch.Worker.net_forward", "mytorch.Worker.stopwatch.stop", "mytorch.Worker.stopwatch.start", "mytorch.Worker.loss_forward", "mytorch.Worker.free_copied_data", "mytorch.Worker.stopwatch.stop", "mytorch.Worker.stopwatch.start", "sum.backward", "mytorch.Worker.callback_train_post_backward", "mytorch.Worker.stopwatch.stop", "mytorch.Worker.save_frequency.advance", "mytorch.Worker.eval_frequency.advance", "utils.ETA.inc", "mytorch.Worker.stopwatch.stop", "mytorch.Worker.stopwatch.start", "mytorch.Worker.stopwatch.start", "str", "state[].to", "torch.cuda.set_rng_state", "torch.cuda.set_rng_state", "torch.cuda.set_rng_state", "torch.cuda.set_rng_state", "worker_objects.get_lr_scheduler.step", "logging.info", "len", "len", "torch.cuda.synchronize", "torch.cuda.synchronize", "torch.cuda.synchronize", "torch.cuda.synchronize", "sum", "mytorch.Worker.keys", "utils.CumulativeMovingAverage.append", "torch.cuda.synchronize", "torch.cuda.synchronize", "torch.cuda.synchronize", "torch.cuda.synchronize", "torch.cuda.synchronize", "torch.cuda.synchronize", "torch.cuda.synchronize", "torch.cuda.synchronize", "mytorch.Worker.stopwatch.start", "worker_objects.get_optimizer.step", "worker_objects.get_optimizer.zero_grad", "mytorch.Worker.stopwatch.stop", "mytorch.Worker.format_err_str", "mytorch.Worker.train_iter_messages.append", "mytorch.Worker.train_iter_messages.append", "mytorch.Worker.train_iter_messages.append", "logging.info", "mytorch.Worker.get_net_path", "logging.info", "logging.info", "torch.save", "torch.save", "torch.save", "torch.save", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "logging.info", "torch.save", "torch.save", "torch.save", "torch.save", "logging.info", "state_tmp_path.rename", "mytorch.Worker.metric_add_train", "mytorch.Worker.format_err_str", "utils.CumulativeMovingAverage.reset", "logging.info", "logging.info", "logging.info", "logging.info", "mytorch.Worker.stopwatch.reset", "mytorch.Worker.db_logger.commit", "mytorch.Worker.eval", "net.to.to.to", "net.to.to.train", "logging.info", "logging.info", "worker_objects.get_lr_scheduler.get_lr", "worker_objects.get_lr_scheduler.step", "worker_objects.get_lr_scheduler.get_lr", "state[].to", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "mytorch.Worker.train_iter_messages.append", "utils.ETA.inc", "mytorch.Worker.train_iter_messages.append", "mytorch.Worker.train_iter_messages.append", "logging.info", "torch.nn.utils.clip_grad_value_", "torch.nn.utils.clip_grad_value_", "torch.nn.utils.clip_grad_value_", "torch.nn.utils.clip_grad_value_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.cuda.synchronize", "torch.cuda.synchronize", "torch.cuda.synchronize", "torch.cuda.synchronize", "net.to.to.state_dict", "str", "net.to.to.state_dict", "worker_objects.get_optimizer.state_dict", "torch.get_rng_state", "torch.get_rng_state", "torch.get_rng_state", "torch.get_rng_state", "torch.cuda.get_rng_state", "torch.cuda.get_rng_state", "torch.cuda.get_rng_state", "torch.cuda.get_rng_state", "str", "numpy.sum", "logging.info", "errs[].item", "net.to.to.parameters", "net.to.to.parameters", "utils.CumulativeMovingAverage.vals_list", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "sum", "mytorch.Worker.values", "v.item", "numpy.sum", "mytorch.Worker.save_frequency.get_str", "utils.ETA.get_str", "mytorch.Worker.save_frequency.get_str", "utils.ETA.get_str", "utils.CumulativeMovingAverage.vals_list"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.exp.Worker.get_train_set", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.exp.Worker.get_eval_sets", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.WorkerObjects.get_net", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.WorkerObjects.get_optimizer", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.WorkerObjects.get_lr_scheduler", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.get_train_data_loader", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.train", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Frequency.set_train_set_len", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Frequency.set_train_set_len", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.reset", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.reset", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.reset", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.start", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.start", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.log_datetime", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.load", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.load", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.load", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.load", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.exp.Worker.copy_data", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.stop", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.start", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.exp.Worker.net_forward", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.stop", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.start", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.exp.Worker.loss_forward", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.free_copied_data", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.stop", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.start", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.callback_train_post_backward", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.stop", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Frequency.advance", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Frequency.advance", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.ETA.inc", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.stop", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.start", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.start", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.start", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.stop", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.format_err_str", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.get_net_path", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.save", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.save", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.save", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.save", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.save", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.save", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.save", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.save", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.metric_add_train", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.format_err_str", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.reset", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.reset", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sqlite.Logger.commit", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.eval", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.train", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.ETA.inc", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.vals_list", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.ETA.get_str", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.ETA.get_str", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.ETA.get_str", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.ETA.get_str", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.vals_list"], ["", "", "def", "train", "(", "self", ",", "worker_objects", ",", "resume", "=", "False", ")", ":", "\n", "        ", "train_set", "=", "self", ".", "get_train_set", "(", ")", "\n", "eval_sets", "=", "self", ".", "get_eval_sets", "(", ")", "\n", "\n", "# get worker objects", "\n", "net", "=", "worker_objects", ".", "get_net", "(", ")", "\n", "net", "=", "net", ".", "to", "(", "self", ".", "train_device", ")", "\n", "optimizer", "=", "worker_objects", ".", "get_optimizer", "(", "net", ")", "\n", "lr_scheduler", "=", "worker_objects", ".", "get_lr_scheduler", "(", "optimizer", ")", "\n", "\n", "# laod state if existent", "\n", "iter", "=", "0", "\n", "state_path", "=", "self", ".", "exp_out_root", "/", "\"state.dict\"", "\n", "if", "resume", "and", "state_path", ".", "exists", "(", ")", ":", "\n", "            ", "logging", ".", "info", "(", "\"=\"", "*", "80", ")", "\n", "logging", ".", "info", "(", "f\"Loading state from {state_path}\"", ")", "\n", "logging", ".", "info", "(", "\"=\"", "*", "80", ")", "\n", "state", "=", "torch", ".", "load", "(", "str", "(", "state_path", ")", ",", "map_location", "=", "self", ".", "train_device", ")", "\n", "iter", "=", "state", "[", "\"iter\"", "]", "+", "1", "\n", "net", ".", "load_state_dict", "(", "state", "[", "\"state_dict\"", "]", ")", "\n", "optimizer", ".", "load_state_dict", "(", "state", "[", "\"optimizer\"", "]", ")", "\n", "torch", ".", "set_rng_state", "(", "state", "[", "\"cpu_rng_state\"", "]", ".", "to", "(", "\"cpu\"", ")", ")", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "                ", "torch", ".", "cuda", ".", "set_rng_state", "(", "state", "[", "\"gpu_rng_state\"", "]", ".", "to", "(", "\"cpu\"", ")", ")", "\n", "\n", "# update lr_scheduler", "\n", "", "", "if", "lr_scheduler", "is", "not", "None", ":", "\n", "            ", "old_lr", "=", "lr_scheduler", ".", "get_lr", "(", ")", "\n", "for", "_", "in", "range", "(", "iter", ")", ":", "\n", "                ", "lr_scheduler", ".", "step", "(", ")", "\n", "", "new_lr", "=", "lr_scheduler", ".", "get_lr", "(", ")", "\n", "if", "old_lr", "!=", "new_lr", ":", "\n", "                ", "logging", ".", "info", "(", "\n", "f\"(RESUME) Update LR {old_lr} => {new_lr} via lr_scheduler iter={iter}\"", "\n", ")", "\n", "\n", "# compute n_train_iters based on number of samples in train set", "\n", "", "", "if", "self", ".", "n_train_iters", "<", "0", ":", "\n", "            ", "self", ".", "n_train_iters", "=", "-", "self", ".", "n_train_iters", "*", "len", "(", "train_set", ")", "\n", "\n", "# set-up training variables", "\n", "", "train_loader", "=", "self", ".", "get_train_data_loader", "(", "train_set", ",", "iter", ")", "\n", "iter_range", "=", "list", "(", "range", "(", "iter", ",", "self", ".", "n_train_iters", ")", ")", "\n", "eta_total", "=", "utils", ".", "ETA", "(", "length", "=", "len", "(", "iter_range", ")", ")", "\n", "mean_loss", "=", "utils", ".", "CumulativeMovingAverage", "(", ")", "\n", "net", ".", "train", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "# init frequencies", "\n", "self", ".", "save_frequency", ".", "set_train_set_len", "(", "len", "(", "train_set", ")", ")", "\n", "self", ".", "eval_frequency", ".", "set_train_set_len", "(", "len", "(", "train_set", ")", ")", "\n", "self", ".", "save_frequency", ".", "reset", "(", ")", "\n", "self", ".", "eval_frequency", ".", "reset", "(", ")", "\n", "\n", "self", ".", "stopwatch", ".", "reset", "(", ")", "\n", "self", ".", "stopwatch", ".", "start", "(", "\"total\"", ")", "\n", "self", ".", "stopwatch", ".", "start", "(", "\"data\"", ")", "\n", "for", "iter", ",", "data", "in", "zip", "(", "iter_range", ",", "train_loader", ")", ":", "\n", "# set-up", "\n", "            ", "self", ".", "train_iter_messages", "=", "[", "f\"train {iter+1}/{self.n_train_iters}\"", "]", "\n", "\n", "# copy data", "\n", "self", ".", "copy_data", "(", "data", ",", "device", "=", "self", ".", "train_device", ",", "train", "=", "True", ")", "\n", "self", ".", "stopwatch", ".", "stop", "(", "\"data\"", ")", "\n", "\n", "# forward pass", "\n", "self", ".", "stopwatch", ".", "start", "(", "\"forward\"", ")", "\n", "output", "=", "self", ".", "net_forward", "(", "net", ",", "train", "=", "True", ",", "iter", "=", "iter", ")", "\n", "if", "\"cuda\"", "in", "self", ".", "train_device", ":", "\n", "                ", "torch", ".", "cuda", ".", "synchronize", "(", ")", "\n", "", "self", ".", "stopwatch", ".", "stop", "(", "\"forward\"", ")", "\n", "\n", "# evaluate loss, convert loss values to scalars", "\n", "self", ".", "stopwatch", ".", "start", "(", "\"loss\"", ")", "\n", "errs", "=", "self", ".", "loss_forward", "(", "output", ",", "train", "=", "True", ",", "iter", "=", "iter", ")", "\n", "self", ".", "free_copied_data", "(", ")", "\n", "try", ":", "\n", "                ", "err", "=", "sum", "(", "\n", "[", "v", "if", "torch", ".", "is_tensor", "(", "v", ")", "else", "sum", "(", "v", ")", "for", "v", "in", "errs", ".", "values", "(", ")", "]", "\n", ")", "\n", "err_items", "=", "{", "}", "\n", "for", "k", "in", "errs", ".", "keys", "(", ")", ":", "\n", "                    ", "if", "torch", ".", "is_tensor", "(", "errs", "[", "k", "]", ")", ":", "\n", "                        ", "err_items", "[", "k", "]", "=", "errs", "[", "k", "]", ".", "item", "(", ")", "\n", "", "else", ":", "\n", "                        ", "err_items", "[", "k", "]", "=", "[", "v", ".", "item", "(", ")", "for", "v", "in", "errs", "[", "k", "]", "]", "\n", "", "", "del", "errs", "\n", "mean_loss", ".", "append", "(", "err_items", ")", "\n", "", "except", "TypeError", "as", "type_error", ":", "\n", "                ", "self", ".", "train_iter_messages", ".", "append", "(", "\n", "f\"No loss computed due to TypeError: {type_error}\"", "\n", ")", "\n", "eta_total", ".", "inc", "(", ")", "\n", "self", ".", "train_iter_messages", ".", "append", "(", "\n", "f\"{self.save_frequency.n_resets}/{self.save_frequency.get_str(percentage=True, elapsed=False, remaining=True)}\"", "\n", ")", "\n", "self", ".", "train_iter_messages", ".", "append", "(", "\n", "f\"{eta_total.get_str(percentage=True, elapsed=True, remaining=True)}\"", "\n", ")", "\n", "logging", ".", "info", "(", "\" | \"", ".", "join", "(", "self", ".", "train_iter_messages", ")", ")", "\n", "continue", "\n", "", "if", "\"cuda\"", "in", "self", ".", "train_device", ":", "\n", "                ", "torch", ".", "cuda", ".", "synchronize", "(", ")", "\n", "", "self", ".", "stopwatch", ".", "stop", "(", "\"loss\"", ")", "\n", "\n", "# backward pass", "\n", "self", ".", "stopwatch", ".", "start", "(", "\"backward\"", ")", "\n", "if", "self", ".", "train_batch_acc_steps", ">", "1", ":", "\n", "                ", "err", "=", "err", "/", "self", ".", "train_batch_acc_steps", "\n", "", "err", ".", "backward", "(", ")", "\n", "self", ".", "callback_train_post_backward", "(", "\n", "net", "=", "net", ",", "errs", "=", "err_items", ",", "output", "=", "output", ",", "iter", "=", "iter", "\n", ")", "\n", "if", "\"cuda\"", "in", "self", ".", "train_device", ":", "\n", "                ", "torch", ".", "cuda", ".", "synchronize", "(", ")", "\n", "", "self", ".", "stopwatch", ".", "stop", "(", "\"backward\"", ")", "\n", "\n", "# optimizer step", "\n", "optimizer_steped", "=", "False", "\n", "if", "(", "iter", "+", "1", ")", "%", "self", ".", "train_batch_acc_steps", "==", "0", ":", "\n", "                ", "self", ".", "stopwatch", ".", "start", "(", "\"optimizer\"", ")", "\n", "if", "self", ".", "clip_gradient_value", "is", "not", "None", ":", "\n", "                    ", "torch", ".", "nn", ".", "utils", ".", "clip_grad_value_", "(", "\n", "net", ".", "parameters", "(", ")", ",", "self", ".", "clip_gradient_value", "\n", ")", "\n", "", "if", "self", ".", "clip_gradient_norm", "is", "not", "None", ":", "\n", "                    ", "torch", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "\n", "net", ".", "parameters", "(", ")", ",", "self", ".", "clip_gradient_norm", "\n", ")", "\n", "", "optimizer", ".", "step", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "optimizer_steped", "=", "True", "\n", "if", "\"cuda\"", "in", "self", ".", "train_device", ":", "\n", "                    ", "torch", ".", "cuda", ".", "synchronize", "(", ")", "\n", "", "self", ".", "stopwatch", ".", "stop", "(", "\"optimizer\"", ")", "\n", "\n", "# evaluate frequencies", "\n", "", "do_save", "=", "self", ".", "save_frequency", ".", "advance", "(", ")", "\n", "do_eval", "=", "self", ".", "eval_frequency", ".", "advance", "(", ")", "\n", "\n", "# show progress", "\n", "eta_total", ".", "inc", "(", ")", "\n", "if", "iter", "<", "128", "or", "iter", "%", "train_set", ".", "logging_rate", "==", "0", ":", "\n", "                ", "err_str", "=", "self", ".", "format_err_str", "(", "err_items", ")", "\n", "self", ".", "train_iter_messages", ".", "append", "(", "\n", "f\"loss={err_str} ({'y' if optimizer_steped else 'n'}{np.sum(mean_loss.vals_list()):0.4f})\"", "\n", ")", "\n", "self", ".", "train_iter_messages", ".", "append", "(", "\n", "f\"{self.save_frequency.n_resets}/{self.save_frequency.get_str(percentage=True, elapsed=False, remaining=True)}\"", "\n", ")", "\n", "self", ".", "train_iter_messages", ".", "append", "(", "\n", "f\"{eta_total.get_str(percentage=True, elapsed=True, remaining=True)}\"", "\n", ")", "\n", "logging", ".", "info", "(", "\" | \"", ".", "join", "(", "self", ".", "train_iter_messages", ")", ")", "\n", "\n", "", "self", ".", "stopwatch", ".", "stop", "(", "\"total\"", ")", "\n", "\n", "# save state and network params", "\n", "if", "do_save", "or", "iter", "==", "iter_range", "[", "-", "1", "]", ":", "\n", "# store network", "\n", "                ", "net_path", "=", "self", ".", "get_net_path", "(", "iter", ")", "\n", "logging", ".", "info", "(", "\"-\"", "*", "80", ")", "\n", "logging", ".", "info", "(", "f\"save network to {net_path}\"", ")", "\n", "torch", ".", "save", "(", "net", ".", "state_dict", "(", ")", ",", "str", "(", "net_path", ")", ")", "\n", "\n", "# store state", "\n", "state_dict", "=", "{", "\n", "\"iter\"", ":", "iter", ",", "\n", "\"state_dict\"", ":", "net", ".", "state_dict", "(", ")", ",", "\n", "\"optimizer\"", ":", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "\"cpu_rng_state\"", ":", "torch", ".", "get_rng_state", "(", ")", ",", "\n", "}", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "                    ", "state_dict", "[", "\"gpu_rng_state\"", "]", "=", "torch", ".", "cuda", ".", "get_rng_state", "(", ")", "\n", "", "state_tmp_path", "=", "self", ".", "exp_out_root", "/", "\"state.dict.tmp\"", "\n", "logging", ".", "info", "(", "f\"save state to {state_tmp_path}\"", ")", "\n", "torch", ".", "save", "(", "state_dict", ",", "str", "(", "state_tmp_path", ")", ")", "\n", "logging", ".", "info", "(", "f\"rename {state_tmp_path} to {state_path}\"", ")", "\n", "state_tmp_path", ".", "rename", "(", "state_path", ")", "\n", "\n", "# log avergae train loss and  average timing", "\n", "self", ".", "metric_add_train", "(", "\n", "iter", ",", "\"loss\"", ",", "np", ".", "sum", "(", "mean_loss", ".", "vals_list", "(", ")", ")", "\n", ")", "\n", "err_str", "=", "self", ".", "format_err_str", "(", "mean_loss", ".", "vals", ")", "\n", "mean_loss", ".", "reset", "(", ")", "\n", "logging", ".", "info", "(", "\"-\"", "*", "80", ")", "\n", "logging", ".", "info", "(", "f\"avg train_loss={err_str}\"", ")", "\n", "logging", ".", "info", "(", "f\"timings: {self.stopwatch}\"", ")", "\n", "logging", ".", "info", "(", "\"=\"", "*", "80", ")", "\n", "self", ".", "stopwatch", ".", "reset", "(", ")", "\n", "\n", "# commit logger", "\n", "self", ".", "db_logger", ".", "commit", "(", ")", "\n", "\n", "# eval network", "\n", "", "if", "do_eval", ":", "\n", "                ", "self", ".", "eval", "(", "\n", "iter", ",", "net", ",", "eval_sets", ",", "epoch", "=", "self", ".", "save_frequency", ".", "n_resets", "\n", ")", "\n", "net", "=", "net", ".", "to", "(", "self", ".", "train_device", ")", "\n", "net", ".", "train", "(", ")", "\n", "logging", ".", "info", "(", "\"\"", ")", "\n", "logging", ".", "info", "(", "\"=\"", "*", "80", ")", "\n", "\n", "# update lr", "\n", "", "if", "lr_scheduler", "is", "not", "None", ":", "\n", "                ", "old_lr", "=", "lr_scheduler", ".", "get_lr", "(", ")", "\n", "lr_scheduler", ".", "step", "(", ")", "\n", "new_lr", "=", "lr_scheduler", ".", "get_lr", "(", ")", "\n", "if", "old_lr", "!=", "new_lr", ":", "\n", "                    ", "logging", ".", "info", "(", "\n", "f\"Update LR {old_lr} => {new_lr} via lr_scheduler iter={iter}\"", "\n", ")", "\n", "\n", "", "", "self", ".", "stopwatch", ".", "start", "(", "\"total\"", ")", "\n", "self", ".", "stopwatch", ".", "start", "(", "\"data\"", ")", "\n", "# end of iter loop", "\n", "\n", "", "logging", ".", "info", "(", "\"=\"", "*", "80", ")", "\n", "logging", ".", "info", "(", "\"Finished training\"", ")", "\n", "log_datetime", "(", ")", "\n", "logging", ".", "info", "(", "\"=\"", "*", "80", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.log_datetime": [[20, 22], ["logging.info", "datetime.datetime.now().strftime", "datetime.datetime.now"], "function", ["None"], ["def", "log_datetime", "(", ")", ":", "\n", "    ", "logging", ".", "info", "(", "datetime", ".", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "\"%Y-%m-%d %H:%M:%S\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.log_cuda_mem": [[24, 33], ["logging.info", "logging.info", "logging.info", "torch.cuda.memory_allocated", "torch.cuda.memory_allocated", "torch.cuda.max_memory_allocated", "torch.cuda.max_memory_allocated", "torch.cuda.memory_cached", "torch.cuda.memory_cached"], "function", ["None"], ["", "def", "log_cuda_mem", "(", ")", ":", "\n", "    ", "logging", ".", "info", "(", "\n", "f\"current memory allocated: {torch.cuda.memory_allocated() / 1024**2:.2f} MB\"", "\n", ")", "\n", "logging", ".", "info", "(", "\n", "f\"max memory allocated:     {torch.cuda.max_memory_allocated() / 1024**2:.2f} MB\"", "\n", ")", "\n", "logging", ".", "info", "(", "\n", "f\"cached memory:            {torch.cuda.memory_cached() / 1024**2:.2f} MB\"", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.log_tensor_memory_report": [[36, 45], ["gc.get_objects", "torch.is_tensor", "torch.is_tensor", "logging.info", "hasattr", "torch.is_tensor", "torch.is_tensor", "type", "obj.size"], "function", ["None"], ["", "def", "log_tensor_memory_report", "(", ")", ":", "\n", "    ", "for", "obj", "in", "gc", ".", "get_objects", "(", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "if", "torch", ".", "is_tensor", "(", "obj", ")", "or", "(", "\n", "hasattr", "(", "obj", ",", "\"data\"", ")", "and", "torch", ".", "is_tensor", "(", "obj", ".", "data", ")", "\n", ")", ":", "\n", "                ", "logging", ".", "info", "(", "f\"{type(obj)}: {obj.size()}\"", ")", "\n", "", "", "except", ":", "\n", "            ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.get_parser": [[47, 68], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument"], "function", ["None"], ["", "", "", "def", "get_parser", "(", "additional_commands", "=", "None", ")", ":", "\n", "    ", "commands", "=", "[", "\"retrain\"", ",", "\"resume\"", ",", "\"eval\"", ",", "\"eval-init\"", ",", "\"slurm\"", "]", "\n", "if", "additional_commands", ":", "\n", "        ", "commands", "+=", "additional_commands", "\n", "", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\"--cmd\"", ",", "type", "=", "str", ",", "default", "=", "\"resume\"", ",", "choices", "=", "commands", ")", "\n", "parser", ".", "add_argument", "(", "\"--log-env-info\"", ",", "type", "=", "utils", ".", "str2bool", ",", "default", "=", "False", ")", "\n", "parser", ".", "add_argument", "(", "\"--iter\"", ",", "type", "=", "str", ",", "nargs", "=", "\"*\"", ",", "default", "=", "[", "]", ")", "\n", "parser", ".", "add_argument", "(", "\"--eval-net-root\"", ",", "type", "=", "str", ",", "default", "=", "\"\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--experiments-root\"", ",", "type", "=", "str", ",", "default", "=", "\"./experiments\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--slurm-cmd\"", ",", "type", "=", "str", ",", "default", "=", "\"resume\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--slurm-queue\"", ",", "type", "=", "str", ",", "default", "=", "\"gpu\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--slurm-n-gpus\"", ",", "type", "=", "int", ",", "default", "=", "1", ")", "\n", "parser", ".", "add_argument", "(", "\"--slurm-n-cpus\"", ",", "type", "=", "int", ",", "default", "=", "-", "1", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--slurm-time\"", ",", "\n", "type", "=", "str", ",", "\n", "default", "=", "\"2-00:00\"", ",", "\n", "help", "=", "'Acceptable time formats include \"minutes\", \"minutes:seconds\", \"hours:minutes:seconds\", \"days-hours\", \"days-hours:minutes\" and \"days-hours:minutes:seconds\"'", ",", "\n", ")", "\n", "return", "parser", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.dataset_rng": [[198, 202], ["numpy.random.RandomState", "np.random.RandomState.seed"], "function", ["None"], ["", "", "def", "dataset_rng", "(", "idx", ")", ":", "\n", "    ", "rng", "=", "np", ".", "random", ".", "RandomState", "(", ")", "\n", "rng", ".", "seed", "(", "idx", ")", "\n", "return", "rng", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.setup_for_latex": [[12, 24], ["matplotlib.rc", "matplotlib.rcParams.update"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.ETA.update"], ["def", "setup_for_latex", "(", "font_size", "=", "28", ")", ":", "\n", "# mpl.rc(\"font\", **{\"family\": \"sans-serif\", \"sans-serif\": [\"Helvetica\"]})", "\n", "    ", "mpl", ".", "rc", "(", "\"text\"", ",", "usetex", "=", "True", ")", "\n", "params", "=", "{", "\n", "\"legend.fontsize\"", ":", "\"large\"", ",", "\n", "\"axes.labelsize\"", ":", "font_size", ",", "\n", "\"axes.titlesize\"", ":", "font_size", ",", "\n", "\"xtick.labelsize\"", ":", "font_size", "*", "0.75", ",", "\n", "\"ytick.labelsize\"", ":", "font_size", "*", "0.75", ",", "\n", "\"axes.titlepad\"", ":", "25", ",", "\n", "}", "\n", "plt", ".", "rcParams", ".", "update", "(", "params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.save": [[26, 43], ["os.path.dirname", "plt.gcf.savefig", "matplotlib.gcf", "os.makedirs", "plt.gcf.subplots_adjust", "os.path.exists", "ax.axis", "ax.margins", "ax.xaxis.set_major_locator", "ax.yaxis.set_major_locator", "matplotlib.NullLocator", "matplotlib.NullLocator"], "function", ["None"], ["", "def", "save", "(", "path", ",", "remove_axis", "=", "False", ",", "dpi", "=", "300", ",", "fig", "=", "None", ")", ":", "\n", "    ", "if", "fig", "is", "None", ":", "\n", "        ", "fig", "=", "plt", ".", "gcf", "(", ")", "\n", "", "dirname", "=", "os", ".", "path", ".", "dirname", "(", "path", ")", "\n", "if", "dirname", "!=", "\"\"", "and", "not", "os", ".", "path", ".", "exists", "(", "dirname", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "dirname", ")", "\n", "", "if", "remove_axis", ":", "\n", "        ", "for", "ax", "in", "fig", ".", "axes", ":", "\n", "            ", "ax", ".", "axis", "(", "\"off\"", ")", "\n", "ax", ".", "margins", "(", "0", ",", "0", ")", "\n", "", "fig", ".", "subplots_adjust", "(", "\n", "top", "=", "1", ",", "bottom", "=", "0", ",", "right", "=", "1", ",", "left", "=", "0", ",", "hspace", "=", "0", ",", "wspace", "=", "0", "\n", ")", "\n", "for", "ax", "in", "fig", ".", "axes", ":", "\n", "            ", "ax", ".", "xaxis", ".", "set_major_locator", "(", "plt", ".", "NullLocator", "(", ")", ")", "\n", "ax", ".", "yaxis", ".", "set_major_locator", "(", "plt", ".", "NullLocator", "(", ")", ")", "\n", "", "", "fig", ".", "savefig", "(", "path", ",", "dpi", "=", "dpi", ",", "bbox_inches", "=", "\"tight\"", ",", "pad_inches", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.non_annoying_pause": [[45, 60], ["time.sleep", "matplotlib._pylab_helpers.Gcf.get_active", "canvas.start_event_loop", "canvas.draw", "matplotlib.show"], "function", ["None"], ["", "def", "non_annoying_pause", "(", "interval", ",", "focus_figure", "=", "False", ")", ":", "\n", "# interval is in seconds", "\n", "# https://github.com/matplotlib/matplotlib/issues/11131", "\n", "    ", "backend", "=", "mpl", ".", "rcParams", "[", "\"backend\"", "]", "\n", "if", "backend", "in", "_interactive_bk", ":", "\n", "        ", "figManager", "=", "_pylab_helpers", ".", "Gcf", ".", "get_active", "(", ")", "\n", "if", "figManager", "is", "not", "None", ":", "\n", "            ", "canvas", "=", "figManager", ".", "canvas", "\n", "if", "canvas", ".", "figure", ".", "stale", ":", "\n", "                ", "canvas", ".", "draw", "(", ")", "\n", "", "if", "focus_figure", ":", "\n", "                ", "plt", ".", "show", "(", "block", "=", "False", ")", "\n", "", "canvas", ".", "start_event_loop", "(", "interval", ")", "\n", "return", "\n", "", "", "time", ".", "sleep", "(", "interval", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.remove_all_ticks": [[62, 68], ["matplotlib.gcf", "ax.axes.get_xaxis().set_visible", "ax.axes.get_yaxis().set_visible", "ax.axes.get_xaxis", "ax.axes.get_yaxis"], "function", ["None"], ["", "def", "remove_all_ticks", "(", "fig", "=", "None", ")", ":", "\n", "    ", "if", "fig", "is", "None", ":", "\n", "        ", "fig", "=", "plt", ".", "gcf", "(", ")", "\n", "", "for", "ax", "in", "fig", ".", "axes", ":", "\n", "        ", "ax", ".", "axes", ".", "get_xaxis", "(", ")", ".", "set_visible", "(", "False", ")", "\n", "ax", ".", "axes", ".", "get_yaxis", "(", ")", ".", "set_visible", "(", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.tight_no_ticks": [[70, 75], ["plt.gcf.tight_layout", "plt.remove_all_ticks", "matplotlib.gcf"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.remove_all_ticks"], ["", "", "def", "tight_no_ticks", "(", "fig", "=", "None", ")", ":", "\n", "    ", "if", "fig", "is", "None", ":", "\n", "        ", "fig", "=", "plt", ".", "gcf", "(", ")", "\n", "", "fig", ".", "tight_layout", "(", ")", "\n", "remove_all_ticks", "(", "fig", "=", "fig", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.tight_no_ticks_show": [[77, 80], ["plt.tight_no_ticks", "matplotlib.show"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.tight_no_ticks"], ["", "def", "tight_no_ticks_show", "(", "fig", "=", "None", ")", ":", "\n", "    ", "tight_no_ticks", "(", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.maximize_window": [[82, 85], ["matplotlib.get_current_fig_manager", "plt.get_current_fig_manager.full_screen_toggle"], "function", ["None"], ["", "def", "maximize_window", "(", ")", ":", "\n", "    ", "mng", "=", "plt", ".", "get_current_fig_manager", "(", ")", "\n", "mng", ".", "full_screen_toggle", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.image_colorcode": [[87, 103], ["matplotlib.get_cmap", "im_.copy", "numpy.logical_not", "plt.get_cmap.", "numpy.nanmin", "numpy.nanmax", "numpy.isfinite", "cm.clip"], "function", ["None"], ["", "def", "image_colorcode", "(", "\n", "im_", ",", "cmap", "=", "\"viridis\"", ",", "vmin", "=", "None", ",", "vmax", "=", "None", ",", "nan_color", "=", "(", "1", ",", "1", ",", "1", ")", "\n", ")", ":", "\n", "    ", "cm", "=", "plt", ".", "get_cmap", "(", "cmap", ")", "\n", "im", "=", "im_", ".", "copy", "(", ")", "\n", "if", "vmin", "is", "None", ":", "\n", "        ", "vmin", "=", "np", ".", "nanmin", "(", "im", ")", "\n", "", "if", "vmax", "is", "None", ":", "\n", "        ", "vmax", "=", "np", ".", "nanmax", "(", "im", ")", "\n", "", "mask", "=", "np", ".", "logical_not", "(", "np", ".", "isfinite", "(", "im", ")", ")", "\n", "im", "[", "mask", "]", "=", "vmin", "\n", "im", "=", "(", "im", ".", "clip", "(", "vmin", ",", "vmax", ")", "-", "vmin", ")", "/", "(", "vmax", "-", "vmin", ")", "\n", "im", "=", "cm", "(", "im", ")", "\n", "im", "=", "im", "[", "...", ",", ":", "3", "]", "\n", "im", "[", "mask", "]", "=", "nan_color", "\n", "return", "im", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.image_matrix": [[105, 125], ["len", "numpy.full", "range", "int", "int", "range", "numpy.ceil", "numpy.ceil", "numpy.sqrt", "numpy.sqrt"], "function", ["None"], ["", "def", "image_matrix", "(", "ims", ",", "bgval", "=", "0", ",", "x", "=", "1", ",", "y", "=", "1", ")", ":", "\n", "    ", "n", "=", "len", "(", "ims", ")", "\n", "cols", "=", "x", "*", "int", "(", "np", ".", "ceil", "(", "np", ".", "sqrt", "(", "n", "/", "(", "x", "*", "y", ")", ")", ")", ")", "\n", "rows", "=", "y", "*", "int", "(", "np", ".", "ceil", "(", "np", ".", "sqrt", "(", "n", "/", "(", "x", "*", "y", ")", ")", ")", ")", "\n", "if", "(", "rows", "-", "1", ")", "*", "cols", ">=", "n", ":", "\n", "        ", "rows", "-=", "1", "\n", "", "if", "rows", "*", "(", "cols", "-", "1", ")", ">=", "n", ":", "\n", "        ", "cols", "-=", "1", "\n", "", "h", "=", "ims", "[", "0", "]", ".", "shape", "[", "0", "]", "\n", "w", "=", "ims", "[", "0", "]", ".", "shape", "[", "1", "]", "\n", "mat", "=", "np", ".", "full", "(", "\n", "(", "rows", "*", "h", ",", "cols", "*", "w", ",", "*", "ims", "[", "0", "]", ".", "shape", "[", "2", ":", "]", ")", ",", "bgval", ",", "dtype", "=", "ims", "[", "0", "]", ".", "dtype", "\n", ")", "\n", "idx", "=", "0", "\n", "for", "r", "in", "range", "(", "rows", ")", ":", "\n", "        ", "for", "c", "in", "range", "(", "cols", ")", ":", "\n", "            ", "if", "idx", "<", "n", ":", "\n", "                ", "mat", "[", "r", "*", "h", ":", "(", "r", "+", "1", ")", "*", "h", ",", "c", "*", "w", ":", "(", "c", "+", "1", ")", "*", "w", "]", "=", "ims", "[", "idx", "]", "\n", "idx", "+=", "1", "\n", "", "", "", "return", "mat", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.image_cat2": [[127, 169], ["numpy.zeros", "max", "max", "max", "row.append", "len", "ims_.append", "len", "ims_.append"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append"], ["", "def", "image_cat2", "(", "ims", ",", "cmap", "=", "\"viridis\"", ",", "default", "=", "(", "0", ",", "0", ",", "0", ")", ",", "max_ims_per_row", "=", "None", ")", ":", "\n", "# ims ... 2d list of images", "\n", "    ", "if", "max_ims_per_row", "is", "not", "None", ":", "\n", "        ", "ims_", "=", "[", "]", "\n", "for", "im_row", "in", "ims", ":", "\n", "            ", "row", "=", "[", "]", "\n", "for", "im", "in", "im_row", ":", "\n", "                ", "row", ".", "append", "(", "im", ")", "\n", "if", "len", "(", "row", ")", "==", "max_ims_per_row", ":", "\n", "                    ", "ims_", ".", "append", "(", "row", ")", "\n", "row", "=", "[", "]", "\n", "", "", "if", "len", "(", "row", ")", ">", "0", ":", "\n", "                ", "ims_", ".", "append", "(", "row", ")", "\n", "", "", "ims", "=", "ims_", "\n", "\n", "", "rows", ",", "cols", "=", "0", ",", "0", "\n", "for", "row", "in", "ims", ":", "\n", "        ", "max_r", ",", "c", "=", "0", ",", "0", "\n", "for", "im", "in", "row", ":", "\n", "            ", "if", "im", "is", "None", ":", "\n", "                ", "continue", "\n", "", "h", ",", "w", "=", "im", ".", "shape", "[", "0", "]", ",", "im", ".", "shape", "[", "1", "]", "\n", "max_r", "=", "max", "(", "max_r", ",", "h", ")", "\n", "c", "+=", "w", "\n", "", "rows", "+=", "max_r", "\n", "cols", "=", "max", "(", "cols", ",", "c", ")", "\n", "\n", "", "out", "=", "np", ".", "zeros", "(", "(", "rows", ",", "cols", ",", "3", ")", ",", "dtype", "=", "im", ".", "dtype", ")", "\n", "out", "[", "...", ",", ":", "]", "=", "default", "\n", "offr", "=", "0", "\n", "for", "row", "in", "ims", ":", "\n", "        ", "max_r", ",", "offc", "=", "0", ",", "0", "\n", "for", "im", "in", "row", ":", "\n", "            ", "if", "im", "is", "None", ":", "\n", "                ", "continue", "\n", "", "h", ",", "w", "=", "im", ".", "shape", "[", "0", "]", ",", "im", ".", "shape", "[", "1", "]", "\n", "out", "[", "offr", ":", "offr", "+", "h", ",", "offc", ":", "offc", "+", "w", "]", "=", "im", "\n", "max_r", "=", "max", "(", "max_r", ",", "h", ")", "\n", "offc", "+=", "w", "\n", "", "offr", "+=", "max_r", "\n", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.depthshow": [[171, 177], ["depth.copy", "plt.gca.imshow", "matplotlib.gca"], "function", ["None"], ["", "def", "depthshow", "(", "depth", ",", "*", "args", ",", "ax", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "    ", "if", "ax", "is", "None", ":", "\n", "        ", "ax", "=", "plt", ".", "gca", "(", ")", "\n", "", "d", "=", "depth", ".", "copy", "(", ")", "\n", "d", "[", "d", "<=", "0", "]", "=", "np", ".", "NaN", "\n", "ax", ".", "imshow", "(", "d", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.normalshow": [[179, 184], ["plt.gca.imshow", "matplotlib.gca"], "function", ["None"], ["", "def", "normalshow", "(", "normals", ",", "*", "args", ",", "ax", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "    ", "if", "ax", "is", "None", ":", "\n", "        ", "ax", "=", "plt", ".", "gca", "(", ")", "\n", "", "normals", "=", "0.5", "*", "normals", "+", "0.5", "\n", "ax", ".", "imshow", "(", "normals", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.create_ax_3d": [[186, 190], ["plt.gcf.add_subplot", "matplotlib.gcf"], "function", ["None"], ["", "def", "create_ax_3d", "(", "fig", "=", "None", ")", ":", "\n", "    ", "if", "fig", "is", "None", ":", "\n", "        ", "fig", "=", "plt", ".", "gcf", "(", ")", "\n", "", "return", "fig", ".", "add_subplot", "(", "111", ",", "projection", "=", "\"3d\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.axis_equal_3d": [[192, 204], ["numpy.array", "numpy.mean", "max", "zip", "matplotlib.gca", "abs", "getattr", "getattr"], "function", ["None"], ["", "def", "axis_equal_3d", "(", "ax", "=", "None", ")", ":", "\n", "    ", "if", "ax", "is", "None", ":", "\n", "        ", "ax", "=", "plt", ".", "gca", "(", ")", "\n", "", "extents", "=", "np", ".", "array", "(", "\n", "[", "getattr", "(", "ax", ",", "\"get_{}lim\"", ".", "format", "(", "dim", ")", ")", "(", ")", "for", "dim", "in", "\"xyz\"", "]", "\n", ")", "\n", "sz", "=", "extents", "[", ":", ",", "1", "]", "-", "extents", "[", ":", ",", "0", "]", "\n", "centers", "=", "np", ".", "mean", "(", "extents", ",", "axis", "=", "1", ")", "\n", "maxsize", "=", "max", "(", "abs", "(", "sz", ")", ")", "\n", "r", "=", "maxsize", "/", "2", "\n", "for", "ctr", ",", "dim", "in", "zip", "(", "centers", ",", "\"xyz\"", ")", ":", "\n", "        ", "getattr", "(", "ax", ",", "\"set_{}lim\"", ".", "format", "(", "dim", ")", ")", "(", "ctr", "-", "r", ",", "ctr", "+", "r", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.axis_label_3d": [[206, 212], ["plt.gca.set_xlabel", "plt.gca.set_ylabel", "plt.gca.set_zlabel", "matplotlib.gca"], "function", ["None"], ["", "", "def", "axis_label_3d", "(", "ax", "=", "None", ",", "x", "=", "\"x\"", ",", "y", "=", "\"y\"", ",", "z", "=", "\"z\"", ")", ":", "\n", "    ", "if", "ax", "is", "None", ":", "\n", "        ", "ax", "=", "plt", ".", "gca", "(", ")", "\n", "", "ax", ".", "set_xlabel", "(", "x", ")", "\n", "ax", ".", "set_ylabel", "(", "y", ")", "\n", "ax", ".", "set_zlabel", "(", "z", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt._cmap": [[214, 220], ["matplotlib.colors.LinearSegmentedColormap.from_list", "mpl.colors.LinearSegmentedColormap.from_list.reversed"], "function", ["None"], ["", "def", "_cmap", "(", "name", ",", "cm_data", ",", "reverse", "=", "False", ")", ":", "\n", "    ", "cmap", "=", "mpl", ".", "colors", ".", "LinearSegmentedColormap", ".", "from_list", "(", "name", ",", "cm_data", ")", "\n", "if", "reverse", ":", "\n", "        ", "return", "cmap", ".", "reversed", "(", ")", "\n", "", "else", ":", "\n", "        ", "return", "cmap", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_linear_turbo": [[222, 483], ["plt._cmap"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt._cmap"], ["", "", "def", "cmap_linear_turbo", "(", "reverse", "=", "False", ")", ":", "\n", "# Google AI colormap, like Jet but C2 continuous (not perceptually linear)", "\n", "    ", "cm_data", "=", "[", "\n", "[", "0.18995", ",", "0.07176", ",", "0.23217", "]", ",", "\n", "[", "0.19483", ",", "0.08339", ",", "0.26149", "]", ",", "\n", "[", "0.19956", ",", "0.09498", ",", "0.29024", "]", ",", "\n", "[", "0.20415", ",", "0.10652", ",", "0.31844", "]", ",", "\n", "[", "0.20860", ",", "0.11802", ",", "0.34607", "]", ",", "\n", "[", "0.21291", ",", "0.12947", ",", "0.37314", "]", ",", "\n", "[", "0.21708", ",", "0.14087", ",", "0.39964", "]", ",", "\n", "[", "0.22111", ",", "0.15223", ",", "0.42558", "]", ",", "\n", "[", "0.22500", ",", "0.16354", ",", "0.45096", "]", ",", "\n", "[", "0.22875", ",", "0.17481", ",", "0.47578", "]", ",", "\n", "[", "0.23236", ",", "0.18603", ",", "0.50004", "]", ",", "\n", "[", "0.23582", ",", "0.19720", ",", "0.52373", "]", ",", "\n", "[", "0.23915", ",", "0.20833", ",", "0.54686", "]", ",", "\n", "[", "0.24234", ",", "0.21941", ",", "0.56942", "]", ",", "\n", "[", "0.24539", ",", "0.23044", ",", "0.59142", "]", ",", "\n", "[", "0.24830", ",", "0.24143", ",", "0.61286", "]", ",", "\n", "[", "0.25107", ",", "0.25237", ",", "0.63374", "]", ",", "\n", "[", "0.25369", ",", "0.26327", ",", "0.65406", "]", ",", "\n", "[", "0.25618", ",", "0.27412", ",", "0.67381", "]", ",", "\n", "[", "0.25853", ",", "0.28492", ",", "0.69300", "]", ",", "\n", "[", "0.26074", ",", "0.29568", ",", "0.71162", "]", ",", "\n", "[", "0.26280", ",", "0.30639", ",", "0.72968", "]", ",", "\n", "[", "0.26473", ",", "0.31706", ",", "0.74718", "]", ",", "\n", "[", "0.26652", ",", "0.32768", ",", "0.76412", "]", ",", "\n", "[", "0.26816", ",", "0.33825", ",", "0.78050", "]", ",", "\n", "[", "0.26967", ",", "0.34878", ",", "0.79631", "]", ",", "\n", "[", "0.27103", ",", "0.35926", ",", "0.81156", "]", ",", "\n", "[", "0.27226", ",", "0.36970", ",", "0.82624", "]", ",", "\n", "[", "0.27334", ",", "0.38008", ",", "0.84037", "]", ",", "\n", "[", "0.27429", ",", "0.39043", ",", "0.85393", "]", ",", "\n", "[", "0.27509", ",", "0.40072", ",", "0.86692", "]", ",", "\n", "[", "0.27576", ",", "0.41097", ",", "0.87936", "]", ",", "\n", "[", "0.27628", ",", "0.42118", ",", "0.89123", "]", ",", "\n", "[", "0.27667", ",", "0.43134", ",", "0.90254", "]", ",", "\n", "[", "0.27691", ",", "0.44145", ",", "0.91328", "]", ",", "\n", "[", "0.27701", ",", "0.45152", ",", "0.92347", "]", ",", "\n", "[", "0.27698", ",", "0.46153", ",", "0.93309", "]", ",", "\n", "[", "0.27680", ",", "0.47151", ",", "0.94214", "]", ",", "\n", "[", "0.27648", ",", "0.48144", ",", "0.95064", "]", ",", "\n", "[", "0.27603", ",", "0.49132", ",", "0.95857", "]", ",", "\n", "[", "0.27543", ",", "0.50115", ",", "0.96594", "]", ",", "\n", "[", "0.27469", ",", "0.51094", ",", "0.97275", "]", ",", "\n", "[", "0.27381", ",", "0.52069", ",", "0.97899", "]", ",", "\n", "[", "0.27273", ",", "0.53040", ",", "0.98461", "]", ",", "\n", "[", "0.27106", ",", "0.54015", ",", "0.98930", "]", ",", "\n", "[", "0.26878", ",", "0.54995", ",", "0.99303", "]", ",", "\n", "[", "0.26592", ",", "0.55979", ",", "0.99583", "]", ",", "\n", "[", "0.26252", ",", "0.56967", ",", "0.99773", "]", ",", "\n", "[", "0.25862", ",", "0.57958", ",", "0.99876", "]", ",", "\n", "[", "0.25425", ",", "0.58950", ",", "0.99896", "]", ",", "\n", "[", "0.24946", ",", "0.59943", ",", "0.99835", "]", ",", "\n", "[", "0.24427", ",", "0.60937", ",", "0.99697", "]", ",", "\n", "[", "0.23874", ",", "0.61931", ",", "0.99485", "]", ",", "\n", "[", "0.23288", ",", "0.62923", ",", "0.99202", "]", ",", "\n", "[", "0.22676", ",", "0.63913", ",", "0.98851", "]", ",", "\n", "[", "0.22039", ",", "0.64901", ",", "0.98436", "]", ",", "\n", "[", "0.21382", ",", "0.65886", ",", "0.97959", "]", ",", "\n", "[", "0.20708", ",", "0.66866", ",", "0.97423", "]", ",", "\n", "[", "0.20021", ",", "0.67842", ",", "0.96833", "]", ",", "\n", "[", "0.19326", ",", "0.68812", ",", "0.96190", "]", ",", "\n", "[", "0.18625", ",", "0.69775", ",", "0.95498", "]", ",", "\n", "[", "0.17923", ",", "0.70732", ",", "0.94761", "]", ",", "\n", "[", "0.17223", ",", "0.71680", ",", "0.93981", "]", ",", "\n", "[", "0.16529", ",", "0.72620", ",", "0.93161", "]", ",", "\n", "[", "0.15844", ",", "0.73551", ",", "0.92305", "]", ",", "\n", "[", "0.15173", ",", "0.74472", ",", "0.91416", "]", ",", "\n", "[", "0.14519", ",", "0.75381", ",", "0.90496", "]", ",", "\n", "[", "0.13886", ",", "0.76279", ",", "0.89550", "]", ",", "\n", "[", "0.13278", ",", "0.77165", ",", "0.88580", "]", ",", "\n", "[", "0.12698", ",", "0.78037", ",", "0.87590", "]", ",", "\n", "[", "0.12151", ",", "0.78896", ",", "0.86581", "]", ",", "\n", "[", "0.11639", ",", "0.79740", ",", "0.85559", "]", ",", "\n", "[", "0.11167", ",", "0.80569", ",", "0.84525", "]", ",", "\n", "[", "0.10738", ",", "0.81381", ",", "0.83484", "]", ",", "\n", "[", "0.10357", ",", "0.82177", ",", "0.82437", "]", ",", "\n", "[", "0.10026", ",", "0.82955", ",", "0.81389", "]", ",", "\n", "[", "0.09750", ",", "0.83714", ",", "0.80342", "]", ",", "\n", "[", "0.09532", ",", "0.84455", ",", "0.79299", "]", ",", "\n", "[", "0.09377", ",", "0.85175", ",", "0.78264", "]", ",", "\n", "[", "0.09287", ",", "0.85875", ",", "0.77240", "]", ",", "\n", "[", "0.09267", ",", "0.86554", ",", "0.76230", "]", ",", "\n", "[", "0.09320", ",", "0.87211", ",", "0.75237", "]", ",", "\n", "[", "0.09451", ",", "0.87844", ",", "0.74265", "]", ",", "\n", "[", "0.09662", ",", "0.88454", ",", "0.73316", "]", ",", "\n", "[", "0.09958", ",", "0.89040", ",", "0.72393", "]", ",", "\n", "[", "0.10342", ",", "0.89600", ",", "0.71500", "]", ",", "\n", "[", "0.10815", ",", "0.90142", ",", "0.70599", "]", ",", "\n", "[", "0.11374", ",", "0.90673", ",", "0.69651", "]", ",", "\n", "[", "0.12014", ",", "0.91193", ",", "0.68660", "]", ",", "\n", "[", "0.12733", ",", "0.91701", ",", "0.67627", "]", ",", "\n", "[", "0.13526", ",", "0.92197", ",", "0.66556", "]", ",", "\n", "[", "0.14391", ",", "0.92680", ",", "0.65448", "]", ",", "\n", "[", "0.15323", ",", "0.93151", ",", "0.64308", "]", ",", "\n", "[", "0.16319", ",", "0.93609", ",", "0.63137", "]", ",", "\n", "[", "0.17377", ",", "0.94053", ",", "0.61938", "]", ",", "\n", "[", "0.18491", ",", "0.94484", ",", "0.60713", "]", ",", "\n", "[", "0.19659", ",", "0.94901", ",", "0.59466", "]", ",", "\n", "[", "0.20877", ",", "0.95304", ",", "0.58199", "]", ",", "\n", "[", "0.22142", ",", "0.95692", ",", "0.56914", "]", ",", "\n", "[", "0.23449", ",", "0.96065", ",", "0.55614", "]", ",", "\n", "[", "0.24797", ",", "0.96423", ",", "0.54303", "]", ",", "\n", "[", "0.26180", ",", "0.96765", ",", "0.52981", "]", ",", "\n", "[", "0.27597", ",", "0.97092", ",", "0.51653", "]", ",", "\n", "[", "0.29042", ",", "0.97403", ",", "0.50321", "]", ",", "\n", "[", "0.30513", ",", "0.97697", ",", "0.48987", "]", ",", "\n", "[", "0.32006", ",", "0.97974", ",", "0.47654", "]", ",", "\n", "[", "0.33517", ",", "0.98234", ",", "0.46325", "]", ",", "\n", "[", "0.35043", ",", "0.98477", ",", "0.45002", "]", ",", "\n", "[", "0.36581", ",", "0.98702", ",", "0.43688", "]", ",", "\n", "[", "0.38127", ",", "0.98909", ",", "0.42386", "]", ",", "\n", "[", "0.39678", ",", "0.99098", ",", "0.41098", "]", ",", "\n", "[", "0.41229", ",", "0.99268", ",", "0.39826", "]", ",", "\n", "[", "0.42778", ",", "0.99419", ",", "0.38575", "]", ",", "\n", "[", "0.44321", ",", "0.99551", ",", "0.37345", "]", ",", "\n", "[", "0.45854", ",", "0.99663", ",", "0.36140", "]", ",", "\n", "[", "0.47375", ",", "0.99755", ",", "0.34963", "]", ",", "\n", "[", "0.48879", ",", "0.99828", ",", "0.33816", "]", ",", "\n", "[", "0.50362", ",", "0.99879", ",", "0.32701", "]", ",", "\n", "[", "0.51822", ",", "0.99910", ",", "0.31622", "]", ",", "\n", "[", "0.53255", ",", "0.99919", ",", "0.30581", "]", ",", "\n", "[", "0.54658", ",", "0.99907", ",", "0.29581", "]", ",", "\n", "[", "0.56026", ",", "0.99873", ",", "0.28623", "]", ",", "\n", "[", "0.57357", ",", "0.99817", ",", "0.27712", "]", ",", "\n", "[", "0.58646", ",", "0.99739", ",", "0.26849", "]", ",", "\n", "[", "0.59891", ",", "0.99638", ",", "0.26038", "]", ",", "\n", "[", "0.61088", ",", "0.99514", ",", "0.25280", "]", ",", "\n", "[", "0.62233", ",", "0.99366", ",", "0.24579", "]", ",", "\n", "[", "0.63323", ",", "0.99195", ",", "0.23937", "]", ",", "\n", "[", "0.64362", ",", "0.98999", ",", "0.23356", "]", ",", "\n", "[", "0.65394", ",", "0.98775", ",", "0.22835", "]", ",", "\n", "[", "0.66428", ",", "0.98524", ",", "0.22370", "]", ",", "\n", "[", "0.67462", ",", "0.98246", ",", "0.21960", "]", ",", "\n", "[", "0.68494", ",", "0.97941", ",", "0.21602", "]", ",", "\n", "[", "0.69525", ",", "0.97610", ",", "0.21294", "]", ",", "\n", "[", "0.70553", ",", "0.97255", ",", "0.21032", "]", ",", "\n", "[", "0.71577", ",", "0.96875", ",", "0.20815", "]", ",", "\n", "[", "0.72596", ",", "0.96470", ",", "0.20640", "]", ",", "\n", "[", "0.73610", ",", "0.96043", ",", "0.20504", "]", ",", "\n", "[", "0.74617", ",", "0.95593", ",", "0.20406", "]", ",", "\n", "[", "0.75617", ",", "0.95121", ",", "0.20343", "]", ",", "\n", "[", "0.76608", ",", "0.94627", ",", "0.20311", "]", ",", "\n", "[", "0.77591", ",", "0.94113", ",", "0.20310", "]", ",", "\n", "[", "0.78563", ",", "0.93579", ",", "0.20336", "]", ",", "\n", "[", "0.79524", ",", "0.93025", ",", "0.20386", "]", ",", "\n", "[", "0.80473", ",", "0.92452", ",", "0.20459", "]", ",", "\n", "[", "0.81410", ",", "0.91861", ",", "0.20552", "]", ",", "\n", "[", "0.82333", ",", "0.91253", ",", "0.20663", "]", ",", "\n", "[", "0.83241", ",", "0.90627", ",", "0.20788", "]", ",", "\n", "[", "0.84133", ",", "0.89986", ",", "0.20926", "]", ",", "\n", "[", "0.85010", ",", "0.89328", ",", "0.21074", "]", ",", "\n", "[", "0.85868", ",", "0.88655", ",", "0.21230", "]", ",", "\n", "[", "0.86709", ",", "0.87968", ",", "0.21391", "]", ",", "\n", "[", "0.87530", ",", "0.87267", ",", "0.21555", "]", ",", "\n", "[", "0.88331", ",", "0.86553", ",", "0.21719", "]", ",", "\n", "[", "0.89112", ",", "0.85826", ",", "0.21880", "]", ",", "\n", "[", "0.89870", ",", "0.85087", ",", "0.22038", "]", ",", "\n", "[", "0.90605", ",", "0.84337", ",", "0.22188", "]", ",", "\n", "[", "0.91317", ",", "0.83576", ",", "0.22328", "]", ",", "\n", "[", "0.92004", ",", "0.82806", ",", "0.22456", "]", ",", "\n", "[", "0.92666", ",", "0.82025", ",", "0.22570", "]", ",", "\n", "[", "0.93301", ",", "0.81236", ",", "0.22667", "]", ",", "\n", "[", "0.93909", ",", "0.80439", ",", "0.22744", "]", ",", "\n", "[", "0.94489", ",", "0.79634", ",", "0.22800", "]", ",", "\n", "[", "0.95039", ",", "0.78823", ",", "0.22831", "]", ",", "\n", "[", "0.95560", ",", "0.78005", ",", "0.22836", "]", ",", "\n", "[", "0.96049", ",", "0.77181", ",", "0.22811", "]", ",", "\n", "[", "0.96507", ",", "0.76352", ",", "0.22754", "]", ",", "\n", "[", "0.96931", ",", "0.75519", ",", "0.22663", "]", ",", "\n", "[", "0.97323", ",", "0.74682", ",", "0.22536", "]", ",", "\n", "[", "0.97679", ",", "0.73842", ",", "0.22369", "]", ",", "\n", "[", "0.98000", ",", "0.73000", ",", "0.22161", "]", ",", "\n", "[", "0.98289", ",", "0.72140", ",", "0.21918", "]", ",", "\n", "[", "0.98549", ",", "0.71250", ",", "0.21650", "]", ",", "\n", "[", "0.98781", ",", "0.70330", ",", "0.21358", "]", ",", "\n", "[", "0.98986", ",", "0.69382", ",", "0.21043", "]", ",", "\n", "[", "0.99163", ",", "0.68408", ",", "0.20706", "]", ",", "\n", "[", "0.99314", ",", "0.67408", ",", "0.20348", "]", ",", "\n", "[", "0.99438", ",", "0.66386", ",", "0.19971", "]", ",", "\n", "[", "0.99535", ",", "0.65341", ",", "0.19577", "]", ",", "\n", "[", "0.99607", ",", "0.64277", ",", "0.19165", "]", ",", "\n", "[", "0.99654", ",", "0.63193", ",", "0.18738", "]", ",", "\n", "[", "0.99675", ",", "0.62093", ",", "0.18297", "]", ",", "\n", "[", "0.99672", ",", "0.60977", ",", "0.17842", "]", ",", "\n", "[", "0.99644", ",", "0.59846", ",", "0.17376", "]", ",", "\n", "[", "0.99593", ",", "0.58703", ",", "0.16899", "]", ",", "\n", "[", "0.99517", ",", "0.57549", ",", "0.16412", "]", ",", "\n", "[", "0.99419", ",", "0.56386", ",", "0.15918", "]", ",", "\n", "[", "0.99297", ",", "0.55214", ",", "0.15417", "]", ",", "\n", "[", "0.99153", ",", "0.54036", ",", "0.14910", "]", ",", "\n", "[", "0.98987", ",", "0.52854", ",", "0.14398", "]", ",", "\n", "[", "0.98799", ",", "0.51667", ",", "0.13883", "]", ",", "\n", "[", "0.98590", ",", "0.50479", ",", "0.13367", "]", ",", "\n", "[", "0.98360", ",", "0.49291", ",", "0.12849", "]", ",", "\n", "[", "0.98108", ",", "0.48104", ",", "0.12332", "]", ",", "\n", "[", "0.97837", ",", "0.46920", ",", "0.11817", "]", ",", "\n", "[", "0.97545", ",", "0.45740", ",", "0.11305", "]", ",", "\n", "[", "0.97234", ",", "0.44565", ",", "0.10797", "]", ",", "\n", "[", "0.96904", ",", "0.43399", ",", "0.10294", "]", ",", "\n", "[", "0.96555", ",", "0.42241", ",", "0.09798", "]", ",", "\n", "[", "0.96187", ",", "0.41093", ",", "0.09310", "]", ",", "\n", "[", "0.95801", ",", "0.39958", ",", "0.08831", "]", ",", "\n", "[", "0.95398", ",", "0.38836", ",", "0.08362", "]", ",", "\n", "[", "0.94977", ",", "0.37729", ",", "0.07905", "]", ",", "\n", "[", "0.94538", ",", "0.36638", ",", "0.07461", "]", ",", "\n", "[", "0.94084", ",", "0.35566", ",", "0.07031", "]", ",", "\n", "[", "0.93612", ",", "0.34513", ",", "0.06616", "]", ",", "\n", "[", "0.93125", ",", "0.33482", ",", "0.06218", "]", ",", "\n", "[", "0.92623", ",", "0.32473", ",", "0.05837", "]", ",", "\n", "[", "0.92105", ",", "0.31489", ",", "0.05475", "]", ",", "\n", "[", "0.91572", ",", "0.30530", ",", "0.05134", "]", ",", "\n", "[", "0.91024", ",", "0.29599", ",", "0.04814", "]", ",", "\n", "[", "0.90463", ",", "0.28696", ",", "0.04516", "]", ",", "\n", "[", "0.89888", ",", "0.27824", ",", "0.04243", "]", ",", "\n", "[", "0.89298", ",", "0.26981", ",", "0.03993", "]", ",", "\n", "[", "0.88691", ",", "0.26152", ",", "0.03753", "]", ",", "\n", "[", "0.88066", ",", "0.25334", ",", "0.03521", "]", ",", "\n", "[", "0.87422", ",", "0.24526", ",", "0.03297", "]", ",", "\n", "[", "0.86760", ",", "0.23730", ",", "0.03082", "]", ",", "\n", "[", "0.86079", ",", "0.22945", ",", "0.02875", "]", ",", "\n", "[", "0.85380", ",", "0.22170", ",", "0.02677", "]", ",", "\n", "[", "0.84662", ",", "0.21407", ",", "0.02487", "]", ",", "\n", "[", "0.83926", ",", "0.20654", ",", "0.02305", "]", ",", "\n", "[", "0.83172", ",", "0.19912", ",", "0.02131", "]", ",", "\n", "[", "0.82399", ",", "0.19182", ",", "0.01966", "]", ",", "\n", "[", "0.81608", ",", "0.18462", ",", "0.01809", "]", ",", "\n", "[", "0.80799", ",", "0.17753", ",", "0.01660", "]", ",", "\n", "[", "0.79971", ",", "0.17055", ",", "0.01520", "]", ",", "\n", "[", "0.79125", ",", "0.16368", ",", "0.01387", "]", ",", "\n", "[", "0.78260", ",", "0.15693", ",", "0.01264", "]", ",", "\n", "[", "0.77377", ",", "0.15028", ",", "0.01148", "]", ",", "\n", "[", "0.76476", ",", "0.14374", ",", "0.01041", "]", ",", "\n", "[", "0.75556", ",", "0.13731", ",", "0.00942", "]", ",", "\n", "[", "0.74617", ",", "0.13098", ",", "0.00851", "]", ",", "\n", "[", "0.73661", ",", "0.12477", ",", "0.00769", "]", ",", "\n", "[", "0.72686", ",", "0.11867", ",", "0.00695", "]", ",", "\n", "[", "0.71692", ",", "0.11268", ",", "0.00629", "]", ",", "\n", "[", "0.70680", ",", "0.10680", ",", "0.00571", "]", ",", "\n", "[", "0.69650", ",", "0.10102", ",", "0.00522", "]", ",", "\n", "[", "0.68602", ",", "0.09536", ",", "0.00481", "]", ",", "\n", "[", "0.67535", ",", "0.08980", ",", "0.00449", "]", ",", "\n", "[", "0.66449", ",", "0.08436", ",", "0.00424", "]", ",", "\n", "[", "0.65345", ",", "0.07902", ",", "0.00408", "]", ",", "\n", "[", "0.64223", ",", "0.07380", ",", "0.00401", "]", ",", "\n", "[", "0.63082", ",", "0.06868", ",", "0.00401", "]", ",", "\n", "[", "0.61923", ",", "0.06367", ",", "0.00410", "]", ",", "\n", "[", "0.60746", ",", "0.05878", ",", "0.00427", "]", ",", "\n", "[", "0.59550", ",", "0.05399", ",", "0.00453", "]", ",", "\n", "[", "0.58336", ",", "0.04931", ",", "0.00486", "]", ",", "\n", "[", "0.57103", ",", "0.04474", ",", "0.00529", "]", ",", "\n", "[", "0.55852", ",", "0.04028", ",", "0.00579", "]", ",", "\n", "[", "0.54583", ",", "0.03593", ",", "0.00638", "]", ",", "\n", "[", "0.53295", ",", "0.03169", ",", "0.00705", "]", ",", "\n", "[", "0.51989", ",", "0.02756", ",", "0.00780", "]", ",", "\n", "[", "0.50664", ",", "0.02354", ",", "0.00863", "]", ",", "\n", "[", "0.49321", ",", "0.01963", ",", "0.00955", "]", ",", "\n", "[", "0.47960", ",", "0.01583", ",", "0.01055", "]", ",", "\n", "]", "\n", "return", "_cmap", "(", "\"linear_turbo\"", ",", "cm_data", ",", "reverse", "=", "reverse", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_linear_parula": [[485, 555], ["plt._cmap"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt._cmap"], ["", "def", "cmap_linear_parula", "(", "reverse", "=", "False", ")", ":", "\n", "# Matlab color map", "\n", "# linear colormap, perceptually uniform", "\n", "    ", "cm_data", "=", "[", "\n", "[", "0.2081", ",", "0.1663", ",", "0.5292", "]", ",", "\n", "[", "0.2116238095", ",", "0.1897809524", ",", "0.5776761905", "]", ",", "\n", "[", "0.212252381", ",", "0.2137714286", ",", "0.6269714286", "]", ",", "\n", "[", "0.2081", ",", "0.2386", ",", "0.6770857143", "]", ",", "\n", "[", "0.1959047619", ",", "0.2644571429", ",", "0.7279", "]", ",", "\n", "[", "0.1707285714", ",", "0.2919380952", ",", "0.779247619", "]", ",", "\n", "[", "0.1252714286", ",", "0.3242428571", ",", "0.8302714286", "]", ",", "\n", "[", "0.0591333333", ",", "0.3598333333", ",", "0.8683333333", "]", ",", "\n", "[", "0.0116952381", ",", "0.3875095238", ",", "0.8819571429", "]", ",", "\n", "[", "0.0059571429", ",", "0.4086142857", ",", "0.8828428571", "]", ",", "\n", "[", "0.0165142857", ",", "0.4266", ",", "0.8786333333", "]", ",", "\n", "[", "0.032852381", ",", "0.4430428571", ",", "0.8719571429", "]", ",", "\n", "[", "0.0498142857", ",", "0.4585714286", ",", "0.8640571429", "]", ",", "\n", "[", "0.0629333333", ",", "0.4736904762", ",", "0.8554380952", "]", ",", "\n", "[", "0.0722666667", ",", "0.4886666667", ",", "0.8467", "]", ",", "\n", "[", "0.0779428571", ",", "0.5039857143", ",", "0.8383714286", "]", ",", "\n", "[", "0.079347619", ",", "0.5200238095", ",", "0.8311809524", "]", ",", "\n", "[", "0.0749428571", ",", "0.5375428571", ",", "0.8262714286", "]", ",", "\n", "[", "0.0640571429", ",", "0.5569857143", ",", "0.8239571429", "]", ",", "\n", "[", "0.0487714286", ",", "0.5772238095", ",", "0.8228285714", "]", ",", "\n", "[", "0.0343428571", ",", "0.5965809524", ",", "0.819852381", "]", ",", "\n", "[", "0.0265", ",", "0.6137", ",", "0.8135", "]", ",", "\n", "[", "0.0238904762", ",", "0.6286619048", ",", "0.8037619048", "]", ",", "\n", "[", "0.0230904762", ",", "0.6417857143", ",", "0.7912666667", "]", ",", "\n", "[", "0.0227714286", ",", "0.6534857143", ",", "0.7767571429", "]", ",", "\n", "[", "0.0266619048", ",", "0.6641952381", ",", "0.7607190476", "]", ",", "\n", "[", "0.0383714286", ",", "0.6742714286", ",", "0.743552381", "]", ",", "\n", "[", "0.0589714286", ",", "0.6837571429", ",", "0.7253857143", "]", ",", "\n", "[", "0.0843", ",", "0.6928333333", ",", "0.7061666667", "]", ",", "\n", "[", "0.1132952381", ",", "0.7015", ",", "0.6858571429", "]", ",", "\n", "[", "0.1452714286", ",", "0.7097571429", ",", "0.6646285714", "]", ",", "\n", "[", "0.1801333333", ",", "0.7176571429", ",", "0.6424333333", "]", ",", "\n", "[", "0.2178285714", ",", "0.7250428571", ",", "0.6192619048", "]", ",", "\n", "[", "0.2586428571", ",", "0.7317142857", ",", "0.5954285714", "]", ",", "\n", "[", "0.3021714286", ",", "0.7376047619", ",", "0.5711857143", "]", ",", "\n", "[", "0.3481666667", ",", "0.7424333333", ",", "0.5472666667", "]", ",", "\n", "[", "0.3952571429", ",", "0.7459", ",", "0.5244428571", "]", ",", "\n", "[", "0.4420095238", ",", "0.7480809524", ",", "0.5033142857", "]", ",", "\n", "[", "0.4871238095", ",", "0.7490619048", ",", "0.4839761905", "]", ",", "\n", "[", "0.5300285714", ",", "0.7491142857", ",", "0.4661142857", "]", ",", "\n", "[", "0.5708571429", ",", "0.7485190476", ",", "0.4493904762", "]", ",", "\n", "[", "0.609852381", ",", "0.7473142857", ",", "0.4336857143", "]", ",", "\n", "[", "0.6473", ",", "0.7456", ",", "0.4188", "]", ",", "\n", "[", "0.6834190476", ",", "0.7434761905", ",", "0.4044333333", "]", ",", "\n", "[", "0.7184095238", ",", "0.7411333333", ",", "0.3904761905", "]", ",", "\n", "[", "0.7524857143", ",", "0.7384", ",", "0.3768142857", "]", ",", "\n", "[", "0.7858428571", ",", "0.7355666667", ",", "0.3632714286", "]", ",", "\n", "[", "0.8185047619", ",", "0.7327333333", ",", "0.3497904762", "]", ",", "\n", "[", "0.8506571429", ",", "0.7299", ",", "0.3360285714", "]", ",", "\n", "[", "0.8824333333", ",", "0.7274333333", ",", "0.3217", "]", ",", "\n", "[", "0.9139333333", ",", "0.7257857143", ",", "0.3062761905", "]", ",", "\n", "[", "0.9449571429", ",", "0.7261142857", ",", "0.2886428571", "]", ",", "\n", "[", "0.9738952381", ",", "0.7313952381", ",", "0.266647619", "]", ",", "\n", "[", "0.9937714286", ",", "0.7454571429", ",", "0.240347619", "]", ",", "\n", "[", "0.9990428571", ",", "0.7653142857", ",", "0.2164142857", "]", ",", "\n", "[", "0.9955333333", ",", "0.7860571429", ",", "0.196652381", "]", ",", "\n", "[", "0.988", ",", "0.8066", ",", "0.1793666667", "]", ",", "\n", "[", "0.9788571429", ",", "0.8271428571", ",", "0.1633142857", "]", ",", "\n", "[", "0.9697", ",", "0.8481380952", ",", "0.147452381", "]", ",", "\n", "[", "0.9625857143", ",", "0.8705142857", ",", "0.1309", "]", ",", "\n", "[", "0.9588714286", ",", "0.8949", ",", "0.1132428571", "]", ",", "\n", "[", "0.9598238095", ",", "0.9218333333", ",", "0.0948380952", "]", ",", "\n", "[", "0.9661", ",", "0.9514428571", ",", "0.0755333333", "]", ",", "\n", "[", "0.9763", ",", "0.9831", ",", "0.0538", "]", ",", "\n", "]", "\n", "return", "_cmap", "(", "\"linear_parula\"", ",", "cm_data", ",", "reverse", "=", "reverse", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_linear_haline": [[557, 819], ["plt._cmap"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt._cmap"], ["", "def", "cmap_linear_haline", "(", "reverse", "=", "False", ")", ":", "\n", "# cmocean, MIT license", "\n", "# linear colormap, perceptually uniform", "\n", "    ", "cm_data", "=", "[", "\n", "[", "0.16295295", ",", "0.09521592", ",", "0.42257292", "]", ",", "\n", "[", "0.16481011", ",", "0.09635116", ",", "0.43184597", "]", ",", "\n", "[", "0.16661617", ",", "0.09744967", ",", "0.44120648", "]", ",", "\n", "[", "0.16836624", ",", "0.09851521", ",", "0.4506511", "]", ",", "\n", "[", "0.17005471", ",", "0.09955275", ",", "0.46017511", "]", ",", "\n", "[", "0.17167508", ",", "0.10056873", ",", "0.46977222", "]", ",", "\n", "[", "0.17321987", ",", "0.10157136", ",", "0.47943423", "]", ",", "\n", "[", "0.17468043", ",", "0.10257097", ",", "0.48915068", "]", ",", "\n", "[", "0.17604337", ",", "0.10356584", ",", "0.4989416", "]", ",", "\n", "[", "0.17729823", ",", "0.10458025", ",", "0.50877159", "]", ",", "\n", "[", "0.1784323", ",", "0.10563803", ",", "0.51861083", "]", ",", "\n", "[", "0.17942267", ",", "0.10674166", ",", "0.52848361", "]", ",", "\n", "[", "0.18025423", ",", "0.10793563", ",", "0.53832457", "]", ",", "\n", "[", "0.18089754", ",", "0.10923866", ",", "0.54813521", "]", ",", "\n", "[", "0.18132983", ",", "0.11070429", ",", "0.55784354", "]", ",", "\n", "[", "0.18150693", ",", "0.11236134", ",", "0.56744719", "]", ",", "\n", "[", "0.18139596", ",", "0.11428044", ",", "0.57685059", "]", ",", "\n", "[", "0.18094994", ",", "0.11652515", ",", "0.5859821", "]", ",", "\n", "[", "0.18011665", ",", "0.1191683", ",", "0.59474942", "]", ",", "\n", "[", "0.17884196", ",", "0.12228861", ",", "0.60303661", "]", ",", "\n", "[", "0.17707513", ",", "0.12596207", ",", "0.61070774", "]", ",", "\n", "[", "0.1747765", ",", "0.13024864", ",", "0.61761743", "]", ",", "\n", "[", "0.17192559", ",", "0.13517685", ",", "0.62362908", "]", ",", "\n", "[", "0.16853023", ",", "0.14073088", ",", "0.62863572", "]", ",", "\n", "[", "0.16463735", ",", "0.14684332", ",", "0.63257966", "]", ",", "\n", "[", "0.16031417", ",", "0.15340748", ",", "0.63547019", "]", ",", "\n", "[", "0.15565395", ",", "0.16029118", ",", "0.63737422", "]", ",", "\n", "[", "0.15073736", ",", "0.16736889", ",", "0.63839897", "]", ",", "\n", "[", "0.14564276", ",", "0.17452933", ",", "0.63866876", "]", ",", "\n", "[", "0.14043681", ",", "0.18168415", ",", "0.63830895", "]", ",", "\n", "[", "0.13517265", ",", "0.18876883", ",", "0.63743501", "]", ",", "\n", "[", "0.12989066", ",", "0.19573986", ",", "0.63614699", "]", ",", "\n", "[", "0.12462051", ",", "0.20257034", ",", "0.63452826", "]", ",", "\n", "[", "0.1193859", ",", "0.20924466", ",", "0.63264783", "]", ",", "\n", "[", "0.11422949", ",", "0.21574563", ",", "0.63057687", "]", ",", "\n", "[", "0.10914049", ",", "0.22208312", ",", "0.62834552", "]", ",", "\n", "[", "0.10414386", ",", "0.22825465", ",", "0.62599796", "]", ",", "\n", "[", "0.09926305", ",", "0.23426098", ",", "0.62357178", "]", ",", "\n", "[", "0.09449513", ",", "0.240114", ",", "0.62108167", "]", ",", "\n", "[", "0.08986952", ",", "0.24581472", ",", "0.61855919", "]", ",", "\n", "[", "0.08539286", ",", "0.25137295", ",", "0.61601663", "]", ",", "\n", "[", "0.08106757", ",", "0.25679971", ",", "0.61345967", "]", ",", "\n", "[", "0.07694419", ",", "0.26209156", ",", "0.61092383", "]", ",", "\n", "[", "0.07300704", ",", "0.2672655", ",", "0.6083965", "]", ",", "\n", "[", "0.06927651", ",", "0.2723273", ",", "0.60588732", "]", ",", "\n", "[", "0.06578801", ",", "0.27727895", ",", "0.60341418", "]", ",", "\n", "[", "0.06255595", ",", "0.28212824", ",", "0.60097879", "]", ",", "\n", "[", "0.05959205", ",", "0.28688317", ",", "0.59857975", "]", ",", "\n", "[", "0.05691772", ",", "0.29154887", ",", "0.5962215", "]", ",", "\n", "[", "0.05455347", ",", "0.29613025", ",", "0.5939076", "]", ",", "\n", "[", "0.0525189", ",", "0.30063184", ",", "0.59164148", "]", ",", "\n", "[", "0.05083877", ",", "0.30505623", ",", "0.58943153", "]", ",", "\n", "[", "0.04951454", ",", "0.30941022", ",", "0.58727149", "]", ",", "\n", "[", "0.0485549", ",", "0.31369777", ",", "0.58516273", "]", ",", "\n", "[", "0.04796369", ",", "0.3179226", ",", "0.58310625", "]", ",", "\n", "[", "0.04773946", ",", "0.32208826", ",", "0.58110273", "]", ",", "\n", "[", "0.04787545", ",", "0.32619809", ",", "0.57915259", "]", ",", "\n", "[", "0.04835985", ",", "0.33025524", ",", "0.57725602", "]", ",", "\n", "[", "0.04917639", ",", "0.3342627", ",", "0.57541302", "]", ",", "\n", "[", "0.05030519", ",", "0.3382233", ",", "0.57362343", "]", ",", "\n", "[", "0.05172369", ",", "0.34213968", ",", "0.57188697", "]", ",", "\n", "[", "0.05340768", ",", "0.34601437", ",", "0.57020322", "]", ",", "\n", "[", "0.05533215", ",", "0.34984975", ",", "0.5685717", "]", ",", "\n", "[", "0.05747218", ",", "0.35364807", ",", "0.56699183", "]", ",", "\n", "[", "0.05980352", ",", "0.35741146", ",", "0.56546298", "]", ",", "\n", "[", "0.06230309", ",", "0.36114193", ",", "0.56398445", "]", ",", "\n", "[", "0.06494928", ",", "0.36484141", ",", "0.56255553", "]", ",", "\n", "[", "0.06772215", ",", "0.3685117", ",", "0.56117544", "]", ",", "\n", "[", "0.07060351", ",", "0.37215453", ",", "0.55984338", "]", ",", "\n", "[", "0.0735784", ",", "0.37577101", ",", "0.55856129", "]", ",", "\n", "[", "0.07663101", ",", "0.379363", ",", "0.55732688", "]", ",", "\n", "[", "0.0797474", ",", "0.38293224", ",", "0.55613803", "]", ",", "\n", "[", "0.08291581", ",", "0.38648014", ",", "0.55499386", "]", ",", "\n", "[", "0.08612581", ",", "0.39000807", ",", "0.55389345", "]", ",", "\n", "[", "0.08936818", ",", "0.39351731", ",", "0.55283591", "]", ",", "\n", "[", "0.09263475", ",", "0.39700911", ",", "0.5518203", "]", ",", "\n", "[", "0.09591831", ",", "0.40048465", ",", "0.55084572", "]", ",", "\n", "[", "0.09921324", ",", "0.4039447", ",", "0.54991337", "]", ",", "\n", "[", "0.10251396", ",", "0.40739026", ",", "0.54902285", "]", ",", "\n", "[", "0.10581449", ",", "0.41082289", ",", "0.54817039", "]", ",", "\n", "[", "0.10911041", ",", "0.41424357", ",", "0.54735502", "]", ",", "\n", "[", "0.11239785", ",", "0.41765327", ",", "0.5465758", "]", ",", "\n", "[", "0.11567334", ",", "0.42105293", ",", "0.54583174", "]", ",", "\n", "[", "0.11893417", ",", "0.42444322", ",", "0.54512319", "]", ",", "\n", "[", "0.12217819", ",", "0.42782467", ",", "0.5444513", "]", ",", "\n", "[", "0.12540189", ",", "0.43119871", ",", "0.54381137", "]", ",", "\n", "[", "0.12860313", ",", "0.43456614", ",", "0.54320239", "]", ",", "\n", "[", "0.13177997", ",", "0.43792773", ",", "0.54262334", "]", ",", "\n", "[", "0.1349307", ",", "0.44128422", ",", "0.54207318", "]", ",", "\n", "[", "0.13805491", ",", "0.44463569", ",", "0.54155509", "]", ",", "\n", "[", "0.14115011", ",", "0.44798348", ",", "0.54106381", "]", ",", "\n", "[", "0.14421502", ",", "0.45132831", ",", "0.54059793", "]", ",", "\n", "[", "0.14724858", ",", "0.45467082", ",", "0.54015636", "]", ",", "\n", "[", "0.15024993", ",", "0.4580116", ",", "0.5397383", "]", ",", "\n", "[", "0.1532192", ",", "0.46135071", ",", "0.53934608", "]", ",", "\n", "[", "0.15615459", ",", "0.46468937", ",", "0.53897446", "]", ",", "\n", "[", "0.15905548", ",", "0.46802811", ",", "0.53862227", "]", ",", "\n", "[", "0.16192139", ",", "0.47136748", ",", "0.53828832", "]", ",", "\n", "[", "0.16475245", ",", "0.4747077", ",", "0.53797335", "]", ",", "\n", "[", "0.16754826", ",", "0.47804933", ",", "0.5376757", "]", ",", "\n", "[", "0.17030807", ",", "0.48139312", ",", "0.53739229", "]", ",", "\n", "[", "0.17303172", ",", "0.4847395", ",", "0.53712185", "]", ",", "\n", "[", "0.17571937", ",", "0.48808883", ",", "0.53686368", "]", ",", "\n", "[", "0.17837165", ",", "0.49144123", ",", "0.53661836", "]", ",", "\n", "[", "0.18098782", ",", "0.4947975", ",", "0.53638175", "]", ",", "\n", "[", "0.18356807", ",", "0.49815802", ",", "0.53615252", "]", ",", "\n", "[", "0.18611271", ",", "0.50152311", ",", "0.53592932", "]", ",", "\n", "[", "0.18862304", ",", "0.50489271", ",", "0.53571335", "]", ",", "\n", "[", "0.19109853", ",", "0.50826757", ",", "0.53550031", "]", ",", "\n", "[", "0.19353972", ",", "0.51164795", ",", "0.53528878", "]", ",", "\n", "[", "0.19594729", ",", "0.51503411", ",", "0.53507737", "]", ",", "\n", "[", "0.19832271", ",", "0.51842599", ",", "0.53486655", "]", ",", "\n", "[", "0.20066603", ",", "0.52182411", ",", "0.5346528", "]", ",", "\n", "[", "0.20297814", ",", "0.52522869", ",", "0.53443452", "]", ",", "\n", "[", "0.20526004", ",", "0.52863989", ",", "0.53421026", "]", ",", "\n", "[", "0.20751347", ",", "0.53205763", ",", "0.53398", "]", ",", "\n", "[", "0.20973895", ",", "0.53548228", ",", "0.53374061", "]", ",", "\n", "[", "0.21193777", ",", "0.53891395", ",", "0.53349055", "]", ",", "\n", "[", "0.21411134", ",", "0.54235271", ",", "0.53322838", "]", ",", "\n", "[", "0.21626158", ",", "0.54579847", ",", "0.53295358", "]", ",", "\n", "[", "0.21838953", ",", "0.54925145", ",", "0.53266342", "]", ",", "\n", "[", "0.2204969", ",", "0.55271165", ",", "0.53235648", "]", ",", "\n", "[", "0.22258553", ",", "0.55617904", ",", "0.53203143", "]", ",", "\n", "[", "0.22465737", ",", "0.55965355", ",", "0.53168703", "]", ",", "\n", "[", "0.22671414", ",", "0.56313522", ",", "0.53132127", "]", ",", "\n", "[", "0.22875792", ",", "0.56662395", ",", "0.53093283", "]", ",", "\n", "[", "0.23079087", ",", "0.57011965", ",", "0.53052033", "]", ",", "\n", "[", "0.23281507", ",", "0.57362224", ",", "0.53008206", "]", ",", "\n", "[", "0.23483286", ",", "0.57713158", ",", "0.52961673", "]", ",", "\n", "[", "0.23684665", ",", "0.58064749", ",", "0.52912308", "]", ",", "\n", "[", "0.23885883", ",", "0.58416983", ",", "0.52859959", "]", ",", "\n", "[", "0.24087168", ",", "0.5876985", ",", "0.52804439", "]", ",", "\n", "[", "0.24288806", ",", "0.59123319", ",", "0.52745678", "]", ",", "\n", "[", "0.24491068", ",", "0.59477367", ",", "0.52683562", "]", ",", "\n", "[", "0.24694203", ",", "0.59831977", ",", "0.52617913", "]", ",", "\n", "[", "0.24898467", ",", "0.60187131", ",", "0.5254855", "]", ",", "\n", "[", "0.25104184", ",", "0.60542788", ",", "0.52475455", "]", ",", "\n", "[", "0.25311648", ",", "0.60898917", ",", "0.5239853", "]", ",", "\n", "[", "0.25521116", ",", "0.61255501", ",", "0.52317565", "]", ",", "\n", "[", "0.25732863", ",", "0.61612516", ",", "0.52232392", "]", ",", "\n", "[", "0.25947244", ",", "0.61969909", ",", "0.52143048", "]", ",", "\n", "[", "0.26164566", ",", "0.62327645", ",", "0.52049446", "]", ",", "\n", "[", "0.26385093", ",", "0.62685702", ",", "0.51951365", "]", ",", "\n", "[", "0.26609108", ",", "0.63044055", ",", "0.51848614", "]", ",", "\n", "[", "0.26836985", ",", "0.63402641", ",", "0.51741302", "]", ",", "\n", "[", "0.27069035", ",", "0.63761419", ",", "0.51629357", "]", ",", "\n", "[", "0.27305542", ",", "0.64120359", ",", "0.51512593", "]", ",", "\n", "[", "0.27546763", ",", "0.64479445", ",", "0.51390698", "]", ",", "\n", "[", "0.2779309", ",", "0.64838599", ",", "0.51263903", "]", ",", "\n", "[", "0.28044833", ",", "0.65197775", ",", "0.51132146", "]", ",", "\n", "[", "0.283023", ",", "0.65556926", ",", "0.5099537", "]", ",", "\n", "[", "0.28565699", ",", "0.6591606", ",", "0.50852973", "]", ",", "\n", "[", "0.28835435", ",", "0.66275079", ",", "0.50705376", "]", ",", "\n", "[", "0.29111809", ",", "0.66633932", ",", "0.50552536", "]", ",", "\n", "[", "0.29395118", ",", "0.66992568", ",", "0.50394405", "]", ",", "\n", "[", "0.29685621", ",", "0.67350965", ",", "0.50230621", "]", ",", "\n", "[", "0.29983621", ",", "0.6770907", ",", "0.50061096", "]", ",", "\n", "[", "0.3028944", ",", "0.68066801", ",", "0.49886092", "]", ",", "\n", "[", "0.30603358", ",", "0.68424103", ",", "0.49705572", "]", ",", "\n", "[", "0.30925654", ",", "0.6878092", ",", "0.495195", "]", ",", "\n", "[", "0.31256595", ",", "0.69137231", ",", "0.4932732", "]", ",", "\n", "[", "0.31596475", ",", "0.69492953", ",", "0.49129275", "]", ",", "\n", "[", "0.31945565", ",", "0.6984801", ",", "0.48925534", "]", ",", "\n", "[", "0.32304124", ",", "0.70202339", ",", "0.48716074", "]", ",", "\n", "[", "0.3267241", ",", "0.70555876", ",", "0.48500876", "]", ",", "\n", "[", "0.33050708", ",", "0.70908574", ",", "0.48279556", "]", ",", "\n", "[", "0.33439297", ",", "0.71260364", ",", "0.48052013", "]", ",", "\n", "[", "0.33838396", ",", "0.71611153", ",", "0.47818646", "]", ",", "\n", "[", "0.34248248", ",", "0.71960867", ",", "0.47579452", "]", ",", "\n", "[", "0.34669093", ",", "0.72309429", ",", "0.47334431", "]", ",", "\n", "[", "0.3510117", ",", "0.72656762", ",", "0.4708359", "]", ",", "\n", "[", "0.35544775", ",", "0.73002792", ",", "0.46826672", "]", ",", "\n", "[", "0.36000221", ",", "0.73347437", ",", "0.46563433", "]", ",", "\n", "[", "0.36467645", ",", "0.73690592", ",", "0.46294413", "]", ",", "\n", "[", "0.36947282", ",", "0.74032165", ",", "0.46019651", "]", ",", "\n", "[", "0.37439369", ",", "0.7437206", ",", "0.45739197", "]", ",", "\n", "[", "0.37944143", ",", "0.74710175", ",", "0.45453114", "]", ",", "\n", "[", "0.38461841", ",", "0.75046408", ",", "0.45161478", "]", ",", "\n", "[", "0.38992704", ",", "0.75380647", ",", "0.44864382", "]", ",", "\n", "[", "0.39536975", ",", "0.75712778", ",", "0.44561937", "]", ",", "\n", "[", "0.40095086", ",", "0.76042675", ",", "0.44253806", "]", ",", "\n", "[", "0.4066714", ",", "0.76370211", ",", "0.43940565", "]", ",", "\n", "[", "0.41253348", ",", "0.76695254", ",", "0.43622497", "]", ",", "\n", "[", "0.41853957", ",", "0.77017668", ",", "0.43299833", "]", ",", "\n", "[", "0.42469214", ",", "0.77337305", ",", "0.42972841", "]", ",", "\n", "[", "0.43099366", ",", "0.77654014", ",", "0.42641835", "]", ",", "\n", "[", "0.4374466", ",", "0.77967637", ",", "0.4230718", "]", ",", "\n", "[", "0.44405337", ",", "0.78278006", ",", "0.41969303", "]", ",", "\n", "[", "0.45081634", ",", "0.78584949", ",", "0.41628696", "]", ",", "\n", "[", "0.45773776", ",", "0.78888286", ",", "0.41285929", "]", ",", "\n", "[", "0.46481977", ",", "0.79187831", ",", "0.40941661", "]", ",", "\n", "[", "0.47206428", ",", "0.7948339", ",", "0.4059665", "]", ",", "\n", "[", "0.47947297", ",", "0.79774769", ",", "0.40251764", "]", ",", "\n", "[", "0.4870472", ",", "0.80061765", ",", "0.39907996", "]", ",", "\n", "[", "0.49478789", ",", "0.80344179", ",", "0.39566477", "]", ",", "\n", "[", "0.50269545", ",", "0.80621808", ",", "0.39228485", "]", ",", "\n", "[", "0.51077223", ",", "0.80894416", ",", "0.38895135", "]", ",", "\n", "[", "0.51901758", ",", "0.81161801", ",", "0.38568043", "]", ",", "\n", "[", "0.52742705", ",", "0.81423825", ",", "0.38249349", "]", ",", "\n", "[", "0.53599744", ",", "0.81680329", ",", "0.37941065", "]", ",", "\n", "[", "0.5447243", ",", "0.8193118", ",", "0.37645392", "]", ",", "\n", "[", "0.55360175", ",", "0.82176277", ",", "0.37364707", "]", ",", "\n", "[", "0.56262239", ",", "0.82415554", ",", "0.37101546", "]", ",", "\n", "[", "0.57178017", ",", "0.8264893", ",", "0.36858305", "]", ",", "\n", "[", "0.58106198", ",", "0.82876481", ",", "0.36637986", "]", ",", "\n", "[", "0.59045227", ",", "0.83098363", ",", "0.36443634", "]", ",", "\n", "[", "0.59993631", ",", "0.83314747", ",", "0.3627802", "]", ",", "\n", "[", "0.60949784", ",", "0.8352587", ",", "0.36143806", "]", ",", "\n", "[", "0.61911788", ",", "0.83732074", ",", "0.3604355", "]", ",", "\n", "[", "0.62877531", ",", "0.83933797", ",", "0.35979568", "]", ",", "\n", "[", "0.63845159", ",", "0.84131462", ",", "0.35953618", "]", ",", "\n", "[", "0.64812757", ",", "0.84325556", ",", "0.35967077", "]", ",", "\n", "[", "0.65778455", ",", "0.84516598", ",", "0.36020866", "]", ",", "\n", "[", "0.66740471", ",", "0.84705131", ",", "0.36115427", "]", ",", "\n", "[", "0.67696176", ",", "0.84891984", ",", "0.36250963", "]", ",", "\n", "[", "0.68644876", ",", "0.85077489", ",", "0.36426656", "]", ",", "\n", "[", "0.69585443", ",", "0.85262128", ",", "0.36641547", "]", ",", "\n", "[", "0.70516856", ",", "0.85446373", ",", "0.36894368", "]", ",", "\n", "[", "0.71438303", ",", "0.85630656", ",", "0.37183582", "]", ",", "\n", "[", "0.72349176", ",", "0.85815365", ",", "0.3750745", "]", ",", "\n", "[", "0.73249065", ",", "0.86000837", ",", "0.37864099", "]", ",", "\n", "[", "0.74137736", ",", "0.86187357", ",", "0.3825159", "]", ",", "\n", "[", "0.7501512", ",", "0.86375161", ",", "0.38667965", "]", ",", "\n", "[", "0.75881284", ",", "0.86564434", ",", "0.39111303", "]", ",", "\n", "[", "0.76736417", ",", "0.8675532", ",", "0.39579749", "]", ",", "\n", "[", "0.77580803", ",", "0.86947917", ",", "0.40071548", "]", ",", "\n", "[", "0.78414804", ",", "0.87142291", ",", "0.40585059", "]", ",", "\n", "[", "0.79237773", ",", "0.87338865", ",", "0.41118249", "]", ",", "\n", "[", "0.80049763", ",", "0.87537819", ",", "0.41669356", "]", ",", "\n", "[", "0.80852429", ",", "0.87738718", ",", "0.42237605", "]", ",", "\n", "[", "0.81646307", ",", "0.87941518", ",", "0.42821863", "]", ",", "\n", "[", "0.82431945", ",", "0.88146161", ",", "0.43421127", "]", ",", "\n", "[", "0.83208604", ",", "0.88353084", ",", "0.44033585", "]", ",", "\n", "[", "0.83975443", ",", "0.88562785", ",", "0.44657232", "]", ",", "\n", "[", "0.8473544", ",", "0.88774214", ",", "0.45293066", "]", ",", "\n", "[", "0.85489132", ",", "0.88987266", ",", "0.45940532", "]", ",", "\n", "[", "0.86234095", ",", "0.89203075", ",", "0.46596504", "]", ",", "\n", "[", "0.86971917", ",", "0.89421116", ",", "0.47261258", "]", ",", "\n", "[", "0.87704795", ",", "0.89640559", ",", "0.4793596", "]", ",", "\n", "[", "0.88430614", ",", "0.89862422", ",", "0.48617718", "]", ",", "\n", "[", "0.89149679", ",", "0.90086694", ",", "0.49305896", "]", ",", "\n", "[", "0.89865066", ",", "0.90312109", ",", "0.50002982", "]", ",", "\n", "[", "0.90573286", ",", "0.90540326", ",", "0.50704449", "]", ",", "\n", "[", "0.91276817", ",", "0.90770328", ",", "0.51412293", "]", ",", "\n", "[", "0.91977198", ",", "0.91001483", ",", "0.52127748", "]", ",", "\n", "[", "0.92669995", ",", "0.91235949", ",", "0.52844799", "]", ",", "\n", "[", "0.93360939", ",", "0.91471118", ",", "0.53569895", "]", ",", "\n", "[", "0.94046103", ",", "0.91708934", ",", "0.5429753", "]", ",", "\n", "[", "0.94728035", ",", "0.91948254", ",", "0.55030445", "]", ",", "\n", "[", "0.95406597", ",", "0.92189212", ",", "0.55767999", "]", ",", "\n", "[", "0.96080498", ",", "0.92432523", ",", "0.56507901", "]", ",", "\n", "[", "0.96752874", ",", "0.92676689", ",", "0.57254139", "]", ",", "\n", "[", "0.97419673", ",", "0.92923821", ",", "0.58000416", "]", ",", "\n", "[", "0.9808627", ",", "0.93171248", ",", "0.58754258", "]", ",", "\n", "[", "0.98746841", ",", "0.93422029", ",", "0.59506489", "]", ",", "\n", "[", "0.99408058", ",", "0.93672758", ",", "0.60267", "]", ",", "\n", "]", "\n", "return", "_cmap", "(", "\"linear_haline\"", ",", "cm_data", ",", "reverse", "=", "reverse", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_linear_thermal": [[821, 1083], ["plt._cmap"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt._cmap"], ["", "def", "cmap_linear_thermal", "(", "reverse", "=", "False", ")", ":", "\n", "# cmocean, MIT license", "\n", "# linear colormap, perceptually uniform", "\n", "    ", "cm_data", "=", "[", "\n", "[", "0.01555601", ",", "0.13824425", ",", "0.20181089", "]", ",", "\n", "[", "0.01620184", ",", "0.14105074", ",", "0.20897651", "]", ",", "\n", "[", "0.01685649", ",", "0.14382701", ",", "0.21623868", "]", ",", "\n", "[", "0.0175264", ",", "0.14657173", ",", "0.2235997", "]", ",", "\n", "[", "0.01821872", ",", "0.14928346", ",", "0.23106187", "]", ",", "\n", "[", "0.01894138", ",", "0.15196073", ",", "0.23862748", "]", ",", "\n", "[", "0.01969968", ",", "0.15460145", ",", "0.24630497", "]", ",", "\n", "[", "0.02050332", ",", "0.15720378", ",", "0.25409711", "]", ",", "\n", "[", "0.02136721", ",", "0.15976645", ",", "0.26199915", "]", ",", "\n", "[", "0.02230341", ",", "0.16228755", ",", "0.27001321", "]", ",", "\n", "[", "0.0233252", ",", "0.16476505", ",", "0.27814139", "]", ",", "\n", "[", "0.02444728", ",", "0.16719678", ",", "0.28638573", "]", ",", "\n", "[", "0.02568582", ",", "0.16958042", ",", "0.29474817", "]", ",", "\n", "[", "0.02705867", ",", "0.1719135", ",", "0.30323056", "]", ",", "\n", "[", "0.02858553", ",", "0.17419338", ",", "0.31183463", "]", ",", "\n", "[", "0.03028808", ",", "0.17641726", ",", "0.32056191", "]", ",", "\n", "[", "0.03219022", ",", "0.17858215", ",", "0.32941369", "]", ",", "\n", "[", "0.03431826", ",", "0.18068487", ",", "0.33839101", "]", ",", "\n", "[", "0.03670118", ",", "0.18272205", ",", "0.34749451", "]", ",", "\n", "[", "0.03937082", ",", "0.18469014", ",", "0.35672441", "]", ",", "\n", "[", "0.04230474", ",", "0.18658537", ",", "0.36608039", "]", ",", "\n", "[", "0.04544128", ",", "0.1884038", ",", "0.37556146", "]", ",", "\n", "[", "0.04879889", ",", "0.1901413", ",", "0.38516584", "]", ",", "\n", "[", "0.05238565", ",", "0.19179358", ",", "0.39489082", "]", ",", "\n", "[", "0.05620897", ",", "0.19335621", ",", "0.40473254", "]", ",", "\n", "[", "0.06027561", ",", "0.19482469", ",", "0.41468582", "]", ",", "\n", "[", "0.06459519", ",", "0.19618775", ",", "0.42477146", "]", ",", "\n", "[", "0.06917294", ",", "0.19744583", ",", "0.43495728", "]", ",", "\n", "[", "0.07401398", ",", "0.19859437", ",", "0.44523225", "]", ",", "\n", "[", "0.07912633", ",", "0.19962514", ",", "0.45559656", "]", ",", "\n", "[", "0.08452075", ",", "0.20052842", ",", "0.46605087", "]", ",", "\n", "[", "0.09019392", ",", "0.20130794", ",", "0.47654788", "]", ",", "\n", "[", "0.09616431", ",", "0.20194725", ",", "0.48710445", "]", ",", "\n", "[", "0.1024254", ",", "0.20245202", ",", "0.49766462", "]", ",", "\n", "[", "0.10899443", ",", "0.20280889", ",", "0.50822709", "]", ",", "\n", "[", "0.11585974", ",", "0.20302735", ",", "0.51872453", "]", ",", "\n", "[", "0.12304243", ",", "0.2030938", ",", "0.52914838", "]", ",", "\n", "[", "0.13052767", ",", "0.20302178", ",", "0.53942012", "]", ",", "\n", "[", "0.13830991", ",", "0.20281956", ",", "0.54947678", "]", ",", "\n", "[", "0.14637971", ",", "0.20250018", ",", "0.55924613", "]", ",", "\n", "[", "0.15471863", ",", "0.20208507", ",", "0.56864226", "]", ",", "\n", "[", "0.16329705", ",", "0.20160546", ",", "0.57756769", "]", ",", "\n", "[", "0.17207282", ",", "0.20110273", ",", "0.58591838", "]", ",", "\n", "[", "0.18099176", ",", "0.20062705", ",", "0.59359182", "]", ",", "\n", "[", "0.18999022", ",", "0.20023416", ",", "0.60049707", "]", ",", "\n", "[", "0.19899974", ",", "0.19998029", ",", "0.60656515", "]", ",", "\n", "[", "0.20795298", ",", "0.19991643", ",", "0.61175706", "]", ",", "\n", "[", "0.21678952", ",", "0.20008303", ",", "0.61606739", "]", ",", "\n", "[", "0.22546043", ",", "0.20050671", ",", "0.61952279", "]", ",", "\n", "[", "0.23393063", ",", "0.2011992", ",", "0.62217608", "]", ",", "\n", "[", "0.24217907", ",", "0.20215872", ",", "0.62409793", "]", ",", "\n", "[", "0.25019713", ",", "0.20337273", ",", "0.62536824", "]", ",", "\n", "[", "0.25798611", ",", "0.20482134", ",", "0.62606879", "]", ",", "\n", "[", "0.26555442", ",", "0.20648047", ",", "0.62627797", "]", ",", "\n", "[", "0.27291504", ",", "0.20832446", ",", "0.62606758", "]", ",", "\n", "[", "0.28008339", ",", "0.21032792", ",", "0.62550133", "]", ",", "\n", "[", "0.28706751", ",", "0.21246914", ",", "0.624642", "]", ",", "\n", "[", "0.29388514", ",", "0.21472543", ",", "0.62353802", "]", ",", "\n", "[", "0.30055772", ",", "0.21707565", ",", "0.62222519", "]", ",", "\n", "[", "0.30708438", ",", "0.21950598", ",", "0.6207555", "]", ",", "\n", "[", "0.31349163", ",", "0.22199831", ",", "0.61914522", "]", ",", "\n", "[", "0.31977984", ",", "0.22454204", ",", "0.61743434", "]", ",", "\n", "[", "0.32596955", ",", "0.22712412", ",", "0.61563293", "]", ",", "\n", "[", "0.33205791", ",", "0.22973736", ",", "0.61377715", "]", ",", "\n", "[", "0.33806601", ",", "0.23237153", ",", "0.61186606", "]", ",", "\n", "[", "0.34399174", ",", "0.23502151", ",", "0.60992807", "]", ",", "\n", "[", "0.34984607", ",", "0.23768089", ",", "0.60796949", "]", ",", "\n", "[", "0.35563846", ",", "0.2403444", ",", "0.60599535", "]", ",", "\n", "[", "0.36136863", ",", "0.24300892", ",", "0.60402414", "]", ",", "\n", "[", "0.36704345", ",", "0.24567078", ",", "0.60206076", "]", ",", "\n", "[", "0.37267088", ",", "0.2483267", ",", "0.60010594", "]", ",", "\n", "[", "0.3782548", ",", "0.25097436", ",", "0.59816563", "]", ",", "\n", "[", "0.38379608", ",", "0.25361228", ",", "0.59624988", "]", ",", "\n", "[", "0.38929883", ",", "0.25623877", ",", "0.5943618", "]", ",", "\n", "[", "0.3947691", ",", "0.25885207", ",", "0.59249964", "]", ",", "\n", "[", "0.40020989", ",", "0.26145107", ",", "0.59066609", "]", ",", "\n", "[", "0.40562409", ",", "0.26403484", ",", "0.58886331", "]", ",", "\n", "[", "0.41101442", ",", "0.26660262", ",", "0.58709291", "]", ",", "\n", "[", "0.41638322", ",", "0.26915383", ",", "0.5853566", "]", ",", "\n", "[", "0.42173132", ",", "0.27168825", ",", "0.58365836", "]", ",", "\n", "[", "0.42706343", ",", "0.27420503", ",", "0.5819941", "]", ",", "\n", "[", "0.43238181", ",", "0.2767038", ",", "0.58036393", "]", ",", "\n", "[", "0.43768862", ",", "0.27918426", ",", "0.57876764", "]", ",", "\n", "[", "0.44298597", ",", "0.28164615", ",", "0.5772048", "]", ",", "\n", "[", "0.44827587", ",", "0.28408925", ",", "0.57567472", "]", ",", "\n", "[", "0.45356026", ",", "0.28651338", ",", "0.57417648", "]", ",", "\n", "[", "0.45884104", ",", "0.28891838", ",", "0.57270899", "]", ",", "\n", "[", "0.46412001", ",", "0.2913041", ",", "0.57127095", "]", ",", "\n", "[", "0.46939893", ",", "0.29367044", ",", "0.5698609", "]", ",", "\n", "[", "0.47467951", ",", "0.29601729", ",", "0.56847725", "]", ",", "\n", "[", "0.47996336", ",", "0.29834456", ",", "0.56711823", "]", ",", "\n", "[", "0.48525207", ",", "0.30065217", ",", "0.56578195", "]", ",", "\n", "[", "0.49054716", ",", "0.30294008", ",", "0.5644664", "]", ",", "\n", "[", "0.49585007", ",", "0.30520822", ",", "0.56316946", "]", ",", "\n", "[", "0.50116221", ",", "0.30745656", ",", "0.56188888", "]", ",", "\n", "[", "0.50648491", ",", "0.30968508", ",", "0.56062233", "]", ",", "\n", "[", "0.51181943", ",", "0.31189376", ",", "0.55936737", "]", ",", "\n", "[", "0.51716699", ",", "0.31408263", ",", "0.55812148", "]", ",", "\n", "[", "0.52252871", ",", "0.31625172", ",", "0.55688205", "]", ",", "\n", "[", "0.52790567", ",", "0.31840106", ",", "0.55564642", "]", ",", "\n", "[", "0.53329886", ",", "0.32053073", ",", "0.55441182", "]", ",", "\n", "[", "0.5387092", ",", "0.32264084", ",", "0.55317546", "]", ",", "\n", "[", "0.54413753", ",", "0.3247315", ",", "0.55193448", "]", ",", "\n", "[", "0.54958461", ",", "0.32680287", ",", "0.55068596", "]", ",", "\n", "[", "0.55505113", ",", "0.32885514", ",", "0.54942696", "]", ",", "\n", "[", "0.56053768", ",", "0.33088852", ",", "0.54815451", "]", ",", "\n", "[", "0.56604476", ",", "0.33290327", ",", "0.54686563", "]", ",", "\n", "[", "0.57157236", ",", "0.33489987", ",", "0.54555812", "]", ",", "\n", "[", "0.57712131", ",", "0.33687845", ",", "0.54422801", "]", ",", "\n", "[", "0.58269186", ",", "0.33883938", ",", "0.54287227", "]", ",", "\n", "[", "0.58828416", ",", "0.34078308", ",", "0.54148789", "]", ",", "\n", "[", "0.59389827", ",", "0.34271002", ",", "0.54007187", "]", ",", "\n", "[", "0.59953415", ",", "0.34462069", ",", "0.53862124", "]", ",", "\n", "[", "0.60519167", ",", "0.34651565", ",", "0.53713308", "]", ",", "\n", "[", "0.61087061", ",", "0.34839552", ",", "0.5356045", "]", ",", "\n", "[", "0.61657065", ",", "0.35026093", ",", "0.53403268", "]", ",", "\n", "[", "0.62229138", ",", "0.3521126", ",", "0.53241484", "]", ",", "\n", "[", "0.62803229", ",", "0.35395127", ",", "0.53074831", "]", ",", "\n", "[", "0.63379279", ",", "0.35577776", ",", "0.52903045", "]", ",", "\n", "[", "0.63957219", ",", "0.35759292", ",", "0.52725878", "]", ",", "\n", "[", "0.64536975", ",", "0.35939765", ",", "0.52543076", "]", ",", "\n", "[", "0.6511847", ",", "0.36119285", ",", "0.52354391", "]", ",", "\n", "[", "0.6570161", ",", "0.36297956", ",", "0.52159597", "]", ",", "\n", "[", "0.66286293", ",", "0.36475881", ",", "0.51958481", "]", ",", "\n", "[", "0.6687241", ",", "0.36653173", ",", "0.51750839", "]", ",", "\n", "[", "0.67459845", ",", "0.36829947", ",", "0.5153648", "]", ",", "\n", "[", "0.68048472", ",", "0.37006325", ",", "0.51315222", "]", ",", "\n", "[", "0.68638162", ",", "0.37182432", ",", "0.51086898", "]", ",", "\n", "[", "0.69228775", ",", "0.37358401", ",", "0.50851352", "]", ",", "\n", "[", "0.69820166", ",", "0.37534367", ",", "0.50608439", "]", ",", "\n", "[", "0.70412186", ",", "0.37710473", ",", "0.50358028", "]", ",", "\n", "[", "0.71004688", ",", "0.37886859", ",", "0.50099965", "]", ",", "\n", "[", "0.71597525", ",", "0.3806367", ",", "0.49834106", "]", ",", "\n", "[", "0.72190503", ",", "0.38241075", ",", "0.4956041", "]", ",", "\n", "[", "0.72783443", ",", "0.38419239", ",", "0.49278795", "]", ",", "\n", "[", "0.73376164", ",", "0.3859833", ",", "0.4898919", "]", ",", "\n", "[", "0.73968475", ",", "0.38778523", ",", "0.48691538", "]", ",", "\n", "[", "0.7456018", ",", "0.38960001", ",", "0.48385794", "]", ",", "\n", "[", "0.75151077", ",", "0.39142951", ",", "0.48071927", "]", ",", "\n", "[", "0.75740957", ",", "0.39327566", ",", "0.47749914", "]", ",", "\n", "[", "0.76329604", ",", "0.39514048", ",", "0.4741975", "]", ",", "\n", "[", "0.76916794", ",", "0.39702603", ",", "0.47081439", "]", ",", "\n", "[", "0.77502298", ",", "0.39893446", ",", "0.46735", "]", ",", "\n", "[", "0.78085877", ",", "0.400868", ",", "0.46380463", "]", ",", "\n", "[", "0.78667286", ",", "0.40282892", ",", "0.46017874", "]", ",", "\n", "[", "0.79246271", ",", "0.4048196", ",", "0.45647292", "]", ",", "\n", "[", "0.79822569", ",", "0.40684249", ",", "0.45268792", "]", ",", "\n", "[", "0.80395908", ",", "0.40890011", ",", "0.44882462", "]", ",", "\n", "[", "0.80966007", ",", "0.41099506", ",", "0.44488409", "]", ",", "\n", "[", "0.81532584", ",", "0.41313001", ",", "0.4408672", "]", ",", "\n", "[", "0.82095338", ",", "0.41530771", ",", "0.43677537", "]", ",", "\n", "[", "0.82653946", ",", "0.41753108", ",", "0.43261066", "]", ",", "\n", "[", "0.83208085", ",", "0.41980305", ",", "0.42837489", "]", ",", "\n", "[", "0.83757423", ",", "0.42212661", ",", "0.42407011", "]", ",", "\n", "[", "0.84301618", ",", "0.42450482", ",", "0.4196986", "]", ",", "\n", "[", "0.84840316", ",", "0.42694082", ",", "0.41526288", "]", ",", "\n", "[", "0.85373155", ",", "0.4294378", ",", "0.41076573", "]", ",", "\n", "[", "0.8589976", ",", "0.43199897", ",", "0.40621024", "]", ",", "\n", "[", "0.8641975", ",", "0.4346276", ",", "0.40159975", "]", ",", "\n", "[", "0.86932733", ",", "0.43732696", ",", "0.39693796", "]", ",", "\n", "[", "0.87438311", ",", "0.44010033", ",", "0.39222887", "]", ",", "\n", "[", "0.87936081", ",", "0.44295096", ",", "0.38747682", "]", ",", "\n", "[", "0.88425632", ",", "0.44588207", ",", "0.38268654", "]", ",", "\n", "[", "0.88906554", ",", "0.44889681", ",", "0.37786308", "]", ",", "\n", "[", "0.89378437", ",", "0.45199824", ",", "0.3730116", "]", ",", "\n", "[", "0.89840867", ",", "0.45518929", ",", "0.36813827", "]", ",", "\n", "[", "0.90293439", ",", "0.45847274", ",", "0.36324942", "]", ",", "\n", "[", "0.90735756", ",", "0.46185117", ",", "0.35835166", "]", ",", "\n", "[", "0.91167433", ",", "0.46532694", ",", "0.35345197", "]", ",", "\n", "[", "0.915881", ",", "0.46890217", ",", "0.34855767", "]", ",", "\n", "[", "0.91997406", ",", "0.47257868", ",", "0.34367638", "]", ",", "\n", "[", "0.92395023", ",", "0.47635796", ",", "0.33881601", "]", ",", "\n", "[", "0.92780648", ",", "0.48024117", ",", "0.33398471", "]", ",", "\n", "[", "0.93154008", ",", "0.48422909", ",", "0.3291908", "]", ",", "\n", "[", "0.93514863", ",", "0.48832213", ",", "0.32444275", "]", ",", "\n", "[", "0.93863008", ",", "0.49252027", ",", "0.31974912", "]", ",", "\n", "[", "0.94198274", ",", "0.49682311", ",", "0.31511847", "]", ",", "\n", "[", "0.94520535", ",", "0.50122981", ",", "0.31055931", "]", ",", "\n", "[", "0.94829701", ",", "0.50573917", ",", "0.30608003", "]", ",", "\n", "[", "0.95125725", ",", "0.51034957", ",", "0.30168887", "]", ",", "\n", "[", "0.954086", ",", "0.51505906", ",", "0.29739377", "]", ",", "\n", "[", "0.95678355", ",", "0.51986536", ",", "0.2932024", "]", ",", "\n", "[", "0.95935057", ",", "0.52476587", ",", "0.28912206", "]", ",", "\n", "[", "0.96178805", ",", "0.52975777", ",", "0.28515964", "]", ",", "\n", "[", "0.9640973", ",", "0.53483802", ",", "0.28132156", "]", ",", "\n", "[", "0.96627986", ",", "0.54000343", ",", "0.27761379", "]", ",", "\n", "[", "0.9683375", ",", "0.5452507", ",", "0.27404177", "]", ",", "\n", "[", "0.97027215", ",", "0.55057645", ",", "0.27061043", "]", ",", "\n", "[", "0.97208896", ",", "0.55597442", ",", "0.26733231", "]", ",", "\n", "[", "0.97378824", ",", "0.56144311", ",", "0.26420514", "]", ",", "\n", "[", "0.97537225", ",", "0.56697917", ",", "0.2612321", "]", ",", "\n", "[", "0.97684333", ",", "0.5725793", ",", "0.2584161", "]", ",", "\n", "[", "0.97820376", ",", "0.57824032", ",", "0.25575953", "]", ",", "\n", "[", "0.9794557", ",", "0.58395922", ",", "0.25326432", "]", ",", "\n", "[", "0.9806012", ",", "0.58973318", ",", "0.25093197", "]", ",", "\n", "[", "0.98164451", ",", "0.59555764", ",", "0.24876746", "]", ",", "\n", "[", "0.9825958", ",", "0.60142353", ",", "0.24678389", "]", ",", "\n", "[", "0.98344841", ",", "0.60733543", ",", "0.24496692", "]", ",", "\n", "[", "0.98420378", ",", "0.61329131", ",", "0.24331643", "]", ",", "\n", "[", "0.98486309", ",", "0.61928934", ",", "0.24183204", "]", ",", "\n", "[", "0.98543359", ",", "0.62532321", ",", "0.24052074", "]", ",", "\n", "[", "0.98592661", ",", "0.63138392", ",", "0.2393925", "]", ",", "\n", "[", "0.98632908", ",", "0.63748058", ",", "0.2384285", "]", ",", "\n", "[", "0.98664126", ",", "0.64361223", ",", "0.23762727", "]", ",", "\n", "[", "0.9868743", ",", "0.64977022", ",", "0.23699778", "]", ",", "\n", "[", "0.98703872", ",", "0.65594684", ",", "0.236546", "]", ",", "\n", "[", "0.98711602", ",", "0.66215449", ",", "0.23625164", "]", ",", "\n", "[", "0.98710548", ",", "0.66839291", ",", "0.23611251", "]", ",", "\n", "[", "0.98704522", ",", "0.67463615", ",", "0.23615516", "]", ",", "\n", "[", "0.98690081", ",", "0.68090692", ",", "0.23634896", "]", ",", "\n", "[", "0.98666929", ",", "0.68720645", ",", "0.23669008", "]", ",", "\n", "[", "0.98639295", ",", "0.6935072", ",", "0.23720252", "]", ",", "\n", "[", "0.98603581", ",", "0.69983201", ",", "0.23785913", "]", ",", "\n", "[", "0.98559369", ",", "0.70618283", ",", "0.23865535", "]", ",", "\n", "[", "0.98511668", ",", "0.71252856", ",", "0.23961378", "]", ",", "\n", "[", "0.98455154", ",", "0.71890163", ",", "0.24070275", "]", ",", "\n", "[", "0.98392192", ",", "0.72528731", ",", "0.2419305", "]", ",", "\n", "[", "0.98324116", ",", "0.73167761", ",", "0.24329811", "]", ",", "\n", "[", "0.98246864", ",", "0.738096", ",", "0.2447854", "]", ",", "\n", "[", "0.98166755", ",", "0.74450581", ",", "0.24641186", "]", ",", "\n", "[", "0.98078113", ",", "0.75093941", ",", "0.24815276", "]", ",", "\n", "[", "0.97983772", ",", "0.75738047", ",", "0.25001371", "]", ",", "\n", "[", "0.97883927", ",", "0.7638279", ",", "0.25199054", "]", ",", "\n", "[", "0.97775747", ",", "0.7702969", ",", "0.25407166", "]", ",", "\n", "[", "0.97664794", ",", "0.77675738", ",", "0.25626641", "]", ",", "\n", "[", "0.9754357", ",", "0.78324913", ",", "0.25855344", "]", ",", "\n", "[", "0.9742107", ",", "0.7897247", ",", "0.26094721", "]", ",", "\n", "[", "0.97288357", ",", "0.79623051", ",", "0.2634262", "]", ",", "\n", "[", "0.97152974", ",", "0.80272764", ",", "0.26599948", "]", ",", "\n", "[", "0.97008613", ",", "0.80924798", ",", "0.2686529", "]", ",", "\n", "[", "0.96860571", ",", "0.81576486", ",", "0.27138993", "]", ",", "\n", "[", "0.96704307", ",", "0.82230061", ",", "0.27420073", "]", ",", "\n", "[", "0.96543772", ",", "0.82883583", ",", "0.27708584", "]", ",", "\n", "[", "0.96375242", ",", "0.83538829", ",", "0.28003763", "]", ",", "\n", "[", "0.96202315", ",", "0.84194079", ",", "0.28305544", "]", ",", "\n", "[", "0.96021049", ",", "0.84851164", ",", "0.28613254", "]", ",", "\n", "[", "0.95835763", ",", "0.85508072", ",", "0.28926815", "]", ",", "\n", "[", "0.95641175", ",", "0.86167196", ",", "0.29245571", "]", ",", "\n", "[", "0.95443484", ",", "0.8682573", ",", "0.29569479", "]", ",", "\n", "[", "0.95234871", ",", "0.87487125", ",", "0.29897882", "]", ",", "\n", "[", "0.95024646", ",", "0.88147281", ",", "0.30230776", "]", ",", "\n", "[", "0.94801413", ",", "0.88811109", ",", "0.3056752", "]", ",", "\n", "[", "0.94578198", ",", "0.89473018", ",", "0.30908112", "]", ",", "\n", "[", "0.94341986", ",", "0.90138491", ",", "0.31252002", "]", ",", "\n", "[", "0.94102862", ",", "0.90803285", ",", "0.31599064", "]", ",", "\n", "[", "0.93853313", ",", "0.91470475", ",", "0.31948933", "]", ",", "\n", "[", "0.93597111", ",", "0.92138481", ",", "0.32301384", "]", ",", "\n", "[", "0.9333376", ",", "0.92807483", ",", "0.32656155", "]", ",", "\n", "[", "0.93059157", ",", "0.93479051", ",", "0.33012998", "]", ",", "\n", "[", "0.92781425", ",", "0.94149986", ",", "0.33371683", "]", ",", "\n", "[", "0.92488992", ",", "0.94824702", ",", "0.33731997", "]", ",", "\n", "[", "0.92194114", ",", "0.95498491", ",", "0.34093705", "]", ",", "\n", "[", "0.91886139", ",", "0.96175325", ",", "0.3445663", "]", ",", "\n", "[", "0.91569318", ",", "0.96853549", ",", "0.34820569", "]", ",", "\n", "[", "0.91244907", ",", "0.97532669", ",", "0.35185336", "]", ",", "\n", "[", "0.90904184", ",", "0.98215741", ",", "0.35550781", "]", ",", "\n", "]", "\n", "return", "_cmap", "(", "\"linear_thermal\"", ",", "cm_data", ",", "reverse", "=", "reverse", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_linear_deep": [[1085, 1347], ["plt._cmap"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt._cmap"], ["", "def", "cmap_linear_deep", "(", "reverse", "=", "False", ")", ":", "\n", "# cmocean, MIT license", "\n", "# linear colormap, perceptually uniform", "\n", "    ", "cm_data", "=", "[", "\n", "[", "0.15610197", ",", "0.10260825", ",", "0.17272157", "]", ",", "\n", "[", "0.15879951", ",", "0.10562813", ",", "0.17808215", "]", ",", "\n", "[", "0.16148781", ",", "0.10863318", ",", "0.18344165", "]", ",", "\n", "[", "0.16415718", ",", "0.11162318", ",", "0.18883992", "]", ",", "\n", "[", "0.16681176", ",", "0.11459941", ",", "0.19425947", "]", ",", "\n", "[", "0.16945091", ",", "0.11756264", ",", "0.19970233", "]", ",", "\n", "[", "0.17207033", ",", "0.12051292", ",", "0.20518607", "]", ",", "\n", "[", "0.17467698", ",", "0.12345223", ",", "0.21067979", "]", ",", "\n", "[", "0.17725957", ",", "0.12637929", ",", "0.21623094", "]", ",", "\n", "[", "0.17983088", ",", "0.12929727", ",", "0.22178284", "]", ",", "\n", "[", "0.18237518", ",", "0.13220381", ",", "0.2274021", "]", ",", "\n", "[", "0.18490718", ",", "0.13510267", ",", "0.23302318", "]", ",", "\n", "[", "0.18741252", ",", "0.13799155", ",", "0.23870629", "]", ",", "\n", "[", "0.18990318", ",", "0.1408738", ",", "0.24439758", "]", ",", "\n", "[", "0.19236658", ",", "0.14374739", ",", "0.25014898", "]", ",", "\n", "[", "0.19481375", ",", "0.14661556", ",", "0.2559107", "]", ",", "\n", "[", "0.19723196", ",", "0.14947616", ",", "0.26173441", "]", ",", "\n", "[", "0.19963336", ",", "0.15233276", ",", "0.26756593", "]", ",", "\n", "[", "0.20200284", ",", "0.15518269", ",", "0.2734655", "]", ",", "\n", "[", "0.20435511", ",", "0.15803011", ",", "0.27936892", "]", ",", "\n", "[", "0.20667286", ",", "0.16087193", ",", "0.28534375", "]", ",", "\n", "[", "0.20897027", ",", "0.16371219", ",", "0.29132868", "]", ",", "\n", "[", "0.21123508", ",", "0.16654905", ",", "0.29736908", "]", ",", "\n", "[", "0.21347308", ",", "0.16938469", ",", "0.30343772", "]", ",", "\n", "[", "0.21568192", ",", "0.17221954", ",", "0.30953956", "]", ",", "\n", "[", "0.21785541", ",", "0.17505333", ",", "0.31569323", "]", ",", "\n", "[", "0.22000279", ",", "0.17788891", ",", "0.32185935", "]", ",", "\n", "[", "0.22210836", ",", "0.18072434", ",", "0.32809006", "]", ",", "\n", "[", "0.22418213", ",", "0.18356266", ",", "0.33434315", "]", ",", "\n", "[", "0.2262221", ",", "0.18640462", ",", "0.34062032", "]", ",", "\n", "[", "0.22821552", ",", "0.18924937", ",", "0.34695853", "]", ",", "\n", "[", "0.23017343", ",", "0.19210006", ",", "0.35331317", "]", ",", "\n", "[", "0.23209137", ",", "0.19495728", ",", "0.35969247", "]", ",", "\n", "[", "0.23395668", ",", "0.19782084", ",", "0.36612828", "]", ",", "\n", "[", "0.23577916", ",", "0.20069365", ",", "0.37258104", "]", ",", "\n", "[", "0.23755595", ",", "0.2035769", ",", "0.3790513", "]", ",", "\n", "[", "0.23927601", ",", "0.20647121", ",", "0.38556163", "]", ",", "\n", "[", "0.24093942", ",", "0.20937861", ",", "0.39210045", "]", ",", "\n", "[", "0.24254746", ",", "0.21230118", ",", "0.39865318", "]", ",", "\n", "[", "0.2440963", ",", "0.21524071", ",", "0.40521875", "]", ",", "\n", "[", "0.2455818", ",", "0.21819916", ",", "0.41179552", "]", ",", "\n", "[", "0.24699281", ",", "0.22117861", ",", "0.41839657", "]", ",", "\n", "[", "0.24833066", ",", "0.22418177", ",", "0.42500332", "]", ",", "\n", "[", "0.24959215", ",", "0.22721132", ",", "0.43160747", "]", ",", "\n", "[", "0.25077214", ",", "0.23027012", ",", "0.43820368", "]", ",", "\n", "[", "0.25186528", ",", "0.23336132", ",", "0.44478539", "]", ",", "\n", "[", "0.252866", ",", "0.23648829", ",", "0.45134461", "]", ",", "\n", "[", "0.25376865", ",", "0.23965469", ",", "0.45787181", "]", ",", "\n", "[", "0.25456757", ",", "0.24286438", ",", "0.46435576", "]", ",", "\n", "[", "0.25525721", ",", "0.24612144", ",", "0.47078343", "]", ",", "\n", "[", "0.25583228", ",", "0.24943005", ",", "0.47713997", "]", ",", "\n", "[", "0.25628796", ",", "0.25279443", ",", "0.48340873", "]", ",", "\n", "[", "0.25661512", ",", "0.25621955", ",", "0.48957708", "]", ",", "\n", "[", "0.25680888", ",", "0.25970984", ",", "0.49562536", "]", ",", "\n", "[", "0.25687291", ",", "0.26326808", ",", "0.50152514", "]", ",", "\n", "[", "0.25680712", ",", "0.26689714", ",", "0.50725418", "]", ",", "\n", "[", "0.25660517", ",", "0.27060089", ",", "0.51279636", "]", ",", "\n", "[", "0.25627372", ",", "0.27437999", ",", "0.51812616", "]", ",", "\n", "[", "0.2558254", ",", "0.27823281", ",", "0.523219", "]", ",", "\n", "[", "0.25525973", ",", "0.28216003", ",", "0.5280624", "]", ",", "\n", "[", "0.25459786", ",", "0.28615608", ",", "0.53263702", "]", ",", "\n", "[", "0.25385147", ",", "0.29021676", ",", "0.53693454", "]", ",", "\n", "[", "0.25303784", ",", "0.29433557", ",", "0.54094998", "]", ",", "\n", "[", "0.25217537", ",", "0.29850489", ",", "0.54468392", "]", ",", "\n", "[", "0.25128177", ",", "0.30271674", ",", "0.54814227", "]", ",", "\n", "[", "0.25037292", ",", "0.30696328", ",", "0.55133524", "]", ",", "\n", "[", "0.24946824", ",", "0.31123536", ",", "0.55427663", "]", ",", "\n", "[", "0.24857612", ",", "0.31552728", ",", "0.55698221", "]", ",", "\n", "[", "0.2477157", ",", "0.31982991", ",", "0.55947045", "]", ",", "\n", "[", "0.24689121", ",", "0.3241392", ",", "0.56175861", "]", ",", "\n", "[", "0.24611215", ",", "0.32844959", ",", "0.56386485", "]", ",", "\n", "[", "0.24538978", ",", "0.33275513", ",", "0.56580822", "]", ",", "\n", "[", "0.24472203", ",", "0.33705469", ",", "0.56760298", "]", ",", "\n", "[", "0.24411647", ",", "0.3413441", ",", "0.56926586", "]", ",", "\n", "[", "0.24357904", ",", "0.34561997", ",", "0.57081275", "]", ",", "\n", "[", "0.24310562", ",", "0.34988262", ",", "0.57225403", "]", ",", "\n", "[", "0.24269783", ",", "0.35413056", ",", "0.5736016", "]", ",", "\n", "[", "0.24236192", ",", "0.35836085", ",", "0.57486937", "]", ",", "\n", "[", "0.2420947", ",", "0.36257399", ",", "0.5760654", "]", ",", "\n", "[", "0.24189401", ",", "0.36677027", ",", "0.57719727", "]", ",", "\n", "[", "0.24175956", ",", "0.37094938", ",", "0.57827294", "]", ",", "\n", "[", "0.24169076", ",", "0.37511123", ",", "0.57929958", "]", ",", "\n", "[", "0.2416897", ",", "0.37925483", ",", "0.58028581", "]", ",", "\n", "[", "0.24175313", ",", "0.38338117", ",", "0.58123598", "]", ",", "\n", "[", "0.24187844", ",", "0.387491", ",", "0.58215425", "]", ",", "\n", "[", "0.24206427", ",", "0.39158472", ",", "0.58304526", "]", ",", "\n", "[", "0.24230913", ",", "0.39566275", ",", "0.58391314", "]", ",", "\n", "[", "0.24261144", ",", "0.39972561", ",", "0.5847616", "]", ",", "\n", "[", "0.24296954", ",", "0.40377384", ",", "0.58559395", "]", ",", "\n", "[", "0.24338171", ",", "0.40780801", ",", "0.58641316", "]", ",", "\n", "[", "0.24384618", ",", "0.41182872", ",", "0.58722185", "]", ",", "\n", "[", "0.24436114", ",", "0.4158366", ",", "0.58802239", "]", ",", "\n", "[", "0.24492561", ",", "0.41983198", ",", "0.58881765", "]", ",", "\n", "[", "0.24553674", ",", "0.42381585", ",", "0.58960858", "]", ",", "\n", "[", "0.24619263", ",", "0.42778886", ",", "0.59039677", "]", ",", "\n", "[", "0.24689148", ",", "0.43175165", ",", "0.59118371", "]", ",", "\n", "[", "0.24763144", ",", "0.43570484", ",", "0.59197068", "]", ",", "\n", "[", "0.24841072", ",", "0.43964906", ",", "0.59275883", "]", ",", "\n", "[", "0.24922752", ",", "0.44358493", ",", "0.59354913", "]", ",", "\n", "[", "0.25008005", ",", "0.44751306", ",", "0.59434245", "]", ",", "\n", "[", "0.25096657", ",", "0.45143404", ",", "0.59513951", "]", ",", "\n", "[", "0.25188534", ",", "0.45534848", ",", "0.59594094", "]", ",", "\n", "[", "0.25283469", ",", "0.45925694", ",", "0.59674727", "]", ",", "\n", "[", "0.25381294", ",", "0.46316", ",", "0.5975589", "]", ",", "\n", "[", "0.25481847", ",", "0.46705822", ",", "0.59837617", "]", ",", "\n", "[", "0.25584972", ",", "0.47095213", ",", "0.59919934", "]", ",", "\n", "[", "0.25690514", ",", "0.47484228", ",", "0.60002857", "]", ",", "\n", "[", "0.25798324", ",", "0.47872916", ",", "0.60086398", "]", ",", "\n", "[", "0.25908258", ",", "0.4826133", ",", "0.60170558", "]", ",", "\n", "[", "0.26020178", ",", "0.48649518", ",", "0.60255336", "]", ",", "\n", "[", "0.2613397", ",", "0.4903752", ",", "0.60340742", "]", ",", "\n", "[", "0.26249484", ",", "0.4942539", ",", "0.60426741", "]", ",", "\n", "[", "0.26366598", ",", "0.49813174", ",", "0.6051331", "]", ",", "\n", "[", "0.26485195", ",", "0.50200914", ",", "0.60600423", "]", ",", "\n", "[", "0.26605166", ",", "0.50588653", ",", "0.6068805", "]", ",", "\n", "[", "0.26726407", ",", "0.5097643", ",", "0.60776157", "]", ",", "\n", "[", "0.26848824", ",", "0.51364284", ",", "0.60864705", "]", ",", "\n", "[", "0.26972326", ",", "0.51752253", ",", "0.60953651", "]", ",", "\n", "[", "0.27096833", ",", "0.52140372", ",", "0.61042947", "]", ",", "\n", "[", "0.27222271", ",", "0.52528675", ",", "0.61132543", "]", ",", "\n", "[", "0.27348573", ",", "0.52917194", ",", "0.61222386", "]", ",", "\n", "[", "0.27475681", ",", "0.53305961", ",", "0.61312416", "]", ",", "\n", "[", "0.27603547", ",", "0.53695005", ",", "0.61402574", "]", ",", "\n", "[", "0.27732128", ",", "0.54084353", ",", "0.61492795", "]", ",", "\n", "[", "0.27861393", ",", "0.5447403", ",", "0.61583014", "]", ",", "\n", "[", "0.27991319", ",", "0.54864062", ",", "0.61673159", "]", ",", "\n", "[", "0.28121892", ",", "0.5525447", ",", "0.6176316", "]", ",", "\n", "[", "0.28253107", ",", "0.55645275", ",", "0.61852942", "]", ",", "\n", "[", "0.28384971", ",", "0.56036495", ",", "0.61942427", "]", ",", "\n", "[", "0.28517499", ",", "0.56428149", ",", "0.62031537", "]", ",", "\n", "[", "0.28650717", ",", "0.56820249", ",", "0.62120191", "]", ",", "\n", "[", "0.28784651", ",", "0.57212815", ",", "0.62208291", "]", ",", "\n", "[", "0.28919353", ",", "0.57605855", ",", "0.62295759", "]", ",", "\n", "[", "0.29054888", ",", "0.57999377", ",", "0.62382514", "]", ",", "\n", "[", "0.29191327", ",", "0.58393389", ",", "0.62468468", "]", ",", "\n", "[", "0.29328753", ",", "0.58787895", ",", "0.62553534", "]", ",", "\n", "[", "0.29467261", ",", "0.59182898", ",", "0.62637622", "]", ",", "\n", "[", "0.29606961", ",", "0.59578401", ",", "0.6272064", "]", ",", "\n", "[", "0.29747971", ",", "0.599744", ",", "0.62802499", "]", ",", "\n", "[", "0.29890426", ",", "0.60370894", ",", "0.62883105", "]", ",", "\n", "[", "0.30034472", ",", "0.60767877", ",", "0.62962366", "]", ",", "\n", "[", "0.3018027", ",", "0.6116534", ",", "0.6304019", "]", ",", "\n", "[", "0.30327995", ",", "0.61563273", ",", "0.63116484", "]", ",", "\n", "[", "0.30477834", ",", "0.61961664", ",", "0.63191155", "]", ",", "\n", "[", "0.30629992", ",", "0.62360498", ",", "0.63264111", "]", ",", "\n", "[", "0.30784684", ",", "0.62759757", ",", "0.63335259", "]", ",", "\n", "[", "0.30942143", ",", "0.63159422", ",", "0.63404509", "]", ",", "\n", "[", "0.31102618", ",", "0.63559469", ",", "0.63471769", "]", ",", "\n", "[", "0.31266369", ",", "0.63959874", ",", "0.6353695", "]", ",", "\n", "[", "0.31433675", ",", "0.64360608", ",", "0.63599965", "]", ",", "\n", "[", "0.31604829", ",", "0.6476164", ",", "0.63660727", "]", ",", "\n", "[", "0.31780141", ",", "0.65162937", ",", "0.63719152", "]", ",", "\n", "[", "0.31959934", ",", "0.65564462", ",", "0.63775156", "]", ",", "\n", "[", "0.32144548", ",", "0.65966175", ",", "0.6382866", "]", ",", "\n", "[", "0.32334339", ",", "0.66368034", ",", "0.63879587", "]", ",", "\n", "[", "0.32529678", ",", "0.66769992", ",", "0.63927863", "]", ",", "\n", "[", "0.32730951", ",", "0.67171999", ",", "0.63973418", "]", ",", "\n", "[", "0.32938557", ",", "0.67574005", ",", "0.64016185", "]", ",", "\n", "[", "0.33152913", ",", "0.67975951", ",", "0.64056102", "]", ",", "\n", "[", "0.33374413", ",", "0.68377791", ",", "0.6409304", "]", ",", "\n", "[", "0.3360351", ",", "0.68779458", ",", "0.6412696", "]", ",", "\n", "[", "0.33840684", ",", "0.69180878", ",", "0.64157857", "]", ",", "\n", "[", "0.34086403", ",", "0.69581978", ",", "0.64185693", "]", ",", "\n", "[", "0.34341147", ",", "0.69982684", ",", "0.64210435", "]", ",", "\n", "[", "0.34605405", ",", "0.70382918", ",", "0.64232058", "]", ",", "\n", "[", "0.34879674", ",", "0.70782594", ",", "0.64250547", "]", ",", "\n", "[", "0.3516446", ",", "0.71181627", ",", "0.64265896", "]", ",", "\n", "[", "0.35460272", ",", "0.71579925", ",", "0.64278108", "]", ",", "\n", "[", "0.35767625", ",", "0.71977391", ",", "0.64287199", "]", ",", "\n", "[", "0.36086992", ",", "0.72373958", ",", "0.64292927", "]", ",", "\n", "[", "0.36418945", ",", "0.7276949", ",", "0.64295573", "]", ",", "\n", "[", "0.36763999", ",", "0.73163877", ",", "0.64295205", "]", ",", "\n", "[", "0.37122661", ",", "0.73557007", ",", "0.64291896", "]", ",", "\n", "[", "0.37495428", ",", "0.73948763", ",", "0.64285736", "]", ",", "\n", "[", "0.37882784", ",", "0.74339025", ",", "0.64276831", "]", ",", "\n", "[", "0.38285235", ",", "0.74727697", ",", "0.64264931", "]", ",", "\n", "[", "0.38703226", ",", "0.75114621", ",", "0.64250555", "]", ",", "\n", "[", "0.39137183", ",", "0.75499667", ",", "0.64233873", "]", ",", "\n", "[", "0.39587503", ",", "0.75882703", ",", "0.64215083", "]", ",", "\n", "[", "0.40054593", ",", "0.76263603", ",", "0.64194247", "]", ",", "\n", "[", "0.40538835", ",", "0.76642231", ",", "0.64171516", "]", ",", "\n", "[", "0.41040452", ",", "0.77018443", ",", "0.64147423", "]", ",", "\n", "[", "0.41559684", ",", "0.77392103", ",", "0.64122273", "]", ",", "\n", "[", "0.42096796", ",", "0.77763083", ",", "0.64096223", "]", ",", "\n", "[", "0.42651956", ",", "0.78131247", ",", "0.64069607", "]", ",", "\n", "[", "0.43225139", ",", "0.78496472", ",", "0.64043042", "]", ",", "\n", "[", "0.43816347", ",", "0.78858638", ",", "0.64016943", "]", ",", "\n", "[", "0.44425693", ",", "0.79217623", ",", "0.63991482", "]", ",", "\n", "[", "0.45052876", ",", "0.79573333", ",", "0.63967426", "]", ",", "\n", "[", "0.45697666", ",", "0.79925675", ",", "0.63945293", "]", ",", "\n", "[", "0.46359865", ",", "0.80274561", ",", "0.63925487", "]", ",", "\n", "[", "0.47039042", ",", "0.80619928", ",", "0.63908644", "]", ",", "\n", "[", "0.47734697", ",", "0.80961729", ",", "0.63895382", "]", ",", "\n", "[", "0.48446331", ",", "0.81299926", ",", "0.63886245", "]", ",", "\n", "[", "0.49173307", ",", "0.81634505", ",", "0.63881848", "]", ",", "\n", "[", "0.49914951", ",", "0.81965467", ",", "0.63882777", "]", ",", "\n", "[", "0.50670501", ",", "0.82292834", ",", "0.63889632", "]", ",", "\n", "[", "0.51439085", ",", "0.82616658", ",", "0.63903043", "]", ",", "\n", "[", "0.52219973", ",", "0.82936979", ",", "0.63923462", "]", ",", "\n", "[", "0.53012282", ",", "0.83253876", ",", "0.63951422", "]", ",", "\n", "[", "0.53814812", ",", "0.83567489", ",", "0.63987637", "]", ",", "\n", "[", "0.54626958", ",", "0.83877878", ",", "0.64032322", "]", ",", "\n", "[", "0.55447837", ",", "0.84185159", ",", "0.6408588", "]", ",", "\n", "[", "0.56276148", ",", "0.84489535", ",", "0.64148939", "]", ",", "\n", "[", "0.57111152", ",", "0.84791128", ",", "0.64221712", "]", ",", "\n", "[", "0.57952181", ",", "0.85090053", ",", "0.64304356", "]", ",", "\n", "[", "0.5879841", ",", "0.85386466", ",", "0.64397109", "]", ",", "\n", "[", "0.59648484", ",", "0.85680645", ",", "0.64500466", "]", ",", "\n", "[", "0.60501947", ",", "0.85972701", ",", "0.64614391", "]", ",", "\n", "[", "0.61358282", ",", "0.86262763", ",", "0.64738888", "]", ",", "\n", "[", "0.62216818", ",", "0.86550998", ",", "0.64874031", "]", ",", "\n", "[", "0.63076931", ",", "0.86837576", ",", "0.65019861", "]", ",", "\n", "[", "0.6393757", ",", "0.87122773", ",", "0.65176583", "]", ",", "\n", "[", "0.64798434", ",", "0.87406707", ",", "0.65344053", "]", ",", "\n", "[", "0.65659293", ",", "0.87689477", ",", "0.65522105", "]", ",", "\n", "[", "0.6651972", ",", "0.87971238", ",", "0.65710661", "]", ",", "\n", "[", "0.67379331", ",", "0.88252137", ",", "0.65909617", "]", ",", "\n", "[", "0.68237784", ",", "0.88532317", ",", "0.66118854", "]", ",", "\n", "[", "0.69094781", ",", "0.88811911", ",", "0.66338232", "]", ",", "\n", "[", "0.69950063", ",", "0.8909105", ",", "0.66567599", "]", ",", "\n", "[", "0.70803409", ",", "0.89369855", ",", "0.66806789", "]", ",", "\n", "[", "0.71654633", ",", "0.8964844", ",", "0.67055629", "]", ",", "\n", "[", "0.72503584", ",", "0.89926913", ",", "0.67313935", "]", ",", "\n", "[", "0.7335014", ",", "0.90205374", ",", "0.6758152", "]", ",", "\n", "[", "0.7419421", ",", "0.90483916", ",", "0.6785819", "]", ",", "\n", "[", "0.75035729", ",", "0.90762623", ",", "0.68143751", "]", ",", "\n", "[", "0.75874656", ",", "0.91041576", ",", "0.68438007", "]", ",", "\n", "[", "0.76710972", ",", "0.91320846", ",", "0.68740763", "]", ",", "\n", "[", "0.77544679", ",", "0.91600497", ",", "0.69051825", "]", ",", "\n", "[", "0.78375799", ",", "0.91880591", ",", "0.69371001", "]", ",", "\n", "[", "0.79204369", ",", "0.92161178", ",", "0.69698104", "]", ",", "\n", "[", "0.8003044", ",", "0.92442306", ",", "0.70032949", "]", ",", "\n", "[", "0.80854079", ",", "0.92724016", ",", "0.70375359", "]", ",", "\n", "[", "0.81675365", ",", "0.93006344", ",", "0.7072516", "]", ",", "\n", "[", "0.82494386", ",", "0.93289321", ",", "0.71082186", "]", ",", "\n", "[", "0.83310566", ",", "0.93573198", ",", "0.71446311", "]", ",", "\n", "[", "0.84124229", ",", "0.9385793", ",", "0.71817346", "]", ",", "\n", "[", "0.84935864", ",", "0.94143411", ",", "0.72195118", "]", ",", "\n", "[", "0.85745594", ",", "0.94429655", ",", "0.72579485", "]", ",", "\n", "[", "0.8655355", ",", "0.94716668", ",", "0.72970312", "]", ",", "\n", "[", "0.87359867", ",", "0.95004456", ",", "0.73367476", "]", ",", "\n", "[", "0.8816326", ",", "0.95293526", ",", "0.73770822", "]", ",", "\n", "[", "0.88965121", ",", "0.95583441", ",", "0.74180237", "]", ",", "\n", "[", "0.89765699", ",", "0.95874159", ",", "0.7459562", "]", ",", "\n", "[", "0.90565146", ",", "0.96165671", ",", "0.7501688", "]", ",", "\n", "[", "0.9136274", ",", "0.96458287", ",", "0.75443868", "]", ",", "\n", "[", "0.92158503", ",", "0.96752052", ",", "0.75876468", "]", ",", "\n", "[", "0.92953534", ",", "0.97046601", ",", "0.76314675", "]", ",", "\n", "[", "0.93747992", ",", "0.97341911", ",", "0.76758435", "]", ",", "\n", "[", "0.94540698", ",", "0.97638475", ",", "0.77207538", "]", ",", "\n", "[", "0.95332337", ",", "0.97936076", ",", "0.77661978", "]", ",", "\n", "[", "0.96123821", ",", "0.98234397", ",", "0.78121815", "]", ",", "\n", "[", "0.96914884", ",", "0.98533575", ",", "0.78586971", "]", ",", "\n", "[", "0.97704185", ",", "0.98834183", ",", "0.79057175", "]", ",", "\n", "[", "0.98493745", ",", "0.99135452", ",", "0.79532716", "]", ",", "\n", "[", "0.99283718", ",", "0.99437346", ",", "0.8001362", "]", ",", "\n", "]", "\n", "return", "_cmap", "(", "\"linear_deep\"", ",", "cm_data", ",", "reverse", "=", "reverse", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_cyclic_phase": [[1349, 1611], ["plt._cmap"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt._cmap"], ["", "def", "cmap_cyclic_phase", "(", "reverse", "=", "False", ")", ":", "\n", "# cmocean, MIT license", "\n", "# cyclic colormap, perceptually uniform", "\n", "    ", "cm_data", "=", "[", "\n", "[", "0.65830839", ",", "0.46993917", ",", "0.04941288", "]", ",", "\n", "[", "0.66433742", ",", "0.4662019", ",", "0.05766473", "]", ",", "\n", "[", "0.67020869", ",", "0.46248014", ",", "0.0653456", "]", ",", "\n", "[", "0.67604299", ",", "0.45869838", ",", "0.07273174", "]", ",", "\n", "[", "0.68175228", ",", "0.45491407", ",", "0.07979262", "]", ",", "\n", "[", "0.6874028", ",", "0.45108417", ",", "0.08667103", "]", ",", "\n", "[", "0.6929505", ",", "0.44723893", ",", "0.09335869", "]", ",", "\n", "[", "0.69842619", ",", "0.44335768", ",", "0.09992839", "]", ",", "\n", "[", "0.7038123", ",", "0.43945328", ",", "0.1063871", "]", ",", "\n", "[", "0.70912069", ",", "0.43551765", ",", "0.11277174", "]", ",", "\n", "[", "0.71434524", ",", "0.43155576", ",", "0.11909348", "]", ",", "\n", "[", "0.71949289", ",", "0.42756272", ",", "0.12537606", "]", ",", "\n", "[", "0.72455619", ",", "0.4235447", ",", "0.13162325", "]", ",", "\n", "[", "0.72954895", ",", "0.41949098", ",", "0.13786305", "]", ",", "\n", "[", "0.73445172", ",", "0.41541774", ",", "0.14408039", "]", ",", "\n", "[", "0.73929496", ",", "0.41129973", ",", "0.15032217", "]", ",", "\n", "[", "0.74403834", ",", "0.40717158", ",", "0.15654335", "]", ",", "\n", "[", "0.74873695", ",", "0.40298519", ",", "0.16282282", "]", ",", "\n", "[", "0.75332319", ",", "0.39880107", ",", "0.16907566", "]", ",", "\n", "[", "0.75788083", ",", "0.39454245", ",", "0.17542179", "]", ",", "\n", "[", "0.7623326", ",", "0.39028096", ",", "0.18175915", "]", ",", "\n", "[", "0.76673205", ",", "0.38596549", ",", "0.18816819", "]", ",", "\n", "[", "0.77105247", ",", "0.38162141", ",", "0.19461532", "]", ",", "\n", "[", "0.77529528", ",", "0.37724732", ",", "0.20110652", "]", ",", "\n", "[", "0.77948666", ",", "0.37281509", ",", "0.2076873", "]", ",", "\n", "[", "0.78358534", ",", "0.36836772", ",", "0.21429736", "]", ",", "\n", "[", "0.78763763", ",", "0.363854", ",", "0.22101648", "]", ",", "\n", "[", "0.79161134", ",", "0.35930804", ",", "0.2277974", "]", ",", "\n", "[", "0.79550606", ",", "0.3547299", ",", "0.23464353", "]", ",", "\n", "[", "0.79935398", ",", "0.35007959", ",", "0.24161832", "]", ",", "\n", "[", "0.80311671", ",", "0.34540152", ",", "0.24865892", "]", ",", "\n", "[", "0.80681033", ",", "0.34067452", ",", "0.25580075", "]", ",", "\n", "[", "0.8104452", ",", "0.33588248", ",", "0.26307222", "]", ",", "\n", "[", "0.8139968", ",", "0.33105538", ",", "0.27043183", "]", ",", "\n", "[", "0.81747689", ",", "0.32617526", ",", "0.27791096", "]", ",", "\n", "[", "0.82089415", ",", "0.32122629", ",", "0.28553846", "]", ",", "\n", "[", "0.82422713", ",", "0.3162362", ",", "0.29327617", "]", ",", "\n", "[", "0.82747661", ",", "0.31120154", ",", "0.30113388", "]", ",", "\n", "[", "0.83066399", ",", "0.30608459", ",", "0.30917579", "]", ",", "\n", "[", "0.83376307", ",", "0.30092244", ",", "0.31734921", "]", ",", "\n", "[", "0.83677286", ",", "0.29571346", ",", "0.32566199", "]", ",", "\n", "[", "0.83969693", ",", "0.29044723", ",", "0.33413665", "]", ",", "\n", "[", "0.84253873", ",", "0.28511151", ",", "0.34279962", "]", ",", "\n", "[", "0.84528297", ",", "0.27972917", ",", "0.35162078", "]", ",", "\n", "[", "0.84792704", ",", "0.27430045", ",", "0.36060681", "]", ",", "\n", "[", "0.85046793", ",", "0.26882624", ",", "0.36976395", "]", ",", "\n", "[", "0.85291056", ",", "0.26328859", ",", "0.37913116", "]", ",", "\n", "[", "0.855242", ",", "0.25770888", ",", "0.38868217", "]", ",", "\n", "[", "0.85745673", ",", "0.25209367", ",", "0.39841601", "]", ",", "\n", "[", "0.85955023", ",", "0.24644737", ",", "0.40833625", "]", ",", "\n", "[", "0.86151767", ",", "0.24077563", ",", "0.41844557", "]", ",", "\n", "[", "0.86335392", ",", "0.23508521", ",", "0.42874606", "]", ",", "\n", "[", "0.86505685", ",", "0.22937288", ",", "0.43926008", "]", ",", "\n", "[", "0.86661606", ",", "0.22366308", ",", "0.44996127", "]", ",", "\n", "[", "0.86802578", ",", "0.21796785", ",", "0.46084758", "]", ",", "\n", "[", "0.86928003", ",", "0.21230132", ",", "0.47191554", "]", ",", "\n", "[", "0.87037274", ",", "0.20667988", ",", "0.48316015", "]", ",", "\n", "[", "0.87129781", ",", "0.2011224", ",", "0.49457479", "]", ",", "\n", "[", "0.87204914", ",", "0.19565041", ",", "0.50615118", "]", ",", "\n", "[", "0.87262076", ",", "0.19028829", ",", "0.51787932", "]", ",", "\n", "[", "0.87300686", ",", "0.18506334", ",", "0.5297475", "]", ",", "\n", "[", "0.8732019", ",", "0.18000588", ",", "0.54174232", "]", ",", "\n", "[", "0.87320066", ",", "0.1751492", ",", "0.55384874", "]", ",", "\n", "[", "0.87299833", ",", "0.17052942", ",", "0.56605016", "]", ",", "\n", "[", "0.87259058", ",", "0.16618514", ",", "0.57832856", "]", ",", "\n", "[", "0.87197361", ",", "0.16215698", ",", "0.59066466", "]", ",", "\n", "[", "0.87114414", ",", "0.15848667", ",", "0.60303881", "]", ",", "\n", "[", "0.87009966", ",", "0.15521687", ",", "0.61542844", "]", ",", "\n", "[", "0.86883823", ",", "0.15238892", ",", "0.62781175", "]", ",", "\n", "[", "0.86735858", ",", "0.15004199", ",", "0.64016651", "]", ",", "\n", "[", "0.8656601", ",", "0.14821149", ",", "0.65247022", "]", ",", "\n", "[", "0.86374282", ",", "0.14692762", ",", "0.66470043", "]", ",", "\n", "[", "0.86160744", ",", "0.14621386", ",", "0.67683495", "]", ",", "\n", "[", "0.85925523", ",", "0.14608582", ",", "0.68885204", "]", ",", "\n", "[", "0.85668805", ",", "0.14655046", ",", "0.70073065", "]", ",", "\n", "[", "0.85390829", ",", "0.14760576", ",", "0.71245054", "]", ",", "\n", "[", "0.85091881", ",", "0.14924094", ",", "0.7239925", "]", ",", "\n", "[", "0.84772287", ",", "0.15143717", ",", "0.73533849", "]", ",", "\n", "[", "0.84432409", ",", "0.15416865", ",", "0.74647174", "]", ",", "\n", "[", "0.84072639", ",", "0.15740403", ",", "0.75737678", "]", ",", "\n", "[", "0.83693394", ",", "0.16110786", ",", "0.76803952", "]", ",", "\n", "[", "0.83295108", ",", "0.16524205", ",", "0.77844723", "]", ",", "\n", "[", "0.82878232", ",", "0.16976729", ",", "0.78858858", "]", ",", "\n", "[", "0.82443225", ",", "0.17464414", ",", "0.7984536", "]", ",", "\n", "[", "0.81990551", ",", "0.179834", ",", "0.80803365", "]", ",", "\n", "[", "0.81520674", ",", "0.18529984", ",", "0.8173214", "]", ",", "\n", "[", "0.81034059", ",", "0.19100664", ",", "0.82631073", "]", ",", "\n", "[", "0.80531176", ",", "0.1969216", ",", "0.83499645", "]", ",", "\n", "[", "0.80012467", ",", "0.20301465", ",", "0.84337486", "]", ",", "\n", "[", "0.79478367", ",", "0.20925826", ",", "0.8514432", "]", ",", "\n", "[", "0.78929302", ",", "0.21562737", ",", "0.85919957", "]", ",", "\n", "[", "0.78365681", ",", "0.22209936", ",", "0.86664294", "]", ",", "\n", "[", "0.77787898", ",", "0.22865386", ",", "0.87377308", "]", ",", "\n", "[", "0.7719633", ",", "0.23527265", ",", "0.88059043", "]", ",", "\n", "[", "0.76591335", ",", "0.24193947", ",", "0.88709606", "]", ",", "\n", "[", "0.7597325", ",", "0.24863985", ",", "0.89329158", "]", ",", "\n", "[", "0.75342394", ",", "0.25536094", ",", "0.89917908", "]", ",", "\n", "[", "0.74699063", ",", "0.26209137", ",", "0.90476105", "]", ",", "\n", "[", "0.74043533", ",", "0.2688211", ",", "0.91004033", "]", ",", "\n", "[", "0.73376055", ",", "0.27554128", ",", "0.91502", "]", ",", "\n", "[", "0.72696862", ",", "0.28224415", ",", "0.91970339", "]", ",", "\n", "[", "0.7200616", ",", "0.2889229", ",", "0.92409395", "]", ",", "\n", "[", "0.71304134", ",", "0.29557159", ",", "0.92819525", "]", ",", "\n", "[", "0.70590945", ",", "0.30218508", ",", "0.9320109", "]", ",", "\n", "[", "0.69866732", ",", "0.30875887", ",", "0.93554451", "]", ",", "\n", "[", "0.69131609", ",", "0.31528914", ",", "0.93879964", "]", ",", "\n", "[", "0.68385669", ",", "0.32177259", ",", "0.94177976", "]", ",", "\n", "[", "0.6762898", ",", "0.32820641", ",", "0.94448822", "]", ",", "\n", "[", "0.6686159", ",", "0.33458824", ",", "0.94692818", "]", ",", "\n", "[", "0.66083524", ",", "0.3409161", ",", "0.94910264", "]", ",", "\n", "[", "0.65294785", ",", "0.34718834", ",", "0.95101432", "]", ",", "\n", "[", "0.64495358", ",", "0.35340362", ",", "0.95266571", "]", ",", "\n", "[", "0.63685208", ",", "0.35956083", ",", "0.954059", "]", ",", "\n", "[", "0.62864284", ",", "0.3656591", ",", "0.95519608", "]", ",", "\n", "[", "0.62032517", ",", "0.3716977", ",", "0.95607853", "]", ",", "\n", "[", "0.61189825", ",", "0.37767607", ",", "0.95670757", "]", ",", "\n", "[", "0.60336117", ",", "0.38359374", ",", "0.95708408", "]", ",", "\n", "[", "0.59471291", ",", "0.3894503", ",", "0.95720861", "]", ",", "\n", "[", "0.58595242", ",", "0.39524541", ",", "0.95708134", "]", ",", "\n", "[", "0.5770786", ",", "0.40097871", ",", "0.95670212", "]", ",", "\n", "[", "0.56809041", ",", "0.40664983", ",", "0.95607045", "]", ",", "\n", "[", "0.55898686", ",", "0.41225834", ",", "0.95518556", "]", ",", "\n", "[", "0.54976709", ",", "0.41780374", ",", "0.95404636", "]", ",", "\n", "[", "0.5404304", ",", "0.42328541", ",", "0.95265153", "]", ",", "\n", "[", "0.53097635", ",", "0.42870263", ",", "0.95099953", "]", ",", "\n", "[", "0.52140479", ",", "0.43405447", ",", "0.94908866", "]", ",", "\n", "[", "0.51171597", ",", "0.43933988", ",", "0.94691713", "]", ",", "\n", "[", "0.50191056", ",", "0.44455757", ",", "0.94448311", "]", ",", "\n", "[", "0.49198981", ",", "0.44970607", ",", "0.94178481", "]", ",", "\n", "[", "0.48195555", ",", "0.45478367", ",", "0.93882055", "]", ",", "\n", "[", "0.47181035", ",", "0.45978843", ",", "0.93558888", "]", ",", "\n", "[", "0.46155756", ",", "0.46471821", ",", "0.93208866", "]", ",", "\n", "[", "0.45119801", ",", "0.46957218", ",", "0.92831786", "]", ",", "\n", "[", "0.44073852", ",", "0.47434688", ",", "0.92427669", "]", ",", "\n", "[", "0.43018722", ",", "0.47903864", ",", "0.9199662", "]", ",", "\n", "[", "0.41955166", ",", "0.4836444", ",", "0.91538759", "]", ",", "\n", "[", "0.40884063", ",", "0.48816094", ",", "0.91054293", "]", ",", "\n", "[", "0.39806421", ",", "0.49258494", ",", "0.90543523", "]", ",", "\n", "[", "0.38723377", ",", "0.49691301", ",", "0.90006852", "]", ",", "\n", "[", "0.37636206", ",", "0.50114173", ",", "0.89444794", "]", ",", "\n", "[", "0.36546127", ",", "0.5052684", ",", "0.88857877", "]", ",", "\n", "[", "0.35454654", ",", "0.5092898", ",", "0.88246819", "]", ",", "\n", "[", "0.34363779", ",", "0.51320158", ",", "0.87612664", "]", ",", "\n", "[", "0.33275309", ",", "0.51700082", ",", "0.86956409", "]", ",", "\n", "[", "0.32191166", ",", "0.52068487", ",", "0.86279166", "]", ",", "\n", "[", "0.31113372", ",", "0.52425144", ",", "0.85582152", "]", ",", "\n", "[", "0.3004404", ",", "0.52769862", ",", "0.84866679", "]", ",", "\n", "[", "0.28985326", ",", "0.53102505", ",", "0.84134123", "]", ",", "\n", "[", "0.27939616", ",", "0.53422931", ",", "0.83386051", "]", ",", "\n", "[", "0.26909181", ",", "0.53731099", ",", "0.82623984", "]", ",", "\n", "[", "0.258963", ",", "0.5402702", ",", "0.81849475", "]", ",", "\n", "[", "0.24903239", ",", "0.54310763", ",", "0.8106409", "]", ",", "\n", "[", "0.23932229", ",", "0.54582448", ",", "0.80269392", "]", ",", "\n", "[", "0.22985664", ",", "0.54842189", ",", "0.79467122", "]", ",", "\n", "[", "0.2206551", ",", "0.55090241", ",", "0.78658706", "]", ",", "\n", "[", "0.21173641", ",", "0.55326901", ",", "0.77845533", "]", ",", "\n", "[", "0.20311843", ",", "0.55552489", ",", "0.77028973", "]", ",", "\n", "[", "0.1948172", ",", "0.55767365", ",", "0.76210318", "]", ",", "\n", "[", "0.1868466", ",", "0.55971922", ",", "0.75390763", "]", ",", "\n", "[", "0.17921799", ",", "0.56166586", ",", "0.74571407", "]", ",", "\n", "[", "0.1719422", ",", "0.56351747", ",", "0.73753498", "]", ",", "\n", "[", "0.16502295", ",", "0.56527915", ",", "0.72937754", "]", ",", "\n", "[", "0.15846116", ",", "0.566956", ",", "0.72124819", "]", ",", "\n", "[", "0.15225499", ",", "0.56855297", ",", "0.71315321", "]", ",", "\n", "[", "0.14639876", ",", "0.57007506", ",", "0.70509769", "]", ",", "\n", "[", "0.14088284", ",", "0.57152729", ",", "0.69708554", "]", ",", "\n", "[", "0.13569366", ",", "0.57291467", ",", "0.68911948", "]", ",", "\n", "[", "0.13081385", ",", "0.57424211", ",", "0.68120108", "]", ",", "\n", "[", "0.12622247", ",", "0.57551447", ",", "0.67333078", "]", ",", "\n", "[", "0.12189539", ",", "0.57673644", ",", "0.66550792", "]", ",", "\n", "[", "0.11780654", ",", "0.57791235", ",", "0.65773233", "]", ",", "\n", "[", "0.11392613", ",", "0.5790468", ",", "0.64999984", "]", ",", "\n", "[", "0.11022348", ",", "0.58014398", ",", "0.64230637", "]", ",", "\n", "[", "0.10666732", ",", "0.58120782", ",", "0.63464733", "]", ",", "\n", "[", "0.10322631", ",", "0.58224198", ",", "0.62701729", "]", ",", "\n", "[", "0.0998697", ",", "0.58324982", ",", "0.61941001", "]", ",", "\n", "[", "0.09656813", ",", "0.58423445", ",", "0.61181853", "]", ",", "\n", "[", "0.09329429", ",", "0.58519864", ",", "0.60423523", "]", ",", "\n", "[", "0.09002364", ",", "0.58614483", ",", "0.5966519", "]", ",", "\n", "[", "0.08673514", ",", "0.58707512", ",", "0.58905979", "]", ",", "\n", "[", "0.08341199", ",", "0.58799127", ",", "0.58144971", "]", ",", "\n", "[", "0.08004245", ",", "0.58889466", ",", "0.57381211", "]", ",", "\n", "[", "0.07662083", ",", "0.58978633", ",", "0.56613714", "]", ",", "\n", "[", "0.07314852", ",", "0.59066692", ",", "0.55841474", "]", ",", "\n", "[", "0.06963541", ",", "0.5915367", ",", "0.55063471", "]", ",", "\n", "[", "0.06610144", ",", "0.59239556", ",", "0.54278681", "]", ",", "\n", "[", "0.06257861", ",", "0.59324304", ",", "0.53486082", "]", ",", "\n", "[", "0.05911304", ",", "0.59407833", ",", "0.52684614", "]", ",", "\n", "[", "0.05576765", ",", "0.5949003", ",", "0.5187322", "]", ",", "\n", "[", "0.05262511", ",", "0.59570732", ",", "0.51050978", "]", ",", "\n", "[", "0.04978881", ",", "0.5964975", ",", "0.50216936", "]", ",", "\n", "[", "0.04738319", ",", "0.59726862", ",", "0.49370174", "]", ",", "\n", "[", "0.04555067", ",", "0.59801813", ",", "0.48509809", "]", ",", "\n", "[", "0.04444396", ",", "0.59874316", ",", "0.47635", "]", ",", "\n", "[", "0.04421323", ",", "0.59944056", ",", "0.46744951", "]", ",", "\n", "[", "0.04498918", ",", "0.60010687", ",", "0.45838913", "]", ",", "\n", "[", "0.04686604", ",", "0.60073837", ",", "0.44916187", "]", ",", "\n", "[", "0.04988979", ",", "0.60133103", ",", "0.43976125", "]", ",", "\n", "[", "0.05405573", ",", "0.60188055", ",", "0.4301812", "]", ",", "\n", "[", "0.05932209", ",", "0.60238289", ",", "0.42040543", "]", ",", "\n", "[", "0.06560774", ",", "0.60283258", ",", "0.41043772", "]", ",", "\n", "[", "0.07281962", ",", "0.60322442", ",", "0.40027363", "]", ",", "\n", "[", "0.08086177", ",", "0.60355283", ",", "0.38990941", "]", ",", "\n", "[", "0.08964366", ",", "0.60381194", ",", "0.37934208", "]", ",", "\n", "[", "0.09908952", ",", "0.60399554", ",", "0.36856412", "]", ",", "\n", "[", "0.10914617", ",", "0.60409695", ",", "0.35755799", "]", ",", "\n", "[", "0.11974119", ",", "0.60410858", ",", "0.34634096", "]", ",", "\n", "[", "0.13082746", ",", "0.6040228", ",", "0.33491416", "]", ",", "\n", "[", "0.14238003", ",", "0.60383119", ",", "0.323267", "]", ",", "\n", "[", "0.1543847", ",", "0.60352425", ",", "0.31138823", "]", ",", "\n", "[", "0.16679093", ",", "0.60309301", ",", "0.29931029", "]", ",", "\n", "[", "0.17959757", ",", "0.60252668", ",", "0.2870237", "]", ",", "\n", "[", "0.19279966", ",", "0.60181364", ",", "0.27452964", "]", ",", "\n", "[", "0.20634465", ",", "0.60094466", ",", "0.2618794", "]", ",", "\n", "[", "0.22027287", ",", "0.5999043", ",", "0.24904251", "]", ",", "\n", "[", "0.23449833", ",", "0.59868591", ",", "0.23611022", "]", ",", "\n", "[", "0.24904416", ",", "0.5972746", ",", "0.2230778", "]", ",", "\n", "[", "0.26382006", ",", "0.59566656", ",", "0.21004673", "]", ",", "\n", "[", "0.2788104", ",", "0.5938521", ",", "0.19705484", "]", ",", "\n", "[", "0.29391494", ",", "0.59183348", ",", "0.18421621", "]", ",", "\n", "[", "0.3090634", ",", "0.58961302", ",", "0.17161942", "]", ",", "\n", "[", "0.32415577", ",", "0.58720132", ",", "0.15937753", "]", ",", "\n", "[", "0.3391059", ",", "0.58461164", ",", "0.14759012", "]", ",", "\n", "[", "0.35379624", ",", "0.58186793", ",", "0.13637734", "]", ",", "\n", "[", "0.36817905", ",", "0.5789861", ",", "0.12580054", "]", ",", "\n", "[", "0.38215966", ",", "0.57599512", ",", "0.1159504", "]", ",", "\n", "[", "0.39572824", ",", "0.57290928", ",", "0.10685038", "]", ",", "\n", "[", "0.40881926", ",", "0.56975727", ",", "0.09855521", "]", ",", "\n", "[", "0.42148106", ",", "0.56654159", ",", "0.09104002", "]", ",", "\n", "[", "0.43364953", ",", "0.56329296", ",", "0.08434116", "]", ",", "\n", "[", "0.44538908", ",", "0.56000859", ",", "0.07841305", "]", ",", "\n", "[", "0.45672421", ",", "0.5566943", ",", "0.07322913", "]", ",", "\n", "[", "0.46765017", ",", "0.55336373", ",", "0.06876762", "]", ",", "\n", "[", "0.47819138", ",", "0.5500213", ",", "0.06498436", "]", ",", "\n", "[", "0.48839686", ",", "0.54666195", ",", "0.06182163", "]", ",", "\n", "[", "0.49828924", ",", "0.5432874", ",", "0.05922726", "]", ",", "\n", "[", "0.50789114", ",", "0.53989827", ",", "0.05714466", "]", ",", "\n", "[", "0.51722475", ",", "0.53649429", ",", "0.05551476", "]", ",", "\n", "[", "0.5263115", ",", "0.53307443", ",", "0.05427793", "]", ",", "\n", "[", "0.53517186", ",", "0.52963707", ",", "0.05337567", "]", ",", "\n", "[", "0.54382515", ",", "0.52618009", ",", "0.05275208", "]", ",", "\n", "[", "0.55228947", ",", "0.52270103", ",", "0.05235479", "]", ",", "\n", "[", "0.56058163", ",", "0.51919713", ",", "0.0521356", "]", ",", "\n", "[", "0.56871719", ",", "0.51566545", ",", "0.05205062", "]", ",", "\n", "[", "0.57671045", ",", "0.51210292", ",", "0.0520602", "]", ",", "\n", "[", "0.5845745", ",", "0.50850636", ",", "0.05212851", "]", ",", "\n", "[", "0.59232129", ",", "0.50487256", ",", "0.05222299", "]", ",", "\n", "[", "0.5999617", ",", "0.50119827", ",", "0.05231367", "]", ",", "\n", "[", "0.60750568", ",", "0.49748022", ",", "0.05237234", "]", ",", "\n", "[", "0.61496232", ",", "0.49371512", ",", "0.05237168", "]", ",", "\n", "[", "0.62233999", ",", "0.48989963", ",", "0.05228423", "]", ",", "\n", "[", "0.62964652", ",", "0.48603032", ",", "0.05208127", "]", ",", "\n", "[", "0.63688935", ",", "0.48210362", ",", "0.05173155", "]", ",", "\n", "[", "0.64407572", ",", "0.4781157", ",", "0.0511996", "]", ",", "\n", "[", "0.65121289", ",", "0.47406244", ",", "0.05044367", "]", ",", "\n", "[", "0.65830839", ",", "0.46993917", ",", "0.04941288", "]", ",", "\n", "]", "\n", "return", "_cmap", "(", "\"linear_phase\"", ",", "cm_data", ",", "reverse", "=", "reverse", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_diverging_curl": [[1613, 4179], ["plt._cmap"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt._cmap"], ["", "def", "cmap_diverging_curl", "(", "reverse", "=", "False", ")", ":", "\n", "# cmocean, MIT license", "\n", "# diverging colormap, perceptually uniform", "\n", "    ", "cm_data", "=", "[", "\n", "[", "\n", "8.225559928700268419e-02", ",", "\n", "1.149244079727295142e-01", ",", "\n", "2.647901677800857390e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.312616532498406929e-02", ",", "\n", "1.190383729463048712e-01", ",", "\n", "2.668628892216621806e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.400180885962132971e-02", ",", "\n", "1.231074880892656653e-01", ",", "\n", "2.689526699064171411e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.487294239495335457e-02", ",", "\n", "1.271387529060027943e-01", ",", "\n", "2.710541708402016137e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.574385298640457842e-02", ",", "\n", "1.311333174761502018e-01", ",", "\n", "2.731691209373900975e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.661249189260347703e-02", ",", "\n", "1.350944971238551839e-01", ",", "\n", "2.752961432065319514e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.747533041314431435e-02", ",", "\n", "1.390258052165279645e-01", ",", "\n", "2.774332852121961235e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.833858505105957049e-02", ",", "\n", "1.429270910011002649e-01", ",", "\n", "2.795831537842536352e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.919012906146844832e-02", ",", "\n", "1.468043594975814992e-01", ",", "\n", "2.817400195447572475e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.004099984169053328e-02", ",", "\n", "1.506555099870153513e-01", ",", "\n", "2.839086654207542693e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.088231952195491292e-02", ",", "\n", "1.544850037627045203e-01", ",", "\n", "2.860850125083750362e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.171714479257989105e-02", ",", "\n", "1.582931942356169963e-01", ",", "\n", "2.882702798507874586e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.254607948203208423e-02", ",", "\n", "1.620811665705463311e-01", ",", "\n", "2.904645825457518593e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.336173420340779239e-02", ",", "\n", "1.658523274558137695e-01", ",", "\n", "2.926648040593683997e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.417284157369981701e-02", ",", "\n", "1.696050767223750977e-01", ",", "\n", "2.948744162588470830e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.496899572502048859e-02", ",", "\n", "1.733434725855039771e-01", ",", "\n", "2.970892156823352059e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.575619444438937533e-02", ",", "\n", "1.770666290075273708e-01", ",", "\n", "2.993115284087380368e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.653316478613682694e-02", ",", "\n", "1.807757562460599599e-01", ",", "\n", "3.015407883893915231e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.729328810023782359e-02", ",", "\n", "1.844734436312414905e-01", ",", "\n", "3.037745103921251633e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.804493118338306057e-02", ",", "\n", "1.881580898967480098e-01", ",", "\n", "3.060157402408537064e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.877832247043097369e-02", ",", "\n", "1.918329889556127654e-01", ",", "\n", "3.082609202522414993e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.949803783218733044e-02", ",", "\n", "1.954975058870322413e-01", ",", "\n", "3.105116763778897337e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.002054858430543316e-01", ",", "\n", "1.991518634625495388e-01", ",", "\n", "3.127684262427183892e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.008900241588315538e-01", ",", "\n", "2.027992883367119026e-01", ",", "\n", "3.150275553737127421e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.015620277820400430e-01", ",", "\n", "2.064376400065636719e-01", ",", "\n", "3.172925125709148420e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.022150454689789434e-01", ",", "\n", "2.100689913462399083e-01", ",", "\n", "3.195611195376787395e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.028468845169810686e-01", ",", "\n", "2.136942776676366007e-01", ",", "\n", "3.218326666201724029e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.034637486817424901e-01", ",", "\n", "2.173124203806320875e-01", ",", "\n", "3.241090419310820314e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.040556247342821483e-01", ",", "\n", "2.209261472703716311e-01", ",", "\n", "3.263871052200472134e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.046272664909374817e-01", ",", "\n", "2.245346804307608024e-01", ",", "\n", "3.286682704446855507e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.051814556007013568e-01", ",", "\n", "2.281377376539149293e-01", ",", "\n", "3.309532535866355762e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.057055066316897329e-01", ",", "\n", "2.317384538919968207e-01", ",", "\n", "3.332383062494437276e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.062093640276061124e-01", ",", "\n", "2.353348932541681759e-01", ",", "\n", "3.355262248019345583e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.066927192498384747e-01", ",", "\n", "2.389274243968986799e-01", ",", "\n", "3.378167764830257158e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.071428862568302165e-01", ",", "\n", "2.425189920877232619e-01", ",", "\n", "3.401063918909076889e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.075713140889580088e-01", ",", "\n", "2.461073946949010050e-01", ",", "\n", "3.423980926413837667e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.079763885418836000e-01", ",", "\n", "2.496932209057829977e-01", ",", "\n", "3.446912766824791197e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.083460004297124302e-01", ",", "\n", "2.532791299120676354e-01", ",", "\n", "3.469826761312421182e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.086913329090623825e-01", ",", "\n", "2.568630402753477870e-01", ",", "\n", "3.492750549670107785e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.090116287119651528e-01", ",", "\n", "2.604453159192556266e-01", ",", "\n", "3.515680214913912693e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.092932808921200649e-01", ",", "\n", "2.640287615628073015e-01", ",", "\n", "3.538580573547516761e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.095478763802813504e-01", ",", "\n", "2.676112773022403801e-01", ",", "\n", "3.561478615212890775e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.097748910210358808e-01", ",", "\n", "2.711931376089152246e-01", ",", "\n", "3.584370856671010852e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.099635342633853707e-01", ",", "\n", "2.747764822051754763e-01", ",", "\n", "3.607229892872333421e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.101198294511886444e-01", ",", "\n", "2.783603021914852760e-01", ",", "\n", "3.630068099573608986e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.102460152182262176e-01", ",", "\n", "2.819443225282238785e-01", ",", "\n", "3.652888319764409086e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.103361572207214036e-01", ",", "\n", "2.855297163446686715e-01", ",", "\n", "3.675674754730824945e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.103867349279119559e-01", ",", "\n", "2.891171759115234718e-01", ",", "\n", "3.698417464033080804e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.104047114339987423e-01", ",", "\n", "2.927055780381122019e-01", ",", "\n", "3.721129484539063559e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.103893448894039397e-01", ",", "\n", "2.962951553198432397e-01", ",", "\n", "3.743806401368951486e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.103290785873510815e-01", ",", "\n", "2.998879083652261635e-01", ",", "\n", "3.766420819050353419e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.102317288825286901e-01", ",", "\n", "3.034825829921489193e-01", ",", "\n", "3.788986922133656954e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.100986315611906241e-01", ",", "\n", "3.070790351009552999e-01", ",", "\n", "3.811504545068737926e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.099286556573810802e-01", ",", "\n", "3.106775192369479188e-01", ",", "\n", "3.833968205472055302e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.097092559883022234e-01", ",", "\n", "3.142800415550652815e-01", ",", "\n", "3.856349205402823110e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.094518269158459012e-01", ",", "\n", "3.178848431435130073e-01", ",", "\n", "3.878667847148202785e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.091556968975302966e-01", ",", "\n", "3.214920812428978536e-01", ",", "\n", "3.900919340676701208e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.088202096165073185e-01", ",", "\n", "3.251019032868823211e-01", ",", "\n", "3.923098843692563453e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.084337294201929702e-01", ",", "\n", "3.287160421828903556e-01", ",", "\n", "3.945179917556369542e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.080052802278752000e-01", ",", "\n", "3.323331728550899533e-01", ",", "\n", "3.967176863054378000e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.075355258379605550e-01", ",", "\n", "3.359532282299735328e-01", ",", "\n", "3.989087127976621017e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.070239159802940931e-01", ",", "\n", "3.395763147211236510e-01", ",", "\n", "4.010905648833596460e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.064666158592602885e-01", ",", "\n", "3.432029795356145718e-01", ",", "\n", "4.032620996037361571e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.058582376509708545e-01", ",", "\n", "3.468339423292918222e-01", ",", "\n", "4.054218838433404359e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.052065591856250482e-01", ",", "\n", "3.504681464569319171e-01", ",", "\n", "4.075709632165070984e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.045112201334900126e-01", ",", "\n", "3.541056562885774861e-01", ",", "\n", "4.097088092956981398e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.037719209811681642e-01", ",", "\n", "3.577465259466254266e-01", ",", "\n", "4.118348877541359032e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.029884320307208612e-01", ",", "\n", "3.613907991323849767e-01", ",", "\n", "4.139486582680417803e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.021513134274243950e-01", ",", "\n", "3.650396452261166491e-01", ",", "\n", "4.160478671051655586e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.012689167529539358e-01", ",", "\n", "3.686920150348446112e-01", ",", "\n", "4.181335233490640069e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.003423119365809690e-01", ",", "\n", "3.723477936835040136e-01", ",", "\n", "4.202052548968338574e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.937169919107982641e-02", ",", "\n", "3.760069784468507703e-01", ",", "\n", "4.222625006231348066e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.835741884413440328e-02", ",", "\n", "3.796695548525758634e-01", ",", "\n", "4.243046936775203282e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.729997123759509536e-02", ",", "\n", "3.833354963232004087e-01", ",", "\n", "4.263312615677605777e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.620003933222870396e-02", ",", "\n", "3.870047637840662302e-01", ",", "\n", "4.283416262899890081e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.505172587236093706e-02", ",", "\n", "3.906780327832828914e-01", ",", "\n", "4.303339883746660766e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.386233813144639893e-02", ",", "\n", "3.943545459798681874e-01", ",", "\n", "4.323088724355508838e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.263427266200571775e-02", ",", "\n", "3.980341179549674036e-01", ",", "\n", "4.342658626828024837e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.136927887187012987e-02", ",", "\n", "4.017166535612498035e-01", ",", "\n", "4.362043674792987491e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.006945702453716951e-02", ",", "\n", "4.054020428715323643e-01", ",", "\n", "4.381237915805220595e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.873730500447504776e-02", ",", "\n", "4.090901606132017476e-01", ",", "\n", "4.400235366709063789e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.737577058920215078e-02", ",", "\n", "4.127808655736769361e-01", ",", "\n", "4.419030019956885491e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.598830961259482097e-02", ",", "\n", "4.164739999785817548e-01", ",", "\n", "4.437615850971945997e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.457895032121595658e-02", ",", "\n", "4.201693888446985103e-01", ",", "\n", "4.455986826648858368e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.315236408743081897e-02", ",", "\n", "4.238668393102046350e-01", ",", "\n", "4.474136915088433031e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.171394242970148047e-02", ",", "\n", "4.275661399451892164e-01", ",", "\n", "4.492060096666721791e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.026987997778653461e-02", ",", "\n", "4.312670600459782566e-01", ",", "\n", "4.509750376540915817e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.882726258105521300e-02", ",", "\n", "4.349693489173894201e-01", ",", "\n", "4.527201798696426915e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.739415915996109008e-02", ",", "\n", "4.386727351476746306e-01", ",", "\n", "4.544408461640829233e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.597971511267428979e-02", ",", "\n", "4.423769258816079852e-01", ",", "\n", "4.561364535850265800e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.459424408415230023e-02", ",", "\n", "4.460816060979165276e-01", ",", "\n", "4.578064283072901808e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.324931366840245484e-02", ",", "\n", "4.497864378980456768e-01", ",", "\n", "4.594502077591564038e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.195781915786156335e-02", ",", "\n", "4.534910598140922677e-01", ",", "\n", "4.610672429543411499e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.073403782879061907e-02", ",", "\n", "4.571950861446216208e-01", ",", "\n", "4.626570010388615928e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.959365457471067273e-02", ",", "\n", "4.608981063279830592e-01", ",", "\n", "4.642189680611767399e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.855374817251533304e-02", ",", "\n", "4.645996843636931994e-01", ",", "\n", "4.657526519729214276e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.763272639280798471e-02", ",", "\n", "4.682993582933911436e-01", ",", "\n", "4.672575858662252890e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.685019795786503738e-02", ",", "\n", "4.719966397538147285e-01", ",", "\n", "4.687333314519904204e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.622677049492370349e-02", ",", "\n", "4.756910136151853430e-01", ",", "\n", "4.701794827815656830e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.577673858968982601e-02", ",", "\n", "4.793824370720338179e-01", ",", "\n", "4.715941633832017588e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.552566064603559948e-02", ",", "\n", "4.830700650743400826e-01", ",", "\n", "4.729777438223161101e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.549820807888259711e-02", ",", "\n", "4.867530881918184504e-01", ",", "\n", "4.743305399824718216e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.571558023976076246e-02", ",", "\n", "4.904308747270616498e-01", ",", "\n", "4.756523204648347991e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.619782080433814220e-02", ",", "\n", "4.941027658684106760e-01", ",", "\n", "4.769429100625798834e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.696293828126623215e-02", ",", "\n", "4.977680989992983585e-01", ",", "\n", "4.782021118153178540e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.801610562745827315e-02", ",", "\n", "5.014269919387287500e-01", ",", "\n", "4.794267081520149909e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.938287907938911481e-02", ",", "\n", "5.050778255979795350e-01", ",", "\n", "4.806197953737798012e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.107372065756567547e-02", ",", "\n", "5.087198306495862576e-01", ",", "\n", "4.817814896929000779e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.309574065371191032e-02", ",", "\n", "5.123522156200341904e-01", ",", "\n", "4.829119931483520367e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.544312997722565917e-02", ",", "\n", "5.159750173542567708e-01", ",", "\n", "4.840076729265158639e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.812721320542403980e-02", ",", "\n", "5.195865216476734938e-01", ",", "\n", "4.850725749743695636e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.114572394888117102e-02", ",", "\n", "5.231858403590214923e-01", ",", "\n", "4.861073630469811557e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.448832972524200624e-02", ",", "\n", "5.267726392289812098e-01", ",", "\n", "4.871097239159773440e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.815110303261089464e-02", ",", "\n", "5.303457163263245455e-01", ",", "\n", "4.880817131293228583e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.212706115366336990e-02", ",", "\n", "5.339038791645212001e-01", ",", "\n", "4.890257976801760109e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.640117372078826907e-02", ",", "\n", "5.374467824904106683e-01", ",", "\n", "4.899392661237967350e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.009651127375016111e-01", ",", "\n", "5.409730397620680087e-01", ",", "\n", "4.908260102866368046e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.058058868411170528e-01", ",", "\n", "5.444817357603629615e-01", ",", "\n", "4.916873206428047927e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.109091719419828259e-01", ",", "\n", "5.479722539284174188e-01", ",", "\n", "4.925220286879308795e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.162631754482068569e-01", ",", "\n", "5.514432364311973034e-01", ",", "\n", "4.933355557142476422e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.218535592637135234e-01", ",", "\n", "5.548942058020517321e-01", ",", "\n", "4.941256571865651481e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.276672732366210816e-01", ",", "\n", "5.583239554235875923e-01", ",", "\n", "4.948978636889357907e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.336912106530599997e-01", ",", "\n", "5.617318570854707982e-01", ",", "\n", "4.956519172255148820e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.399119531735926458e-01", ",", "\n", "5.651170059000043544e-01", ",", "\n", "4.963918396953513335e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.463171276735238113e-01", ",", "\n", "5.684787369209851615e-01", ",", "\n", "4.971190242696297834e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.528937099908951325e-01", ",", "\n", "5.718163393279495077e-01", ",", "\n", "4.978371217540351057e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.596300036906863895e-01", ",", "\n", "5.751292412901443107e-01", ",", "\n", "4.985481743532478860e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.665133003434038084e-01", ",", "\n", "5.784169089899582339e-01", ",", "\n", "4.992561455145328453e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.735328783097749850e-01", ",", "\n", "5.816789154432452369e-01", ",", "\n", "4.999631315071642601e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.806761031013389140e-01", ",", "\n", "5.849149331180006905e-01", ",", "\n", "5.006736479698321585e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.879334378838529440e-01", ",", "\n", "5.881246912104457492e-01", ",", "\n", "5.013896313522919757e-01", ",", "\n", "]", ",", "\n", "[", "\n", "1.952924636272905801e-01", ",", "\n", "5.913080959200207598e-01", ",", "\n", "5.021159025525618880e-01", ",", "\n", "]", ",", "\n", "[", "\n", "2.027443124327554802e-01", ",", "\n", "5.944650539898058694e-01", ",", "\n", "5.028546409645925364e-01", ",", "\n", "]", ",", "\n", "[", "\n", "2.102776619158149840e-01", ",", "\n", "5.975956842983582984e-01", ",", "\n", "5.036102222376415138e-01", ",", "\n", "]", ",", "\n", "[", "\n", "2.178835011739876371e-01", ",", "\n", "6.007001216855215597e-01", ",", "\n", "5.043855354959408954e-01", ",", "\n", "]", ",", "\n", "[", "\n", "2.255521696872271886e-01", ",", "\n", "6.037786523436265984e-01", ",", "\n", "5.051841613954050070e-01", ",", "\n", "]", ",", "\n", "[", "\n", "2.332749143253212143e-01", ",", "\n", "6.068316286127126702e-01", ",", "\n", "5.060092633925864503e-01", ",", "\n", "]", ",", "\n", "[", "\n", "2.410430130087069522e-01", ",", "\n", "6.098595200479223211e-01", ",", "\n", "5.068641518721540562e-01", ",", "\n", "]", ",", "\n", "[", "\n", "2.488489441844971561e-01", ",", "\n", "6.128628192186393875e-01", ",", "\n", "5.077515718650474907e-01", ",", "\n", "]", ",", "\n", "[", "\n", "2.566840197606024554e-01", ",", "\n", "6.158422311486778655e-01", ",", "\n", "5.086750547256451149e-01", ",", "\n", "]", ",", "\n", "[", "\n", "2.645425291505308918e-01", ",", "\n", "6.187983086880044503e-01", ",", "\n", "5.096365792929340444e-01", ",", "\n", "]", ",", "\n", "[", "\n", "2.724162323640093031e-01", ",", "\n", "6.217319406932720893e-01", ",", "\n", "5.106395912364674050e-01", ",", "\n", "]", ",", "\n", "[", "\n", "2.803003746086680792e-01", ",", "\n", "6.246437759477415641e-01", ",", "\n", "5.116857725517640620e-01", ",", "\n", "]", ",", "\n", "[", "\n", "2.881881143962810587e-01", ",", "\n", "6.275347641630057982e-01", ",", "\n", "5.127779478270290126e-01", ",", "\n", "]", ",", "\n", "[", "\n", "2.960748324121407205e-01", ",", "\n", "6.304057046767445049e-01", ",", "\n", "5.139178767894679867e-01", ",", "\n", "]", ",", "\n", "[", "\n", "3.039555214161791530e-01", ",", "\n", "6.332575133378499643e-01", ",", "\n", "5.151075596956975478e-01", ",", "\n", "]", ",", "\n", "[", "\n", "3.118254758119217707e-01", ",", "\n", "6.360911463304157465e-01", ",", "\n", "5.163488722475468862e-01", ",", "\n", "]", ",", "\n", "[", "\n", "3.196814435511296515e-01", ",", "\n", "6.389074409416231060e-01", ",", "\n", "5.176430585409529384e-01", ",", "\n", "]", ",", "\n", "[", "\n", "3.275188103490194735e-01", ",", "\n", "6.417074699067215615e-01", ",", "\n", "5.189919719540163623e-01", ",", "\n", "]", ",", "\n", "[", "\n", "3.353355552299603914e-01", ",", "\n", "6.444920106677175520e-01", ",", "\n", "5.203963563323180663e-01", ",", "\n", "]", ",", "\n", "[", "\n", "3.431277348645550562e-01", ",", "\n", "6.472621506436356809e-01", ",", "\n", "5.218577640245062321e-01", ",", "\n", "]", ",", "\n", "[", "\n", "3.508936232465371674e-01", ",", "\n", "6.500187029053001719e-01", ",", "\n", "5.233768303957324619e-01", ",", "\n", "]", ",", "\n", "[", "\n", "3.586308928051362699e-01", ",", "\n", "6.527625972609284455e-01", ",", "\n", "5.249544352005411918e-01", ",", "\n", "]", ",", "\n", "[", "\n", "3.663368289249827603e-01", ",", "\n", "6.554948605761221625e-01", ",", "\n", "5.265915743478537525e-01", ",", "\n", "]", ",", "\n", "[", "\n", "3.740119682194762429e-01", ",", "\n", "6.582160193662682790e-01", ",", "\n", "5.282880419647097980e-01", ",", "\n", "]", ",", "\n", "[", "\n", "3.816510562742471135e-01", ",", "\n", "6.609275747235534570e-01", ",", "\n", "5.300456830101799577e-01", ",", "\n", "]", ",", "\n", "[", "\n", "3.892580517875900981e-01", ",", "\n", "6.636294950347043642e-01", ",", "\n", "5.318631054022345817e-01", ",", "\n", "]", ",", "\n", "[", "\n", "3.968261890078971788e-01", ",", "\n", "6.663236061846555813e-01", ",", "\n", "5.337425455110953454e-01", ",", "\n", "]", ",", "\n", "[", "\n", "4.043593499172888350e-01", ",", "\n", "6.690098785171258999e-01", ",", "\n", "5.356826761355167887e-01", ",", "\n", "]", ",", "\n", "[", "\n", "4.118554481683104340e-01", ",", "\n", "6.716893377862352965e-01", ",", "\n", "5.376841277217632165e-01", ",", "\n", "]", ",", "\n", "[", "\n", "4.193119538935562440e-01", ",", "\n", "6.743631277083362852e-01", ",", "\n", "5.397475699351562684e-01", ",", "\n", "]", ",", "\n", "[", "\n", "4.267325988888523436e-01", ",", "\n", "6.770311866202418649e-01", ",", "\n", "5.418718349209995511e-01", ",", "\n", "]", ",", "\n", "[", "\n", "4.341129901223799714e-01", ",", "\n", "6.796950319734580415e-01", ",", "\n", "5.440580596655568701e-01", ",", "\n", "]", ",", "\n", "[", "\n", "4.414547339722453279e-01", ",", "\n", "6.823550079810395408e-01", ",", "\n", "5.463056567639269501e-01", ",", "\n", "]", ",", "\n", "[", "\n", "4.487598229028739172e-01", ",", "\n", "6.850113432670585922e-01", ",", "\n", "5.486140038956078824e-01", ",", "\n", "]", ",", "\n", "[", "\n", "4.560240745098563253e-01", ",", "\n", "6.876655632831355502e-01", ",", "\n", "5.509839689679422170e-01", ",", "\n", "]", ",", "\n", "[", "\n", "4.632498634530364812e-01", ",", "\n", "6.903178139102768007e-01", ",", "\n", "5.534147775766539157e-01", ",", "\n", "]", ",", "\n", "[", "\n", "4.704389351347622594e-01", ",", "\n", "6.929683367461523247e-01", ",", "\n", "5.559058726658481220e-01", ",", "\n", "]", ",", "\n", "[", "\n", "4.775890398856753039e-01", ",", "\n", "6.956182556045346077e-01", ",", "\n", "5.584575291026864230e-01", ",", "\n", "]", ",", "\n", "[", "\n", "4.846997162615552246e-01", ",", "\n", "6.982683108816961637e-01", ",", "\n", "5.610695620964348818e-01", ",", "\n", "]", ",", "\n", "[", "\n", "4.917741270603506742e-01", ",", "\n", "7.009183842407572529e-01", ",", "\n", "5.637411222277634026e-01", ",", "\n", "]", ",", "\n", "[", "\n", "4.988124547076915882e-01", ",", "\n", "7.035690215604037956e-01", ",", "\n", "5.664719533702552434e-01", ",", "\n", "]", ",", "\n", "[", "\n", "5.058115298480653221e-01", ",", "\n", "7.062215879970826782e-01", ",", "\n", "5.692622613027222833e-01", ",", "\n", "]", ",", "\n", "[", "\n", "5.127738759690677606e-01", ",", "\n", "7.088760718122417703e-01", ",", "\n", "5.721113127309581659e-01", ",", "\n", "]", ",", "\n", "[", "\n", "5.197010257328686933e-01", ",", "\n", "7.115326679134365007e-01", ",", "\n", "5.750185876848199484e-01", ",", "\n", "]", ",", "\n", "[", "\n", "5.265932673521412921e-01", ",", "\n", "7.141918646847531527e-01", ",", "\n", "5.779837442967735717e-01", ",", "\n", "]", ",", "\n", "[", "\n", "5.334494816269396145e-01", ",", "\n", "7.168545129510710545e-01", ",", "\n", "5.810065526719623286e-01", ",", "\n", "]", ",", "\n", "[", "\n", "5.402690647877386176e-01", ",", "\n", "7.195213413684249382e-01", ",", "\n", "5.840866494502513495e-01", ",", "\n", "]", ",", "\n", "[", "\n", "5.470548736207613283e-01", ",", "\n", "7.221921468817737999e-01", ",", "\n", "5.872233804977959881e-01", ",", "\n", "]", ",", "\n", "[", "\n", "5.538072551957783363e-01", ",", "\n", "7.248673679611095100e-01", ",", "\n", "5.904163410524770894e-01", ",", "\n", "]", ",", "\n", "[", "\n", "5.605265661533928023e-01", ",", "\n", "7.275474322700724583e-01", ",", "\n", "5.936651120515976654e-01", ",", "\n", "]", ",", "\n", "[", "\n", "5.672131712764029166e-01", ",", "\n", "7.302327570205698892e-01", ",", "\n", "5.969692609600730782e-01", ",", "\n", "]", ",", "\n", "[", "\n", "5.738649923321349489e-01", ",", "\n", "7.329244536181049874e-01", ",", "\n", "6.003283620189617809e-01", ",", "\n", "]", ",", "\n", "[", "\n", "5.804845702488933279e-01", ",", "\n", "7.356223182652517067e-01", ",", "\n", "6.037418650719156288e-01", ",", "\n", "]", ",", "\n", "[", "\n", "5.870727421002424062e-01", ",", "\n", "7.383266077479672118e-01", ",", "\n", "6.072092971993915400e-01", ",", "\n", "]", ",", "\n", "[", "\n", "5.936298933201957784e-01", ",", "\n", "7.410376988478269977e-01", ",", "\n", "6.107301851240671819e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.001564124519274124e-01", ",", "\n", "7.437559595200373685e-01", ",", "\n", "6.143040456187923715e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.066526905401021796e-01", ",", "\n", "7.464817491552263595e-01", ",", "\n", "6.179303860708607044e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.131191206125891080e-01", ",", "\n", "7.492154188267443615e-01", ",", "\n", "6.216087050224498034e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.195560972423146406e-01", ",", "\n", "7.519573115237726535e-01", ",", "\n", "6.253384926911926822e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.259635861936422296e-01", ",", "\n", "7.547078996712067722e-01", ",", "\n", "6.291191822939783407e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.323414409254812796e-01", ",", "\n", "7.574676913865331374e-01", ",", "\n", "6.329501570682624090e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.386911927456534466e-01", ",", "\n", "7.602366470910791874e-01", ",", "\n", "6.368310037415121361e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.450132383997043695e-01", ",", "\n", "7.630150778921287458e-01", ",", "\n", "6.407611911364364810e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.513079749051275957e-01", ",", "\n", "7.658032878094622742e-01", ",", "\n", "6.447401822997557153e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.575757994324034073e-01", ",", "\n", "7.686015739346664377e-01", ",", "\n", "6.487674349657708284e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.638171092147175933e-01", ",", "\n", "7.714102265818907345e-01", ",", "\n", "6.528424020163275943e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.700323014813579503e-01", ",", "\n", "7.742295294309987641e-01", ",", "\n", "6.569645319377305226e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.762217734101813038e-01", ",", "\n", "7.770597596640953508e-01", ",", "\n", "6.611332692747456941e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.823859220949484161e-01", ",", "\n", "7.799011880964143995e-01", ",", "\n", "6.653480550814426797e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.885251445237092760e-01", ",", "\n", "7.827540793025653532e-01", ",", "\n", "6.696083273682165160e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.946398375648411561e-01", ",", "\n", "7.856186917391158042e-01", ",", "\n", "6.739135215439332471e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.007303979576740005e-01", ",", "\n", "7.884952778644843674e-01", ",", "\n", "6.782630708517513041e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.067972223051004477e-01", ",", "\n", "7.913840842570615264e-01", ",", "\n", "6.826564067967675342e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.128407070658809852e-01", ",", "\n", "7.942853517324697243e-01", ",", "\n", "6.870929595632513376e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.188612485448663270e-01", ",", "\n", "7.971993154607720511e-01", ",", "\n", "6.915721584188375681e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.248592428796667431e-01", ",", "\n", "8.001262050844080154e-01", ",", "\n", "6.960934321026465144e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.308350860228653989e-01", ",", "\n", "8.030662448375227580e-01", ",", "\n", "7.006562091939169123e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.367891737192681090e-01", ",", "\n", "8.060196536672460388e-01", ",", "\n", "7.052599184573171698e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.427219014782563411e-01", ",", "\n", "8.089866453573647531e-01", ",", "\n", "7.099039891607071828e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.486327256130643759e-01", ",", "\n", "8.119678017125729896e-01", ",", "\n", "7.145873998348200029e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.545223076817887398e-01", ",", "\n", "8.149632306197714948e-01", ",", "\n", "7.193096566367255251e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.603915796412942241e-01", ",", "\n", "8.179729213555224643e-01", ",", "\n", "7.240704295566047222e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.662409381414175824e-01", ",", "\n", "8.209970689783633313e-01", ",", "\n", "7.288691437189614986e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.720707796269933310e-01", ",", "\n", "8.240358639329949941e-01", ",", "\n", "7.337052258319404219e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.778815003305534770e-01", ",", "\n", "8.270894921786368092e-01", ",", "\n", "7.385781042557458820e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.836734962813408645e-01", ",", "\n", "8.301581353160575327e-01", ",", "\n", "7.434872090029538416e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.894471633387081244e-01", ",", "\n", "8.332419707110174656e-01", ",", "\n", "7.484319716624078245e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.952028972601549173e-01", ",", "\n", "8.363411716110775718e-01", ",", "\n", "7.534118252377455249e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.009401766621723207e-01", ",", "\n", "8.394563042330350777e-01", ",", "\n", "7.584255820860429376e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.066584706735069332e-01", ",", "\n", "8.425879497641356464e-01", ",", "\n", "7.634719632765348818e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.123599093553812711e-01", ",", "\n", "8.457355276105180675e-01", ",", "\n", "7.685515296147656938e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.180448941186928558e-01", ",", "\n", "8.488991950022984900e-01", ",", "\n", "7.736637090147417961e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.237138279483190439e-01", ",", "\n", "8.520791051833870311e-01", ",", "\n", "7.788079287668441264e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.293671160911614271e-01", ",", "\n", "8.552754073408689317e-01", ",", "\n", "7.839836146965878383e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.350048677827189847e-01", ",", "\n", "8.584883831868801440e-01", ",", "\n", "7.891899443847590900e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.406246724049463159e-01", ",", "\n", "8.617194786977677712e-01", ",", "\n", "7.944239257301034529e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.462299834685677036e-01", ",", "\n", "8.649674562084326279e-01", ",", "\n", "7.996873827745283325e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.518212329614019973e-01", ",", "\n", "8.682324447773152043e-01", ",", "\n", "8.049797193798620132e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.573988637074910768e-01", ",", "\n", "8.715145671024431273e-01", ",", "\n", "8.103003320898716222e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.629633327895804840e-01", ",", "\n", "8.748139384163003962e-01", ",", "\n", "8.156486084917724533e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.685112937853189941e-01", ",", "\n", "8.781325055194139084e-01", ",", "\n", "8.210202040569095638e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.740469282893844616e-01", ",", "\n", "8.814686228402575097e-01", ",", "\n", "8.264178662740626624e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.795708463666609411e-01", ",", "\n", "8.848223352046364898e-01", ",", "\n", "8.318410153090299852e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.850836254841629724e-01", ",", "\n", "8.881937049832523412e-01", ",", "\n", "8.372889893254339411e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.905836610629007666e-01", ",", "\n", "8.915838848352710677e-01", ",", "\n", "8.427587078675609078e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.960718329388820402e-01", ",", "\n", "8.949928217018373600e-01", ",", "\n", "8.482495190363266158e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.015509263802756745e-01", ",", "\n", "8.984195016922670307e-01", ",", "\n", "8.537628451897162352e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.070218374764418279e-01", ",", "\n", "9.018638497314315217e-01", ",", "\n", "8.592980228813623667e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.124832972967743538e-01", ",", "\n", "9.053269113370198129e-01", ",", "\n", "8.648517190341429295e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.179365336943248188e-01", ",", "\n", "9.088084827838653901e-01", ",", "\n", "8.704232606428425889e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.233851804191220980e-01", ",", "\n", "9.123071100087158936e-01", ",", "\n", "8.760148319228351355e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.288308811012930821e-01", ",", "\n", "9.158223472192428272e-01", ",", "\n", "8.816263177427966502e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.342716413123769437e-01", ",", "\n", "9.193556495997508016e-01", ",", "\n", "8.872531405900644375e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.397124373542273812e-01", ",", "\n", "9.229047657151164819e-01", ",", "\n", "8.928998260600508052e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.451563753217823161e-01", ",", "\n", "9.264682865796181055e-01", ",", "\n", "8.985697730985615639e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.506035559047821826e-01", ",", "\n", "9.300461763422669392e-01", ",", "\n", "9.042646579991682199e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.560531046363628382e-01", ",", "\n", "9.336385357088663461e-01", ",", "\n", "9.099886803187530182e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.615066616129493982e-01", ",", "\n", "9.372434217616608665e-01", ",", "\n", "9.157560566822336989e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.669573847273637002e-01", ",", "\n", "9.408624710997687268e-01", ",", "\n", "9.215795307640300971e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.723870692594612786e-01", ",", "\n", "9.445024597948724621e-01", ",", "\n", "9.274670258562995873e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.777785730890226068e-01", ",", "\n", "9.481687534308861354e-01", ",", "\n", "9.334364948680430318e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.831050718338244510e-01", ",", "\n", "9.518727670560837018e-01", ",", "\n", "9.394860306213083101e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.883417388454437402e-01", ",", "\n", "9.556282921109976458e-01", ",", "\n", "9.455836323325411685e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.934918422996558141e-01", ",", "\n", "9.594375624216472387e-01", ",", "\n", "9.516983192548315040e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.985763296811461798e-01", ",", "\n", "9.632965417140263442e-01", ",", "\n", "9.577895036430327247e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.942114721489739848e-01", ",", "\n", "9.649414783718816002e-01", ",", "\n", "9.591713509300946461e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.916915526798163460e-01", ",", "\n", "9.600677293546330260e-01", ",", "\n", "9.527406681900515428e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.892073759214962125e-01", ",", "\n", "9.552017644060696311e-01", ",", "\n", "9.462702365737246657e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.867719407557972167e-01", ",", "\n", "9.503380654950176476e-01", ",", "\n", "9.397586228881678050e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.843739071729306067e-01", ",", "\n", "9.454788135288768602e-01", ",", "\n", "9.332265558186634280e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.820182926871906526e-01", ",", "\n", "9.406217084851765664e-01", ",", "\n", "9.266730991029579201e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.797019478013845317e-01", ",", "\n", "9.357670195072623764e-01", ",", "\n", "9.201050706729160256e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.774207980730996725e-01", ",", "\n", "9.309154126689619391e-01", ",", "\n", "9.135293740478817037e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.751815609868391688e-01", ",", "\n", "9.260643851639969171e-01", ",", "\n", "9.069399044850446900e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.729704910473376822e-01", ",", "\n", "9.212176417076594070e-01", ",", "\n", "9.003536220502811327e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.708034919455280631e-01", ",", "\n", "9.163699401531895106e-01", ",", "\n", "8.937532865598888376e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.686635749176782939e-01", ",", "\n", "9.115260705110270756e-01", ",", "\n", "8.871590238431372732e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.665594650012595546e-01", ",", "\n", "9.066829842770773862e-01", ",", "\n", "8.805615104307024099e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.644872784946666444e-01", ",", "\n", "9.018415117599095643e-01", ",", "\n", "8.739656672915365743e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.624420742140847862e-01", ",", "\n", "8.970028582796596428e-01", ",", "\n", "8.673774626543144795e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.604345584612016262e-01", ",", "\n", "8.921632903093835720e-01", ",", "\n", "8.607852860310053478e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.584498054598472594e-01", ",", "\n", "8.873272041947983801e-01", ",", "\n", "8.542061390733795001e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.564989754176022041e-01", ",", "\n", "8.824906944948268661e-01", ",", "\n", "8.476279025304513937e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.545749598026603833e-01", ",", "\n", "8.776557062005478915e-01", ",", "\n", "8.410587414202306267e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.526745457712032517e-01", ",", "\n", "8.728229738617154787e-01", ",", "\n", "8.345024009748316374e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.508087846256844111e-01", ",", "\n", "8.679885222040847337e-01", ",", "\n", "8.279470532549256800e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.489631025192423186e-01", ",", "\n", "8.631568397645421609e-01", ",", "\n", "8.214088147188137734e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.471457599180185261e-01", ",", "\n", "8.583248540920686009e-01", ",", "\n", "8.148789280451533834e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.453550305765402451e-01", ",", "\n", "8.534927996091392632e-01", ",", "\n", "8.083595091982623826e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.435830323389927665e-01", ",", "\n", "8.486630445127123501e-01", ",", "\n", "8.018591800395635794e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.418425662160879730e-01", ",", "\n", "8.438308651791852633e-01", ",", "\n", "7.953645386207840451e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.401224124677813876e-01", ",", "\n", "8.389997911592477209e-01", ",", "\n", "7.888877269212305476e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.384205871436177571e-01", ",", "\n", "8.341702205035793627e-01", ",", "\n", "7.824309818729748844e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.367501034134483318e-01", ",", "\n", "8.293372224294222050e-01", ",", "\n", "7.759809608693934990e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.350962812812430025e-01", ",", "\n", "8.245056601392387607e-01", ",", "\n", "7.695531958095181979e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.334610667718560295e-01", ",", "\n", "8.196745424298020888e-01", ",", "\n", "7.631458380069808811e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.318539060108851357e-01", ",", "\n", "8.148400979617762552e-01", ",", "\n", "7.567494905851217535e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.302622555140654947e-01", ",", "\n", "8.100065567310004155e-01", ",", "\n", "7.503772218901773039e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.286876056094349741e-01", ",", "\n", "8.051730724177085241e-01", ",", "\n", "7.440277117015546837e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.271395831502474705e-01", ",", "\n", "8.003357056772891776e-01", ",", "\n", "7.376916134646933632e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.256059253327618697e-01", ",", "\n", "7.954987025858116789e-01", ",", "\n", "7.313814866564718464e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.240863437601837260e-01", ",", "\n", "7.906618776065421628e-01", ",", "\n", "7.250978248201844778e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.225925658427436282e-01", ",", "\n", "7.858203843156221780e-01", ",", "\n", "7.188294627149656169e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.211126169365579930e-01", ",", "\n", "7.809784744974170856e-01", ",", "\n", "7.125884635347393692e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.196455684792974594e-01", ",", "\n", "7.761362045971830215e-01", ",", "\n", "7.063759865046427278e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.181979022265810420e-01", ",", "\n", "7.712906810954774928e-01", ",", "\n", "7.001861662941214481e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.167672001571998130e-01", ",", "\n", "7.664424894801199484e-01", ",", "\n", "6.940217357022171463e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.153481567945904729e-01", ",", "\n", "7.615934195093969628e-01", ",", "\n", "6.878880649909780987e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.139404639768551331e-01", ",", "\n", "7.567432836340363123e-01", ",", "\n", "6.817857667786046960e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.125539294301500126e-01", ",", "\n", "7.518876928783747582e-01", ",", "\n", "6.757062380855892725e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.111780957235272593e-01", ",", "\n", "7.470305845086899765e-01", ",", "\n", "6.696595752391263368e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.098122501649290594e-01", ",", "\n", "7.421719339914916169e-01", ",", "\n", "6.636468136699643638e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.084563128768237128e-01", ",", "\n", "7.373114504136536462e-01", ",", "\n", "6.576684342801734084e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.071185731273107011e-01", ",", "\n", "7.324452193667679856e-01", ",", "\n", "6.517176237314421527e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.057893354554222842e-01", ",", "\n", "7.275770233727173464e-01", ",", "\n", "6.458034937673092779e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.044682125236334080e-01", ",", "\n", "7.227067015228565428e-01", ",", "\n", "6.399268508324190696e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.031548045364521382e-01", ",", "\n", "7.178340969900336432e-01", ",", "\n", "6.340885324865254136e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.018536281154535539e-01", ",", "\n", "7.129568373829493488e-01", ",", "\n", "6.282852974032566706e-01", ",", "\n", "]", ",", "\n", "[", "\n", "9.005618093543485969e-01", ",", "\n", "7.080758191596225881e-01", ",", "\n", "6.225202235043866272e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.992759701121831872e-01", ",", "\n", "7.031922144373208283e-01", ",", "\n", "6.167967177972875081e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.979956379512032960e-01", ",", "\n", "6.983059000713781606e-01", ",", "\n", "6.111157531581823399e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.967203212860314077e-01", ",", "\n", "6.934167616666734313e-01", ",", "\n", "6.054783383481375791e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.954526708976771054e-01", ",", "\n", "6.885231926405954717e-01", ",", "\n", "5.998830635410449252e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.941915566016080952e-01", ",", "\n", "6.836253365962329243e-01", ",", "\n", "5.943315847613384051e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.929334172678807802e-01", ",", "\n", "6.787245284319090022e-01", ",", "\n", "5.888273795844850556e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.916776705242244194e-01", ",", "\n", "6.738207055230612808e-01", ",", "\n", "5.833715948784413685e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.904237095992360018e-01", ",", "\n", "6.689138192653601989e-01", ",", "\n", "5.779654133729836829e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.891709022410747565e-01", ",", "\n", "6.640038362746348843e-01", ",", "\n", "5.726100532447696567e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.879187220887899690e-01", ",", "\n", "6.590906724758603952e-01", ",", "\n", "5.673066752652388134e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.866700510547862457e-01", ",", "\n", "6.541724962989774461e-01", ",", "\n", "5.620541403257021118e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.854200814778028228e-01", ",", "\n", "6.492513861023391231e-01", ",", "\n", "5.568566631651752363e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.841680786914359880e-01", ",", "\n", "6.443273831269403784e-01", ",", "\n", "5.517155748042765762e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.829132805112128723e-01", ",", "\n", "6.394005490891804255e-01", ",", "\n", "5.466322335097351104e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.816548969914349554e-01", ",", "\n", "6.344709672901969189e-01", ",", "\n", "5.416080224154796730e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.803921103664992254e-01", ",", "\n", "6.295387436822825755e-01", ",", "\n", "5.366443467601184070e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.791240751896489680e-01", ",", "\n", "6.246040078804957485e-01", ",", "\n", "5.317426307330340718e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.778499186810901911e-01", ",", "\n", "6.196669141071349252e-01", ",", "\n", "5.269043139249947050e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.765687412960717628e-01", ",", "\n", "6.147276420564155019e-01", ",", "\n", "5.221308473833028430e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.752796175219744734e-01", ",", "\n", "6.097863976665317542e-01", ",", "\n", "5.174236892760738504e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.739815969115529715e-01", ",", "\n", "6.048434137862945814e-01", ",", "\n", "5.127843001752147023e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.726737941588253999e-01", ",", "\n", "5.998988989392898263e-01", ",", "\n", "5.082140946168248741e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.713557496267209102e-01", ",", "\n", "5.949528226638209905e-01", ",", "\n", "5.037142772058214035e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.700256052408116281e-01", ",", "\n", "5.900059904309469250e-01", ",", "\n", "4.992866995883939452e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.686823445912698061e-01", ",", "\n", "5.850587401058766623e-01", ",", "\n", "4.949327569364067592e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.673249354213553586e-01", ",", "\n", "5.801114372307474287e-01", ",", "\n", "4.906538189940125583e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.659523319452930856e-01", ",", "\n", "5.751644748762787529e-01", ",", "\n", "4.864512237593011101e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.645634773771747605e-01", ",", "\n", "5.702182733234352208e-01", ",", "\n", "4.823262709991545383e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.631573066573615671e-01", ",", "\n", "5.652732795695735168e-01", ",", "\n", "4.782802156484906031e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.617327493598900823e-01", ",", "\n", "5.603299666552966629e-01", ",", "\n", "4.743142611496265482e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.602887327613949475e-01", ",", "\n", "5.553888328102728478e-01", ",", "\n", "4.704295527914130193e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.588244189007790963e-01", ",", "\n", "5.504502458314576296e-01", ",", "\n", "4.666271134383851993e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.573388771464994784e-01", ",", "\n", "5.455146532392860514e-01", ",", "\n", "4.629079425847138496e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.558307110590109845e-01", ",", "\n", "5.405828402802138610e-01", ",", "\n", "4.592730689337449212e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.542988567054966564e-01", ",", "\n", "5.356554029582069054e-01", ",", "\n", "4.557233480219839428e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.527422657992969057e-01", ",", "\n", "5.307329553519699594e-01", ",", "\n", "4.522595444303549317e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.511599092771463537e-01", ",", "\n", "5.258161276783985816e-01", ",", "\n", "4.488823265086418490e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.495507808257551918e-01", ",", "\n", "5.209055642285482790e-01", ",", "\n", "4.455922615760174454e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.479139003246871642e-01", ",", "\n", "5.160019211927755478e-01", ",", "\n", "4.423898116530999292e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.462483171732270160e-01", ",", "\n", "5.111058643932878676e-01", ",", "\n", "4.392753297751230135e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.445531134701587117e-01", ",", "\n", "5.062180669436533442e-01", ",", "\n", "4.362490569289804720e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.428274070171406507e-01", ",", "\n", "5.013392068558483183e-01", ",", "\n", "4.333111196492664408e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.410703541185753362e-01", ",", "\n", "4.964699646160714575e-01", ",", "\n", "4.304615283001137493e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.392811521535089581e-01", ",", "\n", "4.916110207509353791e-01", ",", "\n", "4.277001760608312164e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.374593644075595256e-01", ",", "\n", "4.867627987429819503e-01", ",", "\n", "4.250269048992098009e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.356043139975503076e-01", ",", "\n", "4.819259312622626301e-01", ",", "\n", "4.224414243859783702e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.337148868611683472e-01", ",", "\n", "4.771014353948369036e-01", ",", "\n", "4.199431953989596344e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.317904658009995789e-01", ",", "\n", "4.722899701137897588e-01", ",", "\n", "4.175316375108732991e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.298304844983901418e-01", ",", "\n", "4.674921821164159108e-01", ",", "\n", "4.152060584430907197e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.278344282915189867e-01", ",", "\n", "4.627087037890093568e-01", ",", "\n", "4.129656573155296440e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.258018346451376779e-01", ",", "\n", "4.579401513029328075e-01", ",", "\n", "4.108095284678619508e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.237322933175019735e-01", ",", "\n", "4.531871228543432051e-01", ",", "\n", "4.087366658020525345e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.216256878784896633e-01", ",", "\n", "4.484499819155622347e-01", ",", "\n", "4.067461112065531847e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.194815690724320811e-01", ",", "\n", "4.437294051177347876e-01", ",", "\n", "4.048366204140803060e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.172995050178583076e-01", ",", "\n", "4.390260854893064946e-01", ",", "\n", "4.030068099238640067e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.150792968857805132e-01", ",", "\n", "4.343405321271661679e-01", ",", "\n", "4.012553165972070901e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.128207950280410543e-01", ",", "\n", "4.296732294003547947e-01", ",", "\n", "3.995807052170325946e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.105238975108269850e-01", ",", "\n", "4.250246362540385792e-01", ",", "\n", "3.979814747698801614e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.081885484630557670e-01", ",", "\n", "4.203951856851556590e-01", ",", "\n", "3.964560648094507256e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.058148470586988799e-01", ",", "\n", "4.157851737769109879e-01", ",", "\n", "3.950029765120905423e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.034026962411985329e-01", ",", "\n", "4.111951046689115152e-01", ",", "\n", "3.936204324142628108e-01", ",", "\n", "]", ",", "\n", "[", "\n", "8.009521378981909745e-01", ",", "\n", "4.066253627118514569e-01", ",", "\n", "3.923066947182650144e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.984632874676697023e-01", ",", "\n", "4.020762706733001512e-01", ",", "\n", "3.910600267933756480e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.959362958998934534e-01", ",", "\n", "3.975481251157440554e-01", ",", "\n", "3.898786646276527490e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.933713473226599033e-01", ",", "\n", "3.930411968130258504e-01", ",", "\n", "3.887608225579017307e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.907686574783574507e-01", ",", "\n", "3.885557303926693296e-01", ",", "\n", "3.877046999689159890e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.881284544156301752e-01", ",", "\n", "3.840919640902587529e-01", ",", "\n", "3.867084595587381712e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.854510012103226302e-01", ",", "\n", "3.796501032751679605e-01", ",", "\n", "3.857702673246294345e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.827365958532629397e-01", ",", "\n", "3.752303177293505598e-01", ",", "\n", "3.848883050999601374e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.799855573279415033e-01", ",", "\n", "3.708327552306592834e-01", ",", "\n", "3.840607581802352732e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.771982233463431422e-01", ",", "\n", "3.664575425267851405e-01", ",", "\n", "3.832858192234025463e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.743749481448563010e-01", ",", "\n", "3.621047863617611329e-01", ",", "\n", "3.825616918198675998e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.715160518337467188e-01", ",", "\n", "3.577746368683014655e-01", ",", "\n", "3.818864831434901075e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.686219524815265380e-01", ",", "\n", "3.534671195520193154e-01", ",", "\n", "3.812584982442814296e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.656930517948008497e-01", ",", "\n", "3.491822750013692245e-01", ",", "\n", "3.806760122706670524e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.627297518608332494e-01", ",", "\n", "3.449201381780978570e-01", ",", "\n", "3.801373059981723590e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.597324610418284552e-01", ",", "\n", "3.406807299395016586e-01", ",", "\n", "3.796406843015277532e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.567015922742318379e-01", ",", "\n", "3.364640582281425152e-01", ",", "\n", "3.791844777860022275e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.536375467881040180e-01", ",", "\n", "3.322701411099439062e-01", ",", "\n", "3.787669970190922220e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.505407196227874556e-01", ",", "\n", "3.280990002753491619e-01", ",", "\n", "3.783865433211569540e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.474115712082280982e-01", ",", "\n", "3.239505493622616417e-01", ",", "\n", "3.780416634360889150e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.442505183508412170e-01", ",", "\n", "3.198247550352249502e-01", ",", "\n", "3.777308063416947026e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.410579750279425726e-01", ",", "\n", "3.157215772518807695e-01", ",", "\n", "3.774524509829353947e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.378343512384677449e-01", ",", "\n", "3.116409704467773545e-01", ",", "\n", "3.772051064266770948e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.345800519344474200e-01", ",", "\n", "3.075828847103421748e-01", ",", "\n", "3.769873118279194468e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.312954622460766663e-01", ",", "\n", "3.035472925968438762e-01", ",", "\n", "3.767975677519167510e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.279809779377566237e-01", ",", "\n", "2.995341347142527755e-01", ",", "\n", "3.766344783074295766e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.246370003939071047e-01", ",", "\n", "2.955433232127043786e-01", ",", "\n", "3.764967560209065978e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.212639047983969709e-01", ",", "\n", "2.915748020657008555e-01", ",", "\n", "3.763830604225979481e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.178620569041518351e-01", ",", "\n", "2.876285169108695472e-01", ",", "\n", "3.762920784118068407e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.144318123927204667e-01", ",", "\n", "2.837044162122266955e-01", ",", "\n", "3.762225233422813453e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.109735162895217675e-01", ",", "\n", "2.798024524280844916e-01", ",", "\n", "3.761731340017399616e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.074875003639726767e-01", ",", "\n", "2.759225885803616163e-01", ",", "\n", "3.761426556123988463e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.039740902088845731e-01", ",", "\n", "2.720647802144139371e-01", ",", "\n", "3.761299015349165442e-01", ",", "\n", "]", ",", "\n", "[", "\n", "7.004335983291459788e-01", ",", "\n", "2.682289908573779469e-01", ",", "\n", "3.761337091569335600e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.968663212773178461e-01", ",", "\n", "2.644152012227610760e-01", ",", "\n", "3.761529095527339495e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.932725426766019883e-01", ",", "\n", "2.606234021780075572e-01", ",", "\n", "3.761863526116585033e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.896525329109274294e-01", ",", "\n", "2.568535960113472738e-01", ",", "\n", "3.762329055321002591e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.860065488492232966e-01", ",", "\n", "2.531057977294109973e-01", ",", "\n", "3.762914512548127810e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.823348363761195801e-01", ",", "\n", "2.493800214422073891e-01", ",", "\n", "3.763609500820121467e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.786376242649662105e-01", ",", "\n", "2.456763038128263466e-01", ",", "\n", "3.764403535110733556e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.749151231751110425e-01", ",", "\n", "2.419947210999891518e-01", ",", "\n", "3.765285264384131692e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.711675324616499516e-01", ",", "\n", "2.383353539955441192e-01", ",", "\n", "3.766243994612780699e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.673950369964636309e-01", ",", "\n", "2.346983031289386346e-01", ",", "\n", "3.767269100578239382e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.635978070649097837e-01", ",", "\n", "2.310836906390836831e-01", ",", "\n", "3.768350007100279009e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.597759982863891093e-01", ",", "\n", "2.274916618065601082e-01", ",", "\n", "3.769476169820946132e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.559297473209481089e-01", ",", "\n", "2.239223513030393353e-01", ",", "\n", "3.770639116649144307e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.520591754729223588e-01", ",", "\n", "2.203759654266244650e-01", ",", "\n", "3.771828077558652681e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.481643941443696599e-01", ",", "\n", "2.168527541906234979e-01", ",", "\n", "3.773031206968150975e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.442454984979625321e-01", ",", "\n", "2.133529749202845993e-01", ",", "\n", "3.774237883397635329e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.403025689859566105e-01", ",", "\n", "2.098769174022531714e-01", ",", "\n", "3.775437410683403772e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.363356714241054091e-01", ",", "\n", "2.064249059420060206e-01", ",", "\n", "3.776618996147099727e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.323448551853009247e-01", ",", "\n", "2.029972985879547887e-01", ",", "\n", "3.777771986896097389e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.283301122985771592e-01", ",", "\n", "1.995944416686266654e-01", ",", "\n", "3.778890664877021521e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.242914965761068302e-01", ",", "\n", "1.962168403108488501e-01", ",", "\n", "3.779958773221168133e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.202290151835444521e-01", ",", "\n", "1.928649814733044143e-01", ",", "\n", "3.780964890449534654e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.161426615427991749e-01", ",", "\n", "1.895393981082279800e-01", ",", "\n", "3.781897379927290359e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.120324156302930918e-01", ",", "\n", "1.862406715933664081e-01", ",", "\n", "3.782744366000001524e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.078982443238682976e-01", ",", "\n", "1.829694341941491276e-01", ",", "\n", "3.783493709986866516e-01", ",", "\n", "]", ",", "\n", "[", "\n", "6.037399990506459035e-01", ",", "\n", "1.797263486622488471e-01", ",", "\n", "3.784140428470601503e-01", ",", "\n", "]", ",", "\n", "[", "\n", "5.995576965897967403e-01", ",", "\n", "1.765121975913181707e-01", ",", "\n", "3.784665259488561584e-01", ",", "\n", "]", ",", "\n", "[", "\n", "5.953512720943007208e-01", ",", "\n", "1.733277858871770660e-01", ",", "\n", "3.785054621982753553e-01", ",", "\n", "]", ",", "\n", "[", "\n", "5.911206437729070728e-01", ",", "\n", "1.701739770998706713e-01", ",", "\n", "3.785295035265708874e-01", ",", "\n", "]", ",", "\n", "[", "\n", "5.868657195674668037e-01", ",", "\n", "1.670516976788867514e-01", ",", "\n", "3.785372630540221883e-01", ",", "\n", "]", ",", "\n", "[", "\n", "5.825863435035250060e-01", ",", "\n", "1.639619511220119508e-01", ",", "\n", "3.785276019365447775e-01", ",", "\n", "]", ",", "\n", "[", "\n", "5.782823203682633251e-01", ",", "\n", "1.609058321765788335e-01", ",", "\n", "3.784994295515334839e-01", ",", "\n", "]", ",", "\n", "[", "\n", "5.739536466014196758e-01", ",", "\n", "1.578844538430557720e-01", ",", "\n", "3.784505787767488694e-01", ",", "\n", "]", ",", "\n", "[", "\n", "5.696001981012460691e-01", ",", "\n", "1.548990153349074916e-01", ",", "\n", "3.783794775494400686e-01", ",", "\n", "]", ",", "\n", "[", "\n", "5.652218458222221242e-01", ",", "\n", "1.519507861175737884e-01", ",", "\n", "3.782845039525286057e-01", ",", "\n", "]", ",", "\n", "[", "\n", "5.608184279263467298e-01", ",", "\n", "1.490411220014642157e-01", ",", "\n", "3.781641038386275300e-01", ",", "\n", "]", ",", "\n", "[", "\n", "5.563896048179566289e-01", ",", "\n", "1.461715605343842650e-01", ",", "\n", "3.780173288805740439e-01", ",", "\n", "]", ",", "\n", "[", "\n", "5.519354537512982661e-01", ",", "\n", "1.433434802585686063e-01", ",", "\n", "3.778414852793369194e-01", ",", "\n", "]", ",", "\n", "[", "\n", "5.474558435278772395e-01", ",", "\n", "1.405584279152288785e-01", ",", "\n", "3.776347269993366451e-01", ",", "\n", "]", ",", "\n", "[", "\n", "5.429506470730138812e-01", ",", "\n", "1.378180135121435668e-01", ",", "\n", "3.773951523619960002e-01", ",", "\n", "]", ",", "\n", "[", "\n", "5.384196501144510316e-01", ",", "\n", "1.351239813932839096e-01", ",", "\n", "3.771211030874267456e-01", ",", "\n", "]", ",", "\n", "[", "\n", "5.338626135422905872e-01", ",", "\n", "1.324781762459926737e-01", ",", "\n", "3.768109124380045194e-01", ",", "\n", "]", ",", "\n", "[", "\n", "5.292796498492590151e-01", ",", "\n", "1.298822067930652524e-01", ",", "\n", "3.764618033826110377e-01", ",", "\n", "]", ",", "\n", "[", "\n", "5.246706783487381509e-01", ",", "\n", "1.273378756852094063e-01", ",", "\n", "3.760716446399895441e-01", ",", "\n", "]", ",", "\n", "[", "\n", "5.200356363922209457e-01", ",", "\n", "1.248470120733735367e-01", ",", "\n", "3.756382551974452033e-01", ",", "\n", "]", ",", "\n", "[", "\n", "5.153742367301422656e-01", ",", "\n", "1.224117140591406694e-01", ",", "\n", "3.751600258018771838e-01", ",", "\n", "]", ",", "\n", "[", "\n", "5.106866581816573714e-01", ",", "\n", "1.200336468026920456e-01", ",", "\n", "3.746341300161435961e-01", ",", "\n", "]", ",", "\n", "[", "\n", "5.059729862980435477e-01", ",", "\n", "1.177145617740232852e-01", ",", "\n", "3.740580772636119544e-01", ",", "\n", "]", ",", "\n", "[", "\n", "5.012332745984564575e-01", ",", "\n", "1.154562389937715539e-01", ",", "\n", "3.734295174784395543e-01", ",", "\n", "]", ",", "\n", "[", "\n", "4.964674957217509177e-01", ",", "\n", "1.132605442683873864e-01", ",", "\n", "3.727463195168757570e-01", ",", "\n", "]", ",", "\n", "[", "\n", "4.916758190194626121e-01", ",", "\n", "1.111290906599490258e-01", ",", "\n", "3.720059818290880060e-01", ",", "\n", "]", ",", "\n", "[", "\n", "4.868585609140311798e-01", ",", "\n", "1.090632523851999269e-01", ",", "\n", "3.712058226357082269e-01", ",", "\n", "]", ",", "\n", "[", "\n", "4.820159589014604840e-01", ",", "\n", "1.070644243738244350e-01", ",", "\n", "3.703434438399521023e-01", ",", "\n", "]", ",", "\n", "[", "\n", "4.771482837998479165e-01", ",", "\n", "1.051338742417683159e-01", ",", "\n", "3.694164970204523168e-01", ",", "\n", "]", ",", "\n", "[", "\n", "4.722559296975721854e-01", ",", "\n", "1.032725993184717139e-01", ",", "\n", "3.684225499867860298e-01", ",", "\n", "]", ",", "\n", "[", "\n", "4.673393879073711177e-01", ",", "\n", "1.014813305146687883e-01", ",", "\n", "3.673591735272957459e-01", ",", "\n", "]", ",", "\n", "[", "\n", "4.623991454541829804e-01", ",", "\n", "9.976065343840129218e-02", ",", "\n", "3.662241176536292220e-01", ",", "\n", "]", ",", "\n", "[", "\n", "4.574358041489324234e-01", ",", "\n", "9.811082191626963045e-02", ",", "\n", "3.650151416090168244e-01", ",", "\n", "]", ",", "\n", "[", "\n", "4.524502157463570762e-01", ",", "\n", "9.653152558968838837e-02", ",", "\n", "3.637298817526759542e-01", ",", "\n", "]", ",", "\n", "[", "\n", "4.474429556959144683e-01", ",", "\n", "9.502266265951053725e-02", ",", "\n", "3.623665563347658880e-01", ",", "\n", "]", ",", "\n", "[", "\n", "4.424148033564082039e-01", ",", "\n", "9.358361785401031474e-02", ",", "\n", "3.609233190012756665e-01", ",", "\n", "]", ",", "\n", "[", "\n", "4.373666093617918915e-01", ",", "\n", "9.221344371517425920e-02", ",", "\n", "3.593984619211612608e-01", ",", "\n", "]", ",", "\n", "[", "\n", "4.323000061476657274e-01", ",", "\n", "9.090969474799345806e-02", ",", "\n", "3.577897503619592023e-01", ",", "\n", "]", ",", "\n", "[", "\n", "4.272154852828886629e-01", ",", "\n", "8.967151542383772211e-02", ",", "\n", "3.560963875772367726e-01", ",", "\n", "]", ",", "\n", "[", "\n", "4.221140984792258188e-01", ",", "\n", "8.849693359303587026e-02", ",", "\n", "3.543172112905775273e-01", ",", "\n", "]", ",", "\n", "[", "\n", "4.169969758462759302e-01", ",", "\n", "8.738362154375492463e-02", ",", "\n", "3.524512375858371849e-01", ",", "\n", "]", ",", "\n", "[", "\n", "4.118658301965831270e-01", ",", "\n", "8.632803919827600203e-02", ",", "\n", "3.504973239811765007e-01", ",", "\n", "]", ",", "\n", "[", "\n", "4.067221669675408213e-01", ",", "\n", "8.532676500724681312e-02", ",", "\n", "3.484548346345710534e-01", ",", "\n", "]", ",", "\n", "[", "\n", "4.015666852977432533e-01", ",", "\n", "8.437757766440442952e-02", ",", "\n", "3.463238990387739746e-01", ",", "\n", "]", ",", "\n", "[", "\n", "3.964007130297593218e-01", ",", "\n", "8.347701754004596686e-02", ",", "\n", "3.441044235724556866e-01", ",", "\n", "]", ",", "\n", "[", "\n", "3.912256097683191602e-01", ",", "\n", "8.262141527259461715e-02", ",", "\n", "3.417965388380971303e-01", ",", "\n", "]", ",", "\n", "[", "\n", "3.860430941874281596e-01", ",", "\n", "8.180633277581816909e-02", ",", "\n", "3.394004639140563162e-01", ",", "\n", "]", ",", "\n", "[", "\n", "3.808555339288969832e-01", ",", "\n", "8.102605665725876039e-02", ",", "\n", "3.369164884312597086e-01", ",", "\n", "]", ",", "\n", "[", "\n", "3.756631594887540060e-01", ",", "\n", "8.027857713191724476e-02", ",", "\n", "3.343459517649038371e-01", ",", "\n", "]", ",", "\n", "[", "\n", "3.704673590324250032e-01", ",", "\n", "7.955977986332424257e-02", ",", "\n", "3.316898655204278401e-01", ",", "\n", "]", ",", "\n", "[", "\n", "3.652695090362573227e-01", ",", "\n", "7.886552703397090025e-02", ",", "\n", "3.289494343067977944e-01", ",", "\n", "]", ",", "\n", "[", "\n", "3.600709660701238435e-01", ",", "\n", "7.819169210462800779e-02", ",", "\n", "3.261260438198446687e-01", ",", "\n", "]", ",", "\n", "[", "\n", "3.548730588141333908e-01", ",", "\n", "7.753419260275734581e-02", ",", "\n", "3.232212473818363851e-01", ",", "\n", "]", ",", "\n", "[", "\n", "3.496770804198256477e-01", ",", "\n", "7.688902041627435069e-02", ",", "\n", "3.202367511798585031e-01", ",", "\n", "]", ",", "\n", "[", "\n", "3.444853557545813350e-01", ",", "\n", "7.625034119537774102e-02", ",", "\n", "3.171743822649770728e-01", ",", "\n", "]", ",", "\n", "[", "\n", "3.392982604990861795e-01", ",", "\n", "7.561586038621423422e-02", ",", "\n", "3.140362188799208365e-01", ",", "\n", "]", ",", "\n", "[", "\n", "3.341166082970875029e-01", ",", "\n", "7.498254313274954619e-02", ",", "\n", "3.108243324765390669e-01", ",", "\n", "]", ",", "\n", "[", "\n", "3.289414559917514524e-01", ",", "\n", "7.434697155739058982e-02", ",", "\n", "3.075408588184366798e-01", ",", "\n", "]", ",", "\n", "[", "\n", "3.237737954171283072e-01", ",", "\n", "7.370590341662106026e-02", ",", "\n", "3.041879989569576392e-01", ",", "\n", "]", ",", "\n", "[", "\n", "3.186145498482620964e-01", ",", "\n", "7.305628171756148315e-02", ",", "\n", "3.007680026557595920e-01", ",", "\n", "]", ",", "\n", "[", "\n", "3.134645711821229530e-01", ",", "\n", "7.239524117563511663e-02", ",", "\n", "2.972831523530131137e-01", ",", "\n", "]", ",", "\n", "[", "\n", "3.083246378402036969e-01", ",", "\n", "7.172011173017686647e-02", ",", "\n", "2.937357478389135412e-01", ",", "\n", "]", ",", "\n", "[", "\n", "3.031954533707552635e-01", ",", "\n", "7.102841937235576664e-02", ",", "\n", "2.901280917978547591e-01", ",", "\n", "]", ",", "\n", "[", "\n", "2.980776457172774063e-01", ",", "\n", "7.031788456468926474e-02", ",", "\n", "2.864624763353166292e-01", ",", "\n", "]", ",", "\n", "[", "\n", "2.929717671102379239e-01", ",", "\n", "6.958641854495320467e-02", ",", "\n", "2.827411705802333475e-01", ",", "\n", "]", ",", "\n", "[", "\n", "2.878782945311796904e-01", ",", "\n", "6.883211781082057557e-02", ",", "\n", "2.789664094251954607e-01", ",", "\n", "]", ",", "\n", "[", "\n", "2.827976306923836725e-01", ",", "\n", "6.805325707674123037e-02", ",", "\n", "2.751403834400568682e-01", ",", "\n", "]", ",", "\n", "[", "\n", "2.777301054710668571e-01", ",", "\n", "6.724828098296936618e-02", ",", "\n", "2.712652299698696257e-01", ",", "\n", "]", ",", "\n", "[", "\n", "2.726759777346169922e-01", ",", "\n", "6.641579481976991883e-02", ",", "\n", "2.673430254060571443e-01", ",", "\n", "]", ",", "\n", "[", "\n", "2.676354374924288515e-01", ",", "\n", "6.555455450916861104e-02", ",", "\n", "2.633757786005420098e-01", ",", "\n", "]", ",", "\n", "[", "\n", "2.626097591395918363e-01", ",", "\n", "6.466149844681601255e-02", ",", "\n", "2.593660533804174051e-01", ",", "\n", "]", ",", "\n", "[", "\n", "2.575992689989206608e-01", ",", "\n", "6.373522644476575794e-02", ",", "\n", "2.553159580518031269e-01", ",", "\n", "]", ",", "\n", "[", "\n", "2.526028775756383737e-01", ",", "\n", "6.277674824557366584e-02", ",", "\n", "2.512267303676423147e-01", ",", "\n", "]", ",", "\n", "[", "\n", "2.476205211412589313e-01", ",", "\n", "6.178532806314660647e-02", ",", "\n", "2.471000835041496368e-01", ",", "\n", "]", ",", "\n", "[", "\n", "2.426520784951842757e-01", ",", "\n", "6.076032925135082391e-02", ",", "\n", "2.429376426307544024e-01", ",", "\n", "]", ",", "\n", "[", "\n", "2.376973739685813714e-01", ",", "\n", "5.970120319443159712e-02", ",", "\n", "2.387409437758167274e-01", ",", "\n", "]", ",", "\n", "[", "\n", "2.327561803770203386e-01", ",", "\n", "5.860747847771281133e-02", ",", "\n", "2.345114333677875140e-01", ",", "\n", "]", ",", "\n", "[", "\n", "2.278285229664566147e-01", ",", "\n", "5.747825339035907838e-02", ",", "\n", "2.302506881609430733e-01", ",", "\n", "]", ",", "\n", "[", "\n", "2.229180662380075839e-01", ",", "\n", "5.630663136815370479e-02", ",", "\n", "2.259630047830259447e-01", ",", "\n", "]", ",", "\n", "[", "\n", "2.180204522985965676e-01", ",", "\n", "5.509893160286010588e-02", ",", "\n", "2.216467626153181270e-01", ",", "\n", "]", ",", "\n", "[", "\n", "2.131352588343927157e-01", ",", "\n", "5.385491895770589538e-02", ",", "\n", "2.173030574920574165e-01", ",", "\n", "]", ",", "\n", "[", "\n", "2.082620235717315138e-01", ",", "\n", "5.257438772048273617e-02", ",", "\n", "2.129328977906284059e-01", ",", "\n", "]", ",", "\n", "[", "\n", "2.034002463374002811e-01", ",", "\n", "5.125715285178860520e-02", ",", "\n", "2.085372063771265272e-01", ",", "\n", "]", ",", "\n", "]", "\n", "return", "_cmap", "(", "\"linear_curl\"", ",", "cm_data", ",", "reverse", "=", "reverse", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_linear_bgyw": [[4181, 4443], ["plt._cmap"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt._cmap"], ["", "def", "cmap_linear_bgyw", "(", "reverse", "=", "False", ")", ":", "\n", "# https://github.com/pyviz/colorcet", "\n", "# linear colormap, perceptually uniform", "\n", "    ", "cm_data", "=", "[", "\n", "[", "0.10477", ",", "0.0011197", ",", "0.51875", "]", ",", "\n", "[", "0.105", ",", "0.0031206", ",", "0.52587", "]", ",", "\n", "[", "0.10521", ",", "0.005201", ",", "0.53301", "]", ",", "\n", "[", "0.10541", ",", "0.0074297", ",", "0.5401", "]", ",", "\n", "[", "0.10559", ",", "0.0097752", ",", "0.54718", "]", ",", "\n", "[", "0.10576", ",", "0.012459", ",", "0.55425", "]", ",", "\n", "[", "0.10592", ",", "0.015073", ",", "0.56126", "]", ",", "\n", "[", "0.10605", ",", "0.017812", ",", "0.56829", "]", ",", "\n", "[", "0.10619", ",", "0.020743", ",", "0.57524", "]", ",", "\n", "[", "0.10631", ",", "0.023778", ",", "0.5822", "]", ",", "\n", "[", "0.10643", ",", "0.027021", ",", "0.58909", "]", ",", "\n", "[", "0.10653", ",", "0.030386", ",", "0.59599", "]", ",", "\n", "[", "0.10663", ",", "0.033922", ",", "0.60282", "]", ",", "\n", "[", "0.10672", ",", "0.037861", ",", "0.60963", "]", ",", "\n", "[", "0.10682", ",", "0.041783", ",", "0.6164", "]", ",", "\n", "[", "0.10691", ",", "0.045535", ",", "0.62314", "]", ",", "\n", "[", "0.107", ",", "0.049457", ",", "0.62982", "]", ",", "\n", "[", "0.10709", ",", "0.053176", ",", "0.63647", "]", ",", "\n", "[", "0.10718", ",", "0.057025", ",", "0.64308", "]", ",", "\n", "[", "0.10728", ",", "0.060795", ",", "0.64963", "]", ",", "\n", "[", "0.10738", ",", "0.064591", ",", "0.65615", "]", ",", "\n", "[", "0.1075", ",", "0.068417", ",", "0.6626", "]", ",", "\n", "[", "0.10762", ",", "0.072133", ",", "0.66902", "]", ",", "\n", "[", "0.10776", ",", "0.075909", ",", "0.67536", "]", ",", "\n", "[", "0.10791", ",", "0.079695", ",", "0.68166", "]", ",", "\n", "[", "0.10808", ",", "0.08353", ",", "0.6879", "]", ",", "\n", "[", "0.10826", ",", "0.087375", ",", "0.69408", "]", ",", "\n", "[", "0.10848", ",", "0.091188", ",", "0.7002", "]", ",", "\n", "[", "0.10873", ",", "0.095035", ",", "0.70626", "]", ",", "\n", "[", "0.10901", ",", "0.098847", ",", "0.71224", "]", ",", "\n", "[", "0.10933", ",", "0.10273", ",", "0.71815", "]", ",", "\n", "[", "0.10965", ",", "0.10666", ",", "0.724", "]", ",", "\n", "[", "0.11", ",", "0.11057", ",", "0.72975", "]", ",", "\n", "[", "0.11035", ",", "0.11443", ",", "0.73545", "]", ",", "\n", "[", "0.11077", ",", "0.11848", ",", "0.74103", "]", ",", "\n", "[", "0.11121", ",", "0.1224", ",", "0.74656", "]", ",", "\n", "[", "0.11171", ",", "0.12647", ",", "0.75198", "]", ",", "\n", "[", "0.11224", ",", "0.13056", ",", "0.75731", "]", ",", "\n", "[", "0.11282", ",", "0.13464", ",", "0.76255", "]", ",", "\n", "[", "0.11344", ",", "0.13874", ",", "0.76767", "]", ",", "\n", "[", "0.11404", ",", "0.14289", ",", "0.77271", "]", ",", "\n", "[", "0.11474", ",", "0.14709", ",", "0.77762", "]", ",", "\n", "[", "0.11555", ",", "0.15131", ",", "0.78241", "]", ",", "\n", "[", "0.11637", ",", "0.1556", ",", "0.78711", "]", ",", "\n", "[", "0.11721", ",", "0.15989", ",", "0.79164", "]", ",", "\n", "[", "0.11817", ",", "0.16429", ",", "0.79606", "]", ",", "\n", "[", "0.11913", ",", "0.16868", ",", "0.80035", "]", ",", "\n", "[", "0.12014", ",", "0.17313", ",", "0.80446", "]", ",", "\n", "[", "0.12122", ",", "0.17766", ",", "0.80845", "]", ",", "\n", "[", "0.12236", ",", "0.18216", ",", "0.81227", "]", ",", "\n", "[", "0.12358", ",", "0.1868", ",", "0.8159", "]", ",", "\n", "[", "0.12487", ",", "0.19146", ",", "0.81936", "]", ",", "\n", "[", "0.12621", ",", "0.19619", ",", "0.82267", "]", ",", "\n", "[", "0.12758", ",", "0.20095", ",", "0.82573", "]", ",", "\n", "[", "0.12902", ",", "0.20585", ",", "0.82858", "]", ",", "\n", "[", "0.13057", ",", "0.21075", ",", "0.83123", "]", ",", "\n", "[", "0.13209", ",", "0.21574", ",", "0.83365", "]", ",", "\n", "[", "0.1337", ",", "0.22083", ",", "0.83579", "]", ",", "\n", "[", "0.13536", ",", "0.22598", ",", "0.83764", "]", ",", "\n", "[", "0.13708", ",", "0.23121", ",", "0.83921", "]", ",", "\n", "[", "0.13882", ",", "0.23653", ",", "0.84047", "]", ",", "\n", "[", "0.14063", ",", "0.24194", ",", "0.84141", "]", ",", "\n", "[", "0.14244", ",", "0.24745", ",", "0.84198", "]", ",", "\n", "[", "0.1443", ",", "0.25307", ",", "0.84216", "]", ",", "\n", "[", "0.14616", ",", "0.25882", ",", "0.84191", "]", ",", "\n", "[", "0.14804", ",", "0.26468", ",", "0.84117", "]", ",", "\n", "[", "0.14995", ",", "0.27071", ",", "0.8399", "]", ",", "\n", "[", "0.15179", ",", "0.27687", ",", "0.83804", "]", ",", "\n", "[", "0.15363", ",", "0.2832", ",", "0.83552", "]", ",", "\n", "[", "0.15544", ",", "0.28972", ",", "0.83227", "]", ",", "\n", "[", "0.15711", ",", "0.29645", ",", "0.82819", "]", ",", "\n", "[", "0.1587", ",", "0.30339", ",", "0.82319", "]", ",", "\n", "[", "0.16004", ",", "0.31064", ",", "0.81705", "]", ",", "\n", "[", "0.16121", ",", "0.31816", ",", "0.80955", "]", ",", "\n", "[", "0.16198", ",", "0.32608", ",", "0.80043", "]", ",", "\n", "[", "0.16232", ",", "0.33446", ",", "0.78944", "]", ",", "\n", "[", "0.16261", ",", "0.34288", ",", "0.77734", "]", ",", "\n", "[", "0.16339", ",", "0.351", ",", "0.7652", "]", ",", "\n", "[", "0.16458", ",", "0.35878", ",", "0.75318", "]", ",", "\n", "[", "0.16618", ",", "0.3663", ",", "0.7413", "]", ",", "\n", "[", "0.16813", ",", "0.37354", ",", "0.72954", "]", ",", "\n", "[", "0.17035", ",", "0.38056", ",", "0.71789", "]", ",", "\n", "[", "0.1728", ",", "0.38735", ",", "0.70636", "]", ",", "\n", "[", "0.17542", ",", "0.39397", ",", "0.69491", "]", ",", "\n", "[", "0.17821", ",", "0.40042", ",", "0.68357", "]", ",", "\n", "[", "0.18104", ",", "0.40669", ",", "0.67233", "]", ",", "\n", "[", "0.18398", ",", "0.41284", ",", "0.66117", "]", ",", "\n", "[", "0.18698", ",", "0.41883", ",", "0.65009", "]", ",", "\n", "[", "0.19", ",", "0.42472", ",", "0.6391", "]", ",", "\n", "[", "0.19303", ",", "0.43049", ",", "0.62818", "]", ",", "\n", "[", "0.19608", ",", "0.43615", ",", "0.61732", "]", ",", "\n", "[", "0.19905", ",", "0.44173", ",", "0.60653", "]", ",", "\n", "[", "0.20205", ",", "0.4472", ",", "0.59581", "]", ",", "\n", "[", "0.20503", ",", "0.45261", ",", "0.58515", "]", ",", "\n", "[", "0.20793", ",", "0.45792", ",", "0.57453", "]", ",", "\n", "[", "0.2108", ",", "0.46316", ",", "0.56398", "]", ",", "\n", "[", "0.21364", ",", "0.46835", ",", "0.55345", "]", ",", "\n", "[", "0.21643", ",", "0.47347", ",", "0.54299", "]", ",", "\n", "[", "0.21913", ",", "0.47854", ",", "0.53255", "]", ",", "\n", "[", "0.22179", ",", "0.48354", ",", "0.52214", "]", ",", "\n", "[", "0.22439", ",", "0.4885", ",", "0.51178", "]", ",", "\n", "[", "0.22697", ",", "0.4934", ",", "0.50144", "]", ",", "\n", "[", "0.22945", ",", "0.49828", ",", "0.49112", "]", ",", "\n", "[", "0.23194", ",", "0.50308", ",", "0.48079", "]", ",", "\n", "[", "0.23434", ",", "0.50787", ",", "0.47051", "]", ",", "\n", "[", "0.23669", ",", "0.5126", ",", "0.4602", "]", ",", "\n", "[", "0.23896", ",", "0.51731", ",", "0.44992", "]", ",", "\n", "[", "0.24122", ",", "0.52197", ",", "0.43962", "]", ",", "\n", "[", "0.24342", ",", "0.52661", ",", "0.42932", "]", ",", "\n", "[", "0.2456", ",", "0.53121", ",", "0.419", "]", ",", "\n", "[", "0.24776", ",", "0.53578", ",", "0.40865", "]", ",", "\n", "[", "0.24982", ",", "0.54033", ",", "0.39827", "]", ",", "\n", "[", "0.2519", ",", "0.54485", ",", "0.38784", "]", ",", "\n", "[", "0.25394", ",", "0.54933", ",", "0.37747", "]", ",", "\n", "[", "0.25603", ",", "0.55376", ",", "0.36733", "]", ",", "\n", "[", "0.25825", ",", "0.55813", ",", "0.35754", "]", ",", "\n", "[", "0.26059", ",", "0.56246", ",", "0.34801", "]", ",", "\n", "[", "0.26305", ",", "0.56672", ",", "0.33878", "]", ",", "\n", "[", "0.26563", ",", "0.57092", ",", "0.32981", "]", ",", "\n", "[", "0.26835", ",", "0.57509", ",", "0.32108", "]", ",", "\n", "[", "0.27123", ",", "0.57921", ",", "0.31258", "]", ",", "\n", "[", "0.27426", ",", "0.58328", ",", "0.30433", "]", ",", "\n", "[", "0.27745", ",", "0.58731", ",", "0.29629", "]", ",", "\n", "[", "0.28078", ",", "0.5913", ",", "0.28844", "]", ",", "\n", "[", "0.28431", ",", "0.59525", ",", "0.28077", "]", ",", "\n", "[", "0.28799", ",", "0.59916", ",", "0.27333", "]", ",", "\n", "[", "0.29185", ",", "0.60303", ",", "0.26603", "]", ",", "\n", "[", "0.29585", ",", "0.60687", ",", "0.2589", "]", ",", "\n", "[", "0.30003", ",", "0.61067", ",", "0.25192", "]", ",", "\n", "[", "0.30437", ",", "0.61442", ",", "0.24507", "]", ",", "\n", "[", "0.3089", ",", "0.61816", ",", "0.23841", "]", ",", "\n", "[", "0.31357", ",", "0.62185", ",", "0.23192", "]", ",", "\n", "[", "0.3184", ",", "0.62552", ",", "0.22553", "]", ",", "\n", "[", "0.32339", ",", "0.62915", ",", "0.21927", "]", ",", "\n", "[", "0.32852", ",", "0.63275", ",", "0.21311", "]", ",", "\n", "[", "0.3338", ",", "0.63632", ",", "0.20712", "]", ",", "\n", "[", "0.33922", ",", "0.63986", ",", "0.20117", "]", ",", "\n", "[", "0.34475", ",", "0.64337", ",", "0.19538", "]", ",", "\n", "[", "0.35045", ",", "0.64686", ",", "0.1897", "]", ",", "\n", "[", "0.35629", ",", "0.6503", ",", "0.18415", "]", ",", "\n", "[", "0.36225", ",", "0.65372", ",", "0.17872", "]", ",", "\n", "[", "0.36834", ",", "0.65712", ",", "0.17336", "]", ",", "\n", "[", "0.37454", ",", "0.66048", ",", "0.1681", "]", ",", "\n", "[", "0.38085", ",", "0.66383", ",", "0.16297", "]", ",", "\n", "[", "0.38726", ",", "0.66714", ",", "0.15793", "]", ",", "\n", "[", "0.39382", ",", "0.67043", ",", "0.15302", "]", ",", "\n", "[", "0.40049", ",", "0.67368", ",", "0.14824", "]", ",", "\n", "[", "0.40723", ",", "0.67691", ",", "0.14356", "]", ",", "\n", "[", "0.41408", ",", "0.68011", ",", "0.13895", "]", ",", "\n", "[", "0.42102", ",", "0.68329", ",", "0.13455", "]", ",", "\n", "[", "0.42809", ",", "0.68644", ",", "0.13028", "]", ",", "\n", "[", "0.43524", ",", "0.68956", ",", "0.12609", "]", ",", "\n", "[", "0.44246", ",", "0.69267", ",", "0.12198", "]", ",", "\n", "[", "0.44975", ",", "0.69574", ",", "0.11813", "]", ",", "\n", "[", "0.45716", ",", "0.69877", ",", "0.1144", "]", ",", "\n", "[", "0.46465", ",", "0.70179", ",", "0.11092", "]", ",", "\n", "[", "0.4722", ",", "0.70479", ",", "0.10752", "]", ",", "\n", "[", "0.47982", ",", "0.70776", ",", "0.1043", "]", ",", "\n", "[", "0.48754", ",", "0.7107", ",", "0.1014", "]", ",", "\n", "[", "0.49532", ",", "0.71361", ",", "0.098689", "]", ",", "\n", "[", "0.50314", ",", "0.7165", ",", "0.096121", "]", ",", "\n", "[", "0.51106", ",", "0.71936", ",", "0.093905", "]", ",", "\n", "[", "0.51907", ",", "0.72219", ",", "0.091988", "]", ",", "\n", "[", "0.52711", ",", "0.72501", ",", "0.090242", "]", ",", "\n", "[", "0.53519", ",", "0.72779", ",", "0.08877", "]", ",", "\n", "[", "0.54339", ",", "0.73055", ",", "0.087727", "]", ",", "\n", "[", "0.55162", ",", "0.73328", ",", "0.086928", "]", ",", "\n", "[", "0.5599", ",", "0.73598", ",", "0.086341", "]", ",", "\n", "[", "0.56824", ",", "0.73866", ",", "0.086171", "]", ",", "\n", "[", "0.57666", ",", "0.74131", ",", "0.086363", "]", ",", "\n", "[", "0.58511", ",", "0.74394", ",", "0.086854", "]", ",", "\n", "[", "0.59362", ",", "0.74654", ",", "0.087647", "]", ",", "\n", "[", "0.60218", ",", "0.74911", ",", "0.088756", "]", ",", "\n", "[", "0.61075", ",", "0.75167", ",", "0.090091", "]", ",", "\n", "[", "0.6193", ",", "0.75421", ",", "0.091662", "]", ",", "\n", "[", "0.62776", ",", "0.75676", ",", "0.093291", "]", ",", "\n", "[", "0.63618", ",", "0.7593", ",", "0.095179", "]", ",", "\n", "[", "0.64452", ",", "0.76186", ",", "0.097055", "]", ",", "\n", "[", "0.65279", ",", "0.76442", ",", "0.0992", "]", ",", "\n", "[", "0.66101", ",", "0.76698", ",", "0.10144", "]", ",", "\n", "[", "0.66917", ",", "0.76954", ",", "0.10382", "]", ",", "\n", "[", "0.67726", ",", "0.77211", ",", "0.10635", "]", ",", "\n", "[", "0.68528", ",", "0.77468", ",", "0.10898", "]", ",", "\n", "[", "0.69324", ",", "0.77727", ",", "0.11176", "]", ",", "\n", "[", "0.70115", ",", "0.77985", ",", "0.1146", "]", ",", "\n", "[", "0.70899", ",", "0.78245", ",", "0.11768", "]", ",", "\n", "[", "0.71675", ",", "0.78505", ",", "0.12084", "]", ",", "\n", "[", "0.72446", ",", "0.78766", ",", "0.12415", "]", ",", "\n", "[", "0.73211", ",", "0.79027", ",", "0.12759", "]", ",", "\n", "[", "0.73969", ",", "0.7929", ",", "0.13116", "]", ",", "\n", "[", "0.74719", ",", "0.79554", ",", "0.13488", "]", ",", "\n", "[", "0.75463", ",", "0.79819", ",", "0.13869", "]", ",", "\n", "[", "0.762", ",", "0.80085", ",", "0.14265", "]", ",", "\n", "[", "0.76931", ",", "0.80352", ",", "0.1467", "]", ",", "\n", "[", "0.77655", ",", "0.80621", ",", "0.15091", "]", ",", "\n", "[", "0.78371", ",", "0.80891", ",", "0.15527", "]", ",", "\n", "[", "0.79078", ",", "0.81163", ",", "0.15974", "]", ",", "\n", "[", "0.79778", ",", "0.81436", ",", "0.1644", "]", ",", "\n", "[", "0.80471", ",", "0.81711", ",", "0.16917", "]", ",", "\n", "[", "0.81155", ",", "0.81987", ",", "0.17404", "]", ",", "\n", "[", "0.8183", ",", "0.82266", ",", "0.17908", "]", ",", "\n", "[", "0.82496", ",", "0.82547", ",", "0.18425", "]", ",", "\n", "[", "0.83154", ",", "0.8283", ",", "0.18958", "]", ",", "\n", "[", "0.83802", ",", "0.83116", ",", "0.19506", "]", ",", "\n", "[", "0.84439", ",", "0.83404", ",", "0.20068", "]", ",", "\n", "[", "0.85066", ",", "0.83694", ",", "0.20653", "]", ",", "\n", "[", "0.85681", ",", "0.83988", ",", "0.21248", "]", ",", "\n", "[", "0.86285", ",", "0.84285", ",", "0.21864", "]", ",", "\n", "[", "0.86877", ",", "0.84585", ",", "0.22495", "]", ",", "\n", "[", "0.87454", ",", "0.84889", ",", "0.23152", "]", ",", "\n", "[", "0.88018", ",", "0.85196", ",", "0.23823", "]", ",", "\n", "[", "0.88567", ",", "0.85508", ",", "0.24516", "]", ",", "\n", "[", "0.89101", ",", "0.85823", ",", "0.25235", "]", ",", "\n", "[", "0.89617", ",", "0.86144", ",", "0.25975", "]", ",", "\n", "[", "0.90116", ",", "0.86469", ",", "0.26737", "]", ",", "\n", "[", "0.90596", ",", "0.868", ",", "0.27529", "]", ",", "\n", "[", "0.91052", ",", "0.87137", ",", "0.2835", "]", ",", "\n", "[", "0.91485", ",", "0.87481", ",", "0.29203", "]", ",", "\n", "[", "0.91894", ",", "0.87831", ",", "0.30086", "]", ",", "\n", "[", "0.92276", ",", "0.88189", ",", "0.31007", "]", ",", "\n", "[", "0.92625", ",", "0.88556", ",", "0.3197", "]", ",", "\n", "[", "0.92941", ",", "0.88931", ",", "0.32973", "]", ",", "\n", "[", "0.93217", ",", "0.89317", ",", "0.34027", "]", ",", "\n", "[", "0.93451", ",", "0.89714", ",", "0.3513", "]", ",", "\n", "[", "0.93634", ",", "0.90125", ",", "0.36298", "]", ",", "\n", "[", "0.93763", ",", "0.9055", ",", "0.37534", "]", ",", "\n", "[", "0.9387", ",", "0.90978", ",", "0.38837", "]", ",", "\n", "[", "0.93989", ",", "0.91399", ",", "0.40197", "]", ",", "\n", "[", "0.94123", ",", "0.91811", ",", "0.41613", "]", ",", "\n", "[", "0.94272", ",", "0.92216", ",", "0.43083", "]", ",", "\n", "[", "0.94436", ",", "0.92612", ",", "0.44608", "]", ",", "\n", "[", "0.94613", ",", "0.93", ",", "0.46186", "]", ",", "\n", "[", "0.94803", ",", "0.9338", ",", "0.47813", "]", ",", "\n", "[", "0.95005", ",", "0.93753", ",", "0.49497", "]", ",", "\n", "[", "0.95218", ",", "0.94117", ",", "0.5123", "]", ",", "\n", "[", "0.95441", ",", "0.94474", ",", "0.53014", "]", ",", "\n", "[", "0.95674", ",", "0.94822", ",", "0.54852", "]", ",", "\n", "[", "0.95915", ",", "0.95163", ",", "0.56741", "]", ",", "\n", "[", "0.96162", ",", "0.95496", ",", "0.58679", "]", ",", "\n", "[", "0.96415", ",", "0.95822", ",", "0.60671", "]", ",", "\n", "[", "0.96673", ",", "0.96139", ",", "0.62717", "]", ",", "\n", "[", "0.96934", ",", "0.96449", ",", "0.64813", "]", ",", "\n", "[", "0.97196", ",", "0.96752", ",", "0.66962", "]", ",", "\n", "[", "0.97459", ",", "0.97046", ",", "0.69168", "]", ",", "\n", "[", "0.97722", ",", "0.97333", ",", "0.71425", "]", ",", "\n", "[", "0.9798", ",", "0.97613", ",", "0.73736", "]", ",", "\n", "[", "0.98235", ",", "0.97885", ",", "0.76105", "]", ",", "\n", "[", "0.98483", ",", "0.98151", ",", "0.78529", "]", ",", "\n", "[", "0.98722", ",", "0.98408", ",", "0.81007", "]", ",", "\n", "[", "0.98952", ",", "0.98658", ",", "0.83544", "]", ",", "\n", "[", "0.99169", ",", "0.98901", ",", "0.8614", "]", ",", "\n", "[", "0.99371", ",", "0.99136", ",", "0.88792", "]", ",", "\n", "[", "0.99556", ",", "0.99365", ",", "0.91503", "]", ",", "\n", "[", "0.99723", ",", "0.99585", ",", "0.94278", "]", ",", "\n", "[", "0.99867", ",", "0.99799", ",", "0.97109", "]", ",", "\n", "[", "0.99986", ",", "1", ",", "1", "]", ",", "\n", "]", "\n", "return", "_cmap", "(", "\"linear_bgyw\"", ",", "cm_data", ",", "reverse", "=", "reverse", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_linear_bgy": [[4445, 4707], ["plt._cmap"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt._cmap"], ["", "def", "cmap_linear_bgy", "(", "reverse", "=", "False", ")", ":", "\n", "# https://github.com/pyviz/colorcet", "\n", "# linear colormap, perceptually uniform", "\n", "    ", "cm_data", "=", "[", "\n", "[", "0", ",", "0.047803", ",", "0.4883", "]", ",", "\n", "[", "0", ",", "0.049756", ",", "0.49556", "]", ",", "\n", "[", "0", ",", "0.051605", ",", "0.50281", "]", ",", "\n", "[", "0", ",", "0.053545", ",", "0.51004", "]", ",", "\n", "[", "0", ",", "0.055585", ",", "0.51721", "]", ",", "\n", "[", "0", ",", "0.057566", ",", "0.52435", "]", ",", "\n", "[", "0", ",", "0.05978", ",", "0.53144", "]", ",", "\n", "[", "0", ",", "0.061812", ",", "0.53849", "]", ",", "\n", "[", "0", ",", "0.064016", ",", "0.5455", "]", ",", "\n", "[", "0", ",", "0.066232", ",", "0.55245", "]", ",", "\n", "[", "0", ",", "0.068551", ",", "0.55934", "]", ",", "\n", "[", "0", ",", "0.070824", ",", "0.5662", "]", ",", "\n", "[", "0", ",", "0.073229", ",", "0.57299", "]", ",", "\n", "[", "0", ",", "0.07557", ",", "0.57971", "]", ",", "\n", "[", "0", ",", "0.078003", ",", "0.58638", "]", ",", "\n", "[", "0", ",", "0.080554", ",", "0.59299", "]", ",", "\n", "[", "0", ",", "0.083114", ",", "0.59951", "]", ",", "\n", "[", "0", ",", "0.085697", ",", "0.60596", "]", ",", "\n", "[", "0", ",", "0.08842", ",", "0.61236", "]", ",", "\n", "[", "0", ",", "0.091168", ",", "0.61866", "]", ",", "\n", "[", "0", ",", "0.093925", ",", "0.62487", "]", ",", "\n", "[", "0", ",", "0.096707", ",", "0.63101", "]", ",", "\n", "[", "0", ",", "0.09963", ",", "0.63705", "]", ",", "\n", "[", "0", ",", "0.1026", ",", "0.64298", "]", ",", "\n", "[", "0", ",", "0.10561", ",", "0.64881", "]", ",", "\n", "[", "0", ",", "0.10866", ",", "0.65454", "]", ",", "\n", "[", "0", ",", "0.11183", ",", "0.66016", "]", ",", "\n", "[", "0", ",", "0.11497", ",", "0.66567", "]", ",", "\n", "[", "0", ",", "0.11829", ",", "0.67103", "]", ",", "\n", "[", "0", ",", "0.12156", ",", "0.67626", "]", ",", "\n", "[", "0", ",", "0.12498", ",", "0.68134", "]", ",", "\n", "[", "0", ",", "0.12846", ",", "0.68629", "]", ",", "\n", "[", "0", ",", "0.13201", ",", "0.69107", "]", ",", "\n", "[", "0", ",", "0.13559", ",", "0.6957", "]", ",", "\n", "[", "0", ",", "0.13927", ",", "0.70014", "]", ",", "\n", "[", "0", ",", "0.14307", ",", "0.70439", "]", ",", "\n", "[", "0", ",", "0.1469", ",", "0.70845", "]", ",", "\n", "[", "0", ",", "0.15085", ",", "0.71227", "]", ",", "\n", "[", "0", ",", "0.15487", ",", "0.71588", "]", ",", "\n", "[", "0", ",", "0.159", ",", "0.71923", "]", ",", "\n", "[", "0", ",", "0.16323", ",", "0.7223", "]", ",", "\n", "[", "0", ",", "0.16754", ",", "0.7251", "]", ",", "\n", "[", "0", ",", "0.17195", ",", "0.72757", "]", ",", "\n", "[", "0", ",", "0.17647", ",", "0.72972", "]", ",", "\n", "[", "0", ",", "0.18113", ",", "0.73149", "]", ",", "\n", "[", "0", ",", "0.18594", ",", "0.73289", "]", ",", "\n", "[", "0", ",", "0.19074", ",", "0.73398", "]", ",", "\n", "[", "0", ",", "0.19556", ",", "0.73486", "]", ",", "\n", "[", "0", ",", "0.20033", ",", "0.73556", "]", ",", "\n", "[", "0", ",", "0.20512", ",", "0.73608", "]", ",", "\n", "[", "0", ",", "0.20987", ",", "0.73643", "]", ",", "\n", "[", "0", ",", "0.21461", ",", "0.73659", "]", ",", "\n", "[", "0", ",", "0.21934", ",", "0.73657", "]", ",", "\n", "[", "0", ",", "0.22402", ",", "0.73637", "]", ",", "\n", "[", "0", ",", "0.22875", ",", "0.73599", "]", ",", "\n", "[", "0", ",", "0.2334", ",", "0.73544", "]", ",", "\n", "[", "0", ",", "0.23809", ",", "0.73469", "]", ",", "\n", "[", "0", ",", "0.24275", ",", "0.73376", "]", ",", "\n", "[", "0", ",", "0.24743", ",", "0.73266", "]", ",", "\n", "[", "0", ",", "0.25208", ",", "0.73137", "]", ",", "\n", "[", "0", ",", "0.25673", ",", "0.72991", "]", ",", "\n", "[", "0", ",", "0.26137", ",", "0.72825", "]", ",", "\n", "[", "0", ",", "0.26603", ",", "0.72642", "]", ",", "\n", "[", "0", ",", "0.27068", ",", "0.72441", "]", ",", "\n", "[", "0", ",", "0.27531", ",", "0.72221", "]", ",", "\n", "[", "0", ",", "0.27995", ",", "0.71983", "]", ",", "\n", "[", "0", ",", "0.28458", ",", "0.71727", "]", ",", "\n", "[", "0", ",", "0.28924", ",", "0.71452", "]", ",", "\n", "[", "0", ",", "0.29387", ",", "0.71161", "]", ",", "\n", "[", "0", ",", "0.29852", ",", "0.70851", "]", ",", "\n", "[", "0", ",", "0.30317", ",", "0.70521", "]", ",", "\n", "[", "0", ",", "0.30782", ",", "0.70174", "]", ",", "\n", "[", "0", ",", "0.31248", ",", "0.69809", "]", ",", "\n", "[", "0", ",", "0.31716", ",", "0.69426", "]", ",", "\n", "[", "0", ",", "0.32182", ",", "0.69025", "]", ",", "\n", "[", "0", ",", "0.32649", ",", "0.68607", "]", ",", "\n", "[", "0", ",", "0.33116", ",", "0.68178", "]", ",", "\n", "[", "0", ",", "0.33582", ",", "0.67746", "]", ",", "\n", "[", "0", ",", "0.34046", ",", "0.6731", "]", ",", "\n", "[", "0", ",", "0.34509", ",", "0.66871", "]", ",", "\n", "[", "0", ",", "0.3497", ",", "0.66429", "]", ",", "\n", "[", "0", ",", "0.3543", ",", "0.65984", "]", ",", "\n", "[", "0", ",", "0.35888", ",", "0.65536", "]", ",", "\n", "[", "0", ",", "0.36346", ",", "0.65085", "]", ",", "\n", "[", "0", ",", "0.36803", ",", "0.6463", "]", ",", "\n", "[", "0", ",", "0.37258", ",", "0.64173", "]", ",", "\n", "[", "0", ",", "0.37713", ",", "0.63713", "]", ",", "\n", "[", "0", ",", "0.38167", ",", "0.6325", "]", ",", "\n", "[", "0", ",", "0.38618", ",", "0.62783", "]", ",", "\n", "[", "0", ",", "0.39071", ",", "0.62313", "]", ",", "\n", "[", "0", ",", "0.39523", ",", "0.6184", "]", ",", "\n", "[", "0", ",", "0.39972", ",", "0.61363", "]", ",", "\n", "[", "0", ",", "0.40423", ",", "0.60885", "]", ",", "\n", "[", "0", ",", "0.40872", ",", "0.60402", "]", ",", "\n", "[", "0", ",", "0.41321", ",", "0.59915", "]", ",", "\n", "[", "0", ",", "0.41769", ",", "0.59426", "]", ",", "\n", "[", "0", ",", "0.42215", ",", "0.58932", "]", ",", "\n", "[", "0", ",", "0.42663", ",", "0.58437", "]", ",", "\n", "[", "0", ",", "0.4311", ",", "0.57937", "]", ",", "\n", "[", "0", ",", "0.43556", ",", "0.57433", "]", ",", "\n", "[", "0", ",", "0.44001", ",", "0.56926", "]", ",", "\n", "[", "0", ",", "0.44446", ",", "0.56416", "]", ",", "\n", "[", "0", ",", "0.44891", ",", "0.55902", "]", ",", "\n", "[", "0", ",", "0.45334", ",", "0.55384", "]", ",", "\n", "[", "0", ",", "0.45778", ",", "0.54863", "]", ",", "\n", "[", "0", ",", "0.46222", ",", "0.54336", "]", ",", "\n", "[", "0", ",", "0.46665", ",", "0.53802", "]", ",", "\n", "[", "0", ",", "0.47105", ",", "0.53253", "]", ",", "\n", "[", "0", ",", "0.47545", ",", "0.52691", "]", ",", "\n", "[", "0", ",", "0.47982", ",", "0.52115", "]", ",", "\n", "[", "0", ",", "0.48417", ",", "0.51525", "]", ",", "\n", "[", "0", ",", "0.48852", ",", "0.50921", "]", ",", "\n", "[", "0", ",", "0.49284", ",", "0.50301", "]", ",", "\n", "[", "0", ",", "0.49717", ",", "0.49668", "]", ",", "\n", "[", "0", ",", "0.50147", ",", "0.49022", "]", ",", "\n", "[", "0", ",", "0.50575", ",", "0.48359", "]", ",", "\n", "[", "0", ",", "0.51003", ",", "0.47682", "]", ",", "\n", "[", "0", ",", "0.51431", ",", "0.4699", "]", ",", "\n", "[", "0", ",", "0.51856", ",", "0.4628", "]", ",", "\n", "[", "0.0097866", ",", "0.52281", ",", "0.45558", "]", ",", "\n", "[", "0.023896", ",", "0.52704", ",", "0.44818", "]", ",", "\n", "[", "0.038383", ",", "0.53126", ",", "0.44061", "]", ",", "\n", "[", "0.051763", ",", "0.53547", ",", "0.43289", "]", ",", "\n", "[", "0.063442", ",", "0.53968", ",", "0.42499", "]", ",", "\n", "[", "0.073828", ",", "0.54388", ",", "0.41692", "]", ",", "\n", "[", "0.083244", ",", "0.54807", ",", "0.40866", "]", ",", "\n", "[", "0.092062", ",", "0.55225", ",", "0.40022", "]", ",", "\n", "[", "0.10019", ",", "0.55642", ",", "0.39159", "]", ",", "\n", "[", "0.10786", ",", "0.56059", ",", "0.38276", "]", ",", "\n", "[", "0.11513", ",", "0.56474", ",", "0.37372", "]", ",", "\n", "[", "0.12206", ",", "0.56889", ",", "0.36445", "]", ",", "\n", "[", "0.12871", ",", "0.57304", ",", "0.35498", "]", ",", "\n", "[", "0.13507", ",", "0.57718", ",", "0.34524", "]", ",", "\n", "[", "0.14115", ",", "0.58131", ",", "0.33527", "]", ",", "\n", "[", "0.14697", ",", "0.58544", ",", "0.32499", "]", ",", "\n", "[", "0.15257", ",", "0.58954", ",", "0.31449", "]", ",", "\n", "[", "0.15773", ",", "0.59367", ",", "0.30393", "]", ",", "\n", "[", "0.16231", ",", "0.59779", ",", "0.29352", "]", ",", "\n", "[", "0.16631", ",", "0.60191", ",", "0.28332", "]", ",", "\n", "[", "0.16984", ",", "0.60603", ",", "0.27332", "]", ",", "\n", "[", "0.17292", ",", "0.61015", ",", "0.26352", "]", ",", "\n", "[", "0.17565", ",", "0.61427", ",", "0.25387", "]", ",", "\n", "[", "0.17811", ",", "0.6184", ",", "0.24439", "]", ",", "\n", "[", "0.18021", ",", "0.62252", ",", "0.23514", "]", ",", "\n", "[", "0.18207", ",", "0.62664", ",", "0.22606", "]", ",", "\n", "[", "0.18374", ",", "0.63076", ",", "0.21715", "]", ",", "\n", "[", "0.18522", ",", "0.63487", ",", "0.2084", "]", ",", "\n", "[", "0.18649", ",", "0.63898", ",", "0.19982", "]", ",", "\n", "[", "0.18765", ",", "0.64309", ",", "0.19148", "]", ",", "\n", "[", "0.18863", ",", "0.6472", ",", "0.18334", "]", ",", "\n", "[", "0.18951", ",", "0.6513", ",", "0.1754", "]", ",", "\n", "[", "0.19029", ",", "0.65539", ",", "0.16767", "]", ",", "\n", "[", "0.19099", ",", "0.65948", ",", "0.16013", "]", ",", "\n", "[", "0.19162", ",", "0.66357", ",", "0.15293", "]", ",", "\n", "[", "0.19219", ",", "0.66765", ",", "0.14604", "]", ",", "\n", "[", "0.19272", ",", "0.67172", ",", "0.13937", "]", ",", "\n", "[", "0.1932", ",", "0.67579", ",", "0.13311", "]", ",", "\n", "[", "0.19366", ",", "0.67985", ",", "0.1272", "]", ",", "\n", "[", "0.1941", ",", "0.68391", ",", "0.1218", "]", ",", "\n", "[", "0.19451", ",", "0.68797", ",", "0.11692", "]", ",", "\n", "[", "0.1949", ",", "0.69202", ",", "0.11259", "]", ",", "\n", "[", "0.19529", ",", "0.69606", ",", "0.10881", "]", ",", "\n", "[", "0.19569", ",", "0.70009", ",", "0.10581", "]", ",", "\n", "[", "0.19611", ",", "0.70412", ",", "0.10358", "]", ",", "\n", "[", "0.19653", ",", "0.70814", ",", "0.10209", "]", ",", "\n", "[", "0.19694", ",", "0.71215", ",", "0.10139", "]", ",", "\n", "[", "0.19736", ",", "0.71617", ",", "0.10116", "]", ",", "\n", "[", "0.19779", ",", "0.72018", ",", "0.10101", "]", ",", "\n", "[", "0.19823", ",", "0.7242", ",", "0.10087", "]", ",", "\n", "[", "0.19868", ",", "0.72822", ",", "0.10073", "]", ",", "\n", "[", "0.19914", ",", "0.73225", ",", "0.1006", "]", ",", "\n", "[", "0.19961", ",", "0.73627", ",", "0.10048", "]", ",", "\n", "[", "0.20009", ",", "0.74031", ",", "0.10036", "]", ",", "\n", "[", "0.20058", ",", "0.74434", ",", "0.10025", "]", ",", "\n", "[", "0.20108", ",", "0.74838", ",", "0.10015", "]", ",", "\n", "[", "0.20159", ",", "0.75242", ",", "0.10006", "]", ",", "\n", "[", "0.20211", ",", "0.75647", ",", "0.099977", "]", ",", "\n", "[", "0.20265", ",", "0.76052", ",", "0.099902", "]", ",", "\n", "[", "0.2032", ",", "0.76457", ",", "0.099835", "]", ",", "\n", "[", "0.20376", ",", "0.76862", ",", "0.099777", "]", ",", "\n", "[", "0.20433", ",", "0.77267", ",", "0.099729", "]", ",", "\n", "[", "0.20488", ",", "0.77674", ",", "0.099691", "]", ",", "\n", "[", "0.20546", ",", "0.7808", ",", "0.099663", "]", ",", "\n", "[", "0.20608", ",", "0.78487", ",", "0.099645", "]", ",", "\n", "[", "0.20669", ",", "0.78894", ",", "0.099637", "]", ",", "\n", "[", "0.20729", ",", "0.79301", ",", "0.099641", "]", ",", "\n", "[", "0.20791", ",", "0.79708", ",", "0.099656", "]", ",", "\n", "[", "0.20855", ",", "0.80116", ",", "0.099683", "]", ",", "\n", "[", "0.2092", ",", "0.80523", ",", "0.09972", "]", ",", "\n", "[", "0.20987", ",", "0.80932", ",", "0.09977", "]", ",", "\n", "[", "0.21055", ",", "0.8134", ",", "0.099833", "]", ",", "\n", "[", "0.21125", ",", "0.81749", ",", "0.099908", "]", ",", "\n", "[", "0.21196", ",", "0.82159", ",", "0.099996", "]", ",", "\n", "[", "0.21266", ",", "0.82567", ",", "0.1001", "]", ",", "\n", "[", "0.2134", ",", "0.82977", ",", "0.10021", "]", ",", "\n", "[", "0.21454", ",", "0.83386", ",", "0.10034", "]", ",", "\n", "[", "0.21746", ",", "0.83784", ",", "0.10049", "]", ",", "\n", "[", "0.22334", ",", "0.84166", ",", "0.10065", "]", ",", "\n", "[", "0.23182", ",", "0.84531", ",", "0.10083", "]", ",", "\n", "[", "0.24228", ",", "0.84884", ",", "0.10102", "]", ",", "\n", "[", "0.25428", ",", "0.85224", ",", "0.10123", "]", ",", "\n", "[", "0.26735", ",", "0.85553", ",", "0.10145", "]", ",", "\n", "[", "0.28125", ",", "0.85872", ",", "0.10168", "]", ",", "\n", "[", "0.29571", ",", "0.86184", ",", "0.10193", "]", ",", "\n", "[", "0.31067", ",", "0.86485", ",", "0.10219", "]", ",", "\n", "[", "0.32594", ",", "0.86779", ",", "0.10246", "]", ",", "\n", "[", "0.34137", ",", "0.87065", ",", "0.10275", "]", ",", "\n", "[", "0.35684", ",", "0.87346", ",", "0.10306", "]", ",", "\n", "[", "0.3724", ",", "0.87619", ",", "0.10337", "]", ",", "\n", "[", "0.38805", ",", "0.87886", ",", "0.10369", "]", ",", "\n", "[", "0.40366", ",", "0.88147", ",", "0.10401", "]", ",", "\n", "[", "0.41921", ",", "0.88402", ",", "0.10433", "]", ",", "\n", "[", "0.43478", ",", "0.88651", ",", "0.10468", "]", ",", "\n", "[", "0.45028", ",", "0.88894", ",", "0.10507", "]", ",", "\n", "[", "0.4657", ",", "0.89133", ",", "0.10549", "]", ",", "\n", "[", "0.48111", ",", "0.89365", ",", "0.10592", "]", ",", "\n", "[", "0.49641", ",", "0.89593", ",", "0.10637", "]", ",", "\n", "[", "0.51169", ",", "0.89815", ",", "0.10681", "]", ",", "\n", "[", "0.52691", ",", "0.90032", ",", "0.10725", "]", ",", "\n", "[", "0.54202", ",", "0.90245", ",", "0.1077", "]", ",", "\n", "[", "0.55713", ",", "0.90452", ",", "0.10817", "]", ",", "\n", "[", "0.57212", ",", "0.90655", ",", "0.10869", "]", ",", "\n", "[", "0.5871", ",", "0.90852", ",", "0.10927", "]", ",", "\n", "[", "0.60201", ",", "0.91045", ",", "0.10983", "]", ",", "\n", "[", "0.61689", ",", "0.91232", ",", "0.11037", "]", ",", "\n", "[", "0.63169", ",", "0.91415", ",", "0.11095", "]", ",", "\n", "[", "0.64646", ",", "0.91593", ",", "0.11155", "]", ",", "\n", "[", "0.66118", ",", "0.91767", ",", "0.11216", "]", ",", "\n", "[", "0.67585", ",", "0.91934", ",", "0.11281", "]", ",", "\n", "[", "0.69049", ",", "0.92098", ",", "0.11347", "]", ",", "\n", "[", "0.70508", ",", "0.92257", ",", "0.11409", "]", ",", "\n", "[", "0.71966", ",", "0.92411", ",", "0.11477", "]", ",", "\n", "[", "0.73418", ",", "0.9256", ",", "0.11552", "]", ",", "\n", "[", "0.74868", ",", "0.92704", ",", "0.11627", "]", ",", "\n", "[", "0.76314", ",", "0.92844", ",", "0.11699", "]", ",", "\n", "[", "0.77759", ",", "0.92979", ",", "0.11777", "]", ",", "\n", "[", "0.79201", ",", "0.93109", ",", "0.11859", "]", ",", "\n", "[", "0.8064", ",", "0.93233", ",", "0.11937", "]", ",", "\n", "[", "0.82077", ",", "0.93353", ",", "0.12019", "]", ",", "\n", "[", "0.83511", ",", "0.93468", ",", "0.12102", "]", ",", "\n", "[", "0.84946", ",", "0.93578", ",", "0.12189", "]", ",", "\n", "[", "0.86375", ",", "0.93684", ",", "0.12278", "]", ",", "\n", "[", "0.87808", ",", "0.93783", ",", "0.1237", "]", ",", "\n", "[", "0.89234", ",", "0.93878", ",", "0.12464", "]", ",", "\n", "[", "0.90664", ",", "0.93968", ",", "0.12562", "]", ",", "\n", "[", "0.92088", ",", "0.94052", ",", "0.12657", "]", ",", "\n", "[", "0.93514", ",", "0.94131", ",", "0.12755", "]", ",", "\n", "[", "0.94939", ",", "0.94206", ",", "0.12857", "]", ",", "\n", "[", "0.9636", ",", "0.94275", ",", "0.12961", "]", ",", "\n", "[", "0.97785", ",", "0.94338", ",", "0.13068", "]", ",", "\n", "[", "0.99205", ",", "0.94397", ",", "0.13172", "]", ",", "\n", "[", "1", ",", "0.94449", ",", "0.13281", "]", ",", "\n", "[", "1", ",", "0.94497", ",", "0.13392", "]", ",", "\n", "[", "1", ",", "0.94539", ",", "0.13505", "]", ",", "\n", "[", "1", ",", "0.94574", ",", "0.13614", "]", ",", "\n", "[", "1", ",", "0.94606", ",", "0.13735", "]", ",", "\n", "]", "\n", "return", "_cmap", "(", "\"linear_bgy\"", ",", "cm_data", ",", "reverse", "=", "reverse", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_linear_rainbow": [[4709, 4971], ["plt._cmap"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt._cmap"], ["", "def", "cmap_linear_rainbow", "(", "reverse", "=", "False", ")", ":", "\n", "# https://github.com/pyviz/colorcet", "\n", "# linear colormap, perceptually uniform", "\n", "    ", "cm_data", "=", "[", "\n", "[", "0", ",", "0.20755", ",", "0.97632", "]", ",", "\n", "[", "0", ",", "0.21857", ",", "0.96476", "]", ",", "\n", "[", "0", ",", "0.2291", ",", "0.95322", "]", ",", "\n", "[", "0", ",", "0.23923", ",", "0.94169", "]", ",", "\n", "[", "0", ",", "0.24899", ",", "0.93018", "]", ",", "\n", "[", "0", ",", "0.25842", ",", "0.91868", "]", ",", "\n", "[", "0", ",", "0.26756", ",", "0.9072", "]", ",", "\n", "[", "0", ",", "0.27649", ",", "0.89573", "]", ",", "\n", "[", "0", ",", "0.28513", ",", "0.88428", "]", ",", "\n", "[", "0", ",", "0.29358", ",", "0.87284", "]", ",", "\n", "[", "0", ",", "0.30184", ",", "0.86141", "]", ",", "\n", "[", "0", ",", "0.30994", ",", "0.85", "]", ",", "\n", "[", "0", ",", "0.31785", ",", "0.83859", "]", ",", "\n", "[", "0", ",", "0.3256", ",", "0.82721", "]", ",", "\n", "[", "0", ",", "0.33324", ",", "0.81583", "]", ",", "\n", "[", "0", ",", "0.34073", ",", "0.80447", "]", ",", "\n", "[", "0", ",", "0.3481", ",", "0.79312", "]", ",", "\n", "[", "0", ",", "0.35537", ",", "0.78178", "]", ",", "\n", "[", "0", ",", "0.3625", ",", "0.77045", "]", ",", "\n", "[", "0", ",", "0.36954", ",", "0.75913", "]", ",", "\n", "[", "0", ",", "0.37649", ",", "0.74783", "]", ",", "\n", "[", "0", ",", "0.38333", ",", "0.73654", "]", ",", "\n", "[", "0", ",", "0.39005", ",", "0.72528", "]", ",", "\n", "[", "0", ",", "0.39667", ",", "0.71405", "]", ",", "\n", "[", "0", ",", "0.40319", ",", "0.70286", "]", ",", "\n", "[", "0", ",", "0.40957", ",", "0.69171", "]", ",", "\n", "[", "0", ",", "0.4158", ",", "0.68063", "]", ",", "\n", "[", "0", ",", "0.42188", ",", "0.66965", "]", ",", "\n", "[", "0", ",", "0.4278", ",", "0.65875", "]", ",", "\n", "[", "0", ",", "0.43352", ",", "0.64799", "]", ",", "\n", "[", "0", ",", "0.43905", ",", "0.63737", "]", ",", "\n", "[", "0", ",", "0.44438", ",", "0.62689", "]", ",", "\n", "[", "0", ",", "0.4495", ",", "0.61659", "]", ",", "\n", "[", "0", ",", "0.45441", ",", "0.60644", "]", ",", "\n", "[", "0", ",", "0.45914", ",", "0.59646", "]", ",", "\n", "[", "0.0019224", ",", "0.46368", ",", "0.58662", "]", ",", "\n", "[", "0.027932", ",", "0.46808", ",", "0.57693", "]", ",", "\n", "[", "0.054843", ",", "0.47236", ",", "0.56735", "]", ",", "\n", "[", "0.076598", ",", "0.47653", ",", "0.55785", "]", ",", "\n", "[", "0.095053", ",", "0.48062", ",", "0.54844", "]", ",", "\n", "[", "0.11106", ",", "0.48465", ",", "0.53907", "]", ",", "\n", "[", "0.12523", ",", "0.48865", ",", "0.52974", "]", ",", "\n", "[", "0.13795", ",", "0.49262", ",", "0.52042", "]", ",", "\n", "[", "0.14935", ",", "0.49658", ",", "0.5111", "]", ",", "\n", "[", "0.15962", ",", "0.50055", ",", "0.50179", "]", ",", "\n", "[", "0.169", ",", "0.50452", ",", "0.49245", "]", ",", "\n", "[", "0.17747", ",", "0.50849", ",", "0.48309", "]", ",", "\n", "[", "0.18517", ",", "0.51246", ",", "0.4737", "]", ",", "\n", "[", "0.19217", ",", "0.51645", ",", "0.46429", "]", ",", "\n", "[", "0.19856", ",", "0.52046", ",", "0.45483", "]", ",", "\n", "[", "0.20443", ",", "0.52448", ",", "0.44531", "]", ",", "\n", "[", "0.20974", ",", "0.52851", ",", "0.43577", "]", ",", "\n", "[", "0.21461", ",", "0.53255", ",", "0.42616", "]", ",", "\n", "[", "0.21905", ",", "0.53661", ",", "0.41651", "]", ",", "\n", "[", "0.22309", ",", "0.54066", ",", "0.40679", "]", ",", "\n", "[", "0.22674", ",", "0.54474", ",", "0.397", "]", ",", "\n", "[", "0.23002", ",", "0.54883", ",", "0.38713", "]", ",", "\n", "[", "0.233", ",", "0.55292", ",", "0.3772", "]", ",", "\n", "[", "0.23568", ",", "0.55703", ",", "0.36716", "]", ",", "\n", "[", "0.23802", ",", "0.56114", ",", "0.35704", "]", ",", "\n", "[", "0.24006", ",", "0.56526", ",", "0.34678", "]", ",", "\n", "[", "0.24185", ",", "0.56939", ",", "0.3364", "]", ",", "\n", "[", "0.24334", ",", "0.57354", ",", "0.32588", "]", ",", "\n", "[", "0.24458", ",", "0.57769", ",", "0.31523", "]", ",", "\n", "[", "0.24556", ",", "0.58185", ",", "0.30439", "]", ",", "\n", "[", "0.2463", ",", "0.58603", ",", "0.29336", "]", ",", "\n", "[", "0.2468", ",", "0.59019", ",", "0.28214", "]", ",", "\n", "[", "0.24707", ",", "0.59438", ",", "0.27067", "]", ",", "\n", "[", "0.24714", ",", "0.59856", ",", "0.25895", "]", ",", "\n", "[", "0.24704", ",", "0.60275", ",", "0.24696", "]", ",", "\n", "[", "0.24679", ",", "0.60693", ",", "0.23472", "]", ",", "\n", "[", "0.24648", ",", "0.61109", ",", "0.22215", "]", ",", "\n", "[", "0.24616", ",", "0.61523", ",", "0.20933", "]", ",", "\n", "[", "0.24597", ",", "0.61936", ",", "0.19628", "]", ",", "\n", "[", "0.24602", ",", "0.62342", ",", "0.18297", "]", ",", "\n", "[", "0.24648", ",", "0.62742", ",", "0.1696", "]", ",", "\n", "[", "0.24753", ",", "0.63135", ",", "0.15615", "]", ",", "\n", "[", "0.24931", ",", "0.63518", ",", "0.14276", "]", ",", "\n", "[", "0.25204", ",", "0.63889", ",", "0.12965", "]", ",", "\n", "[", "0.25579", ",", "0.64249", ",", "0.11693", "]", ",", "\n", "[", "0.2607", ",", "0.64593", ",", "0.10484", "]", ",", "\n", "[", "0.26674", ",", "0.64925", ",", "0.093668", "]", ",", "\n", "[", "0.2739", ",", "0.65241", ",", "0.083583", "]", ",", "\n", "[", "0.28205", ",", "0.65544", ",", "0.074764", "]", ",", "\n", "[", "0.29104", ",", "0.65834", ",", "0.067449", "]", ",", "\n", "[", "0.30071", ",", "0.66112", ",", "0.061598", "]", ",", "\n", "[", "0.31093", ",", "0.66382", ",", "0.057362", "]", ",", "\n", "[", "0.32147", ",", "0.66641", ",", "0.054542", "]", ",", "\n", "[", "0.33226", ",", "0.66895", ",", "0.052918", "]", ",", "\n", "[", "0.34314", ",", "0.67142", ",", "0.052293", "]", ",", "\n", "[", "0.35402", ",", "0.67386", ",", "0.052401", "]", ",", "\n", "[", "0.36487", ",", "0.67627", ",", "0.05303", "]", ",", "\n", "[", "0.37564", ",", "0.67864", ",", "0.054018", "]", ",", "\n", "[", "0.38629", ",", "0.681", ",", "0.055243", "]", ",", "\n", "[", "0.39683", ",", "0.68335", ",", "0.05664", "]", ",", "\n", "[", "0.40725", ",", "0.68569", ",", "0.057955", "]", ",", "\n", "[", "0.41755", ",", "0.68801", ",", "0.059542", "]", ",", "\n", "[", "0.42772", ",", "0.69031", ",", "0.060911", "]", ",", "\n", "[", "0.43777", ",", "0.69262", ",", "0.062454", "]", ",", "\n", "[", "0.4477", ",", "0.69491", ",", "0.063883", "]", ",", "\n", "[", "0.45755", ",", "0.69719", ",", "0.065334", "]", ",", "\n", "[", "0.46731", ",", "0.69947", ",", "0.066802", "]", ",", "\n", "[", "0.47698", ",", "0.70173", ",", "0.068291", "]", ",", "\n", "[", "0.48656", ",", "0.70399", ",", "0.069758", "]", ",", "\n", "[", "0.49607", ",", "0.70625", ",", "0.071211", "]", ",", "\n", "[", "0.50551", ",", "0.70848", ",", "0.072621", "]", ",", "\n", "[", "0.5149", ",", "0.71071", ",", "0.074107", "]", ",", "\n", "[", "0.52421", ",", "0.71293", ",", "0.07551", "]", ",", "\n", "[", "0.53346", ",", "0.71514", ",", "0.076938", "]", ",", "\n", "[", "0.54268", ",", "0.71735", ",", "0.078389", "]", ",", "\n", "[", "0.55183", ",", "0.71954", ",", "0.079862", "]", ",", "\n", "[", "0.56093", ",", "0.72172", ",", "0.08136", "]", ",", "\n", "[", "0.56998", ",", "0.7239", ",", "0.082779", "]", ",", "\n", "[", "0.57901", ",", "0.72607", ",", "0.084273", "]", ",", "\n", "[", "0.58797", ",", "0.72822", ",", "0.08563", "]", ",", "\n", "[", "0.59692", ",", "0.73037", ",", "0.08717", "]", ",", "\n", "[", "0.60581", ",", "0.73251", ",", "0.088583", "]", ",", "\n", "[", "0.61468", ",", "0.73464", ",", "0.09003", "]", ",", "\n", "[", "0.62353", ",", "0.73676", ",", "0.091506", "]", ",", "\n", "[", "0.63233", ",", "0.73887", ",", "0.092872", "]", ",", "\n", "[", "0.6411", ",", "0.74097", ",", "0.094388", "]", ",", "\n", "[", "0.64986", ",", "0.74307", ",", "0.095796", "]", ",", "\n", "[", "0.65858", ",", "0.74515", ",", "0.097234", "]", ",", "\n", "[", "0.66728", ",", "0.74722", ",", "0.098697", "]", ",", "\n", "[", "0.67595", ",", "0.74928", ",", "0.10013", "]", ",", "\n", "[", "0.6846", ",", "0.75135", ",", "0.10157", "]", ",", "\n", "[", "0.69324", ",", "0.75339", ",", "0.10305", "]", ",", "\n", "[", "0.70185", ",", "0.75543", ",", "0.10444", "]", ",", "\n", "[", "0.71045", ",", "0.75746", ",", "0.10594", "]", ",", "\n", "[", "0.71902", ",", "0.75947", ",", "0.10738", "]", ",", "\n", "[", "0.72758", ",", "0.76149", ",", "0.10881", "]", ",", "\n", "[", "0.73613", ",", "0.76349", ",", "0.1103", "]", ",", "\n", "[", "0.74466", ",", "0.76548", ",", "0.11173", "]", ",", "\n", "[", "0.75317", ",", "0.76746", ",", "0.1132", "]", ",", "\n", "[", "0.76167", ",", "0.76943", ",", "0.11457", "]", ",", "\n", "[", "0.77016", ",", "0.7714", ",", "0.11608", "]", ",", "\n", "[", "0.77864", ",", "0.77335", ",", "0.11749", "]", ",", "\n", "[", "0.78711", ",", "0.7753", ",", "0.11897", "]", ",", "\n", "[", "0.79556", ",", "0.77724", ",", "0.12038", "]", ",", "\n", "[", "0.80401", ",", "0.77916", ",", "0.12182", "]", ",", "\n", "[", "0.81244", ",", "0.78108", ",", "0.12327", "]", ",", "\n", "[", "0.82086", ",", "0.78299", ",", "0.12474", "]", ",", "\n", "[", "0.82929", ",", "0.78489", ",", "0.12623", "]", ",", "\n", "[", "0.83769", ",", "0.78678", ",", "0.12766", "]", ",", "\n", "[", "0.84609", ",", "0.78866", ",", "0.1291", "]", ",", "\n", "[", "0.8545", ",", "0.79053", ",", "0.1306", "]", ",", "\n", "[", "0.86289", ",", "0.79238", ",", "0.13203", "]", ",", "\n", "[", "0.87127", ",", "0.7942", ",", "0.13346", "]", ",", "\n", "[", "0.87964", ",", "0.79598", ",", "0.13491", "]", ",", "\n", "[", "0.88799", ",", "0.79771", ",", "0.13626", "]", ",", "\n", "[", "0.8963", ",", "0.79937", ",", "0.13769", "]", ",", "\n", "[", "0.90456", ",", "0.80091", ",", "0.13896", "]", ",", "\n", "[", "0.91273", ",", "0.80229", ",", "0.14021", "]", ",", "\n", "[", "0.92077", ",", "0.80347", ",", "0.14138", "]", ",", "\n", "[", "0.92863", ",", "0.80438", ",", "0.14238", "]", ",", "\n", "[", "0.93625", ",", "0.80495", ",", "0.14322", "]", ",", "\n", "[", "0.94355", ",", "0.80511", ",", "0.14385", "]", ",", "\n", "[", "0.95044", ",", "0.80481", ",", "0.14425", "]", ",", "\n", "[", "0.95686", ",", "0.80399", ",", "0.14437", "]", ",", "\n", "[", "0.96274", ",", "0.80262", ",", "0.14419", "]", ",", "\n", "[", "0.96803", ",", "0.80067", ",", "0.14372", "]", ",", "\n", "[", "0.9727", ",", "0.79816", ",", "0.14294", "]", ",", "\n", "[", "0.97674", ",", "0.79512", ",", "0.14188", "]", ",", "\n", "[", "0.9802", ",", "0.79159", ",", "0.14055", "]", ",", "\n", "[", "0.9831", ",", "0.78764", ",", "0.13895", "]", ",", "\n", "[", "0.98551", ",", "0.78333", ",", "0.13721", "]", ",", "\n", "[", "0.98751", ",", "0.77872", ",", "0.13526", "]", ",", "\n", "[", "0.98917", ",", "0.77389", ",", "0.13319", "]", ",", "\n", "[", "0.99056", ",", "0.76889", ",", "0.13103", "]", ",", "\n", "[", "0.99175", ",", "0.76376", ",", "0.12875", "]", ",", "\n", "[", "0.99279", ",", "0.75855", ",", "0.12647", "]", ",", "\n", "[", "0.99371", ",", "0.75327", ",", "0.1241", "]", ",", "\n", "[", "0.99455", ",", "0.74796", ",", "0.12173", "]", ",", "\n", "[", "0.99534", ",", "0.74261", ",", "0.11937", "]", ",", "\n", "[", "0.99608", ",", "0.73724", ",", "0.11697", "]", ",", "\n", "[", "0.99679", ",", "0.73185", ",", "0.11453", "]", ",", "\n", "[", "0.99748", ",", "0.72646", ",", "0.11217", "]", ",", "\n", "[", "0.99814", ",", "0.72104", ",", "0.10976", "]", ",", "\n", "[", "0.99879", ",", "0.71563", ",", "0.1073", "]", ",", "\n", "[", "0.99942", ",", "0.71019", ",", "0.1048", "]", ",", "\n", "[", "1", ",", "0.70475", ",", "0.10238", "]", ",", "\n", "[", "1", ",", "0.69929", ",", "0.099908", "]", ",", "\n", "[", "1", ",", "0.69382", ",", "0.09745", "]", ",", "\n", "[", "1", ",", "0.68834", ",", "0.095", "]", ",", "\n", "[", "1", ",", "0.68284", ",", "0.092452", "]", ",", "\n", "[", "1", ",", "0.67734", ",", "0.08996", "]", ",", "\n", "[", "1", ",", "0.6718", ",", "0.087465", "]", ",", "\n", "[", "1", ",", "0.66626", ",", "0.08489", "]", ",", "\n", "[", "1", ",", "0.66071", ",", "0.082364", "]", ",", "\n", "[", "1", ",", "0.65514", ",", "0.079729", "]", ",", "\n", "[", "1", ",", "0.64955", ",", "0.077118", "]", ",", "\n", "[", "1", ",", "0.64394", ",", "0.074554", "]", ",", "\n", "[", "1", ",", "0.63832", ",", "0.071927", "]", ",", "\n", "[", "1", ",", "0.63268", ",", "0.069347", "]", ",", "\n", "[", "1", ",", "0.62702", ",", "0.066593", "]", ",", "\n", "[", "1", ",", "0.62135", ",", "0.063895", "]", ",", "\n", "[", "1", ",", "0.61565", ",", "0.061104", "]", ",", "\n", "[", "1", ",", "0.60993", ",", "0.058355", "]", ",", "\n", "[", "1", ",", "0.6042", ",", "0.055584", "]", ",", "\n", "[", "1", ",", "0.59843", ",", "0.052708", "]", ",", "\n", "[", "1", ",", "0.59265", ",", "0.049893", "]", ",", "\n", "[", "1", ",", "0.58684", ",", "0.046988", "]", ",", "\n", "[", "1", ",", "0.58101", ",", "0.043966", "]", ",", "\n", "[", "1", ",", "0.57515", ",", "0.041014", "]", ",", "\n", "[", "1", ",", "0.56926", ",", "0.037943", "]", ",", "\n", "[", "1", ",", "0.56336", ",", "0.034887", "]", ",", "\n", "[", "1", ",", "0.55742", ",", "0.031822", "]", ",", "\n", "[", "1", ",", "0.55145", ",", "0.028972", "]", ",", "\n", "[", "1", ",", "0.54546", ",", "0.026194", "]", ",", "\n", "[", "1", ",", "0.53942", ",", "0.023487", "]", ",", "\n", "[", "1", ",", "0.53336", ",", "0.020851", "]", ",", "\n", "[", "1", ",", "0.52727", ",", "0.018287", "]", ",", "\n", "[", "1", ",", "0.52114", ",", "0.015792", "]", ",", "\n", "[", "1", ",", "0.51497", ",", "0.013362", "]", ",", "\n", "[", "1", ",", "0.50878", ",", "0.010828", "]", ",", "\n", "[", "1", ",", "0.50252", ",", "0.0085264", "]", ",", "\n", "[", "1", ",", "0.49623", ",", "0.0063082", "]", ",", "\n", "[", "1", ",", "0.48991", ",", "0.0041556", "]", ",", "\n", "[", "1", ",", "0.48353", ",", "0.0020694", "]", ",", "\n", "[", "1", ",", "0.47711", ",", "4.915e-05", "]", ",", "\n", "[", "1", ",", "0.47065", ",", "0", "]", ",", "\n", "[", "1", ",", "0.46413", ",", "0", "]", ",", "\n", "[", "1", ",", "0.45754", ",", "0", "]", ",", "\n", "[", "1", ",", "0.45092", ",", "0", "]", ",", "\n", "[", "1", ",", "0.44423", ",", "0", "]", ",", "\n", "[", "1", ",", "0.43748", ",", "0", "]", ",", "\n", "[", "1", ",", "0.43065", ",", "0", "]", ",", "\n", "[", "1", ",", "0.42375", ",", "0", "]", ",", "\n", "[", "1", ",", "0.4168", ",", "0", "]", ",", "\n", "[", "1", ",", "0.40976", ",", "0", "]", ",", "\n", "[", "1", ",", "0.40263", ",", "0", "]", ",", "\n", "[", "1", ",", "0.39544", ",", "0", "]", ",", "\n", "[", "1", ",", "0.38813", ",", "0", "]", ",", "\n", "[", "1", ",", "0.38075", ",", "0", "]", ",", "\n", "[", "1", ",", "0.37324", ",", "0", "]", ",", "\n", "[", "1", ",", "0.36564", ",", "0", "]", ",", "\n", "[", "1", ",", "0.35792", ",", "0", "]", ",", "\n", "[", "1", ",", "0.35006", ",", "0", "]", ",", "\n", "[", "1", ",", "0.34208", ",", "0", "]", ",", "\n", "[", "1", ",", "0.33395", ",", "0", "]", ",", "\n", "[", "1", ",", "0.32564", ",", "0", "]", ",", "\n", "[", "1", ",", "0.31719", ",", "0", "]", ",", "\n", "[", "1", ",", "0.30856", ",", "0", "]", ",", "\n", "[", "1", ",", "0.29971", ",", "0", "]", ",", "\n", "[", "1", ",", "0.29063", ",", "0", "]", ",", "\n", "[", "1", ",", "0.28132", ",", "0", "]", ",", "\n", "[", "1", ",", "0.27173", ",", "0", "]", ",", "\n", "[", "1", ",", "0.26187", ",", "0", "]", ",", "\n", "[", "1", ",", "0.25167", ",", "0", "]", ",", "\n", "[", "1", ",", "0.24106", ",", "0", "]", ",", "\n", "[", "1", ",", "0.23001", ",", "0", "]", ",", "\n", "[", "1", ",", "0.21851", ",", "0", "]", ",", "\n", "[", "1", ",", "0.20642", ",", "0", "]", ",", "\n", "[", "1", ",", "0.19361", ",", "0", "]", ",", "\n", "[", "1", ",", "0.17996", ",", "0", "]", ",", "\n", "[", "1", ",", "0.16528", ",", "0", "]", ",", "\n", "]", "\n", "return", "_cmap", "(", "\"linear_rainbow\"", ",", "cm_data", ",", "reverse", "=", "reverse", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_linear_fire": [[4973, 5235], ["plt._cmap"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt._cmap"], ["", "def", "cmap_linear_fire", "(", "reverse", "=", "False", ")", ":", "\n", "# https://github.com/pyviz/colorcet", "\n", "# linear colormap, perceptually uniform", "\n", "    ", "cm_data", "=", "[", "\n", "[", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "0.027065", ",", "2.143e-05", ",", "0", "]", ",", "\n", "[", "0.052054", ",", "7.4728e-05", ",", "0", "]", ",", "\n", "[", "0.071511", ",", "0.00013914", ",", "0", "]", ",", "\n", "[", "0.08742", ",", "0.0002088", ",", "0", "]", ",", "\n", "[", "0.10109", ",", "0.00028141", ",", "0", "]", ",", "\n", "[", "0.11337", ",", "0.000356", ",", "2.4266e-17", "]", ",", "\n", "[", "0.12439", ",", "0.00043134", ",", "3.3615e-17", "]", ",", "\n", "[", "0.13463", ",", "0.00050796", ",", "2.1604e-17", "]", ",", "\n", "[", "0.14411", ",", "0.0005856", ",", "0", "]", ",", "\n", "[", "0.15292", ",", "0.00070304", ",", "0", "]", ",", "\n", "[", "0.16073", ",", "0.0013432", ",", "0", "]", ",", "\n", "[", "0.16871", ",", "0.0014516", ",", "0", "]", ",", "\n", "[", "0.17657", ",", "0.0012408", ",", "0", "]", ",", "\n", "[", "0.18364", ",", "0.0015336", ",", "0", "]", ",", "\n", "[", "0.19052", ",", "0.0017515", ",", "0", "]", ",", "\n", "[", "0.19751", ",", "0.0015146", ",", "0", "]", ",", "\n", "[", "0.20401", ",", "0.0015249", ",", "0", "]", ",", "\n", "[", "0.20994", ",", "0.0019639", ",", "0", "]", ",", "\n", "[", "0.21605", ",", "0.002031", ",", "0", "]", ",", "\n", "[", "0.22215", ",", "0.0017559", ",", "0", "]", ",", "\n", "[", "0.22808", ",", "0.001546", ",", "1.8755e-05", "]", ",", "\n", "[", "0.23378", ",", "0.0016315", ",", "3.5012e-05", "]", ",", "\n", "[", "0.23955", ",", "0.0017194", ",", "3.3352e-05", "]", ",", "\n", "[", "0.24531", ",", "0.0018097", ",", "1.8559e-05", "]", ",", "\n", "[", "0.25113", ",", "0.0019038", ",", "1.9139e-05", "]", ",", "\n", "[", "0.25694", ",", "0.0020015", ",", "3.5308e-05", "]", ",", "\n", "[", "0.26278", ",", "0.0021017", ",", "3.2613e-05", "]", ",", "\n", "[", "0.26864", ",", "0.0022048", ",", "2.0338e-05", "]", ",", "\n", "[", "0.27451", ",", "0.0023119", ",", "2.2453e-05", "]", ",", "\n", "[", "0.28041", ",", "0.0024227", ",", "3.6003e-05", "]", ",", "\n", "[", "0.28633", ",", "0.0025363", ",", "2.9817e-05", "]", ",", "\n", "[", "0.29229", ",", "0.0026532", ",", "1.9559e-05", "]", ",", "\n", "[", "0.29824", ",", "0.0027747", ",", "2.7666e-05", "]", ",", "\n", "[", "0.30423", ",", "0.0028999", ",", "3.5752e-05", "]", ",", "\n", "[", "0.31026", ",", "0.0030279", ",", "2.3231e-05", "]", ",", "\n", "[", "0.31628", ",", "0.0031599", ",", "1.2902e-05", "]", ",", "\n", "[", "0.32232", ",", "0.0032974", ",", "3.2915e-05", "]", ",", "\n", "[", "0.32838", ",", "0.0034379", ",", "3.2803e-05", "]", ",", "\n", "[", "0.33447", ",", "0.0035819", ",", "2.0757e-05", "]", ",", "\n", "[", "0.34057", ",", "0.003731", ",", "2.3831e-05", "]", ",", "\n", "[", "0.34668", ",", "0.0038848", ",", "3.502e-05", "]", ",", "\n", "[", "0.35283", ",", "0.0040418", ",", "2.4468e-05", "]", ",", "\n", "[", "0.35897", ",", "0.0042032", ",", "1.1444e-05", "]", ",", "\n", "[", "0.36515", ",", "0.0043708", ",", "3.2793e-05", "]", ",", "\n", "[", "0.37134", ",", "0.0045418", ",", "3.012e-05", "]", ",", "\n", "[", "0.37756", ",", "0.0047169", ",", "1.4846e-05", "]", ",", "\n", "[", "0.38379", ",", "0.0048986", ",", "2.796e-05", "]", ",", "\n", "[", "0.39003", ",", "0.0050848", ",", "3.2782e-05", "]", ",", "\n", "[", "0.3963", ",", "0.0052751", ",", "1.9244e-05", "]", ",", "\n", "[", "0.40258", ",", "0.0054715", ",", "2.2667e-05", "]", ",", "\n", "[", "0.40888", ",", "0.0056736", ",", "3.3223e-05", "]", ",", "\n", "[", "0.41519", ",", "0.0058798", ",", "2.159e-05", "]", ",", "\n", "[", "0.42152", ",", "0.0060922", ",", "1.8214e-05", "]", ",", "\n", "[", "0.42788", ",", "0.0063116", ",", "3.2525e-05", "]", ",", "\n", "[", "0.43424", ",", "0.0065353", ",", "2.2247e-05", "]", ",", "\n", "[", "0.44062", ",", "0.006765", ",", "1.5852e-05", "]", ",", "\n", "[", "0.44702", ",", "0.0070024", ",", "3.1769e-05", "]", ",", "\n", "[", "0.45344", ",", "0.0072442", ",", "2.1245e-05", "]", ",", "\n", "[", "0.45987", ",", "0.0074929", ",", "1.5726e-05", "]", ",", "\n", "[", "0.46631", ",", "0.0077499", ",", "3.0976e-05", "]", ",", "\n", "[", "0.47277", ",", "0.0080108", ",", "1.8722e-05", "]", ",", "\n", "[", "0.47926", ",", "0.0082789", ",", "1.9285e-05", "]", ",", "\n", "[", "0.48574", ",", "0.0085553", ",", "3.0063e-05", "]", ",", "\n", "[", "0.49225", ",", "0.0088392", ",", "1.4313e-05", "]", ",", "\n", "[", "0.49878", ",", "0.0091356", ",", "2.3404e-05", "]", ",", "\n", "[", "0.50531", ",", "0.0094374", ",", "2.8099e-05", "]", ",", "\n", "[", "0.51187", ",", "0.0097365", ",", "6.4695e-06", "]", ",", "\n", "[", "0.51844", ",", "0.010039", ",", "2.5791e-05", "]", ",", "\n", "[", "0.52501", ",", "0.010354", ",", "2.4393e-05", "]", ",", "\n", "[", "0.53162", ",", "0.010689", ",", "1.6037e-05", "]", ",", "\n", "[", "0.53825", ",", "0.011031", ",", "2.7295e-05", "]", ",", "\n", "[", "0.54489", ",", "0.011393", ",", "1.5848e-05", "]", ",", "\n", "[", "0.55154", ",", "0.011789", ",", "2.3111e-05", "]", ",", "\n", "[", "0.55818", ",", "0.012159", ",", "2.5416e-05", "]", ",", "\n", "[", "0.56485", ",", "0.012508", ",", "1.5064e-05", "]", ",", "\n", "[", "0.57154", ",", "0.012881", ",", "2.541e-05", "]", ",", "\n", "[", "0.57823", ",", "0.013283", ",", "1.6166e-05", "]", ",", "\n", "[", "0.58494", ",", "0.013701", ",", "2.263e-05", "]", ",", "\n", "[", "0.59166", ",", "0.014122", ",", "2.3316e-05", "]", ",", "\n", "[", "0.59839", ",", "0.014551", ",", "1.9432e-05", "]", ",", "\n", "[", "0.60514", ",", "0.014994", ",", "2.4323e-05", "]", ",", "\n", "[", "0.6119", ",", "0.01545", ",", "1.3929e-05", "]", ",", "\n", "[", "0.61868", ",", "0.01592", ",", "2.1615e-05", "]", ",", "\n", "[", "0.62546", ",", "0.016401", ",", "1.5846e-05", "]", ",", "\n", "[", "0.63226", ",", "0.016897", ",", "2.0838e-05", "]", ",", "\n", "[", "0.63907", ",", "0.017407", ",", "1.9549e-05", "]", ",", "\n", "[", "0.64589", ",", "0.017931", ",", "2.0961e-05", "]", ",", "\n", "[", "0.65273", ",", "0.018471", ",", "2.0737e-05", "]", ",", "\n", "[", "0.65958", ",", "0.019026", ",", "2.0621e-05", "]", ",", "\n", "[", "0.66644", ",", "0.019598", ",", "2.0675e-05", "]", ",", "\n", "[", "0.67332", ",", "0.020187", ",", "2.0301e-05", "]", ",", "\n", "[", "0.68019", ",", "0.020793", ",", "2.0029e-05", "]", ",", "\n", "[", "0.68709", ",", "0.021418", ",", "2.0088e-05", "]", ",", "\n", "[", "0.69399", ",", "0.022062", ",", "1.9102e-05", "]", ",", "\n", "[", "0.70092", ",", "0.022727", ",", "1.9662e-05", "]", ",", "\n", "[", "0.70784", ",", "0.023412", ",", "1.7757e-05", "]", ",", "\n", "[", "0.71478", ",", "0.024121", ",", "1.8236e-05", "]", ",", "\n", "[", "0.72173", ",", "0.024852", ",", "1.4944e-05", "]", ",", "\n", "[", "0.7287", ",", "0.025608", ",", "2.0245e-06", "]", ",", "\n", "[", "0.73567", ",", "0.02639", ",", "1.5013e-07", "]", ",", "\n", "[", "0.74266", ",", "0.027199", ",", "0", "]", ",", "\n", "[", "0.74964", ",", "0.028038", ",", "0", "]", ",", "\n", "[", "0.75665", ",", "0.028906", ",", "0", "]", ",", "\n", "[", "0.76365", ",", "0.029806", ",", "0", "]", ",", "\n", "[", "0.77068", ",", "0.030743", ",", "0", "]", ",", "\n", "[", "0.77771", ",", "0.031711", ",", "0", "]", ",", "\n", "[", "0.78474", ",", "0.032732", ",", "0", "]", ",", "\n", "[", "0.79179", ",", "0.033741", ",", "0", "]", ",", "\n", "[", "0.79886", ",", "0.034936", ",", "0", "]", ",", "\n", "[", "0.80593", ",", "0.036031", ",", "0", "]", ",", "\n", "[", "0.81299", ",", "0.03723", ",", "0", "]", ",", "\n", "[", "0.82007", ",", "0.038493", ",", "0", "]", ",", "\n", "[", "0.82715", ",", "0.039819", ",", "0", "]", ",", "\n", "[", "0.83423", ",", "0.041236", ",", "0", "]", ",", "\n", "[", "0.84131", ",", "0.042647", ",", "0", "]", ",", "\n", "[", "0.84838", ",", "0.044235", ",", "0", "]", ",", "\n", "[", "0.85545", ",", "0.045857", ",", "0", "]", ",", "\n", "[", "0.86252", ",", "0.047645", ",", "0", "]", ",", "\n", "[", "0.86958", ",", "0.049578", ",", "0", "]", ",", "\n", "[", "0.87661", ",", "0.051541", ",", "0", "]", ",", "\n", "[", "0.88365", ",", "0.053735", ",", "0", "]", ",", "\n", "[", "0.89064", ",", "0.056168", ",", "0", "]", ",", "\n", "[", "0.89761", ",", "0.058852", ",", "0", "]", ",", "\n", "[", "0.90451", ",", "0.061777", ",", "0", "]", ",", "\n", "[", "0.91131", ",", "0.065281", ",", "0", "]", ",", "\n", "[", "0.91796", ",", "0.069448", ",", "0", "]", ",", "\n", "[", "0.92445", ",", "0.074684", ",", "0", "]", ",", "\n", "[", "0.93061", ",", "0.08131", ",", "0", "]", ",", "\n", "[", "0.93648", ",", "0.088878", ",", "0", "]", ",", "\n", "[", "0.94205", ",", "0.097336", ",", "0", "]", ",", "\n", "[", "0.9473", ",", "0.10665", ",", "0", "]", ",", "\n", "[", "0.9522", ",", "0.1166", ",", "0", "]", ",", "\n", "[", "0.95674", ",", "0.12716", ",", "0", "]", ",", "\n", "[", "0.96094", ",", "0.13824", ",", "0", "]", ",", "\n", "[", "0.96479", ",", "0.14963", ",", "0", "]", ",", "\n", "[", "0.96829", ",", "0.16128", ",", "0", "]", ",", "\n", "[", "0.97147", ",", "0.17303", ",", "0", "]", ",", "\n", "[", "0.97436", ",", "0.18489", ",", "0", "]", ",", "\n", "[", "0.97698", ",", "0.19672", ",", "0", "]", ",", "\n", "[", "0.97934", ",", "0.20846", ",", "0", "]", ",", "\n", "[", "0.98148", ",", "0.22013", ",", "0", "]", ",", "\n", "[", "0.9834", ",", "0.23167", ",", "0", "]", ",", "\n", "[", "0.98515", ",", "0.24301", ",", "0", "]", ",", "\n", "[", "0.98672", ",", "0.25425", ",", "0", "]", ",", "\n", "[", "0.98815", ",", "0.26525", ",", "0", "]", ",", "\n", "[", "0.98944", ",", "0.27614", ",", "0", "]", ",", "\n", "[", "0.99061", ",", "0.28679", ",", "0", "]", ",", "\n", "[", "0.99167", ",", "0.29731", ",", "0", "]", ",", "\n", "[", "0.99263", ",", "0.30764", ",", "0", "]", ",", "\n", "[", "0.9935", ",", "0.31781", ",", "0", "]", ",", "\n", "[", "0.99428", ",", "0.3278", ",", "0", "]", ",", "\n", "[", "0.995", ",", "0.33764", ",", "0", "]", ",", "\n", "[", "0.99564", ",", "0.34735", ",", "0", "]", ",", "\n", "[", "0.99623", ",", "0.35689", ",", "0", "]", ",", "\n", "[", "0.99675", ",", "0.3663", ",", "0", "]", ",", "\n", "[", "0.99722", ",", "0.37556", ",", "0", "]", ",", "\n", "[", "0.99765", ",", "0.38471", ",", "0", "]", ",", "\n", "[", "0.99803", ",", "0.39374", ",", "0", "]", ",", "\n", "[", "0.99836", ",", "0.40265", ",", "0", "]", ",", "\n", "[", "0.99866", ",", "0.41145", ",", "0", "]", ",", "\n", "[", "0.99892", ",", "0.42015", ",", "0", "]", ",", "\n", "[", "0.99915", ",", "0.42874", ",", "0", "]", ",", "\n", "[", "0.99935", ",", "0.43724", ",", "0", "]", ",", "\n", "[", "0.99952", ",", "0.44563", ",", "0", "]", ",", "\n", "[", "0.99966", ",", "0.45395", ",", "0", "]", ",", "\n", "[", "0.99977", ",", "0.46217", ",", "0", "]", ",", "\n", "[", "0.99986", ",", "0.47032", ",", "0", "]", ",", "\n", "[", "0.99993", ",", "0.47838", ",", "0", "]", ",", "\n", "[", "0.99997", ",", "0.48638", ",", "0", "]", ",", "\n", "[", "1", ",", "0.4943", ",", "0", "]", ",", "\n", "[", "1", ",", "0.50214", ",", "0", "]", ",", "\n", "[", "1", ",", "0.50991", ",", "1.2756e-05", "]", ",", "\n", "[", "1", ",", "0.51761", ",", "4.5388e-05", "]", ",", "\n", "[", "1", ",", "0.52523", ",", "9.6977e-05", "]", ",", "\n", "[", "1", ",", "0.5328", ",", "0.00016858", "]", ",", "\n", "[", "1", ",", "0.54028", ",", "0.0002582", "]", ",", "\n", "[", "1", ",", "0.54771", ",", "0.00036528", "]", ",", "\n", "[", "1", ",", "0.55508", ",", "0.00049276", "]", ",", "\n", "[", "1", ",", "0.5624", ",", "0.00063955", "]", ",", "\n", "[", "1", ",", "0.56965", ",", "0.00080443", "]", ",", "\n", "[", "1", ",", "0.57687", ",", "0.00098902", "]", ",", "\n", "[", "1", ",", "0.58402", ",", "0.0011943", "]", ",", "\n", "[", "1", ",", "0.59113", ",", "0.0014189", "]", ",", "\n", "[", "1", ",", "0.59819", ",", "0.0016626", "]", ",", "\n", "[", "1", ",", "0.60521", ",", "0.0019281", "]", ",", "\n", "[", "1", ",", "0.61219", ",", "0.0022145", "]", ",", "\n", "[", "1", ",", "0.61914", ",", "0.0025213", "]", ",", "\n", "[", "1", ",", "0.62603", ",", "0.0028496", "]", ",", "\n", "[", "1", ",", "0.6329", ",", "0.0032006", "]", ",", "\n", "[", "1", ",", "0.63972", ",", "0.0035741", "]", ",", "\n", "[", "1", ",", "0.64651", ",", "0.0039701", "]", ",", "\n", "[", "1", ",", "0.65327", ",", "0.0043898", "]", ",", "\n", "[", "1", ",", "0.66", ",", "0.0048341", "]", ",", "\n", "[", "1", ",", "0.66669", ",", "0.005303", "]", ",", "\n", "[", "1", ",", "0.67336", ",", "0.0057969", "]", ",", "\n", "[", "1", ",", "0.67999", ",", "0.006317", "]", ",", "\n", "[", "1", ",", "0.68661", ",", "0.0068648", "]", ",", "\n", "[", "1", ",", "0.69319", ",", "0.0074406", "]", ",", "\n", "[", "1", ",", "0.69974", ",", "0.0080433", "]", ",", "\n", "[", "1", ",", "0.70628", ",", "0.0086756", "]", ",", "\n", "[", "1", ",", "0.71278", ",", "0.0093486", "]", ",", "\n", "[", "1", ",", "0.71927", ",", "0.010023", "]", ",", "\n", "[", "1", ",", "0.72573", ",", "0.010724", "]", ",", "\n", "[", "1", ",", "0.73217", ",", "0.011565", "]", ",", "\n", "[", "1", ",", "0.73859", ",", "0.012339", "]", ",", "\n", "[", "1", ",", "0.74499", ",", "0.01316", "]", ",", "\n", "[", "1", ",", "0.75137", ",", "0.014042", "]", ",", "\n", "[", "1", ",", "0.75772", ",", "0.014955", "]", ",", "\n", "[", "1", ",", "0.76406", ",", "0.015913", "]", ",", "\n", "[", "1", ",", "0.77039", ",", "0.016915", "]", ",", "\n", "[", "1", ",", "0.77669", ",", "0.017964", "]", ",", "\n", "[", "1", ",", "0.78298", ",", "0.019062", "]", ",", "\n", "[", "1", ",", "0.78925", ",", "0.020212", "]", ",", "\n", "[", "1", ",", "0.7955", ",", "0.021417", "]", ",", "\n", "[", "1", ",", "0.80174", ",", "0.02268", "]", ",", "\n", "[", "1", ",", "0.80797", ",", "0.024005", "]", ",", "\n", "[", "1", ",", "0.81418", ",", "0.025396", "]", ",", "\n", "[", "1", ",", "0.82038", ",", "0.026858", "]", ",", "\n", "[", "1", ",", "0.82656", ",", "0.028394", "]", ",", "\n", "[", "1", ",", "0.83273", ",", "0.030013", "]", ",", "\n", "[", "1", ",", "0.83889", ",", "0.031717", "]", ",", "\n", "[", "1", ",", "0.84503", ",", "0.03348", "]", ",", "\n", "[", "1", ",", "0.85116", ",", "0.035488", "]", ",", "\n", "[", "1", ",", "0.85728", ",", "0.037452", "]", ",", "\n", "[", "1", ",", "0.8634", ",", "0.039592", "]", ",", "\n", "[", "1", ",", "0.86949", ",", "0.041898", "]", ",", "\n", "[", "1", ",", "0.87557", ",", "0.044392", "]", ",", "\n", "[", "1", ",", "0.88165", ",", "0.046958", "]", ",", "\n", "[", "1", ",", "0.88771", ",", "0.04977", "]", ",", "\n", "[", "1", ",", "0.89376", ",", "0.052828", "]", ",", "\n", "[", "1", ",", "0.8998", ",", "0.056209", "]", ",", "\n", "[", "1", ",", "0.90584", ",", "0.059919", "]", ",", "\n", "[", "1", ",", "0.91185", ",", "0.063925", "]", ",", "\n", "[", "1", ",", "0.91783", ",", "0.068579", "]", ",", "\n", "[", "1", ",", "0.92384", ",", "0.073948", "]", ",", "\n", "[", "1", ",", "0.92981", ",", "0.080899", "]", ",", "\n", "[", "1", ",", "0.93576", ",", "0.090648", "]", ",", "\n", "[", "1", ",", "0.94166", ",", "0.10377", "]", ",", "\n", "[", "1", ",", "0.94752", ",", "0.12051", "]", ",", "\n", "[", "1", ",", "0.9533", ",", "0.14149", "]", ",", "\n", "[", "1", ",", "0.959", ",", "0.1672", "]", ",", "\n", "[", "1", ",", "0.96456", ",", "0.19823", "]", ",", "\n", "[", "1", ",", "0.96995", ",", "0.23514", "]", ",", "\n", "[", "1", ",", "0.9751", ",", "0.2786", "]", ",", "\n", "[", "1", ",", "0.97992", ",", "0.32883", "]", ",", "\n", "[", "1", ",", "0.98432", ",", "0.38571", "]", ",", "\n", "[", "1", ",", "0.9882", ",", "0.44866", "]", ",", "\n", "[", "1", ",", "0.9915", ",", "0.51653", "]", ",", "\n", "[", "1", ",", "0.99417", ",", "0.58754", "]", ",", "\n", "[", "1", ",", "0.99625", ",", "0.65985", "]", ",", "\n", "[", "1", ",", "0.99778", ",", "0.73194", "]", ",", "\n", "[", "1", ",", "0.99885", ",", "0.80259", "]", ",", "\n", "[", "1", ",", "0.99953", ",", "0.87115", "]", ",", "\n", "[", "1", ",", "0.99989", ",", "0.93683", "]", ",", "\n", "[", "1", ",", "1", ",", "1", "]", ",", "\n", "]", "\n", "return", "_cmap", "(", "\"linear_fire\"", ",", "cm_data", ",", "reverse", "=", "reverse", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_linear_turbo_register": [[5237, 5240], ["matplotlib.register_cmap", "matplotlib.register_cmap", "plt.cmap_linear_turbo", "plt.cmap_linear_turbo"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_linear_turbo", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_linear_turbo"], ["", "def", "cmap_linear_turbo_register", "(", ")", ":", "\n", "    ", "plt", ".", "register_cmap", "(", "name", "=", "\"turbo\"", ",", "cmap", "=", "cmap_linear_turbo", "(", "False", ")", ")", "\n", "plt", ".", "register_cmap", "(", "name", "=", "\"turbo_r\"", ",", "cmap", "=", "cmap_linear_turbo", "(", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_linear_parula_register": [[5242, 5245], ["matplotlib.register_cmap", "matplotlib.register_cmap", "plt.cmap_linear_parula", "plt.cmap_linear_parula"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_linear_parula", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_linear_parula"], ["", "def", "cmap_linear_parula_register", "(", ")", ":", "\n", "    ", "plt", ".", "register_cmap", "(", "name", "=", "\"parula\"", ",", "cmap", "=", "cmap_linear_parula", "(", "False", ")", ")", "\n", "plt", ".", "register_cmap", "(", "name", "=", "\"parula_r\"", ",", "cmap", "=", "cmap_linear_parula", "(", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_linear_haline_register": [[5247, 5250], ["matplotlib.register_cmap", "matplotlib.register_cmap", "plt.cmap_linear_haline", "plt.cmap_linear_haline"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_linear_haline", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_linear_haline"], ["", "def", "cmap_linear_haline_register", "(", ")", ":", "\n", "    ", "plt", ".", "register_cmap", "(", "name", "=", "\"haline\"", ",", "cmap", "=", "cmap_linear_haline", "(", "False", ")", ")", "\n", "plt", ".", "register_cmap", "(", "name", "=", "\"haline_r\"", ",", "cmap", "=", "cmap_linear_haline", "(", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_linear_thermal_register": [[5252, 5255], ["matplotlib.register_cmap", "matplotlib.register_cmap", "plt.cmap_linear_thermal", "plt.cmap_linear_thermal"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_linear_thermal", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_linear_thermal"], ["", "def", "cmap_linear_thermal_register", "(", ")", ":", "\n", "    ", "plt", ".", "register_cmap", "(", "name", "=", "\"thermal\"", ",", "cmap", "=", "cmap_linear_thermal", "(", "False", ")", ")", "\n", "plt", ".", "register_cmap", "(", "name", "=", "\"thermal_r\"", ",", "cmap", "=", "cmap_linear_thermal", "(", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_linear_deep_register": [[5257, 5260], ["matplotlib.register_cmap", "matplotlib.register_cmap", "plt.cmap_linear_deep", "plt.cmap_linear_deep"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_linear_deep", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_linear_deep"], ["", "def", "cmap_linear_deep_register", "(", ")", ":", "\n", "    ", "plt", ".", "register_cmap", "(", "name", "=", "\"deep\"", ",", "cmap", "=", "cmap_linear_deep", "(", "False", ")", ")", "\n", "plt", ".", "register_cmap", "(", "name", "=", "\"deep_r\"", ",", "cmap", "=", "cmap_linear_deep", "(", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_linear_bgyw_register": [[5262, 5265], ["matplotlib.register_cmap", "matplotlib.register_cmap", "plt.cmap_linear_bgyw", "plt.cmap_linear_bgyw"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_linear_bgyw", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_linear_bgyw"], ["", "def", "cmap_linear_bgyw_register", "(", ")", ":", "\n", "    ", "plt", ".", "register_cmap", "(", "name", "=", "\"bgyw\"", ",", "cmap", "=", "cmap_linear_bgyw", "(", "False", ")", ")", "\n", "plt", ".", "register_cmap", "(", "name", "=", "\"bgyw_r\"", ",", "cmap", "=", "cmap_linear_bgyw", "(", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_linear_bgy_register": [[5267, 5270], ["matplotlib.register_cmap", "matplotlib.register_cmap", "plt.cmap_linear_bgy", "plt.cmap_linear_bgy"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_linear_bgy", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_linear_bgy"], ["", "def", "cmap_linear_bgy_register", "(", ")", ":", "\n", "    ", "plt", ".", "register_cmap", "(", "name", "=", "\"bgy\"", ",", "cmap", "=", "cmap_linear_bgy", "(", "False", ")", ")", "\n", "plt", ".", "register_cmap", "(", "name", "=", "\"bgy_r\"", ",", "cmap", "=", "cmap_linear_bgy", "(", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_linear_rainbow_register": [[5272, 5275], ["matplotlib.register_cmap", "matplotlib.register_cmap", "plt.cmap_linear_rainbow", "plt.cmap_linear_rainbow"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_linear_rainbow", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_linear_rainbow"], ["", "def", "cmap_linear_rainbow_register", "(", ")", ":", "\n", "    ", "plt", ".", "register_cmap", "(", "name", "=", "\"rainbow\"", ",", "cmap", "=", "cmap_linear_rainbow", "(", "False", ")", ")", "\n", "plt", ".", "register_cmap", "(", "name", "=", "\"rainbow_r\"", ",", "cmap", "=", "cmap_linear_rainbow", "(", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_linear_fire_register": [[5277, 5280], ["matplotlib.register_cmap", "matplotlib.register_cmap", "plt.cmap_linear_fire", "plt.cmap_linear_fire"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_linear_fire", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_linear_fire"], ["", "def", "cmap_linear_fire_register", "(", ")", ":", "\n", "    ", "plt", ".", "register_cmap", "(", "name", "=", "\"fire\"", ",", "cmap", "=", "cmap_linear_fire", "(", "False", ")", ")", "\n", "plt", ".", "register_cmap", "(", "name", "=", "\"fire_r\"", ",", "cmap", "=", "cmap_linear_fire", "(", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_cyclic_phase_register": [[5282, 5285], ["matplotlib.register_cmap", "matplotlib.register_cmap", "plt.cmap_cyclic_phase", "plt.cmap_cyclic_phase"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_cyclic_phase", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_cyclic_phase"], ["", "def", "cmap_cyclic_phase_register", "(", ")", ":", "\n", "    ", "plt", ".", "register_cmap", "(", "name", "=", "\"phase\"", ",", "cmap", "=", "cmap_cyclic_phase", "(", "False", ")", ")", "\n", "plt", ".", "register_cmap", "(", "name", "=", "\"phase_r\"", ",", "cmap", "=", "cmap_cyclic_phase", "(", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_diverging_curl_register": [[5287, 5290], ["matplotlib.register_cmap", "matplotlib.register_cmap", "plt.cmap_diverging_curl", "plt.cmap_diverging_curl"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_diverging_curl", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.cmap_diverging_curl"], ["", "def", "cmap_diverging_curl_register", "(", ")", ":", "\n", "    ", "plt", ".", "register_cmap", "(", "name", "=", "\"curl\"", ",", "cmap", "=", "cmap_diverging_curl", "(", "False", ")", ")", "\n", "plt", ".", "register_cmap", "(", "name", "=", "\"curl_r\"", ",", "cmap", "=", "cmap_diverging_curl", "(", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sqlite.LoggerField.__init__": [[5, 9], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "name", ",", "type", ",", "fcn", ")", ":", "\n", "        ", "self", ".", "name", "=", "name", "\n", "self", ".", "type", "=", "type", "\n", "self", ".", "fcn", "=", "fcn", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sqlite.StrField.__init__": [[16, 18], ["sqlite.LoggerField.__init__"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.TrackCreator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "name", ")", ":", "\n", "        ", "super", "(", "StrField", ",", "self", ")", ".", "__init__", "(", "name", "=", "name", ",", "type", "=", "\"TEXT\"", ",", "fcn", "=", "str_field_fcn", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sqlite.IntField.__init__": [[21, 23], ["sqlite.LoggerField.__init__"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.TrackCreator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "name", ")", ":", "\n", "        ", "super", "(", "IntField", ",", "self", ")", ".", "__init__", "(", "name", "=", "name", ",", "type", "=", "\"INTEGER\"", ",", "fcn", "=", "str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sqlite.FloatField.__init__": [[26, 28], ["sqlite.LoggerField.__init__"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.TrackCreator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "name", ")", ":", "\n", "        ", "super", "(", "FloatField", ",", "self", ")", ".", "__init__", "(", "name", "=", "name", ",", "type", "=", "\"FLOAT\"", ",", "fcn", "=", "str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sqlite.Constraint.__init__": [[31, 34], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "field_names", ",", "type", "=", "\"unq\"", ")", ":", "\n", "        ", "self", ".", "field_names", "=", "field_names", "\n", "self", ".", "type", "=", "type", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sqlite.Constraint.create_statement": [[35, 41], ["stmt.append", "stmt.append", "stmt.append"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append"], ["", "def", "create_statement", "(", "self", ",", "name", ")", ":", "\n", "        ", "stmt", "=", "[", "]", "\n", "stmt", ".", "append", "(", "\"CREATE UNIQUE INDEX IF NOT EXISTS %s ON %s (\"", "%", "(", "self", ".", "type", ",", "name", ")", ")", "\n", "stmt", ".", "append", "(", "\", \"", ".", "join", "(", "self", ".", "field_names", ")", ")", "\n", "stmt", ".", "append", "(", "\")\"", ")", "\n", "return", "\" \"", ".", "join", "(", "stmt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sqlite.Table.__init__": [[44, 48], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "name", ",", "fields", "=", "None", ",", "constraints", "=", "None", ")", ":", "\n", "        ", "self", ".", "name", "=", "name", "\n", "self", ".", "fields", "=", "fields", "\n", "self", ".", "constraints", "=", "constraints", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sqlite.Table.create": [[49, 63], ["conn.cursor", "stmt.append", "stmt.append", "stmt.append", "conn.cursor.execute", "stmt_fields.append", "conn.cursor.execute", "constraint.create_statement"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sqlite.Constraint.create_statement"], ["", "def", "create", "(", "self", ",", "conn", ")", ":", "\n", "        ", "cursor", "=", "conn", ".", "cursor", "(", ")", "\n", "\n", "stmt", "=", "[", "]", "\n", "stmt", ".", "append", "(", "\"CREATE TABLE IF NOT EXISTS %s (\"", "%", "self", ".", "name", ")", "\n", "stmt_fields", "=", "[", "\"timestamp DATETIME DEFAULT CURRENT_TIMESTAMP\"", "]", "\n", "for", "field", "in", "self", ".", "fields", ":", "\n", "            ", "stmt_fields", ".", "append", "(", "\"%s %s NOT NULL\"", "%", "(", "field", ".", "name", ",", "field", ".", "type", ")", ")", "\n", "", "stmt", ".", "append", "(", "\", \"", ".", "join", "(", "stmt_fields", ")", ")", "\n", "stmt", ".", "append", "(", "\")\"", ")", "\n", "cursor", ".", "execute", "(", "\" \"", ".", "join", "(", "stmt", ")", ")", "\n", "\n", "for", "constraint", "in", "self", ".", "constraints", ":", "\n", "            ", "cursor", ".", "execute", "(", "constraint", ".", "create_statement", "(", "self", ".", "name", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sqlite.Table.insert": [[64, 73], ["stmt.append", "stmt.append", "stmt.append", "stmt.append", "stmt.append", "conn.cursor", "conn.cursor.execute", "field.fcn"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append"], ["", "", "def", "insert", "(", "self", ",", "conn", ",", "**", "kwargs", ")", ":", "\n", "        ", "stmt", "=", "[", "]", "\n", "stmt", ".", "append", "(", "\"INSERT OR REPLACE INTO %s (\"", "%", "self", ".", "name", ")", "\n", "stmt", ".", "append", "(", "\", \"", ".", "join", "(", "[", "field", ".", "name", "for", "field", "in", "self", ".", "fields", "]", ")", ")", "\n", "stmt", ".", "append", "(", "\") VALUES (\"", ")", "\n", "stmt", ".", "append", "(", "\", \"", ".", "join", "(", "[", "field", ".", "fcn", "(", "kwargs", "[", "field", ".", "name", "]", ")", "for", "field", "in", "self", ".", "fields", "]", ")", ")", "\n", "stmt", ".", "append", "(", "\")\"", ")", "\n", "cursor", "=", "conn", ".", "cursor", "(", ")", "\n", "cursor", ".", "execute", "(", "\" \"", ".", "join", "(", "stmt", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sqlite.Logger.__init__": [[76, 82], ["sqlite.Logger.add_table"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sqlite.Logger.add_table"], ["    ", "def", "__init__", "(", "self", ",", "db_path", ",", "*", "tables", ")", ":", "\n", "        ", "self", ".", "db_path", "=", "db_path", "\n", "self", ".", "conn", "=", "None", "\n", "self", ".", "tables", "=", "{", "}", "\n", "for", "table", "in", "tables", ":", "\n", "            ", "self", ".", "add_table", "(", "table", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sqlite.Logger.__del__": [[83, 85], ["sqlite.Logger.commit"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sqlite.Logger.commit"], ["", "", "def", "__del__", "(", "self", ")", ":", "\n", "        ", "self", ".", "commit", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sqlite.Logger._conn": [[86, 90], ["sqlite3.Connection", "str"], "methods", ["None"], ["", "def", "_conn", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "conn", "is", "None", ":", "\n", "            ", "self", ".", "conn", "=", "sqlite3", ".", "Connection", "(", "str", "(", "self", ".", "db_path", ")", ")", "\n", "", "return", "self", ".", "conn", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sqlite.Logger.commit": [[91, 96], ["sqlite.Logger.conn.commit", "sqlite.Logger.conn.close"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sqlite.Logger.commit"], ["", "def", "commit", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "conn", "is", "not", "None", ":", "\n", "            ", "self", ".", "conn", ".", "commit", "(", ")", "\n", "self", ".", "conn", ".", "close", "(", ")", "\n", "self", ".", "conn", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sqlite.Logger.add_table": [[97, 102], ["sqlite.Logger._conn", "table.create", "sqlite.Logger.commit"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sqlite.Logger._conn", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sqlite.Table.create", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sqlite.Logger.commit"], ["", "", "def", "add_table", "(", "self", ",", "table", ")", ":", "\n", "        ", "self", ".", "tables", "[", "table", ".", "name", "]", "=", "table", "\n", "conn", "=", "self", ".", "_conn", "(", ")", "\n", "table", ".", "create", "(", "conn", ")", "\n", "self", ".", "commit", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sqlite.Logger.insert": [[103, 105], ["sqlite.Logger.tables[].insert", "sqlite.Logger._conn"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sqlite.Logger.insert", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sqlite.Logger._conn"], ["", "def", "insert", "(", "self", ",", "table_name", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "tables", "[", "table_name", "]", ".", "insert", "(", "self", ".", "_conn", "(", ")", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sqlite.Logger.insert_commit": [[106, 109], ["sqlite.Logger.insert", "sqlite.Logger.commit"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sqlite.Logger.insert", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sqlite.Logger.commit"], ["", "def", "insert_commit", "(", "self", ",", "table_name", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "insert", "(", "table_name", ",", "**", "kwargs", ")", "\n", "self", ".", "commit", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sqlite.str_field_fcn": [[11, 13], ["None"], "function", ["None"], ["", "", "def", "str_field_fcn", "(", "x", ")", ":", "\n", "    ", "return", "'\"%s\"'", "%", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sty.mk_bold": [[24, 26], ["None"], "function", ["None"], ["def", "mk_bold", "(", "txt", ")", ":", "\n", "    ", "return", "f\"{bold}{txt}{rs}\"", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sty.mk_fg000": [[28, 30], ["None"], "function", ["None"], ["", "def", "mk_fg000", "(", "txt", ")", ":", "\n", "    ", "return", "f\"{fg000}{txt}{rs}\"", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sty.mk_fg001": [[32, 34], ["None"], "function", ["None"], ["", "def", "mk_fg001", "(", "txt", ")", ":", "\n", "    ", "return", "f\"{fg001}{txt}{rs}\"", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sty.mk_fg002": [[36, 38], ["None"], "function", ["None"], ["", "def", "mk_fg002", "(", "txt", ")", ":", "\n", "    ", "return", "f\"{fg002}{txt}{rs}\"", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sty.mk_fg003": [[40, 42], ["None"], "function", ["None"], ["", "def", "mk_fg003", "(", "txt", ")", ":", "\n", "    ", "return", "f\"{fg003}{txt}{rs}\"", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sty.mk_fg004": [[44, 46], ["None"], "function", ["None"], ["", "def", "mk_fg004", "(", "txt", ")", ":", "\n", "    ", "return", "f\"{fg004}{txt}{rs}\"", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sty.mk_fg005": [[48, 50], ["None"], "function", ["None"], ["", "def", "mk_fg005", "(", "txt", ")", ":", "\n", "    ", "return", "f\"{fg005}{txt}{rs}\"", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sty.mk_fg006": [[52, 54], ["None"], "function", ["None"], ["", "def", "mk_fg006", "(", "txt", ")", ":", "\n", "    ", "return", "f\"{fg006}{txt}{rs}\"", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sty.mk_fg007": [[56, 58], ["None"], "function", ["None"], ["", "def", "mk_fg007", "(", "txt", ")", ":", "\n", "    ", "return", "f\"{fg007}{txt}{rs}\"", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sty.mk_fg008": [[60, 62], ["None"], "function", ["None"], ["", "def", "mk_fg008", "(", "txt", ")", ":", "\n", "    ", "return", "f\"{fg008}{txt}{rs}\"", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sty.mk_fg009": [[64, 66], ["None"], "function", ["None"], ["", "def", "mk_fg009", "(", "txt", ")", ":", "\n", "    ", "return", "f\"{fg009}{txt}{rs}\"", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sty.mk_fg010": [[68, 70], ["None"], "function", ["None"], ["", "def", "mk_fg010", "(", "txt", ")", ":", "\n", "    ", "return", "f\"{fg010}{txt}{rs}\"", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sty.mk_fg011": [[72, 74], ["None"], "function", ["None"], ["", "def", "mk_fg011", "(", "txt", ")", ":", "\n", "    ", "return", "f\"{fg011}{txt}{rs}\"", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sty.mk_fg012": [[76, 78], ["None"], "function", ["None"], ["", "def", "mk_fg012", "(", "txt", ")", ":", "\n", "    ", "return", "f\"{fg012}{txt}{rs}\"", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sty.mk_fg013": [[80, 82], ["None"], "function", ["None"], ["", "def", "mk_fg013", "(", "txt", ")", ":", "\n", "    ", "return", "f\"{fg013}{txt}{rs}\"", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sty.mk_fg014": [[84, 86], ["None"], "function", ["None"], ["", "def", "mk_fg014", "(", "txt", ")", ":", "\n", "    ", "return", "f\"{fg014}{txt}{rs}\"", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sty.mk_fg015": [[88, 90], ["None"], "function", ["None"], ["", "def", "mk_fg015", "(", "txt", ")", ":", "\n", "    ", "return", "f\"{fg015}{txt}{rs}\"", "\n", "", ""]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Image.qvec2rotmat": [[39, 41], ["colmap.Image.qvec2rotmat"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.qvec2rotmat"], ["    ", "def", "qvec2rotmat", "(", "self", ")", ":", "\n", "        ", "return", "qvec2rotmat", "(", "self", ".", "qvec", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap.__init__": [[517, 559], ["pathlib.Path", "colmap.Colmap.working_dir.mkdir", "pathlib.Path", "len", "pathlib.Path", "Exception", "pathlib.Path"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "colmap_path", ",", "working_dir", ",", "im_paths", ")", ":", "\n", "        ", "self", ".", "colmap_path", "=", "colmap_path", "\n", "\n", "self", ".", "working_dir", "=", "Path", "(", "working_dir", ")", "\n", "self", ".", "working_dir", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "\n", "if", "len", "(", "im_paths", ")", ">", "0", ":", "\n", "            ", "self", ".", "im_dir", "=", "Path", "(", "im_paths", "[", "0", "]", ")", ".", "parent", "\n", "for", "im_path", "in", "im_paths", ":", "\n", "                ", "if", "Path", "(", "im_path", ")", ".", "parent", "!=", "self", ".", "im_dir", ":", "\n", "                    ", "raise", "Exception", "(", "\n", "\"all images in im_path must be in the same folder\"", "\n", ")", "\n", "", "", "", "self", ".", "im_paths", "=", "im_paths", "\n", "\n", "self", ".", "db_path", "=", "self", ".", "working_dir", "/", "\"database.db\"", "\n", "self", ".", "sparse_dir", "=", "self", ".", "working_dir", "/", "\"sparse\"", "\n", "self", ".", "sparse_dir_0", "=", "self", ".", "working_dir", "/", "\"sparse\"", "/", "\"0\"", "\n", "self", ".", "dense_dir", "=", "self", ".", "working_dir", "/", "\"dense\"", "\n", "self", ".", "camera_model", "=", "\"RADIAL\"", "\n", "self", ".", "single_camera", "=", "False", "\n", "self", ".", "mapper_min_num_matches", "=", "15", "\n", "self", ".", "max_im_size", "=", "-", "1", "\n", "self", ".", "mapper_min_num_matches", "=", "15", "\n", "self", ".", "patch_match_min_triangulation_angle", "=", "1", "\n", "self", ".", "patch_match_geometric", "=", "False", "\n", "self", ".", "patch_match_window_radius", "=", "5", "\n", "self", ".", "patch_match_filter", "=", "1", "\n", "self", ".", "patch_match_filter_min_ncc", "=", "0.1", "\n", "self", ".", "patch_match_depth_min", "=", "0", "\n", "self", ".", "patch_match_depth_max", "=", "20", "\n", "self", ".", "fusion_min_num_pixels", "=", "5", "\n", "self", ".", "fusion_max_reproj_error", "=", "2", "\n", "self", ".", "fusion_max_depth_error", "=", "0.1", "\n", "\n", "self", ".", "openmvs_bin_dir", "=", "Path", "(", "\"\"", ")", "\n", "self", ".", "openmvs_working_dir", "=", "self", ".", "working_dir", "/", "\"openmvs\"", "\n", "self", ".", "openmvs_densify_resolution_level", "=", "0", "\n", "self", ".", "openmvs_densify_max_resolution", "=", "3200", "\n", "self", ".", "openmvs_densify_min_resolution", "=", "640", "\n", "self", ".", "openmvs_densify_number_views", "=", "12", "\n", "self", ".", "openmvs_densify_optimize", "=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap._exec_cmd": [[560, 563], ["print", "subprocess.run"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_data_pw.run"], ["", "def", "_exec_cmd", "(", "self", ",", "cmd", ")", ":", "\n", "        ", "print", "(", "f'{sty.bold}{sty.fg002}{\" \".join(cmd)}{sty.rs}'", ")", "\n", "subprocess", ".", "run", "(", "cmd", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap._fusion_output_path": [[564, 569], ["None"], "methods", ["None"], ["", "def", "_fusion_output_path", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "patch_match_geometric", ":", "\n", "            ", "return", "self", ".", "dense_dir", "/", "\"fused_geometric.ply\"", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "dense_dir", "/", "\"fused_photometric.ply\"", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap._poisson_output_path": [[570, 575], ["None"], "methods", ["None"], ["", "", "def", "_poisson_output_path", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "patch_match_geometric", ":", "\n", "            ", "return", "self", ".", "dense_dir", "/", "\"poisson_geometric.ply\"", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "dense_dir", "/", "\"poisson_photometric.ply\"", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap._delaunay_output_path": [[576, 581], ["None"], "methods", ["None"], ["", "", "def", "_delaunay_output_path", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "patch_match_geometric", ":", "\n", "            ", "return", "self", ".", "dense_dir", "/", "\"delaunay_geometric.ply\"", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "dense_dir", "/", "\"delaunay_photometric.ply\"", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap.feature_extractor": [[582, 602], ["colmap.Colmap._exec_cmd", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap._exec_cmd"], ["", "", "def", "feature_extractor", "(", "self", ")", ":", "\n", "        ", "cmd", "=", "[", "\n", "str", "(", "self", ".", "colmap_path", ")", ",", "\n", "\"feature_extractor\"", ",", "\n", "\"--database_path\"", ",", "\n", "str", "(", "self", ".", "db_path", ")", ",", "\n", "\"--image_path\"", ",", "\n", "str", "(", "self", ".", "im_dir", ")", ",", "\n", "# \"--image_list_path\",", "\n", "# str(self.image_list_path),", "\n", "\"--ImageReader.camera_model\"", ",", "\n", "self", ".", "camera_model", ",", "\n", "\"--ImageReader.single_camera\"", ",", "\n", "\"1\"", "if", "self", ".", "single_camera", "else", "\"0\"", ",", "\n", "# \"--ImageReader.existing_camera_id\",", "\n", "# \"1\",", "\n", "\"--SiftExtraction.use_gpu\"", ",", "\n", "\"1\"", ",", "\n", "]", "\n", "self", ".", "_exec_cmd", "(", "cmd", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap.feature_matcher": [[603, 613], ["colmap.Colmap._exec_cmd", "str", "str"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap._exec_cmd"], ["", "def", "feature_matcher", "(", "self", ")", ":", "\n", "        ", "cmd", "=", "[", "\n", "str", "(", "self", ".", "colmap_path", ")", ",", "\n", "\"exhaustive_matcher\"", ",", "\n", "\"--database_path\"", ",", "\n", "str", "(", "self", ".", "db_path", ")", ",", "\n", "\"--SiftMatching.use_gpu\"", ",", "\n", "\"1\"", ",", "\n", "]", "\n", "self", ".", "_exec_cmd", "(", "cmd", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap.mapper": [[614, 629], ["colmap.Colmap.sparse_dir.mkdir", "colmap.Colmap._exec_cmd", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap._exec_cmd"], ["", "def", "mapper", "(", "self", ")", ":", "\n", "        ", "self", ".", "sparse_dir", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "cmd", "=", "[", "\n", "str", "(", "self", ".", "colmap_path", ")", ",", "\n", "\"mapper\"", ",", "\n", "\"--database_path\"", ",", "\n", "str", "(", "self", ".", "db_path", ")", ",", "\n", "\"--image_path\"", ",", "\n", "str", "(", "self", ".", "im_dir", ")", ",", "\n", "# \"--image_list_path\",", "\n", "# str(self.image_list_path),", "\n", "\"--output_path\"", ",", "\n", "str", "(", "self", ".", "sparse_dir", ")", ",", "\n", "]", "\n", "self", ".", "_exec_cmd", "(", "cmd", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap.point_triangulator": [[630, 647], ["colmap.Colmap.sparse_dir_0.mkdir", "colmap.Colmap._exec_cmd", "str", "str", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap._exec_cmd"], ["", "def", "point_triangulator", "(", "self", ")", ":", "\n", "        ", "self", ".", "sparse_dir_0", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "cmd", "=", "[", "\n", "str", "(", "self", ".", "colmap_path", ")", ",", "\n", "\"point_triangulator\"", ",", "\n", "\"--database_path\"", ",", "\n", "str", "(", "self", ".", "db_path", ")", ",", "\n", "\"--image_path\"", ",", "\n", "str", "(", "self", ".", "im_dir", ")", ",", "\n", "\"--input_path\"", ",", "\n", "str", "(", "self", ".", "sparse_dir", ")", ",", "\n", "\"--output_path\"", ",", "\n", "str", "(", "self", ".", "sparse_dir_0", ")", ",", "\n", "\"--Mapper.min_num_matches\"", ",", "\n", "str", "(", "self", ".", "mapper_min_num_matches", ")", ",", "\n", "]", "\n", "self", ".", "_exec_cmd", "(", "cmd", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap.image_undistorter": [[648, 665], ["colmap.Colmap.dense_dir.mkdir", "colmap.Colmap._exec_cmd", "str", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap._exec_cmd"], ["", "def", "image_undistorter", "(", "self", ")", ":", "\n", "        ", "self", ".", "dense_dir", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "cmd", "=", "[", "\n", "str", "(", "self", ".", "colmap_path", ")", ",", "\n", "\"image_undistorter\"", ",", "\n", "\"--image_path\"", ",", "\n", "str", "(", "self", ".", "im_dir", ")", ",", "\n", "\"--input_path\"", ",", "\n", "str", "(", "self", ".", "sparse_dir_0", ")", ",", "\n", "\"--output_path\"", ",", "\n", "str", "(", "self", ".", "dense_dir", ")", ",", "\n", "\"--output_type\"", ",", "\n", "\"COLMAP\"", ",", "\n", "\"--max_image_size\"", ",", "\n", "str", "(", "self", ".", "max_im_size", ")", ",", "\n", "]", "\n", "self", ".", "_exec_cmd", "(", "cmd", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap.write_patch_match_cfg": [[666, 673], ["open", "im_associations.items", "fp.write", "fp.write"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.Metric.items"], ["", "def", "write_patch_match_cfg", "(", "self", ",", "patch_match_cfg_path", ",", "im_associations", "=", "{", "}", ")", ":", "\n", "# im_associations .. dict of im_name => list of im_names", "\n", "# patch_match_cfg_path = self.dense_dir / 'stereo' / 'patch-match.cfg'", "\n", "        ", "with", "open", "(", "patch_match_cfg_path", ",", "\"w\"", ")", "as", "fp", ":", "\n", "            ", "for", "k", ",", "v", "in", "im_associations", ".", "items", "(", ")", ":", "\n", "                ", "fp", ".", "write", "(", "f\"{k}\\n\"", ")", "\n", "fp", ".", "write", "(", "f'{\", \".join(v)}\\n'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap.patch_match_stereo_manual": [[674, 703], ["colmap.Colmap.write_patch_match_cfg", "colmap.Colmap._exec_cmd", "str", "str", "str", "str", "str", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap.write_patch_match_cfg", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap._exec_cmd"], ["", "", "", "def", "patch_match_stereo_manual", "(", "self", ",", "im_associations", "=", "{", "}", ")", ":", "\n", "        ", "self", ".", "write_patch_match_cfg", "(", "\n", "self", ".", "dense_dir", "/", "\"stereo\"", "/", "\"patch-match.cfg\"", ",", "im_associations", "\n", ")", "\n", "cmd", "=", "[", "\n", "str", "(", "self", ".", "colmap_path", ")", ",", "\n", "\"patch_match_stereo\"", ",", "\n", "\"--workspace_path\"", ",", "\n", "str", "(", "self", ".", "dense_dir", ")", ",", "\n", "\"--workspace_format\"", ",", "\n", "\"COLMAP\"", ",", "\n", "\"--PatchMatchStereo.depth_min\"", ",", "\n", "str", "(", "self", ".", "patch_match_depth_min", ")", ",", "\n", "\"--PatchMatchStereo.depth_max\"", ",", "\n", "str", "(", "self", ".", "patch_match_depth_max", ")", ",", "\n", "\"--PatchMatchStereo.min_triangulation_angle\"", ",", "\n", "str", "(", "self", ".", "patch_match_min_triangulation_angle", ")", ",", "\n", "\"--PatchMatchStereo.max_image_size\"", ",", "\n", "str", "(", "self", ".", "max_im_size", ")", ",", "\n", "\"--PatchMatchStereo.geom_consistency\"", ",", "\n", "\"true\"", "if", "self", ".", "patch_match_geometric", "else", "\"false\"", ",", "\n", "\"--PatchMatchStereo.window_radius\"", ",", "\n", "str", "(", "self", ".", "patch_match_window_radius", ")", ",", "\n", "\"--PatchMatchStereo.filter\"", ",", "\n", "str", "(", "self", ".", "patch_match_filter", ")", ",", "\n", "\"--PatchMatchStereo.filter_min_ncc\"", ",", "\n", "str", "(", "self", ".", "patch_match_filter_min_ncc", ")", ",", "\n", "]", "\n", "self", ".", "_exec_cmd", "(", "cmd", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap.patch_match_stereo_auto": [[704, 726], ["colmap.Colmap._exec_cmd", "str", "str", "str", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap._exec_cmd"], ["", "def", "patch_match_stereo_auto", "(", "self", ")", ":", "\n", "        ", "cmd", "=", "[", "\n", "str", "(", "self", ".", "colmap_path", ")", ",", "\n", "\"patch_match_stereo\"", ",", "\n", "\"--workspace_path\"", ",", "\n", "str", "(", "self", ".", "dense_dir", ")", ",", "\n", "\"--workspace_format\"", ",", "\n", "\"COLMAP\"", ",", "\n", "\"--PatchMatchStereo.max_image_size\"", ",", "\n", "str", "(", "self", ".", "max_im_size", ")", ",", "\n", "\"--PatchMatchStereo.min_triangulation_angle\"", ",", "\n", "str", "(", "self", ".", "patch_match_min_triangulation_angle", ")", ",", "\n", "\"--PatchMatchStereo.geom_consistency\"", ",", "\n", "\"true\"", "if", "self", ".", "patch_match_geometric", "else", "\"false\"", ",", "\n", "\"--PatchMatchStereo.window_radius\"", ",", "\n", "str", "(", "self", ".", "patch_match_window_radius", ")", ",", "\n", "\"--PatchMatchStereo.filter\"", ",", "\n", "str", "(", "self", ".", "patch_match_filter", ")", ",", "\n", "\"--PatchMatchStereo.filter_min_ncc\"", ",", "\n", "str", "(", "self", ".", "patch_match_filter_min_ncc", ")", ",", "\n", "]", "\n", "self", ".", "_exec_cmd", "(", "cmd", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap.stereo_fusion": [[727, 747], ["colmap.Colmap._exec_cmd", "str", "str", "str", "str", "str", "str", "colmap.Colmap._fusion_output_path"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap._exec_cmd", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap._fusion_output_path"], ["", "def", "stereo_fusion", "(", "self", ")", ":", "\n", "        ", "cmd", "=", "[", "\n", "str", "(", "self", ".", "colmap_path", ")", ",", "\n", "\"stereo_fusion\"", ",", "\n", "\"--workspace_path\"", ",", "\n", "str", "(", "self", ".", "dense_dir", ")", ",", "\n", "\"--workspace_format\"", ",", "\n", "\"COLMAP\"", ",", "\n", "\"--input_type\"", ",", "\n", "\"geometric\"", "if", "self", ".", "patch_match_geometric", "else", "\"photometric\"", ",", "\n", "\"--output_path\"", ",", "\n", "str", "(", "self", ".", "_fusion_output_path", "(", ")", ")", ",", "\n", "\"--StereoFusion.min_num_pixels\"", ",", "\n", "str", "(", "self", ".", "fusion_min_num_pixels", ")", ",", "\n", "\"--StereoFusion.max_reproj_error\"", ",", "\n", "str", "(", "self", ".", "fusion_max_reproj_error", ")", ",", "\n", "\"--StereoFusion.max_depth_error\"", ",", "\n", "str", "(", "self", ".", "fusion_max_depth_error", ")", ",", "\n", "]", "\n", "self", ".", "_exec_cmd", "(", "cmd", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap.poisson_meshing": [[748, 758], ["colmap.Colmap._exec_cmd", "str", "str", "str", "colmap.Colmap._fusion_output_path", "colmap.Colmap._poisson_output_path"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap._exec_cmd", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap._fusion_output_path", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap._poisson_output_path"], ["", "def", "poisson_meshing", "(", "self", ")", ":", "\n", "        ", "cmd", "=", "[", "\n", "str", "(", "self", ".", "colmap_path", ")", ",", "\n", "\"poisson_mesher\"", ",", "\n", "\"--input_path\"", ",", "\n", "str", "(", "self", ".", "_fusion_output_path", "(", ")", ")", ",", "\n", "\"--output_path\"", ",", "\n", "str", "(", "self", ".", "_poisson_output_path", "(", ")", ")", ",", "\n", "]", "\n", "self", ".", "_exec_cmd", "(", "cmd", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap.delaunay_meshing": [[759, 778], ["colmap.Colmap._fusion_output_path", "colmap.Colmap._exec_cmd", "fused_path.unlink", "fused_vis_path.unlink", "fused_path.exists", "shutil.copy", "fused_vis_path.exists", "shutil.copy", "str", "str", "str", "colmap.Colmap.with_suffix", "colmap.Colmap._delaunay_output_path"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap._fusion_output_path", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap._exec_cmd", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap._delaunay_output_path"], ["", "def", "delaunay_meshing", "(", "self", ")", ":", "\n", "        ", "fused_path", "=", "self", ".", "dense_dir", "/", "\"fused.ply\"", "\n", "fused_vis_path", "=", "self", ".", "dense_dir", "/", "\"fused.ply.vis\"", "\n", "fusion_out_path", "=", "self", ".", "_fusion_output_path", "(", ")", "\n", "if", "not", "fused_path", ".", "exists", "(", ")", ":", "\n", "            ", "shutil", ".", "copy", "(", "fusion_out_path", ",", "fused_path", ")", "\n", "", "if", "not", "fused_vis_path", ".", "exists", "(", ")", ":", "\n", "            ", "shutil", ".", "copy", "(", "fusion_out_path", ".", "with_suffix", "(", "\".ply.vis\"", ")", ",", "fused_vis_path", ")", "\n", "", "cmd", "=", "[", "\n", "str", "(", "self", ".", "colmap_path", ")", ",", "\n", "\"delaunay_mesher\"", ",", "\n", "\"--input_path\"", ",", "\n", "str", "(", "self", ".", "dense_dir", ")", ",", "\n", "\"--output_path\"", ",", "\n", "str", "(", "self", ".", "_delaunay_output_path", "(", ")", ")", ",", "\n", "]", "\n", "self", ".", "_exec_cmd", "(", "cmd", ")", "\n", "fused_path", ".", "unlink", "(", ")", "\n", "fused_vis_path", ".", "unlink", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap.select_images": [[779, 793], ["sqlite3.Connection", "sqlite3.Connection.cursor", "sqlite3.Connection.cursor.execute", "sqlite3.Connection.cursor.fetchall", "sqlite3.Connection.close", "str"], "methods", ["None"], ["", "def", "select_images", "(", "self", ")", ":", "\n", "        ", "conn", "=", "sqlite3", ".", "Connection", "(", "str", "(", "self", ".", "db_path", ")", ")", "\n", "cursor", "=", "conn", ".", "cursor", "(", ")", "\n", "cursor", ".", "execute", "(", "\"SELECT image_id, name, camera_id FROM images\"", ")", "\n", "rows", "=", "cursor", ".", "fetchall", "(", ")", "\n", "images", "=", "{", "}", "\n", "for", "row", "in", "rows", ":", "\n", "            ", "images", "[", "row", "[", "1", "]", "]", "=", "{", "\n", "\"image_id\"", ":", "row", "[", "0", "]", ",", "\n", "\"image\"", ":", "row", "[", "1", "]", ",", "\n", "\"camera_id\"", ":", "row", "[", "2", "]", ",", "\n", "}", "\n", "", "conn", ".", "close", "(", ")", "\n", "return", "images", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap.write_calib": [[794, 850], ["colmap.Colmap.sparse_dir.mkdir", "colmap.Colmap.select_images", "sqlite3.Connection", "sqlite3.Connection.cursor", "sqlite3.Connection.cursor.execute", "sqlite3.Connection.commit", "sqlite3.Connection.close", "Exception", "str", "open", "zip", "open", "zip", "open", "itertools.count", "fp.write", "sqlite3.Connection.cursor.execute", "sqlite3.Connection.commit", "itertools.count", "colmap.quat_from_rotm", "fp.write", "int", "int", "colmap.array_to_blob", "int", "int", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap.select_images", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sqlite.Logger.commit", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.sqlite.Logger.commit", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.quat_from_rotm", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.array_to_blob"], ["", "def", "write_calib", "(", "self", ",", "Ks", ",", "Ts", ",", "imdims", ")", ":", "\n", "# dims ... N x 2 (width, height)", "\n", "        ", "if", "self", ".", "camera_model", "!=", "\"PINHOLE\"", ":", "\n", "            ", "raise", "Exception", "(", "\n", "f\"camera_model={self.camera_model} has to be PINHOLE\"", "\n", ")", "\n", "", "self", ".", "sparse_dir", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "\n", "images", "=", "self", ".", "select_images", "(", ")", "\n", "\n", "conn", "=", "sqlite3", ".", "Connection", "(", "str", "(", "self", ".", "db_path", ")", ")", "\n", "cursor", "=", "conn", ".", "cursor", "(", ")", "\n", "# cursor.execute('SELECT * FROM cameras')", "\n", "# rows = cursor.fetchall()", "\n", "cursor", ".", "execute", "(", "\"DELETE FROM cameras\"", ")", "\n", "conn", ".", "commit", "(", ")", "\n", "with", "open", "(", "self", ".", "sparse_dir", "/", "\"cameras.txt\"", ",", "\"w\"", ")", "as", "fp", ":", "\n", "            ", "for", "idx", ",", "im_path", ",", "K", ",", "dim", "in", "zip", "(", "\n", "itertools", ".", "count", "(", ")", ",", "self", ".", "im_paths", ",", "Ks", ",", "imdims", "\n", ")", ":", "\n", "                ", "image", "=", "images", "[", "im_path", ".", "name", "]", "\n", "cam_id", "=", "image", "[", "\"camera_id\"", "]", "\n", "camera_model", "=", "1", "# PINHOLE", "\n", "prior_focal_length", "=", "False", "\n", "fp", ".", "write", "(", "\n", "f\"{cam_id} PINHOLE {int(dim[0])} {int(dim[1])} {K[0,0]} {K[1,1]} {K[0,2]} {K[1,2]}\\n\"", "\n", ")", "\n", "cursor", ".", "execute", "(", "\n", "\"INSERT OR REPLACE INTO cameras VALUES (?, ?, ?, ?, ?, ?)\"", ",", "\n", "(", "\n", "cam_id", ",", "\n", "camera_model", ",", "\n", "int", "(", "dim", "[", "0", "]", ")", ",", "\n", "int", "(", "dim", "[", "1", "]", ")", ",", "\n", "array_to_blob", "(", "\n", "np", ".", "array", "(", "\n", "(", "K", "[", "0", ",", "0", "]", ",", "K", "[", "1", ",", "1", "]", ",", "K", "[", "0", ",", "2", "]", ",", "K", "[", "1", ",", "2", "]", ")", ",", "\n", "dtype", "=", "np", ".", "float64", ",", "\n", ")", "\n", ")", ",", "\n", "prior_focal_length", ",", "\n", ")", ",", "\n", ")", "\n", "conn", ".", "commit", "(", ")", "\n", "", "", "conn", ".", "close", "(", ")", "\n", "\n", "with", "open", "(", "self", ".", "sparse_dir", "/", "\"images.txt\"", ",", "\"w\"", ")", "as", "fp", ":", "\n", "            ", "for", "idx", ",", "im_path", ",", "T", "in", "zip", "(", "itertools", ".", "count", "(", ")", ",", "self", ".", "im_paths", ",", "Ts", ")", ":", "\n", "                ", "R", ",", "t", "=", "T", "[", ":", "3", ",", ":", "3", "]", ",", "T", "[", ":", "3", ",", "3", "]", "\n", "q", "=", "quat_from_rotm", "(", "R", ")", "\n", "image", "=", "images", "[", "im_path", ".", "name", "]", "\n", "fp", ".", "write", "(", "\n", "f\"{image['image_id']} {q[0]} {q[1]} {q[2]} {q[3]} {t[0]} {t[1]} {t[2]} {image['camera_id']} {im_path.name}\\n\\n\"", "\n", ")", "\n", "", "", "with", "open", "(", "self", ".", "sparse_dir", "/", "\"points3D.txt\"", ",", "\"w\"", ")", "as", "fp", ":", "\n", "            ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap.sparse_reconstruction_known_calib": [[851, 858], ["colmap.Colmap.feature_extractor", "colmap.Colmap.write_calib", "colmap.Colmap.feature_matcher", "colmap.Colmap.point_triangulator"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap.feature_extractor", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap.write_calib", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap.feature_matcher", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap.point_triangulator"], ["", "", "def", "sparse_reconstruction_known_calib", "(", "self", ",", "Ks", ",", "Ts", ",", "imdims", ")", ":", "\n", "# Ts     ... [Rs | ts]", "\n", "# imdims ... N x 2 (width, height)", "\n", "        ", "self", ".", "feature_extractor", "(", ")", "\n", "self", ".", "write_calib", "(", "Ks", ",", "Ts", ",", "imdims", ")", "\n", "self", ".", "feature_matcher", "(", ")", "\n", "self", ".", "point_triangulator", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap.sparse_reconstruction_unknown_calib": [[859, 863], ["colmap.Colmap.feature_extractor", "colmap.Colmap.feature_matcher", "colmap.Colmap.mapper"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap.feature_extractor", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap.feature_matcher", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap.mapper"], ["", "def", "sparse_reconstruction_unknown_calib", "(", "self", ")", ":", "\n", "        ", "self", ".", "feature_extractor", "(", ")", "\n", "self", ".", "feature_matcher", "(", ")", "\n", "self", ".", "mapper", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap.dense_reconstruction": [[864, 868], ["colmap.Colmap.image_undistorter", "colmap.Colmap.patch_match_stereo_auto", "colmap.Colmap.stereo_fusion"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap.image_undistorter", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap.patch_match_stereo_auto", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap.stereo_fusion"], ["", "def", "dense_reconstruction", "(", "self", ")", ":", "\n", "        ", "self", ".", "image_undistorter", "(", ")", "\n", "self", ".", "patch_match_stereo_auto", "(", ")", "\n", "self", ".", "stereo_fusion", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap.write_sparse_points_ply": [[869, 885], ["colmap.read_points3d_binary", "len", "numpy.empty", "numpy.empty", "enumerate", "o3d.geometry.PointCloud", "o3d.utility.Vector3dVector", "o3d.utility.Vector3dVector", "o3d.io.write_point_cloud", "str", "read_points3d_binary.keys", "str", "pts[].rgb.astype", "points3D_path.with_suffix"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.read_points3d_binary"], ["", "def", "write_sparse_points_ply", "(", "self", ")", ":", "\n", "        ", "import", "open3d", "as", "o3d", "\n", "points3D_path", "=", "self", ".", "sparse_dir_0", "/", "\"points3D.bin\"", "\n", "\n", "pts", "=", "read_points3d_binary", "(", "str", "(", "points3D_path", ")", ")", "\n", "n", "=", "len", "(", "pts", ")", "\n", "xyz", "=", "np", ".", "empty", "(", "(", "n", ",", "3", ")", ")", "\n", "colors", "=", "np", ".", "empty", "(", "(", "n", ",", "3", ")", ")", "\n", "for", "idx", ",", "key", "in", "enumerate", "(", "pts", ".", "keys", "(", ")", ")", ":", "\n", "            ", "xyz", "[", "idx", "]", "=", "pts", "[", "key", "]", ".", "xyz", "\n", "colors", "[", "idx", "]", "=", "pts", "[", "key", "]", ".", "rgb", ".", "astype", "(", "colors", ".", "dtype", ")", "/", "255", "\n", "\n", "", "pcd", "=", "o3d", ".", "geometry", ".", "PointCloud", "(", ")", "\n", "pcd", ".", "points", "=", "o3d", ".", "utility", ".", "Vector3dVector", "(", "xyz", ")", "\n", "pcd", ".", "colors", "=", "o3d", ".", "utility", ".", "Vector3dVector", "(", "colors", ")", "\n", "o3d", ".", "io", ".", "write_point_cloud", "(", "str", "(", "points3D_path", ".", "with_suffix", "(", "\".ply\"", ")", ")", ",", "pcd", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap._openmvs_mvs_project_path": [[886, 888], ["None"], "methods", ["None"], ["", "def", "_openmvs_mvs_project_path", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "openmvs_working_dir", "/", "\"open.mvs\"", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap.openmvs_init": [[889, 928], ["colmap.read_cameras_binary", "colmap.read_images_binary", "colmap.read_points3d_binary", "colmap.write_cameras_text", "colmap.write_images_text", "colmap.write_points3D_text", "colmap.Colmap._exec_cmd", "BaseImage", "str", "str", "str", "str", "image.name.replace", "colmap.Colmap._openmvs_mvs_project_path"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.read_cameras_binary", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.read_images_binary", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.read_points3d_binary", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.write_cameras_text", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.write_images_text", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.write_points3D_text", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap._exec_cmd", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap._openmvs_mvs_project_path"], ["", "def", "openmvs_init", "(", "self", ")", ":", "\n", "        ", "cameras", "=", "read_cameras_binary", "(", "self", ".", "dense_dir", "/", "\"sparse\"", "/", "\"cameras.bin\"", ")", "\n", "images", "=", "read_images_binary", "(", "self", ".", "dense_dir", "/", "\"sparse\"", "/", "\"images.bin\"", ")", "\n", "points3D", "=", "read_points3d_binary", "(", "\n", "self", ".", "dense_dir", "/", "\"sparse\"", "/", "\"points3D.bin\"", "\n", ")", "\n", "\n", "def", "image_callback", "(", "image", ")", ":", "\n", "            ", "return", "BaseImage", "(", "\n", "image", ".", "id", ",", "\n", "image", ".", "qvec", ",", "\n", "image", ".", "tvec", ",", "\n", "image", ".", "camera_id", ",", "\n", "image", ".", "name", ".", "replace", "(", "\".jpg\"", ",", "\".png\"", ")", ",", "\n", "image", ".", "xys", ",", "\n", "image", ".", "point3D_ids", ",", "\n", ")", "\n", "\n", "", "write_cameras_text", "(", "self", ".", "dense_dir", "/", "\"sparse\"", "/", "\"cameras.txt\"", ",", "cameras", ")", "\n", "write_images_text", "(", "\n", "self", ".", "dense_dir", "/", "\"sparse\"", "/", "\"images.txt\"", ",", "\n", "images", ",", "\n", "image_callback", "=", "image_callback", ",", "\n", ")", "\n", "write_points3D_text", "(", "\n", "self", ".", "dense_dir", "/", "\"sparse\"", "/", "\"points3D.txt\"", ",", "points3D", "\n", ")", "\n", "\n", "cmd", "=", "[", "\n", "str", "(", "self", ".", "openmvs_bin_dir", "/", "\"InterfaceCOLMAP\"", ")", ",", "\n", "\"--working-folder\"", ",", "\n", "str", "(", "self", ".", "openmvs_working_dir", ")", ",", "\n", "\"--input-file\"", ",", "\n", "str", "(", "self", ".", "dense_dir", ")", ",", "\n", "# '--image-folder', str(self.dense_dir / 'images'),", "\n", "\"--output-file\"", ",", "\n", "str", "(", "self", ".", "_openmvs_mvs_project_path", "(", ")", ")", ",", "\n", "]", "\n", "self", ".", "_exec_cmd", "(", "cmd", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap.openmvs_densify_point_cloud": [[929, 950], ["colmap.Colmap._exec_cmd", "str", "str", "str", "str", "str", "str", "str", "str", "colmap.Colmap._openmvs_mvs_project_path"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap._exec_cmd", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap._openmvs_mvs_project_path"], ["", "def", "openmvs_densify_point_cloud", "(", "self", ")", ":", "\n", "        ", "cmd", "=", "[", "\n", "str", "(", "self", ".", "openmvs_bin_dir", "/", "\"DensifyPointCloud\"", ")", ",", "\n", "\"--working-folder\"", ",", "\n", "str", "(", "self", ".", "openmvs_working_dir", ")", ",", "\n", "\"--input-file\"", ",", "\n", "str", "(", "self", ".", "_openmvs_mvs_project_path", "(", ")", ")", ",", "\n", "\"--output-file\"", ",", "\n", "str", "(", "self", ".", "openmvs_working_dir", "/", "\"tmp\"", ")", ",", "\n", "# '--archive-type', str(0), # text based output", "\n", "\"--resolution-level\"", ",", "\n", "str", "(", "self", ".", "openmvs_densify_resolution_level", ")", ",", "\n", "# '--max-resolution', str(self.openmvs_densify_max_resolution),", "\n", "\"--min-resolution\"", ",", "\n", "str", "(", "self", ".", "openmvs_densify_min_resolution", ")", ",", "\n", "\"--number-views\"", ",", "\n", "str", "(", "self", ".", "openmvs_densify_number_views", ")", ",", "\n", "\"--optimize\"", ",", "\n", "str", "(", "self", ".", "openmvs_densify_optimize", ")", ",", "\n", "]", "\n", "self", ".", "_exec_cmd", "(", "cmd", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap.mvsnet_parameters": [[951, 1083], ["colmap.read_cameras_binary", "colmap.read_images_binary", "colmap.read_points3d_binary", "read_cameras_binary.items", "read_images_binary.items", "read_images_binary.items", "read_images_binary.keys", "multiprocessing.cpu_count", "multiprocessing.Pool", "multiprocessing.Pool.map", "collections.defaultdict", "numpy.array", "numpy.zeros", "colmap.qvec2rotmat", "sorted", "read_images_binary.keys", "numpy.matmul", "zs.append", "numpy.matmul", "numpy.matmul", "zip", "numpy.asscalar", "int", "int", "numpy.matmul", "numpy.linalg.inv", "numpy.matmul", "numpy.linalg.inv", "min", "max", "queue.append", "numpy.linalg.inv", "numpy.linalg.inv", "len", "len", "numpy.linalg.norm"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.read_cameras_binary", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.read_images_binary", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.read_points3d_binary", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.Metric.items", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.Metric.items", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.Metric.items", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.qvec2rotmat", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append"], ["", "def", "mvsnet_parameters", "(", "\n", "self", ",", "max_d", "=", "0", ",", "interval_scale", "=", "1", ",", "theta0", "=", "5", ",", "sigma1", "=", "1", ",", "sigma2", "=", "10", "\n", ")", ":", "\n", "# code adapted from https://github.com/YoYo000/MVSNet", "\n", "        ", "cameras", "=", "read_cameras_binary", "(", "self", ".", "dense_dir", "/", "\"sparse\"", "/", "\"cameras.bin\"", ")", "\n", "images", "=", "read_images_binary", "(", "self", ".", "dense_dir", "/", "\"sparse\"", "/", "\"images.bin\"", ")", "\n", "points3d", "=", "read_points3d_binary", "(", "\n", "self", ".", "dense_dir", "/", "\"sparse\"", "/", "\"points3D.bin\"", "\n", ")", "\n", "\n", "# fmt: off", "\n", "param_type", "=", "{", "\n", "'SIMPLE_PINHOLE'", ":", "[", "'f'", ",", "'cx'", ",", "'cy'", "]", ",", "\n", "'PINHOLE'", ":", "[", "'fx'", ",", "'fy'", ",", "'cx'", ",", "'cy'", "]", ",", "\n", "'SIMPLE_RADIAL'", ":", "[", "'f'", ",", "'cx'", ",", "'cy'", ",", "'k'", "]", ",", "\n", "'SIMPLE_RADIAL_FISHEYE'", ":", "[", "'f'", ",", "'cx'", ",", "'cy'", ",", "'k'", "]", ",", "\n", "'RADIAL'", ":", "[", "'f'", ",", "'cx'", ",", "'cy'", ",", "'k1'", ",", "'k2'", "]", ",", "\n", "'RADIAL_FISHEYE'", ":", "[", "'f'", ",", "'cx'", ",", "'cy'", ",", "'k1'", ",", "'k2'", "]", ",", "\n", "'OPENCV'", ":", "[", "'fx'", ",", "'fy'", ",", "'cx'", ",", "'cy'", ",", "'k1'", ",", "'k2'", ",", "'p1'", ",", "'p2'", "]", ",", "\n", "'OPENCV_FISHEYE'", ":", "[", "'fx'", ",", "'fy'", ",", "'cx'", ",", "'cy'", ",", "'k1'", ",", "'k2'", ",", "'k3'", ",", "'k4'", "]", ",", "\n", "'FULL_OPENCV'", ":", "[", "'fx'", ",", "'fy'", ",", "'cx'", ",", "'cy'", ",", "'k1'", ",", "'k2'", ",", "'p1'", ",", "'p2'", ",", "'k3'", ",", "'k4'", ",", "'k5'", ",", "'k6'", "]", ",", "\n", "'FOV'", ":", "[", "'fx'", ",", "'fy'", ",", "'cx'", ",", "'cy'", ",", "'omega'", "]", ",", "\n", "'THIN_PRISM_FISHEYE'", ":", "[", "'fx'", ",", "'fy'", ",", "'cx'", ",", "'cy'", ",", "'k1'", ",", "'k2'", ",", "'p1'", ",", "'p2'", ",", "'k3'", ",", "'k4'", ",", "'sx1'", ",", "'sy1'", "]", "\n", "}", "\n", "# fmt: on", "\n", "\n", "# intrinsic", "\n", "intrinsic", "=", "{", "}", "\n", "for", "camera_id", ",", "cam", "in", "cameras", ".", "items", "(", ")", ":", "\n", "            ", "params_dict", "=", "{", "\n", "key", ":", "value", "\n", "for", "key", ",", "value", "in", "zip", "(", "param_type", "[", "cam", ".", "model", "]", ",", "cam", ".", "params", ")", "\n", "}", "\n", "if", "\"f\"", "in", "param_type", "[", "cam", ".", "model", "]", ":", "\n", "                ", "params_dict", "[", "\"fx\"", "]", "=", "params_dict", "[", "\"f\"", "]", "\n", "params_dict", "[", "\"fy\"", "]", "=", "params_dict", "[", "\"f\"", "]", "\n", "", "intrinsic", "[", "camera_id", "]", "=", "np", ".", "array", "(", "\n", "[", "\n", "[", "params_dict", "[", "\"fx\"", "]", ",", "0", ",", "params_dict", "[", "\"cx\"", "]", "]", ",", "\n", "[", "0", ",", "params_dict", "[", "\"fy\"", "]", ",", "params_dict", "[", "\"cy\"", "]", "]", ",", "\n", "[", "0", ",", "0", ",", "1", "]", ",", "\n", "]", "\n", ")", "\n", "\n", "# extrinsic", "\n", "", "extrinsic", "=", "{", "}", "\n", "for", "image_id", ",", "image", "in", "images", ".", "items", "(", ")", ":", "\n", "            ", "e", "=", "np", ".", "zeros", "(", "(", "4", ",", "4", ")", ")", "\n", "e", "[", ":", "3", ",", ":", "3", "]", "=", "qvec2rotmat", "(", "image", ".", "qvec", ")", "\n", "e", "[", ":", "3", ",", "3", "]", "=", "image", ".", "tvec", "\n", "e", "[", "3", ",", "3", "]", "=", "1", "\n", "extrinsic", "[", "image_id", "]", "=", "e", "\n", "\n", "# depth range and interval", "\n", "", "depth_ranges", "=", "{", "}", "\n", "for", "image_id", ",", "image", "in", "images", ".", "items", "(", ")", ":", "\n", "            ", "zs", "=", "[", "]", "\n", "for", "p3d_id", "in", "image", ".", "point3D_ids", ":", "\n", "                ", "if", "p3d_id", "==", "-", "1", ":", "\n", "                    ", "continue", "\n", "", "transformed", "=", "np", ".", "matmul", "(", "\n", "extrinsic", "[", "image_id", "]", ",", "\n", "[", "\n", "points3d", "[", "p3d_id", "]", ".", "xyz", "[", "0", "]", ",", "\n", "points3d", "[", "p3d_id", "]", ".", "xyz", "[", "1", "]", ",", "\n", "points3d", "[", "p3d_id", "]", ".", "xyz", "[", "2", "]", ",", "\n", "1", ",", "\n", "]", ",", "\n", ")", "\n", "zs", ".", "append", "(", "np", ".", "asscalar", "(", "transformed", "[", "2", "]", ")", ")", "\n", "", "zs_sorted", "=", "sorted", "(", "zs", ")", "\n", "# relaxed depth range", "\n", "depth_min", "=", "zs_sorted", "[", "int", "(", "len", "(", "zs", ")", "*", "0.01", ")", "]", "\n", "depth_max", "=", "zs_sorted", "[", "int", "(", "len", "(", "zs", ")", "*", "0.99", ")", "]", "\n", "# determine depth number by inverse depth setting, see supplementary material", "\n", "if", "max_d", "==", "0", ":", "\n", "                ", "image_int", "=", "intrinsic", "[", "image", ".", "camera_id", "]", "\n", "image_ext", "=", "extrinsic", "[", "image_id", "]", "\n", "image_r", "=", "image_ext", "[", "0", ":", "3", ",", "0", ":", "3", "]", "\n", "image_t", "=", "image_ext", "[", "0", ":", "3", ",", "3", "]", "\n", "p1", "=", "[", "image_int", "[", "0", ",", "2", "]", ",", "image_int", "[", "1", ",", "2", "]", ",", "1", "]", "\n", "p2", "=", "[", "image_int", "[", "0", ",", "2", "]", "+", "1", ",", "image_int", "[", "1", ",", "2", "]", ",", "1", "]", "\n", "P1", "=", "np", ".", "matmul", "(", "np", ".", "linalg", ".", "inv", "(", "image_int", ")", ",", "p1", ")", "*", "depth_min", "\n", "P1", "=", "np", ".", "matmul", "(", "np", ".", "linalg", ".", "inv", "(", "image_r", ")", ",", "(", "P1", "-", "image_t", ")", ")", "\n", "P2", "=", "np", ".", "matmul", "(", "np", ".", "linalg", ".", "inv", "(", "image_int", ")", ",", "p2", ")", "*", "depth_min", "\n", "P2", "=", "np", ".", "matmul", "(", "np", ".", "linalg", ".", "inv", "(", "image_r", ")", ",", "(", "P2", "-", "image_t", ")", ")", "\n", "depth_num", "=", "(", "1", "/", "depth_min", "-", "1", "/", "depth_max", ")", "/", "(", "\n", "1", "/", "depth_min", "-", "1", "/", "(", "depth_min", "+", "np", ".", "linalg", ".", "norm", "(", "P2", "-", "P1", ")", ")", "\n", ")", "\n", "", "else", ":", "\n", "                ", "depth_num", "=", "max_d", "\n", "", "depth_interval", "=", "(", "\n", "(", "depth_max", "-", "depth_min", ")", "/", "(", "depth_num", "-", "1", ")", "/", "interval_scale", "\n", ")", "\n", "depth_ranges", "[", "image", ".", "name", "]", "=", "(", "\n", "depth_min", ",", "\n", "depth_interval", ",", "\n", "depth_num", ",", "\n", "depth_max", ",", "\n", ")", "\n", "\n", "# view selection", "\n", "", "queue", "=", "[", "]", "\n", "pairs", "=", "{", "}", "\n", "for", "image_id0", "in", "images", ".", "keys", "(", ")", ":", "\n", "            ", "for", "image_id1", "in", "images", ".", "keys", "(", ")", ":", "\n", "                ", "key", "=", "(", "min", "(", "image_id0", ",", "image_id1", ")", ",", "max", "(", "image_id0", ",", "image_id1", ")", ")", "\n", "if", "image_id0", "!=", "image_id1", "and", "key", "not", "in", "pairs", ":", "\n", "                    ", "queue", ".", "append", "(", "\n", "(", "\n", "image_id0", ",", "\n", "image_id1", ",", "\n", "images", ",", "\n", "points3d", ",", "\n", "extrinsic", ",", "\n", "theta0", ",", "\n", "sigma1", ",", "\n", "sigma2", ",", "\n", ")", "\n", ")", "\n", "pairs", "[", "key", "]", "=", "True", "\n", "", "", "", "processes", "=", "multiprocessing", ".", "cpu_count", "(", ")", "\n", "pool", "=", "multiprocessing", ".", "Pool", "(", "processes", "=", "processes", ")", "\n", "result", "=", "pool", ".", "map", "(", "_mvsnet_calc_score", ",", "queue", ")", "\n", "# result = map(calc_score, queue)", "\n", "scores", "=", "collections", ".", "defaultdict", "(", "dict", ")", "\n", "for", "image_id0", ",", "image_id1", ",", "s", "in", "result", ":", "\n", "            ", "name0", "=", "images", "[", "image_id0", "]", ".", "name", "\n", "name1", "=", "images", "[", "image_id1", "]", ".", "name", "\n", "scores", "[", "name0", "]", "[", "name1", "]", "=", "s", "\n", "scores", "[", "name1", "]", "[", "name0", "]", "=", "s", "\n", "", "return", "depth_ranges", ",", "scores", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.qvec2rotmat": [[43, 60], ["numpy.array"], "function", ["None"], ["", "", "def", "qvec2rotmat", "(", "qvec", ")", ":", "\n", "    ", "return", "np", ".", "array", "(", "\n", "[", "\n", "[", "\n", "1", "-", "2", "*", "qvec", "[", "2", "]", "**", "2", "-", "2", "*", "qvec", "[", "3", "]", "**", "2", ",", "\n", "2", "*", "qvec", "[", "1", "]", "*", "qvec", "[", "2", "]", "-", "2", "*", "qvec", "[", "0", "]", "*", "qvec", "[", "3", "]", ",", "\n", "2", "*", "qvec", "[", "3", "]", "*", "qvec", "[", "1", "]", "+", "2", "*", "qvec", "[", "0", "]", "*", "qvec", "[", "2", "]", ",", "\n", "]", ",", "\n", "[", "\n", "2", "*", "qvec", "[", "1", "]", "*", "qvec", "[", "2", "]", "+", "2", "*", "qvec", "[", "0", "]", "*", "qvec", "[", "3", "]", ",", "\n", "1", "-", "2", "*", "qvec", "[", "1", "]", "**", "2", "-", "2", "*", "qvec", "[", "3", "]", "**", "2", ",", "\n", "2", "*", "qvec", "[", "2", "]", "*", "qvec", "[", "3", "]", "-", "2", "*", "qvec", "[", "0", "]", "*", "qvec", "[", "1", "]", ",", "\n", "]", ",", "\n", "[", "\n", "2", "*", "qvec", "[", "3", "]", "*", "qvec", "[", "1", "]", "-", "2", "*", "qvec", "[", "0", "]", "*", "qvec", "[", "2", "]", ",", "\n", "2", "*", "qvec", "[", "2", "]", "*", "qvec", "[", "3", "]", "+", "2", "*", "qvec", "[", "0", "]", "*", "qvec", "[", "1", "]", ",", "\n", "1", "-", "2", "*", "qvec", "[", "1", "]", "**", "2", "-", "2", "*", "qvec", "[", "2", "]", "**", "2", ",", "\n", "]", ",", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.read_next_bytes": [[86, 96], ["fid.read", "struct.unpack"], "function", ["None"], ["def", "read_next_bytes", "(", "fid", ",", "num_bytes", ",", "format_char_sequence", ",", "endian_character", "=", "\"<\"", ")", ":", "\n", "    ", "\"\"\"Read and unpack the next bytes from a binary file.\n    :param fid:\n    :param num_bytes: Sum of combination of {2, 4, 8}, e.g. 2, 6, 16, 30, etc.\n    :param format_char_sequence: List of {c, e, f, d, h, H, i, I, l, L, q, Q}.\n    :param endian_character: Any of {@, =, <, >, !}\n    :return: Tuple of read and unpacked values.\n    \"\"\"", "\n", "data", "=", "fid", ".", "read", "(", "num_bytes", ")", "\n", "return", "struct", ".", "unpack", "(", "endian_character", "+", "format_char_sequence", ",", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.read_cameras_text": [[98, 126], ["open", "fid.readline", "line.strip.strip", "line.strip.split", "int", "int", "int", "numpy.array", "Camera", "len", "tuple", "map"], "function", ["None"], ["", "def", "read_cameras_text", "(", "path", ")", ":", "\n", "    ", "\"\"\"\n    see: src/base/reconstruction.cc\n        void Reconstruction::WriteCamerasText(const std::string& path)\n        void Reconstruction::ReadCamerasText(const std::string& path)\n    \"\"\"", "\n", "cameras", "=", "{", "}", "\n", "with", "open", "(", "path", ",", "\"r\"", ")", "as", "fid", ":", "\n", "        ", "while", "True", ":", "\n", "            ", "line", "=", "fid", ".", "readline", "(", ")", "\n", "if", "not", "line", ":", "\n", "                ", "break", "\n", "", "line", "=", "line", ".", "strip", "(", ")", "\n", "if", "len", "(", "line", ")", ">", "0", "and", "line", "[", "0", "]", "!=", "\"#\"", ":", "\n", "                ", "elems", "=", "line", ".", "split", "(", ")", "\n", "camera_id", "=", "int", "(", "elems", "[", "0", "]", ")", "\n", "model", "=", "elems", "[", "1", "]", "\n", "width", "=", "int", "(", "elems", "[", "2", "]", ")", "\n", "height", "=", "int", "(", "elems", "[", "3", "]", ")", "\n", "params", "=", "np", ".", "array", "(", "tuple", "(", "map", "(", "float", ",", "elems", "[", "4", ":", "]", ")", ")", ")", "\n", "cameras", "[", "camera_id", "]", "=", "Camera", "(", "\n", "id", "=", "camera_id", ",", "\n", "model", "=", "model", ",", "\n", "width", "=", "width", ",", "\n", "height", "=", "height", ",", "\n", "params", "=", "params", ",", "\n", ")", "\n", "", "", "", "return", "cameras", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.read_cameras_binary": [[128, 161], ["open", "range", "colmap.read_next_bytes", "colmap.read_next_bytes", "colmap.read_next_bytes", "Camera", "len", "numpy.array"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.read_next_bytes", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.read_next_bytes", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.read_next_bytes"], ["", "def", "read_cameras_binary", "(", "path_to_model_file", ")", ":", "\n", "    ", "\"\"\"\n    see: src/base/reconstruction.cc\n        void Reconstruction::WriteCamerasBinary(const std::string& path)\n        void Reconstruction::ReadCamerasBinary(const std::string& path)\n    \"\"\"", "\n", "cameras", "=", "{", "}", "\n", "with", "open", "(", "path_to_model_file", ",", "\"rb\"", ")", "as", "fid", ":", "\n", "        ", "num_cameras", "=", "read_next_bytes", "(", "fid", ",", "8", ",", "\"Q\"", ")", "[", "0", "]", "\n", "for", "camera_line_index", "in", "range", "(", "num_cameras", ")", ":", "\n", "            ", "camera_properties", "=", "read_next_bytes", "(", "\n", "fid", ",", "num_bytes", "=", "24", ",", "format_char_sequence", "=", "\"iiQQ\"", "\n", ")", "\n", "camera_id", "=", "camera_properties", "[", "0", "]", "\n", "model_id", "=", "camera_properties", "[", "1", "]", "\n", "model_name", "=", "CAMERA_MODEL_IDS", "[", "camera_properties", "[", "1", "]", "]", ".", "model_name", "\n", "width", "=", "camera_properties", "[", "2", "]", "\n", "height", "=", "camera_properties", "[", "3", "]", "\n", "num_params", "=", "CAMERA_MODEL_IDS", "[", "model_id", "]", ".", "num_params", "\n", "params", "=", "read_next_bytes", "(", "\n", "fid", ",", "\n", "num_bytes", "=", "8", "*", "num_params", ",", "\n", "format_char_sequence", "=", "\"d\"", "*", "num_params", ",", "\n", ")", "\n", "cameras", "[", "camera_id", "]", "=", "Camera", "(", "\n", "id", "=", "camera_id", ",", "\n", "model", "=", "model_name", ",", "\n", "width", "=", "width", ",", "\n", "height", "=", "height", ",", "\n", "params", "=", "np", ".", "array", "(", "params", ")", ",", "\n", ")", "\n", "", "assert", "len", "(", "cameras", ")", "==", "num_cameras", "\n", "", "return", "cameras", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.read_images_text": [[163, 201], ["open", "fid.readline", "line.strip.strip", "line.strip.split", "int", "numpy.array", "numpy.array", "int", "fid.readline().split", "numpy.column_stack", "numpy.array", "colmap.Image", "len", "tuple", "tuple", "tuple", "map", "map", "fid.readline", "tuple", "tuple", "map", "map", "map"], "function", ["None"], ["", "def", "read_images_text", "(", "path", ")", ":", "\n", "    ", "\"\"\"\n    see: src/base/reconstruction.cc\n        void Reconstruction::ReadImagesText(const std::string& path)\n        void Reconstruction::WriteImagesText(const std::string& path)\n    \"\"\"", "\n", "images", "=", "{", "}", "\n", "with", "open", "(", "path", ",", "\"r\"", ")", "as", "fid", ":", "\n", "        ", "while", "True", ":", "\n", "            ", "line", "=", "fid", ".", "readline", "(", ")", "\n", "if", "not", "line", ":", "\n", "                ", "break", "\n", "", "line", "=", "line", ".", "strip", "(", ")", "\n", "if", "len", "(", "line", ")", ">", "0", "and", "line", "[", "0", "]", "!=", "\"#\"", ":", "\n", "                ", "elems", "=", "line", ".", "split", "(", ")", "\n", "image_id", "=", "int", "(", "elems", "[", "0", "]", ")", "\n", "qvec", "=", "np", ".", "array", "(", "tuple", "(", "map", "(", "float", ",", "elems", "[", "1", ":", "5", "]", ")", ")", ")", "\n", "tvec", "=", "np", ".", "array", "(", "tuple", "(", "map", "(", "float", ",", "elems", "[", "5", ":", "8", "]", ")", ")", ")", "\n", "camera_id", "=", "int", "(", "elems", "[", "8", "]", ")", "\n", "image_name", "=", "elems", "[", "9", "]", "\n", "elems", "=", "fid", ".", "readline", "(", ")", ".", "split", "(", ")", "\n", "xys", "=", "np", ".", "column_stack", "(", "\n", "[", "\n", "tuple", "(", "map", "(", "float", ",", "elems", "[", "0", ":", ":", "3", "]", ")", ")", ",", "\n", "tuple", "(", "map", "(", "float", ",", "elems", "[", "1", ":", ":", "3", "]", ")", ")", ",", "\n", "]", "\n", ")", "\n", "point3D_ids", "=", "np", ".", "array", "(", "tuple", "(", "map", "(", "int", ",", "elems", "[", "2", ":", ":", "3", "]", ")", ")", ")", "\n", "images", "[", "image_id", "]", "=", "Image", "(", "\n", "id", "=", "image_id", ",", "\n", "qvec", "=", "qvec", ",", "\n", "tvec", "=", "tvec", ",", "\n", "camera_id", "=", "camera_id", ",", "\n", "name", "=", "image_name", ",", "\n", "xys", "=", "xys", ",", "\n", "point3D_ids", "=", "point3D_ids", ",", "\n", ")", "\n", "", "", "", "return", "images", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.read_images_binary": [[203, 250], ["open", "range", "colmap.read_next_bytes", "colmap.read_next_bytes", "numpy.array", "numpy.array", "colmap.read_next_bytes", "numpy.column_stack", "numpy.array", "colmap.Image", "colmap.read_next_bytes", "current_char.decode", "colmap.read_next_bytes", "tuple", "colmap.read_next_bytes", "tuple", "tuple", "map", "map", "map"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.read_next_bytes", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.read_next_bytes", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.read_next_bytes", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.read_next_bytes", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.read_next_bytes", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.read_next_bytes"], ["", "def", "read_images_binary", "(", "path_to_model_file", ")", ":", "\n", "    ", "\"\"\"\n    see: src/base/reconstruction.cc\n        void Reconstruction::ReadImagesBinary(const std::string& path)\n        void Reconstruction::WriteImagesBinary(const std::string& path)\n    \"\"\"", "\n", "images", "=", "{", "}", "\n", "with", "open", "(", "path_to_model_file", ",", "\"rb\"", ")", "as", "fid", ":", "\n", "        ", "num_reg_images", "=", "read_next_bytes", "(", "fid", ",", "8", ",", "\"Q\"", ")", "[", "0", "]", "\n", "for", "image_index", "in", "range", "(", "num_reg_images", ")", ":", "\n", "            ", "binary_image_properties", "=", "read_next_bytes", "(", "\n", "fid", ",", "num_bytes", "=", "64", ",", "format_char_sequence", "=", "\"idddddddi\"", "\n", ")", "\n", "image_id", "=", "binary_image_properties", "[", "0", "]", "\n", "qvec", "=", "np", ".", "array", "(", "binary_image_properties", "[", "1", ":", "5", "]", ")", "\n", "tvec", "=", "np", ".", "array", "(", "binary_image_properties", "[", "5", ":", "8", "]", ")", "\n", "camera_id", "=", "binary_image_properties", "[", "8", "]", "\n", "image_name", "=", "\"\"", "\n", "current_char", "=", "read_next_bytes", "(", "fid", ",", "1", ",", "\"c\"", ")", "[", "0", "]", "\n", "while", "current_char", "!=", "b\"\\x00\"", ":", "# look for the ASCII 0 entry", "\n", "                ", "image_name", "+=", "current_char", ".", "decode", "(", "\"utf-8\"", ")", "\n", "current_char", "=", "read_next_bytes", "(", "fid", ",", "1", ",", "\"c\"", ")", "[", "0", "]", "\n", "", "num_points2D", "=", "read_next_bytes", "(", "\n", "fid", ",", "num_bytes", "=", "8", ",", "format_char_sequence", "=", "\"Q\"", "\n", ")", "[", "0", "]", "\n", "x_y_id_s", "=", "read_next_bytes", "(", "\n", "fid", ",", "\n", "num_bytes", "=", "24", "*", "num_points2D", ",", "\n", "format_char_sequence", "=", "\"ddq\"", "*", "num_points2D", ",", "\n", ")", "\n", "xys", "=", "np", ".", "column_stack", "(", "\n", "[", "\n", "tuple", "(", "map", "(", "float", ",", "x_y_id_s", "[", "0", ":", ":", "3", "]", ")", ")", ",", "\n", "tuple", "(", "map", "(", "float", ",", "x_y_id_s", "[", "1", ":", ":", "3", "]", ")", ")", ",", "\n", "]", "\n", ")", "\n", "point3D_ids", "=", "np", ".", "array", "(", "tuple", "(", "map", "(", "int", ",", "x_y_id_s", "[", "2", ":", ":", "3", "]", ")", ")", ")", "\n", "images", "[", "image_id", "]", "=", "Image", "(", "\n", "id", "=", "image_id", ",", "\n", "qvec", "=", "qvec", ",", "\n", "tvec", "=", "tvec", ",", "\n", "camera_id", "=", "camera_id", ",", "\n", "name", "=", "image_name", ",", "\n", "xys", "=", "xys", ",", "\n", "point3D_ids", "=", "point3D_ids", ",", "\n", ")", "\n", "", "", "return", "images", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.read_points3D_text": [[252, 282], ["open", "fid.readline", "line.strip.strip", "line.strip.split", "int", "numpy.array", "numpy.array", "float", "numpy.array", "numpy.array", "Point3D", "len", "tuple", "tuple", "tuple", "tuple", "map", "map", "map", "map"], "function", ["None"], ["", "def", "read_points3D_text", "(", "path", ")", ":", "\n", "    ", "\"\"\"\n    see: src/base/reconstruction.cc\n        void Reconstruction::ReadPoints3DText(const std::string& path)\n        void Reconstruction::WritePoints3DText(const std::string& path)\n    \"\"\"", "\n", "points3D", "=", "{", "}", "\n", "with", "open", "(", "path", ",", "\"r\"", ")", "as", "fid", ":", "\n", "        ", "while", "True", ":", "\n", "            ", "line", "=", "fid", ".", "readline", "(", ")", "\n", "if", "not", "line", ":", "\n", "                ", "break", "\n", "", "line", "=", "line", ".", "strip", "(", ")", "\n", "if", "len", "(", "line", ")", ">", "0", "and", "line", "[", "0", "]", "!=", "\"#\"", ":", "\n", "                ", "elems", "=", "line", ".", "split", "(", ")", "\n", "point3D_id", "=", "int", "(", "elems", "[", "0", "]", ")", "\n", "xyz", "=", "np", ".", "array", "(", "tuple", "(", "map", "(", "float", ",", "elems", "[", "1", ":", "4", "]", ")", ")", ")", "\n", "rgb", "=", "np", ".", "array", "(", "tuple", "(", "map", "(", "int", ",", "elems", "[", "4", ":", "7", "]", ")", ")", ")", "\n", "error", "=", "float", "(", "elems", "[", "7", "]", ")", "\n", "image_ids", "=", "np", ".", "array", "(", "tuple", "(", "map", "(", "int", ",", "elems", "[", "8", ":", ":", "2", "]", ")", ")", ")", "\n", "point2D_idxs", "=", "np", ".", "array", "(", "tuple", "(", "map", "(", "int", ",", "elems", "[", "9", ":", ":", "2", "]", ")", ")", ")", "\n", "points3D", "[", "point3D_id", "]", "=", "Point3D", "(", "\n", "id", "=", "point3D_id", ",", "\n", "xyz", "=", "xyz", ",", "\n", "rgb", "=", "rgb", ",", "\n", "error", "=", "error", ",", "\n", "image_ids", "=", "image_ids", ",", "\n", "point2D_idxs", "=", "point2D_idxs", ",", "\n", ")", "\n", "", "", "", "return", "points3D", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.read_points3d_binary": [[284, 320], ["open", "range", "colmap.read_next_bytes", "colmap.read_next_bytes", "numpy.array", "numpy.array", "numpy.array", "colmap.read_next_bytes", "numpy.array", "numpy.array", "Point3D", "colmap.read_next_bytes", "tuple", "tuple", "map", "map"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.read_next_bytes", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.read_next_bytes", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.read_next_bytes", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.read_next_bytes"], ["", "def", "read_points3d_binary", "(", "path_to_model_file", ")", ":", "\n", "    ", "\"\"\"\n    see: src/base/reconstruction.cc\n        void Reconstruction::ReadPoints3DBinary(const std::string& path)\n        void Reconstruction::WritePoints3DBinary(const std::string& path)\n    \"\"\"", "\n", "points3D", "=", "{", "}", "\n", "with", "open", "(", "path_to_model_file", ",", "\"rb\"", ")", "as", "fid", ":", "\n", "        ", "num_points", "=", "read_next_bytes", "(", "fid", ",", "8", ",", "\"Q\"", ")", "[", "0", "]", "\n", "for", "point_line_index", "in", "range", "(", "num_points", ")", ":", "\n", "            ", "binary_point_line_properties", "=", "read_next_bytes", "(", "\n", "fid", ",", "num_bytes", "=", "43", ",", "format_char_sequence", "=", "\"QdddBBBd\"", "\n", ")", "\n", "point3D_id", "=", "binary_point_line_properties", "[", "0", "]", "\n", "xyz", "=", "np", ".", "array", "(", "binary_point_line_properties", "[", "1", ":", "4", "]", ")", "\n", "rgb", "=", "np", ".", "array", "(", "binary_point_line_properties", "[", "4", ":", "7", "]", ")", "\n", "error", "=", "np", ".", "array", "(", "binary_point_line_properties", "[", "7", "]", ")", "\n", "track_length", "=", "read_next_bytes", "(", "\n", "fid", ",", "num_bytes", "=", "8", ",", "format_char_sequence", "=", "\"Q\"", "\n", ")", "[", "0", "]", "\n", "track_elems", "=", "read_next_bytes", "(", "\n", "fid", ",", "\n", "num_bytes", "=", "8", "*", "track_length", ",", "\n", "format_char_sequence", "=", "\"ii\"", "*", "track_length", ",", "\n", ")", "\n", "image_ids", "=", "np", ".", "array", "(", "tuple", "(", "map", "(", "int", ",", "track_elems", "[", "0", ":", ":", "2", "]", ")", ")", ")", "\n", "point2D_idxs", "=", "np", ".", "array", "(", "tuple", "(", "map", "(", "int", ",", "track_elems", "[", "1", ":", ":", "2", "]", ")", ")", ")", "\n", "points3D", "[", "point3D_id", "]", "=", "Point3D", "(", "\n", "id", "=", "point3D_id", ",", "\n", "xyz", "=", "xyz", ",", "\n", "rgb", "=", "rgb", ",", "\n", "error", "=", "error", ",", "\n", "image_ids", "=", "image_ids", ",", "\n", "point2D_idxs", "=", "point2D_idxs", ",", "\n", ")", "\n", "", "", "return", "points3D", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.array_to_blob": [[322, 327], ["array.tostring", "numpy.getbuffer"], "function", ["None"], ["", "def", "array_to_blob", "(", "array", ")", ":", "\n", "    ", "if", "sys", ".", "version_info", "[", "0", "]", ">=", "3", ":", "\n", "        ", "return", "array", ".", "tostring", "(", ")", "\n", "", "else", ":", "\n", "        ", "return", "np", ".", "getbuffer", "(", "array", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.blob_to_array": [[329, 334], ["numpy.fromstring().reshape", "numpy.frombuffer().reshape", "numpy.fromstring", "numpy.frombuffer"], "function", ["None"], ["", "", "def", "blob_to_array", "(", "blob", ",", "dtype", ",", "shape", "=", "(", "-", "1", ",", ")", ")", ":", "\n", "    ", "if", "sys", ".", "version_info", "[", "0", "]", ">=", "3", ":", "\n", "        ", "return", "np", ".", "fromstring", "(", "blob", ",", "dtype", "=", "dtype", ")", ".", "reshape", "(", "*", "shape", ")", "\n", "", "else", ":", "\n", "        ", "return", "np", ".", "frombuffer", "(", "blob", ",", "dtype", "=", "dtype", ")", ".", "reshape", "(", "*", "shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.read_array": [[336, 353], ["np.fromfile.reshape", "numpy.transpose().squeeze", "open", "numpy.genfromtxt", "fid.seek", "fid.read", "numpy.fromfile", "fid.read", "numpy.transpose"], "function", ["None"], ["", "", "def", "read_array", "(", "path", ")", ":", "\n", "    ", "with", "open", "(", "path", ",", "\"rb\"", ")", "as", "fid", ":", "\n", "        ", "width", ",", "height", ",", "channels", "=", "np", ".", "genfromtxt", "(", "\n", "fid", ",", "delimiter", "=", "\"&\"", ",", "max_rows", "=", "1", ",", "usecols", "=", "(", "0", ",", "1", ",", "2", ")", ",", "dtype", "=", "int", "\n", ")", "\n", "fid", ".", "seek", "(", "0", ")", "\n", "num_delimiter", "=", "0", "\n", "byte", "=", "fid", ".", "read", "(", "1", ")", "\n", "while", "True", ":", "\n", "            ", "if", "byte", "==", "b\"&\"", ":", "\n", "                ", "num_delimiter", "+=", "1", "\n", "if", "num_delimiter", ">=", "3", ":", "\n", "                    ", "break", "\n", "", "", "byte", "=", "fid", ".", "read", "(", "1", ")", "\n", "", "array", "=", "np", ".", "fromfile", "(", "fid", ",", "np", ".", "float32", ")", "\n", "", "array", "=", "array", ".", "reshape", "(", "(", "width", ",", "height", ",", "channels", ")", ",", "order", "=", "\"F\"", ")", "\n", "return", "np", ".", "transpose", "(", "array", ",", "(", "1", ",", "0", ",", "2", ")", ")", ".", "squeeze", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.write_array": [[355, 364], ["len", "shape_str.append", "open", "fp.write", "arr.tofile", "shape_str.encode"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append"], ["", "def", "write_array", "(", "p", ",", "arr", ")", ":", "\n", "    ", "arr", "\n", "shape_str", "=", "[", "f\"{s}&\"", "for", "s", "in", "[", "arr", ".", "shape", "[", "1", "]", ",", "arr", ".", "shape", "[", "0", "]", ",", "*", "arr", ".", "shape", "[", "2", ":", "]", "]", "]", "\n", "while", "len", "(", "shape_str", ")", "<", "3", ":", "\n", "        ", "shape_str", ".", "append", "(", "\"1&\"", ")", "\n", "", "shape_str", "=", "\"\"", ".", "join", "(", "shape_str", ")", "\n", "with", "open", "(", "p", ",", "\"wb\"", ")", "as", "fp", ":", "\n", "        ", "fp", ".", "write", "(", "shape_str", ".", "encode", "(", "\"latin1\"", ")", ")", "\n", "arr", ".", "tofile", "(", "fp", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.write_next_bytes": [[366, 372], ["isinstance", "fid.write", "struct.pack", "struct.pack"], "function", ["None"], ["", "", "def", "write_next_bytes", "(", "fid", ",", "data", ",", "format_char_sequence", ",", "endian_character", "=", "\"<\"", ")", ":", "\n", "    ", "if", "isinstance", "(", "data", ",", "(", "list", ",", "tuple", ")", ")", ":", "\n", "        ", "bytes", "=", "struct", ".", "pack", "(", "endian_character", "+", "format_char_sequence", ",", "*", "data", ")", "\n", "", "else", ":", "\n", "        ", "bytes", "=", "struct", ".", "pack", "(", "endian_character", "+", "format_char_sequence", ",", "data", ")", "\n", "", "fid", ".", "write", "(", "bytes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.write_cameras_text": [[374, 380], ["open", "cameras.items", "fp.write", "str"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.Metric.items"], ["", "def", "write_cameras_text", "(", "out_path", ",", "cameras", ")", ":", "\n", "    ", "with", "open", "(", "out_path", ",", "\"w\"", ")", "as", "fp", ":", "\n", "        ", "for", "id", ",", "camera", "in", "cameras", ".", "items", "(", ")", ":", "\n", "            ", "params", "=", "[", "str", "(", "v", ")", "for", "v", "in", "camera", ".", "params", "]", "\n", "fp", ".", "write", "(", "\n", "f'{camera.id} {camera.model} {camera.width} {camera.height} {\" \".join(params)}\\n'", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.write_cameras_binary": [[383, 393], ["open", "colmap.write_next_bytes", "cameras.items", "len", "colmap.write_next_bytes", "colmap.write_next_bytes", "float"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.write_next_bytes", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.Metric.items", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.write_next_bytes", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.write_next_bytes"], ["", "", "", "def", "write_cameras_binary", "(", "out_path", ",", "cameras", ")", ":", "\n", "    ", "with", "open", "(", "out_path", ",", "\"wb\"", ")", "as", "fid", ":", "\n", "        ", "write_next_bytes", "(", "fid", ",", "len", "(", "cameras", ")", ",", "\"Q\"", ")", "\n", "for", "_", ",", "cam", "in", "cameras", ".", "items", "(", ")", ":", "\n", "            ", "model_id", "=", "CAMERA_MODEL_NAMES", "[", "cam", ".", "model", "]", ".", "model_id", "\n", "camera_properties", "=", "[", "cam", ".", "id", ",", "model_id", ",", "cam", ".", "width", ",", "cam", ".", "height", "]", "\n", "write_next_bytes", "(", "fid", ",", "camera_properties", ",", "\"iiQQ\"", ")", "\n", "for", "p", "in", "cam", ".", "params", ":", "\n", "                ", "write_next_bytes", "(", "fid", ",", "float", "(", "p", ")", ",", "\"d\"", ")", "\n", "", "", "", "return", "cameras", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.write_images_text": [[395, 406], ["open", "images.items", "fp.write", "zip", "fp.write", "image_callback", "fp.write"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.Metric.items"], ["", "def", "write_images_text", "(", "out_path", ",", "images", ",", "image_callback", "=", "None", ")", ":", "\n", "    ", "with", "open", "(", "out_path", ",", "\"w\"", ")", "as", "fp", ":", "\n", "        ", "for", "id", ",", "image", "in", "images", ".", "items", "(", ")", ":", "\n", "            ", "if", "image_callback", "is", "not", "None", ":", "\n", "                ", "image", "=", "image_callback", "(", "image", ")", "\n", "", "fp", ".", "write", "(", "\n", "f\"{image.id} {image.qvec[0]} {image.qvec[1]} {image.qvec[2]} {image.qvec[3]} {image.tvec[0]} {image.tvec[1]} {image.tvec[2]} {image.camera_id} {image.name}\\n\"", "\n", ")", "\n", "for", "xy", ",", "pid", "in", "zip", "(", "image", ".", "xys", ",", "image", ".", "point3D_ids", ")", ":", "\n", "                ", "fp", ".", "write", "(", "f\"{xy[0]} {xy[1]} {pid} \"", ")", "\n", "", "fp", ".", "write", "(", "\"\\n\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.write_images_binary": [[408, 422], ["open", "colmap.write_next_bytes", "images.items", "len", "colmap.write_next_bytes", "colmap.write_next_bytes", "colmap.write_next_bytes", "colmap.write_next_bytes", "colmap.write_next_bytes", "colmap.write_next_bytes", "zip", "img.qvec.tolist", "img.tvec.tolist", "colmap.write_next_bytes", "len", "colmap.write_next_bytes", "char.encode"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.write_next_bytes", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.Metric.items", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.write_next_bytes", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.write_next_bytes", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.write_next_bytes", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.write_next_bytes", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.write_next_bytes", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.write_next_bytes", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.write_next_bytes", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.write_next_bytes"], ["", "", "", "def", "write_images_binary", "(", "out_path", ",", "images", ")", ":", "\n", "    ", "with", "open", "(", "out_path", ",", "\"wb\"", ")", "as", "fid", ":", "\n", "        ", "write_next_bytes", "(", "fid", ",", "len", "(", "images", ")", ",", "\"Q\"", ")", "\n", "for", "_", ",", "img", "in", "images", ".", "items", "(", ")", ":", "\n", "            ", "write_next_bytes", "(", "fid", ",", "img", ".", "id", ",", "\"i\"", ")", "\n", "write_next_bytes", "(", "fid", ",", "img", ".", "qvec", ".", "tolist", "(", ")", ",", "\"dddd\"", ")", "\n", "write_next_bytes", "(", "fid", ",", "img", ".", "tvec", ".", "tolist", "(", ")", ",", "\"ddd\"", ")", "\n", "write_next_bytes", "(", "fid", ",", "img", ".", "camera_id", ",", "\"i\"", ")", "\n", "for", "char", "in", "img", ".", "name", ":", "\n", "                ", "write_next_bytes", "(", "fid", ",", "char", ".", "encode", "(", "\"utf-8\"", ")", ",", "\"c\"", ")", "\n", "", "write_next_bytes", "(", "fid", ",", "b\"\\x00\"", ",", "\"c\"", ")", "\n", "write_next_bytes", "(", "fid", ",", "len", "(", "img", ".", "point3D_ids", ")", ",", "\"Q\"", ")", "\n", "for", "xy", ",", "p3d_id", "in", "zip", "(", "img", ".", "xys", ",", "img", ".", "point3D_ids", ")", ":", "\n", "                ", "write_next_bytes", "(", "fid", ",", "[", "*", "xy", ",", "p3d_id", "]", ",", "\"ddq\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.write_points3D_text": [[424, 435], ["open", "points3D.items", "fp.write", "zip", "fp.write", "fp.write"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.Metric.items"], ["", "", "", "", "def", "write_points3D_text", "(", "out_path", ",", "points3D", ")", ":", "\n", "    ", "with", "open", "(", "out_path", ",", "\"w\"", ")", "as", "fp", ":", "\n", "        ", "for", "id", ",", "point", "in", "points3D", ".", "items", "(", ")", ":", "\n", "            ", "fp", ".", "write", "(", "\n", "f\"{point.id} {point.xyz[0]} {point.xyz[1]} {point.xyz[2]} {point.rgb[0]} {point.rgb[1]} {point.rgb[2]} {point.error}\"", "\n", ")", "\n", "for", "image_id", ",", "point2d_idx", "in", "zip", "(", "\n", "point", ".", "image_ids", ",", "point", ".", "point2D_idxs", "\n", ")", ":", "\n", "                ", "fp", ".", "write", "(", "f\" {image_id} {point2d_idx}\"", ")", "\n", "", "fp", ".", "write", "(", "\"\\n\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.write_points3D_binary": [[437, 449], ["open", "colmap.write_next_bytes", "points3D.items", "len", "colmap.write_next_bytes", "colmap.write_next_bytes", "colmap.write_next_bytes", "colmap.write_next_bytes", "colmap.write_next_bytes", "zip", "pt.xyz.tolist", "pt.rgb.tolist", "colmap.write_next_bytes"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.write_next_bytes", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.Metric.items", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.write_next_bytes", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.write_next_bytes", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.write_next_bytes", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.write_next_bytes", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.write_next_bytes", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.write_next_bytes"], ["", "", "", "def", "write_points3D_binary", "(", "out_path", ",", "points3D", ")", ":", "\n", "    ", "with", "open", "(", "out_path", ",", "\"wb\"", ")", "as", "fid", ":", "\n", "        ", "write_next_bytes", "(", "fid", ",", "len", "(", "points3D", ")", ",", "\"Q\"", ")", "\n", "for", "_", ",", "pt", "in", "points3D", ".", "items", "(", ")", ":", "\n", "            ", "write_next_bytes", "(", "fid", ",", "pt", ".", "id", ",", "\"Q\"", ")", "\n", "write_next_bytes", "(", "fid", ",", "pt", ".", "xyz", ".", "tolist", "(", ")", ",", "\"ddd\"", ")", "\n", "write_next_bytes", "(", "fid", ",", "pt", ".", "rgb", ".", "tolist", "(", ")", ",", "\"BBB\"", ")", "\n", "write_next_bytes", "(", "fid", ",", "pt", ".", "error", ",", "\"d\"", ")", "\n", "track_length", "=", "pt", ".", "image_ids", ".", "shape", "[", "0", "]", "\n", "write_next_bytes", "(", "fid", ",", "track_length", ",", "\"Q\"", ")", "\n", "for", "image_id", ",", "point2D_id", "in", "zip", "(", "pt", ".", "image_ids", ",", "pt", ".", "point2D_idxs", ")", ":", "\n", "                ", "write_next_bytes", "(", "fid", ",", "[", "image_id", ",", "point2D_id", "]", ",", "\"ii\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.rotm_from_quat": [[451, 476], ["q.reshape.reshape", "numpy.array", "R.transpose.transpose", "R.transpose.squeeze"], "function", ["None"], ["", "", "", "", "def", "rotm_from_quat", "(", "q", ")", ":", "\n", "    ", "q", "=", "q", ".", "reshape", "(", "-", "1", ",", "4", ")", "\n", "w", ",", "x", ",", "y", ",", "z", "=", "q", "[", ":", ",", "0", "]", ",", "q", "[", ":", ",", "1", "]", ",", "q", "[", ":", ",", "2", "]", ",", "q", "[", ":", ",", "3", "]", "\n", "R", "=", "np", ".", "array", "(", "\n", "[", "\n", "[", "\n", "1", "-", "2", "*", "y", "*", "y", "-", "2", "*", "z", "*", "z", ",", "\n", "2", "*", "x", "*", "y", "-", "2", "*", "z", "*", "w", ",", "\n", "2", "*", "x", "*", "z", "+", "2", "*", "y", "*", "w", ",", "\n", "]", ",", "\n", "[", "\n", "2", "*", "x", "*", "y", "+", "2", "*", "z", "*", "w", ",", "\n", "1", "-", "2", "*", "x", "*", "x", "-", "2", "*", "z", "*", "z", ",", "\n", "2", "*", "y", "*", "z", "-", "2", "*", "x", "*", "w", ",", "\n", "]", ",", "\n", "[", "\n", "2", "*", "x", "*", "z", "-", "2", "*", "y", "*", "w", ",", "\n", "2", "*", "y", "*", "z", "+", "2", "*", "x", "*", "w", ",", "\n", "1", "-", "2", "*", "x", "*", "x", "-", "2", "*", "y", "*", "y", ",", "\n", "]", ",", "\n", "]", ",", "\n", "dtype", "=", "q", ".", "dtype", ",", "\n", ")", "\n", "R", "=", "R", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "return", "R", ".", "squeeze", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.quat_from_rotm": [[478, 514], ["R.reshape.reshape", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.empty", "numpy.empty", "numpy.empty", "numpy.empty", "numpy.linalg.norm", "q.squeeze", "numpy.maximum", "numpy.maximum", "numpy.maximum", "numpy.maximum", "numpy.sign", "numpy.sign", "numpy.sign", "numpy.sign", "numpy.sign", "numpy.sign", "numpy.sign", "numpy.sign", "numpy.sign", "numpy.sign", "numpy.sign", "numpy.sign"], "function", ["None"], ["", "def", "quat_from_rotm", "(", "R", ")", ":", "\n", "# # http://muri.materials.cmu.edu/wp-content/uploads/2015/06/RotationPaperRevised.pdf", "\n", "# https://en.wikipedia.org/wiki/Rotation_matrix#Quaternion", "\n", "# http://www.iri.upc.edu/files/scidoc/2083-A-Survey-on-the-Computation-of-Quaternions-from-Rotation-Matrices.pdf", "\n", "# https://d3cw3dd2w32x2b.cloudfront.net/wp-content/uploads/2015/01/matrix-to-quat.pdf", "\n", "    ", "R", "=", "R", ".", "reshape", "(", "-", "1", ",", "3", ",", "3", ")", "\n", "w", "=", "np", ".", "sqrt", "(", "np", ".", "maximum", "(", "0", ",", "1", "+", "R", "[", ":", ",", "0", ",", "0", "]", "+", "R", "[", ":", ",", "1", ",", "1", "]", "+", "R", "[", ":", ",", "2", ",", "2", "]", ")", ")", "\n", "x", "=", "np", ".", "sqrt", "(", "np", ".", "maximum", "(", "0", ",", "1", "+", "R", "[", ":", ",", "0", ",", "0", "]", "-", "R", "[", ":", ",", "1", ",", "1", "]", "-", "R", "[", ":", ",", "2", ",", "2", "]", ")", ")", "\n", "y", "=", "np", ".", "sqrt", "(", "np", ".", "maximum", "(", "0", ",", "1", "-", "R", "[", ":", ",", "0", ",", "0", "]", "+", "R", "[", ":", ",", "1", ",", "1", "]", "-", "R", "[", ":", ",", "2", ",", "2", "]", ")", ")", "\n", "z", "=", "np", ".", "sqrt", "(", "np", ".", "maximum", "(", "0", ",", "1", "-", "R", "[", ":", ",", "0", ",", "0", "]", "-", "R", "[", ":", ",", "1", ",", "1", "]", "+", "R", "[", ":", ",", "2", ",", "2", "]", ")", ")", "\n", "q0", "=", "np", ".", "empty", "(", "(", "R", ".", "shape", "[", "0", "]", ",", "4", ")", ",", "dtype", "=", "R", ".", "dtype", ")", "\n", "q0", "[", ":", ",", "0", "]", "=", "w", "\n", "q0", "[", ":", ",", "1", "]", "=", "x", "*", "np", ".", "sign", "(", "x", "*", "(", "R", "[", ":", ",", "2", ",", "1", "]", "-", "R", "[", ":", ",", "1", ",", "2", "]", ")", ")", "\n", "q0", "[", ":", ",", "2", "]", "=", "y", "*", "np", ".", "sign", "(", "y", "*", "(", "R", "[", ":", ",", "0", ",", "2", "]", "-", "R", "[", ":", ",", "2", ",", "0", "]", ")", ")", "\n", "q0", "[", ":", ",", "3", "]", "=", "z", "*", "np", ".", "sign", "(", "z", "*", "(", "R", "[", ":", ",", "1", ",", "0", "]", "-", "R", "[", ":", ",", "0", ",", "1", "]", ")", ")", "\n", "q1", "=", "np", ".", "empty", "(", "(", "R", ".", "shape", "[", "0", "]", ",", "4", ")", ",", "dtype", "=", "R", ".", "dtype", ")", "\n", "q1", "[", ":", ",", "0", "]", "=", "w", "*", "np", ".", "sign", "(", "w", "*", "(", "R", "[", ":", ",", "2", ",", "1", "]", "-", "R", "[", ":", ",", "1", ",", "2", "]", ")", ")", "\n", "q1", "[", ":", ",", "1", "]", "=", "x", "\n", "q1", "[", ":", ",", "2", "]", "=", "y", "*", "np", ".", "sign", "(", "y", "*", "(", "R", "[", ":", ",", "1", ",", "0", "]", "+", "R", "[", ":", ",", "0", ",", "1", "]", ")", ")", "\n", "q1", "[", ":", ",", "3", "]", "=", "z", "*", "np", ".", "sign", "(", "z", "*", "(", "R", "[", ":", ",", "0", ",", "2", "]", "+", "R", "[", ":", ",", "2", ",", "0", "]", ")", ")", "\n", "q2", "=", "np", ".", "empty", "(", "(", "R", ".", "shape", "[", "0", "]", ",", "4", ")", ",", "dtype", "=", "R", ".", "dtype", ")", "\n", "q2", "[", ":", ",", "0", "]", "=", "w", "*", "np", ".", "sign", "(", "w", "*", "(", "R", "[", ":", ",", "0", ",", "2", "]", "-", "R", "[", ":", ",", "2", ",", "0", "]", ")", ")", "\n", "q2", "[", ":", ",", "1", "]", "=", "x", "*", "np", ".", "sign", "(", "x", "*", "(", "R", "[", ":", ",", "0", ",", "1", "]", "+", "R", "[", ":", ",", "1", ",", "0", "]", ")", ")", "\n", "q2", "[", ":", ",", "2", "]", "=", "y", "\n", "q2", "[", ":", ",", "3", "]", "=", "z", "*", "np", ".", "sign", "(", "z", "*", "(", "R", "[", ":", ",", "1", ",", "2", "]", "+", "R", "[", ":", ",", "2", ",", "1", "]", ")", ")", "\n", "q3", "=", "np", ".", "empty", "(", "(", "R", ".", "shape", "[", "0", "]", ",", "4", ")", ",", "dtype", "=", "R", ".", "dtype", ")", "\n", "q3", "[", ":", ",", "0", "]", "=", "w", "*", "np", ".", "sign", "(", "w", "*", "(", "R", "[", ":", ",", "1", ",", "0", "]", "-", "R", "[", ":", ",", "0", ",", "1", "]", ")", ")", "\n", "q3", "[", ":", ",", "1", "]", "=", "x", "*", "np", ".", "sign", "(", "x", "*", "(", "R", "[", ":", ",", "0", ",", "2", "]", "+", "R", "[", ":", ",", "2", ",", "0", "]", ")", ")", "\n", "q3", "[", ":", ",", "2", "]", "=", "y", "*", "np", ".", "sign", "(", "y", "*", "(", "R", "[", ":", ",", "1", ",", "2", "]", "+", "R", "[", ":", ",", "2", ",", "1", "]", ")", ")", "\n", "q3", "[", ":", ",", "3", "]", "=", "z", "\n", "q", "=", "q0", "*", "(", "w", "[", ":", ",", "None", "]", ">", "0", ")", "+", "(", "w", "[", ":", ",", "None", "]", "==", "0", ")", "*", "(", "\n", "q1", "*", "(", "x", "[", ":", ",", "None", "]", ">", "0", ")", "\n", "+", "(", "x", "[", ":", ",", "None", "]", "==", "0", ")", "*", "(", "q2", "*", "(", "y", "[", ":", ",", "None", "]", ">", "0", ")", "+", "(", "y", "[", ":", ",", "None", "]", "==", "0", ")", "*", "(", "q3", ")", ")", "\n", ")", "\n", "q", "/=", "np", ".", "linalg", ".", "norm", "(", "q", ",", "axis", "=", "1", ",", "keepdims", "=", "True", ")", "\n", "return", "q", ".", "squeeze", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap._mvsnet_calc_score": [[1085, 1114], ["numpy.exp", "numpy.matmul", "numpy.matmul", "numpy.arccos", "[].transpose", "[].transpose", "numpy.linalg.norm", "numpy.dot", "numpy.linalg.norm"], "function", ["None"], ["", "", "def", "_mvsnet_calc_score", "(", "inputs", ")", ":", "\n", "    ", "image_id0", ",", "image_id1", ",", "images", ",", "points3d", ",", "extrinsic", ",", "theta0", ",", "sigma1", ",", "sigma2", "=", "(", "\n", "inputs", "\n", ")", "\n", "id_i", "=", "images", "[", "image_id0", "]", ".", "point3D_ids", "\n", "id_j", "=", "images", "[", "image_id1", "]", ".", "point3D_ids", "\n", "id_intersect", "=", "[", "it", "for", "it", "in", "id_i", "if", "it", "in", "id_j", "]", "\n", "cam_center_i", "=", "-", "np", ".", "matmul", "(", "\n", "extrinsic", "[", "image_id0", "]", "[", ":", "3", ",", ":", "3", "]", ".", "transpose", "(", ")", ",", "extrinsic", "[", "image_id0", "]", "[", ":", "3", ",", "3", ":", "4", "]", "\n", ")", "[", ":", ",", "0", "]", "\n", "cam_center_j", "=", "-", "np", ".", "matmul", "(", "\n", "extrinsic", "[", "image_id1", "]", "[", ":", "3", ",", ":", "3", "]", ".", "transpose", "(", ")", ",", "extrinsic", "[", "image_id1", "]", "[", ":", "3", ",", "3", ":", "4", "]", "\n", ")", "[", ":", ",", "0", "]", "\n", "score", "=", "0", "\n", "for", "pid", "in", "id_intersect", ":", "\n", "        ", "if", "pid", "==", "-", "1", ":", "\n", "            ", "continue", "\n", "", "p", "=", "points3d", "[", "pid", "]", ".", "xyz", "\n", "theta", "=", "(", "180", "/", "np", ".", "pi", ")", "*", "np", ".", "arccos", "(", "\n", "np", ".", "dot", "(", "cam_center_i", "-", "p", ",", "cam_center_j", "-", "p", ")", "\n", "/", "np", ".", "linalg", ".", "norm", "(", "cam_center_i", "-", "p", ")", "\n", "/", "np", ".", "linalg", ".", "norm", "(", "cam_center_j", "-", "p", ")", "\n", ")", "\n", "score", "+=", "np", ".", "exp", "(", "\n", "-", "(", "theta", "-", "theta0", ")", "\n", "*", "(", "theta", "-", "theta0", ")", "\n", "/", "(", "2", "*", "(", "sigma1", "if", "theta", "<=", "theta0", "else", "sigma2", ")", "**", "2", ")", "\n", ")", "\n", "", "return", "image_id0", ",", "image_id1", ",", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.mvsnet_from_colmap_dense": [[1116, 1190], ["pathlib.Path", "pathlib.Path", "print", "sorted", "im_out_dir.mkdir", "enumerate", "print", "colmap.Colmap", "colmap.Colmap.mvsnet_parameters", "print", "colmap.load_cameras", "cam_out_dir.mkdir", "enumerate", "print", "shutil.copyfile", "numpy.eye", "open", "fp.write", "enumerate", "open", "fp.write", "fp.write", "fp.write", "fp.write", "fp.write", "fp.write", "fp.write", "fp.write", "fp.write", "fp.write", "fp.write", "fp.write", "fp.write", "fp.write", "nbs.items", "fp.write", "fp.write", "map", "len", "sorted", "map", "map", "map", "map", "map", "map", "map", "scores[].items"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.Colmap.mvsnet_parameters", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.load_cameras", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.Metric.items", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.Metric.items"], ["", "def", "mvsnet_from_colmap_dense", "(", "\n", "dense_dir", ",", "\n", "out_dir", ",", "\n", "max_d", "=", "0", ",", "\n", "interval_scale", "=", "1", ",", "\n", "theta0", "=", "5", ",", "\n", "sigma1", "=", "1", ",", "\n", "sigma2", "=", "10", ",", "\n", "im_suffix", "=", "\".jpg\"", ",", "\n", ")", ":", "\n", "    ", "dense_dir", "=", "Path", "(", "dense_dir", ")", "\n", "out_dir", "=", "Path", "(", "out_dir", ")", "\n", "\n", "print", "(", "\"copy images\"", ")", "\n", "im_paths", "=", "sorted", "(", "(", "dense_dir", "/", "\"images\"", ")", ".", "glob", "(", "f\"*{im_suffix}\"", ")", ")", "\n", "im_out_dir", "=", "out_dir", "/", "\"images\"", "\n", "im_out_dir", ".", "mkdir", "(", "exist_ok", "=", "True", ",", "parents", "=", "True", ")", "\n", "im_name_to_idx", "=", "{", "}", "\n", "for", "idx", ",", "im_path", "in", "enumerate", "(", "im_paths", ")", ":", "\n", "        ", "im_name_to_idx", "[", "im_path", ".", "name", "]", "=", "idx", "\n", "shutil", ".", "copyfile", "(", "im_path", ",", "im_out_dir", "/", "f\"{idx:08d}{im_path.suffix}\"", ")", "\n", "\n", "", "print", "(", "\"compute params\"", ")", "\n", "colmap", "=", "Colmap", "(", "\"\"", ",", "dense_dir", ".", "parent", ",", "[", "]", ")", "\n", "depth_ranges", ",", "scores", "=", "colmap", ".", "mvsnet_parameters", "(", "\n", "max_d", "=", "max_d", ",", "\n", "interval_scale", "=", "interval_scale", ",", "\n", "theta0", "=", "theta0", ",", "\n", "sigma1", "=", "sigma1", ",", "\n", "sigma2", "=", "sigma2", ",", "\n", ")", "\n", "\n", "print", "(", "\"write cams\"", ")", "\n", "Ks", ",", "Rs", ",", "ts", "=", "load_cameras", "(", "dense_dir", "/", "\"sparse\"", ",", "im_paths", ")", "\n", "cam_out_dir", "=", "out_dir", "/", "\"cams\"", "\n", "cam_out_dir", ".", "mkdir", "(", "exist_ok", "=", "True", ",", "parents", "=", "True", ")", "\n", "for", "idx", ",", "im_path", "in", "enumerate", "(", "im_paths", ")", ":", "\n", "        ", "cam_path", "=", "cam_out_dir", "/", "f\"{idx:08}_cam.txt\"", "\n", "T", "=", "np", ".", "eye", "(", "4", ")", "\n", "T", "[", ":", "3", ",", ":", "3", "]", "=", "Rs", "[", "idx", "]", "\n", "T", "[", ":", "3", ",", "3", "]", "=", "ts", "[", "idx", "]", "\n", "with", "open", "(", "cam_path", ",", "\"w\"", ")", "as", "fp", ":", "\n", "            ", "fp", ".", "write", "(", "\"extrinsic\\n\"", ")", "\n", "fp", ".", "write", "(", "\" \"", ".", "join", "(", "map", "(", "str", ",", "T", "[", "0", "]", ")", ")", "+", "\"\\n\"", ")", "\n", "fp", ".", "write", "(", "\" \"", ".", "join", "(", "map", "(", "str", ",", "T", "[", "1", "]", ")", ")", "+", "\"\\n\"", ")", "\n", "fp", ".", "write", "(", "\" \"", ".", "join", "(", "map", "(", "str", ",", "T", "[", "2", "]", ")", ")", "+", "\"\\n\"", ")", "\n", "fp", ".", "write", "(", "\" \"", ".", "join", "(", "map", "(", "str", ",", "T", "[", "3", "]", ")", ")", "+", "\"\\n\"", ")", "\n", "fp", ".", "write", "(", "\"\\n\"", ")", "\n", "fp", ".", "write", "(", "\"intrinsic\\n\"", ")", "\n", "fp", ".", "write", "(", "\" \"", ".", "join", "(", "map", "(", "str", ",", "Ks", "[", "idx", "]", "[", "0", "]", ")", ")", "+", "\"\\n\"", ")", "\n", "fp", ".", "write", "(", "\" \"", ".", "join", "(", "map", "(", "str", ",", "Ks", "[", "idx", "]", "[", "1", "]", ")", ")", "+", "\"\\n\"", ")", "\n", "fp", ".", "write", "(", "\" \"", ".", "join", "(", "map", "(", "str", ",", "Ks", "[", "idx", "]", "[", "2", "]", ")", ")", "+", "\"\\n\"", ")", "\n", "fp", ".", "write", "(", "\"\\n\"", ")", "\n", "fp", ".", "write", "(", "\" \"", ".", "join", "(", "map", "(", "str", ",", "depth_ranges", "[", "im_path", ".", "name", "]", ")", ")", ")", "\n", "\n", "", "", "print", "(", "\"write pairs\"", ")", "\n", "with", "open", "(", "out_dir", "/", "\"pair.txt\"", ",", "\"w\"", ")", "as", "fp", ":", "\n", "        ", "fp", ".", "write", "(", "f\"{len(im_paths)}\\n\"", ")", "\n", "for", "idx", ",", "im_path", "in", "enumerate", "(", "im_paths", ")", ":", "\n", "            ", "fp", ".", "write", "(", "f\"{idx}\\n\"", ")", "\n", "nbs", "=", "{", "\n", "k", ":", "v", "\n", "for", "k", ",", "v", "in", "sorted", "(", "\n", "scores", "[", "im_path", ".", "name", "]", ".", "items", "(", ")", ",", "key", "=", "lambda", "item", ":", "-", "item", "[", "1", "]", "\n", ")", "\n", "}", "\n", "fp", ".", "write", "(", "f\"10\"", ")", "\n", "n_nbs", "=", "0", "\n", "for", "k", ",", "v", "in", "nbs", ".", "items", "(", ")", ":", "\n", "                ", "fp", ".", "write", "(", "f\" {im_name_to_idx[k]} {v}\"", ")", "\n", "n_nbs", "+=", "1", "\n", "if", "n_nbs", "==", "10", ":", "\n", "                    ", "break", "\n", "", "", "fp", ".", "write", "(", "\"\\n\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.write_depthmap_vis": [[1192, 1225], ["pathlib.Path", "colmap.read_array", "plt.image_colorcode", "numpy.hstack", "cv2.imwrite", "str", "numpy.nanpercentile", "numpy.nanpercentile", "cv2.cvtColor", "str", "cv2.cvtColor", "im_path.exists", "bin_path.exists", "cv2.imread", "str"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.read_array", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.image_colorcode", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_data_common.imwrite", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_data_common.imread"], ["", "", "", "def", "write_depthmap_vis", "(", "\n", "dense_dir", ",", "im_name", ",", "geometric", "=", "True", ",", "vmin", "=", "None", ",", "vmax", "=", "None", ",", "ext", "=", "\"png\"", "\n", ")", ":", "\n", "    ", "import", "cv2", "\n", "\n", "dense_dir", "=", "Path", "(", "dense_dir", ")", "\n", "\n", "im_path", "=", "dense_dir", "/", "\"images\"", "/", "im_name", "\n", "tmp", "=", "\"geometric\"", "if", "geometric", "else", "\"photometric\"", "\n", "bin_path", "=", "dense_dir", "/", "\"stereo\"", "/", "\"depth_maps\"", "/", "f\"{im_name}.{tmp}.bin\"", "\n", "out_path", "=", "(", "\n", "dense_dir", "/", "\"stereo\"", "/", "\"depth_maps\"", "/", "f\"dmvis_{im_name}.{tmp}.{ext}\"", "\n", ")", "\n", "\n", "if", "not", "(", "im_path", ".", "exists", "(", ")", "and", "bin_path", ".", "exists", "(", ")", ")", ":", "\n", "        ", "return", "None", "\n", "\n", "", "dm", "=", "read_array", "(", "str", "(", "bin_path", ")", ")", "\n", "dm", "[", "dm", "<=", "0", "]", "=", "np", ".", "NaN", "\n", "if", "vmin", "is", "None", ":", "\n", "        ", "vmin", "=", "np", ".", "nanpercentile", "(", "dm", ",", "5", ")", "\n", "", "if", "vmax", "is", "None", ":", "\n", "        ", "vmax", "=", "np", ".", "nanpercentile", "(", "dm", ",", "95", ")", "\n", "", "dm3", "=", "plt", ".", "image_colorcode", "(", "dm", ",", "vmin", "=", "vmin", ",", "vmax", "=", "vmax", ")", "\n", "im", "=", "cv2", ".", "cvtColor", "(", "cv2", ".", "imread", "(", "str", "(", "im_path", ")", ")", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "/", "255", "\n", "\n", "alpha", "=", "0.25", "\n", "dmim", "=", "alpha", "*", "im", "+", "(", "1", "-", "alpha", ")", "*", "dm3", "\n", "\n", "out", "=", "np", ".", "hstack", "(", "(", "im", ",", "dm3", ",", "dmim", ")", ")", "\n", "out", "=", "(", "255", "*", "out", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "cv2", ".", "imwrite", "(", "str", "(", "out_path", ")", ",", "cv2", ".", "cvtColor", "(", "out", ",", "cv2", ".", "COLOR_RGB2BGR", ")", ")", "\n", "return", "out_path", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.load_cameras": [[1227, 1260], ["pathlib.Path", "numpy.empty", "numpy.empty", "numpy.empty", "enumerate", "colmap.read_images_binary", "colmap.read_images_text", "colmap.read_cameras_binary", "colmap.read_cameras_text", "numpy.eye", "colmap.rotm_from_quat", "Ks.astype.astype", "Rs.astype.astype", "ts.astype.astype", "read_images_text.items", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.read_images_binary", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.read_images_text", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.read_cameras_binary", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.read_cameras_text", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.rotm_from_quat", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.Metric.items"], ["", "def", "load_cameras", "(", "sparse_dir", ",", "im_paths", ",", "scale", "=", "1", ",", "dtype", "=", "None", ")", ":", "\n", "    ", "sparse_dir", "=", "Path", "(", "sparse_dir", ")", "\n", "if", "(", "sparse_dir", "/", "\"images.bin\"", ")", ".", "exists", "(", ")", ":", "\n", "        ", "ims", "=", "read_images_binary", "(", "sparse_dir", "/", "\"images.bin\"", ")", "\n", "", "else", ":", "\n", "        ", "ims", "=", "read_images_text", "(", "sparse_dir", "/", "\"images.txt\"", ")", "\n", "", "if", "(", "sparse_dir", "/", "\"cameras.bin\"", ")", ".", "exists", "(", ")", ":", "\n", "        ", "cams", "=", "read_cameras_binary", "(", "sparse_dir", "/", "\"cameras.bin\"", ")", "\n", "", "else", ":", "\n", "        ", "cams", "=", "read_cameras_text", "(", "sparse_dir", "/", "\"cameras.txt\"", ")", "\n", "\n", "", "ims", "=", "{", "im", ".", "name", ":", "im", "for", "key", ",", "im", "in", "ims", ".", "items", "(", ")", "}", "\n", "\n", "Ks", "=", "np", ".", "empty", "(", "(", "len", "(", "im_paths", ")", ",", "3", ",", "3", ")", ",", "dtype", "=", "np", ".", "float64", ")", "\n", "Rs", "=", "np", ".", "empty", "(", "(", "len", "(", "im_paths", ")", ",", "3", ",", "3", ")", ",", "dtype", "=", "np", ".", "float64", ")", "\n", "ts", "=", "np", ".", "empty", "(", "(", "len", "(", "im_paths", ")", ",", "3", ")", ",", "dtype", "=", "np", ".", "float64", ")", "\n", "for", "idx", ",", "im_path", "in", "enumerate", "(", "im_paths", ")", ":", "\n", "        ", "im", "=", "ims", "[", "im_path", ".", "name", "]", "\n", "camera_id", "=", "im", ".", "camera_id", "\n", "K", "=", "np", ".", "eye", "(", "3", ")", "\n", "K", "[", "0", ",", "0", "]", ",", "K", "[", "1", ",", "1", "]", ",", "K", "[", "0", ",", "2", "]", ",", "K", "[", "1", ",", "2", "]", "=", "cams", "[", "camera_id", "]", ".", "params", "\n", "Ks", "[", "idx", "]", "=", "K", "\n", "Rs", "[", "idx", "]", "=", "rotm_from_quat", "(", "im", ".", "qvec", ")", "\n", "ts", "[", "idx", "]", "=", "im", ".", "tvec", "\n", "", "if", "scale", "!=", "1", ":", "\n", "        ", "Ks", "[", ":", ",", ":", "2", "]", "*=", "scale", "\n", "\n", "", "if", "dtype", "is", "not", "None", ":", "\n", "        ", "Ks", "=", "Ks", ".", "astype", "(", "np", ".", "float32", ")", "\n", "Rs", "=", "Rs", ".", "astype", "(", "np", ".", "float32", ")", "\n", "ts", "=", "ts", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "", "return", "Ks", ",", "Rs", ",", "ts", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.load_cameras_all": [[1261, 1296], ["pathlib.Path", "read_images_text.keys", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "colmap.read_images_binary", "colmap.read_images_text", "colmap.read_cameras_binary", "colmap.read_cameras_text", "numpy.eye", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "np.array.append", "read_images_text.items", "colmap.rotm_from_quat"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.read_images_binary", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.read_images_text", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.read_cameras_binary", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.read_cameras_text", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.Metric.items", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.rotm_from_quat"], ["", "def", "load_cameras_all", "(", "sparse_dir", ")", ":", "\n", "    ", "sparse_dir", "=", "Path", "(", "sparse_dir", ")", "\n", "if", "(", "sparse_dir", "/", "\"images.bin\"", ")", ".", "exists", "(", ")", ":", "\n", "        ", "ims", "=", "read_images_binary", "(", "sparse_dir", "/", "\"images.bin\"", ")", "\n", "", "else", ":", "\n", "        ", "ims", "=", "read_images_text", "(", "sparse_dir", "/", "\"images.txt\"", ")", "\n", "", "if", "(", "sparse_dir", "/", "\"cameras.bin\"", ")", ".", "exists", "(", ")", ":", "\n", "        ", "cams", "=", "read_cameras_binary", "(", "sparse_dir", "/", "\"cameras.bin\"", ")", "\n", "", "else", ":", "\n", "        ", "cams", "=", "read_cameras_text", "(", "sparse_dir", "/", "\"cameras.txt\"", ")", "\n", "\n", "", "ims", "=", "{", "im", ".", "name", ":", "im", "for", "key", ",", "im", "in", "ims", ".", "items", "(", ")", "}", "\n", "\n", "Ks", "=", "[", "]", "\n", "Rs", "=", "[", "]", "\n", "ts", "=", "[", "]", "\n", "heights", ",", "widths", "=", "[", "]", ",", "[", "]", "\n", "for", "im_name", "in", "ims", ".", "keys", "(", ")", ":", "\n", "        ", "im", "=", "ims", "[", "im_name", "]", "\n", "camera_id", "=", "im", ".", "camera_id", "\n", "K", "=", "np", ".", "eye", "(", "3", ")", "\n", "K", "[", "0", ",", "0", "]", ",", "K", "[", "1", ",", "1", "]", ",", "K", "[", "0", ",", "2", "]", ",", "K", "[", "1", ",", "2", "]", "=", "cams", "[", "camera_id", "]", ".", "params", "\n", "Ks", ".", "append", "(", "K", ")", "\n", "Rs", ".", "append", "(", "rotm_from_quat", "(", "im", ".", "qvec", ")", ")", "\n", "ts", ".", "append", "(", "im", ".", "tvec", ")", "\n", "heights", ".", "append", "(", "cams", "[", "camera_id", "]", ".", "height", ")", "\n", "widths", ".", "append", "(", "cams", "[", "camera_id", "]", ".", "width", ")", "\n", "\n", "", "Ks", "=", "np", ".", "array", "(", "Ks", ")", "\n", "Rs", "=", "np", ".", "array", "(", "Rs", ")", "\n", "ts", "=", "np", ".", "array", "(", "ts", ")", "\n", "heights", "=", "np", ".", "array", "(", "heights", ")", "\n", "widths", "=", "np", ".", "array", "(", "widths", ")", "\n", "\n", "return", "Ks", ",", "Rs", ",", "ts", ",", "heights", ",", "widths", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.main_bin_to_txt": [[1297, 1322], ["print", "pathlib.Path", "print", "cam_bin.exists", "img_bin.exists", "pts_bin.exists", "print", "colmap.read_cameras_binary", "colmap.write_cameras_text", "print", "colmap.read_images_binary", "colmap.write_images_text", "print", "colmap.read_points3d_binary", "colmap.write_points3D_text", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.read_cameras_binary", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.write_cameras_text", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.read_images_binary", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.write_images_text", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.read_points3d_binary", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.write_points3D_text"], ["", "def", "main_bin_to_txt", "(", "args", ")", ":", "\n", "    ", "print", "(", "\"bin-to-txt\"", ")", "\n", "sparse_dir", "=", "Path", "(", "args", ".", "sparse_dir", ")", "\n", "print", "(", "sparse_dir", ")", "\n", "\n", "cam_bin", "=", "sparse_dir", "/", "\"cameras.bin\"", "\n", "cam_txt", "=", "sparse_dir", "/", "\"cameras.txt\"", "\n", "if", "cam_bin", ".", "exists", "(", ")", ":", "\n", "        ", "print", "(", "f\"convert {cam_bin} to {cam_txt}\"", ")", "\n", "cameras", "=", "read_cameras_binary", "(", "str", "(", "cam_bin", ")", ")", "\n", "write_cameras_text", "(", "cam_txt", ",", "cameras", ")", "\n", "\n", "", "img_bin", "=", "sparse_dir", "/", "\"images.bin\"", "\n", "img_txt", "=", "sparse_dir", "/", "\"images.txt\"", "\n", "if", "img_bin", ".", "exists", "(", ")", ":", "\n", "        ", "print", "(", "f\"convert {img_bin} to {img_txt}\"", ")", "\n", "images", "=", "read_images_binary", "(", "str", "(", "img_bin", ")", ")", "\n", "write_images_text", "(", "img_txt", ",", "images", ")", "\n", "\n", "", "pts_bin", "=", "sparse_dir", "/", "\"points3D.bin\"", "\n", "pts_txt", "=", "sparse_dir", "/", "\"points3D.txt\"", "\n", "if", "pts_bin", ".", "exists", "(", ")", ":", "\n", "        ", "print", "(", "f\"convert {pts_bin} to {pts_txt}\"", ")", "\n", "points3d", "=", "read_points3d_binary", "(", "str", "(", "pts_bin", ")", ")", "\n", "write_points3D_text", "(", "pts_txt", ",", "points3d", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.Metric.__init__": [[6, 8], ["metric.Metric.reset"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.reset"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.Metric.reset": [[9, 11], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.Metric.add": [[12, 14], ["None"], "methods", ["None"], ["", "def", "add", "(", "self", ",", "es", ",", "ta", ",", "ma", "=", "None", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.Metric.get": [[15, 17], ["None"], "methods", ["None"], ["", "def", "get", "(", "self", ")", ":", "\n", "        ", "return", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.Metric.items": [[18, 20], ["metric.Metric.get().items", "metric.Metric.get"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.Metric.items", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.get"], ["", "def", "items", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "get", "(", ")", ".", "items", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.Metric.__str__": [[21, 24], ["metric.Metric.get().items", "metric.Metric.get"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.Metric.items", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.get"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "\", \"", ".", "join", "(", "\n", "[", "\"%s=%.5f\"", "%", "(", "key", ",", "value", ")", "for", "key", ",", "value", "in", "self", ".", "get", "(", ")", ".", "items", "(", ")", "]", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.MultipleMetric.__init__": [[28, 32], ["metric.Metric.__init__"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.TrackCreator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "metrics", ",", "prefix", "=", "\"\"", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "metrics", "=", "metrics", "\n", "super", "(", "MultipleMetric", ",", "self", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "self", ".", "prefix", "=", "prefix", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.MultipleMetric.reset": [[33, 36], ["m.reset"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.reset"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "metrics", ":", "\n", "            ", "m", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.MultipleMetric.add": [[37, 40], ["m.add"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.SSIMMetric.add"], ["", "", "def", "add", "(", "self", ",", "es", ",", "ta", ",", "ma", "=", "None", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "metrics", ":", "\n", "            ", "m", ".", "add", "(", "es", ",", "ta", ",", "ma", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.MultipleMetric.get": [[41, 48], ["m.get"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.get"], ["", "", "def", "get", "(", "self", ")", ":", "\n", "        ", "ret", "=", "{", "}", "\n", "for", "m", "in", "self", ".", "metrics", ":", "\n", "            ", "vals", "=", "m", ".", "get", "(", ")", "\n", "for", "k", "in", "vals", ":", "\n", "                ", "ret", "[", "\"%s%s\"", "%", "(", "self", ".", "prefix", ",", "k", ")", "]", "=", "vals", "[", "k", "]", "\n", "", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.MultipleMetric.__str__": [[49, 60], ["lines.append", "m.get().items", "m.get"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.Metric.items", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.get"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "lines", "=", "[", "]", "\n", "for", "m", "in", "self", ".", "metrics", ":", "\n", "            ", "line", "=", "\", \"", ".", "join", "(", "\n", "[", "\n", "\"%s%s=%.5f\"", "%", "(", "self", ".", "prefix", ",", "key", ",", "value", ")", "\n", "for", "key", ",", "value", "in", "m", ".", "get", "(", ")", ".", "items", "(", ")", "\n", "]", "\n", ")", "\n", "lines", ".", "append", "(", "line", ")", "\n", "", "return", "\"\\n\"", ".", "join", "(", "lines", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.BaseDistanceMetric.__init__": [[63, 70], ["metric.Metric.__init__"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.TrackCreator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "name", "=", "\"\"", ",", "stats", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "BaseDistanceMetric", ",", "self", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "self", ".", "name", "=", "name", "\n", "if", "stats", "is", "None", ":", "\n", "            ", "self", ".", "stats", "=", "{", "\"mean\"", ":", "np", ".", "mean", "}", "\n", "", "else", ":", "\n", "            ", "self", ".", "stats", "=", "stats", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.BaseDistanceMetric.reset": [[71, 73], ["None"], "methods", ["None"], ["", "", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "dists", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.BaseDistanceMetric.add": [[74, 76], ["None"], "methods", ["None"], ["", "def", "add", "(", "self", ",", "es", ",", "ta", ",", "ma", "=", "None", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.BaseDistanceMetric.get": [[77, 80], ["numpy.hstack", "f", "metric.BaseDistanceMetric.stats.items"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.Metric.items"], ["", "def", "get", "(", "self", ")", ":", "\n", "        ", "dists", "=", "np", ".", "hstack", "(", "self", ".", "dists", ")", "\n", "return", "{", "\"dist%s_%s\"", "%", "(", "self", ".", "name", ",", "k", ")", ":", "f", "(", "dists", ")", "for", "k", ",", "f", "in", "self", ".", "stats", ".", "items", "(", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.DistanceMetric.__init__": [[83, 87], ["metric.BaseDistanceMetric.__init__", "str"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.TrackCreator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "vec_length", "=", "1", ",", "p", "=", "2", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "DistanceMetric", ",", "self", ")", ".", "__init__", "(", "name", "=", "str", "(", "p", ")", ",", "**", "kwargs", ")", "\n", "self", ".", "vec_length", "=", "vec_length", "\n", "self", ".", "p", "=", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.DistanceMetric.add": [[88, 102], ["es.reshape.reshape.reshape", "ta.reshape.reshape.reshape", "numpy.linalg.norm", "metric.DistanceMetric.dists.append", "print", "Exception", "ma.ravel.ravel.ravel"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append"], ["", "def", "add", "(", "self", ",", "es", ",", "ta", ",", "ma", "=", "None", ")", ":", "\n", "        ", "if", "es", ".", "shape", "!=", "ta", ".", "shape", "or", "es", ".", "shape", "[", "-", "1", "]", "!=", "self", ".", "vec_length", ":", "\n", "            ", "print", "(", "es", ".", "shape", ",", "ta", ".", "shape", ")", "\n", "raise", "Exception", "(", "\n", "\"es and ta have to be of shape N x vec_length(={self.vec_length})\"", "\n", ")", "\n", "", "es", "=", "es", ".", "reshape", "(", "-", "1", ",", "self", ".", "vec_length", ")", "\n", "ta", "=", "ta", ".", "reshape", "(", "-", "1", ",", "self", ".", "vec_length", ")", "\n", "if", "ma", "is", "not", "None", ":", "\n", "            ", "ma", "=", "ma", ".", "ravel", "(", ")", "\n", "es", "=", "es", "[", "ma", "!=", "0", "]", "\n", "ta", "=", "ta", "[", "ma", "!=", "0", "]", "\n", "", "dist", "=", "np", ".", "linalg", ".", "norm", "(", "es", "-", "ta", ",", "ord", "=", "self", ".", "p", ",", "axis", "=", "1", ")", "\n", "self", ".", "dists", ".", "append", "(", "dist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.PSNRMetric.__init__": [[105, 109], ["metric.BaseDistanceMetric.__init__"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.TrackCreator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "max", "=", "1", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "PSNRMetric", ",", "self", ")", ".", "__init__", "(", "name", "=", "\"psnr\"", ",", "**", "kwargs", ")", "\n", "# distance between minimum and maximum possible value", "\n", "self", ".", "max", "=", "max", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.PSNRMetric.add": [[110, 127], ["numpy.mean", "metric.PSNRMetric.dists.append", "Exception", "Exception", "numpy.log10", "numpy.log10"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append"], ["", "def", "add", "(", "self", ",", "es", ",", "ta", ",", "ma", "=", "None", ")", ":", "\n", "        ", "if", "es", ".", "shape", "!=", "ta", ".", "shape", ":", "\n", "            ", "raise", "Exception", "(", "\"es and ta have to be of shape Nxdim\"", ")", "\n", "", "if", "es", ".", "ndim", "==", "3", ":", "\n", "            ", "es", "=", "es", "[", "...", ",", "None", "]", "\n", "ta", "=", "ta", "[", "...", ",", "None", "]", "\n", "", "if", "es", ".", "ndim", "!=", "4", "or", "es", ".", "shape", "[", "3", "]", "not", "in", "[", "1", ",", "3", "]", ":", "\n", "            ", "raise", "Exception", "(", "\n", "\"es and ta have to be of shape bs x height x width x 0, 1, or 3\"", "\n", ")", "\n", "", "if", "ma", "is", "not", "None", ":", "\n", "            ", "es", "=", "ma", "*", "es", "\n", "ta", "=", "ma", "*", "ta", "\n", "", "mse", "=", "np", ".", "mean", "(", "(", "es", "-", "ta", ")", "**", "2", ",", "axis", "=", "(", "1", ",", "2", ",", "3", ")", ")", "\n", "psnr", "=", "20", "*", "np", ".", "log10", "(", "self", ".", "max", ")", "-", "10", "*", "np", ".", "log10", "(", "mse", ")", "\n", "psnr", "=", "-", "psnr", "\n", "self", ".", "dists", ".", "append", "(", "psnr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.SSIMMetric.__init__": [[130, 135], ["metric.BaseDistanceMetric.__init__"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.TrackCreator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "data_range", "=", "None", ",", "mode", "=", "\"default\"", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "SSIMMetric", ",", "self", ")", ".", "__init__", "(", "name", "=", "\"ssim\"", ",", "**", "kwargs", ")", "\n", "# distance between minimum and maximum possible value", "\n", "self", ".", "data_range", "=", "data_range", "\n", "self", ".", "mode", "=", "mode", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.SSIMMetric.add": [[136, 170], ["range", "Exception", "Exception", "metric.SSIMMetric.dists.append", "skimage.measure.compare_ssim", "range", "Exception", "skimage.measure.compare_ssim"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append"], ["", "def", "add", "(", "self", ",", "es", ",", "ta", ",", "ma", "=", "None", ")", ":", "\n", "        ", "if", "es", ".", "shape", "!=", "ta", ".", "shape", ":", "\n", "            ", "raise", "Exception", "(", "\"es and ta have to be of shape Nxdim\"", ")", "\n", "", "if", "es", ".", "ndim", "==", "3", ":", "\n", "            ", "es", "=", "es", "[", "...", ",", "None", "]", "\n", "ta", "=", "ta", "[", "...", ",", "None", "]", "\n", "", "if", "es", ".", "ndim", "!=", "4", "or", "es", ".", "shape", "[", "3", "]", "not", "in", "[", "1", ",", "3", "]", ":", "\n", "            ", "raise", "Exception", "(", "\n", "\"es and ta have to be of shape bs x height x width x 0, 1, or 3\"", "\n", ")", "\n", "", "if", "ma", "is", "not", "None", ":", "\n", "            ", "es", "=", "ma", "*", "es", "\n", "ta", "=", "ma", "*", "ta", "\n", "", "for", "bidx", "in", "range", "(", "es", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "if", "self", ".", "mode", "==", "\"default\"", ":", "\n", "                ", "ssim", "=", "skimage", ".", "measure", ".", "compare_ssim", "(", "\n", "es", "[", "bidx", "]", ",", "ta", "[", "bidx", "]", ",", "multichannel", "=", "True", ",", "data_range", "=", "self", ".", "data_range", "\n", ")", "\n", "", "elif", "self", ".", "mode", "==", "\"dv\"", ":", "\n", "                ", "ssim", "=", "0", "\n", "for", "c", "in", "range", "(", "3", ")", ":", "\n", "                    ", "ssim", "+=", "skimage", ".", "measure", ".", "compare_ssim", "(", "\n", "es", "[", "bidx", ",", "...", ",", "c", "]", ",", "\n", "ta", "[", "bidx", ",", "...", ",", "c", "]", ",", "\n", "gaussian_weights", "=", "True", ",", "\n", "sigma", "=", "1.5", ",", "\n", "use_sample_covariance", "=", "False", ",", "\n", "data_range", "=", "1.0", ",", "\n", ")", "\n", "", "ssim", "/=", "3", "\n", "", "else", ":", "\n", "                ", "raise", "Exception", "(", "\"invalid mode\"", ")", "\n", "", "ssim", "=", "-", "ssim", "\n", "self", ".", "dists", ".", "append", "(", "ssim", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.Timer.__init__": [[60, 62], ["time.time"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "tic", "=", "time", ".", "time", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.Timer.done": [[63, 66], ["time.time"], "methods", ["None"], ["", "def", "done", "(", "self", ")", ":", "\n", "        ", "diff", "=", "time", ".", "time", "(", ")", "-", "self", ".", "tic", "\n", "return", "diff", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.Timer.__call__": [[67, 69], ["utils.Timer.done"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.Timer.done"], ["", "def", "__call__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "done", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.Timer.__str__": [[70, 73], ["utils.Timer.done", "utils.format_seconds"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.Timer.done", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.format_seconds"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "diff", "=", "self", ".", "done", "(", ")", "\n", "return", "format_seconds", "(", "diff", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.__init__": [[76, 78], ["utils.StopWatch.reset"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.reset"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.reset": [[79, 82], ["collections.OrderedDict"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "timings", "=", "OrderedDict", "(", ")", "\n", "self", ".", "starts", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.toogle": [[83, 88], ["utils.StopWatch.stop", "utils.StopWatch.start"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.stop", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.start"], ["", "def", "toogle", "(", "self", ",", "name", ")", ":", "\n", "        ", "if", "name", "in", "self", ".", "starts", ":", "\n", "            ", "self", ".", "stop", "(", "name", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "start", "(", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.start": [[89, 91], ["time.time"], "methods", ["None"], ["", "", "def", "start", "(", "self", ",", "name", ")", ":", "\n", "        ", "self", ".", "starts", "[", "name", "]", "=", "time", ".", "time", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.stop": [[92, 99], ["time.time", "utils.StopWatch.timings[].append", "utils.StopWatch.starts.pop"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append"], ["", "def", "stop", "(", "self", ",", "name", ")", ":", "\n", "        ", "tic", "=", "time", ".", "time", "(", ")", "\n", "if", "name", "not", "in", "self", ".", "timings", ":", "\n", "            ", "self", ".", "timings", "[", "name", "]", "=", "[", "]", "\n", "", "diff", "=", "tic", "-", "self", ".", "starts", ".", "pop", "(", "name", ",", "tic", ")", "\n", "self", ".", "timings", "[", "name", "]", ".", "append", "(", "diff", ")", "\n", "return", "diff", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.get": [[100, 108], ["reduce", "reduce"], "methods", ["None"], ["", "def", "get", "(", "self", ",", "name", "=", "None", ",", "reduce", "=", "np", ".", "sum", ")", ":", "\n", "        ", "if", "name", "is", "not", "None", ":", "\n", "            ", "return", "reduce", "(", "self", ".", "timings", "[", "name", "]", ")", "\n", "", "else", ":", "\n", "            ", "ret", "=", "{", "}", "\n", "for", "k", "in", "self", ".", "timings", ":", "\n", "                ", "ret", "[", "k", "]", "=", "reduce", "(", "self", ".", "timings", "[", "k", "]", ")", "\n", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.format_str": [[109, 114], ["utils.StopWatch.get().items", "utils.format_seconds", "utils.StopWatch.get"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.Metric.items", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.format_seconds", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.get"], ["", "", "def", "format_str", "(", "self", ",", "reduce", "=", "np", ".", "sum", ")", ":", "\n", "        ", "return", "\", \"", ".", "join", "(", "\n", "[", "\n", "f\"{k}: {format_seconds(v)}\"", "\n", "for", "k", ",", "v", "in", "self", ".", "get", "(", "reduce", "=", "reduce", ")", ".", "items", "(", ")", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.__repr__": [[117, 119], ["utils.StopWatch.format_str"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.format_str"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "format_str", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.__str__": [[120, 122], ["utils.StopWatch.format_str"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.StopWatch.format_str"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "format_str", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.ETA.__init__": [[125, 127], ["utils.ETA.reset"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.reset"], ["    ", "def", "__init__", "(", "self", ",", "length", ",", "current_idx", "=", "0", ")", ":", "\n", "        ", "self", ".", "reset", "(", "length", ",", "current_idx", "=", "current_idx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.ETA.reset": [[128, 134], ["time.time", "time.time"], "methods", ["None"], ["", "def", "reset", "(", "self", ",", "length", "=", "None", ",", "current_idx", "=", "0", ")", ":", "\n", "        ", "if", "length", "is", "not", "None", ":", "\n", "            ", "self", ".", "length", "=", "length", "\n", "", "self", ".", "current_idx", "=", "current_idx", "\n", "self", ".", "start_time", "=", "time", ".", "time", "(", ")", "\n", "self", ".", "current_time", "=", "time", ".", "time", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.ETA.update": [[135, 138], ["time.time"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "idx", ")", ":", "\n", "        ", "self", ".", "current_idx", "=", "idx", "\n", "self", ".", "current_time", "=", "time", ".", "time", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.ETA.inc": [[139, 142], ["time.time"], "methods", ["None"], ["", "def", "inc", "(", "self", ")", ":", "\n", "        ", "self", ".", "current_idx", "+=", "1", "\n", "self", ".", "current_time", "=", "time", ".", "time", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.ETA.get_elapsed_time": [[143, 145], ["None"], "methods", ["None"], ["", "def", "get_elapsed_time", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "current_time", "-", "self", ".", "start_time", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.ETA.get_item_time": [[146, 148], ["utils.ETA.get_elapsed_time"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.ETA.get_elapsed_time"], ["", "def", "get_item_time", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "get_elapsed_time", "(", ")", "/", "(", "self", ".", "current_idx", "+", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.ETA.get_remaining_time": [[149, 151], ["utils.ETA.get_item_time"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.ETA.get_item_time"], ["", "def", "get_remaining_time", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "get_item_time", "(", ")", "*", "(", "self", ".", "length", "-", "self", ".", "current_idx", "+", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.ETA.get_total_time": [[152, 154], ["utils.ETA.get_item_time"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.ETA.get_item_time"], ["", "def", "get_total_time", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "get_item_time", "(", ")", "*", "self", ".", "length", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.ETA.get_elapsed_time_str": [[155, 157], ["utils.format_seconds", "utils.ETA.get_elapsed_time"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.format_seconds", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.ETA.get_elapsed_time"], ["", "def", "get_elapsed_time_str", "(", "self", ",", "millis", "=", "True", ")", ":", "\n", "        ", "return", "format_seconds", "(", "self", ".", "get_elapsed_time", "(", ")", ",", "millis", "=", "millis", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.ETA.get_remaining_time_str": [[158, 160], ["utils.format_seconds", "utils.ETA.get_remaining_time"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.format_seconds", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.ETA.get_remaining_time"], ["", "def", "get_remaining_time_str", "(", "self", ",", "millis", "=", "True", ")", ":", "\n", "        ", "return", "format_seconds", "(", "self", ".", "get_remaining_time", "(", ")", ",", "millis", "=", "millis", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.ETA.get_percentage_str": [[161, 164], ["utils.ETA.get_elapsed_time", "utils.ETA.get_total_time", "int"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.ETA.get_elapsed_time", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.ETA.get_total_time"], ["", "def", "get_percentage_str", "(", "self", ")", ":", "\n", "        ", "perc", "=", "self", ".", "get_elapsed_time", "(", ")", "/", "self", ".", "get_total_time", "(", ")", "*", "100", "\n", "return", "f\"{int(perc):02d}%\"", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.ETA.get_str": [[165, 176], ["s.append", "s.append", "s.append", "utils.ETA.get_percentage_str", "utils.ETA.get_elapsed_time_str", "utils.ETA.get_remaining_time_str"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.ETA.get_percentage_str", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.ETA.get_elapsed_time_str", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.ETA.get_remaining_time_str"], ["", "def", "get_str", "(", "\n", "self", ",", "percentage", "=", "True", ",", "elapsed", "=", "True", ",", "remaining", "=", "True", ",", "millis", "=", "False", "\n", ")", ":", "\n", "        ", "s", "=", "[", "]", "\n", "if", "percentage", ":", "\n", "            ", "s", ".", "append", "(", "self", ".", "get_percentage_str", "(", ")", ")", "\n", "", "if", "elapsed", ":", "\n", "            ", "s", ".", "append", "(", "self", ".", "get_elapsed_time_str", "(", "millis", "=", "millis", ")", ")", "\n", "", "if", "remaining", ":", "\n", "            ", "s", ".", "append", "(", "self", ".", "get_remaining_time_str", "(", "millis", "=", "millis", ")", ")", "\n", "", "return", "\"/\"", ".", "join", "(", "s", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.__init__": [[196, 198], ["utils.CumulativeMovingAverage.reset"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.reset"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.reset": [[199, 202], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "n", "=", "0", "\n", "self", ".", "vals", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append": [[203, 222], ["isinstance", "numpy.asarray", "numpy.asarray.items", "numpy.asarray.items", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.Metric.items", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.Metric.items"], ["", "def", "append", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "isinstance", "(", "x", ",", "dict", ")", ":", "\n", "            ", "if", "self", ".", "n", "==", "0", ":", "\n", "                ", "self", ".", "vals", "=", "{", "}", "\n", "for", "k", ",", "v", "in", "x", ".", "items", "(", ")", ":", "\n", "                    ", "self", ".", "vals", "[", "k", "]", "=", "np", ".", "array", "(", "v", ")", "\n", "", "", "else", ":", "\n", "                ", "for", "k", ",", "v", "in", "x", ".", "items", "(", ")", ":", "\n", "                    ", "self", ".", "vals", "[", "k", "]", "=", "(", "np", ".", "array", "(", "v", ")", "+", "self", ".", "n", "*", "self", ".", "vals", "[", "k", "]", ")", "/", "(", "\n", "self", ".", "n", "+", "1", "\n", ")", "\n", "", "", "", "else", ":", "\n", "            ", "x", "=", "np", ".", "asarray", "(", "x", ")", "\n", "if", "self", ".", "n", "==", "0", ":", "\n", "                ", "self", ".", "vals", "=", "x", "\n", "", "else", ":", "\n", "                ", "self", ".", "vals", "=", "(", "x", "+", "self", ".", "n", "*", "self", ".", "vals", ")", "/", "(", "self", ".", "n", "+", "1", ")", "\n", "", "", "self", ".", "n", "+=", "1", "\n", "return", "self", ".", "vals", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.vals_list": [[223, 225], ["utils.flatten"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.flatten"], ["", "def", "vals_list", "(", "self", ")", ":", "\n", "        ", "return", "flatten", "(", "self", ".", "vals", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.str2bool": [[12, 19], ["v.lower", "v.lower", "argparse.ArgumentTypeError"], "function", ["None"], ["def", "str2bool", "(", "v", ")", ":", "\n", "    ", "if", "v", ".", "lower", "(", ")", "in", "(", "\"yes\"", ",", "\"true\"", ",", "\"t\"", ",", "\"y\"", ",", "\"1\"", ")", ":", "\n", "        ", "return", "True", "\n", "", "elif", "v", ".", "lower", "(", ")", "in", "(", "\"no\"", ",", "\"false\"", ",", "\"f\"", ",", "\"n\"", ",", "\"0\"", ")", ":", "\n", "        ", "return", "False", "\n", "", "else", ":", "\n", "        ", "raise", "argparse", ".", "ArgumentTypeError", "(", "\"Boolean value expected.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.logging_setup": [[21, 33], ["logging.basicConfig", "logging.FileHandler", "logging.StreamHandler", "str"], "function", ["None"], ["", "", "def", "logging_setup", "(", "out_path", "=", "None", ")", ":", "\n", "    ", "if", "logging", ".", "root", ":", "\n", "        ", "del", "logging", ".", "root", ".", "handlers", "[", ":", "]", "\n", "", "logging", ".", "basicConfig", "(", "\n", "level", "=", "logging", ".", "INFO", ",", "\n", "handlers", "=", "[", "\n", "logging", ".", "FileHandler", "(", "str", "(", "out_path", ")", ")", ",", "\n", "logging", ".", "StreamHandler", "(", "stream", "=", "sys", ".", "stdout", ")", ",", "\n", "]", ",", "\n", "# format=\"[%(asctime)s:%(levelname)s:%(module)s:%(funcName)s] %(message)s\",", "\n", "format", "=", "\"[%(asctime)s/%(levelname)s/%(module)s] %(message)s\"", ",", "\n", "datefmt", "=", "\"%Y-%m-%d/%H:%M\"", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.random_string": [[36, 38], ["random.choice", "range"], "function", ["None"], ["", "def", "random_string", "(", "size", "=", "6", ",", "chars", "=", "string", ".", "ascii_uppercase", "+", "string", ".", "digits", ")", ":", "\n", "    ", "return", "\"\"", ".", "join", "(", "random", ".", "choice", "(", "chars", ")", "for", "_", "in", "range", "(", "size", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.format_seconds": [[40, 57], ["divmod", "divmod", "divmod", "s.append", "s.append", "s.append", "s.append", "s.append", "int", "int", "int", "int"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append"], ["", "def", "format_seconds", "(", "secs_in", ",", "millis", "=", "True", ")", ":", "\n", "    ", "s", "=", "[", "]", "\n", "days", ",", "secs", "=", "divmod", "(", "secs_in", ",", "24", "*", "60", "*", "60", ")", "\n", "if", "days", ">", "0", ":", "\n", "        ", "s", ".", "append", "(", "f\"{int(days)}d\"", ")", "\n", "", "hours", ",", "secs", "=", "divmod", "(", "secs", ",", "60", "*", "60", ")", "\n", "if", "hours", ">", "0", ":", "\n", "        ", "s", ".", "append", "(", "f\"{int(hours):02d}h\"", ")", "\n", "", "mins", ",", "secs", "=", "divmod", "(", "secs", ",", "60", ")", "\n", "if", "mins", ">", "0", ":", "\n", "        ", "s", ".", "append", "(", "f\"{int(mins):02d}m\"", ")", "\n", "", "if", "millis", ":", "\n", "        ", "s", ".", "append", "(", "f\"{secs:06.3f}s\"", ")", "\n", "", "else", ":", "\n", "        ", "s", ".", "append", "(", "f\"{int(secs):02d}s\"", ")", "\n", "", "s", "=", "\"\"", ".", "join", "(", "s", ")", "\n", "return", "s", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.flatten": [[178, 193], ["isinstance", "vals.ravel.values", "isinstance", "ret.extend", "isinstance", "utils.flatten", "vals.ravel.ravel", "ret.extend", "utils.flatten"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.flatten", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.flatten"], ["", "", "def", "flatten", "(", "vals", ")", ":", "\n", "    ", "if", "isinstance", "(", "vals", ",", "dict", ")", ":", "\n", "        ", "ret", "=", "[", "]", "\n", "for", "v", "in", "vals", ".", "values", "(", ")", ":", "\n", "            ", "ret", ".", "extend", "(", "flatten", "(", "v", ")", ")", "\n", "", "return", "ret", "\n", "", "elif", "isinstance", "(", "vals", ",", "(", "list", ",", "np", ".", "ndarray", ")", ")", ":", "\n", "        ", "if", "isinstance", "(", "vals", ",", "np", ".", "ndarray", ")", ":", "\n", "            ", "vals", "=", "vals", ".", "ravel", "(", ")", "\n", "", "ret", "=", "[", "]", "\n", "for", "v", "in", "vals", ":", "\n", "            ", "ret", ".", "extend", "(", "flatten", "(", "v", ")", ")", "\n", "", "return", "ret", "\n", "", "else", ":", "\n", "        ", "return", "[", "vals", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.git_hash": [[227, 239], ["subprocess.run", "hash.decode().strip", "hash.decode", "hash.decode"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_data_pw.run"], ["", "", "def", "git_hash", "(", "cwd", "=", "None", ")", ":", "\n", "    ", "ret", "=", "subprocess", ".", "run", "(", "\n", "[", "\"git\"", ",", "\"describe\"", ",", "\"--always\"", "]", ",", "\n", "cwd", "=", "cwd", ",", "\n", "stdout", "=", "subprocess", ".", "PIPE", ",", "\n", "stderr", "=", "subprocess", ".", "STDOUT", ",", "\n", ")", "\n", "hash", "=", "ret", ".", "stdout", "\n", "if", "hash", "is", "not", "None", "and", "\"fatal\"", "not", "in", "hash", ".", "decode", "(", ")", ":", "\n", "        ", "return", "hash", ".", "decode", "(", ")", ".", "strip", "(", ")", "\n", "", "else", ":", "\n", "        ", "return", "None", "\n", "", "", ""]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.exp.Worker.__init__": [[18, 56], ["super().__init__", "modules.VGGPerceptualLoss", "modules.LPIPS"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.TrackCreator.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "train_dsets", ",", "\n", "eval_dsets", "=", "\"\"", ",", "\n", "train_n_nbs", "=", "1", ",", "\n", "train_nbs_mode", "=", "\"argmax\"", ",", "\n", "train_scale", "=", "1", ",", "\n", "train_patch", "=", "192", ",", "\n", "eval_n_nbs", "=", "1", ",", "\n", "eval_scale", "=", "-", "1", ",", "\n", "n_train_iters", "=", "750000", ",", "\n", "num_workers", "=", "8", ",", "\n", "**", "kwargs", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "\n", "n_train_iters", "=", "n_train_iters", ",", "\n", "num_workers", "=", "num_workers", ",", "\n", "train_device", "=", "config", ".", "train_device", ",", "\n", "eval_device", "=", "config", ".", "eval_device", ",", "\n", "**", "kwargs", ",", "\n", ")", "\n", "\n", "self", ".", "train_dsets", "=", "train_dsets", "\n", "self", ".", "eval_dsets", "=", "eval_dsets", "\n", "self", ".", "train_n_nbs", "=", "train_n_nbs", "\n", "self", ".", "train_nbs_mode", "=", "train_nbs_mode", "\n", "self", ".", "train_scale", "=", "train_scale", "\n", "self", ".", "train_patch", "=", "train_patch", "\n", "self", ".", "eval_n_nbs", "=", "eval_n_nbs", "\n", "self", ".", "eval_scale", "=", "train_scale", "if", "eval_scale", "<=", "0", "else", "eval_scale", "\n", "self", ".", "bwd_depth_thresh", "=", "0.01", "\n", "self", ".", "invalid_depth_to_inf", "=", "True", "\n", "\n", "self", ".", "train_loss", "=", "modules", ".", "VGGPerceptualLoss", "(", ")", "\n", "if", "config", ".", "lpips_root", ":", "\n", "            ", "self", ".", "eval_loss", "=", "modules", ".", "LPIPS", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "eval_loss", "=", "self", ".", "train_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.exp.Worker.get_pw_dataset": [[57, 119], ["logging.info", "sorted", "sorted", "sorted", "sorted", "sorted", "numpy.array", "numpy.load", "numpy.load", "numpy.load", "dataset.Dataset", "ibr_dir.glob", "ibr_dir.glob", "ibr_dir.glob", "ibr_dir.glob", "ibr_dir.glob", "numpy.array.append", "numpy.arange", "numpy.arange", "numpy.load", "len", "len", "range", "len"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.load", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.load", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.load", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.load"], ["", "", "def", "get_pw_dataset", "(", "\n", "self", ",", "\n", "*", ",", "\n", "name", ",", "\n", "ibr_dir", ",", "\n", "im_size", ",", "\n", "patch", ",", "\n", "pad_width", ",", "\n", "n_nbs", ",", "\n", "nbs_mode", ",", "\n", "train", ",", "\n", "tgt_ind", "=", "None", ",", "\n", "n_max_sources", "=", "-", "1", ",", "\n", ")", ":", "\n", "        ", "logging", ".", "info", "(", "f\"  create dataset for {name}\"", ")", "\n", "im_paths", "=", "sorted", "(", "ibr_dir", ".", "glob", "(", "f\"im_*.png\"", ")", ")", "\n", "im_paths", "+=", "sorted", "(", "ibr_dir", ".", "glob", "(", "f\"im_*.jpg\"", ")", ")", "\n", "im_paths", "+=", "sorted", "(", "ibr_dir", ".", "glob", "(", "f\"im_*.jpeg\"", ")", ")", "\n", "dm_paths", "=", "sorted", "(", "ibr_dir", ".", "glob", "(", "\"dm_*.npy\"", ")", ")", "\n", "count_paths", "=", "sorted", "(", "ibr_dir", ".", "glob", "(", "\"count_*.npy\"", ")", ")", "\n", "counts", "=", "[", "]", "\n", "for", "count_path", "in", "count_paths", ":", "\n", "            ", "counts", ".", "append", "(", "np", ".", "load", "(", "count_path", ")", ")", "\n", "", "counts", "=", "np", ".", "array", "(", "counts", ")", "\n", "Ks", "=", "np", ".", "load", "(", "ibr_dir", "/", "\"Ks.npy\"", ")", "\n", "Rs", "=", "np", ".", "load", "(", "ibr_dir", "/", "\"Rs.npy\"", ")", "\n", "ts", "=", "np", ".", "load", "(", "ibr_dir", "/", "\"ts.npy\"", ")", "\n", "\n", "if", "tgt_ind", "is", "None", ":", "\n", "            ", "tgt_ind", "=", "np", ".", "arange", "(", "len", "(", "im_paths", ")", ")", "\n", "src_ind", "=", "np", ".", "arange", "(", "len", "(", "im_paths", ")", ")", "\n", "", "else", ":", "\n", "            ", "src_ind", "=", "[", "\n", "idx", "for", "idx", "in", "range", "(", "len", "(", "im_paths", ")", ")", "if", "idx", "not", "in", "tgt_ind", "\n", "]", "\n", "\n", "", "counts", "=", "counts", "[", "tgt_ind", "]", "\n", "counts", "=", "counts", "[", ":", ",", "src_ind", "]", "\n", "\n", "dset", "=", "dataset", ".", "Dataset", "(", "\n", "name", "=", "name", ",", "\n", "tgt_im_paths", "=", "[", "im_paths", "[", "idx", "]", "for", "idx", "in", "tgt_ind", "]", ",", "\n", "tgt_dm_paths", "=", "[", "dm_paths", "[", "idx", "]", "for", "idx", "in", "tgt_ind", "]", ",", "\n", "tgt_Ks", "=", "Ks", "[", "tgt_ind", "]", ",", "\n", "tgt_Rs", "=", "Rs", "[", "tgt_ind", "]", ",", "\n", "tgt_ts", "=", "ts", "[", "tgt_ind", "]", ",", "\n", "tgt_counts", "=", "counts", ",", "\n", "src_im_paths", "=", "[", "im_paths", "[", "idx", "]", "for", "idx", "in", "src_ind", "]", ",", "\n", "src_dm_paths", "=", "[", "dm_paths", "[", "idx", "]", "for", "idx", "in", "src_ind", "]", ",", "\n", "src_Ks", "=", "Ks", "[", "src_ind", "]", ",", "\n", "src_Rs", "=", "Rs", "[", "src_ind", "]", ",", "\n", "src_ts", "=", "ts", "[", "src_ind", "]", ",", "\n", "im_size", "=", "im_size", ",", "\n", "pad_width", "=", "pad_width", ",", "\n", "patch", "=", "patch", ",", "\n", "n_nbs", "=", "n_nbs", ",", "\n", "nbs_mode", "=", "nbs_mode", ",", "\n", "bwd_depth_thresh", "=", "self", ".", "bwd_depth_thresh", ",", "\n", "invalid_depth_to_inf", "=", "self", ".", "invalid_depth_to_inf", ",", "\n", "train", "=", "train", ",", "\n", ")", "\n", "return", "dset", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.exp.Worker.get_track_dataset": [[120, 180], ["logging.info", "sorted", "sorted", "sorted", "sorted", "numpy.load", "numpy.load", "numpy.load", "sorted", "sorted", "sorted", "sorted", "sorted", "numpy.array", "numpy.load", "numpy.load", "numpy.load", "dataset.Dataset", "src_ibr_dir.glob", "src_ibr_dir.glob", "src_ibr_dir.glob", "src_ibr_dir.glob", "tgt_ibr_dir.glob", "tgt_ibr_dir.glob", "tgt_ibr_dir.glob", "len", "tgt_ibr_dir.glob", "tgt_ibr_dir.glob", "numpy.array.append", "numpy.load"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.load", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.load", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.load", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.load", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.load", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.load", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.load"], ["", "def", "get_track_dataset", "(", "\n", "self", ",", "\n", "name", ",", "\n", "src_ibr_dir", ",", "\n", "tgt_ibr_dir", ",", "\n", "n_nbs", ",", "\n", "im_size", "=", "None", ",", "\n", "pad_width", "=", "16", ",", "\n", "patch", "=", "None", ",", "\n", "nbs_mode", "=", "\"argmax\"", ",", "\n", "train", "=", "False", ",", "\n", ")", ":", "\n", "        ", "logging", ".", "info", "(", "f\"  create dataset for {name}\"", ")", "\n", "\n", "src_im_paths", "=", "sorted", "(", "src_ibr_dir", ".", "glob", "(", "f\"im_*.png\"", ")", ")", "\n", "src_im_paths", "+=", "sorted", "(", "src_ibr_dir", ".", "glob", "(", "f\"im_*.jpg\"", ")", ")", "\n", "src_im_paths", "+=", "sorted", "(", "src_ibr_dir", ".", "glob", "(", "f\"im_*.jpeg\"", ")", ")", "\n", "src_dm_paths", "=", "sorted", "(", "src_ibr_dir", ".", "glob", "(", "\"dm_*.npy\"", ")", ")", "\n", "src_Ks", "=", "np", ".", "load", "(", "src_ibr_dir", "/", "\"Ks.npy\"", ")", "\n", "src_Rs", "=", "np", ".", "load", "(", "src_ibr_dir", "/", "\"Rs.npy\"", ")", "\n", "src_ts", "=", "np", ".", "load", "(", "src_ibr_dir", "/", "\"ts.npy\"", ")", "\n", "\n", "tgt_im_paths", "=", "sorted", "(", "tgt_ibr_dir", ".", "glob", "(", "f\"im_*.png\"", ")", ")", "\n", "tgt_im_paths", "+=", "sorted", "(", "tgt_ibr_dir", ".", "glob", "(", "f\"im_*.jpg\"", ")", ")", "\n", "tgt_im_paths", "+=", "sorted", "(", "tgt_ibr_dir", ".", "glob", "(", "f\"im_*.jpeg\"", ")", ")", "\n", "if", "len", "(", "tgt_im_paths", ")", "==", "0", ":", "\n", "            ", "tgt_im_paths", "=", "None", "\n", "", "tgt_dm_paths", "=", "sorted", "(", "tgt_ibr_dir", ".", "glob", "(", "\"dm_*.npy\"", ")", ")", "\n", "count_paths", "=", "sorted", "(", "tgt_ibr_dir", ".", "glob", "(", "\"count_*.npy\"", ")", ")", "\n", "counts", "=", "[", "]", "\n", "for", "count_path", "in", "count_paths", ":", "\n", "            ", "counts", ".", "append", "(", "np", ".", "load", "(", "count_path", ")", ")", "\n", "", "counts", "=", "np", ".", "array", "(", "counts", ")", "\n", "tgt_Ks", "=", "np", ".", "load", "(", "tgt_ibr_dir", "/", "\"Ks.npy\"", ")", "\n", "tgt_Rs", "=", "np", ".", "load", "(", "tgt_ibr_dir", "/", "\"Rs.npy\"", ")", "\n", "tgt_ts", "=", "np", ".", "load", "(", "tgt_ibr_dir", "/", "\"ts.npy\"", ")", "\n", "\n", "dset", "=", "dataset", ".", "Dataset", "(", "\n", "name", "=", "name", ",", "\n", "tgt_im_paths", "=", "tgt_im_paths", ",", "\n", "tgt_dm_paths", "=", "tgt_dm_paths", ",", "\n", "tgt_Ks", "=", "tgt_Ks", ",", "\n", "tgt_Rs", "=", "tgt_Rs", ",", "\n", "tgt_ts", "=", "tgt_ts", ",", "\n", "tgt_counts", "=", "counts", ",", "\n", "src_im_paths", "=", "src_im_paths", ",", "\n", "src_dm_paths", "=", "src_dm_paths", ",", "\n", "src_Ks", "=", "src_Ks", ",", "\n", "src_Rs", "=", "src_Rs", ",", "\n", "src_ts", "=", "src_ts", ",", "\n", "im_size", "=", "im_size", ",", "\n", "pad_width", "=", "pad_width", ",", "\n", "patch", "=", "patch", ",", "\n", "n_nbs", "=", "n_nbs", ",", "\n", "nbs_mode", "=", "nbs_mode", ",", "\n", "bwd_depth_thresh", "=", "self", ".", "bwd_depth_thresh", ",", "\n", "invalid_depth_to_inf", "=", "self", ".", "invalid_depth_to_inf", ",", "\n", "train", "=", "train", ",", "\n", ")", "\n", "return", "dset", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.exp.Worker.get_train_set_tat": [[181, 195], ["exp.Worker.get_pw_dataset", "exp.Worker.replace"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.exp.Worker.get_pw_dataset"], ["", "def", "get_train_set_tat", "(", "self", ",", "dset", ")", ":", "\n", "        ", "dense_dir", "=", "config", ".", "tat_root", "/", "dset", "/", "\"dense\"", "\n", "ibr_dir", "=", "dense_dir", "/", "f\"ibr3d_pw_{self.train_scale:.2f}\"", "\n", "dset", "=", "self", ".", "get_pw_dataset", "(", "\n", "name", "=", "f'tat_{dset.replace(\"/\", \"_\")}'", ",", "\n", "ibr_dir", "=", "ibr_dir", ",", "\n", "im_size", "=", "None", ",", "\n", "pad_width", "=", "16", ",", "\n", "patch", "=", "(", "self", ".", "train_patch", ",", "self", ".", "train_patch", ")", ",", "\n", "n_nbs", "=", "self", ".", "train_n_nbs", ",", "\n", "nbs_mode", "=", "self", ".", "train_nbs_mode", ",", "\n", "train", "=", "True", ",", "\n", ")", "\n", "return", "dset", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.exp.Worker.get_train_set": [[196, 203], ["logging.info", "co.mytorch.MultiDataset", "co.mytorch.MultiDataset.append", "exp.Worker.get_train_set_tat"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.exp.Worker.get_train_set_tat"], ["", "def", "get_train_set", "(", "self", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Create train datasets\"", ")", "\n", "dsets", "=", "co", ".", "mytorch", ".", "MultiDataset", "(", "name", "=", "\"train\"", ")", "\n", "if", "\"tat\"", "in", "self", ".", "train_dsets", ":", "\n", "            ", "for", "dset", "in", "config", ".", "tat_train_sets", ":", "\n", "                ", "dsets", ".", "append", "(", "self", ".", "get_train_set_tat", "(", "dset", ")", ")", "\n", "", "", "return", "dsets", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.exp.Worker.get_eval_set_tat": [[204, 225], ["exp.Worker.get_pw_dataset", "Exception", "exp.Worker.replace"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.exp.Worker.get_pw_dataset"], ["", "def", "get_eval_set_tat", "(", "self", ",", "dset", ",", "mode", ")", ":", "\n", "        ", "dense_dir", "=", "config", ".", "tat_root", "/", "dset", "/", "\"dense\"", "\n", "ibr_dir", "=", "dense_dir", "/", "f\"ibr3d_pw_{self.eval_scale:.2f}\"", "\n", "if", "mode", "==", "\"all\"", ":", "\n", "            ", "tgt_ind", "=", "None", "\n", "", "elif", "mode", "==", "\"subseq\"", ":", "\n", "            ", "tgt_ind", "=", "config", ".", "tat_eval_tracks", "[", "dset", "]", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "\"invalid mode for get_eval_set_tat\"", ")", "\n", "", "dset", "=", "self", ".", "get_pw_dataset", "(", "\n", "name", "=", "f'tat_{mode}_{dset.replace(\"/\", \"_\")}'", ",", "\n", "ibr_dir", "=", "ibr_dir", ",", "\n", "im_size", "=", "None", ",", "\n", "pad_width", "=", "16", ",", "\n", "patch", "=", "None", ",", "\n", "n_nbs", "=", "self", ".", "eval_n_nbs", ",", "\n", "nbs_mode", "=", "\"argmax\"", ",", "\n", "tgt_ind", "=", "tgt_ind", ",", "\n", "train", "=", "False", ",", "\n", ")", "\n", "return", "dset", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.exp.Worker.get_eval_sets": [[226, 246], ["logging.info", "exp.Worker.startswith", "numpy.arange", "exp.Worker.get_eval_set_tat", "eval_sets.append", "exp.Worker.get_eval_set_tat", "eval_sets.append", "exp.Worker.get_eval_set_tat", "eval_sets.append", "len", "len"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.exp.Worker.get_eval_set_tat", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.exp.Worker.get_eval_set_tat", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.exp.Worker.get_eval_set_tat", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append"], ["", "def", "get_eval_sets", "(", "self", ")", ":", "\n", "        ", "logging", ".", "info", "(", "\"Create eval datasets\"", ")", "\n", "eval_sets", "=", "[", "]", "\n", "if", "\"tat\"", "in", "self", ".", "eval_dsets", ":", "\n", "            ", "for", "dset", "in", "config", ".", "tat_eval_sets", ":", "\n", "                ", "dset", "=", "self", ".", "get_eval_set_tat", "(", "dset", ",", "\"all\"", ")", "\n", "eval_sets", ".", "append", "(", "dset", ")", "\n", "", "", "for", "dset", "in", "self", ".", "eval_dsets", ":", "\n", "            ", "if", "dset", ".", "startswith", "(", "\"tat-scene-\"", ")", ":", "\n", "                ", "dset", "=", "dset", "[", "len", "(", "\"tat-scene-\"", ")", ":", "]", "\n", "dset", "=", "self", ".", "get_eval_set_tat", "(", "dset", ",", "\"all\"", ")", "\n", "eval_sets", ".", "append", "(", "dset", ")", "\n", "", "", "if", "\"tat-subseq\"", "in", "self", ".", "eval_dsets", ":", "\n", "            ", "for", "dset", "in", "config", ".", "tat_eval_sets", ":", "\n", "                ", "dset", "=", "self", ".", "get_eval_set_tat", "(", "dset", ",", "\"subseq\"", ")", "\n", "eval_sets", ".", "append", "(", "dset", ")", "\n", "", "", "for", "dset", "in", "eval_sets", ":", "\n", "            ", "dset", ".", "logging_rate", "=", "1", "\n", "dset", ".", "vis_ind", "=", "np", ".", "arange", "(", "len", "(", "dset", ")", ")", "\n", "", "return", "eval_sets", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.exp.Worker.copy_data": [[247, 251], ["data.items", "v.to().requires_grad_", "v.to"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.Metric.items"], ["", "def", "copy_data", "(", "self", ",", "data", ",", "device", ",", "train", ")", ":", "\n", "        ", "self", ".", "data", "=", "{", "}", "\n", "for", "k", ",", "v", "in", "data", ".", "items", "(", ")", ":", "\n", "            ", "self", ".", "data", "[", "k", "]", "=", "v", ".", "to", "(", "device", ")", ".", "requires_grad_", "(", "requires_grad", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.exp.Worker.net_forward": [[252, 254], ["net"], "methods", ["None"], ["", "", "def", "net_forward", "(", "self", ",", "net", ",", "train", ",", "iter", ")", ":", "\n", "        ", "return", "net", "(", "**", "self", ".", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.exp.Worker.loss_forward": [[255, 275], ["enumerate", "torch.clamp", "est.type.type.type", "est.type.type.type", "exp.Worker.eval_loss", "exp.Worker.train_loss"], "methods", ["None"], ["", "def", "loss_forward", "(", "self", ",", "output", ",", "train", ",", "iter", ")", ":", "\n", "        ", "errs", "=", "{", "}", "\n", "tgt", "=", "self", ".", "data", "[", "\"tgt\"", "]", "\n", "est", "=", "output", "[", "\"out\"", "]", "\n", "est", "=", "est", "[", "...", ",", ":", "tgt", ".", "shape", "[", "-", "2", "]", ",", ":", "tgt", ".", "shape", "[", "-", "1", "]", "]", "\n", "\n", "if", "train", ":", "\n", "            ", "for", "lidx", ",", "loss", "in", "enumerate", "(", "self", ".", "train_loss", "(", "est", ",", "tgt", ")", ")", ":", "\n", "                ", "errs", "[", "f\"rgb{lidx}\"", "]", "=", "loss", "\n", "", "", "else", ":", "\n", "            ", "est", "=", "torch", ".", "clamp", "(", "est", ",", "-", "1", ",", "1", ")", "\n", "est", "=", "255", "*", "(", "est", "+", "1", ")", "/", "2", "\n", "est", "=", "est", ".", "type", "(", "torch", ".", "uint8", ")", "\n", "est", "=", "est", ".", "type", "(", "torch", ".", "float32", ")", "\n", "est", "=", "(", "est", "/", "255", "*", "2", ")", "-", "1", "\n", "errs", "[", "\"rgb\"", "]", "=", "self", ".", "eval_loss", "(", "est", ",", "tgt", ")", "\n", "\n", "", "output", "[", "\"out\"", "]", "=", "est", "\n", "\n", "return", "errs", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.exp.Worker.callback_eval_start": [[276, 278], ["None"], "methods", ["None"], ["", "def", "callback_eval_start", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "metric", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.exp.Worker.im_to2np": [[279, 284], ["im.transpose.transpose.detach().to().numpy", "im.transpose.transpose.transpose", "im.transpose.transpose.detach().to", "numpy.clip", "im.transpose.transpose.detach"], "methods", ["None"], ["", "def", "im_to2np", "(", "self", ",", "im", ")", ":", "\n", "        ", "im", "=", "im", ".", "detach", "(", ")", ".", "to", "(", "\"cpu\"", ")", ".", "numpy", "(", ")", "\n", "im", "=", "(", "np", ".", "clip", "(", "im", ",", "-", "1", ",", "1", ")", "+", "1", ")", "/", "2", "\n", "im", "=", "im", ".", "transpose", "(", "0", ",", "2", ",", "3", ",", "1", ")", "\n", "return", "im", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.exp.Worker.callback_eval_add": [[285, 325], ["eval_set.name.replace", "exp.Worker.im_to2np", "exp.Worker.im_to2np", "exp.Worker.metric[].add", "out_dir.mkdir", "range", "co.metric.MultipleMetric", "[].detach().to().numpy", "PIL.Image.fromarray().save", "hasattr", "[].detach().to", "PIL.Image.fromarray", "co.metric.DistanceMetric", "co.metric.PSNRMetric", "co.metric.SSIMMetric", "[].detach"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.exp.Worker.im_to2np", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.exp.Worker.im_to2np", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.SSIMMetric.add", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.save"], ["", "def", "callback_eval_add", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "output", "=", "kwargs", "[", "\"output\"", "]", "\n", "batch_idx", "=", "kwargs", "[", "\"batch_idx\"", "]", "\n", "iter", "=", "kwargs", "[", "\"iter\"", "]", "\n", "eval_set", "=", "kwargs", "[", "\"eval_set\"", "]", "\n", "eval_set_name", "=", "eval_set", ".", "name", ".", "replace", "(", "\"/\"", ",", "\"_\"", ")", "\n", "eval_set_name", "=", "f\"{eval_set_name}_{self.eval_scale}\"", "\n", "\n", "ta", "=", "self", ".", "im_to2np", "(", "self", ".", "data", "[", "\"tgt\"", "]", ")", "\n", "es", "=", "self", ".", "im_to2np", "(", "output", "[", "\"out\"", "]", ")", "\n", "\n", "# record metrics", "\n", "if", "self", ".", "metric", "is", "None", ":", "\n", "            ", "self", ".", "metric", "=", "{", "}", "\n", "self", ".", "metric", "[", "\"rgb\"", "]", "=", "co", ".", "metric", ".", "MultipleMetric", "(", "\n", "metrics", "=", "[", "\n", "co", ".", "metric", ".", "DistanceMetric", "(", "p", "=", "1", ",", "vec_length", "=", "3", ")", ",", "\n", "co", ".", "metric", ".", "PSNRMetric", "(", ")", ",", "\n", "co", ".", "metric", ".", "SSIMMetric", "(", ")", ",", "\n", "]", "\n", ")", "\n", "\n", "", "self", ".", "metric", "[", "\"rgb\"", "]", ".", "add", "(", "es", ",", "ta", ")", "\n", "\n", "# write debug images", "\n", "out_dir", "=", "self", ".", "exp_out_root", "/", "f\"{eval_set_name}_n{self.eval_n_nbs}\"", "\n", "out_dir", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "for", "b", "in", "range", "(", "ta", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "bidx", "=", "batch_idx", "*", "ta", ".", "shape", "[", "0", "]", "+", "b", "\n", "if", "bidx", "not", "in", "eval_set", ".", "vis_ind", ":", "\n", "                ", "continue", "\n", "\n", "", "tgt_dm", "=", "self", ".", "data", "[", "\"tgt_dm\"", "]", "[", "b", "]", ".", "detach", "(", ")", ".", "to", "(", "\"cpu\"", ")", ".", "numpy", "(", ")", "\n", "\n", "out_im", "=", "(", "255", "*", "es", "[", "b", "]", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "if", "hasattr", "(", "eval_set", ",", "\"mask_via_depth\"", ")", "and", "eval_set", ".", "mask_via_depth", ":", "\n", "                ", "out_im", "[", "tgt_dm", "<=", "0", "]", "=", "255", "\n", "out_im", "[", "tgt_dm", ">=", "1e6", "]", "=", "255", "\n", "# PIL.Image.fromarray(out_im).save(out_dir / f\"{bidx:04d}_es.png\")", "\n", "", "PIL", ".", "Image", ".", "fromarray", "(", "out_im", ")", ".", "save", "(", "out_dir", "/", "f\"s{bidx:04d}_es.jpg\"", ")", "\n", "# out_im = (255 * ta[b]).astype(np.uint8)", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.exp.Worker.callback_eval_stop": [[361, 381], ["eval_set.name.replace", "exp.Worker.metric_add_eval", "logging.info", "metric.items", "sum", "exp.Worker.metric_add_eval", "numpy.asarray().ravel", "numpy.asarray"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.metric_add_eval", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.metric.Metric.items", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.mytorch.Worker.metric_add_eval"], ["", "", "def", "callback_eval_stop", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "eval_set", "=", "kwargs", "[", "\"eval_set\"", "]", "\n", "iter", "=", "kwargs", "[", "\"iter\"", "]", "\n", "mean_loss", "=", "kwargs", "[", "\"mean_loss\"", "]", "\n", "eval_set_name", "=", "eval_set", ".", "name", ".", "replace", "(", "\"/\"", ",", "\"_\"", ")", "\n", "eval_set_name", "=", "f\"{eval_set_name}_{self.eval_scale}\"", "\n", "method", "=", "self", ".", "experiment_name", "+", "f\"_n{self.eval_n_nbs}\"", "\n", "for", "key", "in", "self", ".", "metric", ":", "\n", "            ", "self", ".", "metric_add_eval", "(", "\n", "iter", ",", "\n", "eval_set_name", ",", "\n", "f\"loss_{key}\"", ",", "\n", "sum", "(", "np", ".", "asarray", "(", "mean_loss", "[", "key", "]", ")", ".", "ravel", "(", ")", ")", ",", "\n", "method", "=", "method", ",", "\n", ")", "\n", "metric", "=", "self", ".", "metric", "[", "key", "]", "\n", "logging", ".", "info", "(", "f\"\\n{key}\\n{metric}\"", ")", "\n", "for", "k", ",", "v", "in", "metric", ".", "items", "(", ")", ":", "\n", "                ", "self", ".", "metric_add_eval", "(", "\n", "iter", ",", "eval_set_name", ",", "f\"{k}\"", ",", "v", ",", "method", "=", "method", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.VGGPerceptualLoss.__init__": [[15, 21], ["torch.Module.__init__", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torch.tensor().view", "torchvision.models.vgg19", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.TrackCreator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inp_scale", "=", "\"-11\"", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "inp_scale", "=", "inp_scale", "\n", "self", ".", "mean", "=", "torch", ".", "tensor", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ")", ".", "view", "(", "1", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "std", "=", "torch", ".", "tensor", "(", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", ".", "view", "(", "1", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "vgg", "=", "torchvision", ".", "models", ".", "vgg19", "(", "pretrained", "=", "True", ")", ".", "features", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.VGGPerceptualLoss.forward": [[22, 58], ["modules.VGGPerceptualLoss.vgg.to", "modules.VGGPerceptualLoss.mean.to", "modules.VGGPerceptualLoss.std.to", "enumerate", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "mod", "Exception", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "mod", "loss.append", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "loss.append", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "loss.append", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "loss.append", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "loss.append", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append"], ["", "def", "forward", "(", "self", ",", "es", ",", "ta", ")", ":", "\n", "        ", "self", ".", "vgg", "=", "self", ".", "vgg", ".", "to", "(", "es", ".", "device", ")", "\n", "self", ".", "mean", "=", "self", ".", "mean", ".", "to", "(", "es", ".", "device", ")", "\n", "self", ".", "std", "=", "self", ".", "std", ".", "to", "(", "es", ".", "device", ")", "\n", "\n", "if", "self", ".", "inp_scale", "==", "\"-11\"", ":", "\n", "            ", "es", "=", "(", "es", "+", "1", ")", "/", "2", "\n", "ta", "=", "(", "ta", "+", "1", ")", "/", "2", "\n", "", "elif", "self", ".", "inp_scale", "!=", "\"01\"", ":", "\n", "            ", "raise", "Exception", "(", "\"invalid input scale\"", ")", "\n", "", "es", "=", "(", "es", "-", "self", ".", "mean", ")", "/", "self", ".", "std", "\n", "ta", "=", "(", "ta", "-", "self", ".", "mean", ")", "/", "self", ".", "std", "\n", "\n", "loss", "=", "[", "torch", ".", "abs", "(", "es", "-", "ta", ")", ".", "mean", "(", ")", "]", "\n", "for", "midx", ",", "mod", "in", "enumerate", "(", "self", ".", "vgg", ")", ":", "\n", "            ", "es", "=", "mod", "(", "es", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "ta", "=", "mod", "(", "ta", ")", "\n", "\n", "", "if", "midx", "==", "3", ":", "\n", "                ", "lam", "=", "1", "\n", "loss", ".", "append", "(", "torch", ".", "abs", "(", "es", "-", "ta", ")", ".", "mean", "(", ")", "*", "lam", ")", "\n", "", "elif", "midx", "==", "8", ":", "\n", "                ", "lam", "=", "0.75", "\n", "loss", ".", "append", "(", "torch", ".", "abs", "(", "es", "-", "ta", ")", ".", "mean", "(", ")", "*", "lam", ")", "\n", "", "elif", "midx", "==", "13", ":", "\n", "                ", "lam", "=", "0.5", "\n", "loss", ".", "append", "(", "torch", ".", "abs", "(", "es", "-", "ta", ")", ".", "mean", "(", ")", "*", "lam", ")", "\n", "", "elif", "midx", "==", "22", ":", "\n", "                ", "lam", "=", "0.5", "\n", "loss", ".", "append", "(", "torch", ".", "abs", "(", "es", "-", "ta", ")", ".", "mean", "(", ")", "*", "lam", ")", "\n", "", "elif", "midx", "==", "31", ":", "\n", "                ", "lam", "=", "1", "\n", "loss", ".", "append", "(", "torch", ".", "abs", "(", "es", "-", "ta", ")", ".", "mean", "(", ")", "*", "lam", ")", "\n", "break", "\n", "", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.LPIPS.__init__": [[61, 65], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.TrackCreator.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "mod", "=", "None", "\n", "self", ".", "clip", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.LPIPS.forward": [[66, 78], ["modules.LPIPS.mod", "modules.LPIPS.mean", "sys.path.append", "ps.PerceptualLoss", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "torch.clamp", "str"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append"], ["", "def", "forward", "(", "self", ",", "es", ",", "ta", ")", ":", "\n", "        ", "if", "self", ".", "mod", "is", "None", ":", "\n", "            ", "sys", ".", "path", ".", "append", "(", "str", "(", "config", ".", "lpips_root", ")", ")", "\n", "import", "PerceptualSimilarity", ".", "models", "as", "ps", "\n", "\n", "self", ".", "mod", "=", "ps", ".", "PerceptualLoss", "(", ")", "\n", "\n", "", "if", "self", ".", "clip", ":", "\n", "            ", "es", "=", "torch", ".", "clamp", "(", "es", ",", "-", "1", ",", "1", ")", "\n", "", "out", "=", "self", ".", "mod", "(", "es", ",", "ta", ",", "normalize", "=", "False", ")", "\n", "\n", "return", "out", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.Identity.__init__": [[81, 83], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.TrackCreator.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.Identity.forward": [[84, 89], ["len"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "*", "args", ")", ":", "\n", "        ", "if", "len", "(", "args", ")", "==", "1", ":", "\n", "            ", "return", "args", "[", "0", "]", "\n", "", "else", ":", "\n", "            ", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.ConvGRU2d.__init__": [[92, 126], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Tanh", "torch.Tanh", "torch.Tanh", "torch.ReLU", "torch.ReLU", "torch.ReLU", "Exception"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.TrackCreator.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "channels_x", ",", "\n", "channels_out", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ",", "\n", "nonlinearity", "=", "\"tanh\"", ",", "\n", "bias", "=", "True", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "channels_x", "=", "channels_x", "\n", "self", ".", "channels_out", "=", "channels_out", "\n", "\n", "self", ".", "conv_gates", "=", "nn", ".", "Conv2d", "(", "\n", "in_channels", "=", "channels_x", "+", "channels_out", ",", "\n", "out_channels", "=", "2", "*", "channels_out", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "padding", "=", "padding", ",", "\n", "bias", "=", "bias", ",", "\n", ")", "\n", "self", ".", "conv_can", "=", "nn", ".", "Conv2d", "(", "\n", "in_channels", "=", "channels_x", "+", "channels_out", ",", "\n", "out_channels", "=", "channels_out", ",", "\n", "kernel_size", "=", "kernel_size", ",", "\n", "padding", "=", "padding", ",", "\n", "bias", "=", "bias", ",", "\n", ")", "\n", "\n", "if", "nonlinearity", "==", "\"tanh\"", ":", "\n", "            ", "self", ".", "nonlinearity", "=", "nn", ".", "Tanh", "(", ")", "\n", "", "elif", "nonlinearity", "==", "\"relu\"", ":", "\n", "            ", "self", ".", "nonlinearity", "=", "nn", ".", "ReLU", "(", ")", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "\"invalid nonlinearity\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.ConvGRU2d.forward": [[127, 146], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "modules.ConvGRU2d.nonlinearity", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "modules.ConvGRU2d.conv_gates", "modules.ConvGRU2d.conv_can"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ",", "h", "=", "None", ")", ":", "\n", "        ", "if", "h", "is", "None", ":", "\n", "            ", "h", "=", "torch", ".", "zeros", "(", "\n", "(", "x", ".", "shape", "[", "0", "]", ",", "self", ".", "channels_out", ",", "x", ".", "shape", "[", "2", "]", ",", "x", ".", "shape", "[", "3", "]", ")", ",", "\n", "dtype", "=", "x", ".", "dtype", ",", "\n", "device", "=", "x", ".", "device", ",", "\n", ")", "\n", "", "combined", "=", "torch", ".", "cat", "(", "[", "x", ",", "h", "]", ",", "dim", "=", "1", ")", "\n", "combined_conv", "=", "torch", ".", "sigmoid", "(", "self", ".", "conv_gates", "(", "combined", ")", ")", "\n", "del", "combined", "\n", "r", "=", "combined_conv", "[", ":", ",", ":", "self", ".", "channels_out", "]", "\n", "z", "=", "combined_conv", "[", ":", ",", "self", ".", "channels_out", ":", "]", "\n", "\n", "combined", "=", "torch", ".", "cat", "(", "[", "x", ",", "r", "*", "h", "]", ",", "dim", "=", "1", ")", "\n", "n", "=", "self", ".", "nonlinearity", "(", "self", ".", "conv_can", "(", "combined", ")", ")", "\n", "del", "combined", "\n", "\n", "h", "=", "z", "*", "h", "+", "(", "1", "-", "z", ")", "*", "n", "\n", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.VGGUNet.__init__": [[149, 199], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "enumerate", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "isinstance", "isinstance", "reversed", "decs.append", "torchvision.models.vgg16", "Exception", "encs.append", "encs_channels.append", "enc.append", "modules.VGGUNet._dec", "torchvision.models.vgg19", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "Exception", "max", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "len"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.TrackCreator.__init__", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.GRUUNet._dec"], ["    ", "def", "__init__", "(", "\n", "self", ",", "net", "=", "\"vgg16\"", ",", "pool", "=", "\"average\"", ",", "n_encoder_stages", "=", "3", ",", "n_decoder_convs", "=", "2", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "if", "net", "==", "\"vgg16\"", ":", "\n", "            ", "vgg", "=", "torchvision", ".", "models", ".", "vgg16", "(", "pretrained", "=", "True", ")", ".", "features", "\n", "", "elif", "net", "==", "\"vgg19\"", ":", "\n", "            ", "vgg", "=", "torchvision", ".", "models", ".", "vgg19", "(", "pretrained", "=", "True", ")", ".", "features", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "\"invalid vgg net\"", ")", "\n", "\n", "", "encs", "=", "[", "]", "\n", "enc", "=", "[", "]", "\n", "encs_channels", "=", "[", "]", "\n", "channels", "=", "-", "1", "\n", "for", "mod", "in", "vgg", ":", "\n", "            ", "if", "isinstance", "(", "mod", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "channels", "=", "mod", ".", "out_channels", "\n", "\n", "", "if", "isinstance", "(", "mod", ",", "nn", ".", "MaxPool2d", ")", ":", "\n", "                ", "encs", ".", "append", "(", "nn", ".", "Sequential", "(", "*", "enc", ")", ")", "\n", "encs_channels", ".", "append", "(", "channels", ")", "\n", "n_encoder_stages", "-=", "1", "\n", "if", "n_encoder_stages", "<=", "0", ":", "\n", "                    ", "break", "\n", "", "if", "pool", "==", "\"average\"", ":", "\n", "                    ", "enc", "=", "[", "\n", "nn", ".", "AvgPool2d", "(", "\n", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "ceil_mode", "=", "False", "\n", ")", "\n", "]", "\n", "", "elif", "pool", "==", "\"max\"", ":", "\n", "                    ", "enc", "=", "[", "\n", "nn", ".", "MaxPool2d", "(", "\n", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "ceil_mode", "=", "False", "\n", ")", "\n", "]", "\n", "", "else", ":", "\n", "                    ", "raise", "Exception", "(", "\"invalid pool\"", ")", "\n", "", "", "else", ":", "\n", "                ", "enc", ".", "append", "(", "mod", ")", "\n", "", "", "self", ".", "encs", "=", "nn", ".", "ModuleList", "(", "encs", ")", "\n", "\n", "cin", "=", "encs_channels", "[", "-", "1", "]", "+", "encs_channels", "[", "-", "2", "]", "\n", "decs", "=", "[", "]", "\n", "for", "idx", ",", "cout", "in", "enumerate", "(", "reversed", "(", "encs_channels", "[", ":", "-", "1", "]", ")", ")", ":", "\n", "            ", "decs", ".", "append", "(", "self", ".", "_dec", "(", "cin", ",", "cout", ",", "n_convs", "=", "n_decoder_convs", ")", ")", "\n", "cin", "=", "cout", "+", "encs_channels", "[", "max", "(", "-", "idx", "-", "3", ",", "-", "len", "(", "encs_channels", ")", ")", "]", "\n", "", "self", ".", "decs", "=", "nn", ".", "ModuleList", "(", "decs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.VGGUNet._dec": [[200, 216], ["range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "mods.append", "mods.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append"], ["", "def", "_dec", "(", "self", ",", "channels_in", ",", "channels_out", ",", "n_convs", "=", "2", ")", ":", "\n", "        ", "mods", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "n_convs", ")", ":", "\n", "            ", "mods", ".", "append", "(", "\n", "nn", ".", "Conv2d", "(", "\n", "channels_in", ",", "\n", "channels_out", ",", "\n", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "1", ",", "\n", "bias", "=", "False", ",", "\n", ")", "\n", ")", "\n", "mods", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "channels_in", "=", "channels_out", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "mods", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.VGGUNet.forward": [[227, 245], ["feats.pop", "enc", "feats.append", "feats.pop", "feats.pop", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "dec", "feats.append"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "feats", "=", "[", "]", "\n", "for", "enc", "in", "self", ".", "encs", ":", "\n", "            ", "x", "=", "enc", "(", "x", ")", "\n", "feats", ".", "append", "(", "x", ")", "\n", "\n", "", "for", "dec", "in", "self", ".", "decs", ":", "\n", "            ", "x0", "=", "feats", ".", "pop", "(", ")", "\n", "x1", "=", "feats", ".", "pop", "(", ")", "\n", "x0", "=", "F", ".", "interpolate", "(", "\n", "x0", ",", "size", "=", "(", "x1", ".", "shape", "[", "2", "]", ",", "x1", ".", "shape", "[", "3", "]", ")", ",", "mode", "=", "\"nearest\"", "\n", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x0", ",", "x1", ")", ",", "dim", "=", "1", ")", "\n", "x", "=", "dec", "(", "x", ")", "\n", "feats", ".", "append", "(", "x", ")", "\n", "\n", "", "x", "=", "feats", ".", "pop", "(", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.UNet.__init__": [[248, 285], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "enumerate", "torch.Upsample", "torch.Upsample", "torch.Upsample", "modules.UNet.create_stage", "modules.UNet.encs.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "modules.UNet.enc_translates.append", "modules.UNet.create_stage", "modules.UNet.decs.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.TrackCreator.__init__", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.AggrNet.create_stage", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.AggrNet.create_stage", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "in_channels", ",", "\n", "enc_channels", "=", "[", "64", ",", "128", ",", "256", "]", ",", "\n", "dec_channels", "=", "[", "128", ",", "64", "]", ",", "\n", "out_channels", "=", "3", ",", "\n", "n_enc_convs", "=", "2", ",", "\n", "n_dec_convs", "=", "2", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "encs", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "enc_translates", "=", "nn", ".", "ModuleList", "(", ")", "\n", "pool", "=", "False", "\n", "for", "enc_channel", "in", "enc_channels", ":", "\n", "            ", "stage", "=", "self", ".", "create_stage", "(", "\n", "in_channels", ",", "enc_channel", ",", "n_enc_convs", ",", "pool", "\n", ")", "\n", "self", ".", "encs", ".", "append", "(", "stage", ")", "\n", "translate", "=", "nn", ".", "Conv2d", "(", "enc_channel", ",", "enc_channel", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "enc_translates", ".", "append", "(", "translate", ")", "\n", "in_channels", ",", "pool", "=", "enc_channel", ",", "True", "\n", "\n", "", "self", ".", "decs", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "idx", ",", "dec_channel", "in", "enumerate", "(", "dec_channels", ")", ":", "\n", "            ", "in_channels", "=", "enc_channels", "[", "-", "idx", "-", "1", "]", "+", "enc_channels", "[", "-", "idx", "-", "2", "]", "\n", "stage", "=", "self", ".", "create_stage", "(", "\n", "in_channels", ",", "dec_channel", ",", "n_dec_convs", ",", "False", "\n", ")", "\n", "self", ".", "decs", ".", "append", "(", "stage", ")", "\n", "\n", "", "self", ".", "upsample", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "\"nearest\"", ")", "\n", "if", "out_channels", "<=", "0", ":", "\n", "            ", "self", ".", "out_conv", "=", "None", "\n", "", "else", ":", "\n", "            ", "self", ".", "out_conv", "=", "nn", ".", "Conv2d", "(", "\n", "dec_channels", "[", "-", "1", "]", ",", "out_channels", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.UNet.convrelu": [[287, 293], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["None"], ["", "", "def", "convrelu", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "3", ",", "padding", "=", "None", ")", ":", "\n", "        ", "if", "padding", "is", "None", ":", "\n", "            ", "padding", "=", "kernel_size", "//", "2", "\n", "", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "padding", "=", "padding", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.UNet.create_stage": [[295, 303], ["range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "mods.append", "mods.append", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "modules.UNet.convrelu"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.AggrNet.convrelu"], ["", "def", "create_stage", "(", "self", ",", "in_channels", ",", "out_channels", ",", "n_convs", ",", "pool", ")", ":", "\n", "        ", "mods", "=", "[", "]", "\n", "if", "pool", ":", "\n", "            ", "mods", ".", "append", "(", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "2", ")", ")", "\n", "", "for", "_", "in", "range", "(", "n_convs", ")", ":", "\n", "            ", "mods", ".", "append", "(", "self", ".", "convrelu", "(", "in_channels", ",", "out_channels", ")", ")", "\n", "in_channels", "=", "out_channels", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "mods", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.UNet.forward": [[304, 320], ["zip", "outs.pop", "enc", "outs.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "dec", "outs.append", "modules.UNet.out_conv", "enc_translates", "outs.pop", "outs.pop", "modules.UNet.upsample"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "outs", "=", "[", "]", "\n", "for", "enc", ",", "enc_translates", "in", "zip", "(", "self", ".", "encs", ",", "self", ".", "enc_translates", ")", ":", "\n", "            ", "x", "=", "enc", "(", "x", ")", "\n", "outs", ".", "append", "(", "enc_translates", "(", "x", ")", ")", "\n", "\n", "", "for", "dec", "in", "self", ".", "decs", ":", "\n", "            ", "x0", ",", "x1", "=", "outs", ".", "pop", "(", ")", ",", "outs", ".", "pop", "(", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "self", ".", "upsample", "(", "x0", ")", ",", "x1", ")", ",", "dim", "=", "1", ")", "\n", "x", "=", "dec", "(", "x", ")", "\n", "outs", ".", "append", "(", "x", ")", "\n", "\n", "", "x", "=", "outs", ".", "pop", "(", ")", "\n", "if", "self", ".", "out_conv", ":", "\n", "            ", "x", "=", "self", ".", "out_conv", "(", "x", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.GRUUNet.__init__": [[323, 363], ["torch.Module.__init__", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "enumerate", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "encs.append", "decs.append", "modules.GRUUNet._enc", "modules.GRUUNet._dec", "max", "len"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.TrackCreator.__init__", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.GRUUNet._enc", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.GRUUNet._dec"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "channels_in", ",", "\n", "enc_channels", "=", "[", "32", ",", "64", ",", "64", "]", ",", "\n", "dec_channels", "=", "[", "64", ",", "32", "]", ",", "\n", "n_enc_convs", "=", "2", ",", "\n", "n_dec_convs", "=", "2", ",", "\n", "gru_all", "=", "False", ",", "\n", "gru_nonlinearity", "=", "\"relu\"", ",", "\n", "bias", "=", "False", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_rnn", "=", "0", "\n", "self", ".", "gru_nonlinearity", "=", "gru_nonlinearity", "\n", "\n", "stride", "=", "1", "\n", "cin", "=", "channels_in", "\n", "encs", "=", "[", "]", "\n", "for", "cout", "in", "enc_channels", ":", "\n", "            ", "encs", ".", "append", "(", "\n", "self", ".", "_enc", "(", "\n", "cin", ",", "\n", "cout", ",", "\n", "stride", "=", "stride", ",", "\n", "n_convs", "=", "n_enc_convs", ",", "\n", "gru_all", "=", "gru_all", ",", "\n", ")", "\n", ")", "\n", "stride", "=", "2", "\n", "cin", "=", "cout", "\n", "", "self", ".", "encs", "=", "nn", ".", "ModuleList", "(", "encs", ")", "\n", "\n", "cin", "=", "enc_channels", "[", "-", "1", "]", "+", "enc_channels", "[", "-", "2", "]", "\n", "decs", "=", "[", "]", "\n", "for", "idx", ",", "cout", "in", "enumerate", "(", "dec_channels", ")", ":", "\n", "            ", "decs", ".", "append", "(", "\n", "self", ".", "_dec", "(", "cin", ",", "cout", ",", "n_convs", "=", "n_dec_convs", ",", "gru_all", "=", "gru_all", ")", "\n", ")", "\n", "cin", "=", "cout", "+", "enc_channels", "[", "max", "(", "-", "idx", "-", "3", ",", "-", "len", "(", "enc_channels", ")", ")", "]", "\n", "", "self", ".", "decs", "=", "nn", ".", "ModuleList", "(", "decs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.GRUUNet._enc": [[364, 397], ["range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "mods.append", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "mods.append", "mods.append", "mods.append", "modules.ConvGRU2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append"], ["", "def", "_enc", "(", "\n", "self", ",", "channels_in", ",", "channels_out", ",", "stride", "=", "2", ",", "n_convs", "=", "2", ",", "gru_all", "=", "False", "\n", ")", ":", "\n", "        ", "mods", "=", "[", "]", "\n", "if", "stride", ">", "1", ":", "\n", "            ", "mods", ".", "append", "(", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "2", ")", ")", "\n", "", "for", "idx", "in", "range", "(", "n_convs", ")", ":", "\n", "            ", "if", "gru_all", "or", "idx", "==", "n_convs", "-", "1", ":", "\n", "                ", "self", ".", "n_rnn", "+=", "1", "\n", "mods", ".", "append", "(", "\n", "ConvGRU2d", "(", "\n", "channels_in", ",", "\n", "channels_out", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ",", "\n", "bias", "=", "False", ",", "\n", "nonlinearity", "=", "self", ".", "gru_nonlinearity", ",", "\n", ")", "\n", ")", "\n", "", "else", ":", "\n", "                ", "mods", ".", "append", "(", "\n", "nn", ".", "Conv2d", "(", "\n", "channels_in", ",", "\n", "channels_out", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ",", "\n", "bias", "=", "False", ",", "\n", ")", "\n", ")", "\n", "mods", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "", "channels_in", "=", "channels_out", "\n", "stride", "=", "1", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "mods", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.GRUUNet._dec": [[398, 426], ["range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "mods.append", "mods.append", "mods.append", "modules.ConvGRU2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append"], ["", "def", "_dec", "(", "self", ",", "channels_in", ",", "channels_out", ",", "n_convs", "=", "2", ",", "gru_all", "=", "False", ")", ":", "\n", "        ", "mods", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "n_convs", ")", ":", "\n", "            ", "if", "gru_all", "or", "idx", "==", "n_convs", "-", "1", ":", "\n", "                ", "self", ".", "n_rnn", "+=", "1", "\n", "mods", ".", "append", "(", "\n", "ConvGRU2d", "(", "\n", "channels_in", ",", "\n", "channels_out", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ",", "\n", "bias", "=", "False", ",", "\n", "nonlinearity", "=", "self", ".", "gru_nonlinearity", ",", "\n", ")", "\n", ")", "\n", "", "else", ":", "\n", "                ", "mods", ".", "append", "(", "\n", "nn", ".", "Conv2d", "(", "\n", "channels_in", ",", "\n", "channels_out", ",", "\n", "kernel_size", "=", "3", ",", "\n", "padding", "=", "1", ",", "\n", "bias", "=", "False", ",", "\n", ")", "\n", ")", "\n", "mods", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "", "channels_in", "=", "channels_out", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "mods", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.GRUUNet.forward": [[427, 462], ["feats.pop", "feats.append", "feats.pop", "feats.pop", "torch.interpolate", "torch.interpolate", "torch.interpolate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "feats.append", "isinstance", "isinstance", "range", "mod", "mod", "mod", "mod"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append"], ["", "def", "forward", "(", "self", ",", "x", ",", "hs", "=", "None", ")", ":", "\n", "        ", "if", "hs", "is", "None", ":", "\n", "            ", "hs", "=", "[", "None", "for", "_", "in", "range", "(", "self", ".", "n_rnn", ")", "]", "\n", "\n", "", "hidx", "=", "0", "\n", "feats", "=", "[", "]", "\n", "for", "enc", "in", "self", ".", "encs", ":", "\n", "            ", "for", "mod", "in", "enc", ":", "\n", "                ", "if", "isinstance", "(", "mod", ",", "ConvGRU2d", ")", ":", "\n", "                    ", "x", "=", "mod", "(", "x", ",", "hs", "[", "hidx", "]", ")", "\n", "hs", "[", "hidx", "]", "=", "x", "\n", "hidx", "+=", "1", "\n", "", "else", ":", "\n", "                    ", "x", "=", "mod", "(", "x", ")", "\n", "", "", "feats", ".", "append", "(", "x", ")", "\n", "\n", "", "for", "dec", "in", "self", ".", "decs", ":", "\n", "            ", "x0", "=", "feats", ".", "pop", "(", ")", "\n", "x1", "=", "feats", ".", "pop", "(", ")", "\n", "x0", "=", "F", ".", "interpolate", "(", "\n", "x0", ",", "size", "=", "(", "x1", ".", "shape", "[", "2", "]", ",", "x1", ".", "shape", "[", "3", "]", ")", ",", "mode", "=", "\"nearest\"", "\n", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "x0", ",", "x1", ")", ",", "dim", "=", "1", ")", "\n", "del", "x0", ",", "x1", "\n", "for", "mod", "in", "dec", ":", "\n", "                ", "if", "isinstance", "(", "mod", ",", "ConvGRU2d", ")", ":", "\n", "                    ", "x", "=", "mod", "(", "x", ",", "hs", "[", "hidx", "]", ")", "\n", "hs", "[", "hidx", "]", "=", "x", "\n", "hidx", "+=", "1", "\n", "", "else", ":", "\n", "                    ", "x", "=", "mod", "(", "x", ")", "\n", "", "", "feats", ".", "append", "(", "x", ")", "\n", "\n", "", "x", "=", "feats", ".", "pop", "(", ")", "\n", "return", "x", ",", "hs", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.RNNWrapper.__init__": [[465, 468], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.TrackCreator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "net", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "net", "=", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.RNNWrapper.forward": [[469, 471], ["modules.RNNWrapper.net"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "hs", "=", "None", ")", ":", "\n", "        ", "return", "self", ".", "net", "(", "x", ")", ",", "hs", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.FixedNet.__init__": [[474, 478], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.TrackCreator.__init__"], ["    ", "def", "__init__", "(", "self", ",", "enc_net", ",", "dec_net", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "enc_net", "=", "enc_net", "\n", "self", ".", "dec_net", "=", "dec_net", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.FixedNet.forward": [[479, 503], ["modules.FixedNet.view", "modules.FixedNet.enc_net", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "modules.FixedNet.view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "modules.FixedNet.view", "modules.FixedNet.dec_net", "sampling_maps.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "x", "=", "kwargs", "[", "\"srcs\"", "]", "\n", "sampling_maps", "=", "kwargs", "[", "\"sampling_maps\"", "]", "\n", "valid_depth_masks", "=", "kwargs", "[", "\"valid_depth_masks\"", "]", "\n", "valid_map_masks", "=", "kwargs", "[", "\"valid_map_masks\"", "]", "\n", "\n", "bs", ",", "nv", "=", "x", ".", "shape", "[", ":", "2", "]", "\n", "\n", "x", "=", "x", ".", "view", "(", "bs", "*", "nv", ",", "*", "x", ".", "shape", "[", "2", ":", "]", ")", "\n", "x", "=", "self", ".", "enc_net", "(", "x", ")", "\n", "\n", "x", "=", "F", ".", "grid_sample", "(", "\n", "x", ",", "\n", "sampling_maps", ".", "view", "(", "bs", "*", "nv", ",", "*", "sampling_maps", ".", "shape", "[", "2", ":", "]", ")", ",", "\n", "mode", "=", "\"bilinear\"", ",", "\n", "padding_mode", "=", "\"zeros\"", ",", "\n", ")", "\n", "x", "=", "x", ".", "view", "(", "bs", ",", "nv", ",", "*", "x", ".", "shape", "[", "1", ":", "]", ")", "\n", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "valid_depth_masks", ",", "valid_map_masks", "]", ",", "dim", "=", "2", ")", "\n", "\n", "x", "=", "x", ".", "view", "(", "bs", ",", "nv", "*", "x", ".", "shape", "[", "2", "]", ",", "*", "x", ".", "shape", "[", "3", ":", "]", ")", "\n", "x", "=", "self", ".", "dec_net", "(", "x", ")", "\n", "return", "{", "\"out\"", ":", "x", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.MappingRNN.__init__": [[533, 568], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.TrackCreator.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "enc_net", ",", "\n", "merge_net", ",", "\n", "merge_channels", ",", "\n", "mode", "=", "\"single\"", ",", "\n", "cat_masks", "=", "True", ",", "\n", "cat_global_avg", "=", "False", ",", "\n", "cat_global_max", "=", "False", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "enc_net", "=", "enc_net", "\n", "self", ".", "merge_net", "=", "merge_net", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "cat_masks", "=", "cat_masks", "\n", "self", ".", "cat_global_avg", "=", "cat_global_avg", "\n", "self", ".", "cat_global_max", "=", "cat_global_max", "\n", "\n", "if", "mode", "in", "[", "\"single\"", ",", "\"softmax\"", "]", ":", "\n", "            ", "self", ".", "rgb_conv", "=", "nn", ".", "Conv2d", "(", "\n", "merge_channels", ",", "\n", "3", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias", "=", "False", ",", "\n", ")", "\n", "", "if", "mode", "==", "\"softmax\"", ":", "\n", "            ", "self", ".", "alpha_conv", "=", "nn", ".", "Conv2d", "(", "\n", "merge_channels", ",", "\n", "1", ",", "\n", "kernel_size", "=", "1", ",", "\n", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "\n", "bias", "=", "False", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.MappingRNN.forward_train": [[570, 621], ["modules.MappingRNN.view", "modules.MappingRNN.enc_net", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "modules.MappingRNN.view", "range", "sampling_maps.view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "modules.MappingRNN.mean", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "modules.MappingRNN.merge_net", "modules.MappingRNN.rgb_conv", "modules.MappingRNN.max", "torch.stack.append", "torch.stack.append", "torch.stack.append", "torch.softmax.append", "torch.softmax.append", "torch.softmax.append", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "modules.MappingRNN.mean.expand_as", "x_max.expand_as", "modules.MappingRNN.rgb_conv", "modules.MappingRNN.alpha_conv"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append"], ["", "", "def", "forward_train", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "x", "=", "kwargs", "[", "\"srcs\"", "]", "\n", "sampling_maps", "=", "kwargs", "[", "\"sampling_maps\"", "]", "\n", "valid_depth_masks", "=", "kwargs", "[", "\"valid_depth_masks\"", "]", "\n", "valid_map_masks", "=", "kwargs", "[", "\"valid_map_masks\"", "]", "\n", "\n", "bs", ",", "nv", "=", "x", ".", "shape", "[", ":", "2", "]", "\n", "\n", "x", "=", "x", ".", "view", "(", "bs", "*", "nv", ",", "*", "x", ".", "shape", "[", "2", ":", "]", ")", "\n", "x", "=", "self", ".", "enc_net", "(", "x", ")", "\n", "\n", "x", "=", "F", ".", "grid_sample", "(", "\n", "x", ",", "\n", "sampling_maps", ".", "view", "(", "bs", "*", "nv", ",", "*", "sampling_maps", ".", "shape", "[", "2", ":", "]", ")", ",", "\n", "mode", "=", "\"bilinear\"", ",", "\n", "padding_mode", "=", "\"zeros\"", ",", "\n", ")", "\n", "x", "=", "x", ".", "view", "(", "bs", ",", "nv", ",", "*", "x", ".", "shape", "[", "1", ":", "]", ")", "\n", "\n", "if", "self", ".", "cat_masks", ":", "\n", "            ", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "valid_depth_masks", ",", "valid_map_masks", "]", ",", "dim", "=", "2", ")", "\n", "\n", "", "if", "self", ".", "cat_global_avg", ":", "\n", "            ", "x_avg", "=", "x", ".", "mean", "(", "axis", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "x_avg", ".", "expand_as", "(", "x", ")", "]", ",", "dim", "=", "2", ")", "\n", "\n", "", "if", "self", ".", "cat_global_max", ":", "\n", "            ", "x_max", "=", "x", ".", "max", "(", "axis", "=", "1", ",", "keepdim", "=", "True", ")", "[", "0", "]", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "x_max", ".", "expand_as", "(", "x", ")", "]", ",", "dim", "=", "2", ")", "\n", "\n", "", "hs", "=", "None", "\n", "if", "self", ".", "mode", "==", "\"softmax\"", ":", "\n", "            ", "rgbs", "=", "[", "]", "\n", "alphas", "=", "[", "]", "\n", "", "for", "vidx", "in", "range", "(", "nv", ")", ":", "\n", "            ", "y", ",", "hs", "=", "self", ".", "merge_net", "(", "x", "[", ":", ",", "vidx", "]", ",", "hs", ")", "\n", "\n", "if", "self", ".", "mode", "==", "\"softmax\"", ":", "\n", "                ", "rgbs", ".", "append", "(", "self", ".", "rgb_conv", "(", "y", ")", ")", "\n", "alphas", ".", "append", "(", "self", ".", "alpha_conv", "(", "y", ")", ")", "\n", "\n", "", "", "if", "self", ".", "mode", "==", "\"single\"", ":", "\n", "            ", "x", "=", "self", ".", "rgb_conv", "(", "y", ")", "\n", "", "elif", "self", ".", "mode", "==", "\"softmax\"", ":", "\n", "            ", "rgbs", "=", "torch", ".", "stack", "(", "rgbs", ")", "\n", "alphas", "=", "torch", ".", "stack", "(", "alphas", ")", "\n", "alphas", "=", "torch", ".", "softmax", "(", "alphas", ",", "dim", "=", "0", ")", "\n", "x", "=", "(", "alphas", "*", "rgbs", ")", ".", "sum", "(", "dim", "=", "0", ")", "\n", "del", "rgbs", ",", "alphas", "\n", "\n", "", "return", "{", "\"out\"", ":", "x", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.MappingRNN.forward_eval": [[622, 721], ["range", "range", "range", "modules.MappingRNN.enc_net", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "modules.MappingRNN.merge_net", "modules.MappingRNN.rgb_conv", "modules.MappingRNN.enc_net", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "modules.MappingRNN.enc_net", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.stack.append", "torch.stack.append", "torch.stack.append", "torch.softmax.append", "torch.softmax.append", "torch.softmax.append", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "modules.MappingRNN.rgb_conv", "modules.MappingRNN.alpha_conv"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append"], ["", "def", "forward_eval", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "x_all", "=", "kwargs", "[", "\"srcs\"", "]", "\n", "sampling_maps", "=", "kwargs", "[", "\"sampling_maps\"", "]", "\n", "valid_depth_masks", "=", "kwargs", "[", "\"valid_depth_masks\"", "]", "\n", "valid_map_masks", "=", "kwargs", "[", "\"valid_map_masks\"", "]", "\n", "\n", "bs", ",", "nv", "=", "x_all", ".", "shape", "[", ":", "2", "]", "\n", "\n", "if", "self", ".", "cat_global_avg", ":", "\n", "            ", "x_mean", "=", "None", "\n", "for", "vidx", "in", "range", "(", "nv", ")", ":", "\n", "                ", "x", "=", "x_all", "[", ":", ",", "vidx", "]", "\n", "x", "=", "self", ".", "enc_net", "(", "x", ")", "\n", "x", "=", "F", ".", "grid_sample", "(", "\n", "x", ",", "\n", "sampling_maps", "[", ":", ",", "vidx", "]", ",", "\n", "mode", "=", "\"bilinear\"", ",", "\n", "padding_mode", "=", "\"zeros\"", ",", "\n", ")", "\n", "if", "self", ".", "cat_masks", ":", "\n", "                    ", "x", "=", "torch", ".", "cat", "(", "\n", "[", "\n", "x", ",", "\n", "valid_depth_masks", "[", ":", ",", "vidx", "]", ",", "\n", "valid_map_masks", "[", ":", ",", "vidx", "]", ",", "\n", "]", ",", "\n", "dim", "=", "1", ",", "\n", ")", "\n", "", "if", "x_mean", "is", "None", ":", "\n", "                    ", "x_mean", "=", "x", "/", "nv", "\n", "", "else", ":", "\n", "                    ", "x_mean", "+=", "x", "/", "nv", "\n", "\n", "", "", "", "if", "self", ".", "cat_global_max", ":", "\n", "            ", "x_max", "=", "None", "\n", "for", "vidx", "in", "range", "(", "nv", ")", ":", "\n", "                ", "x", "=", "x_all", "[", ":", ",", "vidx", "]", "\n", "x", "=", "self", ".", "enc_net", "(", "x", ")", "\n", "x", "=", "F", ".", "grid_sample", "(", "\n", "x", ",", "\n", "sampling_maps", "[", ":", ",", "vidx", "]", ",", "\n", "mode", "=", "\"bilinear\"", ",", "\n", "padding_mode", "=", "\"zeros\"", ",", "\n", ")", "\n", "if", "self", ".", "cat_masks", ":", "\n", "                    ", "x", "=", "torch", ".", "cat", "(", "\n", "[", "\n", "x", ",", "\n", "valid_depth_masks", "[", ":", ",", "vidx", "]", ",", "\n", "valid_map_masks", "[", ":", ",", "vidx", "]", ",", "\n", "]", ",", "\n", "dim", "=", "1", ",", "\n", ")", "\n", "", "if", "x_max", "is", "None", ":", "\n", "                    ", "x_max", "=", "x", "\n", "", "else", ":", "\n", "                    ", "x_max", "=", "torch", ".", "max", "(", "x", ",", "x_max", ")", "\n", "\n", "", "", "", "hs", "=", "None", "\n", "if", "self", ".", "mode", "==", "\"softmax\"", ":", "\n", "            ", "rgbs", "=", "[", "]", "\n", "alphas", "=", "[", "]", "\n", "", "for", "vidx", "in", "range", "(", "nv", ")", ":", "\n", "            ", "x", "=", "x_all", "[", ":", ",", "vidx", "]", "\n", "x", "=", "self", ".", "enc_net", "(", "x", ")", "\n", "\n", "x", "=", "F", ".", "grid_sample", "(", "\n", "x", ",", "sampling_maps", "[", ":", ",", "vidx", "]", ",", "mode", "=", "\"bilinear\"", ",", "padding_mode", "=", "\"zeros\"", "\n", ")", "\n", "\n", "if", "self", ".", "cat_masks", ":", "\n", "                ", "x", "=", "torch", ".", "cat", "(", "\n", "[", "x", ",", "valid_depth_masks", "[", ":", ",", "vidx", "]", ",", "valid_map_masks", "[", ":", ",", "vidx", "]", "]", ",", "\n", "dim", "=", "1", ",", "\n", ")", "\n", "\n", "", "if", "self", ".", "cat_global_avg", ":", "\n", "                ", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "x_mean", "]", ",", "dim", "=", "1", ")", "\n", "\n", "", "if", "self", ".", "cat_global_max", ":", "\n", "                ", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "x_max", "]", ",", "dim", "=", "1", ")", "\n", "\n", "", "x", ",", "hs", "=", "self", ".", "merge_net", "(", "x", ",", "hs", ")", "\n", "\n", "if", "self", ".", "mode", "==", "\"softmax\"", ":", "\n", "                ", "rgbs", ".", "append", "(", "self", ".", "rgb_conv", "(", "x", ")", ")", "\n", "alphas", ".", "append", "(", "self", ".", "alpha_conv", "(", "x", ")", ")", "\n", "\n", "", "", "del", "x_all", "\n", "if", "self", ".", "mode", "==", "\"single\"", ":", "\n", "            ", "x", "=", "self", ".", "rgb_conv", "(", "x", ")", "\n", "", "elif", "self", ".", "mode", "==", "\"softmax\"", ":", "\n", "            ", "rgbs", "=", "torch", ".", "stack", "(", "rgbs", ")", "\n", "alphas", "=", "torch", ".", "stack", "(", "alphas", ")", "\n", "alphas", "=", "torch", ".", "softmax", "(", "alphas", ",", "dim", "=", "0", ")", "\n", "x", "=", "(", "alphas", "*", "rgbs", ")", ".", "sum", "(", "dim", "=", "0", ")", "\n", "del", "rgbs", ",", "alphas", "\n", "\n", "", "return", "{", "\"out\"", ":", "x", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.MappingRNN.forward": [[722, 727], ["modules.MappingRNN.forward_train", "modules.MappingRNN.forward_eval"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.MappingRNN.forward_train", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.MappingRNN.forward_eval"], ["", "def", "forward", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "self", ".", "training", ":", "\n", "            ", "return", "self", ".", "forward_train", "(", "**", "kwargs", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "forward_eval", "(", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.AggrNet.__init__": [[793, 839], ["torch.Module.__init__", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.tensor().float", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "enumerate", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "modules.AggrNet.create_stage", "modules.AggrNet.encs.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "modules.AggrNet.enc_translates.append", "modules.AggrNet.create_stage", "modules.AggrNet.decs.append", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.TrackCreator.__init__", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.AggrNet.create_stage", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.AggrNet.create_stage", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "enc_net", ",", "\n", "enc_net_channels", ",", "\n", "enc_channels", "=", "[", "64", ",", "128", ",", "256", "]", ",", "\n", "dec_channels", "=", "[", "128", ",", "64", "]", ",", "\n", "n_enc_convs", "=", "2", ",", "\n", "n_dec_convs", "=", "2", ",", "\n", "aggr_mode", "=", "\"mean\"", ",", "\n", "multi_aggr", "=", "\"none\"", ",", "\n", "cat_masks", "=", "True", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "enc_net", "=", "enc_net", "\n", "self", ".", "aggr_mode", "=", "aggr_mode", "\n", "self", ".", "multi_aggr", "=", "multi_aggr", "\n", "self", ".", "cat_masks", "=", "cat_masks", "\n", "\n", "self", ".", "zero_tensor", "=", "torch", ".", "tensor", "(", "[", "0", "]", ")", ".", "float", "(", ")", "\n", "\n", "self", ".", "encs", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "enc_translates", "=", "nn", ".", "ModuleList", "(", ")", "\n", "in_channels", "=", "2", "*", "enc_net_channels", "\n", "for", "enc_channel", "in", "enc_channels", ":", "\n", "            ", "stage", "=", "self", ".", "create_stage", "(", "in_channels", ",", "enc_channel", ",", "n_enc_convs", ")", "\n", "self", ".", "encs", ".", "append", "(", "stage", ")", "\n", "translate", "=", "nn", ".", "Conv2d", "(", "enc_channel", ",", "enc_channel", ",", "kernel_size", "=", "1", ")", "\n", "self", ".", "enc_translates", ".", "append", "(", "translate", ")", "\n", "in_channels", "=", "enc_channel", "\n", "if", "multi_aggr", "==", "\"multiple\"", ":", "\n", "                ", "in_channels", "*=", "2", "\n", "", "elif", "multi_aggr", "==", "\"simple\"", ":", "\n", "                ", "in_channels", "+=", "enc_net_channels", "\n", "\n", "", "", "self", ".", "decs", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "idx", ",", "dec_channel", "in", "enumerate", "(", "dec_channels", ")", ":", "\n", "            ", "in_channels", "=", "enc_channels", "[", "-", "idx", "-", "1", "]", "+", "enc_channels", "[", "-", "idx", "-", "2", "]", "\n", "stage", "=", "self", ".", "create_stage", "(", "in_channels", ",", "dec_channel", ",", "n_dec_convs", ")", "\n", "self", ".", "decs", ".", "append", "(", "stage", ")", "\n", "\n", "", "self", ".", "upsample", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "\"nearest\"", ")", "\n", "\n", "self", ".", "alpha_conv", "=", "nn", ".", "Conv2d", "(", "\n", "dec_channels", "[", "-", "1", "]", ",", "1", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", "\n", ")", "\n", "self", ".", "rgb_conv", "=", "nn", ".", "Conv2d", "(", "dec_channels", "[", "-", "1", "]", ",", "3", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.AggrNet.convrelu": [[840, 846], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["None"], ["", "def", "convrelu", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", "=", "3", ",", "padding", "=", "None", ")", ":", "\n", "        ", "if", "padding", "is", "None", ":", "\n", "            ", "padding", "=", "kernel_size", "//", "2", "\n", "", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "padding", "=", "padding", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.AggrNet.create_stage": [[848, 854], ["range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "mods.append", "modules.AggrNet.convrelu"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.AggrNet.convrelu"], ["", "def", "create_stage", "(", "self", ",", "in_channels", ",", "out_channels", ",", "n_convs", ")", ":", "\n", "        ", "mods", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "n_convs", ")", ":", "\n", "            ", "mods", ".", "append", "(", "self", ".", "convrelu", "(", "in_channels", ",", "out_channels", ")", ")", "\n", "in_channels", "=", "out_channels", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "mods", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.AggrNet.forward": [[855, 942], ["x.view.view.view", "modules.AggrNet.enc_net", "torch.grid_sample", "torch.grid_sample", "torch.grid_sample", "x.view.view.view", "x.view.view.view", "zip", "outs.pop", "modules.AggrNet.alpha_conv", "alpha.view.view.view", "modules.AggrNet.rgb_conv", "x.view.view.view", "sampling_maps.view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "itertools.count", "enc", "outs.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "dec", "outs.append", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "valid_map_masks.sum", "x.view.view.view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "x.view.view.view", "enc_translates", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "outs.pop", "outs.pop", "x.view.view.mean", "torch.where.view", "torch.where.view", "torch.where.view", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "torch.where.view", "torch.where.view", "torch.where.view", "x.view.view.view", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "x.view.view.view", "len", "modules.AggrNet.upsample", "torch.where.expand_as", "torch.where.expand_as", "torch.where.expand_as", "x.view.view.max", "x.view.view.sum", "modules.AggrNet.zero_tensor.to", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "Exception", "torch.where.expand", "torch.where.expand", "torch.where.expand", "valid_map_mask_sum.view.view.view", "torch.max_pool2d", "torch.max_pool2d", "torch.max_pool2d", "valid_map_mask_sum.view.view.view", "valid_map_mask_sum.view.view.expand_as", "len"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append"], ["", "def", "forward", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "x", "=", "kwargs", "[", "\"srcs\"", "]", "\n", "sampling_maps", "=", "kwargs", "[", "\"sampling_maps\"", "]", "\n", "valid_depth_masks", "=", "kwargs", "[", "\"valid_depth_masks\"", "]", "\n", "valid_map_masks", "=", "kwargs", "[", "\"valid_map_masks\"", "]", "\n", "\n", "bs", ",", "nv", "=", "x", ".", "shape", "[", ":", "2", "]", "\n", "\n", "x", "=", "x", ".", "view", "(", "bs", "*", "nv", ",", "*", "x", ".", "shape", "[", "2", ":", "]", ")", "\n", "x", "=", "self", ".", "enc_net", "(", "x", ")", "\n", "\n", "x", "=", "F", ".", "grid_sample", "(", "\n", "x", ",", "\n", "sampling_maps", ".", "view", "(", "bs", "*", "nv", ",", "*", "sampling_maps", ".", "shape", "[", "2", ":", "]", ")", ",", "\n", "mode", "=", "\"bilinear\"", ",", "\n", "padding_mode", "=", "\"zeros\"", ",", "\n", ")", "\n", "x", "=", "x", ".", "view", "(", "bs", ",", "nv", ",", "*", "x", ".", "shape", "[", "1", ":", "]", ")", "\n", "\n", "if", "self", ".", "cat_masks", ":", "\n", "            ", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "valid_depth_masks", ",", "valid_map_masks", "]", ",", "dim", "=", "2", ")", "\n", "\n", "", "if", "self", ".", "aggr_mode", "==", "\"maskedmean\"", ":", "\n", "            ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "valid_map_mask_sum", "=", "valid_map_masks", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "\n", "", "", "x", "=", "x", ".", "view", "(", "bs", "*", "nv", ",", "*", "x", ".", "shape", "[", "2", ":", "]", ")", "\n", "outs", "=", "[", "]", "\n", "for", "enc_idx", ",", "enc", ",", "enc_translates", "in", "zip", "(", "\n", "itertools", ".", "count", "(", ")", ",", "self", ".", "encs", ",", "self", ".", "enc_translates", "\n", ")", ":", "\n", "            ", "if", "enc_idx", "==", "0", "or", "self", ".", "multi_aggr", "==", "\"multiple\"", ":", "\n", "                ", "x", "=", "x", ".", "view", "(", "bs", ",", "nv", ",", "*", "x", ".", "shape", "[", "1", ":", "]", ")", "\n", "if", "self", ".", "aggr_mode", "==", "\"mean\"", ":", "\n", "                    ", "x_global", "=", "x", ".", "mean", "(", "axis", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "", "elif", "self", ".", "aggr_mode", "==", "\"max\"", ":", "\n", "                    ", "x_global", "=", "x", ".", "max", "(", "axis", "=", "1", ",", "keepdim", "=", "True", ")", "[", "0", "]", "\n", "", "elif", "self", ".", "aggr_mode", "==", "\"maskedmean\"", ":", "\n", "                    ", "x_global", "=", "x", ".", "sum", "(", "axis", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "self", ".", "zero_tensor", "=", "self", ".", "zero_tensor", ".", "to", "(", "\n", "valid_map_masks", ".", "device", "\n", ")", "\n", "x_global", "=", "torch", ".", "where", "(", "\n", "valid_map_mask_sum", ".", "expand_as", "(", "x_global", ")", ">", "0", ",", "\n", "x_global", "/", "(", "valid_map_mask_sum", "+", "1e-6", ")", ",", "\n", "self", ".", "zero_tensor", ",", "\n", ")", "\n", "if", "enc_idx", "<", "len", "(", "self", ".", "encs", ")", "-", "1", ":", "\n", "                        ", "valid_map_mask_sum", "=", "valid_map_mask_sum", ".", "view", "(", "\n", "bs", ",", "*", "valid_map_mask_sum", ".", "shape", "[", "2", ":", "]", "\n", ")", "\n", "valid_map_mask_sum", "=", "F", ".", "max_pool2d", "(", "\n", "valid_map_mask_sum", ",", "kernel_size", "=", "2", "\n", ")", "\n", "valid_map_mask_sum", "=", "valid_map_mask_sum", ".", "view", "(", "\n", "bs", ",", "1", ",", "*", "valid_map_mask_sum", ".", "shape", "[", "1", ":", "]", "\n", ")", "\n", "", "", "else", ":", "\n", "                    ", "raise", "Exception", "(", "\"invalid aggr_mode\"", ")", "\n", "", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "x_global", ".", "expand_as", "(", "x", ")", "]", ",", "dim", "=", "2", ")", "\n", "x", "=", "x", ".", "view", "(", "bs", "*", "nv", ",", "*", "x", ".", "shape", "[", "2", ":", "]", ")", "\n", "", "elif", "enc_idx", ">", "0", "and", "self", ".", "multi_aggr", "==", "\"simple\"", ":", "\n", "                ", "x_global", "=", "x_global", ".", "view", "(", "bs", ",", "*", "x_global", ".", "shape", "[", "2", ":", "]", ")", "\n", "x_global", "=", "F", ".", "avg_pool2d", "(", "x_global", ",", "kernel_size", "=", "2", ")", "\n", "x_global", "=", "x_global", ".", "view", "(", "bs", ",", "1", ",", "*", "x_global", ".", "shape", "[", "1", ":", "]", ")", "\n", "x", "=", "x", ".", "view", "(", "bs", ",", "nv", ",", "*", "x", ".", "shape", "[", "1", ":", "]", ")", "\n", "x", "=", "torch", ".", "cat", "(", "[", "x", ",", "x_global", ".", "expand", "(", "-", "1", ",", "nv", ",", "-", "1", ",", "-", "1", ",", "-", "1", ")", "]", ",", "dim", "=", "2", ")", "\n", "x", "=", "x", ".", "view", "(", "bs", "*", "nv", ",", "*", "x", ".", "shape", "[", "2", ":", "]", ")", "\n", "", "x", "=", "enc", "(", "x", ")", "\n", "outs", ".", "append", "(", "enc_translates", "(", "x", ")", ")", "\n", "if", "enc_idx", "<", "len", "(", "self", ".", "encs", ")", "-", "1", ":", "\n", "                ", "x", "=", "F", ".", "avg_pool2d", "(", "x", ",", "kernel_size", "=", "2", ")", "\n", "\n", "", "", "for", "dec", "in", "self", ".", "decs", ":", "\n", "            ", "x0", ",", "x1", "=", "outs", ".", "pop", "(", ")", ",", "outs", ".", "pop", "(", ")", "\n", "x", "=", "torch", ".", "cat", "(", "(", "self", ".", "upsample", "(", "x0", ")", ",", "x1", ")", ",", "dim", "=", "1", ")", "\n", "x", "=", "dec", "(", "x", ")", "\n", "outs", ".", "append", "(", "x", ")", "\n", "\n", "", "x", "=", "outs", ".", "pop", "(", ")", "\n", "alpha", "=", "self", ".", "alpha_conv", "(", "x", ")", "\n", "alpha", "=", "alpha", ".", "view", "(", "bs", ",", "nv", ",", "*", "alpha", ".", "shape", "[", "1", ":", "]", ")", "\n", "x", "=", "self", ".", "rgb_conv", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "bs", ",", "nv", ",", "*", "x", ".", "shape", "[", "1", ":", "]", ")", "\n", "x", "=", "(", "x", "*", "alpha", ")", ".", "sum", "(", "dim", "=", "1", ")", "\n", "\n", "return", "{", "\"out\"", ":", "x", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.get_fixed_net": [[505, 530], ["modules.FixedNet", "modules.Identity", "modules.UNet", "Exception", "modules.VGGUNet", "Exception"], "function", ["None"], ["", "", "def", "get_fixed_net", "(", "enc_net", ",", "dec_net", ",", "n_views", ")", ":", "\n", "    ", "if", "enc_net", "==", "\"identity\"", ":", "\n", "        ", "enc_net", "=", "Identity", "(", ")", "\n", "enc_channels", "=", "3", "\n", "", "elif", "enc_net", "==", "\"vgg16unet3\"", ":", "\n", "        ", "enc_net", "=", "VGGUNet", "(", "net", "=", "\"vgg16\"", ",", "n_encoder_stages", "=", "3", ")", "\n", "enc_channels", "=", "64", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"invalid enc_net\"", ")", "\n", "\n", "", "enc_channels", "=", "n_views", "*", "(", "enc_channels", "+", "2", ")", "\n", "\n", "if", "dec_net", "==", "\"unet4.64.3\"", ":", "\n", "        ", "dec_net", "=", "UNet", "(", "\n", "enc_channels", ",", "\n", "enc_channels", "=", "[", "64", ",", "128", ",", "256", ",", "512", "]", ",", "\n", "dec_channels", "=", "[", "256", ",", "128", ",", "64", "]", ",", "\n", "out_channels", "=", "3", ",", "\n", "n_enc_convs", "=", "3", ",", "\n", "n_dec_convs", "=", "3", ",", "\n", ")", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"invalid dec_net\"", ")", "\n", "\n", "", "return", "FixedNet", "(", "enc_net", ",", "dec_net", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.get_rnn_net": [[729, 789], ["modules.MappingRNN", "modules.Identity", "modules.GRUUNet", "modules.VGGUNet", "Exception", "modules.RNNWrapper", "Exception", "modules.UNet"], "function", ["None"], ["", "", "", "def", "get_rnn_net", "(", "\n", "enc_net", ",", "\n", "merge_net", ",", "\n", "mode", "=", "\"softmax\"", ",", "\n", "cat_masks", "=", "True", ",", "\n", "cat_global_avg", "=", "False", ",", "\n", "cat_global_max", "=", "False", ",", "\n", "gru_nonlinearity", "=", "\"relu\"", ",", "\n", ")", ":", "\n", "    ", "if", "enc_net", "==", "\"identity\"", ":", "\n", "        ", "enc_net", "=", "Identity", "(", ")", "\n", "enc_channels", "=", "3", "\n", "", "elif", "enc_net", "==", "\"vgg16unet3\"", ":", "\n", "        ", "enc_net", "=", "VGGUNet", "(", "net", "=", "\"vgg16\"", ",", "n_encoder_stages", "=", "3", ")", "\n", "enc_channels", "=", "64", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"invalid enc_net\"", ")", "\n", "\n", "", "if", "cat_masks", ":", "\n", "        ", "enc_channels", "=", "enc_channels", "+", "2", "\n", "\n", "", "if", "cat_global_avg", ":", "\n", "        ", "enc_channels", "*=", "2", "\n", "\n", "", "if", "cat_global_max", ":", "\n", "        ", "enc_channels", "*=", "2", "\n", "\n", "", "if", "merge_net", "==", "\"gruunet4.64.3\"", ":", "\n", "        ", "merge_net", "=", "GRUUNet", "(", "\n", "enc_channels", ",", "\n", "enc_channels", "=", "[", "64", ",", "128", ",", "256", ",", "512", "]", ",", "\n", "dec_channels", "=", "[", "256", ",", "128", ",", "64", "]", ",", "\n", "n_enc_convs", "=", "3", ",", "\n", "n_dec_convs", "=", "3", ",", "\n", "gru_nonlinearity", "=", "gru_nonlinearity", ",", "\n", ")", "\n", "merge_channels", "=", "64", "\n", "", "elif", "merge_net", "==", "\"unet4.64.3\"", ":", "\n", "        ", "merge_net", "=", "RNNWrapper", "(", "\n", "UNet", "(", "\n", "enc_channels", ",", "\n", "enc_channels", "=", "[", "64", ",", "128", ",", "256", ",", "512", "]", ",", "\n", "dec_channels", "=", "[", "256", ",", "128", ",", "64", "]", ",", "\n", "n_enc_convs", "=", "3", ",", "\n", "n_dec_convs", "=", "3", ",", "\n", "out_channels", "=", "-", "1", ",", "\n", ")", "\n", ")", "\n", "merge_channels", "=", "64", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"invalid merge_net\"", ")", "\n", "\n", "", "return", "MappingRNN", "(", "\n", "enc_net", ",", "\n", "merge_net", ",", "\n", "merge_channels", ",", "\n", "mode", ",", "\n", "cat_masks", ",", "\n", "cat_global_avg", ",", "\n", "cat_global_max", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.modules.get_aggr_net": [[944, 977], ["modules.AggrNet", "modules.Identity", "Exception", "modules.VGGUNet", "Exception"], "function", ["None"], ["", "", "def", "get_aggr_net", "(", "\n", "enc_net", ",", "merge_net", ",", "aggr_mode", ",", "multi_aggr", "=", "\"none\"", ",", "cat_masks", "=", "True", "\n", ")", ":", "\n", "    ", "if", "enc_net", "==", "\"identity\"", ":", "\n", "        ", "enc_net", "=", "Identity", "(", ")", "\n", "enc_net_channels", "=", "3", "\n", "", "elif", "enc_net", "==", "\"vgg16unet3\"", ":", "\n", "        ", "enc_net", "=", "VGGUNet", "(", "net", "=", "\"vgg16\"", ",", "n_encoder_stages", "=", "3", ")", "\n", "enc_net_channels", "=", "64", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"invalid enc_net\"", ")", "\n", "\n", "", "if", "cat_masks", ":", "\n", "        ", "enc_net_channels", "=", "enc_net_channels", "+", "2", "\n", "\n", "", "if", "merge_net", "==", "\"unet4.64.3\"", ":", "\n", "        ", "enc_channels", "=", "[", "64", ",", "128", ",", "256", ",", "512", "]", "\n", "dec_channels", "=", "[", "256", ",", "128", ",", "64", "]", "\n", "n_enc_convs", "=", "3", "\n", "n_dec_convs", "=", "3", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"invalid merge_net\"", ")", "\n", "\n", "", "return", "AggrNet", "(", "\n", "enc_net", ",", "\n", "enc_net_channels", ",", "\n", "enc_channels", "=", "enc_channels", ",", "\n", "dec_channels", "=", "dec_channels", ",", "\n", "n_enc_convs", "=", "n_enc_convs", ",", "\n", "n_dec_convs", "=", "n_dec_convs", ",", "\n", "aggr_mode", "=", "aggr_mode", ",", "\n", "multi_aggr", "=", "multi_aggr", ",", "\n", "cat_masks", "=", "cat_masks", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.Dataset.__init__": [[31, 88], ["super().__init__", "numpy.load", "logging.info", "len", "dataset.Dataset.load_pad", "dataset.Dataset.load_pad"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.TrackCreator.__init__", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.load", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.Dataset.load_pad", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.Dataset.load_pad"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "*", ",", "\n", "name", ",", "\n", "tgt_im_paths", ",", "\n", "tgt_dm_paths", ",", "\n", "tgt_Ks", ",", "\n", "tgt_Rs", ",", "\n", "tgt_ts", ",", "\n", "tgt_counts", ",", "\n", "src_im_paths", ",", "\n", "src_dm_paths", ",", "\n", "src_Ks", ",", "\n", "src_Rs", ",", "\n", "src_ts", ",", "\n", "im_size", "=", "None", ",", "\n", "pad_width", "=", "None", ",", "\n", "patch", "=", "None", ",", "\n", "n_nbs", "=", "5", ",", "\n", "nbs_mode", "=", "\"sample\"", ",", "\n", "bwd_depth_thresh", "=", "0.1", ",", "\n", "invalid_depth_to_inf", "=", "True", ",", "\n", "**", "kwargs", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "name", "=", "name", ",", "**", "kwargs", ")", "\n", "\n", "self", ".", "tgt_im_paths", "=", "tgt_im_paths", "\n", "self", ".", "tgt_dm_paths", "=", "tgt_dm_paths", "\n", "self", ".", "tgt_Ks", "=", "tgt_Ks", "\n", "self", ".", "tgt_Rs", "=", "tgt_Rs", "\n", "self", ".", "tgt_ts", "=", "tgt_ts", "\n", "self", ".", "tgt_counts", "=", "tgt_counts", "\n", "\n", "self", ".", "src_im_paths", "=", "src_im_paths", "\n", "self", ".", "src_dm_paths", "=", "src_dm_paths", "\n", "self", ".", "src_Ks", "=", "src_Ks", "\n", "self", ".", "src_Rs", "=", "src_Rs", "\n", "self", ".", "src_ts", "=", "src_ts", "\n", "\n", "self", ".", "im_size", "=", "im_size", "\n", "self", ".", "pad_width", "=", "pad_width", "\n", "self", ".", "patch", "=", "patch", "\n", "self", ".", "n_nbs", "=", "n_nbs", "\n", "self", ".", "nbs_mode", "=", "nbs_mode", "\n", "self", ".", "bwd_depth_thresh", "=", "bwd_depth_thresh", "\n", "self", ".", "invalid_depth_to_inf", "=", "invalid_depth_to_inf", "\n", "\n", "tmp", "=", "np", ".", "load", "(", "tgt_dm_paths", "[", "0", "]", ")", "\n", "self", ".", "height", ",", "self", ".", "width", "=", "tmp", ".", "shape", "\n", "del", "tmp", "\n", "\n", "n_tgt_im_paths", "=", "len", "(", "tgt_im_paths", ")", "if", "tgt_im_paths", "else", "0", "\n", "shape_tgt_im", "=", "(", "\n", "self", ".", "load_pad", "(", "tgt_im_paths", "[", "0", "]", ")", ".", "shape", "if", "tgt_im_paths", "else", "None", "\n", ")", "\n", "logging", ".", "info", "(", "\n", "f\"    #tgt_im_paths={n_tgt_im_paths}, #tgt_counts={tgt_counts.shape}, tgt_im={shape_tgt_im}, tgt_dm={self.load_pad(tgt_dm_paths[0]).shape}\"", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.Dataset.pad": [[90, 113], ["numpy.zeros", "min", "min", "numpy.zeros"], "methods", ["None"], ["", "def", "pad", "(", "self", ",", "im", ")", ":", "\n", "        ", "if", "self", ".", "im_size", "is", "not", "None", ":", "\n", "            ", "shape", "=", "[", "s", "for", "s", "in", "im", ".", "shape", "]", "\n", "shape", "[", "-", "2", "]", "=", "self", ".", "im_size", "[", "0", "]", "\n", "shape", "[", "-", "1", "]", "=", "self", ".", "im_size", "[", "1", "]", "\n", "im_p", "=", "np", ".", "zeros", "(", "shape", ",", "dtype", "=", "im", ".", "dtype", ")", "\n", "sh", "=", "min", "(", "im_p", ".", "shape", "[", "-", "2", "]", ",", "im", ".", "shape", "[", "-", "2", "]", ")", "\n", "sw", "=", "min", "(", "im_p", ".", "shape", "[", "-", "1", "]", ",", "im", ".", "shape", "[", "-", "1", "]", ")", "\n", "im_p", "[", "...", ",", ":", "sh", ",", ":", "sw", "]", "=", "im", "[", "...", ",", ":", "sh", ",", ":", "sw", "]", "\n", "im", "=", "im_p", "\n", "", "if", "self", ".", "pad_width", "is", "not", "None", ":", "\n", "            ", "h", ",", "w", "=", "im", ".", "shape", "[", "-", "2", ":", "]", "\n", "mh", "=", "h", "%", "self", ".", "pad_width", "\n", "ph", "=", "0", "if", "mh", "==", "0", "else", "self", ".", "pad_width", "-", "mh", "\n", "mw", "=", "w", "%", "self", ".", "pad_width", "\n", "pw", "=", "0", "if", "mw", "==", "0", "else", "self", ".", "pad_width", "-", "mw", "\n", "shape", "=", "[", "s", "for", "s", "in", "im", ".", "shape", "]", "\n", "shape", "[", "-", "2", "]", "+=", "ph", "\n", "shape", "[", "-", "1", "]", "+=", "pw", "\n", "im_p", "=", "np", ".", "zeros", "(", "shape", ",", "dtype", "=", "im", ".", "dtype", ")", "\n", "im_p", "[", "...", ",", ":", "h", ",", ":", "w", "]", "=", "im", "\n", "im", "=", "im_p", "\n", "", "return", "im", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.Dataset.load_pad": [[114, 117], ["dataset.load", "dataset.Dataset.pad"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.load", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.Dataset.pad"], ["", "def", "load_pad", "(", "self", ",", "p", ")", ":", "\n", "        ", "im", "=", "load", "(", "p", ")", "\n", "return", "self", ".", "pad", "(", "im", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.Dataset.base_len": [[118, 120], ["len"], "methods", ["None"], ["", "def", "base_len", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "tgt_dm_paths", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.Dataset.base_getitem": [[121, 198], ["dataset.load", "dataset.Dataset.pad", "numpy.array", "dataset.Dataset.pad", "numpy.array", "numpy.array", "numpy.array", "ext.preprocess.get_sampling_map", "numpy.array", "rng.randint", "rng.randint", "numpy.array", "numpy.array", "dataset.load", "numpy.zeros", "numpy.argsort", "rng.choice", "Exception", "dataset.load", "min", "min", "dataset.Dataset.load_pad", "min", "min", "count.sum"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.load", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.Dataset.pad", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.Dataset.pad", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.load", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.load", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.Dataset.load_pad"], ["", "def", "base_getitem", "(", "self", ",", "idx", ",", "rng", ")", ":", "\n", "        ", "count", "=", "self", ".", "tgt_counts", "[", "idx", "]", "\n", "if", "self", ".", "nbs_mode", "==", "\"argmax\"", ":", "\n", "            ", "nbs", "=", "np", ".", "argsort", "(", "count", ")", "[", ":", ":", "-", "1", "]", "\n", "nbs", "=", "nbs", "[", ":", "self", ".", "n_nbs", "]", "\n", "", "elif", "self", ".", "nbs_mode", "==", "\"sample\"", ":", "\n", "            ", "nbs", "=", "rng", ".", "choice", "(", "\n", "count", ".", "shape", "[", "0", "]", ",", "self", ".", "n_nbs", ",", "replace", "=", "False", ",", "p", "=", "count", "/", "count", ".", "sum", "(", ")", "\n", ")", "\n", "", "else", ":", "\n", "            ", "raise", "Exception", "(", "\"invalid nbs_mode\"", ")", "\n", "\n", "", "ret", "=", "{", "}", "\n", "\n", "tgt_dm", "=", "load", "(", "self", ".", "tgt_dm_paths", "[", "idx", "]", ")", "\n", "tgt_dm", "=", "self", ".", "pad", "(", "tgt_dm", ")", "\n", "if", "not", "self", ".", "train", ":", "\n", "            ", "ret", "[", "\"tgt_dm\"", "]", "=", "tgt_dm", "\n", "\n", "", "tgt_K", "=", "self", ".", "tgt_Ks", "[", "idx", "]", "\n", "tgt_R", "=", "self", ".", "tgt_Rs", "[", "idx", "]", "\n", "tgt_t", "=", "self", ".", "tgt_ts", "[", "idx", "]", "\n", "\n", "src_dms", "=", "np", ".", "array", "(", "[", "load", "(", "self", ".", "src_dm_paths", "[", "ii", "]", ")", "for", "ii", "in", "nbs", "]", ")", "\n", "src_dms", "=", "self", ".", "pad", "(", "src_dms", ")", "\n", "\n", "src_Ks", "=", "np", ".", "array", "(", "[", "self", ".", "src_Ks", "[", "ii", "]", "for", "ii", "in", "nbs", "]", ")", "\n", "src_Rs", "=", "np", ".", "array", "(", "[", "self", ".", "src_Rs", "[", "ii", "]", "for", "ii", "in", "nbs", "]", ")", "\n", "src_ts", "=", "np", ".", "array", "(", "[", "self", ".", "src_ts", "[", "ii", "]", "for", "ii", "in", "nbs", "]", ")", "\n", "\n", "if", "self", ".", "patch", ":", "\n", "            ", "patch_h_from", "=", "rng", ".", "randint", "(", "0", ",", "tgt_dm", ".", "shape", "[", "0", "]", "-", "self", ".", "patch", "[", "0", "]", ")", "\n", "patch_w_from", "=", "rng", ".", "randint", "(", "0", ",", "tgt_dm", ".", "shape", "[", "1", "]", "-", "self", ".", "patch", "[", "1", "]", ")", "\n", "patch_h_to", "=", "patch_h_from", "+", "self", ".", "patch", "[", "0", "]", "\n", "patch_w_to", "=", "patch_w_from", "+", "self", ".", "patch", "[", "1", "]", "\n", "patch", "=", "np", ".", "array", "(", "\n", "(", "patch_h_from", ",", "patch_h_to", ",", "patch_w_from", ",", "patch_w_to", ")", ",", "\n", "dtype", "=", "np", ".", "int32", ",", "\n", ")", "\n", "", "else", ":", "\n", "            ", "patch", "=", "np", ".", "array", "(", "\n", "(", "0", ",", "tgt_dm", ".", "shape", "[", "0", "]", ",", "0", ",", "tgt_dm", ".", "shape", "[", "1", "]", ")", ",", "dtype", "=", "np", ".", "int32", "\n", ")", "\n", "\n", "", "sampling_maps", ",", "valid_depth_masks", ",", "valid_map_masks", "=", "ext", ".", "preprocess", ".", "get_sampling_map", "(", "\n", "tgt_dm", ",", "\n", "tgt_K", ",", "\n", "tgt_R", ",", "\n", "tgt_t", ",", "\n", "src_dms", ",", "\n", "src_Ks", ",", "\n", "src_Rs", ",", "\n", "src_ts", ",", "\n", "patch", ",", "\n", "self", ".", "bwd_depth_thresh", ",", "\n", "self", ".", "invalid_depth_to_inf", ",", "\n", ")", "\n", "ret", "[", "\"sampling_maps\"", "]", "=", "sampling_maps", "\n", "ret", "[", "\"valid_depth_masks\"", "]", "=", "valid_depth_masks", "\n", "ret", "[", "\"valid_map_masks\"", "]", "=", "valid_map_masks", "\n", "\n", "if", "self", ".", "tgt_im_paths", ":", "\n", "            ", "tgt", "=", "load", "(", "self", ".", "tgt_im_paths", "[", "idx", "]", ")", "\n", "ret", "[", "\"tgt\"", "]", "=", "tgt", "[", "\n", ":", ",", "\n", "patch", "[", "0", "]", ":", "min", "(", "tgt", ".", "shape", "[", "1", "]", ",", "patch", "[", "1", "]", ")", ",", "\n", "patch", "[", "2", "]", ":", "min", "(", "tgt", ".", "shape", "[", "2", "]", ",", "patch", "[", "3", "]", ")", ",", "\n", "]", "\n", "", "else", ":", "\n", "            ", "tgt_height", "=", "min", "(", "tgt_dm", ".", "shape", "[", "0", "]", ",", "patch", "[", "1", "]", ")", "-", "patch", "[", "0", "]", "\n", "tgt_width", "=", "min", "(", "tgt_dm", ".", "shape", "[", "1", "]", ",", "patch", "[", "3", "]", ")", "-", "patch", "[", "2", "]", "\n", "ret", "[", "\"tgt\"", "]", "=", "np", ".", "zeros", "(", "(", "3", ",", "tgt_height", ",", "tgt_width", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "", "srcs", "=", "np", ".", "array", "(", "[", "self", ".", "load_pad", "(", "self", ".", "src_im_paths", "[", "ii", "]", ")", "for", "ii", "in", "nbs", "]", ")", "\n", "ret", "[", "\"srcs\"", "]", "=", "srcs", "\n", "\n", "return", "ret", "\n", "", "", ""]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.load": [[11, 28], ["numpy.load", "PIL.Image.open", "numpy.array", "im.transpose.transpose", "Exception", "Exception", "im.transpose.astype"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.load"], ["def", "load", "(", "p", ",", "height", "=", "None", ",", "width", "=", "None", ")", ":", "\n", "    ", "if", "p", ".", "suffix", "==", "\".npy\"", ":", "\n", "        ", "return", "np", ".", "load", "(", "p", ")", "\n", "", "elif", "p", ".", "suffix", "in", "[", "\".png\"", ",", "\".PNG\"", ",", "\".jpg\"", ",", "\".JPG\"", ",", "\".jpeg\"", ",", "\".JPEG\"", "]", ":", "\n", "        ", "im", "=", "PIL", ".", "Image", ".", "open", "(", "p", ")", "\n", "im", "=", "np", ".", "array", "(", "im", ")", "\n", "if", "(", "\n", "height", "is", "not", "None", "\n", "and", "width", "is", "not", "None", "\n", "and", "(", "im", ".", "shape", "[", "0", "]", "!=", "height", "or", "im", ".", "shape", "[", "1", "]", "!=", "width", ")", "\n", ")", ":", "\n", "            ", "raise", "Exception", "(", "\"invalid size of image\"", ")", "\n", "", "im", "=", "(", "im", ".", "astype", "(", "np", ".", "float32", ")", "/", "255", ")", "*", "2", "-", "1", "\n", "im", "=", "im", ".", "transpose", "(", "2", ",", "0", ",", "1", ")", "\n", "return", "im", "\n", "", "else", ":", "\n", "        ", "raise", "Exception", "(", "\"invalid suffix\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_data_common.rotm_from_quat": [[15, 40], ["q.reshape.reshape", "numpy.array", "R.transpose.transpose", "R.transpose.squeeze"], "function", ["None"], ["def", "rotm_from_quat", "(", "q", ")", ":", "\n", "    ", "q", "=", "q", ".", "reshape", "(", "-", "1", ",", "4", ")", "\n", "w", ",", "x", ",", "y", ",", "z", "=", "q", "[", ":", ",", "0", "]", ",", "q", "[", ":", ",", "1", "]", ",", "q", "[", ":", ",", "2", "]", ",", "q", "[", ":", ",", "3", "]", "\n", "R", "=", "np", ".", "array", "(", "\n", "[", "\n", "[", "\n", "1", "-", "2", "*", "y", "*", "y", "-", "2", "*", "z", "*", "z", ",", "\n", "2", "*", "x", "*", "y", "-", "2", "*", "z", "*", "w", ",", "\n", "2", "*", "x", "*", "z", "+", "2", "*", "y", "*", "w", ",", "\n", "]", ",", "\n", "[", "\n", "2", "*", "x", "*", "y", "+", "2", "*", "z", "*", "w", ",", "\n", "1", "-", "2", "*", "x", "*", "x", "-", "2", "*", "z", "*", "z", ",", "\n", "2", "*", "y", "*", "z", "-", "2", "*", "x", "*", "w", ",", "\n", "]", ",", "\n", "[", "\n", "2", "*", "x", "*", "z", "-", "2", "*", "y", "*", "w", ",", "\n", "2", "*", "y", "*", "z", "+", "2", "*", "x", "*", "w", ",", "\n", "1", "-", "2", "*", "x", "*", "x", "-", "2", "*", "y", "*", "y", ",", "\n", "]", ",", "\n", "]", ",", "\n", "dtype", "=", "q", ".", "dtype", ",", "\n", ")", "\n", "R", "=", "R", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "return", "R", ".", "squeeze", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_data_common.translation_from_cameracenter": [[42, 47], ["C.reshape.reshape", "R.reshape.reshape", "t.squeeze"], "function", ["None"], ["", "def", "translation_from_cameracenter", "(", "R", ",", "C", ")", ":", "\n", "    ", "C", "=", "C", ".", "reshape", "(", "-", "1", ",", "3", ",", "1", ")", "\n", "R", "=", "R", ".", "reshape", "(", "-", "1", ",", "3", ",", "3", ")", "\n", "t", "=", "-", "R", "@", "C", "\n", "return", "t", ".", "squeeze", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_data_common.imread": [[49, 55], ["cv2.imread", "cv2.cvtColor", "str", "cv2.resize"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_data_common.imread"], ["", "def", "imread", "(", "p", ",", "scale", "=", "1", ")", ":", "\n", "    ", "im", "=", "cv2", ".", "imread", "(", "str", "(", "p", ")", ")", "\n", "im", "=", "cv2", ".", "cvtColor", "(", "im", ",", "cv2", ".", "COLOR_BGR2RGB", ")", "\n", "if", "scale", "!=", "1", ":", "\n", "        ", "im", "=", "cv2", ".", "resize", "(", "im", ",", "(", "0", ",", "0", ")", ",", "fx", "=", "scale", ",", "fy", "=", "scale", ")", "\n", "", "return", "im", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_data_common.imwrite": [[57, 62], ["numpy.clip().astype", "cv2.imwrite", "str", "cv2.cvtColor", "numpy.clip"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_data_common.imwrite"], ["", "def", "imwrite", "(", "p", ",", "im", ",", "scale255", "=", "True", ")", ":", "\n", "    ", "if", "scale255", ":", "\n", "        ", "im", "=", "255", "*", "im", "\n", "", "im", "=", "np", ".", "clip", "(", "im", ",", "0", ",", "255", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "cv2", ".", "imwrite", "(", "str", "(", "p", ")", ",", "cv2", ".", "cvtColor", "(", "im", ",", "cv2", ".", "COLOR_RGB2BGR", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_data_common.write_im_scaled": [[64, 71], ["out_dir.mkdir", "enumerate", "out_path.exists", "create_data_common.imread", "create_data_common.imwrite", "str"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_data_common.imread", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_data_common.imwrite"], ["", "def", "write_im_scaled", "(", "im_paths", ",", "scale", ",", "out_dir", ")", ":", "\n", "    ", "out_dir", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "for", "idx", ",", "im_path", "in", "enumerate", "(", "im_paths", ")", ":", "\n", "        ", "out_path", "=", "out_dir", "/", "f\"im_{idx:08d}{im_path.suffix}\"", "\n", "if", "not", "out_path", ".", "exists", "(", ")", ":", "\n", "            ", "im", "=", "imread", "(", "im_path", ",", "scale", ")", "\n", "imwrite", "(", "str", "(", "out_path", ")", ",", "im", ",", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_data_common.render_depth_maps_mesh": [[73, 152], ["print", "dm_dir.mkdir", "open3d.io.read_triangle_mesh", "pyrender.Mesh.compute_vertex_normals", "pyrender.Mesh.paint_uniform_color", "numpy.asarray().astype", "numpy.asarray().astype", "numpy.asarray().astype", "numpy.asarray().astype", "zip", "str", "itertools.count", "tqdm.tqdm", "dm_paths.append", "dm_path.exists", "pyrender.Scene", "pyrender.Mesh", "pyrender.Node", "pyrender.Scene.add_node", "pyrender.IntrinsicsCamera", "numpy.eye", "numpy.array", "pyrender.Node", "pyrender.Scene.add_node", "pyrender.DirectionalLight", "pyrender.Node", "pyrender.Scene.add_node", "pyrender.OffscreenRenderer", "pyrender.OffscreenRenderer.render", "numpy.save", "numpy.asarray", "numpy.asarray", "numpy.asarray", "numpy.asarray", "co.plt.image_colorcode", "create_data_common.imwrite", "numpy.eye", "numpy.ones", "numpy.eye", "dm_path.with_suffix", "pyrender.Primitive", "t.reshape"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.save", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.image_colorcode", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_data_common.imwrite"], ["", "", "", "def", "render_depth_maps_mesh", "(", "\n", "dm_dir", ",", "\n", "mesh_path", ",", "\n", "Ks", ",", "\n", "Rs", ",", "\n", "ts", ",", "\n", "height", ",", "\n", "width", ",", "\n", "znear", "=", "0.05", ",", "\n", "zfar", "=", "1500", ",", "\n", "write_vis", "=", "True", ",", "\n", ")", ":", "\n", "    ", "print", "(", "f\"render depth maps to {dm_dir}\"", ")", "\n", "dm_dir", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "\n", "mesh", "=", "o3d", ".", "io", ".", "read_triangle_mesh", "(", "str", "(", "mesh_path", ")", ")", "\n", "mesh", ".", "compute_vertex_normals", "(", ")", "\n", "mesh", ".", "paint_uniform_color", "(", "(", "0.7", ",", "0.7", ",", "0.7", ")", ")", "\n", "\n", "verts", "=", "np", ".", "asarray", "(", "mesh", ".", "vertices", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "faces", "=", "np", ".", "asarray", "(", "mesh", ".", "triangles", ")", ".", "astype", "(", "np", ".", "int32", ")", "\n", "colors", "=", "np", ".", "asarray", "(", "mesh", ".", "vertex_colors", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "normals", "=", "np", ".", "asarray", "(", "mesh", ".", "vertex_normals", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "dm_paths", "=", "[", "]", "\n", "for", "view_idx", ",", "K", ",", "R", ",", "t", "in", "zip", "(", "itertools", ".", "count", "(", ")", ",", "tqdm", "(", "Ks", ")", ",", "Rs", ",", "ts", ")", ":", "\n", "        ", "dm_path", "=", "dm_dir", "/", "f\"dm_{view_idx:08d}.npy\"", "\n", "dm_paths", ".", "append", "(", "dm_path", ")", "\n", "if", "dm_path", ".", "exists", "(", ")", ":", "\n", "            ", "continue", "\n", "\n", "", "scene", "=", "pyrender", ".", "Scene", "(", ")", "\n", "mesh", "=", "pyrender", ".", "Mesh", "(", "\n", "primitives", "=", "[", "\n", "pyrender", ".", "Primitive", "(", "\n", "positions", "=", "verts", ",", "\n", "normals", "=", "normals", ",", "\n", "color_0", "=", "colors", ",", "\n", "indices", "=", "faces", ",", "\n", "mode", "=", "pyrender", ".", "GLTF", ".", "TRIANGLES", ",", "\n", ")", "\n", "]", ",", "\n", "is_visible", "=", "True", ",", "\n", ")", "\n", "mesh_node", "=", "pyrender", ".", "Node", "(", "mesh", "=", "mesh", ",", "matrix", "=", "np", ".", "eye", "(", "4", ")", ")", "\n", "scene", ".", "add_node", "(", "mesh_node", ")", "\n", "\n", "cam", "=", "pyrender", ".", "IntrinsicsCamera", "(", "\n", "fx", "=", "K", "[", "0", ",", "0", "]", ",", "\n", "fy", "=", "K", "[", "1", ",", "1", "]", ",", "\n", "cx", "=", "K", "[", "0", ",", "2", "]", ",", "\n", "cy", "=", "K", "[", "1", ",", "2", "]", ",", "\n", "znear", "=", "znear", ",", "\n", "zfar", "=", "zfar", ",", "\n", ")", "\n", "T", "=", "np", ".", "eye", "(", "4", ")", "\n", "T", "[", ":", "3", ",", ":", "3", "]", "=", "R", ".", "T", "\n", "T", "[", ":", "3", ",", "3", "]", "=", "(", "-", "R", ".", "T", "@", "t", ".", "reshape", "(", "3", ",", "1", ")", ")", ".", "ravel", "(", ")", "\n", "cv2gl", "=", "np", ".", "array", "(", "\n", "[", "[", "1", ",", "0", ",", "0", ",", "0", "]", ",", "[", "0", ",", "-", "1", ",", "0", ",", "0", "]", ",", "[", "0", ",", "0", ",", "-", "1", ",", "0", "]", ",", "[", "0", ",", "0", ",", "0", ",", "1", "]", "]", "\n", ")", "\n", "T", "=", "T", "@", "cv2gl", "\n", "cam_node", "=", "pyrender", ".", "Node", "(", "camera", "=", "cam", ",", "matrix", "=", "T", ")", "\n", "scene", ".", "add_node", "(", "cam_node", ")", "\n", "\n", "light", "=", "pyrender", ".", "DirectionalLight", "(", "color", "=", "np", ".", "ones", "(", "3", ")", ",", "intensity", "=", "3", ")", "\n", "light_node", "=", "pyrender", ".", "Node", "(", "light", "=", "light", ",", "matrix", "=", "np", ".", "eye", "(", "4", ")", ")", "\n", "scene", ".", "add_node", "(", "light_node", ",", "parent_node", "=", "cam_node", ")", "\n", "\n", "render", "=", "pyrender", ".", "OffscreenRenderer", "(", "width", ",", "height", ")", "\n", "color", ",", "depth", "=", "render", ".", "render", "(", "scene", ")", "\n", "np", ".", "save", "(", "dm_path", ",", "depth", ")", "\n", "\n", "if", "write_vis", ":", "\n", "            ", "depth", "[", "depth", "<=", "0", "]", "=", "np", ".", "NaN", "\n", "depth", "=", "co", ".", "plt", ".", "image_colorcode", "(", "depth", ")", "\n", "imwrite", "(", "dm_path", ".", "with_suffix", "(", "\".jpg\"", ")", ",", "depth", ")", "\n", "\n", "", "", "return", "dm_paths", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_data_common.render_depth_maps_pcd": [[154, 219], ["print", "dm_dir.mkdir", "open3d.io.read_point_cloud", "o3d.io.read_point_cloud.paint_uniform_color", "numpy.asarray().astype", "numpy.asarray().astype", "zip", "str", "itertools.count", "tqdm.tqdm", "dm_paths.append", "dm_path.exists", "pyrender.Scene", "pyrender.Mesh.from_points", "pyrender.Node", "pyrender.Scene.add_node", "pyrender.IntrinsicsCamera", "numpy.eye", "numpy.array", "pyrender.Node", "pyrender.Scene.add_node", "pyrender.DirectionalLight", "pyrender.Node", "pyrender.Scene.add_node", "pyrender.OffscreenRenderer", "pyrender.OffscreenRenderer.render", "numpy.save", "numpy.asarray", "numpy.asarray", "co.plt.image_colorcode", "create_data_common.imwrite", "numpy.eye", "numpy.ones", "numpy.eye", "dm_path.with_suffix", "t.reshape"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.save", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.image_colorcode", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_data_common.imwrite"], ["", "def", "render_depth_maps_pcd", "(", "\n", "dm_dir", ",", "\n", "pcd_path", ",", "\n", "Ks", ",", "\n", "Rs", ",", "\n", "ts", ",", "\n", "height", ",", "\n", "width", ",", "\n", "znear", "=", "0.05", ",", "\n", "zfar", "=", "1500", ",", "\n", "write_vis", "=", "True", ",", "\n", ")", ":", "\n", "    ", "print", "(", "f\"render depth maps to {dm_dir}\"", ")", "\n", "dm_dir", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "\n", "pcd", "=", "o3d", ".", "io", ".", "read_point_cloud", "(", "str", "(", "pcd_path", ")", ")", "\n", "pcd", ".", "paint_uniform_color", "(", "(", "0.7", ",", "0.7", ",", "0.7", ")", ")", "\n", "\n", "verts", "=", "np", ".", "asarray", "(", "pcd", ".", "points", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "colors", "=", "np", ".", "asarray", "(", "pcd", ".", "colors", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "dm_paths", "=", "[", "]", "\n", "for", "view_idx", ",", "K", ",", "R", ",", "t", "in", "zip", "(", "itertools", ".", "count", "(", ")", ",", "tqdm", "(", "Ks", ")", ",", "Rs", ",", "ts", ")", ":", "\n", "        ", "dm_path", "=", "dm_dir", "/", "f\"dm_{view_idx:08d}.npy\"", "\n", "dm_paths", ".", "append", "(", "dm_path", ")", "\n", "if", "dm_path", ".", "exists", "(", ")", ":", "\n", "            ", "continue", "\n", "\n", "", "scene", "=", "pyrender", ".", "Scene", "(", ")", "\n", "mesh", "=", "pyrender", ".", "Mesh", ".", "from_points", "(", "verts", ",", "colors", "=", "colors", ")", "\n", "mesh_node", "=", "pyrender", ".", "Node", "(", "mesh", "=", "mesh", ",", "matrix", "=", "np", ".", "eye", "(", "4", ")", ")", "\n", "scene", ".", "add_node", "(", "mesh_node", ")", "\n", "\n", "cam", "=", "pyrender", ".", "IntrinsicsCamera", "(", "\n", "fx", "=", "K", "[", "0", ",", "0", "]", ",", "\n", "fy", "=", "K", "[", "1", ",", "1", "]", ",", "\n", "cx", "=", "K", "[", "0", ",", "2", "]", ",", "\n", "cy", "=", "K", "[", "1", ",", "2", "]", ",", "\n", "znear", "=", "znear", ",", "\n", "zfar", "=", "zfar", ",", "\n", ")", "\n", "T", "=", "np", ".", "eye", "(", "4", ")", "\n", "T", "[", ":", "3", ",", ":", "3", "]", "=", "R", ".", "T", "\n", "T", "[", ":", "3", ",", "3", "]", "=", "(", "-", "R", ".", "T", "@", "t", ".", "reshape", "(", "3", ",", "1", ")", ")", ".", "ravel", "(", ")", "\n", "cv2gl", "=", "np", ".", "array", "(", "\n", "[", "[", "1", ",", "0", ",", "0", ",", "0", "]", ",", "[", "0", ",", "-", "1", ",", "0", ",", "0", "]", ",", "[", "0", ",", "0", ",", "-", "1", ",", "0", "]", ",", "[", "0", ",", "0", ",", "0", ",", "1", "]", "]", "\n", ")", "\n", "T", "=", "T", "@", "cv2gl", "\n", "cam_node", "=", "pyrender", ".", "Node", "(", "camera", "=", "cam", ",", "matrix", "=", "T", ")", "\n", "scene", ".", "add_node", "(", "cam_node", ")", "\n", "\n", "light", "=", "pyrender", ".", "DirectionalLight", "(", "color", "=", "np", ".", "ones", "(", "3", ")", ",", "intensity", "=", "3", ")", "\n", "light_node", "=", "pyrender", ".", "Node", "(", "light", "=", "light", ",", "matrix", "=", "np", ".", "eye", "(", "4", ")", ")", "\n", "scene", ".", "add_node", "(", "light_node", ",", "parent_node", "=", "cam_node", ")", "\n", "\n", "render", "=", "pyrender", ".", "OffscreenRenderer", "(", "width", ",", "height", ")", "\n", "color", ",", "depth", "=", "render", ".", "render", "(", "scene", ")", "\n", "np", ".", "save", "(", "dm_path", ",", "depth", ")", "\n", "\n", "if", "write_vis", ":", "\n", "            ", "depth", "[", "depth", "<=", "0", "]", "=", "np", ".", "NaN", "\n", "depth", "=", "co", ".", "plt", ".", "image_colorcode", "(", "depth", ")", "\n", "imwrite", "(", "dm_path", ".", "with_suffix", "(", "\".jpg\"", ")", ",", "depth", ")", "\n", "\n", "", "", "return", "dm_paths", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_data_common.load_depth_maps": [[221, 226], ["numpy.array", "dms.append", "numpy.load"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.load"], ["", "def", "load_depth_maps", "(", "dm_paths", ")", ":", "\n", "    ", "dms", "=", "[", "]", "\n", "for", "dm_path", "in", "dm_paths", ":", "\n", "        ", "dms", ".", "append", "(", "np", ".", "load", "(", "dm_path", ")", ")", "\n", "", "return", "np", ".", "array", "(", "dms", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_data_common.unproject_depths": [[228, 248], ["numpy.array", "numpy.array", "numpy.array", "numpy.meshgrid", "numpy.stack", "xyz.reshape", "numpy.arange", "numpy.arange", "numpy.linalg.inv", "numpy.ones_like", "np.array.transpose"], "function", ["None"], ["", "def", "unproject_depths", "(", "dms", ",", "Ks", ",", "Rs", ",", "ts", ")", ":", "\n", "    ", "Ks", "=", "np", ".", "array", "(", "Ks", ")", "\n", "Rs", "=", "np", ".", "array", "(", "Rs", ")", "\n", "ts", "=", "np", ".", "array", "(", "ts", ")", "\n", "height", ",", "width", "=", "dms", ".", "shape", "[", "1", ":", "]", "\n", "uu", ",", "vv", "=", "np", ".", "meshgrid", "(", "\n", "np", ".", "arange", "(", "width", ",", "dtype", "=", "np", ".", "float32", ")", ",", "np", ".", "arange", "(", "height", ",", "dtype", "=", "np", ".", "float32", ")", "\n", ")", "\n", "pxc", "=", "0.5", "\n", "uvh", "=", "np", ".", "stack", "(", "(", "uu", "+", "pxc", ",", "vv", "+", "pxc", ",", "np", ".", "ones_like", "(", "uu", ")", ")", ",", "axis", "=", "2", ")", "\n", "dm_mask", "=", "dms", "<=", "0", "\n", "\n", "uvd", "=", "(", "dms", "[", "...", ",", "None", "]", "*", "uvh", "[", "None", "]", ")", "[", "...", ",", "None", "]", "\n", "xyz", "=", "np", ".", "linalg", ".", "inv", "(", "Ks", "[", ":", ",", "None", ",", "None", "]", ")", "@", "uvd", "\n", "xyz", "-=", "ts", "[", ":", ",", "None", ",", "None", ",", ":", ",", "None", "]", "\n", "xyz", "=", "Rs", ".", "transpose", "(", "0", ",", "2", ",", "1", ")", "[", ":", ",", "None", ",", "None", "]", "@", "xyz", "\n", "\n", "xyz", "=", "xyz", "[", "~", "dm_mask", "]", "\n", "\n", "return", "xyz", ".", "reshape", "(", "-", "1", ",", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_data_common.combine_counts": [[250, 258], ["sorted", "numpy.array", "numpy.save", "pathlib.Path().glob", "numpy.load", "np.array.append", "pathlib.Path"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.save", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.exp.dataset.load", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append"], ["", "def", "combine_counts", "(", "root_dir", ")", ":", "\n", "    ", "count_paths", "=", "sorted", "(", "Path", "(", "root_dir", ")", ".", "glob", "(", "\"count_*.npy\"", ")", ")", "\n", "counts", "=", "[", "]", "\n", "for", "count_path", "in", "count_paths", ":", "\n", "        ", "count", "=", "np", ".", "load", "(", "count_path", ")", "\n", "counts", ".", "append", "(", "count", ")", "\n", "", "counts", "=", "np", ".", "array", "(", "counts", ")", "\n", "np", ".", "save", "(", "root_dir", "/", "\"counts.npy\"", ",", "counts", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.TrackCreator.__init__": [[29, 33], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "geoms", ",", "srcRs", "=", "None", ",", "srcts", "=", "None", ")", ":", "\n", "        ", "self", ".", "geoms", "=", "geoms", "\n", "self", ".", "srcRs", "=", "srcRs", "\n", "self", ".", "srcts", "=", "srcts", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.TrackCreator.playback_waypoints": [[34, 61], ["open3d.visualization.Visualizer", "open3d.visualization.Visualizer.create_window", "open3d.visualization.Visualizer.get_view_control", "o3d.visualization.Visualizer.get_view_control.set_constant_z_near", "o3d.visualization.Visualizer.get_view_control.convert_to_pinhole_camera_parameters", "zip", "open3d.visualization.Visualizer.destroy_window", "open3d.visualization.Visualizer.add_geometry", "itertools.count", "numpy.eye", "o3d.visualization.Visualizer.get_view_control.convert_from_pinhole_camera_parameters", "open3d.visualization.Visualizer.poll_events", "open3d.visualization.Visualizer.update_renderer", "time.sleep", "print", "co.plt2d.image_matrix", "plt.figure", "plt.imshow", "co.plt.tight_no_ticks", "plt.show", "range", "len"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.image_matrix", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.tight_no_ticks"], ["", "def", "playback_waypoints", "(", "self", ",", "wpRs", ",", "wpts", ",", "ims", "=", "None", ",", "nbs", "=", "None", ")", ":", "\n", "        ", "vis", "=", "o3d", ".", "visualization", ".", "Visualizer", "(", ")", "\n", "vis", ".", "create_window", "(", "window_name", "=", "\"Playback\"", ",", "visible", "=", "True", ")", "\n", "for", "geom", "in", "self", ".", "geoms", ":", "\n", "            ", "vis", ".", "add_geometry", "(", "geom", ")", "\n", "", "ctr", "=", "vis", ".", "get_view_control", "(", ")", "\n", "ctr", ".", "set_constant_z_near", "(", "0.1", ")", "\n", "cam", "=", "ctr", ".", "convert_to_pinhole_camera_parameters", "(", ")", "\n", "for", "view_idx", ",", "R", ",", "t", "in", "zip", "(", "itertools", ".", "count", "(", ")", ",", "wpRs", ",", "wpts", ")", ":", "\n", "            ", "T", "=", "np", ".", "eye", "(", "4", ")", "\n", "T", "[", ":", "3", ",", ":", "3", "]", "=", "R", "\n", "T", "[", ":", "3", ",", "3", "]", "=", "t", "\n", "cam", ".", "extrinsic", "=", "T", "\n", "ctr", ".", "convert_from_pinhole_camera_parameters", "(", "cam", ")", "\n", "vis", ".", "poll_events", "(", ")", "\n", "vis", ".", "update_renderer", "(", ")", "\n", "if", "ims", "is", "None", "or", "nbs", "is", "None", ":", "\n", "                ", "time", ".", "sleep", "(", "0.1", ")", "\n", "", "else", ":", "\n", "                ", "print", "(", "f\"  playback frame {view_idx+1}/{len(wpRs)}\"", ")", "\n", "nb_ims", "=", "[", "ims", "[", "nbs", "[", "view_idx", ",", "nb_idx", "]", "]", "for", "nb_idx", "in", "range", "(", "8", ")", "]", "\n", "nb_ims", "=", "co", ".", "plt2d", ".", "image_matrix", "(", "nb_ims", ")", "\n", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "imshow", "(", "nb_ims", ")", "\n", "co", ".", "plt", ".", "tight_no_ticks", "(", ")", "\n", "plt", ".", "show", "(", ")", "\n", "", "", "vis", ".", "destroy_window", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.TrackCreator.create_waypoints": [[62, 194], ["open3d.visualization.VisualizerWithKeyCallback", "open3d.visualization.VisualizerWithKeyCallback.create_window", "open3d.visualization.VisualizerWithKeyCallback.get_view_control", "o3d.visualization.VisualizerWithKeyCallback.get_view_control.set_constant_z_near", "open3d.visualization.VisualizerWithKeyCallback.register_key_callback", "print", "open3d.visualization.VisualizerWithKeyCallback.register_key_callback", "print", "open3d.visualization.VisualizerWithKeyCallback.register_key_callback", "print", "open3d.visualization.VisualizerWithKeyCallback.register_key_callback", "print", "open3d.visualization.VisualizerWithKeyCallback.register_key_callback", "print", "open3d.visualization.VisualizerWithKeyCallback.destroy_window", "open3d.visualization.VisualizerWithKeyCallback.add_geometry", "ord", "ord", "open3d.visualization.VisualizerWithKeyCallback.get_view_control", "o3d.visualization.VisualizerWithKeyCallback.get_view_control.convert_to_pinhole_camera_parameters", "callback_data[].append", "callback_data[].append", "print", "ord", "callback_data[].pop", "callback_data[].pop", "print", "ord", "numpy.eye", "open3d.visualization.VisualizerWithKeyCallback.get_view_control", "o3d.visualization.VisualizerWithKeyCallback.get_view_control.convert_to_pinhole_camera_parameters", "o3d.visualization.VisualizerWithKeyCallback.get_view_control.convert_from_pinhole_camera_parameters", "ord", "print", "numpy.eye", "open3d.visualization.VisualizerWithKeyCallback.get_view_control", "o3d.visualization.VisualizerWithKeyCallback.get_view_control.convert_to_pinhole_camera_parameters", "o3d.visualization.VisualizerWithKeyCallback.get_view_control.convert_from_pinhole_camera_parameters", "create_custom_track.TrackCreator.create_waypoints._vis_goto_next_src_camera"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append"], ["", "def", "create_waypoints", "(", "self", ",", "Rs", "=", "None", ",", "ts", "=", "None", ")", ":", "\n", "        ", "if", "Rs", "is", "None", ":", "\n", "            ", "Rs", "=", "[", "]", "\n", "", "else", ":", "\n", "            ", "Rs", "=", "[", "R", "for", "R", "in", "Rs", "]", "\n", "", "if", "ts", "is", "None", ":", "\n", "            ", "ts", "=", "[", "]", "\n", "", "else", ":", "\n", "            ", "ts", "=", "[", "t", "for", "t", "in", "ts", "]", "\n", "", "callback_data", "=", "{", "\"run\"", ":", "True", ",", "\"Rs\"", ":", "Rs", ",", "\"ts\"", ":", "ts", ",", "\"play\"", ":", "False", "}", "\n", "\n", "vis", "=", "o3d", ".", "visualization", ".", "VisualizerWithKeyCallback", "(", ")", "\n", "vis", ".", "create_window", "(", "window_name", "=", "\"Create Waypoints\"", ",", "visible", "=", "True", ")", "\n", "for", "geom", "in", "self", ".", "geoms", ":", "\n", "            ", "vis", ".", "add_geometry", "(", "geom", ")", "\n", "\n", "", "ctr", "=", "vis", ".", "get_view_control", "(", ")", "\n", "ctr", ".", "set_constant_z_near", "(", "0.1", ")", "\n", "# cam = ctr.convert_to_pinhole_camera_parameters()", "\n", "\n", "def", "vis_quit", "(", "vis", ")", ":", "\n", "            ", "callback_data", "[", "\"run\"", "]", "=", "False", "\n", "callback_data", "[", "\"play\"", "]", "=", "False", "\n", "return", "False", "\n", "\n", "", "vis", ".", "register_key_callback", "(", "ord", "(", "\"Q\"", ")", ",", "vis_quit", ")", "\n", "print", "(", "\"print [q] to quit waypoint selection\"", ")", "\n", "\n", "def", "vis_quit_play", "(", "vis", ")", ":", "\n", "            ", "callback_data", "[", "\"run\"", "]", "=", "False", "\n", "callback_data", "[", "\"play\"", "]", "=", "True", "\n", "return", "False", "\n", "\n", "", "vis", ".", "register_key_callback", "(", "ord", "(", "\"P\"", ")", ",", "vis_quit_play", ")", "\n", "print", "(", "\"print [p] to playback waypoints\"", ")", "\n", "\n", "def", "vis_record", "(", "vis", ")", ":", "\n", "            ", "ctr", "=", "vis", ".", "get_view_control", "(", ")", "\n", "cam", "=", "ctr", ".", "convert_to_pinhole_camera_parameters", "(", ")", "\n", "T", "=", "cam", ".", "extrinsic", "\n", "R", "=", "T", "[", ":", "3", ",", ":", "3", "]", "\n", "t", "=", "T", "[", ":", "3", ",", "3", "]", "\n", "callback_data", "[", "\"Rs\"", "]", ".", "append", "(", "R", ")", "\n", "callback_data", "[", "\"ts\"", "]", ".", "append", "(", "t", ")", "\n", "print", "(", "f'recorded waypoint #{len(callback_data[\"Rs\"])}'", ")", "\n", "\n", "", "vis", ".", "register_key_callback", "(", "ord", "(", "\"R\"", ")", ",", "vis_record", ")", "\n", "print", "(", "\"print [r] to record waypoint\"", ")", "\n", "\n", "def", "vis_drop_last", "(", "vis", ")", ":", "\n", "            ", "callback_data", "[", "\"Rs\"", "]", ".", "pop", "(", ")", "\n", "callback_data", "[", "\"ts\"", "]", ".", "pop", "(", ")", "\n", "print", "(", "f'droped last waypoint #{len(callback_data[\"Rs\"]) + 1}'", ")", "\n", "\n", "", "vis", ".", "register_key_callback", "(", "ord", "(", "\"D\"", ")", ",", "vis_drop_last", ")", "\n", "print", "(", "\"print [d] to drop last recorded waypoint\"", ")", "\n", "\n", "def", "vis_goto_last_camera", "(", "vis", ")", ":", "\n", "            ", "Rs", "=", "callback_data", "[", "\"Rs\"", "]", "\n", "ts", "=", "callback_data", "[", "\"ts\"", "]", "\n", "if", "len", "(", "Rs", ")", "==", "0", "or", "len", "(", "ts", ")", "==", "0", ":", "\n", "                ", "return", "\n", "", "T", "=", "np", ".", "eye", "(", "4", ")", "\n", "T", "[", ":", "3", ",", ":", "3", "]", "=", "Rs", "[", "-", "1", "]", "\n", "T", "[", ":", "3", ",", "3", "]", "=", "ts", "[", "-", "1", "]", "\n", "ctr", "=", "vis", ".", "get_view_control", "(", ")", "\n", "cam", "=", "ctr", ".", "convert_to_pinhole_camera_parameters", "(", ")", "\n", "cam", ".", "extrinsic", "=", "T", "\n", "ctr", ".", "convert_from_pinhole_camera_parameters", "(", "cam", ")", "\n", "\n", "", "vis", ".", "register_key_callback", "(", "ord", "(", "\"G\"", ")", ",", "vis_goto_last_camera", ")", "\n", "print", "(", "\"print [g] to return to last waypoint\"", ")", "\n", "\n", "src_idx", "=", "[", "0", "]", "\n", "\n", "def", "_vis_goto_next_src_camera", "(", "vis", ",", "step", ")", ":", "\n", "            ", "src_idx", "[", "0", "]", "=", "src_idx", "[", "0", "]", "+", "step", "\n", "if", "src_idx", "[", "0", "]", "<", "0", ":", "\n", "                ", "src_idx", "[", "0", "]", "=", "self", ".", "srcRs", ".", "shape", "[", "0", "]", "-", "1", "\n", "", "elif", "src_idx", "[", "0", "]", ">=", "self", ".", "srcRs", ".", "shape", "[", "0", "]", ":", "\n", "                ", "src_idx", "[", "0", "]", "=", "0", "\n", "", "print", "(", "f\"gone to src camera {src_idx[0]}\"", ")", "\n", "R", "=", "self", ".", "srcRs", "[", "src_idx", "[", "0", "]", "]", "\n", "t", "=", "self", ".", "srcts", "[", "src_idx", "[", "0", "]", "]", "\n", "T", "=", "np", ".", "eye", "(", "4", ")", "\n", "T", "[", ":", "3", ",", ":", "3", "]", "=", "R", "\n", "T", "[", ":", "3", ",", "3", "]", "=", "t", "\n", "ctr", "=", "vis", ".", "get_view_control", "(", ")", "\n", "cam", "=", "ctr", ".", "convert_to_pinhole_camera_parameters", "(", ")", "\n", "cam", ".", "extrinsic", "=", "T", "\n", "ctr", ".", "convert_from_pinhole_camera_parameters", "(", "cam", ")", "\n", "\n", "", "def", "vis_goto_next_src_camera_pstep1", "(", "vis", ")", ":", "\n", "            ", "_vis_goto_next_src_camera", "(", "vis", ",", "1", ")", "\n", "\n", "", "def", "vis_goto_next_src_camera_pstep10", "(", "vis", ")", ":", "\n", "            ", "_vis_goto_next_src_camera", "(", "vis", ",", "10", ")", "\n", "\n", "", "def", "vis_goto_next_src_camera_mstep1", "(", "vis", ")", ":", "\n", "            ", "_vis_goto_next_src_camera", "(", "vis", ",", "-", "1", ")", "\n", "\n", "", "def", "vis_goto_next_src_camera_mstep10", "(", "vis", ")", ":", "\n", "            ", "_vis_goto_next_src_camera", "(", "vis", ",", "-", "10", ")", "\n", "\n", "", "if", "self", ".", "srcRs", "is", "not", "None", "and", "self", ".", "srcts", "is", "not", "None", ":", "\n", "            ", "vis", ".", "register_key_callback", "(", "ord", "(", "\"J\"", ")", ",", "vis_goto_next_src_camera_pstep1", ")", "\n", "vis", ".", "register_key_callback", "(", "ord", "(", "\"K\"", ")", ",", "vis_goto_next_src_camera_mstep1", ")", "\n", "vis", ".", "register_key_callback", "(", "\n", "ord", "(", "\"N\"", ")", ",", "vis_goto_next_src_camera_pstep10", "\n", ")", "\n", "vis", ".", "register_key_callback", "(", "\n", "ord", "(", "\"M\"", ")", ",", "vis_goto_next_src_camera_mstep10", "\n", ")", "\n", "print", "(", "\"print [j], [k], [n], [m] to go to src camera\"", ")", "\n", "\n", "# camT = ctr.convert_to_pinhole_camera_parameters().extrinsic", "\n", "# cams = cams_ls(camT[:3, :3], camT[:3, 3], self.srcRs, self.srcts)", "\n", "# vis_cams.add_geometry(cams)", "\n", "", "while", "callback_data", "[", "\"run\"", "]", ":", "\n", "            ", "vis", ".", "poll_events", "(", ")", "\n", "vis", ".", "update_renderer", "(", ")", "\n", "\n", "#     vis_cams.remove_geometry(cams)", "\n", "#     camT = ctr.convert_to_pinhole_camera_parameters().extrinsic", "\n", "#     cams = cams_ls(camT[:3, :3], camT[:3, 3], self.srcRs, self.srcts)", "\n", "#     vis_cams.add_geometry(cams)", "\n", "#     # vis_cams.update_geometry()", "\n", "#     vis_cams.update_renderer()", "\n", "", "vis", ".", "destroy_window", "(", ")", "\n", "# vis_cams.destroy_window()", "\n", "\n", "return", "callback_data", "[", "\"play\"", "]", ",", "callback_data", "[", "\"Rs\"", "]", ",", "callback_data", "[", "\"ts\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.TrackCreator.run": [[195, 202], ["create_custom_track.TrackCreator.create_waypoints", "create_custom_track.TrackCreator.playback_waypoints", "interpolate"], "methods", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.TrackCreator.create_waypoints", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.TrackCreator.playback_waypoints"], ["", "def", "run", "(", "self", ",", "wpRs", "=", "None", ",", "wpts", "=", "None", ")", ":", "\n", "        ", "run", "=", "True", "\n", "while", "run", ":", "\n", "            ", "run", ",", "wpRs", ",", "wpts", "=", "self", ".", "create_waypoints", "(", "wpRs", ",", "wpts", ")", "\n", "if", "run", ":", "\n", "                ", "self", ".", "playback_waypoints", "(", "*", "interpolate", "(", "wpRs", ",", "wpts", ")", ")", "\n", "", "", "return", "wpRs", ",", "wpts", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.cameracenter_from_translation": [[204, 209], ["t.reshape.reshape", "R.reshape.reshape", "C.squeeze", "R.reshape.transpose"], "function", ["None"], ["", "", "def", "cameracenter_from_translation", "(", "R", ",", "t", ")", ":", "\n", "    ", "t", "=", "t", ".", "reshape", "(", "-", "1", ",", "3", ",", "1", ")", "\n", "R", "=", "R", ".", "reshape", "(", "-", "1", ",", "3", ",", "3", ")", "\n", "C", "=", "-", "R", ".", "transpose", "(", "0", ",", "2", ",", "1", ")", "@", "t", "\n", "return", "C", ".", "squeeze", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.translation_from_cameracenter": [[211, 216], ["C.reshape.reshape", "R.reshape.reshape", "t.squeeze"], "function", ["None"], ["", "def", "translation_from_cameracenter", "(", "R", ",", "C", ")", ":", "\n", "    ", "C", "=", "C", ".", "reshape", "(", "-", "1", ",", "3", ",", "1", ")", "\n", "R", "=", "R", ".", "reshape", "(", "-", "1", ",", "3", ",", "3", ")", "\n", "t", "=", "-", "R", "@", "C", "\n", "return", "t", ".", "squeeze", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.rot_x": [[218, 228], ["numpy.array", "x.reshape.reshape", "numpy.zeros", "numpy.cos().ravel", "numpy.sin().ravel", "numpy.cos().ravel", "np.zeros.squeeze", "numpy.sin().ravel", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.sin"], "function", ["None"], ["", "def", "rot_x", "(", "x", ",", "dtype", "=", "np", ".", "float32", ")", ":", "\n", "    ", "x", "=", "np", ".", "array", "(", "x", ",", "copy", "=", "False", ")", "\n", "x", "=", "x", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "R", "=", "np", ".", "zeros", "(", "(", "x", ".", "shape", "[", "0", "]", ",", "3", ",", "3", ")", ",", "dtype", "=", "dtype", ")", "\n", "R", "[", ":", ",", "0", ",", "0", "]", "=", "1", "\n", "R", "[", ":", ",", "1", ",", "1", "]", "=", "np", ".", "cos", "(", "x", ")", ".", "ravel", "(", ")", "\n", "R", "[", ":", ",", "1", ",", "2", "]", "=", "-", "np", ".", "sin", "(", "x", ")", ".", "ravel", "(", ")", "\n", "R", "[", ":", ",", "2", ",", "1", "]", "=", "np", ".", "sin", "(", "x", ")", ".", "ravel", "(", ")", "\n", "R", "[", ":", ",", "2", ",", "2", "]", "=", "np", ".", "cos", "(", "x", ")", ".", "ravel", "(", ")", "\n", "return", "R", ".", "squeeze", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.rot_y": [[230, 240], ["numpy.array", "y.reshape.reshape", "numpy.zeros", "numpy.cos().ravel", "numpy.sin().ravel", "numpy.cos().ravel", "np.zeros.squeeze", "numpy.sin().ravel", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.sin"], "function", ["None"], ["", "def", "rot_y", "(", "y", ",", "dtype", "=", "np", ".", "float32", ")", ":", "\n", "    ", "y", "=", "np", ".", "array", "(", "y", ",", "copy", "=", "False", ")", "\n", "y", "=", "y", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "R", "=", "np", ".", "zeros", "(", "(", "y", ".", "shape", "[", "0", "]", ",", "3", ",", "3", ")", ",", "dtype", "=", "dtype", ")", "\n", "R", "[", ":", ",", "0", ",", "0", "]", "=", "np", ".", "cos", "(", "y", ")", ".", "ravel", "(", ")", "\n", "R", "[", ":", ",", "0", ",", "2", "]", "=", "np", ".", "sin", "(", "y", ")", ".", "ravel", "(", ")", "\n", "R", "[", ":", ",", "1", ",", "1", "]", "=", "1", "\n", "R", "[", ":", ",", "2", ",", "0", "]", "=", "-", "np", ".", "sin", "(", "y", ")", ".", "ravel", "(", ")", "\n", "R", "[", ":", ",", "2", ",", "2", "]", "=", "np", ".", "cos", "(", "y", ")", ".", "ravel", "(", ")", "\n", "return", "R", ".", "squeeze", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.rot_z": [[242, 252], ["numpy.array", "z.reshape.reshape", "numpy.zeros", "numpy.cos().ravel", "numpy.sin().ravel", "numpy.cos().ravel", "np.zeros.squeeze", "numpy.sin().ravel", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.sin"], "function", ["None"], ["", "def", "rot_z", "(", "z", ",", "dtype", "=", "np", ".", "float32", ")", ":", "\n", "    ", "z", "=", "np", ".", "array", "(", "z", ",", "copy", "=", "False", ")", "\n", "z", "=", "z", ".", "reshape", "(", "-", "1", ",", "1", ")", "\n", "R", "=", "np", ".", "zeros", "(", "(", "z", ".", "shape", "[", "0", "]", ",", "3", ",", "3", ")", ",", "dtype", "=", "dtype", ")", "\n", "R", "[", ":", ",", "0", ",", "0", "]", "=", "np", ".", "cos", "(", "z", ")", ".", "ravel", "(", ")", "\n", "R", "[", ":", ",", "0", ",", "1", "]", "=", "-", "np", ".", "sin", "(", "z", ")", ".", "ravel", "(", ")", "\n", "R", "[", ":", ",", "1", ",", "0", "]", "=", "np", ".", "sin", "(", "z", ")", ".", "ravel", "(", ")", "\n", "R", "[", ":", ",", "1", ",", "1", "]", "=", "np", ".", "cos", "(", "z", ")", ".", "ravel", "(", ")", "\n", "R", "[", ":", ",", "2", ",", "2", "]", "=", "1", "\n", "return", "R", ".", "squeeze", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.rotm_from_xyz": [[254, 257], ["numpy.array().reshape", "numpy.array", "create_custom_track.rot_z", "create_custom_track.rot_x", "create_custom_track.rot_y"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.rot_z", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.rot_x", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.rot_y"], ["", "def", "rotm_from_xyz", "(", "xyz", ")", ":", "\n", "    ", "xyz", "=", "np", ".", "array", "(", "xyz", ",", "copy", "=", "False", ")", ".", "reshape", "(", "-", "1", ",", "3", ")", "\n", "return", "(", "rot_x", "(", "xyz", "[", ":", ",", "0", "]", ")", "@", "rot_y", "(", "xyz", "[", ":", ",", "1", "]", ")", "@", "rot_z", "(", "xyz", "[", ":", ",", "2", "]", ")", ")", ".", "squeeze", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.rotm_from_quat": [[259, 284], ["q.reshape.reshape", "numpy.array", "R.transpose.transpose", "R.transpose.squeeze"], "function", ["None"], ["", "def", "rotm_from_quat", "(", "q", ")", ":", "\n", "    ", "q", "=", "q", ".", "reshape", "(", "-", "1", ",", "4", ")", "\n", "w", ",", "x", ",", "y", ",", "z", "=", "q", "[", ":", ",", "0", "]", ",", "q", "[", ":", ",", "1", "]", ",", "q", "[", ":", ",", "2", "]", ",", "q", "[", ":", ",", "3", "]", "\n", "R", "=", "np", ".", "array", "(", "\n", "[", "\n", "[", "\n", "1", "-", "2", "*", "y", "*", "y", "-", "2", "*", "z", "*", "z", ",", "\n", "2", "*", "x", "*", "y", "-", "2", "*", "z", "*", "w", ",", "\n", "2", "*", "x", "*", "z", "+", "2", "*", "y", "*", "w", ",", "\n", "]", ",", "\n", "[", "\n", "2", "*", "x", "*", "y", "+", "2", "*", "z", "*", "w", ",", "\n", "1", "-", "2", "*", "x", "*", "x", "-", "2", "*", "z", "*", "z", ",", "\n", "2", "*", "y", "*", "z", "-", "2", "*", "x", "*", "w", ",", "\n", "]", ",", "\n", "[", "\n", "2", "*", "x", "*", "z", "-", "2", "*", "y", "*", "w", ",", "\n", "2", "*", "y", "*", "z", "+", "2", "*", "x", "*", "w", ",", "\n", "1", "-", "2", "*", "x", "*", "x", "-", "2", "*", "y", "*", "y", ",", "\n", "]", ",", "\n", "]", ",", "\n", "dtype", "=", "q", ".", "dtype", ",", "\n", ")", "\n", "R", "=", "R", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", "\n", "return", "R", ".", "squeeze", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.quat_from_rotm": [[286, 318], ["R.reshape.reshape", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.sqrt", "numpy.empty", "numpy.empty", "numpy.empty", "numpy.empty", "numpy.linalg.norm", "q.squeeze", "numpy.maximum", "numpy.maximum", "numpy.maximum", "numpy.maximum", "numpy.sign", "numpy.sign", "numpy.sign", "numpy.sign", "numpy.sign", "numpy.sign", "numpy.sign", "numpy.sign", "numpy.sign", "numpy.sign", "numpy.sign", "numpy.sign"], "function", ["None"], ["", "def", "quat_from_rotm", "(", "R", ")", ":", "\n", "    ", "R", "=", "R", ".", "reshape", "(", "-", "1", ",", "3", ",", "3", ")", "\n", "w", "=", "np", ".", "sqrt", "(", "np", ".", "maximum", "(", "0", ",", "1", "+", "R", "[", ":", ",", "0", ",", "0", "]", "+", "R", "[", ":", ",", "1", ",", "1", "]", "+", "R", "[", ":", ",", "2", ",", "2", "]", ")", ")", "\n", "x", "=", "np", ".", "sqrt", "(", "np", ".", "maximum", "(", "0", ",", "1", "+", "R", "[", ":", ",", "0", ",", "0", "]", "-", "R", "[", ":", ",", "1", ",", "1", "]", "-", "R", "[", ":", ",", "2", ",", "2", "]", ")", ")", "\n", "y", "=", "np", ".", "sqrt", "(", "np", ".", "maximum", "(", "0", ",", "1", "-", "R", "[", ":", ",", "0", ",", "0", "]", "+", "R", "[", ":", ",", "1", ",", "1", "]", "-", "R", "[", ":", ",", "2", ",", "2", "]", ")", ")", "\n", "z", "=", "np", ".", "sqrt", "(", "np", ".", "maximum", "(", "0", ",", "1", "-", "R", "[", ":", ",", "0", ",", "0", "]", "-", "R", "[", ":", ",", "1", ",", "1", "]", "+", "R", "[", ":", ",", "2", ",", "2", "]", ")", ")", "\n", "q0", "=", "np", ".", "empty", "(", "(", "R", ".", "shape", "[", "0", "]", ",", "4", ")", ",", "dtype", "=", "R", ".", "dtype", ")", "\n", "q0", "[", ":", ",", "0", "]", "=", "w", "\n", "q0", "[", ":", ",", "1", "]", "=", "x", "*", "np", ".", "sign", "(", "x", "*", "(", "R", "[", ":", ",", "2", ",", "1", "]", "-", "R", "[", ":", ",", "1", ",", "2", "]", ")", ")", "\n", "q0", "[", ":", ",", "2", "]", "=", "y", "*", "np", ".", "sign", "(", "y", "*", "(", "R", "[", ":", ",", "0", ",", "2", "]", "-", "R", "[", ":", ",", "2", ",", "0", "]", ")", ")", "\n", "q0", "[", ":", ",", "3", "]", "=", "z", "*", "np", ".", "sign", "(", "z", "*", "(", "R", "[", ":", ",", "1", ",", "0", "]", "-", "R", "[", ":", ",", "0", ",", "1", "]", ")", ")", "\n", "q1", "=", "np", ".", "empty", "(", "(", "R", ".", "shape", "[", "0", "]", ",", "4", ")", ",", "dtype", "=", "R", ".", "dtype", ")", "\n", "q1", "[", ":", ",", "0", "]", "=", "w", "*", "np", ".", "sign", "(", "w", "*", "(", "R", "[", ":", ",", "2", ",", "1", "]", "-", "R", "[", ":", ",", "1", ",", "2", "]", ")", ")", "\n", "q1", "[", ":", ",", "1", "]", "=", "x", "\n", "q1", "[", ":", ",", "2", "]", "=", "y", "*", "np", ".", "sign", "(", "y", "*", "(", "R", "[", ":", ",", "1", ",", "0", "]", "+", "R", "[", ":", ",", "0", ",", "1", "]", ")", ")", "\n", "q1", "[", ":", ",", "3", "]", "=", "z", "*", "np", ".", "sign", "(", "z", "*", "(", "R", "[", ":", ",", "0", ",", "2", "]", "+", "R", "[", ":", ",", "2", ",", "0", "]", ")", ")", "\n", "q2", "=", "np", ".", "empty", "(", "(", "R", ".", "shape", "[", "0", "]", ",", "4", ")", ",", "dtype", "=", "R", ".", "dtype", ")", "\n", "q2", "[", ":", ",", "0", "]", "=", "w", "*", "np", ".", "sign", "(", "w", "*", "(", "R", "[", ":", ",", "0", ",", "2", "]", "-", "R", "[", ":", ",", "2", ",", "0", "]", ")", ")", "\n", "q2", "[", ":", ",", "1", "]", "=", "x", "*", "np", ".", "sign", "(", "x", "*", "(", "R", "[", ":", ",", "0", ",", "1", "]", "+", "R", "[", ":", ",", "1", ",", "0", "]", ")", ")", "\n", "q2", "[", ":", ",", "2", "]", "=", "y", "\n", "q2", "[", ":", ",", "3", "]", "=", "z", "*", "np", ".", "sign", "(", "z", "*", "(", "R", "[", ":", ",", "1", ",", "2", "]", "+", "R", "[", ":", ",", "2", ",", "1", "]", ")", ")", "\n", "q3", "=", "np", ".", "empty", "(", "(", "R", ".", "shape", "[", "0", "]", ",", "4", ")", ",", "dtype", "=", "R", ".", "dtype", ")", "\n", "q3", "[", ":", ",", "0", "]", "=", "w", "*", "np", ".", "sign", "(", "w", "*", "(", "R", "[", ":", ",", "1", ",", "0", "]", "-", "R", "[", ":", ",", "0", ",", "1", "]", ")", ")", "\n", "q3", "[", ":", ",", "1", "]", "=", "x", "*", "np", ".", "sign", "(", "x", "*", "(", "R", "[", ":", ",", "0", ",", "2", "]", "+", "R", "[", ":", ",", "2", ",", "0", "]", ")", ")", "\n", "q3", "[", ":", ",", "2", "]", "=", "y", "*", "np", ".", "sign", "(", "y", "*", "(", "R", "[", ":", ",", "1", ",", "2", "]", "+", "R", "[", ":", ",", "2", ",", "1", "]", ")", ")", "\n", "q3", "[", ":", ",", "3", "]", "=", "z", "\n", "q", "=", "q0", "*", "(", "w", "[", ":", ",", "None", "]", ">", "0", ")", "+", "(", "w", "[", ":", ",", "None", "]", "==", "0", ")", "*", "(", "\n", "q1", "*", "(", "x", "[", ":", ",", "None", "]", ">", "0", ")", "\n", "+", "(", "x", "[", ":", ",", "None", "]", "==", "0", ")", "*", "(", "q2", "*", "(", "y", "[", ":", ",", "None", "]", ">", "0", ")", "+", "(", "y", "[", ":", ",", "None", "]", "==", "0", ")", "*", "(", "q3", ")", ")", "\n", ")", "\n", "q", "/=", "np", ".", "linalg", ".", "norm", "(", "q", ",", "axis", "=", "1", ",", "keepdims", "=", "True", ")", "\n", "return", "q", ".", "squeeze", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.quat_slerp_space": [[320, 355], ["q0.reshape.reshape", "q1.reshape.reshape", "np.linspace.reshape", "numpy.empty", "numpy.any", "numpy.any", "np.empty.squeeze", "numpy.linspace", "numpy.clip", "numpy.arccos", "numpy.cos", "numpy.sin", "numpy.sin", "numpy.sin", "numpy.sin"], "function", ["None"], ["", "def", "quat_slerp_space", "(", "q0", ",", "q1", ",", "t", "=", "None", ",", "num", "=", "100", ",", "endpoint", "=", "True", ")", ":", "\n", "    ", "q0", "=", "q0", ".", "reshape", "(", "-", "1", ",", "4", ")", "\n", "q1", "=", "q1", ".", "reshape", "(", "-", "1", ",", "4", ")", "\n", "dot", "=", "(", "q0", "*", "q1", ")", ".", "sum", "(", "axis", "=", "1", ")", "\n", "\n", "ma", "=", "dot", "<", "0", "\n", "q1", "[", "ma", "]", "*=", "-", "1", "\n", "dot", "[", "ma", "]", "*=", "-", "1", "\n", "\n", "if", "t", "is", "None", ":", "\n", "        ", "t", "=", "np", ".", "linspace", "(", "0", ",", "1", ",", "num", "=", "num", ",", "endpoint", "=", "endpoint", ",", "dtype", "=", "q0", ".", "dtype", ")", "\n", "", "t", "=", "t", ".", "reshape", "(", "(", "-", "1", ",", "1", ")", ")", "\n", "num", "=", "t", ".", "shape", "[", "0", "]", "\n", "\n", "res", "=", "np", ".", "empty", "(", "(", "q0", ".", "shape", "[", "0", "]", ",", "num", ",", "4", ")", ",", "dtype", "=", "q0", ".", "dtype", ")", "\n", "\n", "ma", "=", "dot", ">", "0.9995", "\n", "if", "np", ".", "any", "(", "ma", ")", ":", "\n", "        ", "res", "[", "ma", "]", "=", "(", "q0", "[", "ma", "]", "+", "t", "[", "...", ",", "None", "]", "*", "(", "q1", "[", "ma", "]", "-", "q0", "[", "ma", "]", ")", ")", ".", "transpose", "(", "1", ",", "0", ",", "2", ")", "\n", "\n", "", "ma", "=", "~", "ma", "\n", "if", "np", ".", "any", "(", "ma", ")", ":", "\n", "        ", "q0", "=", "q0", "[", "ma", "]", "\n", "q1", "=", "q1", "[", "ma", "]", "\n", "dot", "=", "dot", "[", "ma", "]", "\n", "\n", "dot", "=", "np", ".", "clip", "(", "dot", ",", "-", "1", ",", "1", ")", "\n", "theta0", "=", "np", ".", "arccos", "(", "dot", ")", "\n", "theta", "=", "theta0", "*", "t", "\n", "s0", "=", "np", ".", "cos", "(", "theta", ")", "-", "dot", "*", "np", ".", "sin", "(", "theta", ")", "/", "np", ".", "sin", "(", "theta0", ")", "\n", "s1", "=", "np", ".", "sin", "(", "theta", ")", "/", "np", ".", "sin", "(", "theta0", ")", "\n", "res", "[", "ma", "]", "=", "(", "(", "s0", "[", "...", ",", "None", "]", "*", "q0", ")", "+", "(", "s1", "[", "...", ",", "None", "]", "*", "q1", ")", ")", ".", "transpose", "(", "\n", "1", ",", "0", ",", "2", "\n", ")", "\n", "", "return", "res", ".", "squeeze", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.cameras_lineset": [[357, 397], ["zip", "numpy.concatenate", "numpy.concatenate", "open3d.geometry.LineSet", "open3d.utility.Vector3dVector", "cameracenter_from_translation().reshape", "np.concatenate.append", "np.concatenate.append", "np.concatenate.append", "np.concatenate.append", "np.concatenate.append", "numpy.concatenate", "numpy.array", "np.concatenate.append", "np.concatenate.append", "colors.extend", "numpy.array", "open3d.utility.Vector3dVector", "open3d.utility.Vector2iVector", "create_custom_track.cameracenter_from_translation", "pt.reshape", "numpy.array().reshape", "numpy.array().reshape", "numpy.array().reshape", "numpy.array().reshape", "len", "range", "numpy.array", "numpy.array", "numpy.array", "numpy.array"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.cameracenter_from_translation"], ["", "def", "cameras_lineset", "(", "Rs", ",", "ts", ",", "size", "=", "10", ",", "color", "=", "(", "0.5", ",", "0.5", ",", "0", ")", ")", ":", "\n", "    ", "points", "=", "[", "]", "\n", "lines", "=", "[", "]", "\n", "colors", "=", "[", "]", "\n", "\n", "for", "R", ",", "t", "in", "zip", "(", "Rs", ",", "ts", ")", ":", "\n", "        ", "C0", "=", "cameracenter_from_translation", "(", "R", ",", "t", ")", ".", "reshape", "(", "3", ",", "1", ")", "\n", "cam_points", "=", "[", "]", "\n", "cam_points", ".", "append", "(", "C0", ")", "\n", "cam_points", ".", "append", "(", "\n", "C0", "+", "R", ".", "T", "@", "np", ".", "array", "(", "[", "-", "size", ",", "-", "size", ",", "3.0", "*", "size", "]", ")", ".", "reshape", "(", "3", ",", "1", ")", "\n", ")", "\n", "cam_points", ".", "append", "(", "\n", "C0", "+", "R", ".", "T", "@", "np", ".", "array", "(", "[", "+", "size", ",", "-", "size", ",", "3.0", "*", "size", "]", ")", ".", "reshape", "(", "3", ",", "1", ")", "\n", ")", "\n", "cam_points", ".", "append", "(", "\n", "C0", "+", "R", ".", "T", "@", "np", ".", "array", "(", "[", "+", "size", ",", "+", "size", ",", "3.0", "*", "size", "]", ")", ".", "reshape", "(", "3", ",", "1", ")", "\n", ")", "\n", "cam_points", ".", "append", "(", "\n", "C0", "+", "R", ".", "T", "@", "np", ".", "array", "(", "[", "-", "size", ",", "+", "size", ",", "3.0", "*", "size", "]", ")", ".", "reshape", "(", "3", ",", "1", ")", "\n", ")", "\n", "cam_points", "=", "np", ".", "concatenate", "(", "\n", "[", "pt", ".", "reshape", "(", "1", ",", "3", ")", "for", "pt", "in", "cam_points", "]", ",", "axis", "=", "0", "\n", ")", "\n", "cam_lines", "=", "np", ".", "array", "(", "\n", "[", "(", "0", ",", "1", ")", ",", "(", "0", ",", "2", ")", ",", "(", "0", ",", "3", ")", ",", "(", "0", ",", "4", ")", ",", "(", "1", ",", "2", ")", ",", "(", "2", ",", "3", ")", ",", "(", "3", ",", "4", ")", ",", "(", "4", ",", "1", ")", "]", "\n", ")", "\n", "\n", "points", ".", "append", "(", "cam_points", ")", "\n", "lines", ".", "append", "(", "len", "(", "lines", ")", "*", "5", "+", "cam_lines", ")", "\n", "colors", ".", "extend", "(", "[", "color", "for", "_", "in", "range", "(", "8", ")", "]", ")", "\n", "\n", "", "points", "=", "np", ".", "concatenate", "(", "points", ",", "axis", "=", "0", ")", "\n", "lines", "=", "np", ".", "concatenate", "(", "lines", ",", "axis", "=", "0", ")", "\n", "ls", "=", "o3d", ".", "geometry", ".", "LineSet", "(", "\n", "points", "=", "o3d", ".", "utility", ".", "Vector3dVector", "(", "points", ")", ",", "\n", "lines", "=", "o3d", ".", "utility", ".", "Vector2iVector", "(", "lines", ")", ",", "\n", ")", "\n", "ls", ".", "colors", "=", "o3d", ".", "utility", ".", "Vector3dVector", "(", "np", ".", "array", "(", "colors", ",", "dtype", "=", "np", ".", "float64", ")", ")", "\n", "return", "ls", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.interpolate_waypoints": [[399, 414], ["numpy.array", "numpy.array", "create_custom_track.quat_from_rotm", "create_custom_track.cameracenter_from_translation", "range", "create_data_common.rotm_from_quat", "create_data_common.translation_from_cameracenter", "numpy.linspace", "Cs.append", "qs.append", "numpy.vstack", "numpy.vstack", "create_custom_track.quat_slerp_space"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.quat_from_rotm", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.cameracenter_from_translation", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.rotm_from_quat", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.translation_from_cameracenter", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.quat_slerp_space"], ["", "def", "interpolate_waypoints", "(", "wpRs", ",", "wpts", ",", "steps", "=", "25", ")", ":", "\n", "    ", "wpRs", "=", "np", ".", "array", "(", "wpRs", ")", "\n", "wpts", "=", "np", ".", "array", "(", "wpts", ")", "\n", "wpqs", "=", "quat_from_rotm", "(", "wpRs", ")", "\n", "wpCs", "=", "cameracenter_from_translation", "(", "wpRs", ",", "wpts", ")", "\n", "qs", ",", "Cs", "=", "[", "]", ",", "[", "]", "\n", "for", "idx", "in", "range", "(", "wpRs", ".", "shape", "[", "0", "]", "-", "1", ")", ":", "\n", "        ", "q0", ",", "q1", "=", "wpqs", "[", "idx", "]", ",", "wpqs", "[", "idx", "+", "1", "]", "\n", "C0", ",", "C1", "=", "wpCs", "[", "idx", "]", ",", "wpCs", "[", "idx", "+", "1", "]", "\n", "alphas", "=", "np", ".", "linspace", "(", "0", ",", "1", ",", "num", "=", "steps", ",", "endpoint", "=", "False", ")", "\n", "Cs", ".", "append", "(", "(", "1", "-", "alphas", "[", ":", ",", "None", "]", ")", "*", "C0", "+", "alphas", "[", ":", ",", "None", "]", "*", "C1", ")", "\n", "qs", ".", "append", "(", "quat_slerp_space", "(", "q0", ",", "q1", ",", "t", "=", "alphas", ")", ")", "\n", "", "Rs", "=", "rotm_from_quat", "(", "np", ".", "vstack", "(", "qs", ")", ")", "\n", "ts", "=", "translation_from_cameracenter", "(", "Rs", ",", "np", ".", "vstack", "(", "Cs", ")", ")", "\n", "return", "Rs", ",", "ts", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.interpolate_waypoints_spline": [[416, 447], ["numpy.array", "numpy.array", "create_custom_track.quat_from_rotm", "create_custom_track.cameracenter_from_translation", "scipy.interpolate.splprep", "scipy.interpolate.splprep", "scipy.interpolate.splev", "scipy.interpolate.splev", "numpy.cumsum", "numpy.interp", "scipy.interpolate.splev", "scipy.interpolate.splev", "scipy.spatial.transform.Rotation.from_matrix", "scipy.spatial.transform.Rotation.from_matrix", "scipy.spatial.transform.RotationSpline", "scipy.spatial.transform.RotationSpline", "scipy.spatial.transform.RotationSpline.as_matrix", "create_data_common.translation_from_cameracenter", "numpy.linspace", "numpy.array", "numpy.linspace", "numpy.linspace", "numpy.array", "numpy.vstack", "len", "len", "scipy.spatial.transform.RotationSpline.", "numpy.linalg.norm"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.quat_from_rotm", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.cameracenter_from_translation", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.translation_from_cameracenter"], ["", "def", "interpolate_waypoints_spline", "(", "wpRs", ",", "wpts", ",", "steps", "=", "25", ",", "k", "=", "None", ",", "s", "=", "0", ")", ":", "\n", "    ", "wpRs", "=", "np", ".", "array", "(", "wpRs", ")", "\n", "wpts", "=", "np", ".", "array", "(", "wpts", ")", "\n", "wpqs", "=", "quat_from_rotm", "(", "wpRs", ")", "\n", "wpCs", "=", "cameracenter_from_translation", "(", "wpRs", ",", "wpts", ")", "\n", "\n", "# uu = np.linalg.norm(wpCs[1:] - wpCs[:-1], axis=1)", "\n", "# uu = np.cumsum(uu) / np.sum(uu)", "\n", "\n", "if", "k", "is", "None", ":", "\n", "        ", "k", "=", "2", "if", "wpCs", ".", "shape", "[", "0", "]", "<=", "3", "else", "3", "\n", "", "tck", ",", "u", "=", "scipy", ".", "interpolate", ".", "splprep", "(", "wpCs", ".", "T", ",", "k", "=", "k", ",", "s", "=", "s", ")", "\n", "Cs", "=", "scipy", ".", "interpolate", ".", "splev", "(", "np", ".", "linspace", "(", "0", ",", "1", ",", "num", "=", "steps", ")", ",", "tck", ")", "\n", "Cs", "=", "np", ".", "array", "(", "Cs", ")", ".", "T", "\n", "\n", "dists", "=", "[", "0", "]", "+", "[", "v", "for", "v", "in", "np", ".", "linalg", ".", "norm", "(", "Cs", "[", "1", ":", "]", "-", "Cs", "[", ":", "-", "1", "]", ",", "axis", "=", "1", ")", "]", "\n", "dists", "=", "np", ".", "cumsum", "(", "dists", ")", "\n", "dists_inv", "=", "np", ".", "interp", "(", "\n", "np", ".", "linspace", "(", "dists", "[", "0", "]", ",", "dists", "[", "-", "1", "]", ",", "len", "(", "dists", ")", ")", ",", "\n", "dists", ",", "\n", "np", ".", "linspace", "(", "0", ",", "1", ",", "len", "(", "dists", ")", ")", ",", "\n", ")", "\n", "Cs", "=", "scipy", ".", "interpolate", ".", "splev", "(", "dists_inv", ",", "tck", ")", "\n", "Cs", "=", "np", ".", "array", "(", "Cs", ")", ".", "T", "\n", "\n", "rotations", "=", "scipy", ".", "spatial", ".", "transform", ".", "Rotation", ".", "from_matrix", "(", "wpRs", ")", "\n", "rot_spline", "=", "scipy", ".", "spatial", ".", "transform", ".", "RotationSpline", "(", "u", ",", "rotations", ")", "\n", "Rs", "=", "rot_spline", "(", "dists_inv", ")", ".", "as_matrix", "(", ")", "\n", "\n", "ts", "=", "translation_from_cameracenter", "(", "Rs", ",", "np", ".", "vstack", "(", "Cs", ")", ")", "\n", "return", "Rs", ",", "ts", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_custom_track.process_count": [[449, 465], ["print", "ext.preprocess.count_nbs", "numpy.save"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.save"], ["", "def", "process_count", "(", "\n", "out_path", ",", "tgt_dm", ",", "tgt_K", ",", "tgt_R", ",", "tgt_t", ",", "src_dms", ",", "src_K", ",", "src_R", ",", "src_t", "\n", ")", ":", "\n", "    ", "print", "(", "f\"process {out_path}\"", ")", "\n", "count", "=", "ext", ".", "preprocess", ".", "count_nbs", "(", "\n", "tgt_dm", ",", "\n", "tgt_K", ",", "\n", "tgt_R", ",", "\n", "tgt_t", ",", "\n", "src_dms", ",", "\n", "src_Ks", ",", "\n", "src_Rs", ",", "\n", "src_ts", ",", "\n", "bwd_depth_thresh", "=", "0.1", ",", "\n", ")", "\n", "np", ".", "save", "(", "out_path", ",", "count", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_data_pw.compute_and_write_count_pw": [[23, 38], ["print", "ext.preprocess.count_nbs", "numpy.save"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.save"], ["def", "compute_and_write_count_pw", "(", "count_path", ",", "idx", ",", "dms", ",", "Ks", ",", "Rs", ",", "ts", ")", ":", "\n", "    ", "print", "(", "f\"compute pw count {count_path}\"", ")", "\n", "count", "=", "ext", ".", "preprocess", ".", "count_nbs", "(", "\n", "dms", "[", "idx", "]", ",", "\n", "Ks", "[", "idx", "]", ",", "\n", "Rs", "[", "idx", "]", ",", "\n", "ts", "[", "idx", "]", ",", "\n", "dms", ",", "\n", "Ks", ",", "\n", "Rs", ",", "\n", "ts", ",", "\n", "bwd_depth_thresh", "=", "0.1", ",", "\n", ")", "\n", "count", "[", "idx", "]", "=", "0", "\n", "np", ".", "save", "(", "count_path", ",", "count", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_data_pw.run": [[40, 94], ["time.time", "pathlib.Path", "pw_dir.mkdir", "sorted", "sorted", "sorted", "print", "print", "create_data_common.write_im_scaled", "create_data_common.imread", "co.colmap.load_cameras", "print", "numpy.save", "numpy.save", "numpy.save", "create_data_common.render_depth_maps_mesh", "create_data_common.load_depth_maps", "print", "print", "create_data_common.combine_counts", "print", "multiprocessing.Pool", "range", "p.starmap", "multiprocessing.cpu_count", "len", "len", "count_path.exists", "print", "args.append", "time.time"], "function", ["home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_data_common.write_im_scaled", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_data_common.imread", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.colmap.load_cameras", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.save", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.save", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.plt.save", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_data_common.render_depth_maps_mesh", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_data_common.load_depth_maps", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.data.create_data_common.combine_counts", "home.repos.pwc.inspect_result.intel-isl_FreeViewSynthesis.co.utils.CumulativeMovingAverage.append"], ["", "def", "run", "(", "dense_dir", ",", "scale", ",", "dm_write_vis", "=", "True", ")", ":", "\n", "    ", "run_tic", "=", "time", ".", "time", "(", ")", "\n", "dense_dir", "=", "Path", "(", "dense_dir", ")", "\n", "\n", "pw_dir", "=", "dense_dir", "/", "f\"ibr3d_pw_{scale:.2f}\"", "\n", "pw_dir", ".", "mkdir", "(", "parents", "=", "True", ",", "exist_ok", "=", "True", ")", "\n", "\n", "im_paths", "=", "[", "]", "\n", "im_paths", "+=", "sorted", "(", "(", "dense_dir", "/", "\"images\"", ")", ".", "glob", "(", "\"*.png\"", ")", ")", "\n", "im_paths", "+=", "sorted", "(", "(", "dense_dir", "/", "\"images\"", ")", ".", "glob", "(", "\"*.jpg\"", ")", ")", "\n", "im_paths", "+=", "sorted", "(", "(", "dense_dir", "/", "\"images\"", ")", ".", "glob", "(", "\"*.jpeg\"", ")", ")", "\n", "print", "(", "f\"found {len(im_paths)} images\"", ")", "\n", "\n", "print", "(", "f\"write scaled input images if needed to {pw_dir}\"", ")", "\n", "write_im_scaled", "(", "im_paths", ",", "scale", ",", "pw_dir", ")", "\n", "\n", "im0", "=", "imread", "(", "im_paths", "[", "0", "]", ",", "scale", ")", "\n", "height", ",", "width", "=", "im0", ".", "shape", "[", ":", "2", "]", "\n", "\n", "Ks", ",", "Rs", ",", "ts", "=", "co", ".", "colmap", ".", "load_cameras", "(", "dense_dir", "/", "\"sparse\"", ",", "im_paths", ",", "scale", ")", "\n", "\n", "print", "(", "f\"write camera params to\"", ")", "\n", "np", ".", "save", "(", "pw_dir", "/", "\"Ks.npy\"", ",", "Ks", ")", "\n", "np", ".", "save", "(", "pw_dir", "/", "\"Rs.npy\"", ",", "Rs", ")", "\n", "np", ".", "save", "(", "pw_dir", "/", "\"ts.npy\"", ",", "ts", ")", "\n", "\n", "mesh_path", "=", "dense_dir", "/", "\"delaunay_photometric.ply\"", "\n", "dm_paths", "=", "render_depth_maps_mesh", "(", "\n", "pw_dir", ",", "mesh_path", ",", "Ks", ",", "Rs", ",", "ts", ",", "height", ",", "width", ",", "write_vis", "=", "dm_write_vis", "\n", ")", "\n", "dms", "=", "load_depth_maps", "(", "dm_paths", ")", "\n", "\n", "print", "(", "\"preprocess\"", ")", "\n", "\n", "dms", "[", "dms", "<=", "0", "]", "=", "1e9", "\n", "\n", "# for idx in range(len(im_paths)):", "\n", "#     count_path = pw_dir / f\"count_{idx:08d}.npy\"", "\n", "#     if not count_path.exists():", "\n", "#         print(f\"add {count_path} to list to process\")", "\n", "#         compute_and_write_count_pw(count_path, idx, dms, Ks, Rs, ts)", "\n", "with", "multiprocessing", ".", "Pool", "(", "multiprocessing", ".", "cpu_count", "(", ")", ")", "as", "p", ":", "\n", "        ", "args", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "len", "(", "im_paths", ")", ")", ":", "\n", "            ", "count_path", "=", "pw_dir", "/", "f\"count_{idx:08d}.npy\"", "\n", "if", "not", "count_path", ".", "exists", "(", ")", ":", "\n", "                ", "print", "(", "f\"add {count_path} to list to process\"", ")", "\n", "args", ".", "append", "(", "(", "count_path", ",", "idx", ",", "dms", ",", "Ks", ",", "Rs", ",", "ts", ")", ")", "\n", "", "", "p", ".", "starmap", "(", "compute_and_write_count_pw", ",", "args", ")", "\n", "\n", "", "print", "(", "\"combine counts\"", ")", "\n", "combine_counts", "(", "pw_dir", ")", "\n", "\n", "print", "(", "f\"took {time.time() - run_tic}[s]\"", ")", "\n", "", ""]]}