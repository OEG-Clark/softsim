{"home.repos.pwc.inspect_result.esalesky_xnmt-devel.None.setup.get_git_revision": [[26, 35], ["print", "check_output().decode().strip", "check_output().decode", "check_output", "command.split", "os.path.dirname"], "function", ["None"], ["", "def", "get_git_revision", "(", ")", ":", "\n", "  ", "from", "subprocess", "import", "CalledProcessError", ",", "check_output", "\n", "try", ":", "\n", "    ", "command", "=", "'git rev-parse --short HEAD'", "\n", "print", "(", "\"checking git revision in\"", ",", "__file__", ")", "\n", "rev", "=", "check_output", "(", "command", ".", "split", "(", "u' '", ")", ",", "cwd", "=", "(", "os", ".", "path", ".", "dirname", "(", "__file__", ")", "or", "\".\"", ")", ")", ".", "decode", "(", "'ascii'", ")", ".", "strip", "(", ")", "\n", "", "except", "(", "CalledProcessError", ",", "OSError", ")", ":", "\n", "    ", "rev", "=", "None", "\n", "", "return", "rev", "\n", "", "if", "\"install\"", "in", "sys", ".", "argv", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_hyperparams.TestSanityHyperParameter.setUp": [[8, 10], ["xnmt.events.clear"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.clear"], ["  ", "def", "setUp", "(", "self", ")", ":", "\n", "    ", "events", ".", "clear", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_hyperparams.TestSanityHyperParameter.test_scalar_operator": [[11, 27], ["Scalar", "test_hyperparams.TestSanityHyperParameter.assertEqual", "test_hyperparams.TestSanityHyperParameter.assertEqual", "test_hyperparams.TestSanityHyperParameter.assertEqual", "test_hyperparams.TestSanityHyperParameter.assertEqual", "test_hyperparams.TestSanityHyperParameter.assertEqual", "test_hyperparams.TestSanityHyperParameter.assertEqual", "test_hyperparams.TestSanityHyperParameter.assertEqual", "test_hyperparams.TestSanityHyperParameter.assertEqual", "test_hyperparams.TestSanityHyperParameter.assertEqual", "test_hyperparams.TestSanityHyperParameter.assertEqual", "test_hyperparams.TestSanityHyperParameter.assertEqual", "test_hyperparams.TestSanityHyperParameter.assertEqual", "test_hyperparams.TestSanityHyperParameter.assertEqual", "test_hyperparams.TestSanityHyperParameter.assertEqual"], "methods", ["None"], ["", "def", "test_scalar_operator", "(", "self", ")", ":", "\n", "    ", "c", "=", "Scalar", "(", "5", ")", "\n", "self", ".", "assertEqual", "(", "c", "+", "1", ",", "6", ")", "\n", "self", ".", "assertEqual", "(", "c", "-", "1", ",", "4", ")", "\n", "self", ".", "assertEqual", "(", "c", "*", "2", ",", "10", ")", "\n", "self", ".", "assertEqual", "(", "c", "/", "2", ",", "2.5", ")", "\n", "self", ".", "assertEqual", "(", "c", "//", "2", ",", "2", ")", "\n", "self", ".", "assertEqual", "(", "-", "c", ",", "-", "5", ")", "\n", "self", ".", "assertEqual", "(", "+", "c", ",", "5", ")", "\n", "self", ".", "assertEqual", "(", "c", ">=", "5", ",", "True", ")", "\n", "self", ".", "assertEqual", "(", "c", ">", "5", ",", "False", ")", "\n", "self", ".", "assertEqual", "(", "c", "<=", "5", ",", "True", ")", "\n", "self", ".", "assertEqual", "(", "c", "!=", "5", ",", "False", ")", "\n", "self", ".", "assertEqual", "(", "c", "<", "5", ",", "False", ")", "\n", "self", ".", "assertEqual", "(", "c", "==", "5", ",", "True", ")", "\n", "self", ".", "assertEqual", "(", "c", "**", "2", ",", "25", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_hyperparams.TestSanityHyperParameter.test_defined_sequence": [[28, 38], ["DefinedSequence", "DefinedSequence.on_new_epoch", "test_hyperparams.TestSanityHyperParameter.assertEqual", "DefinedSequence.on_new_epoch", "test_hyperparams.TestSanityHyperParameter.assertEqual", "DefinedSequence.on_new_epoch", "test_hyperparams.TestSanityHyperParameter.assertEqual", "DefinedSequence.on_new_epoch", "test_hyperparams.TestSanityHyperParameter.assertEqual"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.self_attentional_am.SAAMMultiHeadedSelfAttention.on_new_epoch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.self_attentional_am.SAAMMultiHeadedSelfAttention.on_new_epoch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.self_attentional_am.SAAMMultiHeadedSelfAttention.on_new_epoch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.self_attentional_am.SAAMMultiHeadedSelfAttention.on_new_epoch"], ["", "def", "test_defined_sequence", "(", "self", ")", ":", "\n", "    ", "ds", "=", "DefinedSequence", "(", "[", "10", ",", "20", ",", "30", "]", ")", "\n", "ds", ".", "on_new_epoch", "(", ")", "\n", "self", ".", "assertEqual", "(", "ds", ",", "10", ")", "\n", "ds", ".", "on_new_epoch", "(", ")", "\n", "self", ".", "assertEqual", "(", "ds", ",", "20", ")", "\n", "ds", ".", "on_new_epoch", "(", ")", "\n", "self", ".", "assertEqual", "(", "ds", ",", "30", ")", "\n", "ds", ".", "on_new_epoch", "(", ")", "\n", "self", ".", "assertEqual", "(", "ds", ",", "30", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_beam_search.TestForcedDecodingOutputs.assertItemsEqual": [[22, 26], ["test_beam_search.TestForcedDecodingOutputs.assertEqual", "range", "len", "len", "len", "test_beam_search.TestForcedDecodingOutputs.assertEqual"], "methods", ["None"], ["  ", "def", "assertItemsEqual", "(", "self", ",", "l1", ",", "l2", ")", ":", "\n", "    ", "self", ".", "assertEqual", "(", "len", "(", "l1", ")", ",", "len", "(", "l2", ")", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "l1", ")", ")", ":", "\n", "      ", "self", ".", "assertEqual", "(", "l1", "[", "i", "]", ",", "l2", "[", "i", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_beam_search.TestForcedDecodingOutputs.setUp": [[27, 51], ["xnmt.events.clear", "xnmt.param_collections.ParamManager.init_param_col", "xnmt.vocabs.Vocab", "xnmt.vocabs.Vocab", "xnmt.models.translators.DefaultTranslator", "xnmt.event_trigger.set_train", "list", "list", "test_beam_search.TestForcedDecodingOutputs.model.src_reader.read_sents", "test_beam_search.TestForcedDecodingOutputs.model.trg_reader.read_sents", "xnmt.input_readers.PlainTextReader", "xnmt.input_readers.PlainTextReader", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.transducers.recurrent.BiLSTMSeqTransducer", "xnmt.modelparts.attenders.MlpAttender", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.modelparts.decoders.AutoRegressiveDecoder", "xnmt.transducers.recurrent.UniLSTMSeqTransducer", "xnmt.modelparts.transforms.NonLinear", "xnmt.modelparts.scorers.Softmax", "xnmt.modelparts.bridges.CopyBridge"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.clear", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.init_param_col", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.set_train", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.read_sents", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.read_sents"], ["", "", "def", "setUp", "(", "self", ")", ":", "\n", "    ", "layer_dim", "=", "512", "\n", "events", ".", "clear", "(", ")", "\n", "ParamManager", ".", "init_param_col", "(", ")", "\n", "src_vocab", "=", "Vocab", "(", "vocab_file", "=", "\"examples/data/head.ja.vocab\"", ")", "\n", "trg_vocab", "=", "Vocab", "(", "vocab_file", "=", "\"examples/data/head.en.vocab\"", ")", "\n", "self", ".", "model", "=", "DefaultTranslator", "(", "\n", "src_reader", "=", "PlainTextReader", "(", "vocab", "=", "src_vocab", ")", ",", "\n", "trg_reader", "=", "PlainTextReader", "(", "vocab", "=", "trg_vocab", ")", ",", "\n", "src_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "encoder", "=", "BiLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ")", ",", "\n", "attender", "=", "MlpAttender", "(", "input_dim", "=", "layer_dim", ",", "state_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ")", ",", "\n", "trg_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "decoder", "=", "AutoRegressiveDecoder", "(", "input_dim", "=", "layer_dim", ",", "\n", "trg_embed_dim", "=", "layer_dim", ",", "\n", "rnn", "=", "UniLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ",", "decoder_input_dim", "=", "layer_dim", ",", "yaml_path", "=", "\"model.decoder.rnn\"", ")", ",", "\n", "transform", "=", "NonLinear", "(", "input_dim", "=", "layer_dim", "*", "2", ",", "output_dim", "=", "layer_dim", ")", ",", "\n", "scorer", "=", "Softmax", "(", "input_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "bridge", "=", "CopyBridge", "(", "dec_dim", "=", "layer_dim", ",", "dec_layers", "=", "1", ")", ")", ",", "\n", ")", "\n", "event_trigger", ".", "set_train", "(", "False", ")", "\n", "\n", "self", ".", "src_data", "=", "list", "(", "self", ".", "model", ".", "src_reader", ".", "read_sents", "(", "\"examples/data/head.ja\"", ")", ")", "\n", "self", ".", "trg_data", "=", "list", "(", "self", ".", "model", ".", "trg_reader", ".", "read_sents", "(", "\"examples/data/head.en\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_beam_search.TestForcedDecodingOutputs.assert_forced_decoding": [[52, 57], ["dynet.renew_cg", "test_beam_search.TestForcedDecodingOutputs.model.generate", "test_beam_search.TestForcedDecodingOutputs.assertItemsEqual", "xnmt.batchers.mark_as_batch", "xnmt.search_strategies.BeamSearch", "xnmt.batchers.mark_as_batch"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.generate", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_decoders.TestForcedDecodingOutputs.assertItemsEqual", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch"], ["", "def", "assert_forced_decoding", "(", "self", ",", "sent_id", ")", ":", "\n", "    ", "dy", ".", "renew_cg", "(", ")", "\n", "outputs", "=", "self", ".", "model", ".", "generate", "(", "batchers", ".", "mark_as_batch", "(", "[", "self", ".", "src_data", "[", "sent_id", "]", "]", ")", ",", "BeamSearch", "(", ")", ",", "\n", "forced_trg_ids", "=", "batchers", ".", "mark_as_batch", "(", "[", "self", ".", "trg_data", "[", "sent_id", "]", "]", ")", ")", "\n", "self", ".", "assertItemsEqual", "(", "self", ".", "trg_data", "[", "sent_id", "]", ".", "words", ",", "outputs", "[", "0", "]", ".", "words", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_beam_search.TestForcedDecodingOutputs.test_forced_decoding": [[58, 61], ["range", "test_beam_search.TestForcedDecodingOutputs.assert_forced_decoding"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_decoders.TestForcedDecodingOutputs.assert_forced_decoding"], ["", "def", "test_forced_decoding", "(", "self", ")", ":", "\n", "    ", "for", "i", "in", "range", "(", "1", ")", ":", "\n", "      ", "self", ".", "assert_forced_decoding", "(", "sent_id", "=", "i", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_beam_search.TestForcedDecodingLoss.setUp": [[64, 88], ["xnmt.events.clear", "xnmt.param_collections.ParamManager.init_param_col", "xnmt.vocabs.Vocab", "xnmt.vocabs.Vocab", "xnmt.models.translators.DefaultTranslator", "xnmt.event_trigger.set_train", "list", "list", "test_beam_search.TestForcedDecodingLoss.model.src_reader.read_sents", "test_beam_search.TestForcedDecodingLoss.model.trg_reader.read_sents", "xnmt.input_readers.PlainTextReader", "xnmt.input_readers.PlainTextReader", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.transducers.recurrent.BiLSTMSeqTransducer", "xnmt.modelparts.attenders.MlpAttender", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.modelparts.decoders.AutoRegressiveDecoder", "xnmt.transducers.recurrent.UniLSTMSeqTransducer", "xnmt.modelparts.transforms.NonLinear", "xnmt.modelparts.scorers.Softmax", "xnmt.modelparts.bridges.CopyBridge"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.clear", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.init_param_col", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.set_train", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.read_sents", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.read_sents"], ["  ", "def", "setUp", "(", "self", ")", ":", "\n", "    ", "layer_dim", "=", "512", "\n", "events", ".", "clear", "(", ")", "\n", "ParamManager", ".", "init_param_col", "(", ")", "\n", "src_vocab", "=", "Vocab", "(", "vocab_file", "=", "\"examples/data/head.ja.vocab\"", ")", "\n", "trg_vocab", "=", "Vocab", "(", "vocab_file", "=", "\"examples/data/head.en.vocab\"", ")", "\n", "self", ".", "model", "=", "DefaultTranslator", "(", "\n", "src_reader", "=", "PlainTextReader", "(", "vocab", "=", "src_vocab", ")", ",", "\n", "trg_reader", "=", "PlainTextReader", "(", "vocab", "=", "trg_vocab", ")", ",", "\n", "src_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "encoder", "=", "BiLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ")", ",", "\n", "attender", "=", "MlpAttender", "(", "input_dim", "=", "layer_dim", ",", "state_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ")", ",", "\n", "trg_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "decoder", "=", "AutoRegressiveDecoder", "(", "input_dim", "=", "layer_dim", ",", "\n", "trg_embed_dim", "=", "layer_dim", ",", "\n", "rnn", "=", "UniLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ",", "decoder_input_dim", "=", "layer_dim", ",", "yaml_path", "=", "\"model.decoder.rnn\"", ")", ",", "\n", "transform", "=", "NonLinear", "(", "input_dim", "=", "layer_dim", "*", "2", ",", "output_dim", "=", "layer_dim", ")", ",", "\n", "scorer", "=", "Softmax", "(", "input_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "bridge", "=", "CopyBridge", "(", "dec_dim", "=", "layer_dim", ",", "dec_layers", "=", "1", ")", ")", ",", "\n", ")", "\n", "event_trigger", ".", "set_train", "(", "False", ")", "\n", "\n", "self", ".", "src_data", "=", "list", "(", "self", ".", "model", ".", "src_reader", ".", "read_sents", "(", "\"examples/data/head.ja\"", ")", ")", "\n", "self", ".", "trg_data", "=", "list", "(", "self", ".", "model", ".", "trg_reader", ".", "read_sents", "(", "\"examples/data/head.en\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_beam_search.TestForcedDecodingLoss.test_single": [[89, 97], ["dynet.renew_cg", "test_beam_search.TestForcedDecodingLoss.model.calc_nll().value", "dynet.renew_cg", "test_beam_search.TestForcedDecodingLoss.model.generate", "test_beam_search.TestForcedDecodingLoss.assertAlmostEqual", "xnmt.batchers.mark_as_batch", "xnmt.search_strategies.BeamSearch", "test_beam_search.TestForcedDecodingLoss.model.calc_nll", "xnmt.batchers.mark_as_batch"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.generate", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.calc_nll", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch"], ["", "def", "test_single", "(", "self", ")", ":", "\n", "    ", "dy", ".", "renew_cg", "(", ")", "\n", "train_loss", "=", "self", ".", "model", ".", "calc_nll", "(", "src", "=", "self", ".", "src_data", "[", "0", "]", ",", "\n", "trg", "=", "self", ".", "trg_data", "[", "0", "]", ")", ".", "value", "(", ")", "\n", "dy", ".", "renew_cg", "(", ")", "\n", "outputs", "=", "self", ".", "model", ".", "generate", "(", "batchers", ".", "mark_as_batch", "(", "[", "self", ".", "src_data", "[", "0", "]", "]", ")", ",", "BeamSearch", "(", "beam_size", "=", "1", ")", ",", "\n", "forced_trg_ids", "=", "batchers", ".", "mark_as_batch", "(", "[", "self", ".", "trg_data", "[", "0", "]", "]", ")", ")", "\n", "self", ".", "assertAlmostEqual", "(", "-", "outputs", "[", "0", "]", ".", "score", ",", "train_loss", ",", "places", "=", "4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_beam_search.TestFreeDecodingLoss.setUp": [[100, 124], ["xnmt.events.clear", "xnmt.param_collections.ParamManager.init_param_col", "xnmt.vocabs.Vocab", "xnmt.vocabs.Vocab", "xnmt.models.translators.DefaultTranslator", "xnmt.event_trigger.set_train", "list", "list", "test_beam_search.TestFreeDecodingLoss.model.src_reader.read_sents", "test_beam_search.TestFreeDecodingLoss.model.trg_reader.read_sents", "xnmt.input_readers.PlainTextReader", "xnmt.input_readers.PlainTextReader", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.transducers.recurrent.BiLSTMSeqTransducer", "xnmt.modelparts.attenders.MlpAttender", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.modelparts.decoders.AutoRegressiveDecoder", "xnmt.transducers.recurrent.UniLSTMSeqTransducer", "xnmt.modelparts.transforms.NonLinear", "xnmt.modelparts.scorers.Softmax", "xnmt.modelparts.bridges.CopyBridge"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.clear", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.init_param_col", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.set_train", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.read_sents", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.read_sents"], ["  ", "def", "setUp", "(", "self", ")", ":", "\n", "    ", "layer_dim", "=", "512", "\n", "events", ".", "clear", "(", ")", "\n", "ParamManager", ".", "init_param_col", "(", ")", "\n", "src_vocab", "=", "Vocab", "(", "vocab_file", "=", "\"examples/data/head.ja.vocab\"", ")", "\n", "trg_vocab", "=", "Vocab", "(", "vocab_file", "=", "\"examples/data/head.en.vocab\"", ")", "\n", "self", ".", "model", "=", "DefaultTranslator", "(", "\n", "src_reader", "=", "PlainTextReader", "(", "vocab", "=", "src_vocab", ")", ",", "\n", "trg_reader", "=", "PlainTextReader", "(", "vocab", "=", "trg_vocab", ")", ",", "\n", "src_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "encoder", "=", "BiLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ")", ",", "\n", "attender", "=", "MlpAttender", "(", "input_dim", "=", "layer_dim", ",", "state_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ")", ",", "\n", "trg_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "decoder", "=", "AutoRegressiveDecoder", "(", "input_dim", "=", "layer_dim", ",", "\n", "trg_embed_dim", "=", "layer_dim", ",", "\n", "rnn", "=", "UniLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ",", "decoder_input_dim", "=", "layer_dim", ",", "yaml_path", "=", "\"model.decoder.rnn\"", ")", ",", "\n", "transform", "=", "NonLinear", "(", "input_dim", "=", "layer_dim", "*", "2", ",", "output_dim", "=", "layer_dim", ")", ",", "\n", "scorer", "=", "Softmax", "(", "input_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "bridge", "=", "CopyBridge", "(", "dec_dim", "=", "layer_dim", ",", "dec_layers", "=", "1", ")", ")", ",", "\n", ")", "\n", "event_trigger", ".", "set_train", "(", "False", ")", "\n", "\n", "self", ".", "src_data", "=", "list", "(", "self", ".", "model", ".", "src_reader", ".", "read_sents", "(", "\"examples/data/head.ja\"", ")", ")", "\n", "self", ".", "trg_data", "=", "list", "(", "self", ".", "model", ".", "trg_reader", ".", "read_sents", "(", "\"examples/data/head.en\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_beam_search.TestFreeDecodingLoss.test_single": [[125, 134], ["dynet.renew_cg", "test_beam_search.TestFreeDecodingLoss.model.generate", "dynet.renew_cg", "test_beam_search.TestFreeDecodingLoss.model.calc_nll().value", "test_beam_search.TestFreeDecodingLoss.assertAlmostEqual", "xnmt.batchers.mark_as_batch", "xnmt.search_strategies.BeamSearch", "xnmt.batchers.mark_as_batch", "test_beam_search.TestFreeDecodingLoss.model.calc_nll"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.generate", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.calc_nll"], ["", "def", "test_single", "(", "self", ")", ":", "\n", "    ", "dy", ".", "renew_cg", "(", ")", "\n", "outputs", "=", "self", ".", "model", ".", "generate", "(", "batchers", ".", "mark_as_batch", "(", "[", "self", ".", "src_data", "[", "0", "]", "]", ")", ",", "BeamSearch", "(", ")", ",", "\n", "forced_trg_ids", "=", "batchers", ".", "mark_as_batch", "(", "[", "self", ".", "trg_data", "[", "0", "]", "]", ")", ")", "\n", "dy", ".", "renew_cg", "(", ")", "\n", "train_loss", "=", "self", ".", "model", ".", "calc_nll", "(", "src", "=", "self", ".", "src_data", "[", "0", "]", ",", "\n", "trg", "=", "outputs", "[", "0", "]", ")", ".", "value", "(", ")", "\n", "\n", "self", ".", "assertAlmostEqual", "(", "-", "outputs", "[", "0", "]", ".", "score", ",", "train_loss", ",", "places", "=", "4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_beam_search.TestGreedyVsBeam.setUp": [[139, 163], ["xnmt.events.clear", "xnmt.param_collections.ParamManager.init_param_col", "xnmt.vocabs.Vocab", "xnmt.vocabs.Vocab", "xnmt.models.translators.DefaultTranslator", "xnmt.event_trigger.set_train", "list", "list", "test_beam_search.TestGreedyVsBeam.model.src_reader.read_sents", "test_beam_search.TestGreedyVsBeam.model.trg_reader.read_sents", "xnmt.input_readers.PlainTextReader", "xnmt.input_readers.PlainTextReader", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.transducers.recurrent.BiLSTMSeqTransducer", "xnmt.modelparts.attenders.MlpAttender", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.modelparts.decoders.AutoRegressiveDecoder", "xnmt.transducers.recurrent.UniLSTMSeqTransducer", "xnmt.modelparts.transforms.NonLinear", "xnmt.modelparts.scorers.Softmax", "xnmt.modelparts.bridges.CopyBridge"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.clear", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.init_param_col", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.set_train", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.read_sents", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.read_sents"], ["def", "setUp", "(", "self", ")", ":", "\n", "    ", "layer_dim", "=", "512", "\n", "events", ".", "clear", "(", ")", "\n", "ParamManager", ".", "init_param_col", "(", ")", "\n", "src_vocab", "=", "Vocab", "(", "vocab_file", "=", "\"examples/data/head.ja.vocab\"", ")", "\n", "trg_vocab", "=", "Vocab", "(", "vocab_file", "=", "\"examples/data/head.en.vocab\"", ")", "\n", "self", ".", "model", "=", "DefaultTranslator", "(", "\n", "src_reader", "=", "PlainTextReader", "(", "vocab", "=", "src_vocab", ")", ",", "\n", "trg_reader", "=", "PlainTextReader", "(", "vocab", "=", "trg_vocab", ")", ",", "\n", "src_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "encoder", "=", "BiLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ")", ",", "\n", "attender", "=", "MlpAttender", "(", "input_dim", "=", "layer_dim", ",", "state_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ")", ",", "\n", "trg_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "decoder", "=", "AutoRegressiveDecoder", "(", "input_dim", "=", "layer_dim", ",", "\n", "trg_embed_dim", "=", "layer_dim", ",", "\n", "rnn", "=", "UniLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ",", "decoder_input_dim", "=", "layer_dim", ",", "yaml_path", "=", "\"model.decoder.rnn\"", ")", ",", "\n", "transform", "=", "NonLinear", "(", "input_dim", "=", "layer_dim", "*", "2", ",", "output_dim", "=", "layer_dim", ")", ",", "\n", "scorer", "=", "Softmax", "(", "input_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "bridge", "=", "CopyBridge", "(", "dec_dim", "=", "layer_dim", ",", "dec_layers", "=", "1", ")", ")", ",", "\n", ")", "\n", "event_trigger", ".", "set_train", "(", "False", ")", "\n", "\n", "self", ".", "src_data", "=", "list", "(", "self", ".", "model", ".", "src_reader", ".", "read_sents", "(", "\"examples/data/head.ja\"", ")", ")", "\n", "self", ".", "trg_data", "=", "list", "(", "self", ".", "model", ".", "trg_reader", ".", "read_sents", "(", "\"examples/data/head.en\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_beam_search.TestGreedyVsBeam.test_greedy_vs_beam": [[164, 176], ["dynet.renew_cg", "test_beam_search.TestGreedyVsBeam.model.generate", "dynet.renew_cg", "test_beam_search.TestGreedyVsBeam.model.generate", "test_beam_search.TestGreedyVsBeam.assertAlmostEqual", "xnmt.batchers.mark_as_batch", "xnmt.search_strategies.BeamSearch", "xnmt.batchers.mark_as_batch", "xnmt.search_strategies.GreedySearch", "xnmt.batchers.mark_as_batch", "xnmt.batchers.mark_as_batch"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.generate", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.generate", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch"], ["", "def", "test_greedy_vs_beam", "(", "self", ")", ":", "\n", "    ", "dy", ".", "renew_cg", "(", ")", "\n", "outputs", "=", "self", ".", "model", ".", "generate", "(", "batchers", ".", "mark_as_batch", "(", "[", "self", ".", "src_data", "[", "0", "]", "]", ")", ",", "BeamSearch", "(", "beam_size", "=", "1", ")", ",", "\n", "forced_trg_ids", "=", "batchers", ".", "mark_as_batch", "(", "[", "self", ".", "trg_data", "[", "0", "]", "]", ")", ")", "\n", "output_score1", "=", "outputs", "[", "0", "]", ".", "score", "\n", "\n", "dy", ".", "renew_cg", "(", ")", "\n", "outputs", "=", "self", ".", "model", ".", "generate", "(", "batchers", ".", "mark_as_batch", "(", "[", "self", ".", "src_data", "[", "0", "]", "]", ")", ",", "GreedySearch", "(", ")", ",", "\n", "forced_trg_ids", "=", "batchers", ".", "mark_as_batch", "(", "[", "self", ".", "trg_data", "[", "0", "]", "]", ")", ")", "\n", "output_score2", "=", "outputs", "[", "0", "]", ".", "score", "\n", "\n", "self", ".", "assertAlmostEqual", "(", "output_score1", ",", "output_score2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_evaluation.TestBLEU.setUp": [[10, 18], ["xnmt.events.clear", "xnmt.vocabs.Vocab", "list", "list", "map", "map"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.clear"], ["  ", "def", "setUp", "(", "self", ")", ":", "\n", "    ", "events", ".", "clear", "(", ")", "\n", "self", ".", "hyp", "=", "[", "\"the taro met the hanako\"", ".", "split", "(", ")", "]", "\n", "self", ".", "ref", "=", "[", "\"taro met hanako\"", ".", "split", "(", ")", "]", "\n", "\n", "vocab", "=", "Vocab", "(", "i2w", "=", "[", "\"the\"", ",", "\"taro\"", ",", "\"met\"", ",", "\"hanako\"", "]", ")", "\n", "self", ".", "hyp_id", "=", "list", "(", "map", "(", "vocab", ".", "convert", ",", "self", ".", "hyp", "[", "0", "]", ")", ")", "\n", "self", ".", "ref_id", "=", "list", "(", "map", "(", "vocab", ".", "convert", ",", "self", ".", "ref", "[", "0", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_evaluation.TestBLEU.test_bleu_1gram": [[19, 24], ["xnmt.eval.metrics.BLEUEvaluator", "xnmt.eval.metrics.BLEUEvaluator.evaluate().value", "test_evaluation.TestBLEU.assertEqual", "xnmt.eval.metrics.BLEUEvaluator.evaluate"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.RecallEvaluator.evaluate"], ["", "def", "test_bleu_1gram", "(", "self", ")", ":", "\n", "    ", "bleu", "=", "metrics", ".", "BLEUEvaluator", "(", "ngram", "=", "1", ")", "\n", "exp_bleu", "=", "3.0", "/", "5.0", "\n", "act_bleu", "=", "bleu", ".", "evaluate", "(", "self", ".", "ref", ",", "self", ".", "hyp", ")", ".", "value", "(", ")", "\n", "self", ".", "assertEqual", "(", "act_bleu", ",", "exp_bleu", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_evaluation.TestBLEU.test_bleu_4gram_fast": [[25, 31], ["unittest.skipUnless", "xnmt.eval.metrics.FastBLEUEvaluator", "math.exp", "xnmt.eval.metrics.FastBLEUEvaluator.evaluate_one_sent", "test_evaluation.TestBLEU.assertEqual", "xnmt.utils.has_cython", "math.log"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.bow.BowFMeasureEvaluator.evaluate_one_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.utils.has_cython"], ["", "@", "unittest", ".", "skipUnless", "(", "has_cython", "(", ")", ",", "\"requires cython to run\"", ")", "\n", "def", "test_bleu_4gram_fast", "(", "self", ")", ":", "\n", "    ", "bleu", "=", "metrics", ".", "FastBLEUEvaluator", "(", "ngram", "=", "4", ",", "smooth", "=", "1", ")", "\n", "exp_bleu", "=", "math", ".", "exp", "(", "math", ".", "log", "(", "(", "3.0", "/", "5.0", ")", "*", "(", "2.0", "/", "5.0", ")", "*", "(", "1.0", "/", "4.0", ")", "*", "(", "1.0", "/", "3.0", ")", ")", "/", "4.0", ")", "\n", "act_bleu", "=", "bleu", ".", "evaluate_one_sent", "(", "self", ".", "ref_id", ",", "self", ".", "hyp_id", ")", "\n", "self", ".", "assertEqual", "(", "act_bleu", ",", "exp_bleu", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_evaluation.TestGLEU.setUp": [[33, 35], ["xnmt.eval.metrics.GLEUEvaluator"], "methods", ["None"], ["  ", "def", "setUp", "(", "self", ")", ":", "\n", "    ", "self", ".", "evaluator", "=", "metrics", ".", "GLEUEvaluator", "(", ")", "\n", "", "def", "test_gleu_single_1", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_evaluation.TestGLEU.test_gleu_single_1": [[35, 40], ["test_evaluation.TestGLEU.assertAlmostEqual", "test_evaluation.TestGLEU.evaluator.evaluate().value", "test_evaluation.TestGLEU.evaluator.evaluate"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.RecallEvaluator.evaluate"], ["", "def", "test_gleu_single_1", "(", "self", ")", ":", "\n", "    ", "self", ".", "assertAlmostEqual", "(", "\n", "self", ".", "evaluator", ".", "evaluate", "(", "[", "'the cat is on the mat'", ".", "split", "(", ")", "]", ",", "[", "'the the the the the the the'", ".", "split", "(", ")", "]", ")", ".", "value", "(", ")", ",", "\n", "0.0909", ",", "\n", "places", "=", "4", ")", "\n", "", "def", "test_gleu_single_2", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_evaluation.TestGLEU.test_gleu_single_2": [[40, 47], ["test_evaluation.TestGLEU.assertAlmostEqual", "test_evaluation.TestGLEU.evaluator.evaluate().value", "test_evaluation.TestGLEU.evaluator.evaluate"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.RecallEvaluator.evaluate"], ["", "def", "test_gleu_single_2", "(", "self", ")", ":", "\n", "    ", "self", ".", "assertAlmostEqual", "(", "\n", "self", ".", "evaluator", ".", "evaluate", "(", "\n", "[", "'It is a guide to action that ensures that the military will forever heed Party commands'", ".", "split", "(", ")", "]", ",", "[", "\n", "'It is a guide to action which ensures that the military always obeys the commands of the party'", ".", "split", "(", ")", "]", ")", ".", "value", "(", ")", ",", "\n", "0.4393", ",", "\n", "places", "=", "3", ")", "\n", "", "def", "test_gleu_single_3", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_evaluation.TestGLEU.test_gleu_single_3": [[47, 54], ["test_evaluation.TestGLEU.assertAlmostEqual", "test_evaluation.TestGLEU.evaluator.evaluate().value", "test_evaluation.TestGLEU.evaluator.evaluate"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.RecallEvaluator.evaluate"], ["", "def", "test_gleu_single_3", "(", "self", ")", ":", "\n", "    ", "self", ".", "assertAlmostEqual", "(", "\n", "self", ".", "evaluator", ".", "evaluate", "(", "\n", "[", "'It is a guide to action that ensures that the military will forever heed Party commands'", ".", "split", "(", ")", "]", ",", "[", "\n", "'It is to insure the troops forever hearing the activity guidebook that party direct'", ".", "split", "(", ")", "]", ")", ".", "value", "(", ")", ",", "\n", "0.1206", ",", "\n", "places", "=", "3", ")", "\n", "", "def", "test_gleu_corpus", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_evaluation.TestGLEU.test_gleu_corpus": [[54, 63], ["test_evaluation.TestGLEU.assertAlmostEqual", "test_evaluation.TestGLEU.evaluator.evaluate().value", "test_evaluation.TestGLEU.evaluator.evaluate"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.RecallEvaluator.evaluate"], ["", "def", "test_gleu_corpus", "(", "self", ")", ":", "\n", "    ", "self", ".", "assertAlmostEqual", "(", "\n", "self", ".", "evaluator", ".", "evaluate", "(", "\n", "[", "'It is a guide to action that ensures that the military will forever heed Party commands'", ".", "split", "(", ")", ",", "\n", "'It is a guide to action that ensures that the military will forever heed Party commands'", ".", "split", "(", ")", "]", ",", "[", "\n", "'It is a guide to action which ensures that the military always obeys the commands of the party'", ".", "split", "(", ")", ",", "\n", "'It is to insure the troops forever hearing the activity guidebook that party direct'", ".", "split", "(", ")", "]", ")", ".", "value", "(", ")", ",", "\n", "0.2903", ",", "\n", "places", "=", "3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_evaluation.TestSequenceAccuracy.setUp": [[65, 67], ["xnmt.eval.metrics.SequenceAccuracyEvaluator"], "methods", ["None"], ["  ", "def", "setUp", "(", "self", ")", ":", "\n", "    ", "self", ".", "evaluator", "=", "metrics", ".", "SequenceAccuracyEvaluator", "(", ")", "\n", "", "def", "test_correct", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_evaluation.TestSequenceAccuracy.test_correct": [[67, 69], ["test_evaluation.TestSequenceAccuracy.assertEqual", "test_evaluation.TestSequenceAccuracy.evaluator.evaluate().value", "test_evaluation.TestSequenceAccuracy.evaluator.evaluate"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.RecallEvaluator.evaluate"], ["", "def", "test_correct", "(", "self", ")", ":", "\n", "    ", "self", ".", "assertEqual", "(", "self", ".", "evaluator", ".", "evaluate", "(", "[", "\"1 2 3\"", ".", "split", "(", ")", "]", ",", "[", "\"1 2 3\"", ".", "split", "(", ")", "]", ")", ".", "value", "(", ")", ",", "1.0", ")", "\n", "", "def", "test_incorrect", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_evaluation.TestSequenceAccuracy.test_incorrect": [[69, 71], ["test_evaluation.TestSequenceAccuracy.assertEqual", "test_evaluation.TestSequenceAccuracy.evaluator.evaluate().value", "test_evaluation.TestSequenceAccuracy.evaluator.evaluate"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.RecallEvaluator.evaluate"], ["", "def", "test_incorrect", "(", "self", ")", ":", "\n", "    ", "self", ".", "assertEqual", "(", "self", ".", "evaluator", ".", "evaluate", "(", "[", "\"2 3\"", ".", "split", "(", ")", "]", ",", "[", "\"1 2 3\"", ".", "split", "(", ")", "]", ")", ".", "value", "(", ")", ",", "0.0", ")", "\n", "", "def", "test_corpus", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_evaluation.TestSequenceAccuracy.test_corpus": [[71, 75], ["test_evaluation.TestSequenceAccuracy.assertEqual", "test_evaluation.TestSequenceAccuracy.evaluator.evaluate().value", "test_evaluation.TestSequenceAccuracy.evaluator.evaluate"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.RecallEvaluator.evaluate"], ["", "def", "test_corpus", "(", "self", ")", ":", "\n", "    ", "self", ".", "assertEqual", "(", "self", ".", "evaluator", ".", "evaluate", "(", "[", "\"1 2 3\"", ".", "split", "(", ")", ",", "\"2 3\"", ".", "split", "(", ")", "]", ",", "\n", "[", "\"1 2 3\"", ".", "split", "(", ")", ",", "\"1 2 3\"", ".", "split", "(", ")", "]", ")", ".", "value", "(", ")", ",", "\n", "0.5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_segmenting.TestSegmentingEncoder.setUp": [[35, 94], ["numpy.random.seed", "random.seed", "xnmt.events.clear", "ParamManager.init_param_col", "BiLSTMSeqTransducer", "SumComposer", "xnmt.input_readers.CharFromWordTextReader", "xnmt.input_readers.PlainTextReader", "xnmt.loss_calculators.FeedbackLoss", "xnmt.modelparts.transforms.Linear", "xnmt.modelparts.transforms.Linear", "xnmt.specialized_encoders.segmenting_encoder.priors.PoissonPrior", "xnmt.rl.eps_greedy.EpsilonGreedy", "xnmt.rl.confidence_penalty.ConfidencePenalty", "xnmt.rl.policy_gradient.PolicyGradient", "xnmt.specialized_encoders.segmenting_encoder.length_prior.PoissonLengthPrior", "SegmentingSeqTransducer", "xnmt.models.translators.DefaultTranslator", "xnmt.event_trigger.set_train", "list", "list", "xnmt.batchers.TrgBatcher", "xnmt.batchers.TrgBatcher.pack", "dy.renew_cg", "test_segmenting.TestSegmentingEncoder.model.src_reader.read_sents", "test_segmenting.TestSegmentingEncoder.model.trg_reader.read_sents", "xnmt.vocabs.Vocab", "xnmt.vocabs.Vocab", "xnmt.loss_calculators.MLELoss", "BiLSTMSeqTransducer", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.modelparts.attenders.MlpAttender", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.modelparts.decoders.AutoRegressiveDecoder", "xnmt.transducers.recurrent.UniLSTMSeqTransducer", "xnmt.modelparts.transforms.AuxNonLinear", "xnmt.modelparts.scorers.Softmax", "xnmt.modelparts.bridges.CopyBridge"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.clear", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.init_param_col", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.set_train", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.SortBatcher.pack", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.read_sents", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.read_sents"], ["  ", "def", "setUp", "(", "self", ")", ":", "\n", "# Seeding", "\n", "    ", "numpy", ".", "random", ".", "seed", "(", "2", ")", "\n", "random", ".", "seed", "(", "2", ")", "\n", "layer_dim", "=", "64", "\n", "xnmt", ".", "events", ".", "clear", "(", ")", "\n", "ParamManager", ".", "init_param_col", "(", ")", "\n", "self", ".", "segment_encoder_bilstm", "=", "BiLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ")", "\n", "self", ".", "segment_composer", "=", "SumComposer", "(", ")", "\n", "\n", "self", ".", "src_reader", "=", "CharFromWordTextReader", "(", "vocab", "=", "Vocab", "(", "vocab_file", "=", "\"examples/data/head.ja.charvocab\"", ")", ")", "\n", "self", ".", "trg_reader", "=", "PlainTextReader", "(", "vocab", "=", "Vocab", "(", "vocab_file", "=", "\"examples/data/head.en.vocab\"", ")", ")", "\n", "self", ".", "loss_calculator", "=", "FeedbackLoss", "(", "child_loss", "=", "MLELoss", "(", ")", ",", "repeat", "=", "5", ")", "\n", "\n", "baseline", "=", "Linear", "(", "input_dim", "=", "layer_dim", ",", "output_dim", "=", "1", ")", "\n", "policy_network", "=", "Linear", "(", "input_dim", "=", "layer_dim", ",", "output_dim", "=", "2", ")", "\n", "self", ".", "poisson_prior", "=", "PoissonPrior", "(", "mu", "=", "3.3", ")", "\n", "self", ".", "eps_greedy", "=", "EpsilonGreedy", "(", "eps_prob", "=", "0.0", ",", "prior", "=", "self", ".", "poisson_prior", ")", "\n", "self", ".", "conf_penalty", "=", "ConfidencePenalty", "(", ")", "\n", "self", ".", "policy_gradient", "=", "PolicyGradient", "(", "input_dim", "=", "layer_dim", ",", "\n", "output_dim", "=", "2", ",", "\n", "baseline", "=", "baseline", ",", "\n", "policy_network", "=", "policy_network", ",", "\n", "z_normalization", "=", "True", ",", "\n", "conf_penalty", "=", "self", ".", "conf_penalty", ")", "\n", "self", ".", "length_prior", "=", "PoissonLengthPrior", "(", "lmbd", "=", "3.3", ",", "weight", "=", "1", ")", "\n", "self", ".", "segmenting_encoder", "=", "SegmentingSeqTransducer", "(", "\n", "embed_encoder", "=", "self", ".", "segment_encoder_bilstm", ",", "\n", "segment_composer", "=", "self", ".", "segment_composer", ",", "\n", "final_transducer", "=", "BiLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ")", ",", "\n", "policy_learning", "=", "self", ".", "policy_gradient", ",", "\n", "eps_greedy", "=", "self", ".", "eps_greedy", ",", "\n", "length_prior", "=", "self", ".", "length_prior", ",", "\n", ")", "\n", "\n", "self", ".", "model", "=", "DefaultTranslator", "(", "\n", "src_reader", "=", "self", ".", "src_reader", ",", "\n", "trg_reader", "=", "self", ".", "trg_reader", ",", "\n", "src_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "encoder", "=", "self", ".", "segmenting_encoder", ",", "\n", "attender", "=", "MlpAttender", "(", "input_dim", "=", "layer_dim", ",", "state_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ")", ",", "\n", "trg_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "decoder", "=", "AutoRegressiveDecoder", "(", "input_dim", "=", "layer_dim", ",", "\n", "rnn", "=", "UniLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ",", "\n", "decoder_input_dim", "=", "layer_dim", ",", "yaml_path", "=", "\"decoder\"", ")", ",", "\n", "transform", "=", "AuxNonLinear", "(", "input_dim", "=", "layer_dim", ",", "output_dim", "=", "layer_dim", ",", "\n", "aux_input_dim", "=", "layer_dim", ")", ",", "\n", "scorer", "=", "Softmax", "(", "vocab_size", "=", "100", ",", "input_dim", "=", "layer_dim", ")", ",", "\n", "trg_embed_dim", "=", "layer_dim", ",", "\n", "bridge", "=", "CopyBridge", "(", "dec_dim", "=", "layer_dim", ",", "dec_layers", "=", "1", ")", ")", ",", "\n", ")", "\n", "event_trigger", ".", "set_train", "(", "True", ")", "\n", "\n", "self", ".", "layer_dim", "=", "layer_dim", "\n", "self", ".", "src_data", "=", "list", "(", "self", ".", "model", ".", "src_reader", ".", "read_sents", "(", "\"examples/data/head.ja\"", ")", ")", "\n", "self", ".", "trg_data", "=", "list", "(", "self", ".", "model", ".", "trg_reader", ".", "read_sents", "(", "\"examples/data/head.en\"", ")", ")", "\n", "my_batcher", "=", "batchers", ".", "TrgBatcher", "(", "batch_size", "=", "3", ")", "\n", "self", ".", "src", ",", "self", ".", "trg", "=", "my_batcher", ".", "pack", "(", "self", ".", "src_data", ",", "self", ".", "trg_data", ")", "\n", "dy", ".", "renew_cg", "(", "immediate_compute", "=", "True", ",", "check_validity", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_segmenting.TestSegmentingEncoder.test_reinforce_loss": [[95, 117], ["xnmt.loss_calculators.GlobalFertilityLoss", "xnmt.loss_calculators.MLELoss", "xnmt.loss_calculators.CompositeLoss().calc_loss", "xnmt.event_trigger.calc_additional_loss", "enumerate", "test_segmenting.TestSegmentingEncoder.assertTrue", "test_segmenting.TestSegmentingEncoder.assertTrue", "test_segmenting.TestSegmentingEncoder.assertTrue", "test_segmenting.TestSegmentingEncoder.assertTrue", "test_segmenting.TestSegmentingEncoder.assertTrue", "test_segmenting.TestSegmentingEncoder.assertEqual", "test_segmenting.TestSegmentingEncoder.assertEqual", "xnmt.loss_calculators.CompositeLoss", "src[].len_unpadded"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_encoder.DualEncoderSimilarity.calc_loss", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.calc_additional_loss", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.len_unpadded"], ["", "def", "test_reinforce_loss", "(", "self", ")", ":", "\n", "    ", "fertility_loss", "=", "GlobalFertilityLoss", "(", ")", "\n", "mle_loss", "=", "MLELoss", "(", ")", "\n", "loss", "=", "CompositeLoss", "(", "losses", "=", "[", "mle_loss", ",", "fertility_loss", "]", ")", ".", "calc_loss", "(", "self", ".", "model", ",", "self", ".", "src", "[", "0", "]", ",", "self", ".", "trg", "[", "0", "]", ")", "\n", "reinforce_loss", "=", "event_trigger", ".", "calc_additional_loss", "(", "self", ".", "trg", "[", "0", "]", ",", "self", ".", "model", ",", "loss", ")", "\n", "pl", "=", "self", ".", "model", ".", "encoder", ".", "policy_learning", "\n", "# Ensure correct length", "\n", "src", "=", "self", ".", "src", "[", "0", "]", "\n", "mask", "=", "src", ".", "mask", ".", "np_arr", "\n", "outputs", "=", "self", ".", "segmenting_encoder", ".", "compose_output", "\n", "actions", "=", "self", ".", "segmenting_encoder", ".", "segment_actions", "\n", "# Ensure sample == outputs", "\n", "for", "i", ",", "sample_item", "in", "enumerate", "(", "actions", ")", ":", "\n", "# The last segmentation is 1", "\n", "      ", "self", ".", "assertEqual", "(", "sample_item", "[", "-", "1", "]", ",", "src", "[", "i", "]", ".", "len_unpadded", "(", ")", ")", "\n", "", "self", ".", "assertTrue", "(", "\"mle\"", "in", "loss", ".", "expr_factors", ")", "\n", "self", ".", "assertTrue", "(", "\"global_fertility\"", "in", "loss", ".", "expr_factors", ")", "\n", "self", ".", "assertTrue", "(", "\"rl_reinf\"", "in", "reinforce_loss", ".", "expr_factors", ")", "\n", "self", ".", "assertTrue", "(", "\"rl_baseline\"", "in", "reinforce_loss", ".", "expr_factors", ")", "\n", "self", ".", "assertTrue", "(", "\"rl_confpen\"", "in", "reinforce_loss", ".", "expr_factors", ")", "\n", "# Ensure we are sampling from the policy learning", "\n", "self", ".", "assertEqual", "(", "self", ".", "model", ".", "encoder", ".", "segmenting_action", ",", "SegmentingSeqTransducer", ".", "SegmentingAction", ".", "POLICY", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_segmenting.TestSegmentingEncoder.calc_loss_single_batch": [[118, 122], ["xnmt.loss_calculators.MLELoss().calc_loss", "xnmt.event_trigger.calc_additional_loss", "xnmt.loss_calculators.MLELoss"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_encoder.DualEncoderSimilarity.calc_loss", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.calc_additional_loss"], ["", "def", "calc_loss_single_batch", "(", "self", ")", ":", "\n", "    ", "loss", "=", "MLELoss", "(", ")", ".", "calc_loss", "(", "self", ".", "model", ",", "self", ".", "src", "[", "0", "]", ",", "self", ".", "trg", "[", "0", "]", ")", "\n", "reinforce_loss", "=", "event_trigger", ".", "calc_additional_loss", "(", "self", ".", "trg", "[", "0", "]", ",", "self", ".", "model", ",", "loss", ")", "\n", "return", "loss", ",", "reinforce_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_segmenting.TestSegmentingEncoder.test_gold_input": [[123, 128], ["test_segmenting.TestSegmentingEncoder.calc_loss_single_batch", "test_segmenting.TestSegmentingEncoder.assertEqual"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_segmenting.TestSegmentingEncoder.calc_loss_single_batch"], ["", "def", "test_gold_input", "(", "self", ")", ":", "\n", "    ", "self", ".", "model", ".", "encoder", ".", "policy_learning", "=", "None", "\n", "self", ".", "model", ".", "encoder", ".", "eps_greedy", "=", "None", "\n", "self", ".", "calc_loss_single_batch", "(", ")", "\n", "self", ".", "assertEqual", "(", "self", ".", "model", ".", "encoder", ".", "segmenting_action", ",", "SegmentingSeqTransducer", ".", "SegmentingAction", ".", "GOLD", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_segmenting.TestSegmentingEncoder.test_sample_input": [[129, 135], ["unittest.skipUnless", "test_segmenting.TestSegmentingEncoder.calc_loss_single_batch", "test_segmenting.TestSegmentingEncoder.assertEqual", "test_segmenting.TestSegmentingEncoder.assertEqual", "xnmt.utils.has_cython"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_segmenting.TestSegmentingEncoder.calc_loss_single_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.utils.has_cython"], ["", "@", "unittest", ".", "skipUnless", "(", "has_cython", "(", ")", ",", "\"requires cython to run\"", ")", "\n", "def", "test_sample_input", "(", "self", ")", ":", "\n", "    ", "self", ".", "model", ".", "encoder", ".", "eps_greedy", ".", "eps_prob", "=", "1.0", "\n", "self", ".", "calc_loss_single_batch", "(", ")", "\n", "self", ".", "assertEqual", "(", "self", ".", "model", ".", "encoder", ".", "segmenting_action", ",", "SegmentingSeqTransducer", ".", "SegmentingAction", ".", "POLICY_SAMPLE", ")", "\n", "self", ".", "assertEqual", "(", "self", ".", "model", ".", "encoder", ".", "policy_learning", ".", "sampling_action", ",", "PolicyGradient", ".", "SamplingAction", ".", "PREDEFINED", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_segmenting.TestSegmentingEncoder.test_policy_train_test": [[136, 143], ["xnmt.event_trigger.set_train", "test_segmenting.TestSegmentingEncoder.calc_loss_single_batch", "test_segmenting.TestSegmentingEncoder.assertEqual", "xnmt.event_trigger.set_train", "test_segmenting.TestSegmentingEncoder.calc_loss_single_batch", "test_segmenting.TestSegmentingEncoder.assertEqual"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.set_train", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_segmenting.TestSegmentingEncoder.calc_loss_single_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.set_train", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_segmenting.TestSegmentingEncoder.calc_loss_single_batch"], ["", "def", "test_policy_train_test", "(", "self", ")", ":", "\n", "    ", "event_trigger", ".", "set_train", "(", "True", ")", "\n", "self", ".", "calc_loss_single_batch", "(", ")", "\n", "self", ".", "assertEqual", "(", "self", ".", "model", ".", "encoder", ".", "policy_learning", ".", "sampling_action", ",", "PolicyGradient", ".", "SamplingAction", ".", "POLICY_CLP", ")", "\n", "event_trigger", ".", "set_train", "(", "False", ")", "\n", "self", ".", "calc_loss_single_batch", "(", ")", "\n", "self", ".", "assertEqual", "(", "self", ".", "model", ".", "encoder", ".", "policy_learning", ".", "sampling_action", ",", "PolicyGradient", ".", "SamplingAction", ".", "POLICY_AMAX", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_segmenting.TestSegmentingEncoder.test_no_policy_train_test": [[144, 152], ["xnmt.event_trigger.set_train", "test_segmenting.TestSegmentingEncoder.calc_loss_single_batch", "test_segmenting.TestSegmentingEncoder.assertEqual", "xnmt.event_trigger.set_train", "test_segmenting.TestSegmentingEncoder.calc_loss_single_batch", "test_segmenting.TestSegmentingEncoder.assertEqual"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.set_train", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_segmenting.TestSegmentingEncoder.calc_loss_single_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.set_train", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_segmenting.TestSegmentingEncoder.calc_loss_single_batch"], ["", "def", "test_no_policy_train_test", "(", "self", ")", ":", "\n", "    ", "self", ".", "model", ".", "encoder", ".", "policy_learning", "=", "None", "\n", "event_trigger", ".", "set_train", "(", "True", ")", "\n", "self", ".", "calc_loss_single_batch", "(", ")", "\n", "self", ".", "assertEqual", "(", "self", ".", "model", ".", "encoder", ".", "segmenting_action", ",", "SegmentingSeqTransducer", ".", "SegmentingAction", ".", "PURE_SAMPLE", ")", "\n", "event_trigger", ".", "set_train", "(", "False", ")", "\n", "self", ".", "calc_loss_single_batch", "(", ")", "\n", "self", ".", "assertEqual", "(", "self", ".", "model", ".", "encoder", ".", "segmenting_action", ",", "SegmentingSeqTransducer", ".", "SegmentingAction", ".", "PURE_SAMPLE", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_segmenting.TestSegmentingEncoder.test_sample_during_search": [[153, 158], ["xnmt.event_trigger.set_train", "test_segmenting.TestSegmentingEncoder.calc_loss_single_batch", "test_segmenting.TestSegmentingEncoder.assertEqual"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.set_train", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_segmenting.TestSegmentingEncoder.calc_loss_single_batch"], ["", "def", "test_sample_during_search", "(", "self", ")", ":", "\n", "    ", "event_trigger", ".", "set_train", "(", "False", ")", "\n", "self", ".", "model", ".", "encoder", ".", "sample_during_search", "=", "True", "\n", "self", ".", "calc_loss_single_batch", "(", ")", "\n", "self", ".", "assertEqual", "(", "self", ".", "model", ".", "encoder", ".", "segmenting_action", ",", "SegmentingSeqTransducer", ".", "SegmentingAction", ".", "POLICY", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_segmenting.TestSegmentingEncoder.test_policy_gold": [[159, 164], ["unittest.skipUnless", "xnmt.specialized_encoders.segmenting_encoder.priors.GoldInputPrior", "test_segmenting.TestSegmentingEncoder.calc_loss_single_batch", "xnmt.utils.has_cython"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_segmenting.TestSegmentingEncoder.calc_loss_single_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.utils.has_cython"], ["", "@", "unittest", ".", "skipUnless", "(", "has_cython", "(", ")", ",", "\"requires cython to run\"", ")", "\n", "def", "test_policy_gold", "(", "self", ")", ":", "\n", "    ", "self", ".", "model", ".", "encoder", ".", "eps_greedy", ".", "prior", "=", "GoldInputPrior", "(", "\"segment\"", ")", "\n", "self", ".", "model", ".", "encoder", ".", "eps_greedy", ".", "eps_prob", "=", "1.0", "\n", "self", ".", "calc_loss_single_batch", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_segmenting.TestSegmentingEncoder.test_reporter": [[165, 168], ["xnmt.specialized_encoders.segmenting_encoder.reporter.SegmentingReporter", "test_segmenting.TestSegmentingEncoder.calc_loss_single_batch"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_segmenting.TestSegmentingEncoder.calc_loss_single_batch"], ["", "def", "test_reporter", "(", "self", ")", ":", "\n", "    ", "self", ".", "model", ".", "encoder", ".", "reporter", "=", "SegmentingReporter", "(", "\"test/tmp/seg-report.log\"", ",", "self", ".", "model", ".", "src_reader", ".", "vocab", ")", "\n", "self", ".", "calc_loss_single_batch", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_segmenting.TestComposing.setUp": [[170, 210], ["numpy.random.seed", "random.seed", "xnmt.events.clear", "ParamManager.init_param_col", "SumComposer", "xnmt.input_readers.CharFromWordTextReader", "xnmt.input_readers.PlainTextReader", "xnmt.loss_calculators.FeedbackLoss", "SegmentingSeqTransducer", "xnmt.models.translators.DefaultTranslator", "xnmt.event_trigger.set_train", "list", "list", "xnmt.batchers.TrgBatcher", "xnmt.batchers.TrgBatcher.pack", "dy.renew_cg", "test_segmenting.TestComposing.model.src_reader.read_sents", "test_segmenting.TestComposing.model.trg_reader.read_sents", "xnmt.vocabs.Vocab", "xnmt.vocabs.Vocab", "xnmt.loss_calculators.MLELoss", "BiLSTMSeqTransducer", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.modelparts.attenders.MlpAttender", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.modelparts.decoders.AutoRegressiveDecoder", "xnmt.transducers.recurrent.UniLSTMSeqTransducer", "xnmt.modelparts.transforms.AuxNonLinear", "xnmt.modelparts.scorers.Softmax", "xnmt.modelparts.bridges.CopyBridge"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.clear", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.init_param_col", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.set_train", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.SortBatcher.pack", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.read_sents", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.read_sents"], ["  ", "def", "setUp", "(", "self", ")", ":", "\n", "# Seeding", "\n", "    ", "numpy", ".", "random", ".", "seed", "(", "2", ")", "\n", "random", ".", "seed", "(", "2", ")", "\n", "layer_dim", "=", "64", "\n", "xnmt", ".", "events", ".", "clear", "(", ")", "\n", "ParamManager", ".", "init_param_col", "(", ")", "\n", "self", ".", "segment_composer", "=", "SumComposer", "(", ")", "\n", "self", ".", "src_reader", "=", "CharFromWordTextReader", "(", "vocab", "=", "Vocab", "(", "vocab_file", "=", "\"examples/data/head.ja.charvocab\"", ")", ")", "\n", "self", ".", "trg_reader", "=", "PlainTextReader", "(", "vocab", "=", "Vocab", "(", "vocab_file", "=", "\"examples/data/head.en.vocab\"", ")", ")", "\n", "self", ".", "loss_calculator", "=", "FeedbackLoss", "(", "child_loss", "=", "MLELoss", "(", ")", ",", "repeat", "=", "5", ")", "\n", "self", ".", "segmenting_encoder", "=", "SegmentingSeqTransducer", "(", "\n", "segment_composer", "=", "self", ".", "segment_composer", ",", "\n", "final_transducer", "=", "BiLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ")", ",", "\n", ")", "\n", "\n", "self", ".", "model", "=", "DefaultTranslator", "(", "\n", "src_reader", "=", "self", ".", "src_reader", ",", "\n", "trg_reader", "=", "self", ".", "trg_reader", ",", "\n", "src_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "encoder", "=", "self", ".", "segmenting_encoder", ",", "\n", "attender", "=", "MlpAttender", "(", "input_dim", "=", "layer_dim", ",", "state_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ")", ",", "\n", "trg_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "decoder", "=", "AutoRegressiveDecoder", "(", "input_dim", "=", "layer_dim", ",", "\n", "rnn", "=", "UniLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ",", "\n", "decoder_input_dim", "=", "layer_dim", ",", "yaml_path", "=", "\"decoder\"", ")", ",", "\n", "transform", "=", "AuxNonLinear", "(", "input_dim", "=", "layer_dim", ",", "output_dim", "=", "layer_dim", ",", "\n", "aux_input_dim", "=", "layer_dim", ")", ",", "\n", "scorer", "=", "Softmax", "(", "vocab_size", "=", "100", ",", "input_dim", "=", "layer_dim", ")", ",", "\n", "trg_embed_dim", "=", "layer_dim", ",", "\n", "bridge", "=", "CopyBridge", "(", "dec_dim", "=", "layer_dim", ",", "dec_layers", "=", "1", ")", ")", ",", "\n", ")", "\n", "event_trigger", ".", "set_train", "(", "True", ")", "\n", "\n", "self", ".", "layer_dim", "=", "layer_dim", "\n", "self", ".", "src_data", "=", "list", "(", "self", ".", "model", ".", "src_reader", ".", "read_sents", "(", "\"examples/data/head.ja\"", ")", ")", "\n", "self", ".", "trg_data", "=", "list", "(", "self", ".", "model", ".", "trg_reader", ".", "read_sents", "(", "\"examples/data/head.en\"", ")", ")", "\n", "my_batcher", "=", "batchers", ".", "TrgBatcher", "(", "batch_size", "=", "3", ")", "\n", "self", ".", "src", ",", "self", ".", "trg", "=", "my_batcher", ".", "pack", "(", "self", ".", "src_data", ",", "self", ".", "trg_data", ")", "\n", "dy", ".", "renew_cg", "(", "immediate_compute", "=", "True", ",", "check_validity", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_segmenting.TestComposing.inp_emb": [[211, 215], ["xnmt.event_trigger.start_sent", "test_segmenting.TestComposing.model.src_embedder.embed_sent"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.start_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.embed_sent"], ["", "def", "inp_emb", "(", "self", ",", "idx", "=", "0", ")", ":", "\n", "    ", "event_trigger", ".", "start_sent", "(", "self", ".", "src", "[", "idx", "]", ")", "\n", "embed", "=", "self", ".", "model", ".", "src_embedder", ".", "embed_sent", "(", "self", ".", "src", "[", "idx", "]", ")", "\n", "return", "embed", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_segmenting.TestComposing.test_lookup_composer": [[216, 225], ["xnmt.vocabs.Vocab", "LookupComposer", "enc.transduce", "test_segmenting.TestComposing.inp_emb"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_segmenting.TestComposing.inp_emb"], ["", "def", "test_lookup_composer", "(", "self", ")", ":", "\n", "    ", "enc", "=", "self", ".", "segmenting_encoder", "\n", "word_vocab", "=", "Vocab", "(", "vocab_file", "=", "\"examples/data/head.ja.vocab\"", ")", "\n", "enc", ".", "segment_composer", "=", "LookupComposer", "(", "\n", "word_vocab", "=", "word_vocab", ",", "\n", "src_vocab", "=", "self", ".", "src_reader", ".", "vocab", ",", "\n", "hidden_dim", "=", "self", ".", "layer_dim", "\n", ")", "\n", "enc", ".", "transduce", "(", "self", ".", "inp_emb", "(", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_segmenting.TestComposing.test_charngram_composer": [[226, 235], ["xnmt.vocabs.Vocab", "CharNGramComposer", "enc.transduce", "test_segmenting.TestComposing.inp_emb"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_segmenting.TestComposing.inp_emb"], ["", "def", "test_charngram_composer", "(", "self", ")", ":", "\n", "    ", "enc", "=", "self", ".", "segmenting_encoder", "\n", "word_vocab", "=", "Vocab", "(", "vocab_file", "=", "\"examples/data/head.ja.vocab\"", ")", "\n", "enc", ".", "segment_composer", "=", "CharNGramComposer", "(", "\n", "word_vocab", "=", "word_vocab", ",", "\n", "src_vocab", "=", "self", ".", "src_reader", ".", "vocab", ",", "\n", "hidden_dim", "=", "self", ".", "layer_dim", "\n", ")", "\n", "enc", ".", "transduce", "(", "self", ".", "inp_emb", "(", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_segmenting.TestComposing.test_add_multiple_segment_composer": [[236, 250], ["xnmt.vocabs.Vocab", "SumMultipleComposer", "enc.transduce", "test_segmenting.TestComposing.inp_emb", "LookupComposer", "CharNGramComposer"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_segmenting.TestComposing.inp_emb"], ["", "def", "test_add_multiple_segment_composer", "(", "self", ")", ":", "\n", "    ", "enc", "=", "self", ".", "segmenting_encoder", "\n", "word_vocab", "=", "Vocab", "(", "vocab_file", "=", "\"examples/data/head.ja.vocab\"", ")", "\n", "enc", ".", "segment_composer", "=", "SumMultipleComposer", "(", "\n", "composers", "=", "[", "\n", "LookupComposer", "(", "word_vocab", "=", "word_vocab", ",", "\n", "src_vocab", "=", "self", ".", "src_reader", ".", "vocab", ",", "\n", "hidden_dim", "=", "self", ".", "layer_dim", ")", ",", "\n", "CharNGramComposer", "(", "word_vocab", "=", "word_vocab", ",", "\n", "src_vocab", "=", "self", ".", "src_reader", ".", "vocab", ",", "\n", "hidden_dim", "=", "self", ".", "layer_dim", ")", "\n", "]", "\n", ")", "\n", "enc", ".", "transduce", "(", "self", ".", "inp_emb", "(", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_segmenting.TestComposing.test_sum_composer": [[251, 255], ["SumComposer", "enc.transduce", "test_segmenting.TestComposing.inp_emb"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_segmenting.TestComposing.inp_emb"], ["", "def", "test_sum_composer", "(", "self", ")", ":", "\n", "    ", "enc", "=", "self", ".", "segmenting_encoder", "\n", "enc", ".", "segment_composer", "=", "SumComposer", "(", ")", "\n", "enc", ".", "transduce", "(", "self", ".", "inp_emb", "(", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_segmenting.TestComposing.test_avg_composer": [[256, 260], ["AverageComposer", "enc.transduce", "test_segmenting.TestComposing.inp_emb"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_segmenting.TestComposing.inp_emb"], ["", "def", "test_avg_composer", "(", "self", ")", ":", "\n", "    ", "enc", "=", "self", ".", "segmenting_encoder", "\n", "enc", ".", "segment_composer", "=", "AverageComposer", "(", ")", "\n", "enc", ".", "transduce", "(", "self", ".", "inp_emb", "(", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_segmenting.TestComposing.test_max_composer": [[261, 265], ["MaxComposer", "enc.transduce", "test_segmenting.TestComposing.inp_emb"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_segmenting.TestComposing.inp_emb"], ["", "def", "test_max_composer", "(", "self", ")", ":", "\n", "    ", "enc", "=", "self", ".", "segmenting_encoder", "\n", "enc", ".", "segment_composer", "=", "MaxComposer", "(", ")", "\n", "enc", ".", "transduce", "(", "self", ".", "inp_emb", "(", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_segmenting.TestComposing.test_convolution_composer": [[266, 278], ["ConvolutionComposer", "xnmt.event_trigger.set_train", "enc.transduce", "ConvolutionComposer", "xnmt.event_trigger.set_train", "enc.transduce", "test_segmenting.TestComposing.inp_emb", "test_segmenting.TestComposing.inp_emb"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.set_train", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.set_train", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_segmenting.TestComposing.inp_emb", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_segmenting.TestComposing.inp_emb"], ["", "def", "test_convolution_composer", "(", "self", ")", ":", "\n", "    ", "enc", "=", "self", ".", "segmenting_encoder", "\n", "enc", ".", "segment_composer", "=", "ConvolutionComposer", "(", "ngram_size", "=", "1", ",", "\n", "embed_dim", "=", "self", ".", "layer_dim", ",", "\n", "hidden_dim", "=", "self", ".", "layer_dim", ")", "\n", "event_trigger", ".", "set_train", "(", "True", ")", "\n", "enc", ".", "transduce", "(", "self", ".", "inp_emb", "(", "0", ")", ")", "\n", "enc", ".", "segment_composer", "=", "ConvolutionComposer", "(", "ngram_size", "=", "3", ",", "\n", "embed_dim", "=", "self", ".", "layer_dim", ",", "\n", "hidden_dim", "=", "self", ".", "layer_dim", ")", "\n", "event_trigger", ".", "set_train", "(", "True", ")", "\n", "enc", ".", "transduce", "(", "self", ".", "inp_emb", "(", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_segmenting.TestComposing.test_transducer_composer": [[279, 285], ["SeqTransducerComposer", "xnmt.event_trigger.set_train", "enc.transduce", "test_segmenting.TestComposing.inp_emb", "BiLSTMSeqTransducer"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.set_train", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_segmenting.TestComposing.inp_emb"], ["", "def", "test_transducer_composer", "(", "self", ")", ":", "\n", "    ", "enc", "=", "self", ".", "segmenting_encoder", "\n", "enc", ".", "segment_composer", "=", "SeqTransducerComposer", "(", "seq_transducer", "=", "BiLSTMSeqTransducer", "(", "input_dim", "=", "self", ".", "layer_dim", ",", "\n", "hidden_dim", "=", "self", ".", "layer_dim", ")", ")", "\n", "event_trigger", ".", "set_train", "(", "True", ")", "\n", "enc", ".", "transduce", "(", "self", ".", "inp_emb", "(", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_training.TestTruncatedBatchTraining.setUp": [[28, 36], ["xnmt.events.clear", "xnmt.param_collections.ParamManager.init_param_col", "xnmt.input_readers.PlainTextReader", "xnmt.input_readers.PlainTextReader", "list", "list", "test_training.TestTruncatedBatchTraining.src_reader.read_sents", "test_training.TestTruncatedBatchTraining.trg_reader.read_sents", "xnmt.vocabs.Vocab", "xnmt.vocabs.Vocab"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.clear", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.init_param_col", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.read_sents", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.read_sents"], ["  ", "def", "setUp", "(", "self", ")", ":", "\n", "    ", "xnmt", ".", "events", ".", "clear", "(", ")", "\n", "ParamManager", ".", "init_param_col", "(", ")", "\n", "\n", "self", ".", "src_reader", "=", "PlainTextReader", "(", "vocab", "=", "Vocab", "(", "vocab_file", "=", "\"examples/data/head.ja.vocab\"", ")", ")", "\n", "self", ".", "trg_reader", "=", "PlainTextReader", "(", "vocab", "=", "Vocab", "(", "vocab_file", "=", "\"examples/data/head.en.vocab\"", ")", ")", "\n", "self", ".", "src_data", "=", "list", "(", "self", ".", "src_reader", ".", "read_sents", "(", "\"examples/data/head.ja\"", ")", ")", "\n", "self", ".", "trg_data", "=", "list", "(", "self", ".", "trg_reader", ".", "read_sents", "(", "\"examples/data/head.en\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_training.TestTruncatedBatchTraining.assert_single_loss_equals_batch_loss": [[37, 74], ["min", "min", "range", "dynet.renew_cg", "xnmt.loss_calculators.MLELoss().calc_loss().value", "test_training.TestTruncatedBatchTraining.assertAlmostEqual", "xnmt.sent.SimpleSentence", "xnmt.sent.SimpleSentence", "dynet.renew_cg", "xnmt.loss_calculators.MLELoss().calc_loss().value", "numpy.sum", "x.sent_len", "single_sent.append", "x.sent_len", "xnmt.loss_calculators.MLELoss().calc_loss", "len", "xnmt.loss_calculators.MLELoss().calc_loss", "xnmt.loss_calculators.MLELoss", "xnmt.batchers.mark_as_batch", "xnmt.batchers.mark_as_batch", "xnmt.loss_calculators.MLELoss"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_encoder.DualEncoderSimilarity.calc_loss", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_encoder.DualEncoderSimilarity.calc_loss", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch"], ["", "def", "assert_single_loss_equals_batch_loss", "(", "self", ",", "model", ",", "pad_src_to_multiple", "=", "1", ")", ":", "\n", "    ", "\"\"\"\n    Tests whether single loss equals batch loss.\n    Truncating src / trg sents to same length so no masking is necessary\n    \"\"\"", "\n", "batch_size", "=", "5", "\n", "src_sents", "=", "self", ".", "src_data", "[", ":", "batch_size", "]", "\n", "src_min", "=", "min", "(", "[", "x", ".", "sent_len", "(", ")", "for", "x", "in", "src_sents", "]", ")", "\n", "src_sents_trunc", "=", "[", "s", ".", "words", "[", ":", "src_min", "]", "for", "s", "in", "src_sents", "]", "\n", "for", "single_sent", "in", "src_sents_trunc", ":", "\n", "      ", "single_sent", "[", "src_min", "-", "1", "]", "=", "Vocab", ".", "ES", "\n", "while", "len", "(", "single_sent", ")", "%", "pad_src_to_multiple", "!=", "0", ":", "\n", "        ", "single_sent", ".", "append", "(", "Vocab", ".", "ES", ")", "\n", "", "", "trg_sents", "=", "self", ".", "trg_data", "[", ":", "batch_size", "]", "\n", "trg_min", "=", "min", "(", "[", "x", ".", "sent_len", "(", ")", "for", "x", "in", "trg_sents", "]", ")", "\n", "trg_sents_trunc", "=", "[", "s", ".", "words", "[", ":", "trg_min", "]", "for", "s", "in", "trg_sents", "]", "\n", "for", "single_sent", "in", "trg_sents_trunc", ":", "single_sent", "[", "trg_min", "-", "1", "]", "=", "Vocab", ".", "ES", "\n", "\n", "src_sents_trunc", "=", "[", "sent", ".", "SimpleSentence", "(", "words", "=", "s", ")", "for", "s", "in", "src_sents_trunc", "]", "\n", "trg_sents_trunc", "=", "[", "sent", ".", "SimpleSentence", "(", "words", "=", "s", ")", "for", "s", "in", "trg_sents_trunc", "]", "\n", "\n", "single_loss", "=", "0.0", "\n", "for", "sent_id", "in", "range", "(", "batch_size", ")", ":", "\n", "      ", "dy", ".", "renew_cg", "(", ")", "\n", "train_loss", "=", "MLELoss", "(", ")", ".", "calc_loss", "(", "\n", "model", "=", "model", ",", "\n", "src", "=", "src_sents_trunc", "[", "sent_id", "]", ",", "\n", "trg", "=", "trg_sents_trunc", "[", "sent_id", "]", ")", ".", "value", "(", ")", "\n", "single_loss", "+=", "train_loss", "\n", "\n", "", "dy", ".", "renew_cg", "(", ")", "\n", "\n", "batched_loss", "=", "MLELoss", "(", ")", ".", "calc_loss", "(", "\n", "model", "=", "model", ",", "\n", "src", "=", "mark_as_batch", "(", "src_sents_trunc", ")", ",", "\n", "trg", "=", "mark_as_batch", "(", "trg_sents_trunc", ")", ")", ".", "value", "(", ")", "\n", "self", ".", "assertAlmostEqual", "(", "single_loss", ",", "np", ".", "sum", "(", "batched_loss", ")", ",", "places", "=", "4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_training.TestTruncatedBatchTraining.test_loss_model1": [[75, 96], ["xnmt.models.translators.DefaultTranslator", "xnmt.event_trigger.set_train", "test_training.TestTruncatedBatchTraining.assert_single_loss_equals_batch_loss", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.transducers.recurrent.BiLSTMSeqTransducer", "xnmt.modelparts.attenders.MlpAttender", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.modelparts.decoders.AutoRegressiveDecoder", "xnmt.transducers.recurrent.UniLSTMSeqTransducer", "xnmt.modelparts.transforms.NonLinear", "xnmt.modelparts.scorers.Softmax", "xnmt.modelparts.bridges.CopyBridge"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.set_train", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_training.TestBatchTraining.assert_single_loss_equals_batch_loss"], ["", "def", "test_loss_model1", "(", "self", ")", ":", "\n", "    ", "layer_dim", "=", "512", "\n", "model", "=", "DefaultTranslator", "(", "\n", "src_reader", "=", "self", ".", "src_reader", ",", "\n", "trg_reader", "=", "self", ".", "trg_reader", ",", "\n", "src_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "encoder", "=", "BiLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ")", ",", "\n", "attender", "=", "MlpAttender", "(", "input_dim", "=", "layer_dim", ",", "state_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ")", ",", "\n", "trg_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "decoder", "=", "AutoRegressiveDecoder", "(", "input_dim", "=", "layer_dim", ",", "\n", "trg_embed_dim", "=", "layer_dim", ",", "\n", "rnn", "=", "UniLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "\n", "hidden_dim", "=", "layer_dim", ",", "\n", "decoder_input_dim", "=", "layer_dim", ",", "\n", "yaml_path", "=", "\"model.decoder.rnn\"", ")", ",", "\n", "transform", "=", "NonLinear", "(", "input_dim", "=", "layer_dim", "*", "2", ",", "output_dim", "=", "layer_dim", ")", ",", "\n", "scorer", "=", "Softmax", "(", "input_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "bridge", "=", "CopyBridge", "(", "dec_dim", "=", "layer_dim", ",", "dec_layers", "=", "1", ")", ")", ",", "\n", ")", "\n", "event_trigger", ".", "set_train", "(", "False", ")", "\n", "self", ".", "assert_single_loss_equals_batch_loss", "(", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_training.TestTruncatedBatchTraining.test_loss_model2": [[97, 118], ["xnmt.models.translators.DefaultTranslator", "xnmt.event_trigger.set_train", "test_training.TestTruncatedBatchTraining.assert_single_loss_equals_batch_loss", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.transducers.pyramidal.PyramidalLSTMSeqTransducer", "xnmt.modelparts.attenders.MlpAttender", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.modelparts.decoders.AutoRegressiveDecoder", "xnmt.transducers.recurrent.UniLSTMSeqTransducer", "xnmt.modelparts.transforms.NonLinear", "xnmt.modelparts.scorers.Softmax", "xnmt.modelparts.bridges.CopyBridge"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.set_train", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_training.TestBatchTraining.assert_single_loss_equals_batch_loss"], ["", "def", "test_loss_model2", "(", "self", ")", ":", "\n", "    ", "layer_dim", "=", "512", "\n", "model", "=", "DefaultTranslator", "(", "\n", "src_reader", "=", "self", ".", "src_reader", ",", "\n", "trg_reader", "=", "self", ".", "trg_reader", ",", "\n", "src_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "encoder", "=", "PyramidalLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ",", "layers", "=", "3", ")", ",", "\n", "attender", "=", "MlpAttender", "(", "input_dim", "=", "layer_dim", ",", "state_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ")", ",", "\n", "trg_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "decoder", "=", "AutoRegressiveDecoder", "(", "input_dim", "=", "layer_dim", ",", "\n", "trg_embed_dim", "=", "layer_dim", ",", "\n", "rnn", "=", "UniLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "\n", "hidden_dim", "=", "layer_dim", ",", "\n", "decoder_input_dim", "=", "layer_dim", ",", "\n", "yaml_path", "=", "\"model.decoder.rnn\"", ")", ",", "\n", "transform", "=", "NonLinear", "(", "input_dim", "=", "layer_dim", "*", "2", ",", "output_dim", "=", "layer_dim", ")", ",", "\n", "scorer", "=", "Softmax", "(", "input_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "bridge", "=", "CopyBridge", "(", "dec_dim", "=", "layer_dim", ",", "dec_layers", "=", "1", ")", ")", ",", "\n", ")", "\n", "event_trigger", ".", "set_train", "(", "False", ")", "\n", "self", ".", "assert_single_loss_equals_batch_loss", "(", "model", ",", "pad_src_to_multiple", "=", "4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_training.TestTruncatedBatchTraining.test_loss_model3": [[119, 140], ["xnmt.models.translators.DefaultTranslator", "xnmt.event_trigger.set_train", "test_training.TestTruncatedBatchTraining.assert_single_loss_equals_batch_loss", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.transducers.recurrent.BiLSTMSeqTransducer", "xnmt.modelparts.attenders.MlpAttender", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.modelparts.decoders.AutoRegressiveDecoder", "xnmt.transducers.recurrent.UniLSTMSeqTransducer", "xnmt.modelparts.transforms.NonLinear", "xnmt.modelparts.scorers.Softmax", "xnmt.modelparts.bridges.CopyBridge"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.set_train", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_training.TestBatchTraining.assert_single_loss_equals_batch_loss"], ["", "def", "test_loss_model3", "(", "self", ")", ":", "\n", "    ", "layer_dim", "=", "512", "\n", "model", "=", "DefaultTranslator", "(", "\n", "src_reader", "=", "self", ".", "src_reader", ",", "\n", "trg_reader", "=", "self", ".", "trg_reader", ",", "\n", "src_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "encoder", "=", "BiLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ",", "layers", "=", "3", ")", ",", "\n", "attender", "=", "MlpAttender", "(", "input_dim", "=", "layer_dim", ",", "state_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ")", ",", "\n", "trg_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "decoder", "=", "AutoRegressiveDecoder", "(", "input_dim", "=", "layer_dim", ",", "\n", "trg_embed_dim", "=", "layer_dim", ",", "\n", "rnn", "=", "UniLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "\n", "hidden_dim", "=", "layer_dim", ",", "\n", "decoder_input_dim", "=", "layer_dim", ",", "\n", "yaml_path", "=", "\"model.decoder.rnn\"", ")", ",", "\n", "transform", "=", "NonLinear", "(", "input_dim", "=", "layer_dim", "*", "2", ",", "output_dim", "=", "layer_dim", ")", ",", "\n", "scorer", "=", "Softmax", "(", "input_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "bridge", "=", "CopyBridge", "(", "dec_dim", "=", "layer_dim", ",", "dec_layers", "=", "1", ")", ")", ",", "\n", ")", "\n", "event_trigger", ".", "set_train", "(", "False", ")", "\n", "self", ".", "assert_single_loss_equals_batch_loss", "(", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_training.TestTruncatedBatchTraining.test_loss_model4": [[141, 162], ["xnmt.models.translators.DefaultTranslator", "xnmt.event_trigger.set_train", "test_training.TestTruncatedBatchTraining.assert_single_loss_equals_batch_loss", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.transducers.recurrent.BiLSTMSeqTransducer", "xnmt.modelparts.attenders.DotAttender", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.modelparts.decoders.AutoRegressiveDecoder", "xnmt.transducers.recurrent.UniLSTMSeqTransducer", "xnmt.modelparts.transforms.NonLinear", "xnmt.modelparts.scorers.Softmax", "xnmt.modelparts.bridges.CopyBridge"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.set_train", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_training.TestBatchTraining.assert_single_loss_equals_batch_loss"], ["", "def", "test_loss_model4", "(", "self", ")", ":", "\n", "    ", "layer_dim", "=", "512", "\n", "model", "=", "DefaultTranslator", "(", "\n", "src_reader", "=", "self", ".", "src_reader", ",", "\n", "trg_reader", "=", "self", ".", "trg_reader", ",", "\n", "src_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "encoder", "=", "BiLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ")", ",", "\n", "attender", "=", "DotAttender", "(", ")", ",", "\n", "trg_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "decoder", "=", "AutoRegressiveDecoder", "(", "input_dim", "=", "layer_dim", ",", "\n", "trg_embed_dim", "=", "layer_dim", ",", "\n", "rnn", "=", "UniLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "\n", "hidden_dim", "=", "layer_dim", ",", "\n", "decoder_input_dim", "=", "layer_dim", ",", "\n", "yaml_path", "=", "\"model.decoder.rnn\"", ")", ",", "\n", "transform", "=", "NonLinear", "(", "input_dim", "=", "layer_dim", "*", "2", ",", "output_dim", "=", "layer_dim", ")", ",", "\n", "scorer", "=", "Softmax", "(", "input_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "bridge", "=", "CopyBridge", "(", "dec_dim", "=", "layer_dim", ",", "dec_layers", "=", "1", ")", ")", ",", "\n", ")", "\n", "event_trigger", ".", "set_train", "(", "False", ")", "\n", "self", ".", "assert_single_loss_equals_batch_loss", "(", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_training.TestBatchTraining.setUp": [[165, 173], ["xnmt.events.clear", "xnmt.param_collections.ParamManager.init_param_col", "xnmt.input_readers.PlainTextReader", "xnmt.input_readers.PlainTextReader", "list", "list", "test_training.TestBatchTraining.src_reader.read_sents", "test_training.TestBatchTraining.trg_reader.read_sents", "xnmt.vocabs.Vocab", "xnmt.vocabs.Vocab"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.clear", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.init_param_col", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.read_sents", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.read_sents"], ["  ", "def", "setUp", "(", "self", ")", ":", "\n", "    ", "xnmt", ".", "events", ".", "clear", "(", ")", "\n", "ParamManager", ".", "init_param_col", "(", ")", "\n", "\n", "self", ".", "src_reader", "=", "PlainTextReader", "(", "vocab", "=", "Vocab", "(", "vocab_file", "=", "\"examples/data/head.ja.vocab\"", ")", ")", "\n", "self", ".", "trg_reader", "=", "PlainTextReader", "(", "vocab", "=", "Vocab", "(", "vocab_file", "=", "\"examples/data/head.en.vocab\"", ")", ")", "\n", "self", ".", "src_data", "=", "list", "(", "self", ".", "src_reader", ".", "read_sents", "(", "\"examples/data/head.ja\"", ")", ")", "\n", "self", ".", "trg_data", "=", "list", "(", "self", ".", "trg_reader", ".", "read_sents", "(", "\"examples/data/head.en\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_training.TestBatchTraining.assert_single_loss_equals_batch_loss": [[174, 215], ["min", "sorted", "max", "numpy.zeros", "range", "xnmt.batchers.Mask", "range", "dynet.renew_cg", "xnmt.loss_calculators.MLELoss().calc_loss().value", "test_training.TestBatchTraining.assertAlmostEqual", "range", "xnmt.sent.SimpleSentence", "xnmt.sent.SimpleSentence", "dynet.renew_cg", "xnmt.loss_calculators.MLELoss().calc_loss().value", "numpy.sum", "x.sent_len", "single_sent.append", "x.sent_len", "trg_sents[].sent_len", "xnmt.loss_calculators.MLELoss().calc_loss", "len", "x.sent_len", "xnmt.loss_calculators.MLELoss().calc_loss", "s.sent_len", "xnmt.loss_calculators.MLELoss", "xnmt.batchers.mark_as_batch", "xnmt.batchers.mark_as_batch", "xnmt.loss_calculators.MLELoss"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_encoder.DualEncoderSimilarity.calc_loss", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_encoder.DualEncoderSimilarity.calc_loss", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch"], ["", "def", "assert_single_loss_equals_batch_loss", "(", "self", ",", "model", ",", "pad_src_to_multiple", "=", "1", ")", ":", "\n", "    ", "\"\"\"\n    Tests whether single loss equals batch loss.\n    Here we don't truncate the target side and use masking.\n    \"\"\"", "\n", "batch_size", "=", "5", "\n", "src_sents", "=", "self", ".", "src_data", "[", ":", "batch_size", "]", "\n", "src_min", "=", "min", "(", "[", "x", ".", "sent_len", "(", ")", "for", "x", "in", "src_sents", "]", ")", "\n", "src_sents_trunc", "=", "[", "s", ".", "words", "[", ":", "src_min", "]", "for", "s", "in", "src_sents", "]", "\n", "for", "single_sent", "in", "src_sents_trunc", ":", "\n", "      ", "single_sent", "[", "src_min", "-", "1", "]", "=", "Vocab", ".", "ES", "\n", "while", "len", "(", "single_sent", ")", "%", "pad_src_to_multiple", "!=", "0", ":", "\n", "        ", "single_sent", ".", "append", "(", "Vocab", ".", "ES", ")", "\n", "", "", "trg_sents", "=", "sorted", "(", "self", ".", "trg_data", "[", ":", "batch_size", "]", ",", "key", "=", "lambda", "x", ":", "x", ".", "sent_len", "(", ")", ",", "reverse", "=", "True", ")", "\n", "trg_max", "=", "max", "(", "[", "x", ".", "sent_len", "(", ")", "for", "x", "in", "trg_sents", "]", ")", "\n", "np_arr", "=", "np", ".", "zeros", "(", "[", "batch_size", ",", "trg_max", "]", ")", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "      ", "for", "j", "in", "range", "(", "trg_sents", "[", "i", "]", ".", "sent_len", "(", ")", ",", "trg_max", ")", ":", "\n", "        ", "np_arr", "[", "i", ",", "j", "]", "=", "1.0", "\n", "", "", "trg_masks", "=", "Mask", "(", "np_arr", ")", "\n", "trg_sents_padded", "=", "[", "[", "w", "for", "w", "in", "s", "]", "+", "[", "Vocab", ".", "ES", "]", "*", "(", "trg_max", "-", "s", ".", "sent_len", "(", ")", ")", "for", "s", "in", "trg_sents", "]", "\n", "\n", "src_sents_trunc", "=", "[", "sent", ".", "SimpleSentence", "(", "words", "=", "s", ")", "for", "s", "in", "src_sents_trunc", "]", "\n", "trg_sents_padded", "=", "[", "sent", ".", "SimpleSentence", "(", "words", "=", "s", ")", "for", "s", "in", "trg_sents_padded", "]", "\n", "\n", "single_loss", "=", "0.0", "\n", "for", "sent_id", "in", "range", "(", "batch_size", ")", ":", "\n", "      ", "dy", ".", "renew_cg", "(", ")", "\n", "train_loss", "=", "MLELoss", "(", ")", ".", "calc_loss", "(", "\n", "model", "=", "model", ",", "\n", "src", "=", "src_sents_trunc", "[", "sent_id", "]", ",", "\n", "trg", "=", "trg_sents", "[", "sent_id", "]", ")", ".", "value", "(", ")", "\n", "single_loss", "+=", "train_loss", "\n", "\n", "", "dy", ".", "renew_cg", "(", ")", "\n", "\n", "batched_loss", "=", "MLELoss", "(", ")", ".", "calc_loss", "(", "\n", "model", "=", "model", ",", "\n", "src", "=", "mark_as_batch", "(", "src_sents_trunc", ")", ",", "\n", "trg", "=", "mark_as_batch", "(", "trg_sents_padded", ",", "trg_masks", ")", ")", ".", "value", "(", ")", "\n", "self", ".", "assertAlmostEqual", "(", "single_loss", ",", "np", ".", "sum", "(", "batched_loss", ")", ",", "places", "=", "4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_training.TestBatchTraining.test_loss_model1": [[216, 237], ["xnmt.models.translators.DefaultTranslator", "xnmt.event_trigger.set_train", "test_training.TestBatchTraining.assert_single_loss_equals_batch_loss", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.transducers.recurrent.BiLSTMSeqTransducer", "xnmt.modelparts.attenders.MlpAttender", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.modelparts.decoders.AutoRegressiveDecoder", "xnmt.transducers.recurrent.UniLSTMSeqTransducer", "xnmt.modelparts.transforms.NonLinear", "xnmt.modelparts.scorers.Softmax", "xnmt.modelparts.bridges.CopyBridge"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.set_train", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_training.TestBatchTraining.assert_single_loss_equals_batch_loss"], ["", "def", "test_loss_model1", "(", "self", ")", ":", "\n", "    ", "layer_dim", "=", "512", "\n", "model", "=", "DefaultTranslator", "(", "\n", "src_reader", "=", "self", ".", "src_reader", ",", "\n", "trg_reader", "=", "self", ".", "trg_reader", ",", "\n", "src_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "encoder", "=", "BiLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ")", ",", "\n", "attender", "=", "MlpAttender", "(", "input_dim", "=", "layer_dim", ",", "state_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ")", ",", "\n", "trg_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "decoder", "=", "AutoRegressiveDecoder", "(", "input_dim", "=", "layer_dim", ",", "\n", "trg_embed_dim", "=", "layer_dim", ",", "\n", "rnn", "=", "UniLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "\n", "hidden_dim", "=", "layer_dim", ",", "\n", "decoder_input_dim", "=", "layer_dim", ",", "\n", "yaml_path", "=", "\"model.decoder.rnn\"", ")", ",", "\n", "transform", "=", "NonLinear", "(", "input_dim", "=", "layer_dim", "*", "2", ",", "output_dim", "=", "layer_dim", ")", ",", "\n", "scorer", "=", "Softmax", "(", "input_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "bridge", "=", "CopyBridge", "(", "dec_dim", "=", "layer_dim", ",", "dec_layers", "=", "1", ")", ")", ",", "\n", ")", "\n", "event_trigger", ".", "set_train", "(", "False", ")", "\n", "self", ".", "assert_single_loss_equals_batch_loss", "(", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_training.TestBatchTraining.test_loss_model2": [[238, 259], ["xnmt.models.translators.DefaultTranslator", "xnmt.event_trigger.set_train", "test_training.TestBatchTraining.assert_single_loss_equals_batch_loss", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.transducers.pyramidal.PyramidalLSTMSeqTransducer", "xnmt.modelparts.attenders.MlpAttender", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.modelparts.decoders.AutoRegressiveDecoder", "xnmt.transducers.recurrent.UniLSTMSeqTransducer", "xnmt.modelparts.transforms.NonLinear", "xnmt.modelparts.scorers.Softmax", "xnmt.modelparts.bridges.CopyBridge"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.set_train", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_training.TestBatchTraining.assert_single_loss_equals_batch_loss"], ["", "def", "test_loss_model2", "(", "self", ")", ":", "\n", "    ", "layer_dim", "=", "512", "\n", "model", "=", "DefaultTranslator", "(", "\n", "src_reader", "=", "self", ".", "src_reader", ",", "\n", "trg_reader", "=", "self", ".", "trg_reader", ",", "\n", "src_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "encoder", "=", "PyramidalLSTMSeqTransducer", "(", "layers", "=", "3", ",", "input_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ")", ",", "\n", "attender", "=", "MlpAttender", "(", "input_dim", "=", "layer_dim", ",", "state_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ")", ",", "\n", "trg_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "decoder", "=", "AutoRegressiveDecoder", "(", "input_dim", "=", "layer_dim", ",", "\n", "trg_embed_dim", "=", "layer_dim", ",", "\n", "rnn", "=", "UniLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "\n", "hidden_dim", "=", "layer_dim", ",", "\n", "decoder_input_dim", "=", "layer_dim", ",", "\n", "yaml_path", "=", "\"model.decoder.rnn\"", ")", ",", "\n", "transform", "=", "NonLinear", "(", "input_dim", "=", "layer_dim", "*", "2", ",", "output_dim", "=", "layer_dim", ")", ",", "\n", "scorer", "=", "Softmax", "(", "input_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "bridge", "=", "CopyBridge", "(", "dec_dim", "=", "layer_dim", ",", "dec_layers", "=", "1", ")", ")", ",", "\n", ")", "\n", "event_trigger", ".", "set_train", "(", "False", ")", "\n", "self", ".", "assert_single_loss_equals_batch_loss", "(", "model", ",", "pad_src_to_multiple", "=", "4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_training.TestBatchTraining.test_loss_model3": [[260, 281], ["xnmt.models.translators.DefaultTranslator", "xnmt.event_trigger.set_train", "test_training.TestBatchTraining.assert_single_loss_equals_batch_loss", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.transducers.recurrent.BiLSTMSeqTransducer", "xnmt.modelparts.attenders.MlpAttender", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.modelparts.decoders.AutoRegressiveDecoder", "xnmt.transducers.recurrent.UniLSTMSeqTransducer", "xnmt.modelparts.transforms.NonLinear", "xnmt.modelparts.scorers.Softmax", "xnmt.modelparts.bridges.CopyBridge"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.set_train", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_training.TestBatchTraining.assert_single_loss_equals_batch_loss"], ["", "def", "test_loss_model3", "(", "self", ")", ":", "\n", "    ", "layer_dim", "=", "512", "\n", "model", "=", "DefaultTranslator", "(", "\n", "src_reader", "=", "self", ".", "src_reader", ",", "\n", "trg_reader", "=", "self", ".", "trg_reader", ",", "\n", "src_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "encoder", "=", "BiLSTMSeqTransducer", "(", "layers", "=", "3", ",", "input_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ")", ",", "\n", "attender", "=", "MlpAttender", "(", "input_dim", "=", "layer_dim", ",", "state_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ")", ",", "\n", "trg_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "decoder", "=", "AutoRegressiveDecoder", "(", "input_dim", "=", "layer_dim", ",", "\n", "trg_embed_dim", "=", "layer_dim", ",", "\n", "rnn", "=", "UniLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "\n", "hidden_dim", "=", "layer_dim", ",", "\n", "decoder_input_dim", "=", "layer_dim", ",", "\n", "yaml_path", "=", "\"model.decoder.rnn\"", ")", ",", "\n", "transform", "=", "NonLinear", "(", "input_dim", "=", "layer_dim", "*", "2", ",", "output_dim", "=", "layer_dim", ")", ",", "\n", "scorer", "=", "Softmax", "(", "input_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "bridge", "=", "CopyBridge", "(", "dec_dim", "=", "layer_dim", ",", "dec_layers", "=", "1", ")", ")", ",", "\n", ")", "\n", "event_trigger", ".", "set_train", "(", "False", ")", "\n", "self", ".", "assert_single_loss_equals_batch_loss", "(", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_training.TestTrainDevLoss.setUp": [[285, 288], ["xnmt.events.clear", "xnmt.param_collections.ParamManager.init_param_col"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.clear", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.init_param_col"], ["  ", "def", "setUp", "(", "self", ")", ":", "\n", "    ", "xnmt", ".", "events", ".", "clear", "(", ")", "\n", "ParamManager", ".", "init_param_col", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_training.TestTrainDevLoss.test_train_dev_loss_equal": [[289, 324], ["xnmt.batchers.SrcBatcher", "xnmt.loss_calculators.MLELoss", "xnmt.models.translators.DefaultTranslator", "xnmt.optimizers.DummyTrainer", "xnmt.train.regimens.SimpleTrainingRegimen", "xnmt.train.regimens.SimpleTrainingRegimen.run_training", "test_training.TestTrainDevLoss.assertAlmostEqual", "xnmt.eval.tasks.LossEvalTask", "xnmt.input_readers.PlainTextReader", "xnmt.input_readers.PlainTextReader", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.transducers.recurrent.BiLSTMSeqTransducer", "xnmt.modelparts.attenders.MlpAttender", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.modelparts.decoders.AutoRegressiveDecoder", "xnmt.train.regimens.SimpleTrainingRegimen.train_loss_tracker.epoch_loss.sum_factors", "xnmt.vocabs.Vocab", "xnmt.vocabs.Vocab", "xnmt.transducers.recurrent.UniLSTMSeqTransducer", "xnmt.modelparts.transforms.NonLinear", "xnmt.modelparts.scorers.Softmax", "xnmt.modelparts.bridges.CopyBridge"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.SerialMultiTaskTrainingRegimen.run_training", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.sum_factors"], ["", "def", "test_train_dev_loss_equal", "(", "self", ")", ":", "\n", "    ", "layer_dim", "=", "512", "\n", "batcher", "=", "SrcBatcher", "(", "batch_size", "=", "5", ",", "break_ties_randomly", "=", "False", ")", "\n", "train_args", "=", "{", "}", "\n", "train_args", "[", "'src_file'", "]", "=", "\"examples/data/head.ja\"", "\n", "train_args", "[", "'trg_file'", "]", "=", "\"examples/data/head.en\"", "\n", "train_args", "[", "'loss_calculator'", "]", "=", "MLELoss", "(", ")", "\n", "train_args", "[", "'model'", "]", "=", "DefaultTranslator", "(", "src_reader", "=", "PlainTextReader", "(", "vocab", "=", "Vocab", "(", "vocab_file", "=", "\"examples/data/head.ja.vocab\"", ")", ")", ",", "\n", "trg_reader", "=", "PlainTextReader", "(", "vocab", "=", "Vocab", "(", "vocab_file", "=", "\"examples/data/head.en.vocab\"", ")", ")", ",", "\n", "src_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "encoder", "=", "BiLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ")", ",", "\n", "attender", "=", "MlpAttender", "(", "input_dim", "=", "layer_dim", ",", "state_dim", "=", "layer_dim", ",", "\n", "hidden_dim", "=", "layer_dim", ")", ",", "\n", "trg_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "decoder", "=", "AutoRegressiveDecoder", "(", "input_dim", "=", "layer_dim", ",", "\n", "trg_embed_dim", "=", "layer_dim", ",", "\n", "rnn", "=", "UniLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "\n", "hidden_dim", "=", "layer_dim", ",", "\n", "decoder_input_dim", "=", "layer_dim", ",", "\n", "yaml_path", "=", "\"model.decoder.rnn\"", ")", ",", "\n", "transform", "=", "NonLinear", "(", "input_dim", "=", "layer_dim", "*", "2", ",", "output_dim", "=", "layer_dim", ")", ",", "\n", "scorer", "=", "Softmax", "(", "input_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "bridge", "=", "CopyBridge", "(", "dec_dim", "=", "layer_dim", ",", "dec_layers", "=", "1", ")", ")", ",", "\n", ")", "\n", "train_args", "[", "'dev_tasks'", "]", "=", "[", "LossEvalTask", "(", "model", "=", "train_args", "[", "'model'", "]", ",", "\n", "src_file", "=", "\"examples/data/head.ja\"", ",", "\n", "ref_file", "=", "\"examples/data/head.en\"", ",", "\n", "batcher", "=", "batcher", ")", "]", "\n", "train_args", "[", "'trainer'", "]", "=", "DummyTrainer", "(", ")", "\n", "train_args", "[", "'batcher'", "]", "=", "batcher", "\n", "train_args", "[", "'run_for_epochs'", "]", "=", "1", "\n", "training_regimen", "=", "regimens", ".", "SimpleTrainingRegimen", "(", "**", "train_args", ")", "\n", "training_regimen", ".", "run_training", "(", "save_fct", "=", "lambda", ":", "None", ")", "\n", "self", ".", "assertAlmostEqual", "(", "training_regimen", ".", "train_loss_tracker", ".", "epoch_loss", ".", "sum_factors", "(", ")", "/", "training_regimen", ".", "train_loss_tracker", ".", "epoch_words", ",", "\n", "training_regimen", ".", "dev_loss_tracker", ".", "dev_score", ".", "loss", ",", "places", "=", "5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_training.TestOverfitting.setUp": [[327, 330], ["xnmt.events.clear", "xnmt.param_collections.ParamManager.init_param_col"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.clear", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.init_param_col"], ["  ", "def", "setUp", "(", "self", ")", ":", "\n", "    ", "xnmt", ".", "events", ".", "clear", "(", ")", "\n", "ParamManager", ".", "init_param_col", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_training.TestOverfitting.test_overfitting": [[331, 370], ["xnmt.batchers.SrcBatcher", "xnmt.loss_calculators.MLELoss", "xnmt.models.translators.DefaultTranslator", "xnmt.optimizers.AdamTrainer", "xnmt.train.regimens.SimpleTrainingRegimen", "range", "test_training.TestOverfitting.assertAlmostEqual", "xnmt.eval.tasks.LossEvalTask", "xnmt.train.regimens.SimpleTrainingRegimen.run_training", "xnmt.input_readers.PlainTextReader", "xnmt.input_readers.PlainTextReader", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.transducers.recurrent.BiLSTMSeqTransducer", "xnmt.modelparts.attenders.MlpAttender", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.modelparts.decoders.AutoRegressiveDecoder", "xnmt.train.regimens.SimpleTrainingRegimen.train_loss_tracker.epoch_loss.sum_factors", "xnmt.vocabs.Vocab", "xnmt.vocabs.Vocab", "xnmt.transducers.recurrent.UniLSTMSeqTransducer", "xnmt.modelparts.transforms.NonLinear", "xnmt.modelparts.scorers.Softmax", "xnmt.modelparts.bridges.CopyBridge"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.SerialMultiTaskTrainingRegimen.run_training", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.sum_factors"], ["", "def", "test_overfitting", "(", "self", ")", ":", "\n", "    ", "layer_dim", "=", "16", "\n", "batcher", "=", "SrcBatcher", "(", "batch_size", "=", "10", ",", "break_ties_randomly", "=", "False", ")", "\n", "train_args", "=", "{", "}", "\n", "train_args", "[", "'src_file'", "]", "=", "\"examples/data/head.ja\"", "\n", "train_args", "[", "'trg_file'", "]", "=", "\"examples/data/head.en\"", "\n", "train_args", "[", "'loss_calculator'", "]", "=", "MLELoss", "(", ")", "\n", "train_args", "[", "'model'", "]", "=", "DefaultTranslator", "(", "src_reader", "=", "PlainTextReader", "(", "vocab", "=", "Vocab", "(", "vocab_file", "=", "\"examples/data/head.ja.vocab\"", ")", ")", ",", "\n", "trg_reader", "=", "PlainTextReader", "(", "vocab", "=", "Vocab", "(", "vocab_file", "=", "\"examples/data/head.en.vocab\"", ")", ")", ",", "\n", "src_embedder", "=", "SimpleWordEmbedder", "(", "vocab_size", "=", "100", ",", "emb_dim", "=", "layer_dim", ")", ",", "\n", "encoder", "=", "BiLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "\n", "hidden_dim", "=", "layer_dim", ")", ",", "\n", "attender", "=", "MlpAttender", "(", "input_dim", "=", "layer_dim", ",", "\n", "state_dim", "=", "layer_dim", ",", "\n", "hidden_dim", "=", "layer_dim", ")", ",", "\n", "trg_embedder", "=", "SimpleWordEmbedder", "(", "vocab_size", "=", "100", ",", "emb_dim", "=", "layer_dim", ")", ",", "\n", "decoder", "=", "AutoRegressiveDecoder", "(", "input_dim", "=", "layer_dim", ",", "\n", "trg_embed_dim", "=", "layer_dim", ",", "\n", "rnn", "=", "UniLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "\n", "hidden_dim", "=", "layer_dim", ",", "\n", "decoder_input_dim", "=", "layer_dim", ",", "\n", "yaml_path", "=", "\"model.decoder.rnn\"", ")", ",", "\n", "transform", "=", "NonLinear", "(", "input_dim", "=", "layer_dim", "*", "2", ",", "output_dim", "=", "layer_dim", ")", ",", "\n", "scorer", "=", "Softmax", "(", "input_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "bridge", "=", "CopyBridge", "(", "dec_dim", "=", "layer_dim", ",", "dec_layers", "=", "1", ")", ")", ",", "\n", ")", "\n", "train_args", "[", "'dev_tasks'", "]", "=", "[", "LossEvalTask", "(", "model", "=", "train_args", "[", "'model'", "]", ",", "\n", "src_file", "=", "\"examples/data/head.ja\"", ",", "\n", "ref_file", "=", "\"examples/data/head.en\"", ",", "\n", "batcher", "=", "batcher", ")", "]", "\n", "train_args", "[", "'run_for_epochs'", "]", "=", "1", "\n", "train_args", "[", "'trainer'", "]", "=", "AdamTrainer", "(", "alpha", "=", "0.1", ")", "\n", "train_args", "[", "'batcher'", "]", "=", "batcher", "\n", "training_regimen", "=", "regimens", ".", "SimpleTrainingRegimen", "(", "**", "train_args", ")", "\n", "for", "_", "in", "range", "(", "50", ")", ":", "\n", "      ", "training_regimen", ".", "run_training", "(", "save_fct", "=", "lambda", ":", "None", ")", "\n", "", "self", ".", "assertAlmostEqual", "(", "0.0", ",", "\n", "training_regimen", ".", "train_loss_tracker", ".", "epoch_loss", ".", "sum_factors", "(", ")", "/", "training_regimen", ".", "train_loss_tracker", ".", "epoch_words", ",", "\n", "places", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_embedders.PretrainedSimpleWordEmbedderSanityTest.setUp": [[13, 18], ["xnmt.events.clear", "xnmt.input_readers.PlainTextReader", "list", "xnmt.param_collections.ParamManager.init_param_col", "test_embedders.PretrainedSimpleWordEmbedderSanityTest.input_reader.read_sents", "xnmt.vocabs.Vocab"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.clear", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.init_param_col", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.read_sents"], ["  ", "def", "setUp", "(", "self", ")", ":", "\n", "    ", "events", ".", "clear", "(", ")", "\n", "self", ".", "input_reader", "=", "PlainTextReader", "(", "vocab", "=", "Vocab", "(", "vocab_file", "=", "\"examples/data/head.ja.vocab\"", ")", ")", "\n", "list", "(", "self", ".", "input_reader", ".", "read_sents", "(", "'examples/data/head.ja'", ")", ")", "\n", "ParamManager", ".", "init_param_col", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_embedders.PretrainedSimpleWordEmbedderSanityTest.test_load": [[19, 34], ["xnmt.modelparts.embedders.PretrainedSimpleWordEmbedder", "test_embedders.PretrainedSimpleWordEmbedderSanityTest.assertTrue", "open", "next().split", "numpy.allclose", "xnmt.modelparts.embedders.PretrainedSimpleWordEmbedder.embeddings.batch().npvalue().tolist", "numpy.array().tolist", "next", "itertools.islice", "xnmt.modelparts.embedders.PretrainedSimpleWordEmbedder.embeddings.batch().npvalue", "numpy.array", "xnmt.modelparts.embedders.PretrainedSimpleWordEmbedder.embeddings.batch"], "methods", ["None"], ["", "def", "test_load", "(", "self", ")", ":", "\n", "    ", "\"\"\"\n    Checks that the embeddings can be loaded, have the right dimension, and that one line matches.\n    \"\"\"", "\n", "embedder", "=", "PretrainedSimpleWordEmbedder", "(", "filename", "=", "'examples/data/wiki.ja.vec.small'", ",", "emb_dim", "=", "300", ",", "vocab", "=", "self", ".", "input_reader", ".", "vocab", ")", "\n", "# self.assertEqual(embedder.embeddings.shape()[::-1], (self.input_reader.vocab_size(), 300))", "\n", "\n", "with", "open", "(", "'examples/data/wiki.ja.vec.small'", ",", "encoding", "=", "'utf-8'", ")", "as", "vecfile", ":", "\n", "      ", "test_line", "=", "next", "(", "islice", "(", "vecfile", ",", "9", ",", "None", ")", ")", ".", "split", "(", ")", "# Select the vector for '\u65e5'", "\n", "", "test_word", "=", "test_line", "[", "0", "]", "\n", "test_id", "=", "self", ".", "input_reader", ".", "vocab", ".", "w2i", "[", "test_word", "]", "\n", "test_emb", "=", "test_line", "[", "1", ":", "]", "\n", "\n", "self", ".", "assertTrue", "(", "np", ".", "allclose", "(", "embedder", ".", "embeddings", ".", "batch", "(", "[", "test_id", "]", ")", ".", "npvalue", "(", ")", ".", "tolist", "(", ")", ",", "\n", "np", ".", "array", "(", "test_emb", ",", "dtype", "=", "float", ")", ".", "tolist", "(", ")", ",", "rtol", "=", "1e-5", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_decoders.TestForcedDecodingOutputs.assertItemsEqual": [[22, 26], ["test_decoders.TestForcedDecodingOutputs.assertEqual", "range", "len", "len", "len", "test_decoders.TestForcedDecodingOutputs.assertEqual"], "methods", ["None"], ["  ", "def", "assertItemsEqual", "(", "self", ",", "l1", ",", "l2", ")", ":", "\n", "    ", "self", ".", "assertEqual", "(", "len", "(", "l1", ")", ",", "len", "(", "l2", ")", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "l1", ")", ")", ":", "\n", "      ", "self", ".", "assertEqual", "(", "l1", "[", "i", "]", ",", "l2", "[", "i", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_decoders.TestForcedDecodingOutputs.setUp": [[27, 53], ["xnmt.events.clear", "xnmt.param_collections.ParamManager.init_param_col", "xnmt.vocabs.Vocab", "xnmt.vocabs.Vocab", "xnmt.models.translators.DefaultTranslator", "xnmt.event_trigger.set_train", "list", "list", "xnmt.search_strategies.GreedySearch", "test_decoders.TestForcedDecodingOutputs.model.src_reader.read_sents", "test_decoders.TestForcedDecodingOutputs.model.trg_reader.read_sents", "xnmt.input_readers.PlainTextReader", "xnmt.input_readers.PlainTextReader", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.transducers.recurrent.BiLSTMSeqTransducer", "xnmt.modelparts.attenders.MlpAttender", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.modelparts.decoders.AutoRegressiveDecoder", "xnmt.transducers.recurrent.UniLSTMSeqTransducer", "xnmt.modelparts.transforms.NonLinear", "xnmt.modelparts.scorers.Softmax", "xnmt.modelparts.bridges.CopyBridge"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.clear", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.init_param_col", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.set_train", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.read_sents", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.read_sents"], ["", "", "def", "setUp", "(", "self", ")", ":", "\n", "    ", "layer_dim", "=", "512", "\n", "events", ".", "clear", "(", ")", "\n", "ParamManager", ".", "init_param_col", "(", ")", "\n", "src_vocab", "=", "Vocab", "(", "vocab_file", "=", "\"examples/data/head.ja.vocab\"", ")", "\n", "trg_vocab", "=", "Vocab", "(", "vocab_file", "=", "\"examples/data/head.en.vocab\"", ")", "\n", "self", ".", "model", "=", "DefaultTranslator", "(", "\n", "src_reader", "=", "PlainTextReader", "(", "vocab", "=", "src_vocab", ")", ",", "\n", "trg_reader", "=", "PlainTextReader", "(", "vocab", "=", "trg_vocab", ")", ",", "\n", "src_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "encoder", "=", "BiLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ")", ",", "\n", "attender", "=", "MlpAttender", "(", "input_dim", "=", "layer_dim", ",", "state_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ")", ",", "\n", "trg_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "decoder", "=", "AutoRegressiveDecoder", "(", "input_dim", "=", "layer_dim", ",", "\n", "trg_embed_dim", "=", "layer_dim", ",", "\n", "rnn", "=", "UniLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ",", "decoder_input_dim", "=", "layer_dim", ",", "yaml_path", "=", "\"model.decoder.rnn\"", ")", ",", "\n", "transform", "=", "NonLinear", "(", "input_dim", "=", "layer_dim", "*", "2", ",", "output_dim", "=", "layer_dim", ")", ",", "\n", "scorer", "=", "Softmax", "(", "input_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "bridge", "=", "CopyBridge", "(", "dec_dim", "=", "layer_dim", ",", "dec_layers", "=", "1", ")", ")", ",", "\n", ")", "\n", "event_trigger", ".", "set_train", "(", "False", ")", "\n", "\n", "self", ".", "src_data", "=", "list", "(", "self", ".", "model", ".", "src_reader", ".", "read_sents", "(", "\"examples/data/head.ja\"", ")", ")", "\n", "self", ".", "trg_data", "=", "list", "(", "self", ".", "model", ".", "trg_reader", ".", "read_sents", "(", "\"examples/data/head.en\"", ")", ")", "\n", "\n", "self", ".", "search", "=", "GreedySearch", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_decoders.TestForcedDecodingOutputs.assert_forced_decoding": [[54, 59], ["dynet.renew_cg", "test_decoders.TestForcedDecodingOutputs.model.generate", "test_decoders.TestForcedDecodingOutputs.assertItemsEqual", "xnmt.batchers.mark_as_batch", "xnmt.batchers.mark_as_batch"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.generate", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_decoders.TestForcedDecodingOutputs.assertItemsEqual", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch"], ["", "def", "assert_forced_decoding", "(", "self", ",", "sent_id", ")", ":", "\n", "    ", "dy", ".", "renew_cg", "(", ")", "\n", "outputs", "=", "self", ".", "model", ".", "generate", "(", "batchers", ".", "mark_as_batch", "(", "[", "self", ".", "src_data", "[", "sent_id", "]", "]", ")", ",", "self", ".", "search", ",", "\n", "forced_trg_ids", "=", "batchers", ".", "mark_as_batch", "(", "[", "self", ".", "trg_data", "[", "sent_id", "]", "]", ")", ")", "\n", "self", ".", "assertItemsEqual", "(", "self", ".", "trg_data", "[", "sent_id", "]", ".", "words", ",", "outputs", "[", "0", "]", ".", "words", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_decoders.TestForcedDecodingOutputs.test_forced_decoding": [[60, 63], ["range", "test_decoders.TestForcedDecodingOutputs.assert_forced_decoding"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_decoders.TestForcedDecodingOutputs.assert_forced_decoding"], ["", "def", "test_forced_decoding", "(", "self", ")", ":", "\n", "    ", "for", "i", "in", "range", "(", "1", ")", ":", "\n", "      ", "self", ".", "assert_forced_decoding", "(", "sent_id", "=", "i", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_decoders.TestForcedDecodingLoss.setUp": [[66, 90], ["xnmt.events.clear", "xnmt.param_collections.ParamManager.init_param_col", "xnmt.vocabs.Vocab", "xnmt.vocabs.Vocab", "xnmt.models.translators.DefaultTranslator", "xnmt.event_trigger.set_train", "list", "list", "test_decoders.TestForcedDecodingLoss.model.src_reader.read_sents", "test_decoders.TestForcedDecodingLoss.model.trg_reader.read_sents", "xnmt.input_readers.PlainTextReader", "xnmt.input_readers.PlainTextReader", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.transducers.recurrent.BiLSTMSeqTransducer", "xnmt.modelparts.attenders.MlpAttender", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.modelparts.decoders.AutoRegressiveDecoder", "xnmt.transducers.recurrent.UniLSTMSeqTransducer", "xnmt.modelparts.transforms.NonLinear", "xnmt.modelparts.scorers.Softmax", "xnmt.modelparts.bridges.CopyBridge"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.clear", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.init_param_col", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.set_train", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.read_sents", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.read_sents"], ["  ", "def", "setUp", "(", "self", ")", ":", "\n", "    ", "layer_dim", "=", "512", "\n", "events", ".", "clear", "(", ")", "\n", "ParamManager", ".", "init_param_col", "(", ")", "\n", "src_vocab", "=", "Vocab", "(", "vocab_file", "=", "\"examples/data/head.ja.vocab\"", ")", "\n", "trg_vocab", "=", "Vocab", "(", "vocab_file", "=", "\"examples/data/head.en.vocab\"", ")", "\n", "self", ".", "model", "=", "DefaultTranslator", "(", "\n", "src_reader", "=", "PlainTextReader", "(", "vocab", "=", "src_vocab", ")", ",", "\n", "trg_reader", "=", "PlainTextReader", "(", "vocab", "=", "trg_vocab", ")", ",", "\n", "src_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "encoder", "=", "BiLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ")", ",", "\n", "attender", "=", "MlpAttender", "(", "input_dim", "=", "layer_dim", ",", "state_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ")", ",", "\n", "trg_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "decoder", "=", "AutoRegressiveDecoder", "(", "input_dim", "=", "layer_dim", ",", "\n", "trg_embed_dim", "=", "layer_dim", ",", "\n", "rnn", "=", "UniLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ",", "decoder_input_dim", "=", "layer_dim", ",", "yaml_path", "=", "\"model.decoder.rnn\"", ")", ",", "\n", "transform", "=", "NonLinear", "(", "input_dim", "=", "layer_dim", "*", "2", ",", "output_dim", "=", "layer_dim", ")", ",", "\n", "scorer", "=", "Softmax", "(", "input_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "bridge", "=", "CopyBridge", "(", "dec_dim", "=", "layer_dim", ",", "dec_layers", "=", "1", ")", ")", ",", "\n", ")", "\n", "event_trigger", ".", "set_train", "(", "False", ")", "\n", "\n", "self", ".", "src_data", "=", "list", "(", "self", ".", "model", ".", "src_reader", ".", "read_sents", "(", "\"examples/data/head.ja\"", ")", ")", "\n", "self", ".", "trg_data", "=", "list", "(", "self", ".", "model", ".", "trg_reader", ".", "read_sents", "(", "\"examples/data/head.en\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_decoders.TestForcedDecodingLoss.test_single": [[91, 100], ["dynet.renew_cg", "test_decoders.TestForcedDecodingLoss.model.calc_nll().value", "dynet.renew_cg", "test_decoders.TestForcedDecodingLoss.model.generate", "test_decoders.TestForcedDecodingLoss.assertAlmostEqual", "xnmt.batchers.mark_as_batch", "xnmt.search_strategies.GreedySearch", "test_decoders.TestForcedDecodingLoss.model.calc_nll", "xnmt.batchers.mark_as_batch"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.generate", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.calc_nll", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch"], ["", "def", "test_single", "(", "self", ")", ":", "\n", "    ", "dy", ".", "renew_cg", "(", ")", "\n", "train_loss", "=", "self", ".", "model", ".", "calc_nll", "(", "src", "=", "self", ".", "src_data", "[", "0", "]", ",", "\n", "trg", "=", "self", ".", "trg_data", "[", "0", "]", ")", ".", "value", "(", ")", "\n", "dy", ".", "renew_cg", "(", ")", "\n", "outputs", "=", "self", ".", "model", ".", "generate", "(", "batchers", ".", "mark_as_batch", "(", "[", "self", ".", "src_data", "[", "0", "]", "]", ")", ",", "GreedySearch", "(", ")", ",", "\n", "forced_trg_ids", "=", "batchers", ".", "mark_as_batch", "(", "[", "self", ".", "trg_data", "[", "0", "]", "]", ")", ")", "\n", "output_score", "=", "outputs", "[", "0", "]", ".", "score", "\n", "self", ".", "assertAlmostEqual", "(", "-", "output_score", ",", "train_loss", ",", "places", "=", "5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_decoders.TestFreeDecodingLoss.setUp": [[103, 127], ["xnmt.events.clear", "xnmt.param_collections.ParamManager.init_param_col", "xnmt.vocabs.Vocab", "xnmt.vocabs.Vocab", "xnmt.models.translators.DefaultTranslator", "xnmt.event_trigger.set_train", "list", "list", "test_decoders.TestFreeDecodingLoss.model.src_reader.read_sents", "test_decoders.TestFreeDecodingLoss.model.trg_reader.read_sents", "xnmt.input_readers.PlainTextReader", "xnmt.input_readers.PlainTextReader", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.transducers.recurrent.BiLSTMSeqTransducer", "xnmt.modelparts.attenders.MlpAttender", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.modelparts.decoders.AutoRegressiveDecoder", "xnmt.transducers.recurrent.UniLSTMSeqTransducer", "xnmt.modelparts.transforms.NonLinear", "xnmt.modelparts.scorers.Softmax", "xnmt.modelparts.bridges.CopyBridge"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.clear", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.init_param_col", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.set_train", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.read_sents", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.read_sents"], ["  ", "def", "setUp", "(", "self", ")", ":", "\n", "    ", "layer_dim", "=", "512", "\n", "events", ".", "clear", "(", ")", "\n", "ParamManager", ".", "init_param_col", "(", ")", "\n", "src_vocab", "=", "Vocab", "(", "vocab_file", "=", "\"examples/data/head.ja.vocab\"", ")", "\n", "trg_vocab", "=", "Vocab", "(", "vocab_file", "=", "\"examples/data/head.en.vocab\"", ")", "\n", "self", ".", "model", "=", "DefaultTranslator", "(", "\n", "src_reader", "=", "PlainTextReader", "(", "vocab", "=", "src_vocab", ")", ",", "\n", "trg_reader", "=", "PlainTextReader", "(", "vocab", "=", "trg_vocab", ")", ",", "\n", "src_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "encoder", "=", "BiLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ")", ",", "\n", "attender", "=", "MlpAttender", "(", "input_dim", "=", "layer_dim", ",", "state_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ")", ",", "\n", "trg_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "decoder", "=", "AutoRegressiveDecoder", "(", "input_dim", "=", "layer_dim", ",", "\n", "trg_embed_dim", "=", "layer_dim", ",", "\n", "rnn", "=", "UniLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ",", "decoder_input_dim", "=", "layer_dim", ",", "yaml_path", "=", "\"model.decoder.rnn\"", ")", ",", "\n", "transform", "=", "NonLinear", "(", "input_dim", "=", "layer_dim", "*", "2", ",", "output_dim", "=", "layer_dim", ")", ",", "\n", "scorer", "=", "Softmax", "(", "input_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "bridge", "=", "CopyBridge", "(", "dec_dim", "=", "layer_dim", ",", "dec_layers", "=", "1", ")", ")", ",", "\n", ")", "\n", "event_trigger", ".", "set_train", "(", "False", ")", "\n", "\n", "self", ".", "src_data", "=", "list", "(", "self", ".", "model", ".", "src_reader", ".", "read_sents", "(", "\"examples/data/head.ja\"", ")", ")", "\n", "self", ".", "trg_data", "=", "list", "(", "self", ".", "model", ".", "trg_reader", ".", "read_sents", "(", "\"examples/data/head.en\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_decoders.TestFreeDecodingLoss.test_single": [[128, 139], ["dynet.renew_cg", "test_decoders.TestFreeDecodingLoss.model.generate", "dynet.renew_cg", "test_decoders.TestFreeDecodingLoss.model.calc_nll().value", "test_decoders.TestFreeDecodingLoss.assertAlmostEqual", "xnmt.batchers.mark_as_batch", "xnmt.search_strategies.GreedySearch", "xnmt.batchers.mark_as_batch", "test_decoders.TestFreeDecodingLoss.model.calc_nll"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.generate", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.calc_nll"], ["", "def", "test_single", "(", "self", ")", ":", "\n", "    ", "dy", ".", "renew_cg", "(", ")", "\n", "outputs", "=", "self", ".", "model", ".", "generate", "(", "batchers", ".", "mark_as_batch", "(", "[", "self", ".", "src_data", "[", "0", "]", "]", ")", ",", "GreedySearch", "(", ")", ",", "\n", "forced_trg_ids", "=", "batchers", ".", "mark_as_batch", "(", "[", "self", ".", "trg_data", "[", "0", "]", "]", ")", ")", "\n", "output_score", "=", "outputs", "[", "0", "]", ".", "score", "\n", "\n", "dy", ".", "renew_cg", "(", ")", "\n", "train_loss", "=", "self", ".", "model", ".", "calc_nll", "(", "src", "=", "self", ".", "src_data", "[", "0", "]", ",", "\n", "trg", "=", "outputs", "[", "0", "]", ")", ".", "value", "(", ")", "\n", "\n", "self", ".", "assertAlmostEqual", "(", "-", "output_score", ",", "train_loss", ",", "places", "=", "5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_persistence.TestPath.setUp": [[12, 14], ["None"], "methods", ["None"], ["  ", "def", "setUp", "(", "self", ")", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_persistence.TestPath.test_init": [[15, 23], ["test_persistence.TestPath.assertTrue", "test_persistence.TestPath.assertTrue", "test_persistence.TestPath.assertTrue", "test_persistence.TestPath.assertTrue", "test_persistence.TestPath.assertRaises", "xnmt.persistence.Path", "xnmt.persistence.Path", "type", "type", "type", "type", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path"], "methods", ["None"], ["", "def", "test_init", "(", "self", ")", ":", "\n", "    ", "self", ".", "assertTrue", "(", "type", "(", "persistence", ".", "Path", "(", "\"\"", ")", ")", "==", "persistence", ".", "Path", ")", "\n", "self", ".", "assertTrue", "(", "type", "(", "persistence", ".", "Path", "(", "\"..\"", ")", ")", "==", "persistence", ".", "Path", ")", "\n", "self", ".", "assertTrue", "(", "type", "(", "persistence", ".", "Path", "(", "\".2\"", ")", ")", "==", "persistence", ".", "Path", ")", "\n", "self", ".", "assertTrue", "(", "type", "(", "persistence", ".", "Path", "(", "\"one.2\"", ")", ")", "==", "persistence", ".", "Path", ")", "\n", "with", "self", ".", "assertRaises", "(", "ValueError", ")", ":", "\n", "      ", "persistence", ".", "Path", "(", "\".one.\"", ")", "\n", "persistence", ".", "Path", "(", "\"one..2\"", ")", "\n", "", "", "def", "test_str", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_persistence.TestPath.test_str": [[23, 26], ["test_persistence.TestPath.assertEqual", "test_persistence.TestPath.assertEqual", "str", "str", "xnmt.persistence.Path", "xnmt.persistence.Path"], "methods", ["None"], ["", "", "def", "test_str", "(", "self", ")", ":", "\n", "    ", "self", ".", "assertEqual", "(", "str", "(", "persistence", ".", "Path", "(", "\"one.2\"", ")", ")", ",", "\"one.2\"", ")", "\n", "self", ".", "assertEqual", "(", "str", "(", "persistence", ".", "Path", "(", "\"\"", ")", ")", ",", "\"\"", ")", "\n", "", "def", "test_set", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_persistence.TestPath.test_set": [[26, 30], ["test_persistence.TestPath.assertIn", "test_persistence.TestPath.assertEqual", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "len"], "methods", ["None"], ["", "def", "test_set", "(", "self", ")", ":", "\n", "    ", "s", "=", "{", "persistence", ".", "Path", "(", "\"one.2\"", ")", ",", "persistence", ".", "Path", "(", "\"one.1.3\"", ")", ",", "persistence", ".", "Path", "(", "\"one.1.3\"", ")", "}", "\n", "self", ".", "assertIn", "(", "persistence", ".", "Path", "(", "\"one.2\"", ")", ",", "s", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "s", ")", ",", "2", ")", "\n", "", "def", "test_append", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_persistence.TestPath.test_append": [[30, 41], ["test_persistence.TestPath.assertEqual", "test_persistence.TestPath.assertEqual", "test_persistence.TestPath.assertEqual", "test_persistence.TestPath.assertEqual", "str", "str", "str", "str", "test_persistence.TestPath.assertRaises", "xnmt.persistence.Path().append", "test_persistence.TestPath.assertRaises", "xnmt.persistence.Path().append", "test_persistence.TestPath.assertRaises", "xnmt.persistence.Path().append", "xnmt.persistence.Path().append", "xnmt.persistence.Path().append", "xnmt.persistence.Path().append", "xnmt.persistence.Path().append", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "def", "test_append", "(", "self", ")", ":", "\n", "    ", "self", ".", "assertEqual", "(", "str", "(", "persistence", ".", "Path", "(", "\"one\"", ")", ".", "append", "(", "\"2\"", ")", ")", ",", "\"one.2\"", ")", "\n", "self", ".", "assertEqual", "(", "str", "(", "persistence", ".", "Path", "(", "\"\"", ")", ".", "append", "(", "\"2\"", ")", ")", ",", "\"2\"", ")", "\n", "self", ".", "assertEqual", "(", "str", "(", "persistence", ".", "Path", "(", "\".\"", ")", ".", "append", "(", "\"2\"", ")", ")", ",", "\".2\"", ")", "\n", "self", ".", "assertEqual", "(", "str", "(", "persistence", ".", "Path", "(", "\".1.2\"", ")", ".", "append", "(", "\"2\"", ")", ")", ",", "\".1.2.2\"", ")", "\n", "with", "self", ".", "assertRaises", "(", "ValueError", ")", ":", "\n", "      ", "persistence", ".", "Path", "(", "\"one\"", ")", ".", "append", "(", "\"\"", ")", "\n", "", "with", "self", ".", "assertRaises", "(", "ValueError", ")", ":", "\n", "      ", "persistence", ".", "Path", "(", "\"one\"", ")", ".", "append", "(", "\".\"", ")", "\n", "", "with", "self", ".", "assertRaises", "(", "ValueError", ")", ":", "\n", "      ", "persistence", ".", "Path", "(", "\"one\"", ")", ".", "append", "(", "\"two.3\"", ")", "\n", "", "", "def", "test_add_path", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_persistence.TestPath.test_add_path": [[41, 52], ["test_persistence.TestPath.assertEqual", "test_persistence.TestPath.assertEqual", "test_persistence.TestPath.assertEqual", "test_persistence.TestPath.assertEqual", "test_persistence.TestPath.assertEqual", "test_persistence.TestPath.assertEqual", "test_persistence.TestPath.assertEqual", "test_persistence.TestPath.assertEqual", "str", "str", "str", "str", "str", "str", "str", "str", "test_persistence.TestPath.assertRaises", "xnmt.persistence.Path().add_path", "xnmt.persistence.Path().add_path", "xnmt.persistence.Path().add_path", "xnmt.persistence.Path().add_path", "xnmt.persistence.Path().add_path", "xnmt.persistence.Path().add_path", "xnmt.persistence.Path().add_path", "xnmt.persistence.Path().add_path", "xnmt.persistence.Path().add_path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.add_path", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.add_path", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.add_path", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.add_path", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.add_path", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.add_path", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.add_path", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.add_path", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.add_path"], ["", "", "def", "test_add_path", "(", "self", ")", ":", "\n", "    ", "self", ".", "assertEqual", "(", "str", "(", "persistence", ".", "Path", "(", "\"one\"", ")", ".", "add_path", "(", "persistence", ".", "Path", "(", "\"2\"", ")", ")", ")", ",", "\"one.2\"", ")", "\n", "self", ".", "assertEqual", "(", "str", "(", "persistence", ".", "Path", "(", "\"one\"", ")", ".", "add_path", "(", "persistence", ".", "Path", "(", "\"2.3\"", ")", ")", ")", ",", "\"one.2.3\"", ")", "\n", "self", ".", "assertEqual", "(", "str", "(", "persistence", ".", "Path", "(", "\"\"", ")", ".", "add_path", "(", "persistence", ".", "Path", "(", "\"2.3\"", ")", ")", ")", ",", "\"2.3\"", ")", "\n", "self", ".", "assertEqual", "(", "str", "(", "persistence", ".", "Path", "(", "\"one.2\"", ")", ".", "add_path", "(", "persistence", ".", "Path", "(", "\"\"", ")", ")", ")", ",", "\"one.2\"", ")", "\n", "self", ".", "assertEqual", "(", "str", "(", "persistence", ".", "Path", "(", "\"\"", ")", ".", "add_path", "(", "persistence", ".", "Path", "(", "\"\"", ")", ")", ")", ",", "\"\"", ")", "\n", "self", ".", "assertEqual", "(", "str", "(", "persistence", ".", "Path", "(", "\".\"", ")", ".", "add_path", "(", "persistence", ".", "Path", "(", "\"\"", ")", ")", ")", ",", "\".\"", ")", "\n", "self", ".", "assertEqual", "(", "str", "(", "persistence", ".", "Path", "(", "\".\"", ")", ".", "add_path", "(", "persistence", ".", "Path", "(", "\"one.two\"", ")", ")", ")", ",", "\".one.two\"", ")", "\n", "self", ".", "assertEqual", "(", "str", "(", "persistence", ".", "Path", "(", "\".xy\"", ")", ".", "add_path", "(", "persistence", ".", "Path", "(", "\"one.two\"", ")", ")", ")", ",", "\".xy.one.two\"", ")", "\n", "with", "self", ".", "assertRaises", "(", "NotImplementedError", ")", ":", "\n", "      ", "persistence", ".", "Path", "(", "\"one\"", ")", ".", "add_path", "(", "persistence", ".", "Path", "(", "\".2.3\"", ")", ")", "\n", "", "", "def", "test_get_absolute", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_persistence.TestPath.test_get_absolute": [[52, 59], ["test_persistence.TestPath.assertEqual", "test_persistence.TestPath.assertEqual", "test_persistence.TestPath.assertEqual", "test_persistence.TestPath.assertEqual", "xnmt.persistence.Path().get_absolute", "xnmt.persistence.Path", "xnmt.persistence.Path().get_absolute", "xnmt.persistence.Path", "xnmt.persistence.Path().get_absolute", "xnmt.persistence.Path", "xnmt.persistence.Path().get_absolute", "xnmt.persistence.Path", "test_persistence.TestPath.assertRaises", "xnmt.persistence.Path().get_absolute", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.get_absolute", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.get_absolute", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.get_absolute", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.get_absolute", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.get_absolute"], ["", "", "def", "test_get_absolute", "(", "self", ")", ":", "\n", "    ", "self", ".", "assertEqual", "(", "persistence", ".", "Path", "(", "\".\"", ")", ".", "get_absolute", "(", "persistence", ".", "Path", "(", "\"1.2\"", ")", ")", ",", "persistence", ".", "Path", "(", "\"1.2\"", ")", ")", "\n", "self", ".", "assertEqual", "(", "persistence", ".", "Path", "(", "\".x.y\"", ")", ".", "get_absolute", "(", "persistence", ".", "Path", "(", "\"1.2\"", ")", ")", ",", "persistence", ".", "Path", "(", "\"1.2.x.y\"", ")", ")", "\n", "self", ".", "assertEqual", "(", "persistence", ".", "Path", "(", "\"..x.y\"", ")", ".", "get_absolute", "(", "persistence", ".", "Path", "(", "\"1.2\"", ")", ")", ",", "persistence", ".", "Path", "(", "\"1.x.y\"", ")", ")", "\n", "self", ".", "assertEqual", "(", "persistence", ".", "Path", "(", "\"...x.y\"", ")", ".", "get_absolute", "(", "persistence", ".", "Path", "(", "\"1.2\"", ")", ")", ",", "persistence", ".", "Path", "(", "\"x.y\"", ")", ")", "\n", "with", "self", ".", "assertRaises", "(", "ValueError", ")", ":", "\n", "      ", "persistence", ".", "Path", "(", "\"....x.y\"", ")", ".", "get_absolute", "(", "persistence", ".", "Path", "(", "\"1.2\"", ")", ")", "\n", "", "", "def", "test_descend_one", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_persistence.TestPath.test_descend_one": [[59, 66], ["test_persistence.TestPath.assertEqual", "test_persistence.TestPath.assertEqual", "str", "str", "test_persistence.TestPath.assertRaises", "xnmt.persistence.Path().descend_one", "test_persistence.TestPath.assertRaises", "xnmt.persistence.Path().descend_one", "xnmt.persistence.Path().descend_one", "xnmt.persistence.Path().descend_one", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.descend_one", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.descend_one", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.descend_one", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.descend_one"], ["", "", "def", "test_descend_one", "(", "self", ")", ":", "\n", "    ", "self", ".", "assertEqual", "(", "str", "(", "persistence", ".", "Path", "(", "\"one.2.3\"", ")", ".", "descend_one", "(", ")", ")", ",", "\"2.3\"", ")", "\n", "self", ".", "assertEqual", "(", "str", "(", "persistence", ".", "Path", "(", "\"3\"", ")", ".", "descend_one", "(", ")", ")", ",", "\"\"", ")", "\n", "with", "self", ".", "assertRaises", "(", "ValueError", ")", ":", "\n", "      ", "persistence", ".", "Path", "(", "\"\"", ")", ".", "descend_one", "(", ")", "\n", "", "with", "self", ".", "assertRaises", "(", "ValueError", ")", ":", "\n", "      ", "persistence", ".", "Path", "(", "\".one.2\"", ")", ".", "descend_one", "(", ")", "\n", "", "", "def", "test_len", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_persistence.TestPath.test_len": [[66, 73], ["test_persistence.TestPath.assertEqual", "test_persistence.TestPath.assertEqual", "test_persistence.TestPath.assertEqual", "len", "len", "len", "test_persistence.TestPath.assertRaises", "len", "len", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path"], "methods", ["None"], ["", "", "def", "test_len", "(", "self", ")", ":", "\n", "    ", "self", ".", "assertEqual", "(", "len", "(", "persistence", ".", "Path", "(", "\"\"", ")", ")", ",", "0", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "persistence", ".", "Path", "(", "\"one\"", ")", ")", ",", "1", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "persistence", ".", "Path", "(", "\"one.2.3\"", ")", ")", ",", "3", ")", "\n", "with", "self", ".", "assertRaises", "(", "ValueError", ")", ":", "\n", "      ", "len", "(", "persistence", ".", "Path", "(", "\".one\"", ")", ")", "\n", "len", "(", "persistence", ".", "Path", "(", "\".\"", ")", ")", "\n", "", "", "def", "test_get_item", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_persistence.TestPath.test_get_item": [[73, 80], ["test_persistence.TestPath.assertEqual", "test_persistence.TestPath.assertEqual", "test_persistence.TestPath.assertEqual", "test_persistence.TestPath.assertEqual", "test_persistence.TestPath.assertRaises", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path"], "methods", ["None"], ["", "", "def", "test_get_item", "(", "self", ")", ":", "\n", "    ", "self", ".", "assertEqual", "(", "persistence", ".", "Path", "(", "\"one\"", ")", "[", "0", "]", ",", "\"one\"", ")", "\n", "self", ".", "assertEqual", "(", "persistence", ".", "Path", "(", "\"one.2.3\"", ")", "[", "0", "]", ",", "\"one\"", ")", "\n", "self", ".", "assertEqual", "(", "persistence", ".", "Path", "(", "\"one.2.3\"", ")", "[", "2", "]", ",", "\"3\"", ")", "\n", "self", ".", "assertEqual", "(", "persistence", ".", "Path", "(", "\"one.2.3\"", ")", "[", "-", "1", "]", ",", "\"3\"", ")", "\n", "with", "self", ".", "assertRaises", "(", "ValueError", ")", ":", "\n", "      ", "persistence", ".", "Path", "(", "\".one.2.3\"", ")", "[", "-", "1", "]", "\n", "", "", "def", "test_get_item_slice", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_persistence.TestPath.test_get_item_slice": [[80, 87], ["test_persistence.TestPath.assertEqual", "test_persistence.TestPath.assertEqual", "test_persistence.TestPath.assertEqual", "test_persistence.TestPath.assertEqual", "str", "str", "str", "str", "test_persistence.TestPath.assertRaises", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path"], "methods", ["None"], ["", "", "def", "test_get_item_slice", "(", "self", ")", ":", "\n", "    ", "self", ".", "assertEqual", "(", "str", "(", "persistence", ".", "Path", "(", "\"one\"", ")", "[", "0", ":", "1", "]", ")", ",", "\"one\"", ")", "\n", "self", ".", "assertEqual", "(", "str", "(", "persistence", ".", "Path", "(", "\"one.2.3\"", ")", "[", "1", ":", "3", "]", ")", ",", "\"2.3\"", ")", "\n", "self", ".", "assertEqual", "(", "str", "(", "persistence", ".", "Path", "(", "\"one.2.3\"", ")", "[", "0", ":", "-", "1", "]", ")", ",", "\"one.2\"", ")", "\n", "self", ".", "assertEqual", "(", "str", "(", "persistence", ".", "Path", "(", "\"one.2.3\"", ")", "[", "-", "1", ":", "]", ")", ",", "\"3\"", ")", "\n", "with", "self", ".", "assertRaises", "(", "ValueError", ")", ":", "\n", "      ", "persistence", ".", "Path", "(", "\".one.2.3\"", ")", "[", "0", ":", "1", ":", "-", "1", "]", "\n", "", "", "def", "test_parent", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_persistence.TestPath.test_parent": [[87, 95], ["test_persistence.TestPath.assertEqual", "test_persistence.TestPath.assertEqual", "test_persistence.TestPath.assertEqual", "xnmt.persistence.Path().parent", "xnmt.persistence.Path", "xnmt.persistence.Path().parent", "xnmt.persistence.Path", "xnmt.persistence.Path().parent", "xnmt.persistence.Path", "test_persistence.TestPath.assertRaises", "xnmt.persistence.Path().parent", "test_persistence.TestPath.assertRaises", "xnmt.persistence.Path().parent", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.parent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.parent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.parent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.parent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.parent"], ["", "", "def", "test_parent", "(", "self", ")", ":", "\n", "    ", "self", ".", "assertEqual", "(", "persistence", ".", "Path", "(", "\"one\"", ")", ".", "parent", "(", ")", ",", "persistence", ".", "Path", "(", "\"\"", ")", ")", "\n", "self", ".", "assertEqual", "(", "persistence", ".", "Path", "(", "\"one.two.three\"", ")", ".", "parent", "(", ")", ",", "persistence", ".", "Path", "(", "\"one.two\"", ")", ")", "\n", "self", ".", "assertEqual", "(", "persistence", ".", "Path", "(", "\".one\"", ")", ".", "parent", "(", ")", ",", "persistence", ".", "Path", "(", "\".\"", ")", ")", "\n", "with", "self", ".", "assertRaises", "(", "ValueError", ")", ":", "\n", "      ", "persistence", ".", "Path", "(", "\".\"", ")", ".", "parent", "(", ")", "\n", "", "with", "self", ".", "assertRaises", "(", "ValueError", ")", ":", "\n", "      ", "persistence", ".", "Path", "(", "\"\"", ")", ".", "parent", "(", ")", "\n", "", "", "def", "test_eq", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_persistence.TestPath.test_eq": [[95, 102], ["test_persistence.TestPath.assertEqual", "test_persistence.TestPath.assertEqual", "test_persistence.TestPath.assertEqual", "test_persistence.TestPath.assertEqual", "test_persistence.TestPath.assertNotEqual", "test_persistence.TestPath.assertNotEqual", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path().parent", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.parent"], ["", "", "def", "test_eq", "(", "self", ")", ":", "\n", "    ", "self", ".", "assertEqual", "(", "persistence", ".", "Path", "(", "\"\"", ")", ",", "persistence", ".", "Path", "(", "\"\"", ")", ")", "\n", "self", ".", "assertEqual", "(", "persistence", ".", "Path", "(", "\"..\"", ")", ",", "persistence", ".", "Path", "(", "\"..\"", ")", ")", "\n", "self", ".", "assertEqual", "(", "persistence", ".", "Path", "(", "\"one.2\"", ")", ",", "persistence", ".", "Path", "(", "\"one.2\"", ")", ")", "\n", "self", ".", "assertEqual", "(", "persistence", ".", "Path", "(", "\"one.2\"", ")", ",", "persistence", ".", "Path", "(", "\"one.2.3\"", ")", ".", "parent", "(", ")", ")", "\n", "self", ".", "assertNotEqual", "(", "persistence", ".", "Path", "(", "\"one.2\"", ")", ",", "persistence", ".", "Path", "(", "\"one.2.3\"", ")", ")", "\n", "self", ".", "assertNotEqual", "(", "persistence", ".", "Path", "(", "\"\"", ")", ",", "persistence", ".", "Path", "(", "\".\"", ")", ")", "\n", "", "def", "test_ancestors", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_persistence.TestPath.test_ancestors": [[102, 106], ["test_persistence.TestPath.assertEqual", "test_persistence.TestPath.assertEqual", "test_persistence.TestPath.assertEqual", "xnmt.persistence.Path().ancestors", "xnmt.persistence.Path().ancestors", "xnmt.persistence.Path().ancestors", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path", "xnmt.persistence.Path"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.ancestors", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.ancestors", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.ancestors"], ["", "def", "test_ancestors", "(", "self", ")", ":", "\n", "    ", "self", ".", "assertEqual", "(", "persistence", ".", "Path", "(", "\"\"", ")", ".", "ancestors", "(", ")", ",", "{", "persistence", ".", "Path", "(", "\"\"", ")", "}", ")", "\n", "self", ".", "assertEqual", "(", "persistence", ".", "Path", "(", "\"a\"", ")", ".", "ancestors", "(", ")", ",", "{", "persistence", ".", "Path", "(", "\"\"", ")", ",", "persistence", ".", "Path", "(", "\"a\"", ")", "}", ")", "\n", "self", ".", "assertEqual", "(", "persistence", ".", "Path", "(", "\"one.two.three\"", ")", ".", "ancestors", "(", ")", ",", "{", "persistence", ".", "Path", "(", "\"\"", ")", ",", "persistence", ".", "Path", "(", "\"one\"", ")", ",", "persistence", ".", "Path", "(", "\"one.two\"", ")", ",", "persistence", ".", "Path", "(", "\"one.two.three\"", ")", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_persistence.DummyClass.__init__": [[109, 114], ["None"], "methods", ["None"], ["@", "persistence", ".", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "arg1", ",", "arg2", "=", "\"{V2}\"", ",", "arg3", "=", "\"{V3}\"", ")", ":", "\n", "    ", "self", ".", "arg1", "=", "arg1", "\n", "self", ".", "arg2", "=", "arg2", "\n", "self", ".", "arg3", "=", "arg3", "\n", "", "", "class", "DummyClass2", "(", "persistence", ".", "Serializable", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_persistence.DummyClass2.__init__": [[116, 119], ["xnmt.persistence.bare"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare"], ["@", "persistence", ".", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "arg1", "=", "persistence", ".", "bare", "(", "DummyClass", ")", ")", ":", "\n", "    ", "self", ".", "arg1", "=", "arg1", "\n", "", "", "class", "DummyClass3", "(", "persistence", ".", "Serializable", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_persistence.DummyClass3.__init__": [[121, 124], ["xnmt.persistence.bare"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare"], ["@", "persistence", ".", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "arg1", "=", "persistence", ".", "bare", "(", "DummyClass2", ")", ")", ":", "\n", "    ", "self", ".", "arg1", "=", "arg1", "\n", "", "", "class", "DummyClassForgotBare", "(", "persistence", ".", "Serializable", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_persistence.DummyClassForgotBare.__init__": [[126, 129], ["test_persistence.DummyClass"], "methods", ["None"], ["@", "persistence", ".", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "arg1", "=", "DummyClass", "(", "\"\"", ")", ")", ":", "\n", "    ", "self", ".", "arg1", "=", "arg1", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_persistence.TestPreloader.setUp": [[131, 135], ["yaml.add_representer", "xnmt.utils.make_parent_dir"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.make_parent_dir"], ["  ", "def", "setUp", "(", "self", ")", ":", "\n", "    ", "yaml", ".", "add_representer", "(", "DummyClass", ",", "xnmt", ".", "init_representer", ")", "\n", "self", ".", "out_dir", "=", "\"test/tmp\"", "\n", "utils", ".", "make_parent_dir", "(", "f\"{self.out_dir}/asdf\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_persistence.TestPreloader.test_experiment_names_from_file": [[136, 146], ["test_persistence.TestPreloader.assertListEqual", "open", "yaml.dump", "xnmt.persistence.YamlPreloader.experiment_names_from_file", "test_persistence.DummyClass", "test_persistence.DummyClass", "test_persistence.DummyClass"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader.experiment_names_from_file"], ["", "def", "test_experiment_names_from_file", "(", "self", ")", ":", "\n", "    ", "with", "open", "(", "f\"{self.out_dir}/tmp.yaml\"", ",", "\"w\"", ")", "as", "f_out", ":", "\n", "      ", "yaml", ".", "dump", "(", "{", "\n", "\"exp1\"", ":", "DummyClass", "(", "\"\"", ")", ",", "\n", "\"exp2\"", ":", "DummyClass", "(", "\"\"", ")", ",", "\n", "\"exp10\"", ":", "DummyClass", "(", "\"\"", ")", "\n", "}", ",", "\n", "f_out", ")", "\n", "", "self", ".", "assertListEqual", "(", "persistence", ".", "YamlPreloader", ".", "experiment_names_from_file", "(", "f\"{self.out_dir}/tmp.yaml\"", ")", ",", "\n", "[", "\"exp1\"", ",", "\"exp10\"", ",", "\"exp2\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_persistence.TestPreloader.test_inconsistent_loadserialized": [[147, 157], ["yaml.load", "open", "yaml.dump", "test_persistence.TestPreloader.assertRaises", "xnmt.persistence.YamlPreloader.preload_obj", "test_persistence.DummyClass"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader.preload_obj"], ["", "def", "test_inconsistent_loadserialized", "(", "self", ")", ":", "\n", "    ", "with", "open", "(", "f\"{self.out_dir}/tmp1.yaml\"", ",", "\"w\"", ")", "as", "f_out", ":", "\n", "      ", "yaml", ".", "dump", "(", "DummyClass", "(", "arg1", "=", "\"v1\"", ")", ",", "f_out", ")", "\n", "", "test_obj", "=", "yaml", ".", "load", "(", "f\"\"\"\n    a: !LoadSerialized\n      filename: {self.out_dir}/tmp1.yaml\n      bad_arg: 1\n    \"\"\"", ")", "\n", "with", "self", ".", "assertRaises", "(", "ValueError", ")", ":", "\n", "      ", "persistence", ".", "YamlPreloader", ".", "preload_obj", "(", "test_obj", ",", "\"SOME_EXP_NAME\"", ",", "\"SOME_EXP_DIR\"", ")", "\n", "", "", "def", "test_inconsistent_loadserialized2", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_persistence.TestPreloader.test_inconsistent_loadserialized2": [[157, 169], ["yaml.load", "open", "yaml.dump", "test_persistence.TestPreloader.assertRaises", "xnmt.persistence.YamlPreloader.preload_obj", "test_persistence.DummyClass"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader.preload_obj"], ["", "", "def", "test_inconsistent_loadserialized2", "(", "self", ")", ":", "\n", "    ", "with", "open", "(", "f\"{self.out_dir}/tmp1.yaml\"", ",", "\"w\"", ")", "as", "f_out", ":", "\n", "      ", "yaml", ".", "dump", "(", "DummyClass", "(", "arg1", "=", "\"v1\"", ")", ",", "f_out", ")", "\n", "", "test_obj", "=", "yaml", ".", "load", "(", "f\"\"\"\n    a: !LoadSerialized\n      filename: {self.out_dir}/tmp1.yaml\n      overwrite:\n      - path: a\n      - val: b\n    \"\"\"", ")", "\n", "with", "self", ".", "assertRaises", "(", "ValueError", ")", ":", "\n", "      ", "persistence", ".", "YamlPreloader", ".", "preload_obj", "(", "test_obj", ",", "\"SOME_EXP_NAME\"", ",", "\"SOME_EXP_DIR\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_persistence.TestPreloader.test_placeholder_loadserialized": [[170, 178], ["yaml.load", "xnmt.persistence.YamlPreloader.preload_obj", "open", "yaml.dump", "test_persistence.DummyClass"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader.preload_obj"], ["", "", "def", "test_placeholder_loadserialized", "(", "self", ")", ":", "\n", "    ", "with", "open", "(", "f\"{self.out_dir}/tmp1.yaml\"", ",", "\"w\"", ")", "as", "f_out", ":", "\n", "      ", "yaml", ".", "dump", "(", "DummyClass", "(", "arg1", "=", "\"v1\"", ")", ",", "f_out", ")", "\n", "", "test_obj", "=", "yaml", ".", "load", "(", "f\"\"\"\n    a: !LoadSerialized\n      filename: '{{EXP_DIR}}/{{EXP}}.yaml'\n    \"\"\"", ")", "\n", "persistence", ".", "YamlPreloader", ".", "preload_obj", "(", "test_obj", ",", "exp_name", "=", "\"tmp1\"", ",", "exp_dir", "=", "self", ".", "out_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_persistence.TestPreloader.test_load_referenced_serialized_top": [[179, 186], ["yaml.load", "xnmt.persistence.YamlPreloader._load_serialized", "test_persistence.TestPreloader.assertIsInstance", "test_persistence.TestPreloader.assertEqual", "open", "yaml.dump", "test_persistence.DummyClass"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader._load_serialized"], ["", "def", "test_load_referenced_serialized_top", "(", "self", ")", ":", "\n", "    ", "with", "open", "(", "f\"{self.out_dir}/tmp1.yaml\"", ",", "\"w\"", ")", "as", "f_out", ":", "\n", "      ", "yaml", ".", "dump", "(", "DummyClass", "(", "arg1", "=", "\"v1\"", ")", ",", "f_out", ")", "\n", "", "test_obj", "=", "yaml", ".", "load", "(", "f\"!LoadSerialized {{ filename: {self.out_dir}/tmp1.yaml }}\"", ")", "\n", "loaded_obj", "=", "persistence", ".", "YamlPreloader", ".", "_load_serialized", "(", "test_obj", ")", "\n", "self", ".", "assertIsInstance", "(", "loaded_obj", ",", "DummyClass", ")", "\n", "self", ".", "assertEqual", "(", "loaded_obj", ".", "arg1", ",", "\"v1\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_persistence.TestPreloader.test_load_referenced_serialized_nested": [[187, 202], ["yaml.load", "xnmt.persistence.YamlPreloader._load_serialized", "test_persistence.TestPreloader.assertIsInstance", "test_persistence.TestPreloader.assertIsInstance", "open", "yaml.dump", "test_persistence.DummyClass"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader._load_serialized"], ["", "def", "test_load_referenced_serialized_nested", "(", "self", ")", ":", "\n", "    ", "with", "open", "(", "f\"{self.out_dir}/tmp1.yaml\"", ",", "\"w\"", ")", "as", "f_out", ":", "\n", "      ", "yaml", ".", "dump", "(", "DummyClass", "(", "arg1", "=", "\"v1\"", ")", ",", "f_out", ")", "\n", "", "test_obj", "=", "yaml", ".", "load", "(", "f\"\"\"\n    a: 1\n    b: !LoadSerialized\n      filename: {self.out_dir}/tmp1.yaml\n      overwrite:\n      - path: arg1\n        val: !LoadSerialized\n              filename: {self.out_dir}/tmp1.yaml\n    \"\"\"", ")", "\n", "loaded_obj", "=", "persistence", ".", "YamlPreloader", ".", "_load_serialized", "(", "test_obj", ")", "\n", "self", ".", "assertIsInstance", "(", "loaded_obj", "[", "\"b\"", "]", ",", "DummyClass", ")", "\n", "self", ".", "assertIsInstance", "(", "loaded_obj", "[", "\"b\"", "]", ".", "arg1", ",", "DummyClass", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_persistence.TestPreloader.test_resolve_kwargs": [[203, 215], ["yaml.load", "xnmt.persistence.YamlPreloader._resolve_kwargs", "test_persistence.TestPreloader.assertFalse", "test_persistence.TestPreloader.assertFalse", "test_persistence.TestPreloader.assertEqual", "test_persistence.TestPreloader.assertEqual", "hasattr", "hasattr", "getattr", "getattr"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader._resolve_kwargs"], ["", "def", "test_resolve_kwargs", "(", "self", ")", ":", "\n", "    ", "test_obj", "=", "yaml", ".", "load", "(", "\"\"\"\n    !DummyClass\n      kwargs:\n        arg1: 1\n        other_arg: 2\n    \"\"\"", ")", "\n", "persistence", ".", "YamlPreloader", ".", "_resolve_kwargs", "(", "test_obj", ")", "\n", "self", ".", "assertFalse", "(", "hasattr", "(", "test_obj", ",", "\"kwargs\"", ")", ")", "\n", "self", ".", "assertFalse", "(", "hasattr", "(", "test_obj", ",", "\"arg2\"", ")", ")", "\n", "self", ".", "assertEqual", "(", "getattr", "(", "test_obj", ",", "\"arg1\"", ",", "None", ")", ",", "1", ")", "\n", "self", ".", "assertEqual", "(", "getattr", "(", "test_obj", ",", "\"other_arg\"", ",", "None", ")", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_persistence.TestPreloader.test_resolve_bare_default_args": [[216, 226], ["yaml.load", "xnmt.persistence.YamlPreloader._resolve_bare_default_args", "test_persistence.TestPreloader.assertIsInstance", "test_persistence.TestPreloader.assertIsInstance", "test_persistence.TestPreloader.assertIsInstance"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader._resolve_bare_default_args"], ["", "def", "test_resolve_bare_default_args", "(", "self", ")", ":", "\n", "    ", "test_obj", "=", "yaml", ".", "load", "(", "\"\"\"\n                         a: !DummyClass\n                           arg1: !DummyClass2 {}\n                         b: !DummyClass3 {}\n                         \"\"\"", ")", "\n", "persistence", ".", "YamlPreloader", ".", "_resolve_bare_default_args", "(", "test_obj", ")", "\n", "self", ".", "assertIsInstance", "(", "test_obj", "[", "\"a\"", "]", ".", "arg1", ".", "arg1", ",", "DummyClass", ")", "\n", "self", ".", "assertIsInstance", "(", "test_obj", "[", "\"b\"", "]", ".", "arg1", ",", "DummyClass2", ")", "\n", "self", ".", "assertIsInstance", "(", "test_obj", "[", "\"b\"", "]", ".", "arg1", ".", "arg1", ",", "DummyClass", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_persistence.TestPreloader.test_resolve_bare_default_args_illegal": [[227, 233], ["yaml.load", "test_persistence.TestPreloader.assertRaises", "xnmt.persistence.YamlPreloader._resolve_bare_default_args"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader._resolve_bare_default_args"], ["", "def", "test_resolve_bare_default_args_illegal", "(", "self", ")", ":", "\n", "    ", "test_obj", "=", "yaml", ".", "load", "(", "\"\"\"\n                         a: !DummyClassForgotBare {}\n                         \"\"\"", ")", "\n", "with", "self", ".", "assertRaises", "(", "ValueError", ")", ":", "\n", "      ", "persistence", ".", "YamlPreloader", ".", "_resolve_bare_default_args", "(", "test_obj", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_persistence.TestPreloader.test_format_strings": [[234, 256], ["yaml.load", "xnmt.persistence.YamlPreloader._format_strings", "test_persistence.TestPreloader.assertEqual", "test_persistence.TestPreloader.assertEqual", "test_persistence.TestPreloader.assertEqual", "test_persistence.TestPreloader.assertFalse", "test_persistence.TestPreloader.assertEqual", "test_persistence.TestPreloader.assertEqual", "test_persistence.TestPreloader.assertEqual", "test_persistence.TestPreloader.assertFalse", "test_persistence.TestPreloader.assertEqual", "test_persistence.TestPreloader.assertListEqual", "hasattr", "hasattr"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader._format_strings"], ["", "", "def", "test_format_strings", "(", "self", ")", ":", "\n", "    ", "test_obj", "=", "yaml", ".", "load", "(", "\"\"\"\n                         a: !DummyClass\n                           arg1: '{V1}'\n                           other_arg: 2\n                         b: !DummyClass\n                           arg1: 1\n                           other_arg: '{V2}'\n                         c: '{V1}/bla'\n                         d: ['bla', 'bla.{V2}']\n                         \"\"\"", ")", "\n", "persistence", ".", "YamlPreloader", ".", "_format_strings", "(", "test_obj", ",", "{", "\"V1\"", ":", "\"val1\"", ",", "\"V2\"", ":", "\"val2\"", "}", ")", "\n", "self", ".", "assertEqual", "(", "test_obj", "[", "\"a\"", "]", ".", "arg1", ",", "\"val1\"", ")", "\n", "self", ".", "assertEqual", "(", "test_obj", "[", "\"a\"", "]", ".", "other_arg", ",", "2", ")", "\n", "self", ".", "assertEqual", "(", "test_obj", "[", "\"a\"", "]", ".", "arg2", ",", "\"val2\"", ")", "\n", "self", ".", "assertFalse", "(", "hasattr", "(", "test_obj", "[", "\"a\"", "]", ",", "\"arg3\"", ")", ")", "\n", "self", ".", "assertEqual", "(", "test_obj", "[", "\"b\"", "]", ".", "arg1", ",", "1", ")", "\n", "self", ".", "assertEqual", "(", "test_obj", "[", "\"b\"", "]", ".", "other_arg", ",", "'{V2}'", ")", "\n", "self", ".", "assertEqual", "(", "test_obj", "[", "\"b\"", "]", ".", "arg2", ",", "\"val2\"", ")", "\n", "self", ".", "assertFalse", "(", "hasattr", "(", "test_obj", "[", "\"b\"", "]", ",", "\"arg3\"", ")", ")", "\n", "self", ".", "assertEqual", "(", "test_obj", "[", "\"c\"", "]", ",", "\"val1/bla\"", ")", "\n", "self", ".", "assertListEqual", "(", "test_obj", "[", "\"d\"", "]", ",", "[", "\"bla\"", ",", "\"bla.val2\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_persistence.DummyArgClass.__init__": [[259, 262], ["None"], "methods", ["None"], ["@", "persistence", ".", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "arg1", ",", "arg2", ")", ":", "\n", "    ", "pass", "# arg1 and arg2 are purposefully not kept", "\n", "", "", "class", "DummyArgClass2", "(", "persistence", ".", "Serializable", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_persistence.DummyArgClass2.__init__": [[264, 267], ["None"], "methods", ["None"], ["@", "persistence", ".", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "v", ")", ":", "\n", "    ", "self", ".", "v", "=", "v", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_persistence.TestSaving.setUp": [[269, 279], ["xnmt.events.clear", "yaml.add_representer", "yaml.add_representer", "os.path.join", "xnmt.utils.make_parent_dir", "os.path.join", "xnmt.param_collections.ParamManager.init_param_col", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.clear", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.make_parent_dir", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.init_param_col"], ["  ", "def", "setUp", "(", "self", ")", ":", "\n", "    ", "events", ".", "clear", "(", ")", "\n", "xnmt", ".", "resolved_serialize_params", "=", "{", "}", "\n", "yaml", ".", "add_representer", "(", "DummyArgClass", ",", "xnmt", ".", "init_representer", ")", "\n", "yaml", ".", "add_representer", "(", "DummyArgClass2", ",", "xnmt", ".", "init_representer", ")", "\n", "self", ".", "out_dir", "=", "os", ".", "path", ".", "join", "(", "\"test\"", ",", "\"tmp\"", ")", "\n", "utils", ".", "make_parent_dir", "(", "os", ".", "path", ".", "join", "(", "self", ".", "out_dir", ",", "\"asdf\"", ")", ")", "\n", "self", ".", "model_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "out_dir", ",", "\"saved.mod\"", ")", "\n", "param_collections", ".", "ParamManager", ".", "init_param_col", "(", ")", "\n", "param_collections", ".", "ParamManager", ".", "param_col", ".", "model_file", "=", "self", ".", "model_file", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_persistence.TestSaving.test_shallow": [[280, 291], ["yaml.load", "xnmt.persistence.YamlPreloader.preload_obj", "xnmt.persistence.initialize_if_needed", "xnmt.persistence.save_to_file"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader.preload_obj", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.initialize_if_needed", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.save_to_file"], ["", "def", "test_shallow", "(", "self", ")", ":", "\n", "    ", "test_obj", "=", "yaml", ".", "load", "(", "\"\"\"\n                         a: !DummyArgClass\n                           arg1: !DummyArgClass2\n                             _xnmt_id: id1\n                             v: some_val\n                           arg2: !Ref { name: id1 }\n                         \"\"\"", ")", "\n", "preloaded", "=", "persistence", ".", "YamlPreloader", ".", "preload_obj", "(", "root", "=", "test_obj", ",", "exp_name", "=", "\"exp1\"", ",", "exp_dir", "=", "self", ".", "out_dir", ")", "\n", "initalized", "=", "persistence", ".", "initialize_if_needed", "(", "preloaded", ")", "\n", "persistence", ".", "save_to_file", "(", "self", ".", "model_file", ",", "initalized", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_persistence.TestSaving.test_mid": [[292, 305], ["yaml.load", "xnmt.persistence.YamlPreloader.preload_obj", "xnmt.persistence.initialize_if_needed", "xnmt.persistence.save_to_file"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader.preload_obj", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.initialize_if_needed", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.save_to_file"], ["", "def", "test_mid", "(", "self", ")", ":", "\n", "    ", "test_obj", "=", "yaml", ".", "load", "(", "\"\"\"\n                         a: !DummyArgClass\n                           arg1: !DummyArgClass2\n                             v: !DummyArgClass2\n                               _xnmt_id: id1\n                               v: some_val\n                           arg2: !DummyArgClass2\n                             v: !Ref { name: id1 }\n                         \"\"\"", ")", "\n", "preloaded", "=", "persistence", ".", "YamlPreloader", ".", "preload_obj", "(", "root", "=", "test_obj", ",", "exp_name", "=", "\"exp1\"", ",", "exp_dir", "=", "self", ".", "out_dir", ")", "\n", "initalized", "=", "persistence", ".", "initialize_if_needed", "(", "preloaded", ")", "\n", "persistence", ".", "save_to_file", "(", "self", ".", "model_file", ",", "initalized", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_persistence.TestSaving.test_deep": [[306, 321], ["yaml.load", "xnmt.persistence.YamlPreloader.preload_obj", "xnmt.persistence.initialize_if_needed", "xnmt.persistence.save_to_file"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader.preload_obj", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.initialize_if_needed", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.save_to_file"], ["", "def", "test_deep", "(", "self", ")", ":", "\n", "    ", "test_obj", "=", "yaml", ".", "load", "(", "\"\"\"\n                         a: !DummyArgClass\n                           arg1: !DummyArgClass2\n                             v: !DummyArgClass2\n                               v: !DummyArgClass2\n                                 _xnmt_id: id1\n                                 v: some_val\n                           arg2: !DummyArgClass2\n                             v: !DummyArgClass2\n                               v: !Ref { name: id1 }\n                         \"\"\"", ")", "\n", "preloaded", "=", "persistence", ".", "YamlPreloader", ".", "preload_obj", "(", "root", "=", "test_obj", ",", "exp_name", "=", "\"exp1\"", ",", "exp_dir", "=", "self", ".", "out_dir", ")", "\n", "initalized", "=", "persistence", ".", "initialize_if_needed", "(", "preloaded", ")", "\n", "persistence", ".", "save_to_file", "(", "self", ".", "model_file", ",", "initalized", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_persistence.TestSaving.test_double_ref": [[322, 335], ["yaml.load", "xnmt.persistence.YamlPreloader.preload_obj", "xnmt.persistence.initialize_if_needed", "xnmt.persistence.save_to_file"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader.preload_obj", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.initialize_if_needed", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.save_to_file"], ["", "def", "test_double_ref", "(", "self", ")", ":", "\n", "    ", "test_obj", "=", "yaml", ".", "load", "(", "\"\"\"\n                         a: !DummyArgClass\n                           arg1: !DummyArgClass2\n                             _xnmt_id: id1\n                             v: some_val\n                           arg2:\n                             - !Ref { name: id1 }\n                             - !Ref { name: id1 }\n                         \"\"\"", ")", "\n", "preloaded", "=", "persistence", ".", "YamlPreloader", ".", "preload_obj", "(", "root", "=", "test_obj", ",", "exp_name", "=", "\"exp1\"", ",", "exp_dir", "=", "self", ".", "out_dir", ")", "\n", "initalized", "=", "persistence", ".", "initialize_if_needed", "(", "preloaded", ")", "\n", "persistence", ".", "save_to_file", "(", "self", ".", "model_file", ",", "initalized", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_persistence.TestSaving.tearDown": [[338, 344], ["os.path.isdir", "os.path.join", "shutil.rmtree", "os.path.join"], "methods", ["None"], ["", "def", "tearDown", "(", "self", ")", ":", "\n", "    ", "try", ":", "\n", "      ", "if", "os", ".", "path", ".", "isdir", "(", "os", ".", "path", ".", "join", "(", "\"test\"", ",", "\"tmp\"", ")", ")", ":", "\n", "        ", "shutil", ".", "rmtree", "(", "os", ".", "path", ".", "join", "(", "\"test\"", ",", "\"tmp\"", ")", ")", "\n", "", "", "except", ":", "\n", "      ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_persistence.TestReferences.setUp": [[346, 356], ["xnmt.events.clear", "yaml.add_representer", "yaml.add_representer", "os.path.join", "xnmt.utils.make_parent_dir", "os.path.join", "xnmt.param_collections.ParamManager.init_param_col", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.clear", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.make_parent_dir", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.init_param_col"], ["  ", "def", "setUp", "(", "self", ")", ":", "\n", "    ", "events", ".", "clear", "(", ")", "\n", "xnmt", ".", "resolved_serialize_params", "=", "{", "}", "\n", "yaml", ".", "add_representer", "(", "DummyArgClass", ",", "xnmt", ".", "init_representer", ")", "\n", "yaml", ".", "add_representer", "(", "DummyArgClass2", ",", "xnmt", ".", "init_representer", ")", "\n", "self", ".", "out_dir", "=", "os", ".", "path", ".", "join", "(", "\"test\"", ",", "\"tmp\"", ")", "\n", "utils", ".", "make_parent_dir", "(", "os", ".", "path", ".", "join", "(", "self", ".", "out_dir", ",", "\"asdf\"", ")", ")", "\n", "self", ".", "model_file", "=", "os", ".", "path", ".", "join", "(", "self", ".", "out_dir", ",", "\"saved.mod\"", ")", "\n", "param_collections", ".", "ParamManager", ".", "init_param_col", "(", ")", "\n", "param_collections", ".", "ParamManager", ".", "param_col", ".", "model_file", "=", "self", ".", "model_file", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_persistence.TestReferences.test_simple_reference": [[357, 375], ["yaml.load", "xnmt.persistence.YamlPreloader.preload_obj", "xnmt.persistence.initialize_if_needed", "xnmt.persistence._dump", "yaml.load", "isinstance", "test_persistence.TestReferences.assertIsInstance", "test_persistence.TestReferences.assertIsInstance", "test_persistence.TestReferences.assertIsInstance", "test_persistence.TestReferences.assertIsInstance"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader.preload_obj", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.initialize_if_needed", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._dump"], ["", "def", "test_simple_reference", "(", "self", ")", ":", "\n", "    ", "test_obj", "=", "yaml", ".", "load", "(", "\"\"\"\n                         !DummyArgClass\n                         arg1: !DummyArgClass\n                           arg1: !DummyArgClass2 { v: some_val }\n                           arg2: !DummyArgClass2 { v: some_other_val }\n                         arg2: !Ref { path: arg1 }\n                         \"\"\"", ")", "\n", "preloaded", "=", "persistence", ".", "YamlPreloader", ".", "preload_obj", "(", "root", "=", "test_obj", ",", "exp_name", "=", "\"exp1\"", ",", "exp_dir", "=", "self", ".", "out_dir", ")", "\n", "initialized", "=", "persistence", ".", "initialize_if_needed", "(", "preloaded", ")", "\n", "dump", "=", "persistence", ".", "_dump", "(", "initialized", ")", "\n", "reloaded", "=", "yaml", ".", "load", "(", "dump", ")", "\n", "if", "isinstance", "(", "reloaded", ".", "arg1", ",", "persistence", ".", "Ref", ")", ":", "\n", "      ", "reloaded", ".", "arg1", ",", "reloaded", ".", "arg2", "=", "reloaded", ".", "arg2", ",", "reloaded", ".", "arg1", "\n", "", "self", ".", "assertIsInstance", "(", "reloaded", ".", "arg1", ",", "DummyArgClass", ")", "\n", "self", ".", "assertIsInstance", "(", "reloaded", ".", "arg2", ",", "persistence", ".", "Ref", ")", "\n", "self", ".", "assertIsInstance", "(", "reloaded", ".", "arg1", ".", "arg1", ",", "DummyArgClass2", ")", "\n", "self", ".", "assertIsInstance", "(", "reloaded", ".", "arg1", ".", "arg2", ",", "DummyArgClass2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_input_reader.TestInputReader.test_one_file_multiple_readers": [[8, 17], ["xnmt.vocabs.Vocab", "xnmt.input_readers.CompoundReader", "list", "test_input_reader.TestInputReader.assertEqual", "test_input_reader.TestInputReader.assertIsInstance", "test_input_reader.TestInputReader.assertEqual", "test_input_reader.TestInputReader.assertEqual", "xnmt.input_readers.CompoundReader.read_sents", "len", "len", "xnmt.input_readers.PlainTextReader", "xnmt.input_readers.PlainTextReader"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.read_sents"], ["  ", "def", "test_one_file_multiple_readers", "(", "self", ")", ":", "\n", "    ", "vocab", "=", "vocabs", ".", "Vocab", "(", "vocab_file", "=", "\"examples/data/head.en.vocab\"", ")", "\n", "cr", "=", "input_readers", ".", "CompoundReader", "(", "readers", "=", "[", "input_readers", ".", "PlainTextReader", "(", "vocab", ")", ",", "\n", "input_readers", ".", "PlainTextReader", "(", "read_sent_len", "=", "True", ")", "]", ")", "\n", "en_sents", "=", "list", "(", "cr", ".", "read_sents", "(", "filename", "=", "\"examples/data/head.en\"", ")", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "en_sents", ")", ",", "10", ")", "\n", "self", ".", "assertIsInstance", "(", "en_sents", "[", "0", "]", ",", "sent", ".", "CompoundSentence", ")", "\n", "self", ".", "assertEqual", "(", "\" \"", ".", "join", "(", "[", "vocab", ".", "i2w", "[", "w", "]", "for", "w", "in", "en_sents", "[", "0", "]", ".", "sents", "[", "0", "]", ".", "words", "]", ")", ",", "\"can you do it in one day ? </s>\"", ")", "\n", "self", ".", "assertEqual", "(", "en_sents", "[", "0", "]", ".", "sents", "[", "1", "]", ".", "value", ",", "len", "(", "\"can you do it in one day ?\"", ".", "split", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_input_reader.TestInputReader.test_multiple_files_multiple_readers": [[18, 28], ["xnmt.vocabs.Vocab", "xnmt.vocabs.Vocab", "xnmt.input_readers.CompoundReader", "list", "test_input_reader.TestInputReader.assertEqual", "test_input_reader.TestInputReader.assertIsInstance", "test_input_reader.TestInputReader.assertEqual", "test_input_reader.TestInputReader.assertEqual", "xnmt.input_readers.CompoundReader.read_sents", "len", "xnmt.input_readers.PlainTextReader", "xnmt.input_readers.PlainTextReader"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.read_sents"], ["", "def", "test_multiple_files_multiple_readers", "(", "self", ")", ":", "\n", "    ", "vocab_en", "=", "vocabs", ".", "Vocab", "(", "vocab_file", "=", "\"examples/data/head.en.vocab\"", ")", "\n", "vocab_ja", "=", "vocabs", ".", "Vocab", "(", "vocab_file", "=", "\"examples/data/head.ja.vocab\"", ")", "\n", "cr", "=", "input_readers", ".", "CompoundReader", "(", "readers", "=", "[", "input_readers", ".", "PlainTextReader", "(", "vocab_en", ")", ",", "\n", "input_readers", ".", "PlainTextReader", "(", "vocab_ja", ")", "]", ")", "\n", "mixed_sents", "=", "list", "(", "cr", ".", "read_sents", "(", "filename", "=", "[", "\"examples/data/head.en\"", ",", "\"examples/data/head.ja\"", "]", ")", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "mixed_sents", ")", ",", "10", ")", "\n", "self", ".", "assertIsInstance", "(", "mixed_sents", "[", "0", "]", ",", "sent", ".", "CompoundSentence", ")", "\n", "self", ".", "assertEqual", "(", "\" \"", ".", "join", "(", "[", "vocab_en", ".", "i2w", "[", "w", "]", "for", "w", "in", "mixed_sents", "[", "0", "]", ".", "sents", "[", "0", "]", ".", "words", "]", ")", ",", "\"can you do it in one day ? </s>\"", ")", "\n", "self", ".", "assertEqual", "(", "\" \"", ".", "join", "(", "[", "vocab_ja", ".", "i2w", "[", "w", "]", "for", "w", "in", "mixed_sents", "[", "0", "]", ".", "sents", "[", "1", "]", ".", "words", "]", ")", ",", "\"\u541b \u306f \uff11 \u65e5 \u3067 \u305d\u308c \u304c \u3067\u304d \u307e \u3059 \u304b \u3002 </s>\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_encoders.TestEncoder.setUp": [[24, 34], ["xnmt.events.clear", "xnmt.param_collections.ParamManager.init_param_col", "xnmt.vocabs.Vocab", "xnmt.vocabs.Vocab", "xnmt.input_readers.PlainTextReader", "xnmt.input_readers.PlainTextReader", "list", "list", "test_encoders.TestEncoder.src_reader.read_sents", "test_encoders.TestEncoder.trg_reader.read_sents"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.clear", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.init_param_col", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.read_sents", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.read_sents"], ["  ", "def", "setUp", "(", "self", ")", ":", "\n", "    ", "events", ".", "clear", "(", ")", "\n", "ParamManager", ".", "init_param_col", "(", ")", "\n", "\n", "src_vocab", "=", "Vocab", "(", "vocab_file", "=", "\"examples/data/head.ja.vocab\"", ")", "\n", "trg_vocab", "=", "Vocab", "(", "vocab_file", "=", "\"examples/data/head.en.vocab\"", ")", "\n", "self", ".", "src_reader", "=", "PlainTextReader", "(", "vocab", "=", "src_vocab", ")", "\n", "self", ".", "trg_reader", "=", "PlainTextReader", "(", "vocab", "=", "trg_vocab", ")", "\n", "self", ".", "src_data", "=", "list", "(", "self", ".", "src_reader", ".", "read_sents", "(", "\"examples/data/head.ja\"", ")", ")", "\n", "self", ".", "trg_data", "=", "list", "(", "self", ".", "trg_reader", ".", "read_sents", "(", "\"examples/data/head.en\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_encoders.TestEncoder.assert_in_out_len_equal": [[35, 43], ["dynet.renew_cg", "xnmt.event_trigger.set_train", "xnmt.event_trigger.start_sent", "model.src_embedder.embed_sent", "model.encoder.transduce", "test_encoders.TestEncoder.assertEqual", "len", "len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.set_train", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.start_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.embed_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce"], ["", "def", "assert_in_out_len_equal", "(", "self", ",", "model", ")", ":", "\n", "    ", "dy", ".", "renew_cg", "(", ")", "\n", "event_trigger", ".", "set_train", "(", "True", ")", "\n", "src", "=", "self", ".", "src_data", "[", "0", "]", "\n", "event_trigger", ".", "start_sent", "(", "src", ")", "\n", "embeddings", "=", "model", ".", "src_embedder", ".", "embed_sent", "(", "src", ")", "\n", "encodings", "=", "model", ".", "encoder", ".", "transduce", "(", "embeddings", ")", "\n", "self", ".", "assertEqual", "(", "len", "(", "embeddings", ")", ",", "len", "(", "encodings", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_encoders.TestEncoder.test_bi_lstm_encoder_len": [[44, 61], ["xnmt.models.translators.DefaultTranslator", "test_encoders.TestEncoder.assert_in_out_len_equal", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.transducers.recurrent.BiLSTMSeqTransducer", "xnmt.modelparts.attenders.MlpAttender", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.modelparts.decoders.AutoRegressiveDecoder", "xnmt.transducers.recurrent.UniLSTMSeqTransducer", "xnmt.modelparts.transforms.NonLinear", "xnmt.modelparts.scorers.Softmax", "xnmt.modelparts.bridges.CopyBridge"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_encoders.TestEncoder.assert_in_out_len_equal"], ["", "def", "test_bi_lstm_encoder_len", "(", "self", ")", ":", "\n", "    ", "layer_dim", "=", "512", "\n", "model", "=", "DefaultTranslator", "(", "\n", "src_reader", "=", "self", ".", "src_reader", ",", "\n", "trg_reader", "=", "self", ".", "trg_reader", ",", "\n", "src_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "encoder", "=", "BiLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ",", "layers", "=", "3", ")", ",", "\n", "attender", "=", "MlpAttender", "(", "input_dim", "=", "layer_dim", ",", "state_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ")", ",", "\n", "trg_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "decoder", "=", "AutoRegressiveDecoder", "(", "input_dim", "=", "layer_dim", ",", "\n", "trg_embed_dim", "=", "layer_dim", ",", "\n", "rnn", "=", "UniLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ",", "decoder_input_dim", "=", "layer_dim", ",", "yaml_path", "=", "\"model.decoder.rnn\"", ")", ",", "\n", "transform", "=", "NonLinear", "(", "input_dim", "=", "layer_dim", "*", "2", ",", "output_dim", "=", "layer_dim", ")", ",", "\n", "scorer", "=", "Softmax", "(", "input_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "bridge", "=", "CopyBridge", "(", "dec_dim", "=", "layer_dim", ",", "dec_layers", "=", "1", ")", ")", ",", "\n", ")", "\n", "self", ".", "assert_in_out_len_equal", "(", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_encoders.TestEncoder.test_uni_lstm_encoder_len": [[62, 79], ["xnmt.models.translators.DefaultTranslator", "test_encoders.TestEncoder.assert_in_out_len_equal", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.transducers.recurrent.UniLSTMSeqTransducer", "xnmt.modelparts.attenders.MlpAttender", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.modelparts.decoders.AutoRegressiveDecoder", "xnmt.transducers.recurrent.UniLSTMSeqTransducer", "xnmt.modelparts.transforms.NonLinear", "xnmt.modelparts.scorers.Softmax", "xnmt.modelparts.bridges.CopyBridge"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_encoders.TestEncoder.assert_in_out_len_equal"], ["", "def", "test_uni_lstm_encoder_len", "(", "self", ")", ":", "\n", "    ", "layer_dim", "=", "512", "\n", "model", "=", "DefaultTranslator", "(", "\n", "src_reader", "=", "self", ".", "src_reader", ",", "\n", "trg_reader", "=", "self", ".", "trg_reader", ",", "\n", "src_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "encoder", "=", "UniLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ")", ",", "\n", "attender", "=", "MlpAttender", "(", "input_dim", "=", "layer_dim", ",", "state_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ")", ",", "\n", "trg_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "decoder", "=", "AutoRegressiveDecoder", "(", "input_dim", "=", "layer_dim", ",", "\n", "trg_embed_dim", "=", "layer_dim", ",", "\n", "rnn", "=", "UniLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ",", "decoder_input_dim", "=", "layer_dim", ",", "yaml_path", "=", "\"model.decoder.rnn\"", ")", ",", "\n", "transform", "=", "NonLinear", "(", "input_dim", "=", "layer_dim", "*", "2", ",", "output_dim", "=", "layer_dim", ")", ",", "\n", "scorer", "=", "Softmax", "(", "input_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "bridge", "=", "CopyBridge", "(", "dec_dim", "=", "layer_dim", ",", "dec_layers", "=", "1", ")", ")", ",", "\n", ")", "\n", "self", ".", "assert_in_out_len_equal", "(", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_encoders.TestEncoder.test_py_lstm_encoder_len": [[99, 123], ["xnmt.models.translators.DefaultTranslator", "xnmt.event_trigger.set_train", "range", "dynet.renew_cg", "test_encoders.TestEncoder.src_data[].create_padded_sent", "xnmt.event_trigger.start_sent", "xnmt.models.translators.DefaultTranslator.src_embedder.embed_sent", "xnmt.models.translators.DefaultTranslator.encoder.transduce", "test_encoders.TestEncoder.assertEqual", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.transducers.pyramidal.PyramidalLSTMSeqTransducer", "xnmt.modelparts.attenders.MlpAttender", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.modelparts.decoders.AutoRegressiveDecoder", "int", "len", "math.ceil", "xnmt.transducers.recurrent.UniLSTMSeqTransducer", "xnmt.modelparts.transforms.NonLinear", "xnmt.modelparts.scorers.Softmax", "xnmt.modelparts.bridges.CopyBridge", "test_encoders.TestEncoder.src_data[].sent_len", "len", "float"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.set_train", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.create_padded_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.start_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.embed_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len"], ["", "def", "test_py_lstm_encoder_len", "(", "self", ")", ":", "\n", "    ", "layer_dim", "=", "512", "\n", "model", "=", "DefaultTranslator", "(", "\n", "src_reader", "=", "self", ".", "src_reader", ",", "\n", "trg_reader", "=", "self", ".", "trg_reader", ",", "\n", "src_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "encoder", "=", "PyramidalLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ",", "layers", "=", "3", ")", ",", "\n", "attender", "=", "MlpAttender", "(", "input_dim", "=", "layer_dim", ",", "state_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ")", ",", "\n", "trg_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "decoder", "=", "AutoRegressiveDecoder", "(", "input_dim", "=", "layer_dim", ",", "\n", "trg_embed_dim", "=", "layer_dim", ",", "\n", "rnn", "=", "UniLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ",", "decoder_input_dim", "=", "layer_dim", ",", "yaml_path", "=", "\"model.decoder.rnn\"", ")", ",", "\n", "transform", "=", "NonLinear", "(", "input_dim", "=", "layer_dim", "*", "2", ",", "output_dim", "=", "layer_dim", ")", ",", "\n", "scorer", "=", "Softmax", "(", "input_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "bridge", "=", "CopyBridge", "(", "dec_dim", "=", "layer_dim", ",", "dec_layers", "=", "1", ")", ")", ",", "\n", ")", "\n", "event_trigger", ".", "set_train", "(", "True", ")", "\n", "for", "sent_i", "in", "range", "(", "10", ")", ":", "\n", "      ", "dy", ".", "renew_cg", "(", ")", "\n", "src", "=", "self", ".", "src_data", "[", "sent_i", "]", ".", "create_padded_sent", "(", "4", "-", "(", "self", ".", "src_data", "[", "sent_i", "]", ".", "sent_len", "(", ")", "%", "4", ")", ")", "\n", "event_trigger", ".", "start_sent", "(", "src", ")", "\n", "embeddings", "=", "model", ".", "src_embedder", ".", "embed_sent", "(", "src", ")", "\n", "encodings", "=", "model", ".", "encoder", ".", "transduce", "(", "embeddings", ")", "\n", "self", ".", "assertEqual", "(", "int", "(", "math", ".", "ceil", "(", "len", "(", "embeddings", ")", "/", "float", "(", "4", ")", ")", ")", ",", "len", "(", "encodings", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_encoders.TestEncoder.test_py_lstm_mask": [[124, 156], ["xnmt.models.translators.DefaultTranslator", "xnmt.batchers.TrgBatcher", "xnmt.batchers.TrgBatcher.pack", "xnmt.event_trigger.set_train", "range", "dynet.renew_cg", "xnmt.event_trigger.start_sent", "xnmt.models.translators.DefaultTranslator.src_embedder.embed_sent", "xnmt.models.translators.DefaultTranslator.encoder.transduce", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.transducers.pyramidal.PyramidalLSTMSeqTransducer", "xnmt.modelparts.attenders.MlpAttender", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.modelparts.decoders.AutoRegressiveDecoder", "numpy.testing.assert_array_almost_equal", "xnmt.transducers.recurrent.UniLSTMSeqTransducer", "xnmt.modelparts.transforms.NonLinear", "xnmt.modelparts.scorers.Softmax", "xnmt.modelparts.bridges.CopyBridge"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.SortBatcher.pack", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.set_train", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.start_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.embed_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce"], ["", "", "def", "test_py_lstm_mask", "(", "self", ")", ":", "\n", "    ", "layer_dim", "=", "512", "\n", "model", "=", "DefaultTranslator", "(", "\n", "src_reader", "=", "self", ".", "src_reader", ",", "\n", "trg_reader", "=", "self", ".", "trg_reader", ",", "\n", "src_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "encoder", "=", "PyramidalLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ",", "layers", "=", "1", ")", ",", "\n", "attender", "=", "MlpAttender", "(", "input_dim", "=", "layer_dim", ",", "state_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ")", ",", "\n", "trg_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "decoder", "=", "AutoRegressiveDecoder", "(", "input_dim", "=", "layer_dim", ",", "\n", "trg_embed_dim", "=", "layer_dim", ",", "\n", "rnn", "=", "UniLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ",", "decoder_input_dim", "=", "layer_dim", ",", "yaml_path", "=", "\"model.decoder.rnn\"", ")", ",", "\n", "transform", "=", "NonLinear", "(", "input_dim", "=", "layer_dim", "*", "2", ",", "output_dim", "=", "layer_dim", ")", ",", "\n", "scorer", "=", "Softmax", "(", "input_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "bridge", "=", "CopyBridge", "(", "dec_dim", "=", "layer_dim", ",", "dec_layers", "=", "1", ")", ")", ",", "\n", ")", "\n", "\n", "batcher", "=", "batchers", ".", "TrgBatcher", "(", "batch_size", "=", "3", ")", "\n", "train_src", ",", "_", "=", "batcher", ".", "pack", "(", "self", ".", "src_data", ",", "self", ".", "trg_data", ")", "\n", "\n", "event_trigger", ".", "set_train", "(", "True", ")", "\n", "for", "sent_i", "in", "range", "(", "3", ")", ":", "\n", "      ", "dy", ".", "renew_cg", "(", ")", "\n", "src", "=", "train_src", "[", "sent_i", "]", "\n", "event_trigger", ".", "start_sent", "(", "src", ")", "\n", "embeddings", "=", "model", ".", "src_embedder", ".", "embed_sent", "(", "src", ")", "\n", "encodings", "=", "model", ".", "encoder", ".", "transduce", "(", "embeddings", ")", "\n", "if", "train_src", "[", "sent_i", "]", ".", "mask", "is", "None", ":", "\n", "        ", "assert", "encodings", ".", "mask", "is", "None", "\n", "", "else", ":", "\n", "        ", "np", ".", "testing", ".", "assert_array_almost_equal", "(", "train_src", "[", "sent_i", "]", ".", "mask", ".", "np_arr", ",", "encodings", ".", "mask", ".", "np_arr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_encoders.TestEncoder.test_multihead_attention_encoder_len": [[157, 174], ["xnmt.models.translators.DefaultTranslator", "test_encoders.TestEncoder.assert_in_out_len_equal", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.transducers.self_attention.MultiHeadAttentionSeqTransducer", "xnmt.modelparts.attenders.MlpAttender", "xnmt.modelparts.embedders.SimpleWordEmbedder", "xnmt.modelparts.decoders.AutoRegressiveDecoder", "xnmt.transducers.recurrent.UniLSTMSeqTransducer", "xnmt.modelparts.transforms.NonLinear", "xnmt.modelparts.scorers.Softmax", "xnmt.modelparts.bridges.CopyBridge"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_encoders.TestEncoder.assert_in_out_len_equal"], ["", "", "", "def", "test_multihead_attention_encoder_len", "(", "self", ")", ":", "\n", "    ", "layer_dim", "=", "512", "\n", "model", "=", "DefaultTranslator", "(", "\n", "src_reader", "=", "self", ".", "src_reader", ",", "\n", "trg_reader", "=", "self", ".", "trg_reader", ",", "\n", "src_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "encoder", "=", "MultiHeadAttentionSeqTransducer", "(", "input_dim", "=", "layer_dim", ")", ",", "\n", "attender", "=", "MlpAttender", "(", "input_dim", "=", "layer_dim", ",", "state_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ")", ",", "\n", "trg_embedder", "=", "SimpleWordEmbedder", "(", "emb_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "decoder", "=", "AutoRegressiveDecoder", "(", "input_dim", "=", "layer_dim", ",", "\n", "trg_embed_dim", "=", "layer_dim", ",", "\n", "rnn", "=", "UniLSTMSeqTransducer", "(", "input_dim", "=", "layer_dim", ",", "hidden_dim", "=", "layer_dim", ",", "decoder_input_dim", "=", "layer_dim", ",", "yaml_path", "=", "\"model.decoder.rnn\"", ")", ",", "\n", "transform", "=", "NonLinear", "(", "input_dim", "=", "layer_dim", "*", "2", ",", "output_dim", "=", "layer_dim", ")", ",", "\n", "scorer", "=", "Softmax", "(", "input_dim", "=", "layer_dim", ",", "vocab_size", "=", "100", ")", ",", "\n", "bridge", "=", "CopyBridge", "(", "dec_dim", "=", "layer_dim", ",", "dec_layers", "=", "1", ")", ")", ",", "\n", ")", "\n", "self", ".", "assert_in_out_len_equal", "(", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.analyze_log.plot_ppl_against_epoch": [[17, 40], ["collections.defaultdict", "matplotlib.figure", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.plot", "matplotlib.plot", "matplotlib.legend", "matplotlib.grid", "matplotlib.savefig", "matplotlib.show", "open", "f.readlines", "re.search", "line.rstrip", "re.search.group", "data[].append", "data[].append", "data[].append", "re.search.group", "re.search.group", "re.search.group"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["def", "plot_ppl_against_epoch", "(", "log_file", ")", ":", "\n", "\n", "  ", "data", "=", "defaultdict", "(", "list", ")", "\n", "\n", "with", "open", "(", "log_file", ",", "'r'", ")", "as", "f", ":", "\n", "    ", "for", "line", "in", "f", ".", "readlines", "(", ")", ":", "\n", "      ", "matches", "=", "re", ".", "search", "(", "regex", ",", "line", ".", "rstrip", "(", ")", ")", "\n", "if", "matches", ":", "\n", "        ", "if", "matches", ".", "group", "(", "TRAIN_TEST", ")", "==", "'train'", ":", "\n", "          ", "data", "[", "'epoch'", "]", ".", "append", "(", "matches", ".", "group", "(", "EPOCH", ")", ")", "\n", "data", "[", "'train_ppl'", "]", ".", "append", "(", "matches", ".", "group", "(", "PPL", ")", ")", "\n", "", "else", ":", "\n", "          ", "data", "[", "'test_ppl'", "]", ".", "append", "(", "matches", ".", "group", "(", "PPL", ")", ")", "\n", "\n", "", "", "", "", "plt", ".", "figure", "(", "1", ")", "\n", "plt", ".", "xlabel", "(", "'epoch'", ")", "\n", "plt", ".", "ylabel", "(", "'perplexity'", ")", "\n", "plt", ".", "plot", "(", "data", "[", "'epoch'", "]", ",", "data", "[", "'train_ppl'", "]", ")", "\n", "plt", ".", "plot", "(", "data", "[", "'epoch'", "]", ",", "data", "[", "'test_ppl'", "]", ")", "\n", "plt", ".", "legend", "(", "[", "'train_ppl'", ",", "'test_ppl'", "]", ",", "loc", "=", "'upper right'", ")", "\n", "plt", ".", "grid", "(", "True", ")", "\n", "plt", ".", "savefig", "(", "log_file", "+", "'.png'", ")", "\n", "plt", ".", "show", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_run.TestRunningConfig.setUp": [[10, 12], ["xnmt.events.clear", "xnmt.events.clear", "xnmt.events.clear", "xnmt.events.clear"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.clear", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.clear", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.clear", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.clear"], ["  ", "def", "setUp", "(", "self", ")", ":", "\n", "    ", "xnmt", ".", "events", ".", "clear", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_run.TestRunningConfig.test_assemble": [[13, 15], ["xnmt.main", "xnmt.main"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main"], ["", "def", "test_assemble", "(", "self", ")", ":", "\n", "    ", "run", ".", "main", "(", "[", "\"test/config/assemble.yaml\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_run.TestRunningConfig.test_cascade": [[16, 18], ["xnmt.main", "xnmt.main"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main"], ["", "def", "test_cascade", "(", "self", ")", ":", "\n", "    ", "run", ".", "main", "(", "[", "\"test/config/cascade.yaml\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_run.TestRunningConfig.test_classifier": [[19, 21], ["xnmt.main", "xnmt.main"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main"], ["", "def", "test_classifier", "(", "self", ")", ":", "\n", "    ", "run", ".", "main", "(", "[", "\"test/config/classifier.yaml\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_run.TestRunningConfig.test_component_sharing": [[22, 24], ["xnmt.main", "xnmt.main"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main"], ["", "def", "test_component_sharing", "(", "self", ")", ":", "\n", "    ", "run", ".", "main", "(", "[", "\"test/config/component_sharing.yaml\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_run.TestRunningConfig.test_encoders": [[25, 27], ["xnmt.main", "xnmt.main"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main"], ["", "def", "test_encoders", "(", "self", ")", ":", "\n", "    ", "run", ".", "main", "(", "[", "\"test/config/encoders.yaml\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_run.TestRunningConfig.test_ensembling": [[28, 30], ["xnmt.main", "xnmt.main"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main"], ["", "def", "test_ensembling", "(", "self", ")", ":", "\n", "    ", "run", ".", "main", "(", "[", "\"test/config/ensembling.yaml\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_run.TestRunningConfig.test_forced": [[31, 33], ["xnmt.main", "xnmt.main"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main"], ["", "def", "test_forced", "(", "self", ")", ":", "\n", "    ", "run", ".", "main", "(", "[", "\"test/config/forced.yaml\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_run.TestRunningConfig.test_lm": [[34, 36], ["xnmt.main", "xnmt.main"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main"], ["", "def", "test_lm", "(", "self", ")", ":", "\n", "    ", "run", ".", "main", "(", "[", "\"test/config/lm.yaml\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_run.TestRunningConfig.test_load_model": [[37, 39], ["xnmt.main", "xnmt.main"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main"], ["", "def", "test_load_model", "(", "self", ")", ":", "\n", "    ", "run", ".", "main", "(", "[", "\"test/config/load_model.yaml\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_run.TestRunningConfig.test_multi_task": [[40, 42], ["xnmt.main", "xnmt.main"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main"], ["", "def", "test_multi_task", "(", "self", ")", ":", "\n", "    ", "run", ".", "main", "(", "[", "\"test/config/multi_task.yaml\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_run.TestRunningConfig.test_multi_task_speech": [[43, 45], ["xnmt.main", "xnmt.main"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main"], ["", "def", "test_multi_task_speech", "(", "self", ")", ":", "\n", "    ", "run", ".", "main", "(", "[", "\"test/config/multi_task_speech.yaml\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_run.TestRunningConfig.test_preproc": [[46, 48], ["xnmt.main", "xnmt.main"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main"], ["", "def", "test_preproc", "(", "self", ")", ":", "\n", "    ", "run", ".", "main", "(", "[", "\"test/config/preproc.yaml\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_run.TestRunningConfig.test_pretrained_emb": [[49, 51], ["xnmt.main", "xnmt.main"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main"], ["", "def", "test_pretrained_emb", "(", "self", ")", ":", "\n", "    ", "run", ".", "main", "(", "[", "\"test/config/pretrained_embeddings.yaml\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_run.TestRunningConfig.test_random_search_test_params": [[52, 54], ["xnmt.main", "xnmt.main"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main"], ["", "def", "test_random_search_test_params", "(", "self", ")", ":", "\n", "    ", "run", ".", "main", "(", "[", "\"test/config/random_search_test_params.yaml\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_run.TestRunningConfig.test_random_search_train_params": [[55, 57], ["xnmt.main", "xnmt.main"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main"], ["", "def", "test_random_search_train_params", "(", "self", ")", ":", "\n", "    ", "run", ".", "main", "(", "[", "\"test/config/random_search_train_params.yaml\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_run.TestRunningConfig.test_reload": [[58, 60], ["xnmt.main", "xnmt.main"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main"], ["", "def", "test_reload", "(", "self", ")", ":", "\n", "    ", "run", ".", "main", "(", "[", "\"test/config/reload.yaml\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_run.TestRunningConfig.test_segmenting": [[61, 63], ["xnmt.main", "xnmt.main"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main"], ["", "def", "test_segmenting", "(", "self", ")", ":", "\n", "    ", "run", ".", "main", "(", "[", "\"test/config/seg_report.yaml\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_run.TestRunningConfig.test_reload_exception": [[64, 68], ["test_run.TestRunningConfig.assertEqual", "test_run.TestRunningConfig.assertRaises", "xnmt.main", "xnmt.main", "str"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main"], ["", "def", "test_reload_exception", "(", "self", ")", ":", "\n", "    ", "with", "self", ".", "assertRaises", "(", "ValueError", ")", "as", "context", ":", "\n", "      ", "run", ".", "main", "(", "[", "\"test/config/reload_exception.yaml\"", "]", ")", "\n", "", "self", ".", "assertEqual", "(", "str", "(", "context", ".", "exception", ")", ",", "'VanillaLSTMGates: x_t has inconsistent dimension 20, expecting 40'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_run.TestRunningConfig.test_report": [[69, 71], ["xnmt.main", "xnmt.main"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main"], ["", "def", "test_report", "(", "self", ")", ":", "\n", "    ", "run", ".", "main", "(", "[", "\"test/config/report.yaml\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_run.TestRunningConfig.test_retrieval": [[72, 75], ["xnmt.main", "xnmt.main"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main"], ["", "@", "unittest", ".", "expectedFailure", "# TODO: these tests need to be fixed", "\n", "def", "test_retrieval", "(", "self", ")", ":", "\n", "    ", "run", ".", "main", "(", "[", "\"test/config/retrieval.yaml\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_run.TestRunningConfig.test_score": [[76, 78], ["xnmt.main", "xnmt.main"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main"], ["", "def", "test_score", "(", "self", ")", ":", "\n", "    ", "run", ".", "main", "(", "[", "\"test/config/score.yaml\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_run.TestRunningConfig.test_self_attentional_am": [[79, 81], ["xnmt.main", "xnmt.main"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main"], ["", "def", "test_self_attentional_am", "(", "self", ")", ":", "\n", "    ", "run", ".", "main", "(", "[", "\"test/config/self_attentional_am.yaml\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_run.TestRunningConfig.test_seq_labeler": [[82, 84], ["xnmt.main", "xnmt.main"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main"], ["", "def", "test_seq_labeler", "(", "self", ")", ":", "\n", "    ", "run", ".", "main", "(", "[", "\"test/config/seq_labeler.yaml\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_run.TestRunningConfig.test_speech": [[85, 87], ["xnmt.main", "xnmt.main"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main"], ["", "def", "test_speech", "(", "self", ")", ":", "\n", "    ", "run", ".", "main", "(", "[", "\"test/config/speech.yaml\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_run.TestRunningConfig.test_speech_retrieval": [[88, 91], ["xnmt.main", "xnmt.main"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main"], ["", "@", "unittest", ".", "expectedFailure", "# TODO: these tests need to be fixed", "\n", "def", "test_speech_retrieval", "(", "self", ")", ":", "\n", "    ", "run", ".", "main", "(", "[", "\"test/config/speech_retrieval.yaml\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_run.TestRunningConfig.test_standard": [[92, 94], ["xnmt.main", "xnmt.main"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main"], ["", "def", "test_standard", "(", "self", ")", ":", "\n", "    ", "run", ".", "main", "(", "[", "\"test/config/standard.yaml\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_run.TestRunningConfig.test_transformer": [[95, 98], ["xnmt.main", "xnmt.main"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main"], ["", "@", "unittest", ".", "expectedFailure", "# TODO: these tests need to be fixed", "\n", "def", "test_transformer", "(", "self", ")", ":", "\n", "    ", "run", ".", "main", "(", "[", "\"test/config/transformer.yaml\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_run.TestRunningConfig.test_search_strategy_reinforce": [[99, 102], ["unittest.skipUnless", "xnmt.main", "xnmt.main", "xnmt.utils.has_cython", "xnmt.utils.has_cython"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.utils.has_cython", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.utils.has_cython"], ["", "@", "unittest", ".", "skipUnless", "(", "has_cython", "(", ")", ",", "\"requires cython to run\"", ")", "\n", "def", "test_search_strategy_reinforce", "(", "self", ")", ":", "\n", "    ", "run", ".", "main", "(", "[", "\"test/config/reinforce.yaml\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_run.TestRunningConfig.test_search_strategy_minrisk": [[103, 106], ["unittest.skipUnless", "xnmt.main", "xnmt.main", "xnmt.utils.has_cython", "xnmt.utils.has_cython"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.utils.has_cython", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.utils.has_cython"], ["", "@", "unittest", ".", "skipUnless", "(", "has_cython", "(", ")", ",", "\"requires cython to run\"", ")", "\n", "def", "test_search_strategy_minrisk", "(", "self", ")", ":", "\n", "    ", "run", ".", "main", "(", "[", "\"test/config/minrisk.yaml\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_run.TestRunningConfig.tearDown": [[107, 113], ["os.path.isdir", "shutil.rmtree"], "methods", ["None"], ["", "def", "tearDown", "(", "self", ")", ":", "\n", "    ", "try", ":", "\n", "      ", "if", "os", ".", "path", ".", "isdir", "(", "\"test/tmp\"", ")", ":", "\n", "        ", "shutil", ".", "rmtree", "(", "\"test/tmp\"", ")", "\n", "", "", "except", ":", "\n", "      ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_batchers.TestBatcher.setUp": [[9, 12], ["xnmt.events.clear", "xnmt.param_collections.ParamManager.init_param_col"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.clear", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.init_param_col"], ["  ", "def", "setUp", "(", "self", ")", ":", "\n", "    ", "events", ".", "clear", "(", ")", "\n", "ParamManager", ".", "init_param_col", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_batchers.TestBatcher.test_batch_src": [[13, 22], ["xnmt.batchers.SrcBatcher", "xnmt.batchers.SrcBatcher.pack", "test_batchers.TestBatcher.assertEqual", "test_batchers.TestBatcher.assertEqual", "test_batchers.TestBatcher.assertEqual", "test_batchers.TestBatcher.assertEqual", "xnmt.sent.SimpleSentence", "xnmt.sent.SimpleSentence", "range", "range"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.SortBatcher.pack"], ["", "def", "test_batch_src", "(", "self", ")", ":", "\n", "    ", "src_sents", "=", "[", "sent", ".", "SimpleSentence", "(", "[", "0", "]", "*", "i", ",", "pad_token", "=", "1", ")", "for", "i", "in", "range", "(", "1", ",", "7", ")", "]", "\n", "trg_sents", "=", "[", "sent", ".", "SimpleSentence", "(", "[", "0", "]", "*", "(", "(", "i", "+", "3", ")", "%", "6", "+", "1", ")", ",", "pad_token", "=", "2", ")", "for", "i", "in", "range", "(", "1", ",", "7", ")", "]", "\n", "my_batcher", "=", "batchers", ".", "SrcBatcher", "(", "batch_size", "=", "3", ")", "\n", "src", ",", "trg", "=", "my_batcher", ".", "pack", "(", "src_sents", ",", "trg_sents", ")", "\n", "self", ".", "assertEqual", "(", "[", "[", "0", ",", "0", ",", "1", "]", ",", "[", "0", ",", "1", ",", "1", "]", ",", "[", "0", ",", "0", ",", "0", "]", "]", ",", "[", "x", ".", "words", "for", "x", "in", "src", "[", "0", "]", "]", ")", "\n", "self", ".", "assertEqual", "(", "[", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "2", "]", ",", "[", "0", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", "]", "]", ",", "[", "x", ".", "words", "for", "x", "in", "trg", "[", "0", "]", "]", ")", "\n", "self", ".", "assertEqual", "(", "[", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", ",", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", "]", ",", "[", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", "]", "]", ",", "[", "x", ".", "words", "for", "x", "in", "src", "[", "1", "]", "]", ")", "\n", "self", ".", "assertEqual", "(", "[", "[", "0", ",", "0", ",", "0", ",", "0", "]", ",", "[", "0", ",", "0", ",", "0", ",", "2", "]", ",", "[", "0", ",", "0", ",", "2", ",", "2", "]", "]", ",", "[", "x", ".", "words", "for", "x", "in", "trg", "[", "1", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_batchers.TestBatcher.test_batch_word_src": [[23, 38], ["xnmt.batchers.WordSrcBatcher", "xnmt.batchers.WordSrcBatcher.pack", "test_batchers.TestBatcher.assertEqual", "test_batchers.TestBatcher.assertEqual", "test_batchers.TestBatcher.assertEqual", "test_batchers.TestBatcher.assertEqual", "test_batchers.TestBatcher.assertEqual", "test_batchers.TestBatcher.assertEqual", "test_batchers.TestBatcher.assertEqual", "test_batchers.TestBatcher.assertEqual", "test_batchers.TestBatcher.assertEqual", "test_batchers.TestBatcher.assertEqual", "xnmt.sent.SimpleSentence", "xnmt.sent.SimpleSentence", "range", "range"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.SortBatcher.pack"], ["", "def", "test_batch_word_src", "(", "self", ")", ":", "\n", "    ", "src_sents", "=", "[", "sent", ".", "SimpleSentence", "(", "[", "0", "]", "*", "i", ",", "pad_token", "=", "1", ")", "for", "i", "in", "range", "(", "1", ",", "7", ")", "]", "\n", "trg_sents", "=", "[", "sent", ".", "SimpleSentence", "(", "[", "0", "]", "*", "(", "(", "i", "+", "3", ")", "%", "6", "+", "1", ")", ",", "pad_token", "=", "2", ")", "for", "i", "in", "range", "(", "1", ",", "7", ")", "]", "\n", "my_batcher", "=", "batchers", ".", "WordSrcBatcher", "(", "words_per_batch", "=", "12", ")", "\n", "src", ",", "trg", "=", "my_batcher", ".", "pack", "(", "src_sents", ",", "trg_sents", ")", "\n", "self", ".", "assertEqual", "(", "[", "[", "0", "]", "]", ",", "[", "x", ".", "words", "for", "x", "in", "src", "[", "0", "]", "]", ")", "\n", "self", ".", "assertEqual", "(", "[", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", "]", ",", "[", "x", ".", "words", "for", "x", "in", "trg", "[", "0", "]", "]", ")", "\n", "self", ".", "assertEqual", "(", "[", "[", "0", ",", "0", "]", "]", ",", "[", "x", ".", "words", "for", "x", "in", "src", "[", "1", "]", "]", ")", "\n", "self", ".", "assertEqual", "(", "[", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", "]", ",", "[", "x", ".", "words", "for", "x", "in", "trg", "[", "1", "]", "]", ")", "\n", "self", ".", "assertEqual", "(", "[", "[", "0", ",", "0", ",", "0", ",", "0", "]", ",", "[", "0", ",", "0", ",", "0", ",", "1", "]", "]", ",", "[", "x", ".", "words", "for", "x", "in", "src", "[", "2", "]", "]", ")", "\n", "self", ".", "assertEqual", "(", "[", "[", "0", ",", "0", "]", ",", "[", "0", ",", "2", "]", "]", ",", "[", "x", ".", "words", "for", "x", "in", "trg", "[", "2", "]", "]", ")", "\n", "self", ".", "assertEqual", "(", "[", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", "]", ",", "[", "x", ".", "words", "for", "x", "in", "src", "[", "3", "]", "]", ")", "\n", "self", ".", "assertEqual", "(", "[", "[", "0", ",", "0", ",", "0", "]", "]", ",", "[", "x", ".", "words", "for", "x", "in", "trg", "[", "3", "]", "]", ")", "\n", "self", ".", "assertEqual", "(", "[", "[", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", "]", "]", ",", "[", "x", ".", "words", "for", "x", "in", "src", "[", "4", "]", "]", ")", "\n", "self", ".", "assertEqual", "(", "[", "[", "0", ",", "0", ",", "0", ",", "0", "]", "]", ",", "[", "x", ".", "words", "for", "x", "in", "trg", "[", "4", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_batchers.TestBatcher.test_batch_random_no_ties": [[39, 49], ["xnmt.batchers.SrcBatcher", "xnmt.batchers.SrcBatcher.pack", "trg[].sent_len", "range", "xnmt.sent.SimpleSentence", "xnmt.sent.SimpleSentence", "xnmt.batchers.SrcBatcher.pack", "trg[].sent_len", "test_batchers.TestBatcher.assertTrue", "range", "range"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.SortBatcher.pack", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.SortBatcher.pack", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len"], ["", "def", "test_batch_random_no_ties", "(", "self", ")", ":", "\n", "    ", "src_sents", "=", "[", "sent", ".", "SimpleSentence", "(", "[", "0", "]", "*", "i", ",", "pad_token", "=", "1", ")", "for", "i", "in", "range", "(", "1", ",", "7", ")", "]", "\n", "trg_sents", "=", "[", "sent", ".", "SimpleSentence", "(", "[", "0", "]", "*", "(", "(", "i", "+", "3", ")", "%", "6", "+", "1", ")", ",", "pad_token", "=", "2", ")", "for", "i", "in", "range", "(", "1", ",", "7", ")", "]", "\n", "my_batcher", "=", "batchers", ".", "SrcBatcher", "(", "batch_size", "=", "3", ")", "\n", "_", ",", "trg", "=", "my_batcher", ".", "pack", "(", "src_sents", ",", "trg_sents", ")", "\n", "l0", "=", "trg", "[", "0", "]", ".", "sent_len", "(", ")", "\n", "for", "_", "in", "range", "(", "10", ")", ":", "\n", "      ", "_", ",", "trg", "=", "my_batcher", ".", "pack", "(", "src_sents", ",", "trg_sents", ")", "\n", "l", "=", "trg", "[", "0", "]", ".", "sent_len", "(", ")", "\n", "self", ".", "assertTrue", "(", "l", "==", "l0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_batchers.TestBatcher.test_batch_random_ties": [[50, 61], ["xnmt.batchers.SrcBatcher", "xnmt.batchers.SrcBatcher.pack", "trg[].sent_len", "range", "test_batchers.TestBatcher.assertTrue", "xnmt.sent.SimpleSentence", "xnmt.sent.SimpleSentence", "xnmt.batchers.SrcBatcher.pack", "trg[].sent_len", "range", "range"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.SortBatcher.pack", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.SortBatcher.pack", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len"], ["", "", "def", "test_batch_random_ties", "(", "self", ")", ":", "\n", "    ", "src_sents", "=", "[", "sent", ".", "SimpleSentence", "(", "[", "0", "]", "*", "5", ",", "pad_token", "=", "1", ")", "for", "_", "in", "range", "(", "1", ",", "7", ")", "]", "\n", "trg_sents", "=", "[", "sent", ".", "SimpleSentence", "(", "[", "0", "]", "*", "(", "(", "i", "+", "3", ")", "%", "6", "+", "1", ")", ",", "pad_token", "=", "2", ")", "for", "i", "in", "range", "(", "1", ",", "7", ")", "]", "\n", "my_batcher", "=", "batchers", ".", "SrcBatcher", "(", "batch_size", "=", "3", ")", "\n", "_", ",", "trg", "=", "my_batcher", ".", "pack", "(", "src_sents", ",", "trg_sents", ")", "\n", "l0", "=", "trg", "[", "0", "]", ".", "sent_len", "(", ")", "\n", "for", "_", "in", "range", "(", "10", ")", ":", "\n", "      ", "_", ",", "trg", "=", "my_batcher", ".", "pack", "(", "src_sents", ",", "trg_sents", ")", "\n", "l", "=", "trg", "[", "0", "]", ".", "sent_len", "(", ")", "\n", "if", "l", "!=", "l0", ":", "return", "\n", "", "self", ".", "assertTrue", "(", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_run_custom.TestRunningConfig.setUp": [[9, 11], ["xnmt.events.clear", "xnmt.events.clear", "xnmt.events.clear", "xnmt.events.clear"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.clear", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.clear", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.clear", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.clear"], ["  ", "def", "setUp", "(", "self", ")", ":", "\n", "    ", "xnmt", ".", "events", ".", "clear", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_run_custom.TestRunningConfig.test_bow": [[12, 14], ["xnmt.main", "xnmt.main"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main"], ["", "def", "test_bow", "(", "self", ")", ":", "\n", "    ", "run", ".", "main", "(", "[", "\"test/custom/bow.yaml\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_run_custom.TestRunningConfig.test_dual_encoder": [[15, 17], ["xnmt.main", "xnmt.main"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main"], ["", "def", "test_dual_encoder", "(", "self", ")", ":", "\n", "    ", "run", ".", "main", "(", "[", "\"test/custom/dual_encoder.yaml\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_run_custom.TestRunningConfig.test_speech_semi_disc": [[18, 20], ["xnmt.main", "xnmt.main"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main"], ["", "def", "test_speech_semi_disc", "(", "self", ")", ":", "\n", "    ", "run", ".", "main", "(", "[", "\"test/custom/speech_semi_disc.yaml\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_run_custom.TestRunningConfig.test_symmetric": [[21, 23], ["xnmt.main", "xnmt.main"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main"], ["", "def", "test_symmetric", "(", "self", ")", ":", "\n", "    ", "run", ".", "main", "(", "[", "\"test/custom/symmetric.yaml\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.test.test_run_custom.TestRunningConfig.tearDown": [[25, 31], ["os.path.isdir", "shutil.rmtree"], "methods", ["None"], ["", "def", "tearDown", "(", "self", ")", ":", "\n", "    ", "try", ":", "\n", "      ", "if", "os", ".", "path", ".", "isdir", "(", "\"test/tmp\"", ")", ":", "\n", "        ", "shutil", ".", "rmtree", "(", "\"test/tmp\"", ")", "\n", "", "", "except", ":", "\n", "      ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Batch.batch_size": [[21, 24], ["NotImplementedError"], "methods", ["None"], ["@", "abstractmethod", "\n", "def", "batch_size", "(", "self", ")", "->", "int", ":", "\n", "    ", "raise", "NotImplementedError", "(", ")", "\n", "", "def", "sent_len", "(", "self", ")", "->", "int", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Batch.sent_len": [[24, 26], ["NotImplementedError"], "methods", ["None"], ["", "def", "sent_len", "(", "self", ")", "->", "int", ":", "\n", "    ", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.ListBatch.__init__": [[39, 43], ["list.__init__", "len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__"], ["def", "__init__", "(", "self", ",", "batch_elements", ":", "list", ",", "mask", ":", "'Mask'", "=", "None", ")", "->", "None", ":", "\n", "    ", "assert", "len", "(", "batch_elements", ")", ">", "0", "\n", "super", "(", ")", ".", "__init__", "(", "batch_elements", ")", "\n", "self", ".", "mask", "=", "mask", "\n", "", "def", "batch_size", "(", "self", ")", "->", "int", ":", "return", "super", "(", ")", ".", "__len__", "(", ")", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.ListBatch.batch_size": [[43, 44], ["list.__len__"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.EnsembleListDelegate.__len__"], ["", "def", "batch_size", "(", "self", ")", "->", "int", ":", "return", "super", "(", ")", ".", "__len__", "(", ")", "\n", "def", "sent_len", "(", "self", ")", "->", "int", ":", "return", "self", "[", "0", "]", ".", "sent_len", "(", ")", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.ListBatch.sent_len": [[44, 45], ["batchers.ListBatch.sent_len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len"], ["def", "sent_len", "(", "self", ")", "->", "int", ":", "return", "self", "[", "0", "]", ".", "sent_len", "(", ")", "\n", "def", "__len__", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.ListBatch.__len__": [[45, 49], ["warnings.warn", "batchers.ListBatch.batch_size"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.batch_size"], ["def", "__len__", "(", "self", ")", ":", "\n", "    ", "warnings", ".", "warn", "(", "\"use of ListBatch.__len__() is discouraged, use ListBatch.batch_size() \"", "\n", "\"[or ListBatch.sent_len()] instead.\"", ",", "DeprecationWarning", ")", "\n", "return", "self", ".", "batch_size", "(", ")", "\n", "", "def", "__getitem__", "(", "self", ",", "key", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.ListBatch.__getitem__": [[49, 54], ["list.__getitem__", "isinstance", "batchers.ListBatch"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.retrievers.StandardRetrievalDatabase.__getitem__"], ["", "def", "__getitem__", "(", "self", ",", "key", ")", ":", "\n", "    ", "ret", "=", "super", "(", ")", ".", "__getitem__", "(", "key", ")", "\n", "if", "isinstance", "(", "key", ",", "slice", ")", ":", "\n", "      ", "ret", "=", "ListBatch", "(", "ret", ")", "\n", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.CompoundBatch.__init__": [[64, 67], ["len"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "*", "batch_elements", ":", "Batch", ")", ":", "\n", "    ", "assert", "len", "(", "batch_elements", ")", ">", "0", "\n", "self", ".", "batches", "=", "batch_elements", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.CompoundBatch.batch_size": [[68, 70], ["batchers.CompoundBatch.batches[].batch_size"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.batch_size"], ["", "def", "batch_size", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "batches", "[", "0", "]", ".", "batch_size", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.CompoundBatch.sent_len": [[71, 73], ["sum", "b.sent_len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len"], ["", "def", "sent_len", "(", "self", ")", ":", "\n", "    ", "return", "sum", "(", "b", ".", "sent_len", "(", ")", "for", "b", "in", "self", ".", "batches", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.CompoundBatch.__iter__": [[74, 77], ["range", "batchers.CompoundBatch.batch_size", "xnmt.sent.CompoundSentence"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.batch_size"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "    ", "for", "i", "in", "range", "(", "self", ".", "batch_size", "(", ")", ")", ":", "\n", "      ", "yield", "sent", ".", "CompoundSentence", "(", "sents", "=", "[", "b", "[", "i", "]", "for", "b", "in", "self", ".", "batches", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.CompoundBatch.__getitem__": [[78, 85], ["isinstance", "xnmt.sent.CompoundSentence", "isinstance", "batchers.CompoundBatch"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "key", ")", ":", "\n", "    ", "if", "isinstance", "(", "key", ",", "numbers", ".", "Integral", ")", ":", "\n", "      ", "return", "sent", ".", "CompoundSentence", "(", "sents", "=", "[", "b", "[", "key", "]", "for", "b", "in", "self", ".", "batches", "]", ")", "\n", "", "else", ":", "\n", "      ", "assert", "isinstance", "(", "key", ",", "slice", ")", "\n", "sel_batches", "=", "[", "b", "[", "key", "]", "for", "b", "in", "self", ".", "batches", "]", "\n", "return", "CompoundBatch", "(", "sel_batches", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.__init__": [[97, 100], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "np_arr", ":", "np", ".", "ndarray", ")", ":", "\n", "    ", "self", ".", "np_arr", "=", "np_arr", "\n", "self", ".", "np_arr", ".", "flags", ".", "writeable", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.__len__": [[101, 103], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "np_arr", ".", "shape", "[", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.batch_size": [[104, 106], ["None"], "methods", ["None"], ["", "def", "batch_size", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "np_arr", ".", "shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.reversed": [[107, 109], ["batchers.Mask"], "methods", ["None"], ["", "def", "reversed", "(", "self", ")", ":", "\n", "    ", "return", "Mask", "(", "self", ".", "np_arr", "[", ":", ",", ":", ":", "-", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.add_to_tensor_expr": [[110, 120], ["numpy.count_nonzero", "dynet.inputTensor", "dynet.inputTensor", "numpy.expand_dims", "numpy.expand_dims", "batchers.Mask.np_arr.transpose", "batchers.Mask.np_arr.transpose"], "methods", ["None"], ["", "def", "add_to_tensor_expr", "(", "self", ",", "tensor_expr", ",", "multiplicator", "=", "None", ")", ":", "\n", "# TODO: might cache these expressions to save memory", "\n", "    ", "if", "np", ".", "count_nonzero", "(", "self", ".", "np_arr", ")", "==", "0", ":", "\n", "      ", "return", "tensor_expr", "\n", "", "else", ":", "\n", "      ", "if", "multiplicator", "is", "not", "None", ":", "\n", "        ", "mask_expr", "=", "dy", ".", "inputTensor", "(", "np", ".", "expand_dims", "(", "self", ".", "np_arr", ".", "transpose", "(", ")", ",", "axis", "=", "1", ")", "*", "multiplicator", ",", "batched", "=", "True", ")", "\n", "", "else", ":", "\n", "        ", "mask_expr", "=", "dy", ".", "inputTensor", "(", "np", ".", "expand_dims", "(", "self", ".", "np_arr", ".", "transpose", "(", ")", ",", "axis", "=", "1", ")", ",", "batched", "=", "True", ")", "\n", "", "return", "tensor_expr", "+", "mask_expr", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.lin_subsampled": [[121, 126], ["batchers.Mask", "batchers.Mask", "numpy.array", "numpy.array", "range", "range", "range", "batchers.Mask.batch_size", "range", "batchers.Mask.batch_size", "int", "int", "math.ceil", "int", "len", "float", "float", "len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.batch_size", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.batch_size"], ["", "", "def", "lin_subsampled", "(", "self", ",", "reduce_factor", "=", "None", ",", "trg_len", "=", "None", ")", ":", "\n", "    ", "if", "reduce_factor", ":", "\n", "      ", "return", "Mask", "(", "np", ".", "array", "(", "[", "[", "self", ".", "np_arr", "[", "b", ",", "int", "(", "i", "*", "reduce_factor", ")", "]", "for", "i", "in", "range", "(", "int", "(", "math", ".", "ceil", "(", "len", "(", "self", ")", "/", "float", "(", "reduce_factor", ")", ")", ")", ")", "]", "for", "b", "in", "range", "(", "self", ".", "batch_size", "(", ")", ")", "]", ")", ")", "\n", "", "else", ":", "\n", "      ", "return", "Mask", "(", "np", ".", "array", "(", "[", "[", "self", ".", "np_arr", "[", "b", ",", "int", "(", "i", "*", "len", "(", "self", ")", "/", "float", "(", "trg_len", ")", ")", "]", "for", "i", "in", "range", "(", "trg_len", ")", "]", "for", "b", "in", "range", "(", "self", ".", "batch_size", "(", ")", ")", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.cmult_by_timestep_expr": [[127, 144], ["dynet.cmult", "dynet.inputTensor", "dynet.inputTensor", "numpy.count_nonzero", "[].transpose", "numpy.count_nonzero", "batchers.Mask.np_arr[].transpose"], "methods", ["None"], ["", "", "def", "cmult_by_timestep_expr", "(", "self", ",", "expr", ",", "timestep", ",", "inverse", "=", "False", ")", ":", "\n", "# TODO: might cache these expressions to save memory", "\n", "    ", "\"\"\"\n    Args:\n      expr: a dynet expression corresponding to one timestep\n      timestep: index of current timestep\n      inverse: True will keep the unmasked parts, False will zero out the unmasked parts\n    \"\"\"", "\n", "if", "inverse", ":", "\n", "      ", "if", "np", ".", "count_nonzero", "(", "self", ".", "np_arr", "[", ":", ",", "timestep", ":", "timestep", "+", "1", "]", ")", "==", "0", ":", "\n", "        ", "return", "expr", "\n", "", "mask_exp", "=", "dy", ".", "inputTensor", "(", "(", "1.0", "-", "self", ".", "np_arr", ")", "[", ":", ",", "timestep", ":", "timestep", "+", "1", "]", ".", "transpose", "(", ")", ",", "batched", "=", "True", ")", "\n", "", "else", ":", "\n", "      ", "if", "np", ".", "count_nonzero", "(", "self", ".", "np_arr", "[", ":", ",", "timestep", ":", "timestep", "+", "1", "]", ")", "==", "self", ".", "np_arr", "[", ":", ",", "timestep", ":", "timestep", "+", "1", "]", ".", "size", ":", "\n", "        ", "return", "expr", "\n", "", "mask_exp", "=", "dy", ".", "inputTensor", "(", "self", ".", "np_arr", "[", ":", ",", "timestep", ":", "timestep", "+", "1", "]", ".", "transpose", "(", ")", ",", "batched", "=", "True", ")", "\n", "", "return", "dy", ".", "cmult", "(", "expr", ",", "mask_exp", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.get_valid_position": [[145, 151], ["functools.lru_cache", "np_arr.transpose.transpose.transpose", "numpy.nonzero"], "methods", ["None"], ["", "@", "lru_cache", "(", "maxsize", "=", "1", ")", "\n", "def", "get_valid_position", "(", "self", ",", "transpose", "=", "True", ")", ":", "\n", "    ", "np_arr", "=", "self", ".", "np_arr", "\n", "if", "transpose", ":", "np_arr", "=", "np_arr", ".", "transpose", "(", ")", "\n", "x", "=", "[", "np", ".", "nonzero", "(", "1", "-", "arr", ")", "[", "0", "]", "for", "arr", "in", "np_arr", "]", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Batcher.__init__": [[164, 173], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "\n", "batch_size", ":", "numbers", ".", "Integral", ",", "\n", "granularity", ":", "str", "=", "'sent'", ",", "\n", "pad_src_to_multiple", ":", "numbers", ".", "Integral", "=", "1", ",", "\n", "sort_within_by_trg_len", ":", "bool", "=", "True", ")", "->", "None", ":", "\n", "    ", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "granularity", "=", "granularity", "\n", "self", ".", "pad_src_to_multiple", "=", "pad_src_to_multiple", "\n", "self", ".", "sort_within_by_trg_len", "=", "sort_within_by_trg_len", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Batcher.is_random": [[174, 180], ["None"], "methods", ["None"], ["", "def", "is_random", "(", "self", ")", ":", "\n", "    ", "\"\"\"\n    Returns:\n      True if there is some randomness in the batching process, False otherwise.\n    \"\"\"", "\n", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Batcher.create_single_batch": [[181, 203], ["batchers.pad", "zip", "batchers.pad", "sorted", "zip", "x[].sent_len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.conv_encoder.StridedConvSeqTransducer.pad", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.conv_encoder.StridedConvSeqTransducer.pad", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len"], ["", "def", "create_single_batch", "(", "self", ",", "src_sents", ":", "Sequence", "[", "sent", ".", "Sentence", "]", ",", "\n", "trg_sents", ":", "Optional", "[", "Sequence", "[", "sent", ".", "Sentence", "]", "]", "=", "None", ",", "\n", "sort_by_trg_len", ":", "bool", "=", "False", ")", "->", "Union", "[", "Batch", ",", "Tuple", "[", "Batch", "]", "]", ":", "\n", "    ", "\"\"\"\n    Create a single batch, either source-only or source-and-target.\n\n    Args:\n      src_sents: list of source-side inputs\n      trg_sents: optional list of target-side inputs\n      sort_by_trg_len: if True (and targets are specified), sort source- and target batches by target length\n\n    Returns:\n      a tuple of batches if targets were given, otherwise a single batch\n    \"\"\"", "\n", "if", "trg_sents", "is", "not", "None", "and", "sort_by_trg_len", ":", "\n", "      ", "src_sents", ",", "trg_sents", "=", "zip", "(", "*", "sorted", "(", "zip", "(", "src_sents", ",", "trg_sents", ")", ",", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", ".", "sent_len", "(", ")", ",", "reverse", "=", "True", ")", ")", "\n", "", "src_batch", "=", "pad", "(", "src_sents", ",", "pad_to_multiple", "=", "self", ".", "pad_src_to_multiple", ")", "\n", "if", "trg_sents", "is", "None", ":", "\n", "      ", "return", "src_batch", "\n", "", "else", ":", "\n", "      ", "trg_batch", "=", "pad", "(", "trg_sents", ")", "\n", "return", "src_batch", ",", "trg_batch", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Batcher._add_single_batch": [[204, 211], ["src_ret.append", "batchers.Batcher.create_single_batch", "trg_ret.append", "batchers.Batcher.create_single_batch"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Batcher.create_single_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Batcher.create_single_batch"], ["", "", "def", "_add_single_batch", "(", "self", ",", "src_curr", ",", "trg_curr", ",", "src_ret", ",", "trg_ret", ",", "sort_by_trg_len", "=", "False", ")", ":", "\n", "    ", "if", "trg_curr", ":", "\n", "      ", "src_batch", ",", "trg_batch", "=", "self", ".", "create_single_batch", "(", "src_curr", ",", "trg_curr", ",", "sort_by_trg_len", ")", "\n", "trg_ret", ".", "append", "(", "trg_batch", ")", "\n", "", "else", ":", "\n", "      ", "src_batch", "=", "self", ".", "create_single_batch", "(", "src_curr", ",", "trg_curr", ",", "sort_by_trg_len", ")", "\n", "", "src_ret", ".", "append", "(", "src_batch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Batcher._pack_by_order": [[212, 262], ["range", "len", "batchers.Batcher._add_single_batch", "batchers.Batcher._add_single_batch", "RuntimeError", "max", "max", "batchers._len_or_zero", "batchers._len_or_zero", "batchers.Batcher._add_single_batch", "batchers._len_or_zero", "batchers._len_or_zero", "src_curr.append", "trg_curr.append", "len", "len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Batcher._add_single_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Batcher._add_single_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers._len_or_zero", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers._len_or_zero", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Batcher._add_single_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers._len_or_zero", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers._len_or_zero", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "def", "_pack_by_order", "(", "self", ",", "\n", "src", ":", "Sequence", "[", "sent", ".", "Sentence", "]", ",", "\n", "trg", ":", "Optional", "[", "Sequence", "[", "sent", ".", "Sentence", "]", "]", ",", "\n", "order", ":", "Sequence", "[", "numbers", ".", "Integral", "]", ")", "->", "Tuple", "[", "Sequence", "[", "Batch", "]", ",", "Sequence", "[", "Batch", "]", "]", ":", "\n", "    ", "\"\"\"\n    Pack batches by given order.\n\n    Trg is optional for the case of self.granularity == 'sent'\n\n    Args:\n      src: src-side inputs\n      trg: trg-side inputs\n      order: order of inputs\n\n    Returns:\n      If trg is given: tuple of src / trg batches; Otherwise: only src batches\n    \"\"\"", "\n", "src_ret", ",", "src_curr", "=", "[", "]", ",", "[", "]", "\n", "trg_ret", ",", "trg_curr", "=", "[", "]", ",", "[", "]", "\n", "if", "self", ".", "granularity", "==", "'sent'", ":", "\n", "      ", "for", "x", "in", "range", "(", "0", ",", "len", "(", "order", ")", ",", "self", ".", "batch_size", ")", ":", "\n", "        ", "src_selected", "=", "[", "src", "[", "y", "]", "for", "y", "in", "order", "[", "x", ":", "x", "+", "self", ".", "batch_size", "]", "]", "\n", "if", "trg", ":", "\n", "          ", "trg_selected", "=", "[", "trg", "[", "y", "]", "for", "y", "in", "order", "[", "x", ":", "x", "+", "self", ".", "batch_size", "]", "]", "\n", "", "else", ":", "trg_selected", "=", "None", "\n", "self", ".", "_add_single_batch", "(", "src_selected", ",", "\n", "trg_selected", ",", "\n", "src_ret", ",", "trg_ret", ",", "\n", "sort_by_trg_len", "=", "self", ".", "sort_within_by_trg_len", ")", "\n", "", "", "elif", "self", ".", "granularity", "==", "'word'", ":", "\n", "      ", "max_src", ",", "max_trg", "=", "0", ",", "0", "\n", "for", "i", "in", "order", ":", "\n", "        ", "max_src", "=", "max", "(", "_len_or_zero", "(", "src", "[", "i", "]", ")", ",", "max_src", ")", "\n", "max_trg", "=", "max", "(", "_len_or_zero", "(", "trg", "[", "i", "]", ")", ",", "max_trg", ")", "\n", "if", "(", "max_src", "+", "max_trg", ")", "*", "(", "len", "(", "src_curr", ")", "+", "1", ")", ">", "self", ".", "batch_size", "and", "len", "(", "src_curr", ")", ">", "0", ":", "\n", "          ", "self", ".", "_add_single_batch", "(", "src_curr", ",", "trg_curr", ",", "src_ret", ",", "trg_ret", ",", "sort_by_trg_len", "=", "self", ".", "sort_within_by_trg_len", ")", "\n", "max_src", "=", "_len_or_zero", "(", "src", "[", "i", "]", ")", "\n", "max_trg", "=", "_len_or_zero", "(", "trg", "[", "i", "]", ")", "\n", "src_curr", "=", "[", "src", "[", "i", "]", "]", "\n", "trg_curr", "=", "[", "trg", "[", "i", "]", "]", "\n", "", "else", ":", "\n", "          ", "src_curr", ".", "append", "(", "src", "[", "i", "]", ")", "\n", "trg_curr", ".", "append", "(", "trg", "[", "i", "]", ")", "\n", "", "", "self", ".", "_add_single_batch", "(", "src_curr", ",", "trg_curr", ",", "src_ret", ",", "trg_ret", ",", "sort_by_trg_len", "=", "self", ".", "sort_within_by_trg_len", ")", "\n", "", "else", ":", "\n", "      ", "raise", "RuntimeError", "(", "\"Illegal granularity specification {}\"", ".", "format", "(", "self", ".", "granularity", ")", ")", "\n", "", "if", "trg", ":", "\n", "      ", "return", "src_ret", ",", "trg_ret", "\n", "", "else", ":", "\n", "      ", "return", "src_ret", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Batcher.pack": [[263, 276], ["NotImplementedError"], "methods", ["None"], ["", "", "def", "pack", "(", "self", ",", "src", ":", "Sequence", "[", "sent", ".", "Sentence", "]", ",", "trg", ":", "Sequence", "[", "sent", ".", "Sentence", "]", ")", "->", "Tuple", "[", "Sequence", "[", "Batch", "]", ",", "Sequence", "[", "Batch", "]", "]", ":", "\n", "    ", "\"\"\"\n    Create a list of src/trg batches based on provided src/trg inputs.\n\n    Args:\n      src: list of src-side inputs\n      trg: list of trg-side inputs\n\n    Returns:\n      tuple of lists of src and trg batches\n    \"\"\"", "\n", "raise", "NotImplementedError", "(", "\"must be implemented by subclasses\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.InOrderBatcher.__init__": [[287, 292], ["batchers.Batcher.__init__"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "batch_size", ":", "numbers", ".", "Integral", "=", "1", ",", "\n", "pad_src_to_multiple", ":", "numbers", ".", "Integral", "=", "1", ")", "->", "None", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "batch_size", ",", "pad_src_to_multiple", "=", "pad_src_to_multiple", ",", "sort_within_by_trg_len", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.InOrderBatcher.pack": [[293, 307], ["list", "batchers.InOrderBatcher._pack_by_order", "range", "len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.WordTrgSrcBatcher._pack_by_order"], ["", "def", "pack", "(", "self", ",", "src", ":", "Sequence", "[", "sent", ".", "Sentence", "]", ",", "trg", ":", "Optional", "[", "Sequence", "[", "sent", ".", "Sentence", "]", "]", ")", "->", "Tuple", "[", "Sequence", "[", "Batch", "]", ",", "Sequence", "[", "Batch", "]", "]", ":", "\n", "    ", "\"\"\"\n    Pack batches. Unlike other batches, the trg sentences are optional.\n\n    Args:\n      src: list of src-side inputs\n      trg: optional list of trg-side inputs\n\n    Returns:\n      src batches if trg was not given; tuple of src batches and trg batches if trg was given\n    \"\"\"", "\n", "order", "=", "list", "(", "range", "(", "len", "(", "src", ")", ")", ")", "\n", "return", "self", ".", "_pack_by_order", "(", "src", ",", "trg", ",", "order", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.ShuffleBatcher.__init__": [[320, 326], ["batchers.Batcher.__init__"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__"], ["def", "__init__", "(", "self", ",", "\n", "batch_size", ":", "numbers", ".", "Integral", ",", "\n", "granularity", ":", "str", "=", "'sent'", ",", "\n", "pad_src_to_multiple", ":", "numbers", ".", "Integral", "=", "1", ")", "->", "None", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "batch_size", "=", "batch_size", ",", "granularity", "=", "granularity", ",", "pad_src_to_multiple", "=", "pad_src_to_multiple", ",", "\n", "sort_within_by_trg_len", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.ShuffleBatcher.pack": [[327, 331], ["list", "numpy.random.shuffle", "batchers.ShuffleBatcher._pack_by_order", "range", "len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.WordTrgSrcBatcher._pack_by_order"], ["", "def", "pack", "(", "self", ",", "src", ",", "trg", ")", ":", "\n", "    ", "order", "=", "list", "(", "range", "(", "len", "(", "src", ")", ")", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "order", ")", "\n", "return", "self", ".", "_pack_by_order", "(", "src", ",", "trg", ",", "order", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.ShuffleBatcher.is_random": [[332, 334], ["None"], "methods", ["None"], ["", "def", "is_random", "(", "self", ")", ":", "\n", "    ", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.SortBatcher.__init__": [[348, 359], ["batchers.Batcher.__init__", "x[].sent_len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len"], ["def", "__init__", "(", "self", ",", "\n", "batch_size", ":", "numbers", ".", "Integral", ",", "\n", "granularity", ":", "str", "=", "'sent'", ",", "\n", "sort_key", ":", "Callable", "=", "lambda", "x", ":", "x", "[", "0", "]", ".", "sent_len", "(", ")", ",", "\n", "break_ties_randomly", ":", "bool", "=", "True", ",", "\n", "pad_src_to_multiple", ":", "numbers", ".", "Integral", "=", "1", ")", "->", "None", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "batch_size", ",", "granularity", "=", "granularity", ",", "\n", "pad_src_to_multiple", "=", "pad_src_to_multiple", ",", "\n", "sort_within_by_trg_len", "=", "True", ")", "\n", "self", ".", "sort_key", "=", "sort_key", "\n", "self", ".", "break_ties_randomly", "=", "break_ties_randomly", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.SortBatcher.pack": [[360, 366], ["batchers.SortBatcher._pack_by_order", "numpy.argsort", "numpy.argsort", "batchers.SortBatcher.sort_key", "batchers.SortBatcher.sort_key", "random.uniform", "zip", "zip"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.WordTrgSrcBatcher._pack_by_order"], ["", "def", "pack", "(", "self", ",", "src", ",", "trg", ")", ":", "\n", "    ", "if", "self", ".", "break_ties_randomly", ":", "\n", "      ", "order", "=", "np", ".", "argsort", "(", "[", "self", ".", "sort_key", "(", "x", ")", "+", "random", ".", "uniform", "(", "-", "SortBatcher", ".", "__tiebreaker_eps", ",", "SortBatcher", ".", "__tiebreaker_eps", ")", "for", "x", "in", "zip", "(", "src", ",", "trg", ")", "]", ")", "\n", "", "else", ":", "\n", "      ", "order", "=", "np", ".", "argsort", "(", "[", "self", ".", "sort_key", "(", "x", ")", "for", "x", "in", "zip", "(", "src", ",", "trg", ")", "]", ")", "\n", "", "return", "self", ".", "_pack_by_order", "(", "src", ",", "trg", ",", "order", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.SortBatcher.is_random": [[367, 369], ["None"], "methods", ["None"], ["", "def", "is_random", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "break_ties_randomly", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.SrcBatcher.__init__": [[445, 452], ["batchers.SortBatcher.__init__", "x[].sent_len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "batch_size", ":", "numbers", ".", "Integral", ",", "\n", "break_ties_randomly", ":", "bool", "=", "True", ",", "\n", "pad_src_to_multiple", ":", "numbers", ".", "Integral", "=", "1", ")", "->", "None", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "batch_size", ",", "sort_key", "=", "lambda", "x", ":", "x", "[", "0", "]", ".", "sent_len", "(", ")", ",", "granularity", "=", "'sent'", ",", "\n", "break_ties_randomly", "=", "break_ties_randomly", ",", "pad_src_to_multiple", "=", "pad_src_to_multiple", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.TrgBatcher.__init__": [[466, 474], ["batchers.SortBatcher.__init__", "x[].sent_len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "batch_size", ":", "numbers", ".", "Integral", ",", "\n", "break_ties_randomly", ":", "bool", "=", "True", ",", "\n", "pad_src_to_multiple", ":", "numbers", ".", "Integral", "=", "1", ")", "->", "None", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "batch_size", ",", "sort_key", "=", "lambda", "x", ":", "x", "[", "1", "]", ".", "sent_len", "(", ")", ",", "granularity", "=", "'sent'", ",", "\n", "break_ties_randomly", "=", "break_ties_randomly", ",", "\n", "pad_src_to_multiple", "=", "pad_src_to_multiple", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.SrcTrgBatcher.__init__": [[488, 496], ["batchers.SortBatcher.__init__", "x[].sent_len", "len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "batch_size", ":", "numbers", ".", "Integral", ",", "\n", "break_ties_randomly", ":", "bool", "=", "True", ",", "\n", "pad_src_to_multiple", ":", "numbers", ".", "Integral", "=", "1", ")", "->", "None", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "batch_size", ",", "sort_key", "=", "lambda", "x", ":", "x", "[", "0", "]", ".", "sent_len", "(", ")", "+", "1.0e-6", "*", "len", "(", "x", "[", "1", "]", ")", ",", "\n", "granularity", "=", "'sent'", ",", "break_ties_randomly", "=", "break_ties_randomly", ",", "\n", "pad_src_to_multiple", "=", "pad_src_to_multiple", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.TrgSrcBatcher.__init__": [[510, 519], ["batchers.SortBatcher.__init__", "x[].sent_len", "len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "batch_size", ":", "numbers", ".", "Integral", ",", "\n", "break_ties_randomly", ":", "bool", "=", "True", ",", "\n", "pad_src_to_multiple", ":", "numbers", ".", "Integral", "=", "1", ")", "->", "None", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "batch_size", ",", "sort_key", "=", "lambda", "x", ":", "x", "[", "1", "]", ".", "sent_len", "(", ")", "+", "1.0e-6", "*", "len", "(", "x", "[", "0", "]", ")", ",", "\n", "granularity", "=", "'sent'", ",", "\n", "break_ties_randomly", "=", "break_ties_randomly", ",", "\n", "pad_src_to_multiple", "=", "pad_src_to_multiple", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.SentShuffleBatcher.__init__": [[533, 536], ["batchers.ShuffleBatcher.__init__"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "batch_size", ":", "numbers", ".", "Integral", ",", "pad_src_to_multiple", ":", "numbers", ".", "Integral", "=", "1", ")", "->", "None", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "batch_size", ",", "granularity", "=", "'sent'", ",", "pad_src_to_multiple", "=", "pad_src_to_multiple", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.WordShuffleBatcher.__init__": [[549, 552], ["batchers.ShuffleBatcher.__init__"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "words_per_batch", ":", "numbers", ".", "Integral", ",", "pad_src_to_multiple", ":", "numbers", ".", "Integral", "=", "1", ")", "->", "None", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "words_per_batch", ",", "granularity", "=", "'word'", ",", "pad_src_to_multiple", "=", "pad_src_to_multiple", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.WordSortBatcher.__init__": [[567, 583], ["batchers.SortBatcher.__init__", "ValueError", "ValueError"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__"], ["def", "__init__", "(", "self", ",", "\n", "words_per_batch", ":", "Optional", "[", "numbers", ".", "Integral", "]", ",", "\n", "avg_batch_size", ":", "Optional", "[", "numbers", ".", "Real", "]", ",", "\n", "sort_key", ":", "Callable", ",", "\n", "break_ties_randomly", ":", "bool", "=", "True", ",", "\n", "pad_src_to_multiple", ":", "numbers", ".", "Integral", "=", "1", ")", "->", "None", ":", "\n", "# Sanity checks", "\n", "    ", "if", "words_per_batch", "and", "avg_batch_size", ":", "\n", "      ", "raise", "ValueError", "(", "\"words_per_batch and avg_batch_size are mutually exclusive.\"", ")", "\n", "", "elif", "words_per_batch", "is", "None", "and", "avg_batch_size", "is", "None", ":", "\n", "      ", "raise", "ValueError", "(", "\"either words_per_batch or avg_batch_size must be specified.\"", ")", "\n", "\n", "", "super", "(", ")", ".", "__init__", "(", "words_per_batch", ",", "sort_key", "=", "sort_key", ",", "granularity", "=", "'word'", ",", "\n", "break_ties_randomly", "=", "break_ties_randomly", ",", "\n", "pad_src_to_multiple", "=", "pad_src_to_multiple", ")", "\n", "self", ".", "avg_batch_size", "=", "avg_batch_size", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.WordSrcBatcher.__init__": [[598, 607], ["batchers.WordSortBatcher.__init__", "x[].sent_len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "words_per_batch", ":", "Optional", "[", "numbers", ".", "Integral", "]", "=", "None", ",", "\n", "avg_batch_size", ":", "Optional", "[", "numbers", ".", "Real", "]", "=", "None", ",", "\n", "break_ties_randomly", ":", "bool", "=", "True", ",", "\n", "pad_src_to_multiple", ":", "numbers", ".", "Integral", "=", "1", ")", "->", "None", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "words_per_batch", ",", "avg_batch_size", ",", "sort_key", "=", "lambda", "x", ":", "x", "[", "0", "]", ".", "sent_len", "(", ")", ",", "\n", "break_ties_randomly", "=", "break_ties_randomly", ",", "\n", "pad_src_to_multiple", "=", "pad_src_to_multiple", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.WordSrcBatcher._pack_by_order": [[608, 612], ["batchers.Batcher._pack_by_order", "len", "sum", "sum", "s.sent_len", "s.sent_len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.WordTrgSrcBatcher._pack_by_order", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len"], ["", "def", "_pack_by_order", "(", "self", ",", "src", ",", "trg", ",", "order", ")", ":", "\n", "    ", "if", "self", ".", "avg_batch_size", ":", "\n", "      ", "self", ".", "batch_size", "=", "(", "sum", "(", "[", "s", ".", "sent_len", "(", ")", "for", "s", "in", "src", "]", ")", "+", "sum", "(", "[", "s", ".", "sent_len", "(", ")", "for", "s", "in", "trg", "]", ")", ")", "/", "len", "(", "src", ")", "*", "self", ".", "avg_batch_size", "\n", "", "return", "super", "(", ")", ".", "_pack_by_order", "(", "src", ",", "trg", ",", "order", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.WordTrgBatcher.__init__": [[627, 636], ["batchers.WordSortBatcher.__init__", "x[].sent_len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "words_per_batch", ":", "Optional", "[", "numbers", ".", "Integral", "]", "=", "None", ",", "\n", "avg_batch_size", ":", "Optional", "[", "numbers", ".", "Real", "]", "=", "None", ",", "\n", "break_ties_randomly", ":", "bool", "=", "True", ",", "\n", "pad_src_to_multiple", ":", "numbers", ".", "Integral", "=", "1", ")", "->", "None", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "words_per_batch", ",", "avg_batch_size", ",", "sort_key", "=", "lambda", "x", ":", "x", "[", "1", "]", ".", "sent_len", "(", ")", ",", "\n", "break_ties_randomly", "=", "break_ties_randomly", ",", "\n", "pad_src_to_multiple", "=", "pad_src_to_multiple", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.WordTrgBatcher._pack_by_order": [[637, 641], ["batchers.Batcher._pack_by_order", "len", "sum", "sum", "s.sent_len", "s.sent_len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.WordTrgSrcBatcher._pack_by_order", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len"], ["", "def", "_pack_by_order", "(", "self", ",", "src", ",", "trg", ",", "order", ")", ":", "\n", "    ", "if", "self", ".", "avg_batch_size", ":", "\n", "      ", "self", ".", "batch_size", "=", "(", "sum", "(", "[", "s", ".", "sent_len", "(", ")", "for", "s", "in", "src", "]", ")", "+", "sum", "(", "[", "s", ".", "sent_len", "(", ")", "for", "s", "in", "trg", "]", ")", ")", "/", "len", "(", "src", ")", "*", "self", ".", "avg_batch_size", "\n", "", "return", "super", "(", ")", ".", "_pack_by_order", "(", "src", ",", "trg", ",", "order", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.WordSrcTrgBatcher.__init__": [[656, 665], ["batchers.WordSortBatcher.__init__", "x[].sent_len", "x[].sent_len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "words_per_batch", ":", "Optional", "[", "numbers", ".", "Integral", "]", "=", "None", ",", "\n", "avg_batch_size", ":", "Optional", "[", "numbers", ".", "Real", "]", "=", "None", ",", "\n", "break_ties_randomly", ":", "bool", "=", "True", ",", "\n", "pad_src_to_multiple", ":", "numbers", ".", "Integral", "=", "1", ")", "->", "None", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "words_per_batch", ",", "avg_batch_size", ",", "sort_key", "=", "lambda", "x", ":", "x", "[", "0", "]", ".", "sent_len", "(", ")", "+", "1.0e-6", "*", "x", "[", "1", "]", ".", "sent_len", "(", ")", ",", "\n", "break_ties_randomly", "=", "break_ties_randomly", ",", "\n", "pad_src_to_multiple", "=", "pad_src_to_multiple", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.WordSrcTrgBatcher._pack_by_order": [[666, 670], ["batchers.Batcher._pack_by_order", "len", "sum", "sum", "s.sent_len", "s.sent_len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.WordTrgSrcBatcher._pack_by_order", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len"], ["", "def", "_pack_by_order", "(", "self", ",", "src", ",", "trg", ",", "order", ")", ":", "\n", "    ", "if", "self", ".", "avg_batch_size", ":", "\n", "      ", "self", ".", "batch_size", "=", "(", "sum", "(", "[", "s", ".", "sent_len", "(", ")", "for", "s", "in", "src", "]", ")", "+", "sum", "(", "[", "s", ".", "sent_len", "(", ")", "for", "s", "in", "trg", "]", ")", ")", "/", "len", "(", "src", ")", "*", "self", ".", "avg_batch_size", "\n", "", "return", "super", "(", ")", ".", "_pack_by_order", "(", "src", ",", "trg", ",", "order", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.WordTrgSrcBatcher.__init__": [[685, 694], ["batchers.WordSortBatcher.__init__", "x[].sent_len", "x[].sent_len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "words_per_batch", ":", "Optional", "[", "numbers", ".", "Integral", "]", "=", "None", ",", "\n", "avg_batch_size", ":", "Optional", "[", "numbers", ".", "Real", "]", "=", "None", ",", "\n", "break_ties_randomly", ":", "bool", "=", "True", ",", "\n", "pad_src_to_multiple", ":", "numbers", ".", "Integral", "=", "1", ")", "->", "None", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "words_per_batch", ",", "avg_batch_size", ",", "sort_key", "=", "lambda", "x", ":", "x", "[", "1", "]", ".", "sent_len", "(", ")", "+", "1.0e-6", "*", "x", "[", "0", "]", ".", "sent_len", "(", ")", ",", "\n", "break_ties_randomly", "=", "break_ties_randomly", ",", "\n", "pad_src_to_multiple", "=", "pad_src_to_multiple", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.WordTrgSrcBatcher._pack_by_order": [[695, 699], ["batchers.Batcher._pack_by_order", "len", "sum", "sum", "s.sent_len", "s.sent_len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.WordTrgSrcBatcher._pack_by_order", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len"], ["", "def", "_pack_by_order", "(", "self", ",", "src", ",", "trg", ",", "order", ")", ":", "\n", "    ", "if", "self", ".", "avg_batch_size", ":", "\n", "      ", "self", ".", "batch_size", "=", "(", "sum", "(", "[", "s", ".", "sent_len", "(", ")", "for", "s", "in", "src", "]", ")", "+", "sum", "(", "[", "s", ".", "sent_len", "(", ")", "for", "s", "in", "trg", "]", ")", ")", "/", "len", "(", "src", ")", "*", "self", ".", "avg_batch_size", "\n", "", "return", "super", "(", ")", ".", "_pack_by_order", "(", "src", ",", "trg", ",", "order", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch": [[371, 386], ["isinstance", "batchers.ListBatch"], "function", ["None"], ["", "", "def", "mark_as_batch", "(", "data", ",", "mask", "=", "None", ")", ":", "\n", "  ", "\"\"\"\n  Mark a sequence of items as batch\n\n  Args:\n    data: sequence of things\n    mask: optional mask\n\n  Returns: a batch of things\n  \"\"\"", "\n", "if", "isinstance", "(", "data", ",", "Batch", ")", "and", "mask", "is", "None", ":", "\n", "    ", "ret", "=", "data", "\n", "", "else", ":", "\n", "    ", "ret", "=", "ListBatch", "(", "data", ",", "mask", ")", "\n", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched": [[387, 398], ["isinstance"], "function", ["None"], ["", "def", "is_batched", "(", "data", ")", ":", "\n", "  ", "\"\"\"\n  Check whether some data is batched.\n\n  Args:\n    data: data to check\n\n  Returns:\n    True iff data is batched.\n  \"\"\"", "\n", "return", "isinstance", "(", "data", ",", "Batch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.pad": [[399, 428], ["isinstance", "max", "min", "numpy.zeros", "enumerate", "batchers.ListBatch", "range", "batchers.CompoundBatch", "batchers.ListBatch", "range", "item.create_padded_sent", "list", "len", "ret.append", "batchers._len_or_zero", "batchers._len_or_zero", "len", "batchers._len_or_zero", "batchers.Mask", "batchers.pad", "item.sent_len", "tuple"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.create_padded_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers._len_or_zero", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers._len_or_zero", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers._len_or_zero", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.conv_encoder.StridedConvSeqTransducer.pad", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len"], ["", "def", "pad", "(", "batch", ":", "Sequence", ",", "pad_to_multiple", ":", "numbers", ".", "Integral", "=", "1", ")", "->", "Batch", ":", "\n", "  ", "\"\"\"\n  Apply padding to sentences in a batch.\n\n  Args:\n    batch: batch of sentences\n    pad_to_multiple: pad sentences so their length is a multiple of this integer.\n\n  Returns:\n    batch containing padded items and a corresponding batch mask.\n  \"\"\"", "\n", "if", "isinstance", "(", "list", "(", "batch", ")", "[", "0", "]", ",", "sent", ".", "CompoundSentence", ")", ":", "\n", "    ", "ret", "=", "[", "]", "\n", "for", "compound_i", "in", "range", "(", "len", "(", "batch", "[", "0", "]", ".", "sents", ")", ")", ":", "\n", "      ", "ret", ".", "append", "(", "\n", "pad", "(", "tuple", "(", "inp", ".", "sents", "[", "compound_i", "]", "for", "inp", "in", "batch", ")", ",", "pad_to_multiple", "=", "pad_to_multiple", ")", ")", "\n", "", "return", "CompoundBatch", "(", "*", "ret", ")", "\n", "", "max_len", "=", "max", "(", "_len_or_zero", "(", "item", ")", "for", "item", "in", "batch", ")", "\n", "if", "max_len", "%", "pad_to_multiple", "!=", "0", ":", "\n", "    ", "max_len", "+=", "pad_to_multiple", "-", "(", "max_len", "%", "pad_to_multiple", ")", "\n", "", "min_len", "=", "min", "(", "_len_or_zero", "(", "item", ")", "for", "item", "in", "batch", ")", "\n", "if", "min_len", "==", "max_len", ":", "\n", "    ", "return", "ListBatch", "(", "batch", ",", "mask", "=", "None", ")", "\n", "", "masks", "=", "np", ".", "zeros", "(", "[", "len", "(", "batch", ")", ",", "max_len", "]", ")", "\n", "for", "i", ",", "v", "in", "enumerate", "(", "batch", ")", ":", "\n", "    ", "for", "j", "in", "range", "(", "_len_or_zero", "(", "v", ")", ",", "max_len", ")", ":", "\n", "      ", "masks", "[", "i", ",", "j", "]", "=", "1.0", "\n", "", "", "padded_items", "=", "[", "item", ".", "create_padded_sent", "(", "max_len", "-", "item", ".", "sent_len", "(", ")", ")", "for", "item", "in", "batch", "]", "\n", "return", "ListBatch", "(", "padded_items", ",", "mask", "=", "Mask", "(", "masks", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers._len_or_zero": [[429, 431], ["hasattr", "val.sent_len", "hasattr", "len"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len"], ["", "def", "_len_or_zero", "(", "val", ")", ":", "\n", "  ", "return", "val", ".", "sent_len", "(", ")", "if", "hasattr", "(", "val", ",", "'sent_len'", ")", "else", "len", "(", "val", ")", "if", "hasattr", "(", "val", ",", "'__len__'", ")", "else", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.truncate_batches": [[700, 745], ["enumerate", "isinstance", "isinstance", "batch_sizes.append", "isinstance", "min", "ret.append", "batch_sizes.append", "isinstance", "isinstance", "isinstance", "ret.append", "isinstance", "x.dim", "len", "batch_sizes.append", "isinstance", "ret.append", "isinstance", "x.batch_size", "batch_sizes.append", "ValueError", "batchers.mark_as_batch", "ret.append", "isinstance", "tuple", "batchers.Mask", "ret.append", "ValueError", "x.output().dim", "type", "min", "x.output", "len", "slice", "min", "type", "slice", "min", "min", "x.dim"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.batch_size", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMState.output", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["", "", "def", "truncate_batches", "(", "*", "xl", ":", "Union", "[", "dy", ".", "Expression", ",", "Batch", ",", "Mask", ",", "recurrent", ".", "UniLSTMState", "]", ")", "->", "Sequence", "[", "Union", "[", "dy", ".", "Expression", ",", "Batch", ",", "Mask", ",", "recurrent", ".", "UniLSTMState", "]", "]", ":", "\n", "  ", "\"\"\"\n  Truncate a list of batched items so that all items have the batch size of the input with the smallest batch size.\n\n  Inputs can be of various types and would usually correspond to a single time step.\n  Assume that the batch elements with index 0 correspond across the inputs, so that batch elements will be truncated\n  from the top, i.e. starting with the highest-indexed batch elements.\n  Masks are not considered even if attached to a input of :class:`Batch` type.\n\n  Args:\n    *xl: batched timesteps of various types\n\n  Returns:\n    Copies of the inputs, truncated to consistent batch size.\n  \"\"\"", "\n", "batch_sizes", "=", "[", "]", "\n", "for", "x", "in", "xl", ":", "\n", "    ", "if", "isinstance", "(", "x", ",", "dy", ".", "Expression", ")", "or", "isinstance", "(", "x", ",", "expression_seqs", ".", "ExpressionSequence", ")", ":", "\n", "      ", "batch_sizes", ".", "append", "(", "x", ".", "dim", "(", ")", "[", "1", "]", ")", "\n", "", "elif", "isinstance", "(", "x", ",", "Batch", ")", ":", "\n", "      ", "batch_sizes", ".", "append", "(", "len", "(", "x", ")", ")", "\n", "", "elif", "isinstance", "(", "x", ",", "Mask", ")", ":", "\n", "      ", "batch_sizes", ".", "append", "(", "x", ".", "batch_size", "(", ")", ")", "\n", "", "elif", "isinstance", "(", "x", ",", "recurrent", ".", "UniLSTMState", ")", ":", "\n", "      ", "batch_sizes", ".", "append", "(", "x", ".", "output", "(", ")", ".", "dim", "(", ")", "[", "1", "]", ")", "\n", "", "else", ":", "\n", "      ", "raise", "ValueError", "(", "f\"unsupported type {type(x)}\"", ")", "\n", "", "assert", "batch_sizes", "[", "-", "1", "]", ">", "0", "\n", "", "ret", "=", "[", "]", "\n", "for", "i", ",", "x", "in", "enumerate", "(", "xl", ")", ":", "\n", "    ", "if", "batch_sizes", "[", "i", "]", ">", "min", "(", "batch_sizes", ")", ":", "\n", "      ", "if", "isinstance", "(", "x", ",", "dy", ".", "Expression", ")", "or", "isinstance", "(", "x", ",", "expression_seqs", ".", "ExpressionSequence", ")", ":", "\n", "        ", "ret", ".", "append", "(", "x", "[", "tuple", "(", "[", "slice", "(", "None", ")", "]", "*", "len", "(", "x", ".", "dim", "(", ")", "[", "0", "]", ")", "+", "[", "slice", "(", "min", "(", "batch_sizes", ")", ")", "]", ")", "]", ")", "\n", "", "elif", "isinstance", "(", "x", ",", "Batch", ")", ":", "\n", "        ", "ret", ".", "append", "(", "mark_as_batch", "(", "x", "[", ":", "min", "(", "batch_sizes", ")", "]", ")", ")", "\n", "", "elif", "isinstance", "(", "x", ",", "Mask", ")", ":", "\n", "        ", "ret", ".", "append", "(", "Mask", "(", "x", ".", "np_arr", "[", ":", "min", "(", "batch_sizes", ")", "]", ")", ")", "\n", "", "elif", "isinstance", "(", "x", ",", "recurrent", ".", "UniLSTMState", ")", ":", "\n", "        ", "ret", ".", "append", "(", "x", "[", ":", ",", ":", "min", "(", "batch_sizes", ")", "]", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "f\"unsupported type {type(x)}\"", ")", "\n", "", "", "else", ":", "\n", "      ", "ret", ".", "append", "(", "x", ")", "\n", "", "", "return", "ret", "\n", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.InputReader.read_sents": [[27, 37], ["input_readers.InputReader.iterate_filtered"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.BaseTextReader.iterate_filtered"], ["def", "read_sents", "(", "self", ",", "filename", ":", "str", ",", "filter_ids", ":", "Sequence", "[", "numbers", ".", "Integral", "]", "=", "None", ")", "->", "Iterator", "[", "sent", ".", "Sentence", "]", ":", "\n", "    ", "\"\"\"\n    Read sentences and return an iterator.\n\n    Args:\n      filename: data file\n      filter_ids: only read sentences with these ids (0-indexed)\n    Returns: iterator over sentences from filename\n    \"\"\"", "\n", "return", "self", ".", "iterate_filtered", "(", "filename", ",", "filter_ids", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.InputReader.count_sents": [[38, 47], ["RuntimeError"], "methods", ["None"], ["", "def", "count_sents", "(", "self", ",", "filename", ":", "str", ")", "->", "int", ":", "\n", "    ", "\"\"\"\n    Count the number of sentences in a data file.\n\n    Args:\n      filename: data file\n    Returns: number of sentences in the data file\n    \"\"\"", "\n", "raise", "RuntimeError", "(", "\"Input readers must implement the count_sents function\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.InputReader.needs_reload": [[48, 53], ["None"], "methods", ["None"], ["", "def", "needs_reload", "(", "self", ")", "->", "bool", ":", "\n", "    ", "\"\"\"\n    Overwrite this method if data needs to be reload for each epoch\n    \"\"\"", "\n", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.BaseTextReader.read_sent": [[56, 66], ["RuntimeError"], "methods", ["None"], ["  ", "def", "read_sent", "(", "self", ",", "line", ":", "str", ",", "idx", ":", "numbers", ".", "Integral", ")", "->", "sent", ".", "Sentence", ":", "\n", "    ", "\"\"\"\n    Convert a raw text line into an input object.\n\n    Args:\n      line: a single input string\n      idx: sentence number\n    Returns: a SentenceInput object for the input sentence\n    \"\"\"", "\n", "raise", "RuntimeError", "(", "\"Input readers must implement the read_sent function\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.BaseTextReader.count_sents": [[67, 74], ["functools.lru_cache", "open"], "methods", ["None"], ["", "@", "lru_cache", "(", "maxsize", "=", "128", ")", "\n", "def", "count_sents", "(", "self", ",", "filename", ")", ":", "\n", "    ", "newlines", "=", "0", "\n", "with", "open", "(", "filename", ",", "'r+b'", ")", "as", "f", ":", "\n", "      ", "for", "_", "in", "f", ":", "\n", "        ", "newlines", "+=", "1", "\n", "", "", "return", "newlines", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.BaseTextReader.iterate_filtered": [[75, 94], ["max", "set", "open", "input_readers.BaseTextReader.read_sent"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.IDReader.read_sent"], ["", "def", "iterate_filtered", "(", "self", ",", "filename", ",", "filter_ids", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n      filename: data file (text file)\n      filter_ids:\n    Returns: iterator over lines as strings (useful for subclasses to implement read_sents)\n    \"\"\"", "\n", "sent_count", "=", "0", "\n", "max_id", "=", "None", "\n", "if", "filter_ids", "is", "not", "None", ":", "\n", "      ", "max_id", "=", "max", "(", "filter_ids", ")", "\n", "filter_ids", "=", "set", "(", "filter_ids", ")", "\n", "", "with", "open", "(", "filename", ",", "encoding", "=", "'utf-8'", ")", "as", "f", ":", "\n", "      ", "for", "line", "in", "f", ":", "\n", "        ", "if", "filter_ids", "is", "None", "or", "sent_count", "in", "filter_ids", ":", "\n", "          ", "yield", "self", ".", "read_sent", "(", "line", "=", "line", ",", "idx", "=", "sent_count", ")", "\n", "", "sent_count", "+=", "1", "\n", "if", "max_id", "is", "not", "None", "and", "sent_count", ">", "max_id", ":", "\n", "          ", "break", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.PlainTextReader.__init__": [[113, 118], ["xnmt.output.OutputProcessor.get_output_processor"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.output.OutputProcessor.get_output_processor"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "vocab", ":", "Optional", "[", "Vocab", "]", "=", "None", ",", "read_sent_len", ":", "bool", "=", "False", ",", "output_proc", "=", "[", "]", ")", ":", "\n", "    ", "self", ".", "vocab", "=", "vocab", "\n", "self", ".", "read_sent_len", "=", "read_sent_len", "\n", "self", ".", "output_procs", "=", "output", ".", "OutputProcessor", ".", "get_output_processor", "(", "output_proc", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.PlainTextReader.read_sent": [[119, 131], ["xnmt.sent.ScalarSentence", "xnmt.sent.SimpleSentence", "len", "line.strip().split", "convert_fct", "line.strip", "line.strip().split", "line.strip"], "methods", ["None"], ["", "def", "read_sent", "(", "self", ",", "line", ",", "idx", ")", ":", "\n", "    ", "if", "self", ".", "vocab", ":", "\n", "      ", "convert_fct", "=", "self", ".", "vocab", ".", "convert", "\n", "", "else", ":", "\n", "      ", "convert_fct", "=", "convert_int", "\n", "", "if", "self", ".", "read_sent_len", ":", "\n", "      ", "return", "ScalarSentence", "(", "idx", "=", "idx", ",", "value", "=", "len", "(", "line", ".", "strip", "(", ")", ".", "split", "(", ")", ")", ")", "\n", "", "else", ":", "\n", "      ", "return", "SimpleSentence", "(", "idx", "=", "idx", ",", "\n", "words", "=", "[", "convert_fct", "(", "word", ")", "for", "word", "in", "line", ".", "strip", "(", ")", ".", "split", "(", ")", "]", "+", "[", "Vocab", ".", "ES", "]", ",", "\n", "vocab", "=", "self", ".", "vocab", ",", "\n", "output_procs", "=", "self", ".", "output_procs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.PlainTextReader.vocab_size": [[132, 134], ["len"], "methods", ["None"], ["", "", "def", "vocab_size", "(", "self", ")", ":", "\n", "    ", "return", "len", "(", "self", ".", "vocab", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.CompoundReader.__init__": [[149, 154], ["len", "ValueError"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "readers", ":", "Sequence", "[", "InputReader", "]", ",", "vocab", ":", "Optional", "[", "Vocab", "]", "=", "None", ")", "->", "None", ":", "\n", "    ", "if", "len", "(", "readers", ")", "<", "2", ":", "raise", "ValueError", "(", "\"need at least two readers\"", ")", "\n", "self", ".", "readers", "=", "readers", "\n", "if", "vocab", ":", "self", ".", "vocab", "=", "vocab", "\n", "", "def", "read_sents", "(", "self", ",", "filename", ":", "Union", "[", "str", ",", "Sequence", "[", "str", "]", "]", ",", "filter_ids", ":", "Sequence", "[", "numbers", ".", "Integral", "]", "=", "None", ")"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.CompoundReader.read_sents": [[154, 165], ["isinstance", "reader.read_sents", "len", "zip", "tuple", "xnmt.sent.CompoundSentence", "next"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.read_sents"], ["", "def", "read_sents", "(", "self", ",", "filename", ":", "Union", "[", "str", ",", "Sequence", "[", "str", "]", "]", ",", "filter_ids", ":", "Sequence", "[", "numbers", ".", "Integral", "]", "=", "None", ")", "->", "Iterator", "[", "sent", ".", "Sentence", "]", ":", "\n", "    ", "if", "isinstance", "(", "filename", ",", "str", ")", ":", "filename", "=", "[", "filename", "]", "*", "len", "(", "self", ".", "readers", ")", "\n", "generators", "=", "[", "reader", ".", "read_sents", "(", "filename", "=", "cur_filename", ",", "filter_ids", "=", "filter_ids", ")", "for", "(", "reader", ",", "cur_filename", ")", "in", "\n", "zip", "(", "self", ".", "readers", ",", "filename", ")", "]", "\n", "while", "True", ":", "\n", "      ", "try", ":", "\n", "        ", "sub_sents", "=", "tuple", "(", "[", "next", "(", "gen", ")", "for", "gen", "in", "generators", "]", ")", "\n", "yield", "CompoundSentence", "(", "sents", "=", "sub_sents", ")", "\n", "", "except", "StopIteration", ":", "\n", "        ", "return", "\n", "", "", "", "def", "count_sents", "(", "self", ",", "filename", ":", "str", ")", "->", "int", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.CompoundReader.count_sents": [[165, 167], ["input_readers.CompoundReader.readers[].count_sents", "isinstance"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.count_sents"], ["", "", "", "def", "count_sents", "(", "self", ",", "filename", ":", "str", ")", "->", "int", ":", "\n", "    ", "return", "self", ".", "readers", "[", "0", "]", ".", "count_sents", "(", "filename", "if", "isinstance", "(", "filename", ",", "str", ")", "else", "filename", "[", "0", "]", ")", "\n", "", "def", "needs_reload", "(", "self", ")", "->", "bool", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.CompoundReader.needs_reload": [[167, 169], ["any", "reader.needs_reload"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.CompoundReader.needs_reload"], ["", "def", "needs_reload", "(", "self", ")", "->", "bool", ":", "\n", "    ", "return", "any", "(", "reader", ".", "needs_reload", "(", ")", "for", "reader", "in", "self", ".", "readers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.SentencePieceTextReader.__init__": [[179, 201], ["spm.SentencePieceProcessor", "input_readers.SentencePieceTextReader.subword_model.Load", "xnmt.output.OutputProcessor.get_output_processor"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.output.OutputProcessor.get_output_processor"], ["@", "register_xnmt_handler", "\n", "@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "model_file", ",", "sample_train", "=", "False", ",", "l", "=", "-", "1", ",", "alpha", "=", "0.1", ",", "vocab", "=", "None", ",", "\n", "output_proc", "=", "[", "output", ".", "JoinPieceTextOutputProcessor", "]", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n      model_file: The sentence piece model file\n      sample_train: On the training set, sample outputs\n      l: The \"l\" parameter for subword regularization, how many sentences to sample\n      alpha: The \"alpha\" parameter for subword regularization, how much to smooth the distribution\n      vocab: The vocabulary\n      output_proc: output processors to revert the created sentences back to a readable string\n    \"\"\"", "\n", "import", "sentencepiece", "as", "spm", "\n", "self", ".", "subword_model", "=", "spm", ".", "SentencePieceProcessor", "(", ")", "\n", "self", ".", "subword_model", ".", "Load", "(", "model_file", ")", "\n", "self", ".", "sample_train", "=", "sample_train", "\n", "self", ".", "l", "=", "l", "\n", "self", ".", "alpha", "=", "alpha", "\n", "self", ".", "vocab", "=", "vocab", "\n", "self", ".", "train", "=", "False", "\n", "self", ".", "output_procs", "=", "output", ".", "OutputProcessor", ".", "get_output_processor", "(", "output_proc", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.SentencePieceTextReader.on_set_train": [[202, 205], ["None"], "methods", ["None"], ["", "@", "handle_xnmt_event", "\n", "def", "on_set_train", "(", "self", ",", "val", ")", ":", "\n", "    ", "self", ".", "train", "=", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.SentencePieceTextReader.read_sent": [[206, 216], ["xnmt.sent.SimpleSentence", "input_readers.SentencePieceTextReader.subword_model.SampleEncodeAsPieces", "input_readers.SentencePieceTextReader.subword_model.EncodeAsPieces", "w.decode", "line.strip", "line.strip", "input_readers.SentencePieceTextReader.vocab.convert", "input_readers.SentencePieceTextReader.vocab.convert"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.vocabs.Vocab.convert", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.vocabs.Vocab.convert"], ["", "def", "read_sent", "(", "self", ",", "line", ",", "idx", ")", ":", "\n", "    ", "if", "self", ".", "sample_train", "and", "self", ".", "train", ":", "\n", "      ", "words", "=", "self", ".", "subword_model", ".", "SampleEncodeAsPieces", "(", "line", ".", "strip", "(", ")", ",", "self", ".", "l", ",", "self", ".", "alpha", ")", "\n", "", "else", ":", "\n", "      ", "words", "=", "self", ".", "subword_model", ".", "EncodeAsPieces", "(", "line", ".", "strip", "(", ")", ")", "\n", "", "words", "=", "[", "w", ".", "decode", "(", "'utf-8'", ")", "for", "w", "in", "words", "]", "\n", "return", "SimpleSentence", "(", "idx", "=", "idx", ",", "\n", "words", "=", "[", "self", ".", "vocab", ".", "convert", "(", "word", ")", "for", "word", "in", "words", "]", "+", "[", "self", ".", "vocab", ".", "convert", "(", "Vocab", ".", "ES_STR", ")", "]", ",", "\n", "vocab", "=", "self", ".", "vocab", ",", "\n", "output_procs", "=", "self", ".", "output_procs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.SentencePieceTextReader.count_words": [[217, 225], ["type", "sum"], "methods", ["None"], ["", "def", "count_words", "(", "self", ",", "trg_words", ")", ":", "\n", "    ", "trg_cnt", "=", "0", "\n", "for", "x", "in", "trg_words", ":", "\n", "      ", "if", "type", "(", "x", ")", "==", "int", ":", "\n", "        ", "trg_cnt", "+=", "1", "if", "x", "!=", "Vocab", ".", "ES", "else", "0", "\n", "", "else", ":", "\n", "        ", "trg_cnt", "+=", "sum", "(", "[", "1", "if", "y", "!=", "Vocab", ".", "ES", "else", "0", "for", "y", "in", "x", "]", ")", "\n", "", "", "return", "trg_cnt", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.SentencePieceTextReader.vocab_size": [[226, 228], ["len"], "methods", ["None"], ["", "def", "vocab_size", "(", "self", ")", ":", "\n", "    ", "return", "len", "(", "self", ".", "vocab", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.CharFromWordTextReader.__init__": [[241, 246], ["xnmt.output.OutputProcessor.get_output_processor"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.output.OutputProcessor.get_output_processor"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "vocab", ":", "Vocab", "=", "None", ",", "read_sent_len", ":", "bool", "=", "False", ",", "output_proc", "=", "[", "]", ")", ":", "\n", "    ", "self", ".", "vocab", "=", "vocab", "\n", "self", ".", "read_sent_len", "=", "read_sent_len", "\n", "self", ".", "output_procs", "=", "output", ".", "OutputProcessor", ".", "get_output_processor", "(", "output_proc", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.CharFromWordTextReader.read_sent": [[247, 263], ["line.strip().split", "segs.append", "chars.append", "xnmt.sent.SegmentedSentence", "len", "segs.append", "chars.extend", "len", "line.strip", "input_readers.CharFromWordTextReader.vocab.convert"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.vocabs.Vocab.convert"], ["", "def", "read_sent", "(", "self", ",", "line", ",", "idx", ")", ":", "\n", "    ", "chars", "=", "[", "]", "\n", "segs", "=", "[", "]", "\n", "offset", "=", "0", "\n", "for", "word", "in", "line", ".", "strip", "(", ")", ".", "split", "(", ")", ":", "\n", "      ", "offset", "+=", "len", "(", "word", ")", "\n", "segs", ".", "append", "(", "offset", "-", "1", ")", "\n", "chars", ".", "extend", "(", "[", "c", "for", "c", "in", "word", "]", ")", "\n", "", "segs", ".", "append", "(", "len", "(", "chars", ")", ")", "\n", "chars", ".", "append", "(", "Vocab", ".", "ES_STR", ")", "\n", "sent_input", "=", "SegmentedSentence", "(", "segment", "=", "segs", ",", "\n", "words", "=", "[", "self", ".", "vocab", ".", "convert", "(", "c", ")", "for", "c", "in", "chars", "]", ",", "\n", "idx", "=", "idx", ",", "\n", "vocab", "=", "self", ".", "vocab", ",", "\n", "output_procs", "=", "self", ".", "output_procs", ")", "\n", "return", "sent_input", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.H5Reader.__init__": [[286, 300], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "transpose", ":", "bool", "=", "False", ",", "\n", "feat_from", ":", "Optional", "[", "numbers", ".", "Integral", "]", "=", "None", ",", "\n", "feat_to", ":", "Optional", "[", "numbers", ".", "Integral", "]", "=", "None", ",", "\n", "feat_skip", ":", "Optional", "[", "numbers", ".", "Integral", "]", "=", "None", ",", "\n", "timestep_skip", ":", "Optional", "[", "numbers", ".", "Integral", "]", "=", "None", ",", "\n", "timestep_truncate", ":", "Optional", "[", "numbers", ".", "Integral", "]", "=", "None", ")", ":", "\n", "    ", "self", ".", "transpose", "=", "transpose", "\n", "self", ".", "feat_from", "=", "feat_from", "\n", "self", ".", "feat_to", "=", "feat_to", "\n", "self", ".", "feat_skip", "=", "feat_skip", "\n", "self", ".", "timestep_skip", "=", "timestep_skip", "\n", "self", ".", "timestep_truncate", "=", "timestep_truncate", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.H5Reader.read_sents": [[301, 323], ["h5py.File", "sorted", "enumerate", "hf.keys", "sorted", "sorted.sort", "numpy.empty_like.transpose", "numpy.empty_like", "numpy.copyto", "xnmt.logger.info", "xnmt.sent.ArraySentence", "int", "int", "float", "len"], "methods", ["None"], ["", "def", "read_sents", "(", "self", ",", "filename", ",", "filter_ids", "=", "None", ")", ":", "\n", "    ", "with", "h5py", ".", "File", "(", "filename", ",", "\"r\"", ")", "as", "hf", ":", "\n", "      ", "h5_keys", "=", "sorted", "(", "hf", ".", "keys", "(", ")", ",", "key", "=", "lambda", "x", ":", "int", "(", "x", ")", ")", "\n", "if", "filter_ids", "is", "not", "None", ":", "\n", "        ", "filter_ids", "=", "sorted", "(", "filter_ids", ")", "\n", "h5_keys", "=", "[", "h5_keys", "[", "i", "]", "for", "i", "in", "filter_ids", "]", "\n", "h5_keys", ".", "sort", "(", "key", "=", "lambda", "x", ":", "int", "(", "x", ")", ")", "\n", "", "for", "sent_no", ",", "key", "in", "enumerate", "(", "h5_keys", ")", ":", "\n", "        ", "inp", "=", "hf", "[", "key", "]", "[", ":", "]", "\n", "if", "self", ".", "transpose", ":", "\n", "          ", "inp", "=", "inp", ".", "transpose", "(", ")", "\n", "\n", "", "sub_inp", "=", "inp", "[", "self", ".", "feat_from", ":", "self", ".", "feat_to", ":", "self", ".", "feat_skip", ",", ":", "self", ".", "timestep_truncate", ":", "self", ".", "timestep_skip", "]", "\n", "if", "sub_inp", ".", "size", "<", "inp", ".", "size", ":", "\n", "          ", "inp", "=", "np", ".", "empty_like", "(", "sub_inp", ")", "\n", "np", ".", "copyto", "(", "inp", ",", "sub_inp", ")", "\n", "", "else", ":", "\n", "          ", "inp", "=", "sub_inp", "\n", "\n", "", "if", "sent_no", "%", "1000", "==", "999", ":", "\n", "          ", "logger", ".", "info", "(", "f\"Read {sent_no+1} lines ({float(sent_no+1)/len(h5_keys)*100:.2f}%) of {filename} at {key}\"", ")", "\n", "", "yield", "ArraySentence", "(", "idx", "=", "filter_ids", "[", "sent_no", "]", "if", "filter_ids", "else", "sent_no", ",", "nparr", "=", "inp", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.H5Reader.count_sents": [[324, 328], ["h5py.File", "len", "hf.keys"], "methods", ["None"], ["", "", "", "def", "count_sents", "(", "self", ",", "filename", ")", ":", "\n", "    ", "with", "h5py", ".", "File", "(", "filename", ",", "\"r\"", ")", "as", "hf", ":", "\n", "      ", "l", "=", "len", "(", "hf", ".", "keys", "(", ")", ")", "\n", "", "return", "l", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.NpzReader.__init__": [[358, 372], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "transpose", ":", "bool", "=", "False", ",", "\n", "feat_from", ":", "Optional", "[", "numbers", ".", "Integral", "]", "=", "None", ",", "\n", "feat_to", ":", "Optional", "[", "numbers", ".", "Integral", "]", "=", "None", ",", "\n", "feat_skip", ":", "Optional", "[", "numbers", ".", "Integral", "]", "=", "None", ",", "\n", "timestep_skip", ":", "Optional", "[", "numbers", ".", "Integral", "]", "=", "None", ",", "\n", "timestep_truncate", ":", "Optional", "[", "numbers", ".", "Integral", "]", "=", "None", ")", ":", "\n", "    ", "self", ".", "transpose", "=", "transpose", "\n", "self", ".", "feat_from", "=", "feat_from", "\n", "self", ".", "feat_to", "=", "feat_to", "\n", "self", ".", "feat_skip", "=", "feat_skip", "\n", "self", ".", "timestep_skip", "=", "timestep_skip", "\n", "self", ".", "timestep_truncate", "=", "timestep_truncate", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.NpzReader.read_sents": [[373, 396], ["numpy.load", "sorted", "enumerate", "numpy.load.close", "sorted", "sorted.sort", "numpy.empty_like.transpose", "numpy.empty_like", "numpy.copyto", "xnmt.logger.info", "xnmt.sent.ArraySentence", "int", "int", "x.split", "x.split", "float", "len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.close"], ["", "def", "read_sents", "(", "self", ",", "filename", ",", "filter_ids", "=", "None", ")", ":", "\n", "    ", "npzFile", "=", "np", ".", "load", "(", "filename", ",", "mmap_mode", "=", "None", "if", "filter_ids", "is", "None", "else", "\"r\"", ")", "\n", "npzKeys", "=", "sorted", "(", "npzFile", ".", "files", ",", "key", "=", "lambda", "x", ":", "int", "(", "x", ".", "split", "(", "'_'", ")", "[", "-", "1", "]", ")", ")", "\n", "if", "filter_ids", "is", "not", "None", ":", "\n", "      ", "filter_ids", "=", "sorted", "(", "filter_ids", ")", "\n", "npzKeys", "=", "[", "npzKeys", "[", "i", "]", "for", "i", "in", "filter_ids", "]", "\n", "npzKeys", ".", "sort", "(", "key", "=", "lambda", "x", ":", "int", "(", "x", ".", "split", "(", "'_'", ")", "[", "-", "1", "]", ")", ")", "\n", "", "for", "sent_no", ",", "key", "in", "enumerate", "(", "npzKeys", ")", ":", "\n", "      ", "inp", "=", "npzFile", "[", "key", "]", "\n", "if", "self", ".", "transpose", ":", "\n", "        ", "inp", "=", "inp", ".", "transpose", "(", ")", "\n", "\n", "", "sub_inp", "=", "inp", "[", "self", ".", "feat_from", ":", "self", ".", "feat_to", ":", "self", ".", "feat_skip", ",", ":", "self", ".", "timestep_truncate", ":", "self", ".", "timestep_skip", "]", "\n", "if", "sub_inp", ".", "size", "<", "inp", ".", "size", ":", "\n", "        ", "inp", "=", "np", ".", "empty_like", "(", "sub_inp", ")", "\n", "np", ".", "copyto", "(", "inp", ",", "sub_inp", ")", "\n", "", "else", ":", "\n", "        ", "inp", "=", "sub_inp", "\n", "\n", "", "if", "sent_no", "%", "1000", "==", "999", ":", "\n", "        ", "logger", ".", "info", "(", "f\"Read {sent_no+1} lines ({float(sent_no+1)/len(npzKeys)*100:.2f}%) of {filename} at {key}\"", ")", "\n", "", "yield", "ArraySentence", "(", "idx", "=", "filter_ids", "[", "sent_no", "]", "if", "filter_ids", "else", "sent_no", ",", "nparr", "=", "inp", ")", "\n", "", "npzFile", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.NpzReader.count_sents": [[397, 402], ["numpy.load", "len", "numpy.load.close"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.close"], ["", "def", "count_sents", "(", "self", ",", "filename", ")", ":", "\n", "    ", "npz_file", "=", "np", ".", "load", "(", "filename", ",", "mmap_mode", "=", "\"r\"", ")", "# for counting sentences, only read the index", "\n", "l", "=", "len", "(", "npz_file", ".", "files", ")", "\n", "npz_file", ".", "close", "(", ")", "\n", "return", "l", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.IDReader.__init__": [[411, 414], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ")", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.IDReader.read_sent": [[415, 417], ["xnmt.sent.ScalarSentence", "int", "line.strip"], "methods", ["None"], ["", "def", "read_sent", "(", "self", ",", "line", ",", "idx", ")", ":", "\n", "    ", "return", "ScalarSentence", "(", "idx", "=", "idx", ",", "value", "=", "int", "(", "line", ".", "strip", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.IDReader.read_sents": [[418, 420], ["input_readers.IDReader.iterate_filtered"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.BaseTextReader.iterate_filtered"], ["", "def", "read_sents", "(", "self", ",", "filename", ",", "filter_ids", "=", "None", ")", ":", "\n", "    ", "return", "[", "l", "for", "l", "in", "self", ".", "iterate_filtered", "(", "filename", ",", "filter_ids", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.convert_int": [[95, 100], ["int", "ValueError"], "function", ["None"], ["", "", "", "", "", "def", "convert_int", "(", "x", ")", ":", "\n", "  ", "try", ":", "\n", "    ", "return", "int", "(", "x", ")", "\n", "", "except", "ValueError", ":", "\n", "    ", "raise", "ValueError", "(", "f\"Expecting integer tokens because no vocab was set. Got: '{x}'\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.read_parallel_corpus": [[422, 485], ["src_reader.read_sents", "trg_reader.read_sents", "itertools.zip_longest", "xnmt.logger.info", "xnmt.logger.info", "xnmt.logger.info", "src_reader.count_sents", "trg_reader.count_sents", "numpy.random.choice", "xnmt.logger.info", "batcher.pack", "RuntimeError", "RuntimeError", "src_data.append", "trg_data.append", "len", "src_sent.sent_len", "trg_sent.sent_len", "src_reader.count_sents", "trg_reader.count_sents"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.read_sents", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.read_sents", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.count_sents", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.count_sents", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.SortBatcher.pack", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.count_sents", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.count_sents"], ["", "", "def", "read_parallel_corpus", "(", "src_reader", ":", "InputReader", ",", "\n", "trg_reader", ":", "InputReader", ",", "\n", "src_file", ":", "str", ",", "\n", "trg_file", ":", "str", ",", "\n", "batcher", ":", "batchers", ".", "Batcher", "=", "None", ",", "\n", "sample_sents", ":", "Optional", "[", "numbers", ".", "Integral", "]", "=", "None", ",", "\n", "max_num_sents", ":", "Optional", "[", "numbers", ".", "Integral", "]", "=", "None", ",", "\n", "max_src_len", ":", "Optional", "[", "numbers", ".", "Integral", "]", "=", "None", ",", "\n", "max_trg_len", ":", "Optional", "[", "numbers", ".", "Integral", "]", "=", "None", ")", "->", "tuple", ":", "\n", "  ", "\"\"\"\n  A utility function to read a parallel corpus.\n\n  Args:\n    src_reader:\n    trg_reader:\n    src_file:\n    trg_file:\n    batcher:\n    sample_sents: if not None, denote the number of sents that should be randomly chosen from all available sents.\n    max_num_sents: if not None, read only the first this many sents\n    max_src_len: skip pair if src side is too long\n    max_trg_len: skip pair if trg side is too long\n\n  Returns:\n    A tuple of (src_data, trg_data, src_batches, trg_batches) where ``*_batches = *_data`` if ``batcher=None``\n  \"\"\"", "\n", "src_data", "=", "[", "]", "\n", "trg_data", "=", "[", "]", "\n", "if", "sample_sents", ":", "\n", "    ", "logger", ".", "info", "(", "f\"Starting to read {sample_sents} parallel sentences of {src_file} and {trg_file}\"", ")", "\n", "src_len", "=", "src_reader", ".", "count_sents", "(", "src_file", ")", "\n", "trg_len", "=", "trg_reader", ".", "count_sents", "(", "trg_file", ")", "\n", "if", "src_len", "!=", "trg_len", ":", "raise", "RuntimeError", "(", "f\"training src sentences don't match trg sentences: {src_len} != {trg_len}!\"", ")", "\n", "if", "max_num_sents", "and", "max_num_sents", "<", "src_len", ":", "src_len", "=", "trg_len", "=", "max_num_sents", "\n", "filter_ids", "=", "np", ".", "random", ".", "choice", "(", "src_len", ",", "sample_sents", ",", "replace", "=", "False", ")", "\n", "", "else", ":", "\n", "    ", "logger", ".", "info", "(", "f\"Starting to read {src_file} and {trg_file}\"", ")", "\n", "filter_ids", "=", "None", "\n", "src_len", ",", "trg_len", "=", "0", ",", "0", "\n", "", "src_train_iterator", "=", "src_reader", ".", "read_sents", "(", "src_file", ",", "filter_ids", ")", "\n", "trg_train_iterator", "=", "trg_reader", ".", "read_sents", "(", "trg_file", ",", "filter_ids", ")", "\n", "for", "src_sent", ",", "trg_sent", "in", "zip_longest", "(", "src_train_iterator", ",", "trg_train_iterator", ")", ":", "\n", "    ", "if", "src_sent", "is", "None", "or", "trg_sent", "is", "None", ":", "\n", "      ", "raise", "RuntimeError", "(", "f\"training src sentences don't match trg sentences: {src_len or src_reader.count_sents(src_file)} != {trg_len or trg_reader.count_sents(trg_file)}!\"", ")", "\n", "", "if", "max_num_sents", "and", "(", "max_num_sents", "<=", "len", "(", "src_data", ")", ")", ":", "\n", "      ", "break", "\n", "", "src_len_ok", "=", "max_src_len", "is", "None", "or", "src_sent", ".", "sent_len", "(", ")", "<=", "max_src_len", "\n", "trg_len_ok", "=", "max_trg_len", "is", "None", "or", "trg_sent", ".", "sent_len", "(", ")", "<=", "max_trg_len", "\n", "if", "src_len_ok", "and", "trg_len_ok", ":", "\n", "      ", "src_data", ".", "append", "(", "src_sent", ")", "\n", "trg_data", ".", "append", "(", "trg_sent", ")", "\n", "\n", "", "", "logger", ".", "info", "(", "f\"Done reading {src_file} and {trg_file}. Packing into batches.\"", ")", "\n", "\n", "# Pack batches", "\n", "if", "batcher", "is", "not", "None", ":", "\n", "    ", "src_batches", ",", "trg_batches", "=", "batcher", ".", "pack", "(", "src_data", ",", "trg_data", ")", "\n", "", "else", ":", "\n", "    ", "src_batches", ",", "trg_batches", "=", "src_data", ",", "trg_data", "\n", "\n", "", "logger", ".", "info", "(", "f\"Done packing batches.\"", ")", "\n", "\n", "return", "src_data", ",", "trg_data", ",", "src_batches", ",", "trg_batches", "\n", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sentence_stats.SentenceStats.__init__": [[6, 11], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "      ", "self", ".", "src_stat", "=", "{", "}", "\n", "self", ".", "trg_stat", "=", "{", "}", "\n", "self", ".", "max_pairs", "=", "1000000", "\n", "self", ".", "num_pair", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sentence_stats.SentenceStats.add_sent_pair_length": [[21, 31], ["sentence_stats.SentenceStats.src_stat.get", "sentence_stats.SentenceStats.trg_stat.get", "sentence_stats.SentenceStats.SourceLengthStat", "sentence_stats.SentenceStats.trg_len_distribution.get", "sentence_stats.SentenceStats.TargetLengthStat"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.UninitializedYamlObject.get", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.UninitializedYamlObject.get", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.UninitializedYamlObject.get"], ["", "", "def", "add_sent_pair_length", "(", "self", ",", "src_length", ",", "trg_length", ")", ":", "\n", "      ", "src_len_stat", "=", "self", ".", "src_stat", ".", "get", "(", "src_length", ",", "self", ".", "SourceLengthStat", "(", ")", ")", "\n", "src_len_stat", ".", "num_sents", "+=", "1", "\n", "src_len_stat", ".", "trg_len_distribution", "[", "trg_length", "]", "=", "src_len_stat", ".", "trg_len_distribution", ".", "get", "(", "trg_length", ",", "0", ")", "+", "1", "\n", "self", ".", "src_stat", "[", "src_length", "]", "=", "src_len_stat", "\n", "\n", "trg_len_stat", "=", "self", ".", "trg_stat", ".", "get", "(", "trg_length", ",", "self", ".", "TargetLengthStat", "(", ")", ")", "\n", "trg_len_stat", ".", "num_sents", "+=", "1", "\n", "self", ".", "trg_stat", "[", "trg_length", "]", "=", "trg_len_stat", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sentence_stats.SentenceStats.populate_statistics": [[32, 38], ["min", "enumerate", "len", "zip", "sentence_stats.SentenceStats.add_sent_pair_length", "len", "len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sentence_stats.SentenceStats.add_sent_pair_length"], ["", "def", "populate_statistics", "(", "self", ",", "train_corpus_src", ",", "train_corpus_trg", ")", ":", "\n", "      ", "self", ".", "num_pair", "=", "min", "(", "len", "(", "train_corpus_src", ")", ",", "self", ".", "max_pairs", ")", "\n", "for", "sent_num", ",", "(", "src", ",", "trg", ")", "in", "enumerate", "(", "zip", "(", "train_corpus_src", ",", "train_corpus_trg", ")", ")", ":", "\n", "          ", "self", ".", "add_sent_pair_length", "(", "len", "(", "src", ")", ",", "len", "(", "trg", ")", ")", "\n", "if", "sent_num", ">", "self", ".", "max_pairs", ":", "\n", "              ", "return", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.ParamInitializer.initializer": [[16, 26], ["NotImplementedError"], "methods", ["None"], ["def", "initializer", "(", "self", ",", "dim", ":", "Tuple", "[", "numbers", ".", "Integral", "]", ",", "is_lookup", ":", "bool", "=", "False", ",", "num_shared", ":", "numbers", ".", "Integral", "=", "1", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n      dim: dimension of parameter tensor\n      is_lookup: True if parameters are a lookup matrix\n      num_shared: Indicates if one parameter object holds multiple matrices\n    Returns:\n      a dynet initializer object\n    \"\"\"", "\n", "raise", "NotImplementedError", "(", "\"ParamInitializer subclasses must implement initializer()\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.NormalInitializer.__init__": [[41, 45], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "mean", ":", "numbers", ".", "Real", "=", "0", ",", "var", ":", "numbers", ".", "Real", "=", "1", ")", ":", "\n", "    ", "self", ".", "mean", "=", "mean", "\n", "self", ".", "var", "=", "var", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.NormalInitializer.initializer": [[46, 48], ["dynet.NormalInitializer"], "methods", ["None"], ["", "def", "initializer", "(", "self", ",", "dim", ":", "Tuple", "[", "numbers", ".", "Integral", "]", ",", "is_lookup", ":", "bool", "=", "False", ",", "num_shared", ":", "numbers", ".", "Integral", "=", "1", ")", ":", "\n", "    ", "return", "dy", ".", "NormalInitializer", "(", "mean", "=", "self", ".", "mean", ",", "var", "=", "self", ".", "var", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.UniformInitializer.__init__": [[59, 62], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "scale", ":", "numbers", ".", "Real", ")", ":", "\n", "    ", "self", ".", "scale", "=", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.UniformInitializer.initializer": [[63, 65], ["dynet.UniformInitializer"], "methods", ["None"], ["", "def", "initializer", "(", "self", ",", "dim", ":", "Tuple", "[", "numbers", ".", "Integral", "]", ",", "is_lookup", ":", "bool", "=", "False", ",", "num_shared", ":", "numbers", ".", "Integral", "=", "1", ")", ":", "\n", "    ", "return", "dy", ".", "UniformInitializer", "(", "scale", "=", "self", ".", "scale", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.ConstInitializer.__init__": [[77, 80], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "c", ":", "numbers", ".", "Real", ")", ":", "\n", "    ", "self", ".", "c", "=", "c", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.ConstInitializer.initializer": [[81, 83], ["dynet.ConstInitializer"], "methods", ["None"], ["", "def", "initializer", "(", "self", ",", "dim", ":", "Tuple", "[", "numbers", ".", "Integral", "]", ",", "is_lookup", ":", "bool", "=", "False", ",", "num_shared", ":", "numbers", ".", "Integral", "=", "1", ")", ":", "\n", "    ", "return", "dy", ".", "ConstInitializer", "(", "c", "=", "self", ".", "c", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.GlorotInitializer.__init__": [[108, 111], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "gain", ":", "numbers", ".", "Real", "=", "1.0", ")", ":", "\n", "    ", "self", ".", "gain", "=", "gain", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.GlorotInitializer.initializer": [[112, 131], ["getattr", "dynet.GlorotInitializer", "list", "dynet.UniformInitializer", "math.sqrt", "math.sqrt", "sum", "len"], "methods", ["None"], ["", "def", "initializer", "(", "self", ",", "dim", ":", "Tuple", "[", "numbers", ".", "Integral", "]", ",", "is_lookup", ":", "bool", "=", "False", ",", "num_shared", ":", "numbers", ".", "Integral", "=", "1", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n      dim: dimensions of parameter tensor\n      is_lookup : Whether the parameter is a lookup parameter\n      num_shared: If > 1, treat the first dimension as spanning multiple matrices, each of which is initialized individually\n    Returns:\n      a dynet initializer object\n    \"\"\"", "\n", "gain", "=", "getattr", "(", "self", ",", "\"gain\"", ",", "1.0", ")", "\n", "if", "num_shared", "==", "1", ":", "\n", "      ", "return", "dy", ".", "GlorotInitializer", "(", "gain", "=", "gain", ",", "is_lookup", "=", "is_lookup", ")", "\n", "", "else", ":", "\n", "      ", "per_param_dims", "=", "list", "(", "dim", ")", "\n", "assert", "per_param_dims", "[", "0", "]", "%", "num_shared", "==", "0", "\n", "per_param_dims", "[", "0", "]", "//=", "num_shared", "\n", "if", "is_lookup", ":", "per_param_dims", "=", "per_param_dims", "[", ":", "-", "1", "]", "\n", "scale", "=", "gain", "*", "math", ".", "sqrt", "(", "3.0", "*", "len", "(", "per_param_dims", ")", ")", "/", "math", ".", "sqrt", "(", "sum", "(", "per_param_dims", ")", ")", "\n", "return", "dy", ".", "UniformInitializer", "(", "scale", "=", "scale", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.FromFileInitializer.__init__": [[143, 146], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "fname", ":", "str", ")", ":", "\n", "    ", "self", ".", "fname", "=", "fname", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.FromFileInitializer.initializer": [[147, 149], ["dynet.FromFileInitializer"], "methods", ["None"], ["", "def", "initializer", "(", "self", ",", "dim", ":", "Tuple", "[", "numbers", ".", "Integral", "]", ",", "is_lookup", ":", "bool", "=", "False", ",", "num_shared", ":", "numbers", ".", "Integral", "=", "1", ")", ":", "\n", "    ", "return", "dy", ".", "FromFileInitializer", "(", "fname", "=", "self", ".", "fname", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.NumpyInitializer.__init__": [[163, 166], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "array", ":", "np", ".", "ndarray", ")", ":", "\n", "    ", "self", ".", "array", "=", "array", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.NumpyInitializer.initializer": [[167, 169], ["dynet.NumpyInitializer"], "methods", ["None"], ["", "def", "initializer", "(", "self", ",", "dim", ":", "Tuple", "[", "numbers", ".", "Integral", "]", ",", "is_lookup", ":", "bool", "=", "False", ",", "num_shared", ":", "numbers", ".", "Integral", "=", "1", ")", ":", "\n", "    ", "return", "dy", ".", "NumpyInitializer", "(", "array", "=", "self", ".", "array", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.ZeroInitializer.__init__": [[179, 182], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ")", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.ZeroInitializer.initializer": [[183, 185], ["dynet.ConstInitializer"], "methods", ["None"], ["", "def", "initializer", "(", "self", ",", "dim", ":", "Tuple", "[", "numbers", ".", "Integral", "]", ",", "is_lookup", ":", "bool", "=", "False", ",", "num_shared", ":", "numbers", ".", "Integral", "=", "1", ")", ":", "\n", "    ", "return", "dy", ".", "ConstInitializer", "(", "c", "=", "0.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.__init__": [[196, 199], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "scale", ":", "numbers", ".", "Real", "=", "1.0", ")", ":", "\n", "    ", "self", ".", "scale", "=", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer": [[200, 207], ["dynet.UniformInitializer", "numpy.sqrt"], "methods", ["None"], ["", "def", "initializer", "(", "self", ",", "dim", ":", "Tuple", "[", "numbers", ".", "Integral", "]", ",", "is_lookup", ":", "bool", "=", "False", ",", "num_shared", ":", "numbers", ".", "Integral", "=", "1", ")", ":", "\n", "    ", "if", "is_lookup", ":", "\n", "      ", "fan_in", "=", "dim", "[", "0", "]", "\n", "", "else", ":", "\n", "      ", "fan_in", "=", "dim", "[", "-", "1", "]", "\n", "", "s", "=", "self", ".", "scale", "*", "np", ".", "sqrt", "(", "3.", "/", "fan_in", ")", "\n", "return", "dy", ".", "UniformInitializer", "(", "s", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.plotting.plot_attention": [[9, 58], ["isinstance", "len", "matplotlib.subplots", "ax.set_xticks", "ax.set_yticks", "ax.invert_yaxis", "ax.set_xticklabels", "ax.xaxis.tick_top", "matplotlib.pcolor", "matplotlib.colorbar", "xnmt.utils.make_parent_dir", "matplotlib.savefig", "matplotlib.close", "unidecode.unidecode", "max", "matplotlib.rc", "matplotlib.rc", "matplotlib.yticks", "ax.set_yticklabels", "plotting.plot_speech_features", "fig.tight_layout", "len", "unidecode.unidecode", "matplotlib.rc", "matplotlib.rc", "numpy.arange", "numpy.arange"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.make_parent_dir", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.close", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.plotting.plot_speech_features"], ["def", "plot_attention", "(", "src_words", ",", "trg_words", ",", "attention_matrix", ",", "file_name", ",", "size_x", "=", "8.0", ",", "size_y", "=", "8.0", ")", ":", "\n", "  ", "\"\"\"This takes in source and target words and an attention matrix (in numpy format)\n  and prints a visualization of this to a file.\n\n  Args:\n    src_words: a list of words in the source\n    trg_words: a list of target words\n    attention_matrix: a two-dimensional numpy array of values between zero and one,\n      where rows correspond to source words, and columns correspond to target words\n    file_name: the name of the file to which we write the attention\n    size_x: width of the main plot\n    size_y: height of the plot\n  \"\"\"", "\n", "trg_words", "=", "[", "unidecode", "(", "w", ")", "for", "w", "in", "trg_words", "]", "\n", "src_is_speech", "=", "isinstance", "(", "src_words", ",", "np", ".", "ndarray", ")", "\n", "max_len", "=", "len", "(", "''", ".", "join", "(", "trg_words", ")", ")", "\n", "if", "not", "src_is_speech", ":", "\n", "    ", "max_len", "=", "max", "(", "max_len", ",", "len", "(", "''", ".", "join", "(", "src_words", ")", ")", ")", "\n", "src_words", "=", "[", "unidecode", "(", "w", ")", "for", "w", "in", "src_words", "]", "\n", "", "if", "max_len", ">", "150", ":", "matplotlib", ".", "rc", "(", "'font'", ",", "size", "=", "5", ")", "\n", "elif", "max_len", ">", "50", ":", "matplotlib", ".", "rc", "(", "'font'", ",", "size", "=", "7", ")", "\n", "dpi", "=", "100", "if", "max_len", "<=", "150", "else", "150", "\n", "fig", ",", "axs", "=", "plt", ".", "subplots", "(", "nrows", "=", "1", ",", "ncols", "=", "2", "if", "src_is_speech", "else", "1", ",", "\n", "figsize", "=", "(", "size_x", "+", "(", "1.0", "if", "src_is_speech", "else", "0.0", ")", ",", "size_y", ")", ",", "\n", "gridspec_kw", "=", "{", "'width_ratios'", ":", "[", "1", ",", "size_x", "]", "}", "if", "src_is_speech", "else", "None", ")", "\n", "ax", "=", "axs", "[", "1", "]", "if", "src_is_speech", "else", "axs", "\n", "# put the major ticks at the middle of each cell", "\n", "ax", ".", "set_xticks", "(", "np", ".", "arange", "(", "attention_matrix", ".", "shape", "[", "1", "]", ")", "+", "0.5", ",", "minor", "=", "False", ")", "\n", "ax", ".", "set_yticks", "(", "np", ".", "arange", "(", "attention_matrix", ".", "shape", "[", "0", "]", ")", "+", "0.5", ",", "minor", "=", "False", ")", "\n", "ax", ".", "invert_yaxis", "(", ")", "\n", "if", "src_is_speech", ":", "plt", ".", "yticks", "(", "[", "]", ",", "[", "]", ")", "\n", "\n", "# label axes by words", "\n", "ax", ".", "set_xticklabels", "(", "trg_words", ",", "minor", "=", "False", ")", "\n", "if", "not", "src_is_speech", ":", "ax", ".", "set_yticklabels", "(", "src_words", ",", "minor", "=", "False", ")", "\n", "ax", ".", "xaxis", ".", "tick_top", "(", ")", "\n", "\n", "# draw the heatmap", "\n", "plt", ".", "pcolor", "(", "attention_matrix", ",", "cmap", "=", "plt", ".", "cm", ".", "Blues", ",", "vmin", "=", "0", ",", "vmax", "=", "1", ")", "\n", "plt", ".", "colorbar", "(", ")", "\n", "\n", "if", "src_is_speech", ":", "\n", "    ", "ax", "=", "axs", "[", "0", "]", "\n", "plot_speech_features", "(", "feature_matrix", "=", "src_words", ",", "ax", "=", "ax", ",", "dpi", "=", "dpi", ")", "\n", "fig", ".", "tight_layout", "(", ")", "\n", "\n", "", "utils", ".", "make_parent_dir", "(", "file_name", ")", "\n", "plt", ".", "savefig", "(", "file_name", ",", "dpi", "=", "dpi", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.plotting.plot_speech_features": [[60, 85], ["matplotlib.subplots", "ax.pcolor", "ax.axis", "matplotlib.pcolor", "matplotlib.axis", "xnmt.utils.make_parent_dir", "matplotlib.savefig", "matplotlib.close"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.make_parent_dir", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.close"], ["", "def", "plot_speech_features", "(", "feature_matrix", ",", "file_name", "=", "None", ",", "vertical", "=", "True", ",", "ax", "=", "None", ",", "length", "=", "8.0", ",", "dpi", "=", "100", ")", ":", "\n", "  ", "\"\"\"Plot speech feature matrix.\n\n  Args:\n    feature_matrix: a two-dimensional numpy array of values between zero and one,\n      where rows correspond to source words, and columns correspond to target words\n    file_name: the name of the file to which we write the attention; if not given, the plt context will be left un-closed\n    vertical: if True, the time dimension will be projected onto the y axis, otherwise the x axis\n    ax: if given, draw on this matplotlib axis; otherwise create a new figure\n    length: figure length (if ax is not given)\n    dpi: plot resolution\n  \"\"\"", "\n", "if", "not", "ax", ":", "\n", "    ", "plt", ".", "subplots", "(", "figsize", "=", "(", "1.0", ",", "length", ")", ")", "\n", "", "if", "vertical", ":", "feature_matrix", "=", "feature_matrix", "[", ":", ",", ":", ":", "-", "1", "]", ".", "T", "\n", "if", "ax", ":", "\n", "    ", "ax", ".", "pcolor", "(", "feature_matrix", ",", "cmap", "=", "plt", ".", "cm", ".", "jet", ",", "vmin", "=", "-", "1", ",", "vmax", "=", "1", ")", "\n", "ax", ".", "axis", "(", "'off'", ")", "\n", "", "else", ":", "\n", "    ", "plt", ".", "pcolor", "(", "feature_matrix", ",", "cmap", "=", "plt", ".", "cm", ".", "jet", ",", "vmin", "=", "-", "1", ",", "vmax", "=", "1", ")", "\n", "plt", ".", "axis", "(", "'off'", ")", "\n", "", "if", "file_name", "is", "not", "None", ":", "\n", "    ", "utils", ".", "make_parent_dir", "(", "file_name", ")", "\n", "plt", ".", "savefig", "(", "file_name", ",", "dpi", "=", "dpi", ")", "\n", "plt", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.xnmt_decode.main": [[8, 32], ["argparse.ArgumentParser", "xnmt.utils.add_dynet_argparse", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "os.path.dirname", "xnmt.param_collections.ParamManager.init_param_col", "xnmt.persistence.LoadSerialized", "xnmt.persistence.YamlPreloader.preload_obj", "xnmt.persistence.initialize_if_needed", "xnmt.param_collections.ParamManager.populate", "xnmt.eval.tasks.DecodingEvalTask", "tasks.DecodingEvalTask.eval"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.utils.add_dynet_argparse", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.reload_example.parse_args", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.init_param_col", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader.preload_obj", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.initialize_if_needed", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.populate", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.tasks.DecodingEvalTask.eval"], ["def", "main", "(", ")", ":", "\n", "  ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "utils", ".", "add_dynet_argparse", "(", "parser", ")", "\n", "parser", ".", "add_argument", "(", "\"--src\"", ",", "help", "=", "f\"Path of source file to read from.\"", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\"--hyp\"", ",", "help", "=", "\"Path of file to write hypothesis to.\"", ",", "required", "=", "True", ")", "\n", "parser", ".", "add_argument", "(", "\"--mod\"", ",", "help", "=", "\"Path of model file to read.\"", ",", "required", "=", "True", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "exp_dir", "=", "os", ".", "path", ".", "dirname", "(", "__file__", ")", "\n", "exp", "=", "\"{EXP}\"", "\n", "\n", "param_collections", ".", "ParamManager", ".", "init_param_col", "(", ")", "\n", "\n", "# TODO: can we avoid the LoadSerialized proxy and load stuff directly?", "\n", "load_experiment", "=", "persistence", ".", "LoadSerialized", "(", "filename", "=", "args", ".", "mod", ")", "\n", "\n", "uninitialized_experiment", "=", "persistence", ".", "YamlPreloader", ".", "preload_obj", "(", "load_experiment", ",", "exp_dir", "=", "exp_dir", ",", "exp_name", "=", "exp", ")", "\n", "loaded_experiment", "=", "persistence", ".", "initialize_if_needed", "(", "uninitialized_experiment", ")", "\n", "model", "=", "loaded_experiment", ".", "model", "\n", "inference", "=", "model", ".", "inference", "\n", "param_collections", ".", "ParamManager", ".", "populate", "(", ")", "\n", "\n", "decoding_task", "=", "tasks", ".", "DecodingEvalTask", "(", "args", ".", "src", ",", "args", ".", "hyp", ",", "model", ",", "inference", ")", "\n", "decoding_task", ".", "eval", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.inferences.Inference.__init__": [[36, 50], ["xnmt.persistence.bare"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare"], ["@", "events", ".", "register_xnmt_handler", "\n", "def", "__init__", "(", "self", ",", "src_file", ":", "Optional", "[", "str", "]", "=", "None", ",", "trg_file", ":", "Optional", "[", "str", "]", "=", "None", ",", "ref_file", ":", "Optional", "[", "str", "]", "=", "None", ",", "\n", "max_src_len", ":", "Optional", "[", "int", "]", "=", "None", ",", "max_num_sents", ":", "Optional", "[", "int", "]", "=", "None", ",", "\n", "mode", ":", "str", "=", "\"onebest\"", ",", "\n", "batcher", ":", "batchers", ".", "InOrderBatcher", "=", "bare", "(", "batchers", ".", "InOrderBatcher", ",", "batch_size", "=", "1", ")", ",", "\n", "reporter", ":", "Union", "[", "None", ",", "reports", ".", "Reporter", ",", "Sequence", "[", "reports", ".", "Reporter", "]", "]", "=", "None", ")", ":", "\n", "    ", "self", ".", "src_file", "=", "src_file", "\n", "self", ".", "trg_file", "=", "trg_file", "\n", "self", ".", "ref_file", "=", "ref_file", "\n", "self", ".", "max_src_len", "=", "max_src_len", "\n", "self", ".", "max_num_sents", "=", "max_num_sents", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "batcher", "=", "batcher", "\n", "self", ".", "reporter", "=", "reporter", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.inferences.Inference.generate_one": [[51, 54], ["NotImplementedError"], "methods", ["None"], ["", "def", "generate_one", "(", "self", ",", "generator", ":", "'models.GeneratorModel'", ",", "src", ":", "batchers", ".", "Batch", ",", "forced_ref_ids", ")", "->", "List", "[", "sent", ".", "ReadableSentence", "]", ":", "\n", "    ", "raise", "NotImplementedError", "(", "\"must be implemented by subclasses\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.inferences.Inference.compute_losses_one": [[55, 58], ["NotImplementedError"], "methods", ["None"], ["", "def", "compute_losses_one", "(", "self", ",", "generator", ":", "'models.GeneratorModel'", ",", "src", ":", "sent", ".", "Sentence", ",", "\n", "ref", ":", "sent", ".", "Sentence", ")", "->", "losses", ".", "FactoredLossExpr", ":", "\n", "    ", "raise", "NotImplementedError", "(", "\"must be implemented by subclasses\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.inferences.Inference.perform_inference": [[60, 92], ["xnmt.utils.make_parent_dir", "xnmt.logger.info", "inferences.Inference._read_corpus", "xnmt.event_trigger.set_train", "inferences.Inference._compute_losses", "inferences.Inference._write_rescored_output", "inferences.Inference._compute_losses", "inferences.Inference._generate_output"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.make_parent_dir", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.inferences.Inference._read_corpus", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.set_train", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.inferences.Inference._compute_losses", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.inferences.Inference._write_rescored_output", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.inferences.Inference._compute_losses", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.inferences.Inference._generate_output"], ["", "def", "perform_inference", "(", "self", ",", "generator", ":", "'models.GeneratorModel'", ",", "src_file", ":", "str", "=", "None", ",", "trg_file", ":", "str", "=", "None", ")", "->", "None", ":", "\n", "    ", "\"\"\"\n    Perform inference.\n\n    Args:\n      generator: the model to be used\n      src_file: path of input src file to be translated\n      trg_file: path of file where trg translatons will be written\n    \"\"\"", "\n", "src_file", "=", "src_file", "or", "self", ".", "src_file", "\n", "trg_file", "=", "trg_file", "or", "self", ".", "trg_file", "\n", "utils", ".", "make_parent_dir", "(", "trg_file", ")", "\n", "\n", "logger", ".", "info", "(", "f'Performing inference on {src_file}'", ")", "\n", "\n", "ref_corpus", ",", "src_corpus", "=", "self", ".", "_read_corpus", "(", "generator", ",", "src_file", ",", "mode", "=", "self", ".", "mode", ",", "ref_file", "=", "self", ".", "ref_file", ")", "\n", "\n", "event_trigger", ".", "set_train", "(", "False", ")", "\n", "\n", "ref_scores", "=", "None", "\n", "if", "self", ".", "mode", "==", "'score'", ":", "\n", "      ", "ref_scores", "=", "self", ".", "_compute_losses", "(", "generator", ",", "ref_corpus", ",", "src_corpus", ",", "self", ".", "max_num_sents", ")", "\n", "self", ".", "_write_rescored_output", "(", "ref_scores", ",", "self", ".", "ref_file", ",", "trg_file", ")", "\n", "\n", "", "if", "self", ".", "mode", "==", "'forceddebug'", ":", "\n", "      ", "ref_scores", "=", "self", ".", "_compute_losses", "(", "generator", ",", "ref_corpus", ",", "src_corpus", ",", "self", ".", "max_num_sents", ")", "\n", "\n", "", "if", "self", ".", "mode", "!=", "'score'", ":", "\n", "      ", "self", ".", "_generate_output", "(", "generator", "=", "generator", ",", "forced_ref_corpus", "=", "ref_corpus", ",", "assert_scores", "=", "ref_scores", ",", "\n", "src_corpus", "=", "src_corpus", ",", "trg_file", "=", "trg_file", ",", "batcher", "=", "self", ".", "batcher", ",", "\n", "max_src_len", "=", "self", ".", "max_src_len", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.inferences.Inference._generate_output": [[94, 142], ["open", "enumerate", "batcher.pack", "batcher.pack", "src_batch.batch_size", "src_batch.sent_len", "inferences.Inference._conclude_report", "fp.write", "xnmt.utils.ReportOnException", "dynet.renew_cg", "inferences.Inference.generate_one", "range", "inferences.Inference._create_sent_report", "len", "outputs[].sent_str", "fp.write", "len", "ValueError", "abs", "abs"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.SortBatcher.pack", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.SortBatcher.pack", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.batch_size", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.inferences.Inference._conclude_report", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.write", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.inferences.CascadeInference.generate_one", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.inferences.Inference._create_sent_report", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.NbestSentence.sent_str", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.write"], ["", "", "def", "_generate_output", "(", "self", ",", "generator", ":", "'models.GeneratorModel'", ",", "src_corpus", ":", "Sequence", "[", "sent", ".", "Sentence", "]", ",", "\n", "trg_file", ":", "str", ",", "batcher", ":", "Optional", "[", "batchers", ".", "Batcher", "]", "=", "None", ",", "max_src_len", ":", "Optional", "[", "int", "]", "=", "None", ",", "\n", "forced_ref_corpus", ":", "Optional", "[", "Sequence", "[", "sent", ".", "Sentence", "]", "]", "=", "None", ",", "\n", "assert_scores", ":", "Optional", "[", "Sequence", "[", "numbers", ".", "Real", "]", "]", "=", "None", ")", "->", "None", ":", "\n", "    ", "\"\"\"\n    Generate outputs and write them to file.\n\n    Args:\n      generator: generator model to use\n      src_corpus: src-side inputs to generate outputs for\n      trg_file: file to write outputs to\n      batcher: necessary with some cases of input pre-processing such as padding or truncation\n      max_src_len: if given, skip inputs that are too long\n      forced_ref_corpus: if given, perform forced decoding with the given trg-side inputs\n      assert_scores: if given, raise exception if the scores for generated outputs don't match the given scores\n    \"\"\"", "\n", "with", "open", "(", "trg_file", ",", "'wt'", ",", "encoding", "=", "'utf-8'", ")", "as", "fp", ":", "# Saving the translated output to a trg file", "\n", "      ", "if", "forced_ref_corpus", ":", "\n", "        ", "src_batches", ",", "ref_batches", "=", "batcher", ".", "pack", "(", "src_corpus", ",", "forced_ref_corpus", ")", "\n", "", "else", ":", "\n", "        ", "src_batches", "=", "batcher", ".", "pack", "(", "src_corpus", ",", "None", ")", "\n", "", "cur_sent_i", "=", "0", "\n", "ref_batch", "=", "None", "\n", "for", "batch_i", ",", "src_batch", "in", "enumerate", "(", "src_batches", ")", ":", "\n", "        ", "batch_size", "=", "src_batch", ".", "batch_size", "(", ")", "\n", "src_len", "=", "src_batch", ".", "sent_len", "(", ")", "\n", "if", "max_src_len", "is", "not", "None", "and", "src_len", ">", "max_src_len", ":", "\n", "          ", "output_txt", "=", "\"\\n\"", ".", "join", "(", "[", "NO_DECODING_ATTEMPTED", "]", "*", "batch_size", ")", "\n", "fp", ".", "write", "(", "f\"{output_txt}\\n\"", ")", "\n", "", "else", ":", "\n", "          ", "if", "forced_ref_corpus", ":", "ref_batch", "=", "ref_batches", "[", "batch_i", "]", "\n", "with", "utils", ".", "ReportOnException", "(", "{", "\"batchno\"", ":", "batch_i", ",", "\"src\"", ":", "src_batch", ",", "\"graph\"", ":", "utils", ".", "print_cg_conditional", "}", ")", ":", "\n", "            ", "dy", ".", "renew_cg", "(", "immediate_compute", "=", "settings", ".", "IMMEDIATE_COMPUTE", ",", "check_validity", "=", "settings", ".", "CHECK_VALIDITY", ")", "\n", "outputs", "=", "self", ".", "generate_one", "(", "generator", ",", "src_batch", ",", "ref_batch", ")", "\n", "if", "self", ".", "reporter", ":", "self", ".", "_create_sent_report", "(", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "outputs", ")", ")", ":", "\n", "              ", "if", "assert_scores", "is", "not", "None", ":", "\n", "# If debugging forced decoding, make sure it matches", "\n", "                ", "assert", "batch_size", "==", "len", "(", "outputs", ")", ",", "\"debug forced decoding not supported with nbest inference\"", "\n", "if", "(", "abs", "(", "outputs", "[", "i", "]", ".", "score", "-", "assert_scores", "[", "cur_sent_i", "+", "i", "]", ")", "/", "abs", "(", "assert_scores", "[", "cur_sent_i", "+", "i", "]", ")", ")", ">", "1e-5", ":", "\n", "                  ", "raise", "ValueError", "(", "\n", "f'Forced decoding score {outputs[0].score} and loss {assert_scores[cur_sent_i + i]} do not match at '", "\n", "f'sentence {cur_sent_i + i}'", ")", "\n", "", "", "output_txt", "=", "outputs", "[", "i", "]", ".", "sent_str", "(", "custom_output_procs", "=", "self", ".", "post_processor", ")", "\n", "fp", ".", "write", "(", "f\"{output_txt}\\n\"", ")", "\n", "", "", "", "cur_sent_i", "+=", "batch_size", "\n", "if", "self", ".", "max_num_sents", "and", "cur_sent_i", ">=", "self", ".", "max_num_sents", ":", "break", "\n", "", "if", "self", ".", "reporter", ":", "self", ".", "_conclude_report", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.inferences.Inference._create_sent_report": [[143, 151], ["xnmt.event_trigger.get_report_input", "isinstance", "xnmt.reports.ReportInfo", "reporter.create_sent_report"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.get_report_input", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.OOVStatisticsReporter.create_sent_report"], ["", "", "def", "_create_sent_report", "(", "self", ")", ":", "\n", "    ", "assert", "self", ".", "reporter", "is", "not", "None", "\n", "if", "not", "isinstance", "(", "self", ".", "reporter", ",", "collections", ".", "abc", ".", "Iterable", ")", ":", "\n", "      ", "self", ".", "reporter", "=", "[", "self", ".", "reporter", "]", "\n", "", "report_context", "=", "event_trigger", ".", "get_report_input", "(", "context", "=", "reports", ".", "ReportInfo", "(", ")", ")", "\n", "for", "report_input", "in", "report_context", ".", "sent_info", ":", "\n", "      ", "for", "reporter", "in", "self", ".", "reporter", ":", "\n", "        ", "reporter", ".", "create_sent_report", "(", "**", "report_input", ",", "**", "report_context", ".", "glob_info", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.inferences.Inference._conclude_report": [[152, 158], ["isinstance", "reporter.conclude_report"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.OOVStatisticsReporter.conclude_report"], ["", "", "", "def", "_conclude_report", "(", "self", ")", ":", "\n", "    ", "assert", "self", ".", "reporter", "is", "not", "None", "\n", "if", "not", "isinstance", "(", "self", ".", "reporter", ",", "collections", ".", "abc", ".", "Iterable", ")", ":", "\n", "      ", "self", ".", "reporter", "=", "[", "self", ".", "reporter", "]", "\n", "", "for", "reporter", "in", "self", ".", "reporter", ":", "\n", "      ", "reporter", ".", "conclude_report", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.inferences.Inference._compute_losses": [[159, 172], ["inferences.Inference.batcher.pack", "enumerate", "zip", "dynet.renew_cg", "inferences.Inference.compute_losses_one", "isinstance", "inferences.Inference.value", "ref_scores.extend", "ref_scores.append", "inferences.Inference.value", "inferences.Inference.value"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.SortBatcher.pack", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.inferences.CascadeInference.compute_losses_one", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value"], ["", "", "def", "_compute_losses", "(", "self", ",", "generator", ",", "ref_corpus", ",", "src_corpus", ",", "max_num_sents", ")", "->", "List", "[", "numbers", ".", "Real", "]", ":", "\n", "    ", "batched_src", ",", "batched_ref", "=", "self", ".", "batcher", ".", "pack", "(", "src_corpus", ",", "ref_corpus", ")", "\n", "ref_scores", "=", "[", "]", "\n", "for", "sent_count", ",", "(", "src", ",", "ref", ")", "in", "enumerate", "(", "zip", "(", "batched_src", ",", "batched_ref", ")", ")", ":", "\n", "      ", "if", "max_num_sents", "and", "sent_count", ">=", "max_num_sents", ":", "break", "\n", "dy", ".", "renew_cg", "(", "immediate_compute", "=", "settings", ".", "IMMEDIATE_COMPUTE", ",", "check_validity", "=", "settings", ".", "CHECK_VALIDITY", ")", "\n", "loss", "=", "self", ".", "compute_losses_one", "(", "generator", ",", "src", ",", "ref", ")", "\n", "if", "isinstance", "(", "loss", ".", "value", "(", ")", ",", "collections", ".", "abc", ".", "Iterable", ")", ":", "\n", "        ", "ref_scores", ".", "extend", "(", "loss", ".", "value", "(", ")", ")", "\n", "", "else", ":", "\n", "        ", "ref_scores", ".", "append", "(", "loss", ".", "value", "(", ")", ")", "\n", "", "", "ref_scores", "=", "[", "-", "x", "for", "x", "in", "ref_scores", "]", "\n", "return", "ref_scores", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.inferences.Inference._write_rescored_output": [[174, 188], ["open", "open", "zip", "fp.write", "nbest.strip"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.write"], ["", "@", "staticmethod", "\n", "def", "_write_rescored_output", "(", "ref_scores", ":", "Sequence", "[", "numbers", ".", "Real", "]", ",", "ref_file", ":", "str", ",", "trg_file", ":", "str", ")", "->", "None", ":", "\n", "    ", "\"\"\"\n    Write scored sequences and scores to file when mode=='score'.\n\n    Args:\n      ref_scores: list of score values\n      ref_file: filename where sequences to be scored a read from\n      trg_file: filename to write to\n    \"\"\"", "\n", "with", "open", "(", "trg_file", ",", "'wt'", ",", "encoding", "=", "'utf-8'", ")", "as", "fp", ":", "\n", "      ", "with", "open", "(", "ref_file", ",", "\"r\"", ",", "encoding", "=", "\"utf-8\"", ")", "as", "nbest_fp", ":", "\n", "        ", "for", "nbest", ",", "score", "in", "zip", "(", "nbest_fp", ",", "ref_scores", ")", ":", "\n", "          ", "fp", ".", "write", "(", "\"{} ||| score={}\\n\"", ".", "format", "(", "nbest", ".", "strip", "(", ")", ",", "score", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.inferences.Inference._read_corpus": [[189, 216], ["list", "generator.src_reader.read_sents", "RuntimeError", "open", "enumerate", "ref_corpus.append", "line.split", "int", "score_src_corpus.append", "generator.trg_reader.read_sent", "generator.trg_reader.read_sent", "len", "nbest[].strip", "len", "len", "nbest[].strip"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.read_sents", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.IDReader.read_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.IDReader.read_sent"], ["", "", "", "", "@", "staticmethod", "\n", "def", "_read_corpus", "(", "generator", ":", "'models.GeneratorModel'", ",", "src_file", ":", "str", ",", "mode", ":", "str", ",", "ref_file", ":", "str", ")", "->", "Tuple", "[", "List", ",", "List", "]", ":", "\n", "    ", "src_corpus", "=", "list", "(", "generator", ".", "src_reader", ".", "read_sents", "(", "src_file", ")", ")", "\n", "# Get reference if it exists and is necessary", "\n", "if", "mode", "==", "\"forced\"", "or", "mode", "==", "\"forceddebug\"", "or", "mode", "==", "\"score\"", ":", "\n", "      ", "if", "ref_file", "is", "None", ":", "\n", "        ", "raise", "RuntimeError", "(", "f\"When performing '{mode}' decoding, must specify reference file\"", ")", "\n", "", "score_src_corpus", "=", "[", "]", "\n", "ref_corpus", "=", "[", "]", "\n", "with", "open", "(", "ref_file", ",", "\"r\"", ",", "encoding", "=", "\"utf-8\"", ")", "as", "fp", ":", "\n", "        ", "for", "idx", ",", "line", "in", "enumerate", "(", "fp", ")", ":", "\n", "          ", "if", "mode", "==", "\"score\"", ":", "\n", "            ", "nbest", "=", "line", ".", "split", "(", "\"|||\"", ")", "\n", "assert", "len", "(", "nbest", ")", ">", "1", ",", "\"When performing scoring, ref_file must have nbest format 'index ||| hypothesis'\"", "\n", "src_index", "=", "int", "(", "nbest", "[", "0", "]", ".", "strip", "(", ")", ")", "\n", "assert", "src_index", "<", "len", "(", "src_corpus", ")", ",", "f\"The src_file has only {len(src_corpus)} instances, nbest file has invalid src_index {src_index}\"", "\n", "score_src_corpus", ".", "append", "(", "src_corpus", "[", "src_index", "]", ")", "\n", "trg_input", "=", "generator", ".", "trg_reader", ".", "read_sent", "(", "idx", "=", "idx", ",", "line", "=", "nbest", "[", "1", "]", ".", "strip", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "trg_input", "=", "generator", ".", "trg_reader", ".", "read_sent", "(", "idx", "=", "idx", ",", "line", "=", "line", ")", "\n", "", "ref_corpus", ".", "append", "(", "trg_input", ")", "\n", "", "", "if", "mode", "==", "\"score\"", ":", "\n", "        ", "src_corpus", "=", "score_src_corpus", "\n", "", "", "else", ":", "\n", "      ", "ref_corpus", "=", "None", "\n", "", "return", "ref_corpus", ",", "src_corpus", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.inferences.IndependentOutputInference.__init__": [[244, 254], ["xnmt.persistence.bare", "inferences.Inference.__init__", "xnmt.output.OutputProcessor.get_output_processor"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.output.OutputProcessor.get_output_processor"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "src_file", ":", "Optional", "[", "str", "]", "=", "None", ",", "trg_file", ":", "Optional", "[", "str", "]", "=", "None", ",", "ref_file", ":", "Optional", "[", "str", "]", "=", "None", ",", "\n", "max_src_len", ":", "Optional", "[", "int", "]", "=", "None", ",", "max_num_sents", ":", "Optional", "[", "int", "]", "=", "None", ",", "\n", "post_process", ":", "Union", "[", "None", ",", "str", ",", "output", ".", "OutputProcessor", ",", "Sequence", "[", "output", ".", "OutputProcessor", "]", "]", "=", "None", ",", "\n", "mode", ":", "str", "=", "\"onebest\"", ",", "\n", "batcher", ":", "batchers", ".", "InOrderBatcher", "=", "bare", "(", "batchers", ".", "InOrderBatcher", ",", "batch_size", "=", "1", ")", ",", "\n", "reporter", ":", "Union", "[", "None", ",", "reports", ".", "Reporter", ",", "Sequence", "[", "reports", ".", "Reporter", "]", "]", "=", "None", ")", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "src_file", "=", "src_file", ",", "trg_file", "=", "trg_file", ",", "ref_file", "=", "ref_file", ",", "max_src_len", "=", "max_src_len", ",", "\n", "max_num_sents", "=", "max_num_sents", ",", "mode", "=", "mode", ",", "batcher", "=", "batcher", ",", "reporter", "=", "reporter", ")", "\n", "self", ".", "post_processor", "=", "output", ".", "OutputProcessor", ".", "get_output_processor", "(", "post_process", ")", "or", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.inferences.IndependentOutputInference.generate_one": [[255, 259], ["generator.generate"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.generate"], ["", "def", "generate_one", "(", "self", ",", "generator", ":", "'models.GeneratorModel'", ",", "src", ":", "batchers", ".", "Batch", ",", "forced_ref_ids", ")", "->", "List", "[", "sent", ".", "Sentence", "]", ":", "\n", "    ", "outputs", "=", "generator", ".", "generate", "(", "src", ",", "forced_trg_ids", "=", "forced_ref_ids", ")", "\n", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.inferences.IndependentOutputInference.compute_losses_one": [[260, 264], ["xnmt.loss_calculators.MLELoss().calc_loss", "xnmt.loss_calculators.MLELoss"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_encoder.DualEncoderSimilarity.calc_loss"], ["", "def", "compute_losses_one", "(", "self", ",", "generator", ":", "'models.GeneratorModel'", ",", "src", ":", "sent", ".", "Sentence", ",", "\n", "ref", ":", "sent", ".", "Sentence", ")", "->", "losses", ".", "FactoredLossExpr", ":", "\n", "    ", "loss_expr", "=", "loss_calculators", ".", "MLELoss", "(", ")", ".", "calc_loss", "(", "generator", ",", "src", ",", "ref", ")", "\n", "return", "loss_expr", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.inferences.AutoRegressiveInference.__init__": [[292, 305], ["xnmt.persistence.bare", "xnmt.persistence.bare", "inferences.Inference.__init__", "xnmt.output.OutputProcessor.get_output_processor"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.output.OutputProcessor.get_output_processor"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "src_file", ":", "Optional", "[", "str", "]", "=", "None", ",", "trg_file", ":", "Optional", "[", "str", "]", "=", "None", ",", "ref_file", ":", "Optional", "[", "str", "]", "=", "None", ",", "\n", "max_src_len", ":", "Optional", "[", "int", "]", "=", "None", ",", "max_num_sents", ":", "Optional", "[", "int", "]", "=", "None", ",", "\n", "post_process", ":", "Union", "[", "str", ",", "output", ".", "OutputProcessor", ",", "Sequence", "[", "output", ".", "OutputProcessor", "]", "]", "=", "[", "]", ",", "\n", "search_strategy", ":", "search_strategies", ".", "SearchStrategy", "=", "bare", "(", "search_strategies", ".", "BeamSearch", ")", ",", "\n", "mode", ":", "str", "=", "\"onebest\"", ",", "\n", "batcher", ":", "batchers", ".", "InOrderBatcher", "=", "bare", "(", "batchers", ".", "InOrderBatcher", ",", "batch_size", "=", "1", ")", ",", "\n", "reporter", ":", "Union", "[", "None", ",", "reports", ".", "Reporter", ",", "Sequence", "[", "reports", ".", "Reporter", "]", "]", "=", "None", ")", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "src_file", "=", "src_file", ",", "trg_file", "=", "trg_file", ",", "ref_file", "=", "ref_file", ",", "max_src_len", "=", "max_src_len", ",", "\n", "max_num_sents", "=", "max_num_sents", ",", "mode", "=", "mode", ",", "batcher", "=", "batcher", ",", "reporter", "=", "reporter", ")", "\n", "\n", "self", ".", "post_processor", "=", "output", ".", "OutputProcessor", ".", "get_output_processor", "(", "post_process", ")", "or", "None", "\n", "self", ".", "search_strategy", "=", "search_strategy", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.inferences.AutoRegressiveInference.generate_one": [[306, 310], ["generator.generate"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.generate"], ["", "def", "generate_one", "(", "self", ",", "generator", ":", "'models.GeneratorModel'", ",", "src", ":", "batchers", ".", "Batch", ",", "forced_ref_ids", ")", "->", "List", "[", "sent", ".", "Sentence", "]", ":", "\n", "    ", "outputs", "=", "generator", ".", "generate", "(", "src", ",", "forced_trg_ids", "=", "forced_ref_ids", ",", "search_strategy", "=", "self", ".", "search_strategy", ")", "\n", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.inferences.AutoRegressiveInference.compute_losses_one": [[311, 315], ["xnmt.loss_calculators.MLELoss().calc_loss", "xnmt.loss_calculators.MLELoss"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_encoder.DualEncoderSimilarity.calc_loss"], ["", "def", "compute_losses_one", "(", "self", ",", "generator", ":", "'models.GeneratorModel'", ",", "src", ":", "sent", ".", "Sentence", ",", "\n", "ref", ":", "sent", ".", "Sentence", ")", "->", "losses", ".", "FactoredLossExpr", ":", "\n", "    ", "loss_expr", "=", "loss_calculators", ".", "MLELoss", "(", ")", ".", "calc_loss", "(", "generator", ",", "src", ",", "ref", ")", "\n", "return", "loss_expr", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.inferences.CascadeInference.__init__": [[329, 332], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "steps", ":", "Sequence", "[", "Inference", "]", ")", "->", "None", ":", "\n", "    ", "self", ".", "steps", "=", "steps", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.inferences.CascadeInference.perform_inference": [[333, 343], ["isinstance", "enumerate", "len", "len", "step.perform_inference", "range", "len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.inferences.CascadeInference.perform_inference"], ["", "def", "perform_inference", "(", "self", ",", "generator", ":", "'models.CascadeGenerator'", ",", "src_file", ":", "str", "=", "None", ",", "trg_file", ":", "str", "=", "None", ")", "->", "None", ":", "\n", "    ", "assert", "isinstance", "(", "generator", ",", "models", ".", "CascadeGenerator", ")", "\n", "assert", "len", "(", "generator", ".", "generators", ")", "==", "len", "(", "self", ".", "steps", ")", "\n", "src_files", "=", "[", "src_file", "]", "+", "[", "f\"{trg_file}.tmp.{i}\"", "for", "i", "in", "range", "(", "len", "(", "self", ".", "steps", ")", "-", "1", ")", "]", "\n", "trg_files", "=", "src_files", "[", "1", ":", "]", "+", "[", "trg_file", "]", "\n", "for", "step_i", ",", "step", "in", "enumerate", "(", "self", ".", "steps", ")", ":", "\n", "      ", "step", ".", "perform_inference", "(", "generator", "=", "generator", ".", "generators", "[", "step_i", "]", ",", "\n", "src_file", "=", "src_files", "[", "step_i", "]", ",", "\n", "trg_file", "=", "trg_files", "[", "step_i", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.inferences.CascadeInference.compute_losses_one": [[344, 346], ["ValueError"], "methods", ["None"], ["", "", "def", "compute_losses_one", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "raise", "ValueError", "(", "\"cannot call CascadedInference.compute_losses_one() directly, use the sub-inference objects\"", ")", "\n", "", "def", "generate_one", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.inferences.CascadeInference.generate_one": [[346, 348], ["ValueError"], "methods", ["None"], ["", "def", "generate_one", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "raise", "ValueError", "(", "\"cannot call CascadedInference.generate_one() directly, use the sub-inference objects\"", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.events.clear": [[45, 52], ["set"], "function", ["None"], ["def", "clear", "(", ")", ":", "\n", "  ", "\"\"\"\n  clear handler (mostly useful to remove side effects when running a series of unit tests)\n  \"\"\"", "\n", "global", "handler_instances", ",", "handler_method_names", ",", "event_names", "\n", "handler_instances", "=", "[", "]", "\n", "handler_method_names", "=", "set", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.events.register_xnmt_handler": [[57, 63], ["functools.wraps", "f", "handler_instances.append"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["def", "register_xnmt_handler", "(", "f", ")", ":", "\n", "  ", "@", "wraps", "(", "f", ")", "\n", "def", "wrapper", "(", "obj", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "f", "(", "obj", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "handler_instances", ".", "append", "(", "obj", ")", "\n", "", "return", "wrapper", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.events.register_xnmt_event": [[64, 78], ["functools.wraps", "event_names.add", "f", "getattr", "getattr.", "RuntimeError", "type", "len"], "function", ["None"], ["", "def", "register_xnmt_event", "(", "f", ")", ":", "\n", "  ", "@", "wraps", "(", "f", ")", "\n", "def", "wrapper", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "assert", "handler_method_names", "<=", "event_names", ",", "\"detected handler for non-existant event: {}\"", ".", "format", "(", "\n", "handler_method_names", "-", "event_names", ")", "\n", "f", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "for", "handler", "in", "handler_instances", ":", "\n", "      ", "bound_handler", "=", "getattr", "(", "handler", ",", "\"on_\"", "+", "f", ".", "__name__", ",", "None", ")", "\n", "if", "bound_handler", ":", "\n", "        ", "ret", "=", "bound_handler", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "if", "type", "(", "ret", ")", "!=", "tuple", "or", "len", "(", "ret", ")", "!=", "2", "or", "ret", "[", "1", "]", "[", "3", ":", "]", "!=", "f", ".", "__name__", ":", "\n", "          ", "raise", "RuntimeError", "(", "\"attempted to call unregistered handler {}\"", ".", "format", "(", "f", ".", "__name__", ")", ")", "\n", "", "", "", "", "event_names", ".", "add", "(", "f", ".", "__name__", ")", "\n", "return", "wrapper", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.events.register_xnmt_event_assign": [[79, 96], ["functools.wraps", "event_names.add", "f", "getattr", "getattr.", "RuntimeError", "type", "len"], "function", ["None"], ["", "def", "register_xnmt_event_assign", "(", "f", ")", ":", "\n", "  ", "@", "wraps", "(", "f", ")", "\n", "def", "wrapper", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "assert", "\"context\"", "in", "kwargs", ",", "\"register_xnmt_event_assign requires \\\"context\\\" in kwargs\"", "\n", "assert", "handler_method_names", "<=", "event_names", ",", "\"detected handler for non-existant event: {}\"", ".", "format", "(", "\n", "handler_method_names", "-", "event_names", ")", "\n", "kwargs", "[", "\"context\"", "]", "=", "f", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "for", "handler", "in", "handler_instances", ":", "\n", "      ", "bound_handler", "=", "getattr", "(", "handler", ",", "\"on_\"", "+", "f", ".", "__name__", ",", "None", ")", "\n", "if", "bound_handler", ":", "\n", "        ", "ret", "=", "bound_handler", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "if", "type", "(", "ret", ")", "!=", "tuple", "or", "len", "(", "ret", ")", "!=", "2", "or", "ret", "[", "1", "]", "[", "3", ":", "]", "!=", "f", ".", "__name__", ":", "\n", "          ", "raise", "RuntimeError", "(", "\"attempted to call unregistered handler {}\"", ".", "format", "(", "f", ".", "__name__", ")", ")", "\n", "", "kwargs", "[", "\"context\"", "]", "=", "ret", "[", "0", "]", "\n", "", "", "return", "kwargs", "[", "\"context\"", "]", "\n", "", "event_names", ".", "add", "(", "f", ".", "__name__", ")", "\n", "return", "wrapper", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.events.register_xnmt_event_sum": [[97, 115], ["functools.wraps", "event_names.add", "f", "getattr", "getattr.", "RuntimeError", "type", "len"], "function", ["None"], ["", "def", "register_xnmt_event_sum", "(", "f", ")", ":", "\n", "  ", "@", "wraps", "(", "f", ")", "\n", "def", "wrapper", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "assert", "handler_method_names", "<=", "event_names", ",", "\"detected handler for non-existant event: {}\"", ".", "format", "(", "\n", "handler_method_names", "-", "event_names", ")", "\n", "res", "=", "f", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "for", "handler", "in", "handler_instances", ":", "\n", "      ", "bound_handler", "=", "getattr", "(", "handler", ",", "\"on_\"", "+", "f", ".", "__name__", ",", "None", ")", "\n", "if", "bound_handler", ":", "\n", "        ", "ret", "=", "bound_handler", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "if", "type", "(", "ret", ")", "!=", "tuple", "or", "len", "(", "ret", ")", "!=", "2", "or", "ret", "[", "1", "]", "[", "3", ":", "]", "!=", "f", ".", "__name__", ":", "\n", "          ", "raise", "RuntimeError", "(", "\"attempted to call unregistered handler {}\"", ".", "format", "(", "f", ".", "__name__", ")", ")", "\n", "", "tmp", "=", "ret", "[", "0", "]", "\n", "if", "res", "is", "None", ":", "res", "=", "tmp", "\n", "elif", "tmp", "is", "not", "None", ":", "res", "=", "res", "+", "tmp", "\n", "", "", "return", "res", "\n", "", "event_names", ".", "add", "(", "f", ".", "__name__", ")", "\n", "return", "wrapper", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.events.handle_xnmt_event": [[116, 127], ["functools.wraps", "f.__name__.startswith", "handler_method_names.add", "f", "xnmt.logger.error"], "function", ["None"], ["", "def", "handle_xnmt_event", "(", "f", ")", ":", "\n", "  ", "@", "wraps", "(", "f", ")", "\n", "def", "wrapper", "(", "obj", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "try", ":", "\n", "      ", "return", "f", "(", "obj", ",", "*", "args", ",", "**", "kwargs", ")", ",", "f", ".", "__name__", "\n", "", "except", ":", "\n", "      ", "logger", ".", "error", "(", "\"Error handling xnmt event at object:\"", ",", "obj", ".", "__class__", ".", "__name__", ")", "\n", "raise", "\n", "", "", "assert", "f", ".", "__name__", ".", "startswith", "(", "\"on_\"", ")", ",", "\"xnmt event handlers must be named on_*, found {}\"", ".", "format", "(", "f", ".", "__name__", ")", "\n", "handler_method_names", ".", "add", "(", "f", ".", "__name__", "[", "3", ":", "]", ")", "\n", "return", "wrapper", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.Sentence.__init__": [[19, 22], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "idx", ":", "Optional", "[", "int", "]", "=", "None", ",", "score", ":", "Optional", "[", "numbers", ".", "Real", "]", "=", "None", ")", "->", "None", ":", "\n", "    ", "self", ".", "idx", "=", "idx", "\n", "self", ".", "score", "=", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.Sentence.sent_len": [[23, 30], ["NotImplementedError"], "methods", ["None"], ["", "def", "sent_len", "(", "self", ")", "->", "int", ":", "\n", "    ", "\"\"\"\n    Return length of input, included padded tokens.\n\n    Returns: length\n    \"\"\"", "\n", "raise", "NotImplementedError", "(", "\"must be implemented by subclasses\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.Sentence.len_unpadded": [[31, 37], ["None"], "methods", ["None"], ["", "def", "len_unpadded", "(", "self", ")", "->", "int", ":", "\n", "    ", "\"\"\"\n    Return length of input prior to applying any padding.\n\n    Returns: unpadded length\n    \"\"\"", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.Sentence.create_padded_sent": [[38, 48], ["NotImplementedError"], "methods", ["None"], ["", "def", "create_padded_sent", "(", "self", ",", "pad_len", ":", "numbers", ".", "Integral", ")", "->", "'Sentence'", ":", "\n", "    ", "\"\"\"\n    Return a new, padded version of the sentence (or self if pad_len is zero).\n\n    Args:\n      pad_len: number of tokens to append\n    Returns:\n      padded sentence\n    \"\"\"", "\n", "raise", "NotImplementedError", "(", "\"must be implemented by subclasses\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.Sentence.create_truncated_sent": [[49, 59], ["NotImplementedError"], "methods", ["None"], ["", "def", "create_truncated_sent", "(", "self", ",", "trunc_len", ":", "numbers", ".", "Integral", ")", "->", "'Sentence'", ":", "\n", "    ", "\"\"\"\n    Create a new, right-truncated version of the sentence (or self if trunc_len is zero).\n\n    Args:\n      trunc_len: number of tokens to truncate\n    Returns:\n      truncated sentence\n    \"\"\"", "\n", "raise", "NotImplementedError", "(", "\"must be implemented by subclasses\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ReadableSentence.__init__": [[69, 73], ["sent.Sentence.__init__"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__"], ["def", "__init__", "(", "self", ",", "idx", ":", "numbers", ".", "Integral", ",", "score", ":", "Optional", "[", "numbers", ".", "Real", "]", "=", "None", ",", "\n", "output_procs", ":", "Union", "[", "OutputProcessor", ",", "Sequence", "[", "OutputProcessor", "]", "]", "=", "[", "]", ")", "->", "None", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "idx", "=", "idx", ",", "score", "=", "score", ")", "\n", "self", ".", "output_procs", "=", "output_procs", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ReadableSentence.str_tokens": [[74, 84], ["NotImplementedError"], "methods", ["None"], ["", "def", "str_tokens", "(", "self", ",", "**", "kwargs", ")", "->", "List", "[", "str", "]", ":", "\n", "    ", "\"\"\"\n    Return list of readable string tokens.\n\n    Args:\n      **kwargs: should accept arbitrary keyword args\n\n    Returns: list of tokens.\n    \"\"\"", "\n", "raise", "NotImplementedError", "(", "\"must be implemented by subclasses\"", ")", "\n", "", "def", "sent_str", "(", "self", ",", "custom_output_procs", "=", "None", ",", "**", "kwargs", ")", "->", "str", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ReadableSentence.sent_str": [[84, 102], ["isinstance", "sent.ReadableSentence.str_tokens", "pp.process"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.SimpleSentence.str_tokens", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.output.JoinPieceTextOutputProcessor.process"], ["", "def", "sent_str", "(", "self", ",", "custom_output_procs", "=", "None", ",", "**", "kwargs", ")", "->", "str", ":", "\n", "    ", "\"\"\"\n    Return a single string containing the readable version of the sentence.\n\n    Args:\n      custom_output_procs: if not None, overwrite the sentence's default output processors\n      **kwargs: should accept arbitrary keyword args\n\n    Returns: readable string\n    \"\"\"", "\n", "out_str", "=", "\" \"", ".", "join", "(", "self", ".", "str_tokens", "(", "**", "kwargs", ")", ")", "\n", "pps", "=", "self", ".", "output_procs", "\n", "if", "custom_output_procs", "is", "not", "None", ":", "\n", "      ", "pps", "=", "custom_output_procs", "\n", "", "if", "isinstance", "(", "pps", ",", "OutputProcessor", ")", ":", "pps", "=", "[", "pps", "]", "\n", "for", "pp", "in", "pps", ":", "\n", "      ", "out_str", "=", "pp", ".", "process", "(", "out_str", ")", "\n", "", "return", "out_str", "\n", "", "def", "__repr__", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ReadableSentence.__repr__": [[102, 104], ["sent.ReadableSentence.sent_str"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.NbestSentence.sent_str"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "    ", "return", "f'\"{self.sent_str()}\"'", "\n", "", "def", "__str__", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ReadableSentence.__str__": [[104, 106], ["sent.ReadableSentence.sent_str"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.NbestSentence.sent_str"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "sent_str", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ScalarSentence.__init__": [[119, 124], ["sent.ReadableSentence.__init__"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__"], ["def", "__init__", "(", "self", ",", "value", ":", "numbers", ".", "Integral", ",", "idx", ":", "Optional", "[", "numbers", ".", "Integral", "]", "=", "None", ",", "vocab", ":", "Optional", "[", "Vocab", "]", "=", "None", ",", "\n", "score", ":", "Optional", "[", "numbers", ".", "Real", "]", "=", "None", ")", "->", "None", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "idx", "=", "idx", ",", "score", "=", "score", ")", "\n", "self", ".", "value", "=", "value", "\n", "self", ".", "vocab", "=", "vocab", "\n", "", "def", "sent_len", "(", "self", ")", "->", "int", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ScalarSentence.sent_len": [[124, 126], ["None"], "methods", ["None"], ["", "def", "sent_len", "(", "self", ")", "->", "int", ":", "\n", "    ", "return", "1", "\n", "", "def", "len_unpadded", "(", "self", ")", "->", "int", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ScalarSentence.len_unpadded": [[126, 128], ["None"], "methods", ["None"], ["", "def", "len_unpadded", "(", "self", ")", "->", "int", ":", "\n", "    ", "return", "1", "\n", "", "def", "create_padded_sent", "(", "self", ",", "pad_len", ":", "numbers", ".", "Integral", ")", "->", "'ScalarSentence'", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ScalarSentence.create_padded_sent": [[128, 132], ["ValueError"], "methods", ["None"], ["", "def", "create_padded_sent", "(", "self", ",", "pad_len", ":", "numbers", ".", "Integral", ")", "->", "'ScalarSentence'", ":", "\n", "    ", "if", "pad_len", "!=", "0", ":", "\n", "      ", "raise", "ValueError", "(", "\"ScalarSentence cannot be padded\"", ")", "\n", "", "return", "self", "\n", "", "def", "create_truncated_sent", "(", "self", ",", "trunc_len", ":", "numbers", ".", "Integral", ")", "->", "'ScalarSentence'", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ScalarSentence.create_truncated_sent": [[132, 136], ["ValueError"], "methods", ["None"], ["", "def", "create_truncated_sent", "(", "self", ",", "trunc_len", ":", "numbers", ".", "Integral", ")", "->", "'ScalarSentence'", ":", "\n", "    ", "if", "trunc_len", "!=", "0", ":", "\n", "      ", "raise", "ValueError", "(", "\"ScalarSentence cannot be truncated\"", ")", "\n", "", "return", "self", "\n", "", "def", "str_tokens", "(", "self", ",", "**", "kwargs", ")", "->", "List", "[", "str", "]", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ScalarSentence.str_tokens": [[136, 139], ["str"], "methods", ["None"], ["", "def", "str_tokens", "(", "self", ",", "**", "kwargs", ")", "->", "List", "[", "str", "]", ":", "\n", "    ", "if", "self", ".", "vocab", ":", "return", "[", "self", ".", "vocab", "[", "self", ".", "value", "]", "]", "\n", "else", ":", "return", "[", "str", "(", "self", ".", "value", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.CompoundSentence.__init__": [[147, 154], ["sent.Sentence.__init__", "ValueError"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__"], ["def", "__init__", "(", "self", ",", "sents", ":", "Sequence", "[", "Sentence", "]", ")", "->", "None", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "idx", "=", "sents", "[", "0", "]", ".", "idx", ")", "\n", "self", ".", "idx", "=", "sents", "[", "0", "]", ".", "idx", "\n", "for", "s", "in", "sents", "[", "1", ":", "]", ":", "\n", "      ", "if", "s", ".", "idx", "!=", "self", ".", "idx", ":", "\n", "        ", "raise", "ValueError", "(", "\"CompoundSentence must contain sentences of consistent idx.\"", ")", "\n", "", "", "self", ".", "sents", "=", "sents", "\n", "", "def", "__getitem__", "(", "self", ",", "key", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.CompoundSentence.__getitem__": [[154, 157], ["isinstance", "NotImplementedError"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "key", ")", ":", "\n", "    ", "if", "not", "isinstance", "(", "key", ",", "numbers", ".", "Integral", ")", ":", "raise", "NotImplementedError", "(", ")", "\n", "return", "[", "sent", "[", "key", "]", "for", "sent", "in", "self", ".", "sents", "]", "\n", "", "def", "sent_len", "(", "self", ")", "->", "int", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.CompoundSentence.sent_len": [[157, 159], ["sum", "sent.sent_len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len"], ["", "def", "sent_len", "(", "self", ")", "->", "int", ":", "\n", "    ", "return", "sum", "(", "sent", ".", "sent_len", "(", ")", "for", "sent", "in", "self", ".", "sents", ")", "\n", "", "def", "len_unpadded", "(", "self", ")", "->", "int", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.CompoundSentence.len_unpadded": [[159, 161], ["sum", "sent.len_unpadded"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.len_unpadded"], ["", "def", "len_unpadded", "(", "self", ")", "->", "int", ":", "\n", "    ", "return", "sum", "(", "sent", ".", "len_unpadded", "(", ")", "for", "sent", "in", "self", ".", "sents", ")", "\n", "", "def", "create_padded_sent", "(", "self", ",", "pad_len", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.CompoundSentence.create_padded_sent": [[161, 163], ["ValueError"], "methods", ["None"], ["", "def", "create_padded_sent", "(", "self", ",", "pad_len", ")", ":", "\n", "    ", "raise", "ValueError", "(", "\"not supported with CompoundSentence, must be called on one of the sub-inputs instead.\"", ")", "\n", "", "def", "create_truncated_sent", "(", "self", ",", "trunc_len", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.CompoundSentence.create_truncated_sent": [[163, 165], ["ValueError"], "methods", ["None"], ["", "def", "create_truncated_sent", "(", "self", ",", "trunc_len", ")", ":", "\n", "    ", "raise", "ValueError", "(", "\"not supported with CompoundSentence, must be called on one of the sub-inputs instead.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.SimpleSentence.__init__": [[179, 190], ["sent.ReadableSentence.__init__"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__"], ["def", "__init__", "(", "self", ",", "\n", "words", ":", "Sequence", "[", "numbers", ".", "Integral", "]", ",", "\n", "idx", ":", "Optional", "[", "numbers", ".", "Integral", "]", "=", "None", ",", "\n", "vocab", ":", "Optional", "[", "Vocab", "]", "=", "None", ",", "\n", "score", ":", "Optional", "[", "numbers", ".", "Real", "]", "=", "None", ",", "\n", "output_procs", ":", "Union", "[", "OutputProcessor", ",", "Sequence", "[", "OutputProcessor", "]", "]", "=", "[", "]", ",", "\n", "pad_token", ":", "numbers", ".", "Integral", "=", "Vocab", ".", "ES", ")", "->", "None", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "idx", "=", "idx", ",", "score", "=", "score", ",", "output_procs", "=", "output_procs", ")", "\n", "self", ".", "pad_token", "=", "pad_token", "\n", "self", ".", "words", "=", "words", "\n", "self", ".", "vocab", "=", "vocab", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.SimpleSentence.__getitem__": [[191, 204], ["isinstance", "ValueError", "sent.SimpleSentence"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "key", ")", ":", "\n", "#hack for fisher compoundsents with missing phonemes", "\n", "    ", "try", ":", "\n", "      ", "ret", "=", "self", ".", "words", "[", "key", "]", "\n", "", "except", "IndexError", ":", "\n", "      ", "ret", "=", "self", ".", "pad_token", "\n", "\n", "", "if", "isinstance", "(", "ret", ",", "list", ")", ":", "# support for slicing", "\n", "      ", "raise", "ValueError", "(", "\"!!! can't safely handle with compound sent hack right now\"", ")", "\n", "return", "SimpleSentence", "(", "words", "=", "ret", ",", "idx", "=", "self", ".", "idx", ",", "vocab", "=", "self", ".", "vocab", ",", "score", "=", "self", ".", "score", ",", "output_procs", "=", "self", ".", "output_procs", ",", "\n", "pad_token", "=", "self", ".", "pad_token", ")", "\n", "#hack for fisher compoundsents (no slice/list compat):", "\n", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.SimpleSentence.sent_len": [[205, 207], ["len"], "methods", ["None"], ["", "def", "sent_len", "(", "self", ")", ":", "\n", "    ", "return", "len", "(", "self", ".", "words", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.SimpleSentence.len_unpadded": [[208, 211], ["functools.lru_cache", "sum"], "methods", ["None"], ["", "@", "functools", ".", "lru_cache", "(", "maxsize", "=", "1", ")", "\n", "def", "len_unpadded", "(", "self", ")", ":", "\n", "    ", "return", "sum", "(", "x", "!=", "self", ".", "pad_token", "for", "x", "in", "self", ".", "words", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.SimpleSentence.create_padded_sent": [[212, 216], ["sent.SimpleSentence.sent_with_new_words"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.SegmentedSentence.sent_with_new_words"], ["", "def", "create_padded_sent", "(", "self", ",", "pad_len", ":", "numbers", ".", "Integral", ")", "->", "'SimpleSentence'", ":", "\n", "    ", "if", "pad_len", "==", "0", ":", "\n", "      ", "return", "self", "\n", "", "return", "self", ".", "sent_with_new_words", "(", "self", ".", "words", "+", "[", "self", ".", "pad_token", "]", "*", "pad_len", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.SimpleSentence.create_truncated_sent": [[217, 221], ["sent.SimpleSentence.sent_with_words"], "methods", ["None"], ["", "def", "create_truncated_sent", "(", "self", ",", "trunc_len", ":", "numbers", ".", "Integral", ")", "->", "'SimpleSentence'", ":", "\n", "    ", "if", "trunc_len", "==", "0", ":", "\n", "      ", "return", "self", "\n", "", "return", "self", ".", "sent_with_words", "(", "self", ".", "words", "[", ":", "-", "trunc_len", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.SimpleSentence.str_tokens": [[222, 232], ["set", "set.add", "set.add", "set.add", "str"], "methods", ["None"], ["", "def", "str_tokens", "(", "self", ",", "exclude_ss_es", "=", "True", ",", "exclude_unk", "=", "False", ",", "exclude_padded", "=", "True", ",", "**", "kwargs", ")", "->", "List", "[", "str", "]", ":", "\n", "    ", "exclude_set", "=", "set", "(", ")", "\n", "if", "exclude_ss_es", ":", "\n", "      ", "exclude_set", ".", "add", "(", "Vocab", ".", "SS", ")", "\n", "exclude_set", ".", "add", "(", "Vocab", ".", "ES", ")", "\n", "", "if", "exclude_unk", ":", "exclude_set", ".", "add", "(", "self", ".", "vocab", ".", "unk_token", ")", "\n", "# TODO: exclude padded if requested (i.e., all </s> tags except for the first)", "\n", "ret_toks", "=", "[", "w", "for", "w", "in", "self", ".", "words", "if", "w", "not", "in", "exclude_set", "]", "\n", "if", "self", ".", "vocab", ":", "return", "[", "self", ".", "vocab", "[", "w", "]", "for", "w", "in", "ret_toks", "]", "\n", "else", ":", "return", "[", "str", "(", "w", ")", "for", "w", "in", "ret_toks", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.SimpleSentence.sent_with_new_words": [[233, 240], ["sent.SimpleSentence"], "methods", ["None"], ["", "def", "sent_with_new_words", "(", "self", ",", "new_words", ")", ":", "\n", "    ", "return", "SimpleSentence", "(", "words", "=", "new_words", ",", "\n", "idx", "=", "self", ".", "idx", ",", "\n", "vocab", "=", "self", ".", "vocab", ",", "\n", "score", "=", "self", ".", "score", ",", "\n", "output_procs", "=", "self", ".", "output_procs", ",", "\n", "pad_token", "=", "self", ".", "pad_token", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.SegmentedSentence.__init__": [[242, 245], ["sent.SimpleSentence.__init__"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__"], ["  ", "def", "__init__", "(", "self", ",", "segment", "=", "[", "]", ",", "**", "kwargs", ")", "->", "None", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "self", ".", "segment", "=", "segment", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.SegmentedSentence.sent_with_new_words": [[246, 254], ["sent.SegmentedSentence"], "methods", ["None"], ["", "def", "sent_with_new_words", "(", "self", ",", "new_words", ")", ":", "\n", "    ", "return", "SegmentedSentence", "(", "words", "=", "new_words", ",", "\n", "idx", "=", "self", ".", "idx", ",", "\n", "vocab", "=", "self", ".", "vocab", ",", "\n", "score", "=", "self", ".", "score", ",", "\n", "output_procs", "=", "self", ".", "output_procs", ",", "\n", "pad_token", "=", "self", ".", "pad_token", ",", "\n", "segment", "=", "self", ".", "segment", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.__init__": [[267, 275], ["sent.Sentence.__init__"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__"], ["def", "__init__", "(", "self", ",", "\n", "nparr", ":", "np", ".", "ndarray", ",", "\n", "idx", ":", "Optional", "[", "numbers", ".", "Integral", "]", "=", "None", ",", "\n", "padded_len", ":", "int", "=", "0", ",", "\n", "score", ":", "Optional", "[", "numbers", ".", "Real", "]", "=", "None", ")", "->", "None", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "idx", "=", "idx", ",", "score", "=", "score", ")", "\n", "self", ".", "nparr", "=", "nparr", "\n", "self", ".", "padded_len", "=", "padded_len", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.__getitem__": [[276, 279], ["isinstance", "sent.ArraySentence.nparr.__getitem__"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.retrievers.StandardRetrievalDatabase.__getitem__"], ["", "def", "__getitem__", "(", "self", ",", "key", ")", ":", "\n", "    ", "assert", "isinstance", "(", "key", ",", "numbers", ".", "Integral", ")", "\n", "return", "self", ".", "nparr", ".", "__getitem__", "(", "key", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len": [[280, 283], ["len"], "methods", ["None"], ["", "def", "sent_len", "(", "self", ")", ":", "\n", "# TODO: check, this seems wrong (maybe need a 'transposed' version?)", "\n", "    ", "return", "self", ".", "nparr", ".", "shape", "[", "1", "]", "if", "len", "(", "self", ".", "nparr", ".", "shape", ")", ">=", "2", "else", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.len_unpadded": [[284, 286], ["len"], "methods", ["None"], ["", "def", "len_unpadded", "(", "self", ")", ":", "\n", "    ", "return", "len", "(", "self", ")", "-", "self", ".", "padded_len", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.create_padded_sent": [[287, 293], ["numpy.append", "sent.ArraySentence", "numpy.broadcast_to", "numpy.reshape"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "def", "create_padded_sent", "(", "self", ",", "pad_len", ":", "numbers", ".", "Integral", ")", "->", "'ArraySentence'", ":", "\n", "    ", "if", "pad_len", "==", "0", ":", "\n", "      ", "return", "self", "\n", "", "new_nparr", "=", "np", ".", "append", "(", "self", ".", "nparr", ",", "np", ".", "broadcast_to", "(", "np", ".", "reshape", "(", "self", ".", "nparr", "[", ":", ",", "-", "1", "]", ",", "(", "self", ".", "nparr", ".", "shape", "[", "0", "]", ",", "1", ")", ")", ",", "\n", "(", "self", ".", "nparr", ".", "shape", "[", "0", "]", ",", "pad_len", ")", ")", ",", "axis", "=", "1", ")", "\n", "return", "ArraySentence", "(", "new_nparr", ",", "idx", "=", "self", ".", "idx", ",", "score", "=", "self", ".", "score", ",", "padded_len", "=", "self", ".", "padded_len", "+", "pad_len", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.create_truncated_sent": [[294, 299], ["numpy.asarray", "sent.ArraySentence", "max"], "methods", ["None"], ["", "def", "create_truncated_sent", "(", "self", ",", "trunc_len", ":", "numbers", ".", "Integral", ")", "->", "'ArraySentence'", ":", "\n", "    ", "if", "trunc_len", "==", "0", ":", "\n", "      ", "return", "self", "\n", "", "new_nparr", "=", "np", ".", "asarray", "(", "self", ".", "nparr", "[", ":", "-", "trunc_len", "]", ")", "\n", "return", "ArraySentence", "(", "new_nparr", ",", "idx", "=", "self", ".", "idx", ",", "score", "=", "self", ".", "score", ",", "padded_len", "=", "max", "(", "0", ",", "self", ".", "padded_len", "-", "trunc_len", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.get_array": [[300, 302], ["None"], "methods", ["None"], ["", "def", "get_array", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "nparr", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.NbestSentence.__init__": [[312, 317], ["sent.SimpleSentence.__init__"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__"], ["def", "__init__", "(", "self", ",", "base_sent", ":", "SimpleSentence", ",", "nbest_id", ":", "numbers", ".", "Integral", ",", "print_score", ":", "bool", "=", "False", ")", "->", "None", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "words", "=", "base_sent", ".", "words", ",", "vocab", "=", "base_sent", ".", "vocab", ",", "score", "=", "base_sent", ".", "score", ")", "\n", "self", ".", "base_output", "=", "base_sent", "\n", "self", ".", "nbest_id", "=", "nbest_id", "\n", "self", ".", "print_score", "=", "print_score", "\n", "", "def", "sent_str", "(", "self", ",", "custom_output_procs", "=", "None", ",", "**", "kwargs", ")", "->", "str", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.NbestSentence.sent_str": [[317, 320], ["sent.ReadableSentence.sent_str", "sent.NbestSentence._make_nbest_entry"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.NbestSentence.sent_str", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.NbestSentence._make_nbest_entry"], ["", "def", "sent_str", "(", "self", ",", "custom_output_procs", "=", "None", ",", "**", "kwargs", ")", "->", "str", ":", "\n", "    ", "content_str", "=", "super", "(", ")", ".", "sent_str", "(", "custom_output_procs", "=", "custom_output_procs", ",", "**", "kwargs", ")", "\n", "return", "self", ".", "_make_nbest_entry", "(", "content_str", "=", "content_str", ")", "\n", "", "def", "_make_nbest_entry", "(", "self", ",", "content_str", ":", "str", ")", "->", "str", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.NbestSentence._make_nbest_entry": [[320, 325], ["str", "entries.insert", "str"], "methods", ["None"], ["", "def", "_make_nbest_entry", "(", "self", ",", "content_str", ":", "str", ")", "->", "str", ":", "\n", "    ", "entries", "=", "[", "str", "(", "self", ".", "nbest_id", ")", ",", "content_str", "]", "\n", "if", "self", ".", "print_score", ":", "\n", "      ", "entries", ".", "insert", "(", "1", ",", "str", "(", "self", ".", "base_output", ".", "score", ")", ")", "\n", "", "return", "\" ||| \"", ".", "join", "(", "entries", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.output.OutputProcessor.process": [[11, 22], ["NotImplementedError"], "methods", ["None"], ["  ", "def", "process", "(", "self", ",", "s", ":", "str", ")", "->", "str", ":", "\n", "    ", "\"\"\"\n    Produce a string-representation of an output.\n\n    Args:\n      s: string to be processed\n\n    Returns:\n      post-processed string\n    \"\"\"", "\n", "raise", "NotImplementedError", "(", "\"must be implemented by subclasses\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.output.OutputProcessor.get_output_processor": [[23, 39], ["isinstance", "spec.split", "procs.append", "output.JoinCharTextOutputProcessor", "procs.append", "output.JoinBpeTextOutputProcessor", "procs.append", "output.JoinPieceTextOutputProcessor"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "@", "staticmethod", "\n", "def", "get_output_processor", "(", "spec", ")", ":", "\n", "    ", "if", "isinstance", "(", "spec", ",", "str", ")", ":", "\n", "      ", "procs", "=", "[", "]", "\n", "for", "spec_item", "in", "spec", ".", "split", "(", "\",\"", ")", ":", "\n", "        ", "if", "spec_item", "==", "\"none\"", ":", "\n", "          ", "continue", "\n", "", "elif", "spec_item", "==", "\"join-char\"", ":", "\n", "          ", "procs", ".", "append", "(", "JoinCharTextOutputProcessor", "(", ")", ")", "\n", "", "elif", "spec", "==", "\"join-bpe\"", ":", "\n", "          ", "procs", ".", "append", "(", "JoinBpeTextOutputProcessor", "(", ")", ")", "\n", "", "elif", "spec", "==", "\"join-piece\"", ":", "\n", "          ", "procs", ".", "append", "(", "JoinPieceTextOutputProcessor", "(", ")", ")", "\n", "", "", "return", "procs", "\n", "", "else", ":", "\n", "      ", "return", "spec", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.output.PlainTextOutputProcessor.process": [[46, 48], ["None"], "methods", ["None"], ["def", "process", "(", "self", ",", "s", ":", "str", ")", "->", "str", ":", "\n", "    ", "return", "s", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.output.JoinCharTextOutputProcessor.__init__": [[56, 59], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "space_token", "=", "\"__\"", ")", ":", "\n", "    ", "self", ".", "space_token", "=", "space_token", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.output.JoinCharTextOutputProcessor.process": [[60, 62], ["s.replace().replace", "s.replace"], "methods", ["None"], ["", "def", "process", "(", "self", ",", "s", ":", "str", ")", "->", "str", ":", "\n", "    ", "return", "s", ".", "replace", "(", "\" \"", ",", "\"\"", ")", ".", "replace", "(", "self", ".", "space_token", ",", "\" \"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.output.JoinBpeTextOutputProcessor.__init__": [[70, 73], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "merge_indicator", "=", "\"@@\"", ")", ":", "\n", "    ", "self", ".", "merge_indicator_with_space", "=", "merge_indicator", "+", "\" \"", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.output.JoinBpeTextOutputProcessor.process": [[74, 76], ["s.replace"], "methods", ["None"], ["", "def", "process", "(", "self", ",", "s", ":", "str", ")", "->", "str", ":", "\n", "    ", "return", "s", ".", "replace", "(", "self", ".", "merge_indicator_with_space", ",", "\"\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.output.JoinPieceTextOutputProcessor.__init__": [[84, 87], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "space_token", "=", "\"\\u2581\"", ")", ":", "\n", "    ", "self", ".", "space_token", "=", "space_token", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.output.JoinPieceTextOutputProcessor.process": [[88, 90], ["s.replace().replace().strip", "s.replace().replace", "s.replace"], "methods", ["None"], ["", "def", "process", "(", "self", ",", "s", ":", "str", ")", "->", "str", ":", "\n", "    ", "return", "s", ".", "replace", "(", "\" \"", ",", "\"\"", ")", ".", "replace", "(", "self", ".", "space_token", ",", "\" \"", ")", ".", "strip", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.new_epoch": [[12, 22], ["None"], "function", ["None"], ["@", "events", ".", "register_xnmt_event", "\n", "def", "new_epoch", "(", "training_task", ":", "training_tasks", ".", "TrainingTask", ",", "num_sents", ":", "numbers", ".", "Integral", ")", "->", "None", ":", "\n", "  ", "\"\"\"\n  Trigger event indicating a new epoch for the specified task.\n\n  Args:\n    training_task: task that proceeds into next epoch.\n    num_sents: number of training sentences in new epoch.\n  \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.set_train": [[23, 32], ["None"], "function", ["None"], ["", "@", "events", ".", "register_xnmt_event", "\n", "def", "set_train", "(", "val", ":", "bool", ")", "->", "None", ":", "\n", "  ", "\"\"\"\n  Trigger event indicating enabling/disabling of \"training\" mode.\n\n  Args:\n    val: whether \"training\" mode is enabled\n  \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.start_sent": [[33, 42], ["None"], "function", ["None"], ["", "@", "events", ".", "register_xnmt_event", "\n", "def", "start_sent", "(", "src", ":", "Union", "[", "sent", ".", "Sentence", ",", "batchers", ".", "Batch", "]", ")", "->", "None", ":", "\n", "  ", "\"\"\"\n  Trigger event indicating the start of a new sentence (or batch of sentences).\n\n  Args:\n    src: new sentence (or batch of sentences)\n  \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.calc_additional_loss": [[43, 56], ["None"], "function", ["None"], ["", "@", "events", ".", "register_xnmt_event_sum", "\n", "def", "calc_additional_loss", "(", "trg", ":", "Union", "[", "sent", ".", "Sentence", ",", "batchers", ".", "Batch", "]", ",", "\n", "parent_model", ":", "models", ".", "TrainableModel", ",", "\n", "parent_model_loss", ":", "losses", ".", "FactoredLossExpr", ")", "->", "losses", ".", "FactoredLossExpr", ":", "\n", "  ", "\"\"\"\n  Trigger event for calculating additional loss (e.g. reinforce loss) based on the reward\n\n  Args:\n    trg: Reference sentence\n    parent_model: The reference to the parent model who called the addcitional_loss\n    parent_model_loss: The loss from the parent_model.calc_loss()\n  \"\"\"", "\n", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.get_report_input": [[57, 60], ["None"], "function", ["None"], ["", "@", "events", ".", "register_xnmt_event_assign", "\n", "def", "get_report_input", "(", "context", "=", "{", "}", ")", "->", "dict", ":", "\n", "  ", "return", "context", "\n", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.PreprocTask.run_preproc_task": [[24, 26], ["None"], "methods", ["None"], ["  ", "def", "run_preproc_task", "(", "self", ",", "overwrite", "=", "False", ")", ":", "\n", "    ", "...", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.PreprocRunner.__init__": [[41, 51], ["xnmt.logger.info", "task.run_preproc_task", "len", "len", "RuntimeError"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.PreprocVocab.run_preproc_task"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "tasks", ":", "Optional", "[", "List", "[", "PreprocTask", "]", "]", "=", "None", ",", "overwrite", ":", "bool", "=", "False", ")", ":", "\n", "    ", "if", "tasks", "is", "None", ":", "tasks", "=", "[", "]", "\n", "logger", ".", "info", "(", "\"> Preprocessing\"", ")", "\n", "\n", "for", "task", "in", "tasks", ":", "\n", "# Sanity check", "\n", "      ", "if", "len", "(", "task", ".", "in_files", ")", "!=", "len", "(", "task", ".", "out_files", ")", ":", "\n", "        ", "raise", "RuntimeError", "(", "\"Length of in_files and out_files in preprocessor must be identical\"", ")", "\n", "", "task", ".", "run_preproc_task", "(", "overwrite", "=", "overwrite", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.PreprocExtract.__init__": [[54, 59], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "in_files", ",", "out_files", ",", "specs", ")", ":", "\n", "    ", "self", ".", "in_files", "=", "in_files", "\n", "self", ".", "out_files", "=", "out_files", "\n", "self", ".", "specs", "=", "specs", "\n", "", "def", "run_preproc_task", "(", "self", ",", "overwrite", "=", "False", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.PreprocExtract.run_preproc_task": [[59, 65], ["zip", "xnmt.utils.make_parent_dir", "extractor.extract_to", "os.path.isfile"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.make_parent_dir", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.MelFiltExtractor.extract_to"], ["", "def", "run_preproc_task", "(", "self", ",", "overwrite", "=", "False", ")", ":", "\n", "    ", "extractor", "=", "self", ".", "specs", "\n", "for", "in_file", ",", "out_file", "in", "zip", "(", "self", ".", "in_files", ",", "self", ".", "out_files", ")", ":", "\n", "      ", "if", "overwrite", "or", "not", "os", ".", "path", ".", "isfile", "(", "out_file", ")", ":", "\n", "        ", "make_parent_dir", "(", "out_file", ")", "\n", "extractor", ".", "extract_to", "(", "in_file", ",", "out_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.PreprocTokenize.__init__": [[68, 73], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "in_files", ",", "out_files", ",", "specs", ")", ":", "\n", "    ", "self", ".", "in_files", "=", "in_files", "\n", "self", ".", "out_files", "=", "out_files", "\n", "self", ".", "specs", "=", "specs", "\n", "", "def", "run_preproc_task", "(", "self", ",", "overwrite", "=", "False", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.PreprocTokenize.run_preproc_task": [[73, 87], ["enumerate", "zip", "xnmt.utils.make_parent_dir", "tokenizers.get", "os.path.isfile", "open", "open", "tokenizer.tokenize_stream", "out_stream.write"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.make_parent_dir", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.UninitializedYamlObject.get", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.Tokenizer.tokenize_stream", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.write"], ["", "def", "run_preproc_task", "(", "self", ",", "overwrite", "=", "False", ")", ":", "\n", "    ", "tokenizers", "=", "{", "my_opts", "[", "\"filenum\"", "]", ":", "[", "tok", "\n", "for", "tok", "in", "my_opts", "[", "\"tokenizers\"", "]", "]", "\n", "for", "my_opts", "in", "self", ".", "specs", "}", "\n", "for", "file_num", ",", "(", "in_file", ",", "out_file", ")", "in", "enumerate", "(", "zip", "(", "self", ".", "in_files", ",", "self", ".", "out_files", ")", ")", ":", "\n", "      ", "if", "overwrite", "or", "not", "os", ".", "path", ".", "isfile", "(", "out_file", ")", ":", "\n", "        ", "make_parent_dir", "(", "out_file", ")", "\n", "my_tokenizers", "=", "tokenizers", ".", "get", "(", "file_num", ",", "tokenizers", "[", "\"all\"", "]", ")", "\n", "with", "open", "(", "out_file", ",", "\"w\"", ",", "encoding", "=", "'utf-8'", ")", "as", "out_stream", ",", "open", "(", "in_file", ",", "\"r\"", ",", "encoding", "=", "'utf-8'", ")", "as", "in_stream", ":", "\n", "          ", "for", "tokenizer", "in", "my_tokenizers", ":", "\n", "            ", "in_stream", "=", "tokenizer", ".", "tokenize_stream", "(", "in_stream", ")", "\n", "", "for", "line", "in", "in_stream", ":", "\n", "            ", "out_stream", ".", "write", "(", "f\"{line}\\n\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.PreprocNormalize.__init__": [[90, 95], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "in_files", ",", "out_files", ",", "specs", ")", ":", "\n", "    ", "self", ".", "in_files", "=", "in_files", "\n", "self", ".", "out_files", "=", "out_files", "\n", "self", ".", "specs", "=", "specs", "\n", "", "def", "run_preproc_task", "(", "self", ",", "overwrite", "=", "False", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.PreprocNormalize.run_preproc_task": [[95, 110], ["enumerate", "zip", "xnmt.utils.make_parent_dir", "normalizers.get", "os.path.isfile", "open", "open", "normalizer.normalize.strip", "out_stream.write", "normalizer.normalize"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.make_parent_dir", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.UninitializedYamlObject.get", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.write", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.base.normalize"], ["", "def", "run_preproc_task", "(", "self", ",", "overwrite", "=", "False", ")", ":", "\n", "    ", "normalizers", "=", "{", "my_opts", "[", "\"filenum\"", "]", ":", "[", "norm", "\n", "for", "norm", "in", "my_opts", "[", "\"normalizers\"", "]", "]", "\n", "for", "my_opts", "in", "self", ".", "specs", "}", "\n", "for", "i", ",", "(", "in_file", ",", "out_file", ")", "in", "enumerate", "(", "zip", "(", "self", ".", "in_files", ",", "self", ".", "out_files", ")", ")", ":", "\n", "      ", "if", "overwrite", "or", "not", "os", ".", "path", ".", "isfile", "(", "out_file", ")", ":", "\n", "        ", "make_parent_dir", "(", "out_file", ")", "\n", "my_normalizers", "=", "normalizers", ".", "get", "(", "i", ",", "normalizers", "[", "\"all\"", "]", ")", "\n", "with", "open", "(", "out_file", ",", "\"w\"", ",", "encoding", "=", "'utf-8'", ")", "as", "out_stream", ",", "open", "(", "in_file", ",", "\"r\"", ",", "encoding", "=", "'utf-8'", ")", "as", "in_stream", ":", "\n", "          ", "for", "line", "in", "in_stream", ":", "\n", "            ", "line", "=", "line", ".", "strip", "(", ")", "\n", "for", "normalizer", "in", "my_normalizers", ":", "\n", "              ", "line", "=", "normalizer", ".", "normalize", "(", "line", ")", "\n", "", "out_stream", ".", "write", "(", "line", "+", "\"\\n\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.PreprocFilter.__init__": [[113, 118], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "in_files", ",", "out_files", ",", "specs", ")", ":", "\n", "    ", "self", ".", "in_files", "=", "in_files", "\n", "self", ".", "out_files", "=", "out_files", "\n", "self", ".", "specs", "=", "specs", "\n", "", "def", "run_preproc_task", "(", "self", ",", "overwrite", "=", "False", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.PreprocFilter.run_preproc_task": [[118, 135], ["preproc.SentenceFilterer.from_spec", "any", "zip", "open", "open", "all", "x.close", "x.close", "line.strip().split", "zip", "os.path.isfile", "my_filter.keep", "out_stream.write", "line.strip"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.VocabFilterer.from_spec", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.close", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.close", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.SentenceFiltererLength.keep", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.write"], ["", "def", "run_preproc_task", "(", "self", ",", "overwrite", "=", "False", ")", ":", "\n", "# TODO: This will only work with plain-text sentences at the moment. It would be nice if it plays well with the readers", "\n", "#       in input.py", "\n", "    ", "filters", "=", "SentenceFilterer", ".", "from_spec", "(", "self", ".", "specs", ")", "\n", "out_streams", "=", "[", "open", "(", "x", ",", "'w'", ",", "encoding", "=", "'utf-8'", ")", "if", "overwrite", "or", "not", "os", ".", "path", ".", "isfile", "(", "x", ")", "else", "None", "for", "x", "in", "self", ".", "out_files", "]", "\n", "if", "any", "(", "x", "is", "not", "None", "for", "x", "in", "out_streams", ")", ":", "\n", "      ", "in_streams", "=", "[", "open", "(", "x", ",", "'r'", ",", "encoding", "=", "'utf-8'", ")", "for", "x", "in", "self", ".", "in_files", "]", "\n", "for", "in_lines", "in", "zip", "(", "*", "in_streams", ")", ":", "\n", "        ", "in_lists", "=", "[", "line", ".", "strip", "(", ")", ".", "split", "(", ")", "for", "line", "in", "in_lines", "]", "\n", "if", "all", "(", "[", "my_filter", ".", "keep", "(", "in_lists", ")", "for", "my_filter", "in", "filters", "]", ")", ":", "\n", "          ", "for", "in_line", ",", "out_stream", "in", "zip", "(", "in_lines", ",", "out_streams", ")", ":", "\n", "            ", "out_stream", ".", "write", "(", "in_line", ")", "\n", "", "", "", "for", "x", "in", "in_streams", ":", "\n", "        ", "x", ".", "close", "(", ")", "\n", "", "", "for", "x", "in", "out_streams", ":", "\n", "      ", "if", "x", "is", "not", "None", ":", "\n", "        ", "x", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.PreprocVocab.__init__": [[139, 144], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "in_files", ",", "out_files", ",", "specs", ")", ":", "\n", "    ", "self", ".", "in_files", "=", "in_files", "\n", "self", ".", "out_files", "=", "out_files", "\n", "self", ".", "specs", "=", "specs", "\n", "", "def", "run_preproc_task", "(", "self", ",", "overwrite", "=", "False", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.PreprocVocab.run_preproc_task": [[144, 161], ["enumerate", "zip", "xnmt.utils.make_parent_dir", "os.path.isfile", "open", "open", "filters.get", "my_filter.filter.keys", "line.strip().split", "my_filter.filter", "out_stream.write", "line.strip", "my_filter.filter.get"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.make_parent_dir", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.UninitializedYamlObject.get", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.ErrorOnlyFilter.filter", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.write", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.UninitializedYamlObject.get"], ["", "def", "run_preproc_task", "(", "self", ",", "overwrite", "=", "False", ")", ":", "\n", "    ", "filters", "=", "{", "my_opts", "[", "\"filenum\"", "]", ":", "[", "norm", "\n", "for", "norm", "in", "my_opts", "[", "\"filters\"", "]", "]", "\n", "for", "my_opts", "in", "self", ".", "specs", "}", "\n", "for", "i", ",", "(", "in_file", ",", "out_file", ")", "in", "enumerate", "(", "zip", "(", "self", ".", "in_files", ",", "self", ".", "out_files", ")", ")", ":", "\n", "      ", "if", "overwrite", "or", "not", "os", ".", "path", ".", "isfile", "(", "out_file", ")", ":", "\n", "        ", "make_parent_dir", "(", "out_file", ")", "\n", "with", "open", "(", "out_file", ",", "\"w\"", ",", "encoding", "=", "'utf-8'", ")", "as", "out_stream", ",", "open", "(", "in_file", ",", "\"r\"", ",", "encoding", "=", "'utf-8'", ")", "as", "in_stream", ":", "\n", "          ", "vocab", "=", "{", "}", "\n", "for", "line", "in", "in_stream", ":", "\n", "            ", "for", "word", "in", "line", ".", "strip", "(", ")", ".", "split", "(", ")", ":", "\n", "              ", "vocab", "[", "word", "]", "=", "vocab", ".", "get", "(", "word", ",", "0", ")", "+", "1", "\n", "", "", "for", "my_filter", "in", "filters", ".", "get", "(", "i", ",", "filters", "[", "\"all\"", "]", ")", ":", "\n", "            ", "vocab", "=", "my_filter", ".", "filter", "(", "vocab", ")", "\n", "", "for", "word", "in", "vocab", ".", "keys", "(", ")", ":", "\n", "            ", "out_stream", ".", "write", "(", "(", "word", "+", "u\"\\n\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.Normalizer.normalize": [[169, 172], ["RuntimeError"], "methods", ["None"], ["def", "normalize", "(", "self", ",", "sent", ")", ":", "\n", "    ", "\"\"\"Takes a plain text string and converts it into another plain text string after preprocessing.\"\"\"", "\n", "raise", "RuntimeError", "(", "\"Subclasses of Normalizer must implement the normalize() function\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.NormalizerLower.normalize": [[178, 180], ["sent.lower"], "methods", ["None"], ["def", "normalize", "(", "self", ",", "sent", ")", ":", "\n", "    ", "return", "sent", ".", "lower", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.NormalizerRemovePunct.__init__": [[190, 195], ["set", "chr", "range", "unicodedata.category().startswith", "chr", "set", "unicodedata.category", "chr"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "remove_inside_word", ":", "bool", "=", "False", ",", "allowed_chars", ":", "str", "=", "\"\"", ")", "->", "None", ":", "\n", "    ", "self", ".", "remove_inside_word", "=", "remove_inside_word", "\n", "self", ".", "exclude", "=", "set", "(", "chr", "(", "i", ")", "for", "i", "in", "range", "(", "sys", ".", "maxunicode", ")", "if", "unicodedata", ".", "category", "(", "chr", "(", "i", ")", ")", ".", "startswith", "(", "'P'", ")", "\n", "and", "chr", "(", "i", ")", "not", "in", "set", "(", "allowed_chars", ")", ")", "\n", "", "def", "normalize", "(", "self", ",", "sent", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.NormalizerRemovePunct.normalize": [[195, 204], ["sent.split", "ret.split", "words.append", "w.strip"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "def", "normalize", "(", "self", ",", "sent", ")", ":", "\n", "    ", "if", "self", ".", "remove_inside_word", ":", "\n", "      ", "ret", "=", "''", ".", "join", "(", "ch", "for", "ch", "in", "sent", "if", "ch", "not", "in", "self", ".", "exclude", ")", "\n", "", "else", ":", "\n", "      ", "words", "=", "[", "]", "\n", "for", "w", "in", "sent", ".", "split", "(", ")", ":", "\n", "        ", "words", ".", "append", "(", "w", ".", "strip", "(", "''", ".", "join", "(", "ch", "for", "ch", "in", "self", ".", "exclude", ")", ")", ")", "\n", "", "ret", "=", "\" \"", ".", "join", "(", "words", ")", "\n", "", "return", "\" \"", ".", "join", "(", "ret", ".", "split", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.Tokenizer.tokenize": [[214, 216], ["RuntimeError"], "methods", ["None"], ["def", "tokenize", "(", "self", ",", "sent", ")", ":", "\n", "    ", "raise", "RuntimeError", "(", "\"Subclasses of Tokenizer must implement tokenize() or tokenize_stream()\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.Tokenizer.tokenize_stream": [[217, 230], ["xnmt.logger.debug", "preproc.Tokenizer.tokenize", "line.strip"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.toy_word_tokenize.tokenize"], ["", "def", "tokenize_stream", "(", "self", ",", "stream", ")", ":", "\n", "    ", "\"\"\"\n    Tokenize a file-like text stream.\n\n    Args:\n      stream: A file-like stream of untokenized text\n    Returns:\n      A file-like stream of tokenized text\n\n    \"\"\"", "\n", "logger", ".", "debug", "(", "\"****** calling tokenize_stream {}\"", ".", "format", "(", "self", ".", "__class__", ")", ")", "\n", "for", "line", "in", "stream", ":", "\n", "      ", "yield", "self", ".", "tokenize", "(", "line", ".", "strip", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.BPETokenizer.__init__": [[239, 243], ["NotImplementedError"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "vocab_size", ",", "train_files", ")", ":", "\n", "    ", "\"\"\"Determine the BPE based on the vocab size and corpora\"\"\"", "\n", "raise", "NotImplementedError", "(", "\"BPETokenizer is not implemented\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.BPETokenizer.tokenize": [[244, 247], ["NotImplementedError"], "methods", ["None"], ["", "def", "tokenize", "(", "self", ",", "sent", ")", ":", "\n", "    ", "\"\"\"Tokenizes a single sentence according to the determined BPE.\"\"\"", "\n", "raise", "NotImplementedError", "(", "\"BPETokenizer is not implemented\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.CharacterTokenizer.__init__": [[254, 257], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ")", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.CharacterTokenizer.tokenize": [[258, 261], ["None"], "methods", ["None"], ["", "def", "tokenize", "(", "self", ",", "sent", ")", ":", "\n", "    ", "\"\"\"Tokenizes a single sentence into characters.\"\"\"", "\n", "return", "' '", ".", "join", "(", "[", "(", "'__'", "if", "x", "==", "' '", "else", "x", ")", "for", "x", "in", "sent", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.UnicodeTokenizer.__init__": [[276, 280], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "use_merge_symbol", ":", "bool", "=", "True", ",", "merge_symbol", ":", "str", "=", "'\u21b9'", ",", "reverse", ":", "bool", "=", "False", ")", ":", "\n", "    ", "self", ".", "merge_symbol", "=", "merge_symbol", "if", "use_merge_symbol", "else", "''", "\n", "self", ".", "reverse", "=", "reverse", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.UnicodeTokenizer.tokenize": [[281, 320], ["range", "len", "len", "preproc.UnicodeTokenizer._is_weird", "str_list.append", "preproc.UnicodeTokenizer._is_weird", "c_p.isspace", "str_list.append", "str_list.append", "str_list.append", "preproc.UnicodeTokenizer._is_weird", "str_list.append", "str_list.append", "len", "c_n.isspace", "preproc.UnicodeTokenizer._is_weird", "len", "len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.UnicodeTokenizer._is_weird", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.UnicodeTokenizer._is_weird", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.UnicodeTokenizer._is_weird", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.UnicodeTokenizer._is_weird"], ["", "def", "tokenize", "(", "self", ",", "sent", ":", "str", ")", "->", "str", ":", "\n", "    ", "\"\"\"Tokenizes a single sentence.\n\n    Args:\n      sent: input sentence\n    Returns:\n      output sentence\n    \"\"\"", "\n", "str_list", "=", "[", "]", "\n", "if", "not", "self", ".", "reverse", ":", "\n", "      ", "for", "i", "in", "range", "(", "len", "(", "sent", ")", ")", ":", "\n", "        ", "c", "=", "sent", "[", "i", "]", "\n", "c_p", "=", "sent", "[", "i", "-", "1", "]", "if", "i", ">", "0", "else", "c", "\n", "c_n", "=", "sent", "[", "i", "+", "1", "]", "if", "i", "<", "len", "(", "sent", ")", "-", "1", "else", "c", "\n", "\n", "if", "not", "UnicodeTokenizer", ".", "_is_weird", "(", "c", ")", ":", "\n", "          ", "str_list", ".", "append", "(", "c", ")", "\n", "", "else", ":", "\n", "          ", "if", "not", "c_p", ".", "isspace", "(", ")", ":", "\n", "            ", "str_list", ".", "append", "(", "' '", "+", "self", ".", "merge_symbol", ")", "\n", "str_list", ".", "append", "(", "c", ")", "\n", "", "if", "not", "c_n", ".", "isspace", "(", ")", "and", "not", "UnicodeTokenizer", ".", "_is_weird", "(", "c_n", ")", ":", "\n", "            ", "str_list", ".", "append", "(", "self", ".", "merge_symbol", "+", "' '", ")", "\n", "", "", "", "", "else", ":", "# self.reverse==True", "\n", "      ", "i", "=", "0", "\n", "while", "i", "<", "len", "(", "sent", ")", ":", "\n", "        ", "c", "=", "sent", "[", "i", "]", "\n", "c_n", "=", "sent", "[", "i", "+", "1", "]", "if", "i", "<", "len", "(", "sent", ")", "-", "1", "else", "c", "\n", "c_nn", "=", "sent", "[", "i", "+", "2", "]", "if", "i", "<", "len", "(", "sent", ")", "-", "2", "else", "c", "\n", "\n", "if", "c", "+", "c_n", "==", "' '", "+", "self", ".", "merge_symbol", "and", "UnicodeTokenizer", ".", "_is_weird", "(", "c_nn", ")", ":", "\n", "          ", "i", "+=", "2", "\n", "", "elif", "UnicodeTokenizer", ".", "_is_weird", "(", "c", ")", "and", "c_n", "+", "c_nn", "==", "self", ".", "merge_symbol", "+", "' '", ":", "\n", "          ", "str_list", ".", "append", "(", "c", ")", "\n", "i", "+=", "3", "\n", "", "else", ":", "\n", "          ", "str_list", ".", "append", "(", "c", ")", "\n", "i", "+=", "1", "\n", "", "", "", "return", "''", ".", "join", "(", "str_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.UnicodeTokenizer._is_weird": [[321, 324], ["c.isspace", "unicodedata.category"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_is_weird", "(", "c", ")", ":", "\n", "    ", "return", "not", "(", "unicodedata", ".", "category", "(", "c", ")", "[", "0", "]", "in", "'LMN'", "or", "c", ".", "isspace", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.ExternalTokenizer.__init__": [[336, 349], ["print", "tokenizer_options.extend", "str", "str"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "path", ",", "tokenizer_args", "=", "None", ",", "arg_separator", "=", "' '", ")", ":", "\n", "    ", "\"\"\"Initialize the wrapper around the external tokenizer. \"\"\"", "\n", "if", "tokenizer_args", "is", "None", ":", "tokenizer_args", "=", "{", "}", "\n", "tokenizer_options", "=", "[", "]", "\n", "if", "arg_separator", "!=", "' '", ":", "\n", "      ", "tokenizer_options", "=", "[", "option", "+", "arg_separator", "+", "str", "(", "tokenizer_args", "[", "option", "]", ")", "\n", "for", "option", "in", "tokenizer_args", "]", "\n", "", "else", ":", "\n", "      ", "for", "option", "in", "tokenizer_args", ":", "\n", "        ", "tokenizer_options", ".", "extend", "(", "[", "option", ",", "str", "(", "tokenizer_args", "[", "option", "]", ")", "]", ")", "\n", "", "", "self", ".", "tokenizer_command", "=", "[", "path", "]", "+", "tokenizer_options", "\n", "print", "(", "self", ".", "tokenizer_command", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.ExternalTokenizer.tokenize": [[350, 372], ["subprocess.Popen", "isinstance", "subprocess.Popen.communicate", "isinstance", "sent.encode.encode.encode", "stdout.decode.decode.decode", "isinstance", "sys.stderr.write", "stderr.decode.decode.decode"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.write"], ["", "def", "tokenize", "(", "self", ",", "sent", ")", ":", "\n", "    ", "\"\"\"\n    Pass the sentence through the external tokenizer.\n\n    Args:\n      sent: An untokenized sentence\n    Return:\n      A tokenized sentence\n\n    \"\"\"", "\n", "encode_proc", "=", "subprocess", ".", "Popen", "(", "self", ".", "tokenizer_command", ",", "stdin", "=", "subprocess", ".", "PIPE", "\n", ",", "stdout", "=", "subprocess", ".", "PIPE", ",", "stderr", "=", "subprocess", ".", "PIPE", ")", "\n", "if", "isinstance", "(", "sent", ",", "str", ")", ":", "\n", "      ", "sent", "=", "sent", ".", "encode", "(", "'utf-8'", ")", "\n", "", "stdout", ",", "stderr", "=", "encode_proc", ".", "communicate", "(", "sent", ")", "\n", "if", "isinstance", "(", "stdout", ",", "bytes", ")", ":", "\n", "      ", "stdout", "=", "stdout", ".", "decode", "(", "'utf-8'", ")", "\n", "", "if", "stderr", ":", "\n", "      ", "if", "isinstance", "(", "stderr", ",", "bytes", ")", ":", "\n", "        ", "stderr", "=", "stderr", ".", "decode", "(", "'utf-8'", ")", "\n", "", "sys", ".", "stderr", ".", "write", "(", "stderr", "+", "'\\n'", ")", "\n", "", "return", "stdout", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.SentencepieceTokenizer.__init__": [[388, 417], ["xnmt.utils.make_parent_dir", "str", "str", "str().lower", "str", "str"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.make_parent_dir"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "train_files", ",", "vocab_size", ",", "overwrite", "=", "False", ",", "model_prefix", "=", "'sentpiece'", "\n", ",", "output_format", "=", "'piece'", ",", "model_type", "=", "'bpe'", ",", "hard_vocab_limit", "=", "True", "\n", ",", "encode_extra_options", "=", "None", ",", "decode_extra_options", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    This will initialize and train the sentencepiece tokenizer.\n\n    If overwrite is set to False, learned model will not be overwritten, even if parameters\n    are changed.\n\n    \"File\" output for Sentencepiece written to StringIO temporarily before being written to disk.\n\n    \"\"\"", "\n", "self", ".", "model_prefix", "=", "model_prefix", "\n", "self", ".", "output_format", "=", "output_format", "\n", "self", ".", "input_format", "=", "output_format", "\n", "self", ".", "overwrite", "=", "overwrite", "\n", "self", ".", "encode_extra_options", "=", "[", "'--extra_options='", "+", "encode_extra_options", "]", "if", "encode_extra_options", "else", "[", "]", "\n", "self", ".", "decode_extra_options", "=", "[", "'--extra_options='", "+", "decode_extra_options", "]", "if", "decode_extra_options", "else", "[", "]", "\n", "\n", "make_parent_dir", "(", "model_prefix", ")", "\n", "self", ".", "sentpiece_train_args", "=", "[", "'--input='", "+", "','", ".", "join", "(", "train_files", ")", ",", "\n", "'--model_prefix='", "+", "str", "(", "model_prefix", ")", ",", "\n", "'--vocab_size='", "+", "str", "(", "vocab_size", ")", ",", "\n", "'--hard_vocab_limit='", "+", "str", "(", "hard_vocab_limit", ")", ".", "lower", "(", ")", ",", "\n", "'--model_type='", "+", "str", "(", "model_type", ")", "\n", "]", "\n", "\n", "self", ".", "sentpiece_processor", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.SentencepieceTokenizer.init_sentencepiece": [[418, 430], ["spm.SentencePieceProcessor", "preproc.SentencepieceTokenizer.sentpiece_processor.Load", "spm.SentencePieceTrainer.Train", "os.path.exists", "os.path.exists"], "methods", ["None"], ["", "def", "init_sentencepiece", "(", "self", ")", ":", "\n", "    ", "import", "sentencepiece", "as", "spm", "\n", "if", "(", "(", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "model_prefix", "+", "'.model'", ")", ")", "or", "\n", "(", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "model_prefix", "+", "'.vocab'", ")", ")", "or", "\n", "self", ".", "overwrite", ")", ":", "\n", "# This calls sentencepiece. It's pretty verbose", "\n", "      ", "spm", ".", "SentencePieceTrainer", ".", "Train", "(", "' '", ".", "join", "(", "self", ".", "sentpiece_train_args", ")", ")", "\n", "\n", "", "self", ".", "sentpiece_processor", "=", "spm", ".", "SentencePieceProcessor", "(", ")", "\n", "self", ".", "sentpiece_processor", ".", "Load", "(", "'%s.model'", "%", "self", ".", "model_prefix", ")", "\n", "\n", "self", ".", "sentpiece_encode", "=", "self", ".", "sentpiece_processor", ".", "EncodeAsPieces", "if", "self", ".", "output_format", "==", "'piece'", "else", "self", ".", "sentpiece_processor", ".", "EncodeAsIds", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.SentencepieceTokenizer.tokenize": [[432, 437], ["preproc.SentencepieceTokenizer.init_sentencepiece", "preproc.SentencepieceTokenizer.sentpiece_encode"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.SentencepieceTokenizer.init_sentencepiece"], ["", "def", "tokenize", "(", "self", ",", "sent", ")", ":", "\n", "    ", "\"\"\"Tokenizes a single sentence into pieces.\"\"\"", "\n", "if", "self", ".", "sentpiece_processor", "is", "None", ":", "\n", "        ", "self", ".", "init_sentencepiece", "(", ")", "\n", "", "return", "' '", ".", "join", "(", "self", ".", "sentpiece_encode", "(", "sent", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.SentenceFilterer.__init__": [[444, 447], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "spec", ")", ":", "\n", "    ", "\"\"\"Initialize the filterer from a specification.\"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.SentenceFilterer.keep": [[448, 460], ["RuntimeError"], "methods", ["None"], ["", "def", "keep", "(", "self", ",", "sents", ")", ":", "\n", "    ", "\"\"\"Takes a list of inputs/outputs for a single sentence and decides whether to keep them.\n\n    In general, these inputs/outpus should already be segmented into words, so len() will return the number of words,\n    not the number of characters.\n\n    Args:\n      sents: A list of parallel sentences.\n    Returns:\n      True if they should be used or False if they should be filtered.\n    \"\"\"", "\n", "raise", "RuntimeError", "(", "\"Subclasses of SentenceFilterer must implement the keep() function\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.SentenceFilterer.from_spec": [[461, 474], ["preproc_list.append", "preproc.SentenceFiltererLength", "preproc_list.append", "RuntimeError", "preproc.SentenceFiltererMatchingRegex"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "@", "staticmethod", "\n", "def", "from_spec", "(", "spec", ")", ":", "\n", "    ", "\"\"\"Takes a list of preprocessor specifications, and returns the appropriate processors.\"\"\"", "\n", "preproc_list", "=", "[", "]", "\n", "if", "spec", "is", "not", "None", ":", "\n", "      ", "for", "my_spec", "in", "spec", ":", "\n", "        ", "if", "my_spec", "[", "\"type\"", "]", "==", "\"length\"", ":", "\n", "          ", "preproc_list", ".", "append", "(", "SentenceFiltererLength", "(", "my_spec", ")", ")", "\n", "", "elif", "my_spec", "[", "\"type\"", "]", "==", "\"matching-regex\"", ":", "\n", "          ", "preproc_list", ".", "append", "(", "SentenceFiltererMatchingRegex", "(", "my_spec", ")", ")", "\n", "", "else", ":", "\n", "          ", "raise", "RuntimeError", "(", "\"Unknown preprocessing type {}\"", ".", "format", "(", "my_spec", "[", "\"type\"", "]", ")", ")", "\n", "", "", "", "return", "preproc_list", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.SentenceFiltererMatchingRegex.__init__": [[479, 499], ["spec.items", "k.startswith", "k.split", "idx_map.get", "int"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.UninitializedYamlObject.get"], ["def", "__init__", "(", "self", ",", "spec", ")", ":", "\n", "    ", "\"\"\"Specifies the regular expressions to filter the sentences that we'll be getting.\n\n    The regular expressions are passed as a dictionary with keys as follows:\n      regex_INT: This will specify the regular expression for a specific language (zero indexed)\n      regex_src: Equivalent to regex_0\n      regex_trg: Equivalent to regex_1\n    \"\"\"", "\n", "self", ".", "regex", "=", "{", "}", "\n", "idx_map", "=", "{", "\"src\"", ":", "0", ",", "\"trg\"", ":", "1", "}", "\n", "for", "k", ",", "v", "in", "spec", ".", "items", "(", ")", ":", "\n", "      ", "if", "k", "==", "\"type\"", ":", "\n", "        ", "pass", "\n", "", "elif", "k", ".", "startswith", "(", "\"regex\"", ")", ":", "\n", "        ", "_", ",", "idx", "=", "k", ".", "split", "(", "\"_\"", ")", "\n", "idx_tmp", "=", "idx_map", ".", "get", "(", "idx", ")", "\n", "if", "idx_tmp", "is", "None", ":", "\n", "          ", "idx_tmp", "=", "int", "(", "idx", ")", "\n", "", "idx", "=", "idx_tmp", "\n", "self", ".", "regex", "[", "idx", "]", "=", "v", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.SentenceFiltererMatchingRegex.keep": [[500, 510], ["enumerate", "type", "preproc.SentenceFiltererMatchingRegex.regex.get", "re.search"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.UninitializedYamlObject.get"], ["", "", "", "def", "keep", "(", "self", ",", "sents", ")", ":", "\n", "    ", "\"\"\" Keep only sentences that match the regex.\n    \"\"\"", "\n", "for", "i", ",", "sent", "in", "enumerate", "(", "sents", ")", ":", "\n", "      ", "if", "type", "(", "sent", ")", "==", "list", ":", "\n", "        ", "sent", "=", "\" \"", ".", "join", "(", "sent", ")", "\n", "", "if", "self", ".", "regex", ".", "get", "(", "i", ")", "is", "not", "None", ":", "\n", "        ", "if", "re", ".", "search", "(", "self", ".", "regex", "[", "i", "]", ",", "sent", ")", "is", "None", ":", "\n", "          ", "return", "False", "\n", "", "", "", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.SentenceFiltererLength.__init__": [[514, 548], ["spec.items", "k.split", "idx_map.get", "int", "RuntimeError"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.UninitializedYamlObject.get"], ["def", "__init__", "(", "self", ",", "spec", ")", ":", "\n", "    ", "\"\"\"Specifies the type of length limitations on the sentences that we'll be getting.\n\n    The limitations are passed as a dictionary with keys as follows:\n      max/min: This will specify the default maximum and minimum length.\n      max_INT/min_INT: This will specify limitations for a specific language (zero indexed)\n      max_src/min_src: Equivalent to max_0/min_0\n      max_trg/min_trg: Equivalent to max_1/min_1\n    \"\"\"", "\n", "self", ".", "each_max", "=", "{", "}", "\n", "self", ".", "each_min", "=", "{", "}", "\n", "self", ".", "overall_max", "=", "-", "1", "\n", "self", ".", "overall_min", "=", "-", "1", "\n", "idx_map", "=", "{", "\"src\"", ":", "0", ",", "\"trg\"", ":", "1", "}", "\n", "for", "k", ",", "v", "in", "spec", ".", "items", "(", ")", ":", "\n", "      ", "if", "k", "==", "\"type\"", ":", "\n", "        ", "pass", "\n", "", "elif", "k", "==", "\"max\"", ":", "\n", "        ", "self", ".", "overall_max", "=", "v", "\n", "", "elif", "k", "==", "\"min\"", ":", "\n", "        ", "self", ".", "overall_min", "=", "v", "\n", "", "else", ":", "\n", "        ", "direc", ",", "idx", "=", "k", ".", "split", "(", "'_'", ")", "\n", "idx_tmp", "=", "idx_map", ".", "get", "(", "idx", ")", "\n", "if", "idx_tmp", "is", "None", ":", "\n", "          ", "idx_tmp", "=", "int", "(", "idx", ")", "\n", "", "idx", "=", "idx_tmp", "\n", "\n", "if", "direc", "==", "\"max\"", ":", "\n", "          ", "self", ".", "each_max", "[", "idx", "]", "=", "v", "\n", "", "elif", "direc", "==", "\"min\"", ":", "\n", "          ", "self", ".", "each_min", "[", "idx", "]", "=", "v", "\n", "", "else", ":", "\n", "          ", "raise", "RuntimeError", "(", "\"Unknown limitation type {} in length-based sentence filterer\"", ".", "format", "(", "k", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.SentenceFiltererLength.keep": [[549, 559], ["enumerate", "preproc.SentenceFiltererLength.each_max.get", "preproc.SentenceFiltererLength.each_min.get", "type", "RuntimeError", "len", "len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.UninitializedYamlObject.get", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.UninitializedYamlObject.get"], ["", "", "", "", "def", "keep", "(", "self", ",", "sents", ")", ":", "\n", "    ", "\"\"\"Filter sentences by length.\"\"\"", "\n", "for", "i", ",", "sent", "in", "enumerate", "(", "sents", ")", ":", "\n", "      ", "if", "type", "(", "sent", ")", "==", "str", ":", "\n", "        ", "raise", "RuntimeError", "(", "\"length-based sentence filterer does not support `str` input at the moment\"", ")", "\n", "", "my_max", "=", "self", ".", "each_max", ".", "get", "(", "i", ",", "self", ".", "overall_max", ")", "\n", "my_min", "=", "self", ".", "each_min", ".", "get", "(", "i", ",", "self", ".", "overall_min", ")", "\n", "if", "len", "(", "sent", ")", "<", "my_min", "or", "(", "my_max", "!=", "-", "1", "and", "len", "(", "sent", ")", ">", "my_max", ")", ":", "\n", "        ", "return", "False", "\n", "", "", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.VocabFilterer.__init__": [[565, 568], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "spec", ")", ":", "\n", "    ", "\"\"\"Initialize the filterer from a specification.\"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.VocabFilterer.filter": [[569, 578], ["RuntimeError"], "methods", ["None"], ["", "def", "filter", "(", "self", ",", "vocab", ")", ":", "\n", "    ", "\"\"\"Filter a vocabulary.\n\n    Args:\n      vocab: A dictionary of vocabulary words with their frequecies.\n    Returns:\n      A new dictionary with frequencies containing only the words to leave in the vocabulary.\n    \"\"\"", "\n", "raise", "RuntimeError", "(", "\"Subclasses of VocabFilterer must implement the filter() function\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.VocabFilterer.from_spec": [[579, 592], ["preproc_list.append", "preproc.VocabFiltererFreq", "preproc_list.append", "RuntimeError", "preproc.VocabFiltererRank"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "@", "staticmethod", "\n", "def", "from_spec", "(", "spec", ")", ":", "\n", "    ", "\"\"\"Takes a list of preprocessor specifications, and returns the appropriate processors.\"\"\"", "\n", "preproc_list", "=", "[", "]", "\n", "if", "spec", "is", "not", "None", ":", "\n", "      ", "for", "my_spec", "in", "spec", ":", "\n", "        ", "if", "my_spec", "[", "\"type\"", "]", "==", "\"freq\"", ":", "\n", "          ", "preproc_list", ".", "append", "(", "VocabFiltererFreq", "(", "my_spec", ")", ")", "\n", "", "elif", "my_spec", "[", "\"type\"", "]", "==", "\"rank\"", ":", "\n", "          ", "preproc_list", ".", "append", "(", "VocabFiltererRank", "(", "my_spec", ")", ")", "\n", "", "else", ":", "\n", "          ", "raise", "RuntimeError", "(", "\"Unknown VocabFilterer type {}\"", ".", "format", "(", "my_spec", "[", "\"type\"", "]", ")", ")", "\n", "", "", "", "return", "preproc_list", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.VocabFiltererFreq.__init__": [[596, 600], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "min_freq", ")", ":", "\n", "    ", "\"\"\"Specification contains a single value min_freq\"\"\"", "\n", "self", ".", "min_freq", "=", "min_freq", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.VocabFiltererFreq.filter": [[601, 603], ["vocab.items"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items"], ["", "def", "filter", "(", "self", ",", "vocab", ")", ":", "\n", "    ", "return", "{", "k", ":", "v", "for", "k", ",", "v", "in", "vocab", ".", "items", "(", ")", "if", "v", ">=", "self", ".", "min_freq", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.VocabFiltererRank.__init__": [[607, 611], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "max_rank", ")", ":", "\n", "    ", "\"\"\"Specification contains a single value max_rank\"\"\"", "\n", "self", ".", "max_rank", "=", "max_rank", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.VocabFiltererRank.filter": [[612, 616], ["len", "sorted", "vocab.items"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items"], ["", "def", "filter", "(", "self", ",", "vocab", ")", ":", "\n", "    ", "if", "len", "(", "vocab", ")", "<=", "self", ".", "max_rank", ":", "\n", "      ", "return", "vocab", "\n", "", "return", "{", "k", ":", "v", "for", "k", ",", "v", "in", "sorted", "(", "vocab", ".", "items", "(", ")", ",", "key", "=", "lambda", "x", ":", "-", "x", "[", "1", "]", ")", "[", ":", "self", ".", "max_rank", "]", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.Extractor.extract_to": [[622, 624], ["RuntimeError"], "methods", ["None"], ["def", "extract_to", "(", "self", ",", "in_file", ",", "out_file", ")", ":", "\n", "    ", "raise", "RuntimeError", "(", "\"Subclasses of Extractor must implement the extract_to() function\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.MelFiltExtractor.__init__": [[627, 631], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "nfilt", "=", "40", ",", "delta", "=", "False", ")", ":", "\n", "    ", "self", ".", "delta", "=", "delta", "\n", "self", ".", "nfilt", "=", "nfilt", "\n", "", "def", "extract_to", "(", "self", ",", "in_file", ",", "out_file", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.preproc.MelFiltExtractor.extract_to": [[631, 672], ["time.time", "xnmt.logger.debug", "out_file.endswith", "ValueError", "open", "h5py.File", "yaml.load", "collections.defaultdict", "enumerate", "collections.defaultdict.keys", "db_item.get", "db_by_speaker[].append", "xnmt.thirdparty.speech_features.get_mean_std", "zip", "librosa.load", "xnmt.thirdparty.speech_features.logfbank", "data.append", "numpy.concatenate", "xnmt.thirdparty.speech_features.normalize", "hf.create_dataset", "db_item[].split", "len", "ValueError", "xnmt.thirdparty.speech_features.calculate_delta", "numpy.concatenate", "str", "time.time", "db_item.get", "db_item.get"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.UninitializedYamlObject.get", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.base.get_mean_std", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.base.logfbank", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.base.normalize", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.base.calculate_delta", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.UninitializedYamlObject.get", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.UninitializedYamlObject.get"], ["", "def", "extract_to", "(", "self", ",", "in_file", ",", "out_file", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n      in_file: yaml file that contains a list of dictionaries.\n               Each dictionary contains:\n               - wav (str): path to wav file\n               - offset (float): start time stamp (optional)\n               - duration (float): stop time stamp (optional)\n               - speaker: speaker id for normalization (optional; if not given, the filename is used as speaker id)\n      out_file: a filename ending in \".h5\"\n    \"\"\"", "\n", "import", "librosa", "\n", "if", "not", "out_file", ".", "endswith", "(", "\".h5\"", ")", ":", "raise", "ValueError", "(", "f\"out_file must end in '.h5', was '{out_file}'\"", ")", "\n", "start_time", "=", "time", ".", "time", "(", ")", "\n", "with", "open", "(", "in_file", ")", "as", "in_stream", ",", "h5py", ".", "File", "(", "out_file", ",", "\"w\"", ")", "as", "hf", ":", "\n", "      ", "db", "=", "yaml", ".", "load", "(", "in_stream", ")", "\n", "db_by_speaker", "=", "defaultdict", "(", "list", ")", "\n", "for", "db_index", ",", "db_item", "in", "enumerate", "(", "db", ")", ":", "\n", "        ", "speaker_id", "=", "db_item", ".", "get", "(", "\"speaker\"", ",", "db_item", "[", "\"wav\"", "]", ".", "split", "(", "\"/\"", ")", "[", "-", "1", "]", ")", "\n", "db_item", "[", "\"index\"", "]", "=", "db_index", "\n", "db_by_speaker", "[", "speaker_id", "]", ".", "append", "(", "db_item", ")", "\n", "", "for", "speaker_id", "in", "db_by_speaker", ".", "keys", "(", ")", ":", "\n", "        ", "data", "=", "[", "]", "\n", "for", "db_item", "in", "db_by_speaker", "[", "speaker_id", "]", ":", "\n", "          ", "y", ",", "sr", "=", "librosa", ".", "load", "(", "db_item", "[", "\"wav\"", "]", ",", "sr", "=", "16000", ",", "\n", "offset", "=", "db_item", ".", "get", "(", "\"offset\"", ",", "0.0", ")", ",", "\n", "duration", "=", "db_item", ".", "get", "(", "\"duration\"", ",", "None", ")", ")", "\n", "if", "len", "(", "y", ")", "==", "0", ":", "raise", "ValueError", "(", "f\"encountered an empty or out of bounds segment: {db_item}\"", ")", "\n", "logmel", "=", "logfbank", "(", "y", ",", "samplerate", "=", "sr", ",", "nfilt", "=", "self", ".", "nfilt", ")", "\n", "if", "self", ".", "delta", ":", "\n", "            ", "delta", "=", "calculate_delta", "(", "logmel", ")", "\n", "features", "=", "np", ".", "concatenate", "(", "[", "logmel", ",", "delta", "]", ",", "axis", "=", "1", ")", "\n", "", "else", ":", "\n", "            ", "features", "=", "logmel", "\n", "", "data", ".", "append", "(", "features", ")", "\n", "", "mean", ",", "std", "=", "get_mean_std", "(", "np", ".", "concatenate", "(", "data", ")", ")", "\n", "for", "features", ",", "db_item", "in", "zip", "(", "data", ",", "db_by_speaker", "[", "speaker_id", "]", ")", ":", "\n", "          ", "features", "=", "normalize", "(", "features", ",", "mean", ",", "std", ")", "\n", "hf", ".", "create_dataset", "(", "str", "(", "db_item", "[", "\"index\"", "]", ")", ",", "data", "=", "features", ")", "\n", "", "", "", "logger", ".", "debug", "(", "f\"feature extraction took {time.time()-start_time:.3f} seconds\"", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_trackers.AccumTimeTracker.__init__": [[7, 10], ["None"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ")", ":", "\n", "    ", "self", ".", "start_time", "=", "None", "\n", "self", ".", "accum_time", "=", "0.0", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_trackers.AccumTimeTracker.__enter__": [[11, 13], ["time.time"], "methods", ["None"], ["", "def", "__enter__", "(", "self", ")", ":", "\n", "    ", "self", ".", "start_time", "=", "time", ".", "time", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_trackers.AccumTimeTracker.__exit__": [[14, 16], ["time.time"], "methods", ["None"], ["", "def", "__exit__", "(", "self", ",", "*", "args", ")", ":", "\n", "    ", "self", ".", "accum_time", "+=", "time", ".", "time", "(", ")", "-", "self", ".", "start_time", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_trackers.AccumTimeTracker.get_and_reset": [[17, 21], ["None"], "methods", ["None"], ["", "def", "get_and_reset", "(", "self", ")", ":", "\n", "    ", "ret", "=", "self", ".", "accum_time", "\n", "self", ".", "accum_time", "=", "0.0", "\n", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_trackers.TrainLossTracker.__init__": [[29, 43], ["xnmt.losses.FactoredLossVal", "loss_trackers.AccumTimeTracker", "time.time"], "methods", ["None"], ["@", "events", ".", "register_xnmt_handler", "\n", "def", "__init__", "(", "self", ",", "training_task", ")", ":", "\n", "    ", "self", ".", "training_task", "=", "training_task", "\n", "\n", "self", ".", "epoch_loss", "=", "losses", ".", "FactoredLossVal", "(", ")", "\n", "self", ".", "epoch_words", "=", "0", "\n", "self", ".", "last_report_sents_into_epoch", "=", "0", "\n", "self", ".", "last_report_sents_since_start", "=", "0", "\n", "\n", "self", ".", "last_report_words", "=", "0", "\n", "\n", "self", ".", "time_tracker", "=", "AccumTimeTracker", "(", ")", "\n", "self", ".", "start_time", "=", "time", ".", "time", "(", ")", "\n", "self", ".", "name", "=", "self", ".", "training_task", ".", "name", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_trackers.TrainLossTracker.on_new_epoch": [[44, 51], ["loss_trackers.TrainLossTracker.epoch_loss.clear"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.clear"], ["", "@", "events", ".", "handle_xnmt_event", "\n", "def", "on_new_epoch", "(", "self", ",", "training_task", ",", "num_sents", ")", ":", "\n", "    ", "if", "training_task", "is", "self", ".", "training_task", ":", "\n", "      ", "self", ".", "epoch_loss", ".", "clear", "(", ")", "\n", "self", ".", "epoch_words", "=", "0", "\n", "self", ".", "last_report_sents_since_start", "=", "0", "\n", "self", ".", "last_report_words", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_trackers.TrainLossTracker.report": [[52, 92], ["loss_trackers.TrainLossTracker.count_trg_words", "loss_trackers.TrainLossTracker.time_tracker.get_and_reset", "xnmt.utils.log_readable_and_tensorboard", "loss_trackers.TrainLossTracker.training_task.cur_num_sentences", "loss_trackers.TrainLossTracker.epoch_loss.sum_factors", "len", "loss_trackers.TrainLossTracker.epoch_loss.items", "loss_trackers.TrainLossTracker.training_task.cur_num_sentences", "xnmt.utils.format_time", "xnmt.utils.log_readable_and_tensorboard", "time.time"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_trackers.TrainLossTracker.count_trg_words", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_trackers.AccumTimeTracker.get_and_reset", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.utils.log_readable_and_tensorboard", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.SimpleTrainingTask.cur_num_sentences", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.sum_factors", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.SimpleTrainingTask.cur_num_sentences", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.utils.format_time", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.utils.log_readable_and_tensorboard"], ["", "", "def", "report", "(", "self", ",", "trg", ",", "loss", ")", ":", "\n", "    ", "\"\"\"\n    Accumulate training loss and report every REPORT_EVERY sentences.\n    \"\"\"", "\n", "self", ".", "epoch_words", "+=", "self", ".", "count_trg_words", "(", "trg", ")", "\n", "self", ".", "epoch_loss", "+=", "loss", "\n", "\n", "sent_num_not_report", "=", "self", ".", "training_task", ".", "training_state", ".", "sents_since_start", "-", "self", ".", "last_report_sents_since_start", "\n", "should_report", "=", "sent_num_not_report", ">=", "TrainLossTracker", ".", "REPORT_EVERY", "or", "self", ".", "training_task", ".", "training_state", ".", "sents_into_epoch", "==", "self", ".", "training_task", ".", "cur_num_sentences", "(", ")", "\n", "\n", "if", "should_report", ":", "\n", "      ", "fractional_epoch", "=", "(", "self", ".", "training_task", ".", "training_state", ".", "epoch_num", "-", "1", ")", "+", "self", ".", "training_task", ".", "training_state", ".", "sents_into_epoch", "/", "self", ".", "training_task", ".", "cur_num_sentences", "(", ")", "\n", "accum_time", "=", "self", ".", "time_tracker", ".", "get_and_reset", "(", ")", "\n", "rep_train_loss", "=", "self", ".", "epoch_loss", ".", "sum_factors", "(", ")", "/", "self", ".", "epoch_words", "\n", "utils", ".", "log_readable_and_tensorboard", "(", "\n", "template", "=", "TrainLossTracker", ".", "REPORT_TEMPLATE_SPEED", "if", "accum_time", "else", "TrainLossTracker", ".", "REPORT_TEMPLATE", ",", "\n", "args", "=", "{", "\"loss\"", ":", "rep_train_loss", "}", ",", "\n", "n_iter", "=", "fractional_epoch", ",", "\n", "time", "=", "utils", ".", "format_time", "(", "time", ".", "time", "(", ")", "-", "self", ".", "start_time", ")", ",", "\n", "words", "=", "self", ".", "epoch_words", ",", "\n", "data_name", "=", "\"train\"", ",", "\n", "task_name", "=", "self", ".", "name", ",", "\n", "words_per_sec", "=", "(", "self", ".", "epoch_words", "-", "self", ".", "last_report_words", ")", "/", "accum_time", "if", "accum_time", "else", "None", "\n", ")", "\n", "\n", "if", "len", "(", "self", ".", "epoch_loss", ")", ">", "1", ":", "\n", "        ", "for", "loss_name", ",", "loss_values", "in", "self", ".", "epoch_loss", ".", "items", "(", ")", ":", "\n", "          ", "utils", ".", "log_readable_and_tensorboard", "(", "template", "=", "TrainLossTracker", ".", "REPORT_TEMPLATE_ADDITIONAL", ",", "\n", "args", "=", "{", "loss_name", ":", "loss_values", "/", "self", ".", "epoch_words", "}", ",", "\n", "n_iter", "=", "fractional_epoch", ",", "\n", "data_name", "=", "\"train\"", ",", "\n", "task_name", "=", "self", ".", "name", ",", "\n", "loss_name", "=", "loss_name", ",", "\n", "loss", "=", "loss_values", "/", "self", ".", "epoch_words", ",", "\n", ")", "\n", "\n", "", "", "self", ".", "last_report_words", "=", "self", ".", "epoch_words", "\n", "self", ".", "last_report_sents_since_start", "=", "self", ".", "training_task", ".", "training_state", ".", "sents_since_start", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_trackers.TrainLossTracker.count_trg_words": [[93, 98], ["isinstance", "sum", "trg_words.len_unpadded", "inp.len_unpadded"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.len_unpadded", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.len_unpadded"], ["", "", "def", "count_trg_words", "(", "self", ",", "trg_words", ":", "Union", "[", "sent", ".", "Sentence", ",", "batchers", ".", "Batch", "]", ")", "->", "int", ":", "\n", "    ", "if", "isinstance", "(", "trg_words", ",", "batchers", ".", "Batch", ")", ":", "\n", "      ", "return", "sum", "(", "inp", ".", "len_unpadded", "(", ")", "for", "inp", "in", "trg_words", ")", "\n", "", "else", ":", "\n", "      ", "return", "trg_words", ".", "len_unpadded", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_trackers.DevLossTracker.__init__": [[105, 118], ["time.time", "loss_trackers.AccumTimeTracker"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "training_task", ",", "eval_every", ",", "name", "=", "None", ")", ":", "\n", "    ", "self", ".", "training_task", "=", "training_task", "\n", "self", ".", "eval_dev_every", "=", "eval_every", "\n", "\n", "self", ".", "last_report_sents_since_start", "=", "0", "\n", "self", ".", "fractional_epoch", "=", "0", "\n", "\n", "self", ".", "dev_score", "=", "None", "\n", "self", ".", "aux_scores", "=", "[", "]", "\n", "\n", "self", ".", "start_time", "=", "time", ".", "time", "(", ")", "\n", "self", ".", "name", "=", "name", "\n", "self", ".", "time_tracker", "=", "AccumTimeTracker", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_trackers.DevLossTracker.set_dev_score": [[119, 121], ["None"], "methods", ["None"], ["", "def", "set_dev_score", "(", "self", ",", "dev_score", ")", ":", "\n", "    ", "self", ".", "dev_score", "=", "dev_score", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_trackers.DevLossTracker.add_aux_score": [[122, 124], ["loss_trackers.DevLossTracker.aux_scores.append"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "def", "add_aux_score", "(", "self", ",", "score", ")", ":", "\n", "    ", "self", ".", "aux_scores", ".", "append", "(", "score", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_trackers.DevLossTracker.should_report_dev": [[125, 131], ["loss_trackers.DevLossTracker.training_task.cur_num_sentences"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.SimpleTrainingTask.cur_num_sentences"], ["", "def", "should_report_dev", "(", "self", ")", ":", "\n", "    ", "sent_num_not_report", "=", "self", ".", "training_task", ".", "training_state", ".", "sents_since_start", "-", "self", ".", "last_report_sents_since_start", "\n", "if", "self", ".", "eval_dev_every", ">", "0", ":", "\n", "      ", "return", "sent_num_not_report", ">=", "self", ".", "eval_dev_every", "\n", "", "else", ":", "\n", "      ", "return", "sent_num_not_report", ">=", "self", ".", "training_task", ".", "cur_num_sentences", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_trackers.DevLossTracker.report": [[132, 155], ["time.time", "loss_trackers.DevLossTracker.time_tracker.get_and_reset", "xnmt.utils.log_readable_and_tensorboard", "xnmt.logger.info", "xnmt.utils.log_readable_and_tensorboard", "DevLossTracker.REPORT_TEMPLATE_TIME_NEEDED.format", "loss_trackers.DevLossTracker.training_task.cur_num_sentences", "xnmt.utils.format_time", "loss_trackers.DevLossTracker.dev_score.metric_name", "loss_trackers.DevLossTracker.dev_score.value", "xnmt.utils.format_time", "score.metric_name", "score.value"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_trackers.AccumTimeTracker.get_and_reset", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.utils.log_readable_and_tensorboard", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.utils.log_readable_and_tensorboard", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.YamlFormatter.format", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.SimpleTrainingTask.cur_num_sentences", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.utils.format_time", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.metric_name", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.utils.format_time", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.metric_name", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value"], ["", "", "def", "report", "(", "self", ")", ":", "\n", "    ", "this_report_time", "=", "time", ".", "time", "(", ")", "\n", "self", ".", "last_report_sents_since_start", "=", "self", ".", "training_task", ".", "training_state", ".", "sents_since_start", "\n", "self", ".", "fractional_epoch", "=", "(", "self", ".", "training_task", ".", "training_state", ".", "epoch_num", "-", "1", ")", "+", "self", ".", "training_task", ".", "training_state", ".", "sents_into_epoch", "/", "self", ".", "training_task", ".", "cur_num_sentences", "(", ")", "\n", "dev_time", "=", "self", ".", "time_tracker", ".", "get_and_reset", "(", ")", "\n", "utils", ".", "log_readable_and_tensorboard", "(", "template", "=", "DevLossTracker", ".", "REPORT_TEMPLATE_DEV", ",", "\n", "args", "=", "{", "self", ".", "dev_score", ".", "metric_name", "(", ")", ":", "self", ".", "dev_score", ".", "value", "(", ")", "}", ",", "\n", "n_iter", "=", "self", ".", "fractional_epoch", ",", "\n", "data_name", "=", "\"dev\"", ",", "\n", "task_name", "=", "self", ".", "name", ",", "\n", "score", "=", "self", ".", "dev_score", ",", "\n", "time", "=", "utils", ".", "format_time", "(", "this_report_time", "-", "self", ".", "start_time", ")", ")", "\n", "for", "score", "in", "self", ".", "aux_scores", ":", "\n", "      ", "utils", ".", "log_readable_and_tensorboard", "(", "template", "=", "DevLossTracker", ".", "REPORT_TEMPLATE_DEV_AUX", ",", "\n", "args", "=", "{", "score", ".", "metric_name", "(", ")", ":", "score", ".", "value", "(", ")", "}", ",", "\n", "n_iter", "=", "self", ".", "fractional_epoch", ",", "\n", "data_name", "=", "\"dev\"", ",", "\n", "task_name", "=", "self", ".", "name", ",", "\n", "score", "=", "score", ")", "\n", "", "logger", ".", "info", "(", "DevLossTracker", ".", "REPORT_TEMPLATE_TIME_NEEDED", ".", "format", "(", "time_needed", "=", "utils", ".", "format_time", "(", "dev_time", ")", ",", "\n", "extra", "=", "{", "\"task_name\"", ":", "self", ".", "name", "}", ")", ")", "\n", "self", ".", "aux_scores", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.length_norm.LengthNormalization.normalize_completed": [[16, 28], ["NotImplementedError"], "methods", ["None"], ["def", "normalize_completed", "(", "self", ",", "completed_hyps", ":", "Sequence", "[", "'search_strategies.BeamSearch.Hypothesis'", "]", ",", "\n", "src_length", ":", "Optional", "[", "int", "]", "=", "None", ")", "->", "Sequence", "[", "float", "]", ":", "\n", "    ", "\"\"\"\n    Apply normalization step to completed hypotheses after search and return the normalized scores.\n    \n    Args:\n      completed_hyps: list of completed Hypothesis objects, will be normalized in-place\n      src_length: length of source sequence (None if not given)\n    Returns:\n      normalized scores\n    \"\"\"", "\n", "raise", "NotImplementedError", "(", "'normalize_completed must be implemented in LengthNormalization subclasses'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.length_norm.LengthNormalization.normalize_partial_topk": [[29, 41], ["None"], "methods", ["None"], ["", "def", "normalize_partial_topk", "(", "self", ",", "score_so_far", ",", "score_to_add", ",", "new_len", ")", ":", "\n", "    ", "\"\"\"\n    Apply normalization step after expanding a partial hypothesis and selecting the top k scores.\n\n    Args:\n      score_so_far: log score of the partial hypothesis\n      score_to_add: log score of the top-k item that is to be added\n      new_len: new length of partial hypothesis with current word already appended\n    Returns:\n      new score after applying score_to_add to score_so_far\n    \"\"\"", "\n", "return", "score_so_far", "+", "score_to_add", "# default behavior: add up the log probs", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.length_norm.NoNormalization.normalize_completed": [[49, 52], ["None"], "methods", ["None"], ["def", "normalize_completed", "(", "self", ",", "completed_hyps", ":", "Sequence", "[", "'search_strategies.BeamSearch.Hypothesis'", "]", ",", "\n", "src_length", ":", "Optional", "[", "int", "]", "=", "None", ")", "->", "Sequence", "[", "float", "]", ":", "\n", "    ", "return", "[", "hyp", ".", "score", "for", "hyp", "in", "completed_hyps", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.length_norm.AdditiveNormalization.__init__": [[59, 63], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "penalty", ":", "numbers", ".", "Real", "=", "-", "0.1", ",", "apply_during_search", ":", "bool", "=", "False", ")", ":", "\n", "    ", "self", ".", "penalty", "=", "penalty", "\n", "self", ".", "apply_during_search", "=", "apply_during_search", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.length_norm.AdditiveNormalization.normalize_completed": [[64, 70], ["len"], "methods", ["None"], ["", "def", "normalize_completed", "(", "self", ",", "completed_hyps", ":", "Sequence", "[", "'search_strategies.BeamSearch.Hypothesis'", "]", ",", "\n", "src_length", ":", "Optional", "[", "int", "]", "=", "None", ")", "->", "Sequence", "[", "float", "]", ":", "\n", "    ", "if", "self", ".", "apply_during_search", ":", "\n", "      ", "return", "[", "hyp", ".", "score", "for", "hyp", "in", "completed_hyps", "]", "\n", "", "else", ":", "\n", "      ", "return", "[", "hyp", ".", "score", "+", "(", "len", "(", "hyp", ".", "id_list", ")", "*", "self", ".", "penalty", ")", "for", "hyp", "in", "completed_hyps", "]", "\n", "", "", "def", "normalize_partial_topk", "(", "self", ",", "score_so_far", ",", "score_to_add", ",", "new_len", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.length_norm.AdditiveNormalization.normalize_partial_topk": [[70, 72], ["None"], "methods", ["None"], ["", "", "def", "normalize_partial_topk", "(", "self", ",", "score_so_far", ",", "score_to_add", ",", "new_len", ")", ":", "\n", "    ", "return", "score_so_far", "+", "score_to_add", "+", "(", "self", ".", "penalty", "if", "self", ".", "apply_during_search", "else", "0.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.length_norm.PolynomialNormalization.__init__": [[80, 85], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "m", ":", "numbers", ".", "Real", "=", "1", ",", "apply_during_search", ":", "bool", "=", "False", ")", ":", "\n", "    ", "self", ".", "m", "=", "m", "\n", "self", ".", "apply_during_search", "=", "apply_during_search", "\n", "self", ".", "pows", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.length_norm.PolynomialNormalization.normalize_completed": [[86, 92], ["pow", "len"], "methods", ["None"], ["", "def", "normalize_completed", "(", "self", ",", "completed_hyps", ":", "Sequence", "[", "'search_strategies.BeamSearch.Hypothesis'", "]", ",", "\n", "src_length", ":", "Optional", "[", "int", "]", "=", "None", ")", "->", "Sequence", "[", "float", "]", ":", "\n", "    ", "if", "self", ".", "apply_during_search", ":", "\n", "      ", "return", "[", "hyp", ".", "score", "for", "hyp", "in", "completed_hyps", "]", "\n", "", "else", ":", "\n", "      ", "return", "[", "(", "hyp", ".", "score", "/", "pow", "(", "len", "(", "hyp", ".", "output", ".", "word_ids", ")", ",", "self", ".", "m", ")", ")", "for", "hyp", "in", "completed_hyps", "]", "\n", "", "", "def", "normalize_partial_topk", "(", "self", ",", "score_so_far", ",", "score_to_add", ",", "new_len", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.length_norm.PolynomialNormalization.normalize_partial_topk": [[92, 98], ["length_norm.PolynomialNormalization.update_pows"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.length_norm.PolynomialNormalization.update_pows"], ["", "", "def", "normalize_partial_topk", "(", "self", ",", "score_so_far", ",", "score_to_add", ",", "new_len", ")", ":", "\n", "    ", "if", "self", ".", "apply_during_search", ":", "\n", "      ", "self", ".", "update_pows", "(", "new_len", ")", "\n", "return", "(", "score_so_far", "*", "self", ".", "pows", "[", "new_len", "-", "1", "]", "+", "score_to_add", ")", "/", "self", ".", "pows", "[", "new_len", "]", "\n", "", "else", ":", "\n", "      ", "return", "score_so_far", "+", "score_to_add", "\n", "", "", "def", "update_pows", "(", "self", ",", "new_len", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.length_norm.PolynomialNormalization.update_pows": [[98, 102], ["len", "range", "len", "length_norm.PolynomialNormalization.pows.append", "pow"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "", "def", "update_pows", "(", "self", ",", "new_len", ")", ":", "\n", "    ", "if", "len", "(", "self", ".", "pows", ")", "<", "new_len", "+", "1", ":", "\n", "      ", "for", "i", "in", "range", "(", "len", "(", "self", ".", "pows", ")", ",", "new_len", "+", "1", ")", ":", "\n", "        ", "self", ".", "pows", ".", "append", "(", "pow", "(", "i", ",", "self", ".", "m", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.length_norm.MultinomialNormalization.__init__": [[112, 115], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "sent_stats", ")", ":", "\n", "    ", "self", ".", "stats", "=", "sent_stats", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.length_norm.MultinomialNormalization.trg_length_prob": [[116, 122], ["len", "length_norm.MultinomialNormalization.stats.src_stat.get", "length_norm.MultinomialNormalization.trg_len_distribution.get"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.UninitializedYamlObject.get", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.UninitializedYamlObject.get"], ["", "def", "trg_length_prob", "(", "self", ",", "src_length", ",", "trg_length", ")", ":", "\n", "    ", "v", "=", "len", "(", "self", ".", "stats", ".", "src_stat", ")", "\n", "if", "src_length", "in", "self", ".", "stats", ".", "src_stat", ":", "\n", "      ", "src_stat", "=", "self", ".", "stats", ".", "src_stat", ".", "get", "(", "src_length", ")", "\n", "return", "(", "src_stat", ".", "trg_len_distribution", ".", "get", "(", "trg_length", ",", "0", ")", "+", "1", ")", "/", "(", "src_stat", ".", "num_sents", "+", "v", ")", "\n", "", "return", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.length_norm.MultinomialNormalization.normalize_completed": [[123, 133], ["numpy.log", "length_norm.MultinomialNormalization.trg_length_prob", "len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.length_norm.GaussianNormalization.trg_length_prob"], ["", "def", "normalize_completed", "(", "self", ",", "completed_hyps", ":", "Sequence", "[", "'search_strategies.BeamSearch.Hypothesis'", "]", ",", "\n", "src_length", ":", "Optional", "[", "int", "]", "=", "None", ")", "->", "Sequence", "[", "float", "]", ":", "\n", "    ", "\"\"\"\n    Args:\n      completed_hyps:\n      src_length: length of the src sent\n    \"\"\"", "\n", "assert", "(", "src_length", "is", "not", "None", ")", ",", "\"Length of Source Sentence is required\"", "\n", "\n", "return", "[", "hyp", ".", "score", "+", "np", ".", "log", "(", "self", ".", "trg_length_prob", "(", "src_length", ",", "len", "(", "hyp", ".", "id_list", ")", ")", ")", "for", "hyp", "in", "completed_hyps", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.length_norm.GaussianNormalization.__init__": [[144, 149], ["length_norm.GaussianNormalization.fit_distribution"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.length_norm.GaussianNormalization.fit_distribution"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "sent_stats", ")", ":", "\n", "    ", "self", ".", "stats", "=", "sent_stats", ".", "trg_stat", "\n", "self", ".", "num_sent", "=", "sent_stats", ".", "num_pair", "\n", "self", ".", "fit_distribution", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.length_norm.GaussianNormalization.fit_distribution": [[150, 159], ["numpy.zeros", "scipy.stats.norm.fit", "scipy.stats.norm"], "methods", ["None"], ["", "def", "fit_distribution", "(", "self", ")", ":", "\n", "    ", "y", "=", "np", ".", "zeros", "(", "self", ".", "num_sent", ")", "\n", "curr_iter", "=", "0", "\n", "for", "key", "in", "self", ".", "stats", ":", "\n", "      ", "iter_end", "=", "self", ".", "stats", "[", "key", "]", ".", "num_sents", "+", "curr_iter", "\n", "y", "[", "curr_iter", ":", "iter_end", "]", "=", "key", "\n", "curr_iter", "=", "iter_end", "\n", "", "mu", ",", "std", "=", "norm", ".", "fit", "(", "y", ")", "\n", "self", ".", "distr", "=", "norm", "(", "mu", ",", "std", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.length_norm.GaussianNormalization.trg_length_prob": [[160, 162], ["length_norm.GaussianNormalization.distr.pdf"], "methods", ["None"], ["", "def", "trg_length_prob", "(", "self", ",", "trg_length", ")", ":", "\n", "    ", "return", "self", ".", "distr", ".", "pdf", "(", "trg_length", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.length_norm.GaussianNormalization.normalize_completed": [[163, 166], ["length_norm.GaussianNormalization.trg_length_prob", "len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.length_norm.GaussianNormalization.trg_length_prob"], ["", "def", "normalize_completed", "(", "self", ",", "completed_hyps", ":", "Sequence", "[", "'search_strategies.BeamSearch.Hypothesis'", "]", ",", "\n", "src_length", ":", "Optional", "[", "int", "]", "=", "None", ")", "->", "Sequence", "[", "float", "]", ":", "\n", "    ", "return", "[", "hyp", ".", "score", "/", "self", ".", "trg_length_prob", "(", "len", "(", "hyp", ".", "id_list", ")", ")", "for", "hyp", "in", "completed_hyps", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.length_norm.EosBooster.__init__": [[177, 180], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "boost_val", ":", "numbers", ".", "Real", ")", ":", "\n", "    ", "self", ".", "boost_val", "=", "boost_val", "\n", "", "def", "__call__", "(", "self", ",", "scores", ":", "np", ".", "ndarray", ")", "->", "None", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.length_norm.EosBooster.__call__": [[180, 182], ["None"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "scores", ":", "np", ".", "ndarray", ")", "->", "None", ":", "\n", "    ", "scores", "[", "Vocab", ".", "ES", "]", "+=", "self", ".", "boost_val", "\n", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.vocabs.Vocab.__init__": [[31, 47], ["vocabs.Vocab.save_processed_arg", "vocabs.Vocab.save_processed_arg", "vocabs.Vocab.i2w_from_vocab_file", "len", "vocabs.Vocab.i2w.append", "enumerate"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.save_processed_arg", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.save_processed_arg", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.vocabs.Vocab.i2w_from_vocab_file", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "i2w", ":", "Optional", "[", "Sequence", "[", "str", "]", "]", "=", "None", ",", "vocab_file", ":", "Optional", "[", "str", "]", "=", "None", ",", "\n", "sentencepiece_vocab", ":", "bool", "=", "False", ")", "->", "None", ":", "\n", "    ", "assert", "i2w", "is", "None", "or", "vocab_file", "is", "None", "\n", "assert", "i2w", "or", "vocab_file", "\n", "if", "vocab_file", ":", "\n", "      ", "i2w", "=", "Vocab", ".", "i2w_from_vocab_file", "(", "vocab_file", ",", "sentencepiece_vocab", ")", "\n", "", "assert", "i2w", "is", "not", "None", "\n", "self", ".", "i2w", "=", "i2w", "\n", "self", ".", "w2i", "=", "{", "word", ":", "word_id", "for", "(", "word_id", ",", "word", ")", "in", "enumerate", "(", "self", ".", "i2w", ")", "}", "\n", "if", "Vocab", ".", "UNK_STR", "not", "in", "self", ".", "w2i", ":", "\n", "      ", "self", ".", "w2i", "[", "Vocab", ".", "UNK_STR", "]", "=", "len", "(", "self", ".", "i2w", ")", "\n", "self", ".", "i2w", ".", "append", "(", "Vocab", ".", "UNK_STR", ")", "\n", "", "self", ".", "unk_token", "=", "self", ".", "w2i", "[", "Vocab", ".", "UNK_STR", "]", "\n", "self", ".", "save_processed_arg", "(", "\"i2w\"", ",", "self", ".", "i2w", ")", "\n", "self", ".", "save_processed_arg", "(", "\"vocab_file\"", ",", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.vocabs.Vocab.i2w_from_vocab_file": [[48, 74], ["open", "line.strip", "vocab.append", "line.strip.split", "RuntimeError"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "@", "staticmethod", "\n", "def", "i2w_from_vocab_file", "(", "vocab_file", ",", "sentencepiece_vocab", "=", "False", ")", ":", "\n", "    ", "\"\"\"Loads the vocabulary from a file.\n    \n    If ``sentencepiece_vocab`` is set to True, this will accept a sentencepiece vocabulary file\n    \n    Args:\n      vocab_file: file containing one word per line, and not containing <s>, </s>, <unk>\n      sentencepiece_vocab (bool): Set to ``True`` if ``vocab_file`` is the output of the sentencepiece tokenizer. Defaults to ``False``.\n    \"\"\"", "\n", "vocab", "=", "[", "Vocab", ".", "SS_STR", ",", "Vocab", ".", "ES_STR", "]", "\n", "reserved", "=", "{", "Vocab", ".", "SS_STR", ",", "Vocab", ".", "ES_STR", ",", "Vocab", ".", "UNK_STR", "}", "\n", "with", "open", "(", "vocab_file", ",", "encoding", "=", "'utf-8'", ")", "as", "f", ":", "\n", "      ", "for", "line", "in", "f", ":", "\n", "        ", "word", "=", "line", ".", "strip", "(", ")", "\n", "# Sentencepiece vocab files have second field, ignore it", "\n", "if", "sentencepiece_vocab", ":", "\n", "          ", "word", "=", "word", ".", "split", "(", "'\\t'", ")", "[", "0", "]", "\n", "", "if", "word", "in", "reserved", ":", "\n", "# Ignore if this is a sentencepiece vocab file", "\n", "          ", "if", "sentencepiece_vocab", ":", "\n", "            ", "continue", "\n", "", "else", ":", "\n", "            ", "raise", "RuntimeError", "(", "f\"Vocab file {vocab_file} contains a reserved word: {word}\"", ")", "\n", "", "", "vocab", ".", "append", "(", "word", ")", "\n", "", "", "return", "vocab", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.vocabs.Vocab.convert": [[75, 77], ["vocabs.Vocab.w2i.get"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.UninitializedYamlObject.get"], ["", "def", "convert", "(", "self", ",", "w", ":", "str", ")", "->", "int", ":", "\n", "    ", "return", "self", ".", "w2i", ".", "get", "(", "w", ",", "self", ".", "unk_token", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.vocabs.Vocab.__getitem__": [[78, 80], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "i", ":", "numbers", ".", "Integral", ")", "->", "str", ":", "\n", "    ", "return", "self", ".", "i2w", "[", "i", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.vocabs.Vocab.__len__": [[81, 83], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", "->", "int", ":", "\n", "    ", "return", "len", "(", "self", ".", "i2w", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.vocabs.Vocab.is_compatible": [[84, 95], ["isinstance", "len", "len"], "methods", ["None"], ["", "def", "is_compatible", "(", "self", ",", "other", ")", ":", "\n", "    ", "\"\"\"\n    Check if this vocab produces the same conversions as another one.\n    \"\"\"", "\n", "if", "not", "isinstance", "(", "other", ",", "Vocab", ")", ":", "\n", "      ", "return", "False", "\n", "", "if", "len", "(", "self", ")", "!=", "len", "(", "other", ")", ":", "\n", "      ", "return", "False", "\n", "", "if", "self", ".", "unk_token", "!=", "other", ".", "unk_token", ":", "\n", "      ", "return", "False", "\n", "", "return", "self", ".", "w2i", "==", "other", ".", "w2i", "\n", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.norms.LayerNorm.__init__": [[19, 24], ["xnmt.param_collections.ParamManager.my_params", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters", "dynet.ConstInitializer", "dynet.ConstInitializer"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.my_params"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "d_hid", ")", ":", "\n", "    ", "subcol", "=", "param_collections", ".", "ParamManager", ".", "my_params", "(", "self", ")", "\n", "self", ".", "p_g", "=", "subcol", ".", "add_parameters", "(", "dim", "=", "d_hid", ",", "init", "=", "dy", ".", "ConstInitializer", "(", "1.0", ")", ")", "\n", "self", ".", "p_b", "=", "subcol", ".", "add_parameters", "(", "dim", "=", "d_hid", ",", "init", "=", "dy", ".", "ConstInitializer", "(", "0.0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.norms.LayerNorm.transform": [[25, 29], ["dynet.parameter", "dynet.parameter", "dynet.layer_norm"], "methods", ["None"], ["", "def", "transform", "(", "self", ",", "x", ")", ":", "\n", "    ", "g", "=", "dy", ".", "parameter", "(", "self", ".", "p_g", ")", "\n", "b", "=", "dy", ".", "parameter", "(", "self", ".", "p_b", ")", "\n", "return", "dy", ".", "layer_norm", "(", "x", ",", "g", ",", "b", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.norms.BatchNorm.__init__": [[59, 82], ["xnmt.param_collections.ParamManager.my_params", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters", "numpy.zeros", "numpy.ones", "norms.BatchNorm.get_normalizer_dimensionality", "dynet.ConstInitializer", "norms.BatchNorm.get_normalizer_dimensionality", "dynet.ConstInitializer"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.my_params", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.norms.BatchNorm.get_normalizer_dimensionality", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.norms.BatchNorm.get_normalizer_dimensionality"], ["@", "serializable_init", "\n", "@", "events", ".", "register_xnmt_handler", "\n", "def", "__init__", "(", "self", ",", "\n", "hidden_dim", ":", "\n", "numbers", ".", "Integral", ",", "\n", "num_dim", ":", "numbers", ".", "Integral", ",", "\n", "time_first", ":", "bool", "=", "False", ",", "\n", "population_running_mean", ":", "Optional", "[", "np", ".", "ndarray", "]", "=", "None", ",", "\n", "population_running_std", ":", "Optional", "[", "np", ".", "ndarray", "]", "=", "None", ")", "->", "None", ":", "\n", "    ", "model", "=", "param_collections", ".", "ParamManager", ".", "my_params", "(", "self", ")", "\n", "self", ".", "hidden_dim", "=", "hidden_dim", "\n", "self", ".", "num_dim", "=", "num_dim", "\n", "self", ".", "time_first", "=", "time_first", "\n", "self", ".", "gamma", "=", "model", ".", "add_parameters", "(", "dim", "=", "self", ".", "get_normalizer_dimensionality", "(", ")", ",", "init", "=", "dy", ".", "ConstInitializer", "(", "1.0", ")", ")", "\n", "self", ".", "beta", "=", "model", ".", "add_parameters", "(", "dim", "=", "self", ".", "get_normalizer_dimensionality", "(", ")", ",", "init", "=", "dy", ".", "ConstInitializer", "(", "0.0", ")", ")", "\n", "if", "population_running_mean", "is", "None", ":", "\n", "      ", "self", ".", "population_running_mean", "=", "np", ".", "zeros", "(", "(", "hidden_dim", ",", ")", ")", "\n", "", "else", ":", "\n", "      ", "self", ".", "population_running_mean", "=", "population_running_mean", "\n", "", "if", "population_running_std", "is", "None", ":", "\n", "      ", "self", ".", "population_running_std", "=", "np", ".", "ones", "(", "(", "hidden_dim", ",", ")", ")", "\n", "", "else", ":", "\n", "      ", "self", ".", "population_running_std", "=", "population_running_std", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.norms.BatchNorm.get_normalizer_dimensionality": [[83, 93], ["NotImplementedError", "ValueError"], "methods", ["None"], ["", "", "def", "get_normalizer_dimensionality", "(", "self", ")", ":", "\n", "    ", "if", "self", ".", "num_dim", "==", "1", ":", "\n", "      ", "return", "self", ".", "hidden_dim", ",", "\n", "", "elif", "self", ".", "num_dim", "==", "2", ":", "\n", "      ", "return", "(", "1", ",", "self", ".", "hidden_dim", ",", ")", "if", "self", ".", "time_first", "else", "(", "self", ".", "hidden_dim", ",", "1", ")", "\n", "", "elif", "self", ".", "num_dim", "==", "3", ":", "\n", "      ", "if", "not", "self", ".", "time_first", ":", "raise", "ValueError", "(", "\"num_dim==3 requires time_first==True\"", ")", "\n", "return", "1", ",", "1", ",", "self", ".", "hidden_dim", ",", "\n", "", "else", ":", "\n", "      ", "raise", "NotImplementedError", "(", "\"BatchNorm not implemented for num_dim > 3\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.norms.BatchNorm.get_stat_dimensions": [[94, 97], ["list", "list", "range", "range"], "methods", ["None"], ["", "", "def", "get_stat_dimensions", "(", "self", ")", ":", "\n", "    ", "if", "self", ".", "time_first", ":", "return", "list", "(", "range", "(", "self", ".", "num_dim", "-", "1", ")", ")", "\n", "else", ":", "return", "list", "(", "range", "(", "1", ",", "self", ".", "num_dim", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.norms.BatchNorm.transform": [[98, 130], ["set_masked_to_mean.dim", "dynet.parameter", "dynet.parameter", "dynet.cdiv", "bn_y.dim", "norms.BatchNorm.save_processed_arg", "norms.BatchNorm.save_processed_arg", "dynet.moment_dim", "dynet.std_dim", "dynet.inputVector", "dynet.cmult", "norms.set_masked_to_mean", "norms.BatchNorm.get_stat_dimensions", "dynet.reshape", "norms.BatchNorm.get_stat_dimensions", "dynet.reshape", "dynet.reshape", "norms.broadcast_factor", "norms.BatchNorm.get_normalizer_dimensionality", "dynet.moment_dim.npvalue", "dynet.inputVector.npvalue", "dynet.inputVector", "norms.BatchNorm.get_normalizer_dimensionality", "norms.BatchNorm.get_normalizer_dimensionality", "numpy.count_nonzero"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.save_processed_arg", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.save_processed_arg", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.norms.set_masked_to_mean", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.norms.BatchNorm.get_stat_dimensions", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.norms.BatchNorm.get_stat_dimensions", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.norms.broadcast_factor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.norms.BatchNorm.get_normalizer_dimensionality", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.norms.BatchNorm.get_normalizer_dimensionality", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.norms.BatchNorm.get_normalizer_dimensionality"], ["", "def", "transform", "(", "self", ",", "input_expr", ":", "dy", ".", "Expression", ",", "mask", ":", "Optional", "[", "batchers", ".", "Mask", "]", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Apply batch norm.\n\n    Args:\n      input_expr: input\n      mask: compute statistics only over unmasked parts of the input expression\n    \"\"\"", "\n", "dim_in", "=", "input_expr", ".", "dim", "(", ")", "\n", "param_bn_gamma", "=", "dy", ".", "parameter", "(", "self", ".", "gamma", ")", "\n", "param_bn_beta", "=", "dy", ".", "parameter", "(", "self", ".", "beta", ")", "\n", "if", "self", ".", "train", ":", "\n", "      ", "num_unmasked", "=", "0", "\n", "if", "mask", "is", "not", "None", ":", "\n", "        ", "input_expr", "=", "set_masked_to_mean", "(", "mask", ",", "input_expr", ",", "self", ".", "time_first", ")", "\n", "num_unmasked", "=", "(", "mask", ".", "np_arr", ".", "size", "-", "np", ".", "count_nonzero", "(", "mask", ".", "np_arr", ")", ")", "*", "broadcast_factor", "(", "mask", ",", "input_expr", ")", "\n", "", "bn_mean", "=", "dy", ".", "moment_dim", "(", "input_expr", ",", "self", ".", "get_stat_dimensions", "(", ")", ",", "1", ",", "True", ",", "num_unmasked", ")", "\n", "neg_bn_mean_reshaped", "=", "-", "dy", ".", "reshape", "(", "-", "bn_mean", ",", "self", ".", "get_normalizer_dimensionality", "(", ")", ")", "\n", "self", ".", "population_running_mean", "+=", "(", "-", "BN_MOMENTUM", ")", "*", "self", ".", "population_running_mean", "+", "BN_MOMENTUM", "*", "bn_mean", ".", "npvalue", "(", ")", "\n", "bn_std", "=", "dy", ".", "std_dim", "(", "input_expr", ",", "self", ".", "get_stat_dimensions", "(", ")", ",", "True", ",", "num_unmasked", ")", "\n", "self", ".", "population_running_std", "+=", "(", "-", "BN_MOMENTUM", ")", "*", "self", ".", "population_running_std", "+", "BN_MOMENTUM", "*", "bn_std", ".", "npvalue", "(", ")", "\n", "", "else", ":", "\n", "      ", "neg_bn_mean_reshaped", "=", "-", "dy", ".", "reshape", "(", "dy", ".", "inputVector", "(", "self", ".", "population_running_mean", ")", ",", "self", ".", "get_normalizer_dimensionality", "(", ")", ")", "\n", "bn_std", "=", "dy", ".", "inputVector", "(", "self", ".", "population_running_std", ")", "\n", "", "bn_numerator", "=", "input_expr", "+", "neg_bn_mean_reshaped", "\n", "bn_xhat", "=", "dy", ".", "cdiv", "(", "bn_numerator", ",", "dy", ".", "reshape", "(", "bn_std", ",", "self", ".", "get_normalizer_dimensionality", "(", ")", ")", "+", "BN_EPS", ")", "\n", "bn_y", "=", "dy", ".", "cmult", "(", "param_bn_gamma", ",", "bn_xhat", ")", "+", "param_bn_beta", "# y = gamma * xhat + beta", "\n", "dim_out", "=", "bn_y", ".", "dim", "(", ")", "\n", "self", ".", "save_processed_arg", "(", "\"population_running_mean\"", ",", "self", ".", "population_running_mean", ")", "\n", "self", ".", "save_processed_arg", "(", "\"population_running_std\"", ",", "self", ".", "population_running_std", ")", "\n", "assert", "dim_out", "==", "dim_in", "\n", "return", "bn_y", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.norms.BatchNorm.transduce": [[131, 134], ["norms.BatchNorm.transform", "xnmt.expression_seqs.ExpressionSequence", "es.as_tensor"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.DenseWordEmbedder.transform", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor"], ["", "def", "transduce", "(", "self", ",", "es", ":", "expression_seqs", ".", "ExpressionSequence", ")", ":", "\n", "    ", "output", "=", "self", ".", "transform", "(", "es", ".", "as_tensor", "(", ")", ",", "es", ".", "mask", ")", "\n", "return", "expression_seqs", ".", "ExpressionSequence", "(", "expr_tensor", "=", "output", ",", "mask", "=", "es", ".", "mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.norms.BatchNorm.on_set_train": [[135, 138], ["None"], "methods", ["None"], ["", "@", "events", ".", "handle_xnmt_event", "\n", "def", "on_set_train", "(", "self", ",", "val", ")", ":", "\n", "    ", "self", ".", "train", "=", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.norms.broadcast_factor": [[142, 149], ["tensor_expr.dim", "tensor_expr.dim"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["", "", "def", "broadcast_factor", "(", "mask", ",", "tensor_expr", ")", ":", "\n", "  ", "\"\"\"\n  returns product(tensor_expr dims) / product(mask dims)\n  \"\"\"", "\n", "tensor_expr_size", "=", "tensor_expr", ".", "dim", "(", ")", "[", "1", "]", "\n", "for", "d", "in", "tensor_expr", ".", "dim", "(", ")", "[", "0", "]", ":", "tensor_expr_size", "*=", "d", "\n", "return", "tensor_expr_size", "/", "mask", ".", "np_arr", ".", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.norms.mask_reshape_size": [[150, 155], ["list", "list", "reversed", "reversed", "len", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.reversed", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.reversed"], ["", "def", "mask_reshape_size", "(", "mask", ",", "tensor_dim", ",", "time_first", "=", "False", ")", ":", "\n", "  ", "if", "time_first", ":", "\n", "    ", "return", "list", "(", "reversed", "(", "mask", ".", "np_arr", ".", "shape", "[", "1", ":", "]", ")", ")", "+", "[", "1", "]", "*", "(", "len", "(", "tensor_dim", "[", "0", "]", ")", "-", "len", "(", "mask", ".", "np_arr", ".", "shape", ")", "+", "1", ")", "+", "[", "mask", ".", "np_arr", ".", "shape", "[", "0", "]", "]", "\n", "", "else", ":", "\n", "    ", "return", "[", "1", "]", "*", "(", "len", "(", "tensor_dim", "[", "0", "]", ")", "-", "len", "(", "mask", ".", "np_arr", ".", "shape", ")", "+", "1", ")", "+", "list", "(", "reversed", "(", "mask", ".", "np_arr", ".", "shape", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.norms.set_masked_to_mean": [[156, 175], ["numpy.count_nonzero", "tensor_expr.dim", "norms.mask_reshape_size", "dynet.inputTensor", "dynet.cmult", "dynet.cdiv", "dynet.cmult", "tensor_expr.dim", "sum", "dynet.mean_dim", "dynet.inputTensor", "dynet.inputTensor", "ret.dim", "numpy.reshape", "list", "numpy.asarray", "numpy.reshape", "mask.np_arr.transpose", "dy.mean_dim.dim", "range", "mask.np_arr.transpose", "min", "dy.mean_dim.dim", "len", "norms.broadcast_factor", "numpy.count_nonzero", "dy.mean_dim.dim"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.norms.mask_reshape_size", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.norms.broadcast_factor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["", "", "def", "set_masked_to_mean", "(", "mask", ",", "tensor_expr", ",", "time_first", "=", "False", ")", ":", "\n", "  ", "\"\"\"\n  Set masked parts of the tensor expr to the mean of the unmasked parts.\n  \"\"\"", "\n", "if", "np", ".", "count_nonzero", "(", "mask", ".", "np_arr", ")", "==", "0", ":", "\n", "    ", "return", "tensor_expr", "\n", "", "else", ":", "\n", "    ", "dim_before", "=", "tensor_expr", ".", "dim", "(", ")", "\n", "reshape_size", "=", "mask_reshape_size", "(", "mask", ",", "tensor_expr", ".", "dim", "(", ")", ",", "time_first", ")", "\n", "inv_mask_expr", "=", "dy", ".", "inputTensor", "(", "1.0", "-", "np", ".", "reshape", "(", "mask", ".", "np_arr", ".", "transpose", "(", ")", ",", "reshape_size", ")", ",", "batched", "=", "True", ")", "\n", "unmasked", "=", "dy", ".", "cmult", "(", "tensor_expr", ",", "inv_mask_expr", ")", "\n", "unmasked_mean", "=", "unmasked", "\n", "while", "sum", "(", "unmasked_mean", ".", "dim", "(", ")", "[", "0", "]", ")", ">", "1", ":", "# loop because mean_dim only supports reducing up to 2 dimensions at a time", "\n", "      ", "unmasked_mean", "=", "dy", ".", "mean_dim", "(", "unmasked_mean", ",", "list", "(", "range", "(", "min", "(", "2", ",", "len", "(", "unmasked_mean", ".", "dim", "(", ")", "[", "0", "]", ")", ")", ")", ")", ",", "unmasked_mean", ".", "dim", "(", ")", "[", "1", "]", ">", "1", ",", "n", "=", "1", ")", "# this is mean without normalization == sum", "\n", "", "unmasked_mean", "=", "dy", ".", "cdiv", "(", "unmasked_mean", ",", "dy", ".", "inputTensor", "(", "np", ".", "asarray", "(", "[", "(", "mask", ".", "np_arr", ".", "size", "-", "np", ".", "count_nonzero", "(", "mask", ".", "np_arr", ")", ")", "*", "broadcast_factor", "(", "mask", ",", "tensor_expr", ")", "]", ")", ",", "batched", "=", "False", ")", ")", "\n", "mask_expr", "=", "dy", ".", "cmult", "(", "dy", ".", "inputTensor", "(", "np", ".", "reshape", "(", "mask", ".", "np_arr", ".", "transpose", "(", ")", ",", "reshape_size", ")", ",", "batched", "=", "True", ")", ",", "unmasked_mean", ")", "\n", "ret", "=", "unmasked", "+", "mask_expr", "\n", "assert", "ret", ".", "dim", "(", ")", "==", "dim_before", "\n", "return", "ret", "", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.init_param_col": [[19, 29], ["param_collections.ParamCollection"], "methods", ["None"], ["@", "staticmethod", "\n", "def", "init_param_col", "(", ")", "->", "None", ":", "\n", "    ", "\"\"\"\n    Initializes or resets the parameter collection.\n\n    This must be invoked before every time a new model is loaded (e.g. on startup and between consecutive experiments).\n    \"\"\"", "\n", "ParamManager", ".", "param_col", "=", "ParamCollection", "(", ")", "\n", "ParamManager", ".", "load_paths", "=", "[", "]", "\n", "ParamManager", ".", "initialized", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.add_load_path": [[30, 43], ["ParamManager.load_paths.append"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "@", "staticmethod", "\n", "def", "add_load_path", "(", "data_file", ":", "str", ")", "->", "None", ":", "\n", "    ", "\"\"\"\n    Add new data directory path to load from.\n\n    When calling populate(), pretrained parameters from all directories added in this way are searched for the\n    requested component identifiers.\n\n    Args:\n      data_file: a data directory (usually named ``*.data``) containing DyNet parameter collections.\n    \"\"\"", "\n", "assert", "ParamManager", ".", "initialized", ",", "\"must call ParamManager.init_param_col() first\"", "\n", "if", "not", "data_file", "in", "ParamManager", ".", "load_paths", ":", "ParamManager", ".", "load_paths", ".", "append", "(", "data_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.populate": [[44, 71], ["xnmt.logger.info", "len", "len", "xnmt.logger.info", "os.path.join", "os.path.isfile", "len", "xnmt.logger.info", "xnmt.logger.info", "ParamManager.param_col.load_subcol_from_data_file", "populated_subcols.append", "ParamManager.param_col._param_col.parameter_count", "ParamManager.param_col.subcols.keys", "set"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamCollection.load_subcol_from_data_file", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "@", "staticmethod", "\n", "def", "populate", "(", ")", "->", "None", ":", "\n", "    ", "\"\"\"\n    Populate the parameter collections.\n\n    Searches the given data paths and loads parameter collections if they exist, otherwise leave parameters in their\n    randomly initialized state.\n    \"\"\"", "\n", "assert", "ParamManager", ".", "initialized", ",", "\"must call ParamManager.init_param_col() first\"", "\n", "populated_subcols", "=", "[", "]", "\n", "for", "subcol_name", "in", "ParamManager", ".", "param_col", ".", "subcols", ":", "\n", "      ", "for", "load_path", "in", "ParamManager", ".", "load_paths", ":", "\n", "        ", "data_file", "=", "os", ".", "path", ".", "join", "(", "load_path", ",", "subcol_name", ")", "\n", "if", "os", ".", "path", ".", "isfile", "(", "data_file", ")", ":", "\n", "          ", "ParamManager", ".", "param_col", ".", "load_subcol_from_data_file", "(", "subcol_name", ",", "data_file", ")", "\n", "populated_subcols", ".", "append", "(", "subcol_name", ")", "\n", "", "", "", "if", "len", "(", "ParamManager", ".", "param_col", ".", "subcols", ")", "==", "len", "(", "populated_subcols", ")", ":", "\n", "      ", "logger", ".", "info", "(", "f\"> populated DyNet weights of all components from given data files\"", ")", "\n", "", "elif", "len", "(", "populated_subcols", ")", "==", "0", ":", "\n", "      ", "logger", ".", "info", "(", "f\"> use randomly initialized DyNet weights of all components\"", ")", "\n", "", "else", ":", "\n", "      ", "logger", ".", "info", "(", "f\"> populated a subset of DyNet weights from given data files: {populated_subcols}.\\n\"", "\n", "f\"  Did not populate {ParamManager.param_col.subcols.keys() - set(populated_subcols)}.\\n\"", "\n", "f\"  If partial population was not intended, likely the unpopulated component or its owner\"", "\n", "f\"   does not adhere to the Serializable protocol correctly, see documentation:\\n\"", "\n", "f\"   http://xnmt.readthedocs.io/en/latest/writing_xnmt_classes.html#using-serializable-subcomponents\"", ")", "\n", "", "logger", ".", "info", "(", "f\"  DyNet param count: {ParamManager.param_col._param_col.parameter_count()}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.my_params": [[72, 94], ["ParamManager.param_col.add_subcollection", "subcol_owner.save_processed_arg", "getattr", "hasattr", "ValueError"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamCollection.add_subcollection", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.save_processed_arg"], ["", "@", "staticmethod", "\n", "def", "my_params", "(", "subcol_owner", ")", "->", "dy", ".", "ParameterCollection", ":", "\n", "    ", "\"\"\"Creates a dedicated parameter subcollection for a serializable object.\n\n    This should only be called from the __init__ method of a Serializable.\n\n    Args:\n      subcol_owner (Serializable): The object which is requesting to be assigned a subcollection.\n\n    Returns:\n      The assigned subcollection.\n    \"\"\"", "\n", "assert", "ParamManager", ".", "initialized", ",", "\"must call ParamManager.init_param_col() first\"", "\n", "assert", "not", "getattr", "(", "subcol_owner", ",", "\"init_completed\"", ",", "False", ")", ",", "f\"my_params(obj) cannot be called after obj.__init__() has completed. Conflicting obj: {subcol_owner}\"", "\n", "if", "not", "hasattr", "(", "subcol_owner", ",", "\"xnmt_subcol_name\"", ")", ":", "\n", "      ", "raise", "ValueError", "(", "f\"{subcol_owner} does not have an attribute 'xnmt_subcol_name'.\\n\"", "\n", "f\"Did you forget to wrap the __init__() in @serializable_init ?\"", ")", "\n", "", "subcol_name", "=", "subcol_owner", ".", "xnmt_subcol_name", "\n", "subcol", "=", "ParamManager", ".", "param_col", ".", "add_subcollection", "(", "subcol_owner", ",", "subcol_name", ")", "\n", "subcol_owner", ".", "save_processed_arg", "(", "\"xnmt_subcol_name\"", ",", "subcol_name", ")", "\n", "return", "subcol", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.global_collection": [[95, 104], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "global_collection", "(", ")", "->", "dy", ".", "ParameterCollection", ":", "\n", "    ", "\"\"\" Access the top-level parameter collection, including all parameters.\n\n    Returns:\n      top-level DyNet parameter collection\n    \"\"\"", "\n", "assert", "ParamManager", ".", "initialized", ",", "\"must call ParamManager.init_param_col() first\"", "\n", "return", "ParamManager", ".", "param_col", ".", "_param_col", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamCollection.__init__": [[107, 109], ["param_collections.ParamCollection.reset"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamCollection.reset"], ["  ", "def", "__init__", "(", "self", ")", ":", "\n", "    ", "self", ".", "reset", "(", ")", "\n", "", "def", "reset", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamCollection.reset": [[109, 116], ["dynet.Model", "set"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "    ", "self", ".", "_save_num_checkpoints", "=", "1", "\n", "self", ".", "_model_file", "=", "None", "\n", "self", ".", "_param_col", "=", "dy", ".", "Model", "(", ")", "\n", "self", ".", "_is_saved", "=", "False", "\n", "self", ".", "subcols", "=", "{", "}", "\n", "self", ".", "all_subcol_owners", "=", "set", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamCollection.save_num_checkpoints": [[120, 124], ["param_collections.ParamCollection._update_data_files"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamCollection._update_data_files"], ["", "@", "save_num_checkpoints", ".", "setter", "\n", "def", "save_num_checkpoints", "(", "self", ",", "value", ")", ":", "\n", "    ", "self", ".", "_save_num_checkpoints", "=", "value", "\n", "self", ".", "_update_data_files", "(", ")", "\n", "", "@", "property", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamCollection.model_file": [[127, 131], ["param_collections.ParamCollection._update_data_files"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamCollection._update_data_files"], ["", "@", "model_file", ".", "setter", "\n", "def", "model_file", "(", "self", ",", "value", ")", ":", "\n", "    ", "self", ".", "_model_file", "=", "value", "\n", "self", ".", "_update_data_files", "(", ")", "\n", "", "def", "_update_data_files", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamCollection._update_data_files": [[131, 138], ["range", "param_collections.ParamCollection._data_files.append", "str"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "def", "_update_data_files", "(", "self", ")", ":", "\n", "    ", "if", "self", ".", "_save_num_checkpoints", ">", "0", "and", "self", ".", "_model_file", ":", "\n", "      ", "self", ".", "_data_files", "=", "[", "self", ".", "model_file", "+", "'.data'", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "self", ".", "_save_num_checkpoints", ")", ":", "\n", "        ", "self", ".", "_data_files", ".", "append", "(", "self", ".", "model_file", "+", "'.data.'", "+", "str", "(", "i", ")", ")", "\n", "", "", "else", ":", "\n", "      ", "self", ".", "_data_files", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamCollection.add_subcollection": [[139, 147], ["param_collections.ParamCollection.all_subcol_owners.add", "param_collections.ParamCollection._param_col.add_subcollection", "RuntimeError"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamCollection.add_subcollection"], ["", "", "def", "add_subcollection", "(", "self", ",", "subcol_owner", ",", "subcol_name", ")", ":", "\n", "    ", "assert", "subcol_owner", "not", "in", "self", ".", "all_subcol_owners", "\n", "self", ".", "all_subcol_owners", ".", "add", "(", "subcol_owner", ")", "\n", "if", "subcol_name", "in", "self", ".", "subcols", ":", "\n", "      ", "raise", "RuntimeError", "(", "f'Duplicate subcol_name {subcol_name} found when loading'", ")", "\n", "", "new_subcol", "=", "self", ".", "_param_col", ".", "add_subcollection", "(", "subcol_name", ")", "\n", "self", ".", "subcols", "[", "subcol_name", "]", "=", "new_subcol", "\n", "return", "new_subcol", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamCollection.load_subcol_from_data_file": [[148, 150], ["param_collections.ParamCollection.subcols[].populate"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.populate"], ["", "def", "load_subcol_from_data_file", "(", "self", ",", "subcol_name", ",", "data_file", ")", ":", "\n", "    ", "self", ".", "subcols", "[", "subcol_name", "]", ".", "populate", "(", "data_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamCollection.save": [[151, 160], ["param_collections.ParamCollection._shift_saved_checkpoints", "param_collections.ParamCollection.subcols.items", "param_collections.ParamCollection._remove_existing_history", "os.path.exists", "os.makedirs", "subcol.save", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamCollection._shift_saved_checkpoints", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamCollection._remove_existing_history", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamCollection.save"], ["", "def", "save", "(", "self", ")", ":", "\n", "    ", "if", "not", "self", ".", "_is_saved", ":", "\n", "      ", "self", ".", "_remove_existing_history", "(", ")", "\n", "", "self", ".", "_shift_saved_checkpoints", "(", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "_data_files", "[", "0", "]", ")", ":", "\n", "      ", "os", ".", "makedirs", "(", "self", ".", "_data_files", "[", "0", "]", ")", "\n", "", "for", "subcol_name", ",", "subcol", "in", "self", ".", "subcols", ".", "items", "(", ")", ":", "\n", "      ", "subcol", ".", "save", "(", "os", ".", "path", ".", "join", "(", "self", ".", "_data_files", "[", "0", "]", ",", "subcol_name", ")", ")", "\n", "", "self", ".", "_is_saved", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamCollection.revert_to_best_model": [[161, 166], ["param_collections.ParamCollection.subcols.items", "param_collections.RevertingUnsavedModelException", "subcol.populate", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.populate"], ["", "def", "revert_to_best_model", "(", "self", ")", ":", "\n", "    ", "if", "not", "self", ".", "_is_saved", ":", "\n", "      ", "raise", "RevertingUnsavedModelException", "(", "\"revert_to_best_model() is illegal because this model has never been saved.\"", ")", "\n", "", "for", "subcol_name", ",", "subcol", "in", "self", ".", "subcols", ".", "items", "(", ")", ":", "\n", "      ", "subcol", ".", "populate", "(", "os", ".", "path", ".", "join", "(", "self", ".", "_data_files", "[", "0", "]", ",", "subcol_name", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamCollection._remove_existing_history": [[167, 171], ["os.path.exists", "param_collections.ParamCollection._remove_data_dir"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamCollection._remove_data_dir"], ["", "", "def", "_remove_existing_history", "(", "self", ")", ":", "\n", "    ", "for", "fname", "in", "self", ".", "_data_files", ":", "\n", "      ", "if", "os", ".", "path", ".", "exists", "(", "fname", ")", ":", "\n", "        ", "self", ".", "_remove_data_dir", "(", "fname", ")", "\n", "", "", "", "def", "_remove_data_dir", "(", "self", ",", "data_dir", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamCollection._remove_data_dir": [[171, 184], ["data_dir.endswith", "os.listdir", "old_file.split", "os.remove", "data_dir.split", "len", "re.match", "re.match", "os.remove", "os.path.join"], "methods", ["None"], ["", "", "", "def", "_remove_data_dir", "(", "self", ",", "data_dir", ")", ":", "\n", "    ", "assert", "data_dir", ".", "endswith", "(", "\".data\"", ")", "or", "data_dir", ".", "split", "(", "\".\"", ")", "[", "-", "2", "]", "==", "\"data\"", "\n", "try", ":", "\n", "      ", "dir_contents", "=", "os", ".", "listdir", "(", "data_dir", ")", "\n", "for", "old_file", "in", "dir_contents", ":", "\n", "        ", "spl", "=", "old_file", ".", "split", "(", "\".\"", ")", "\n", "# make sure we're only deleting files with the expected filenames", "\n", "if", "len", "(", "spl", ")", "==", "2", ":", "\n", "          ", "if", "re", ".", "match", "(", "r\"^[a-zA-Z_][a-zA-Z0-9_]*$\"", ",", "spl", "[", "0", "]", ")", ":", "\n", "            ", "if", "re", ".", "match", "(", "r\"^[0-9a-f]{8}$\"", ",", "spl", "[", "1", "]", ")", ":", "\n", "              ", "os", ".", "remove", "(", "os", ".", "path", ".", "join", "(", "data_dir", ",", "old_file", ")", ")", "\n", "", "", "", "", "", "except", "NotADirectoryError", ":", "\n", "      ", "os", ".", "remove", "(", "data_dir", ")", "\n", "", "", "def", "_shift_saved_checkpoints", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamCollection._shift_saved_checkpoints": [[184, 190], ["os.path.exists", "param_collections.ParamCollection._remove_data_dir", "range", "os.path.exists", "os.rename", "len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamCollection._remove_data_dir"], ["", "", "def", "_shift_saved_checkpoints", "(", "self", ")", ":", "\n", "    ", "if", "os", ".", "path", ".", "exists", "(", "self", ".", "_data_files", "[", "-", "1", "]", ")", ":", "\n", "      ", "self", ".", "_remove_data_dir", "(", "self", ".", "_data_files", "[", "-", "1", "]", ")", "\n", "", "for", "i", "in", "range", "(", "len", "(", "self", ".", "_data_files", ")", "-", "1", ")", "[", ":", ":", "-", "1", "]", ":", "\n", "      ", "if", "os", ".", "path", ".", "exists", "(", "self", ".", "_data_files", "[", "i", "]", ")", ":", "\n", "        ", "os", ".", "rename", "(", "self", ".", "_data_files", "[", "i", "]", ",", "self", ".", "_data_files", "[", "i", "+", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.__init__": [[14, 49], ["ValueError", "len", "ValueError", "isinstance", "ValueError", "isinstance", "ValueError", "isinstance", "ValueError", "isinstance", "ValueError", "type", "type", "e.dim", "expr_list[].dim", "AssertionError", "type", "type", "expression_seqs.ExpressionSequence.expr_tensor.dim"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["def", "__init__", "(", "self", ",", "expr_list", ":", "Optional", "[", "Sequence", "[", "dy", ".", "Expression", "]", "]", "=", "None", ",", "expr_tensor", ":", "Optional", "[", "dy", ".", "Expression", "]", "=", "None", ",", "\n", "expr_transposed_tensor", ":", "Optional", "[", "dy", ".", "Expression", "]", "=", "None", ",", "mask", ":", "Optional", "[", "'batchers.Mask'", "]", "=", "None", ")", "->", "None", ":", "\n", "    ", "\"\"\"Constructor.\n\n    Args:\n      expr_list: a python list of expressions\n      expr_tensor: a tensor where last dimension are the sequence items\n      expr_transposed_tensor: a tensor in transposed form (first dimension are sequence items)\n      mask: an optional mask object indicating what positions in a batched tensor should be masked\n    Raises:\n      valueError: raises an exception if neither expr_list nor expr_tensor are given,\n                  or if both have inconsistent length\n    \"\"\"", "\n", "self", ".", "expr_list", "=", "expr_list", "\n", "self", ".", "expr_tensor", "=", "expr_tensor", "\n", "self", ".", "expr_transposed_tensor", "=", "expr_transposed_tensor", "\n", "self", ".", "mask", "=", "mask", "\n", "if", "not", "(", "self", ".", "expr_list", "or", "self", ".", "expr_tensor", "or", "self", ".", "expr_transposed_tensor", ")", ":", "\n", "      ", "raise", "ValueError", "(", "\"must provide expr_list or expr_tensor\"", ")", "\n", "", "if", "self", ".", "expr_list", "and", "self", ".", "expr_tensor", ":", "\n", "      ", "if", "len", "(", "self", ".", "expr_list", ")", "!=", "self", ".", "expr_tensor", ".", "dim", "(", ")", "[", "0", "]", "[", "-", "1", "]", ":", "\n", "        ", "raise", "ValueError", "(", "\"expr_list and expr_tensor must be of same length\"", ")", "\n", "", "", "if", "expr_list", ":", "\n", "      ", "if", "not", "isinstance", "(", "expr_list", ",", "list", ")", ":", "\n", "        ", "raise", "ValueError", "(", "\"expr_list must be list, was:\"", ",", "type", "(", "expr_list", ")", ")", "\n", "", "if", "not", "isinstance", "(", "expr_list", "[", "0", "]", ",", "dy", ".", "Expression", ")", ":", "\n", "        ", "raise", "ValueError", "(", "\"expr_list must contain dynet expressions, found:\"", ",", "type", "(", "expr_list", "[", "0", "]", ")", ")", "\n", "", "for", "e", "in", "expr_list", "[", "1", ":", "]", ":", "\n", "        ", "if", "e", ".", "dim", "(", ")", "!=", "expr_list", "[", "0", "]", ".", "dim", "(", ")", ":", "\n", "          ", "raise", "AssertionError", "(", ")", "\n", "", "", "", "if", "expr_tensor", ":", "\n", "      ", "if", "not", "isinstance", "(", "expr_tensor", ",", "dy", ".", "Expression", ")", ":", "raise", "ValueError", "(", "\"expr_tensor must be dynet expression, was:\"", ",", "type", "(", "expr_tensor", ")", ")", "\n", "", "if", "expr_transposed_tensor", ":", "\n", "      ", "if", "not", "isinstance", "(", "expr_transposed_tensor", ",", "dy", ".", "Expression", ")", ":", "raise", "ValueError", "(", "\"expr_transposed_tensor must be dynet expression, was:\"", ",", "type", "(", "expr_transposed_tensor", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.__len__": [[50, 59], ["len", "expression_seqs.ExpressionSequence.expr_tensor.dim", "expression_seqs.ExpressionSequence.expr_transposed_tensor.dim"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "    ", "\"\"\"Return length.\n\n    Returns:\n      length of sequence\n    \"\"\"", "\n", "if", "self", ".", "expr_list", ":", "return", "len", "(", "self", ".", "expr_list", ")", "\n", "elif", "self", ".", "expr_tensor", ":", "return", "self", ".", "expr_tensor", ".", "dim", "(", ")", "[", "0", "]", "[", "-", "1", "]", "\n", "else", ":", "return", "self", ".", "expr_transposed_tensor", ".", "dim", "(", ")", "[", "0", "]", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.__iter__": [[60, 69], ["iter", "range", "len"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "    ", "\"\"\"Return iterator.\n\n    Returns:\n      iterator over the sequence; results in explicit conversion to list\n    \"\"\"", "\n", "if", "self", ".", "expr_list", "is", "None", ":", "\n", "      ", "self", ".", "expr_list", "=", "[", "self", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "self", ")", ")", "]", "\n", "", "return", "iter", "(", "self", ".", "expr_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.__getitem__": [[70, 83], ["len", "dynet.pick", "dynet.pick", "len", "expression_seqs.ExpressionSequence.expr_tensor.dim"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["", "def", "__getitem__", "(", "self", ",", "key", ")", ":", "\n", "    ", "\"\"\"Get a single item.\n\n    Returns:\n      sequence item (expression); does not result in explicit conversion to list\n    \"\"\"", "\n", "if", "self", ".", "expr_list", ":", "return", "self", ".", "expr_list", "[", "key", "]", "\n", "else", ":", "\n", "      ", "if", "key", "<", "0", ":", "key", "+=", "len", "(", "self", ")", "\n", "if", "self", ".", "expr_tensor", ":", "\n", "        ", "return", "dy", ".", "pick", "(", "self", ".", "expr_tensor", ",", "key", ",", "dim", "=", "len", "(", "self", ".", "expr_tensor", ".", "dim", "(", ")", "[", "0", "]", ")", "-", "1", ")", "\n", "", "else", ":", "\n", "        ", "return", "dy", ".", "pick", "(", "self", ".", "expr_transposed_tensor", ",", "key", ",", "dim", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.as_list": [[84, 93], ["range", "len"], "methods", ["None"], ["", "", "", "def", "as_list", "(", "self", ")", ":", "\n", "    ", "\"\"\"Get a list.\n\n    Returns:\n      the whole sequence as a list with each element one of the embeddings.\n    \"\"\"", "\n", "if", "self", ".", "expr_list", "is", "None", ":", "\n", "      ", "self", ".", "expr_list", "=", "[", "self", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "self", ")", ")", "]", "\n", "", "return", "self", ".", "expr_list", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.has_list": [[94, 100], ["None"], "methods", ["None"], ["", "def", "has_list", "(", "self", ")", ":", "\n", "    ", "\"\"\"\n    Returns:\n      False if as_list() will result in creating additional expressions, True otherwise\n    \"\"\"", "\n", "return", "self", ".", "expr_list", "is", "not", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.as_tensor": [[101, 109], ["dynet.concatenate_cols", "dynet.transpose"], "methods", ["None"], ["", "def", "as_tensor", "(", "self", ")", ":", "\n", "    ", "\"\"\"Get a tensor.\n    Returns:\n      the whole sequence as a tensor expression where each column is one of the embeddings.\n    \"\"\"", "\n", "if", "self", ".", "expr_tensor", "is", "None", ":", "\n", "      ", "self", ".", "expr_tensor", "=", "dy", ".", "concatenate_cols", "(", "self", ".", "expr_list", ")", "if", "self", ".", "expr_list", "else", "dy", ".", "transpose", "(", "self", ".", "expr_transposed_tensor", ")", "\n", "", "return", "self", ".", "expr_tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.has_tensor": [[110, 116], ["None"], "methods", ["None"], ["", "def", "has_tensor", "(", "self", ")", ":", "\n", "    ", "\"\"\"\n    Returns:\n      False if as_tensor() will result in creating additional expressions, True otherwise\n    \"\"\"", "\n", "return", "self", ".", "expr_tensor", "is", "not", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.as_transposed_tensor": [[117, 125], ["dynet.transpose", "expression_seqs.ExpressionSequence.as_tensor"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor"], ["", "def", "as_transposed_tensor", "(", "self", ")", ":", "\n", "    ", "\"\"\"Get a tensor.\n    Returns:\n      the whole sequence as a tensor expression where each row is one of the embeddings.\n    \"\"\"", "\n", "if", "self", ".", "expr_transposed_tensor", "is", "None", ":", "\n", "      ", "self", ".", "expr_transposed_tensor", "=", "dy", ".", "transpose", "(", "self", ".", "as_tensor", "(", ")", ")", "\n", "", "return", "self", ".", "expr_transposed_tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.has_transposed_tensor": [[126, 132], ["None"], "methods", ["None"], ["", "def", "has_transposed_tensor", "(", "self", ")", ":", "\n", "    ", "\"\"\"\n    Returns:\n      False if as_transposed_tensor() will result in creating additional expressions, True otherwise\n    \"\"\"", "\n", "return", "self", ".", "expr_transposed_tensor", "is", "not", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim": [[133, 143], ["expression_seqs.ExpressionSequence.has_tensor", "expression_seqs.ExpressionSequence.as_tensor().dim", "tuple", "expression_seqs.ExpressionSequence.as_tensor", "expression_seqs.ExpressionSequence.dim", "list", "len", "expression_seqs.ExpressionSequence.dim"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.has_tensor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["", "def", "dim", "(", "self", ")", ":", "\n", "    ", "\"\"\"\n    Return dimension of the expression sequence\n\n    Returns:\n      result of self.as_tensor().dim(), without explicitly constructing that tensor\n    \"\"\"", "\n", "if", "self", ".", "has_tensor", "(", ")", ":", "return", "self", ".", "as_tensor", "(", ")", ".", "dim", "(", ")", "\n", "else", ":", "\n", "      ", "return", "tuple", "(", "list", "(", "self", "[", "0", "]", ".", "dim", "(", ")", "[", "0", "]", ")", "+", "[", "len", "(", "self", ")", "]", ")", ",", "self", "[", "0", "]", ".", "dim", "(", ")", "[", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.LazyNumpyExpressionSequence.__init__": [[149, 157], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "lazy_data", ",", "mask", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n      lazy_data: numpy array, or Batcher.Batch of numpy arrays\n    \"\"\"", "\n", "self", ".", "lazy_data", "=", "lazy_data", "\n", "self", ".", "expr_list", ",", "self", ".", "expr_tensor", "=", "None", ",", "None", "\n", "self", ".", "mask", "=", "mask", "\n", "", "def", "__len__", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.LazyNumpyExpressionSequence.__len__": [[157, 164], ["expression_seqs.ExpressionSequence.__len__", "xnmt.batchers.is_batched", "expression_seqs.LazyNumpyExpressionSequence.lazy_data[].get_array", "expression_seqs.LazyNumpyExpressionSequence.lazy_data.get_array"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.EnsembleListDelegate.__len__", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.get_array", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.get_array"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "    ", "if", "self", ".", "expr_list", "or", "self", ".", "expr_tensor", ":", "\n", "      ", "return", "super", "(", "LazyNumpyExpressionSequence", ",", "self", ")", ".", "__len__", "(", ")", "\n", "", "else", ":", "\n", "      ", "if", "batchers", ".", "is_batched", "(", "self", ".", "lazy_data", ")", ":", "\n", "        ", "return", "self", ".", "lazy_data", "[", "0", "]", ".", "get_array", "(", ")", ".", "shape", "[", "1", "]", "\n", "", "else", ":", "return", "self", ".", "lazy_data", ".", "get_array", "(", ")", ".", "shape", "[", "1", "]", "\n", "", "", "def", "__iter__", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.LazyNumpyExpressionSequence.__iter__": [[164, 168], ["expression_seqs.ExpressionSequence.__iter__", "range", "len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.EnsembleListDelegate.__iter__"], ["", "", "def", "__iter__", "(", "self", ")", ":", "\n", "    ", "if", "not", "(", "self", ".", "expr_list", "or", "self", ".", "expr_tensor", ")", ":", "\n", "      ", "self", ".", "expr_list", "=", "[", "self", "[", "i", "]", "for", "i", "in", "range", "(", "len", "(", "self", ")", ")", "]", "\n", "", "return", "super", "(", "LazyNumpyExpressionSequence", ",", "self", ")", ".", "__iter__", "(", ")", "\n", "", "def", "__getitem__", "(", "self", ",", "key", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.LazyNumpyExpressionSequence.__getitem__": [[168, 177], ["expression_seqs.ExpressionSequence.__getitem__", "xnmt.batchers.is_batched", "dynet.inputTensor", "dynet.inputTensor", "expression_seqs.LazyNumpyExpressionSequence.lazy_data.get_array", "expression_seqs.LazyNumpyExpressionSequence.lazy_data[].get_array", "range", "expression_seqs.LazyNumpyExpressionSequence.lazy_data.batch_size"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.retrievers.StandardRetrievalDatabase.__getitem__", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.get_array", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.get_array", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.batch_size"], ["", "def", "__getitem__", "(", "self", ",", "key", ")", ":", "\n", "    ", "if", "self", ".", "expr_list", "or", "self", ".", "expr_tensor", ":", "\n", "      ", "return", "super", "(", "LazyNumpyExpressionSequence", ",", "self", ")", ".", "__getitem__", "(", "key", ")", "\n", "", "else", ":", "\n", "      ", "if", "batchers", ".", "is_batched", "(", "self", ".", "lazy_data", ")", ":", "\n", "        ", "return", "dy", ".", "inputTensor", "(", "\n", "[", "self", ".", "lazy_data", "[", "batch", "]", ".", "get_array", "(", ")", "[", ":", ",", "key", "]", "for", "batch", "in", "range", "(", "self", ".", "lazy_data", ".", "batch_size", "(", ")", ")", "]", ",", "batched", "=", "True", ")", "\n", "", "else", ":", "\n", "        ", "return", "dy", ".", "inputTensor", "(", "self", ".", "lazy_data", ".", "get_array", "(", ")", "[", ":", ",", "key", "]", ",", "batched", "=", "False", ")", "\n", "", "", "", "def", "as_tensor", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.LazyNumpyExpressionSequence.as_tensor": [[177, 184], ["expression_seqs.ExpressionSequence.as_tensor", "numpy.concatenate", "dynet.inputTensor", "xnmt.batchers.is_batched", "NotImplementedError", "d.get_array().reshape", "xnmt.batchers.is_batched", "d.get_array", "d.get_array"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.get_array", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.get_array"], ["", "", "", "def", "as_tensor", "(", "self", ")", ":", "\n", "    ", "if", "not", "(", "self", ".", "expr_list", "or", "self", ".", "expr_tensor", ")", ":", "\n", "      ", "if", "not", "batchers", ".", "is_batched", "(", "self", ".", "lazy_data", ")", ":", "\n", "        ", "raise", "NotImplementedError", "(", ")", "\n", "", "array", "=", "np", ".", "concatenate", "(", "[", "d", ".", "get_array", "(", ")", ".", "reshape", "(", "d", ".", "get_array", "(", ")", ".", "shape", "+", "(", "1", ",", ")", ")", "for", "d", "in", "self", ".", "lazy_data", "]", ",", "axis", "=", "2", ")", "\n", "self", ".", "expr_tensor", "=", "dy", ".", "inputTensor", "(", "array", ",", "batched", "=", "batchers", ".", "is_batched", "(", "self", ".", "lazy_data", ")", ")", "\n", "", "return", "super", "(", "LazyNumpyExpressionSequence", ",", "self", ")", ".", "as_tensor", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.__init__": [[189, 197], ["base_expr_seq.mask.reversed"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.reversed"], ["def", "__init__", "(", "self", ",", "base_expr_seq", ")", ":", "\n", "    ", "self", ".", "base_expr_seq", "=", "base_expr_seq", "\n", "self", ".", "expr_tensor", "=", "None", "\n", "self", ".", "expr_list", "=", "None", "\n", "if", "base_expr_seq", ".", "mask", "is", "None", ":", "\n", "      ", "self", ".", "mask", "=", "None", "\n", "", "else", ":", "\n", "      ", "self", ".", "mask", "=", "base_expr_seq", ".", "mask", ".", "reversed", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.__len__": [[198, 200], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "    ", "return", "len", "(", "self", ".", "base_expr_seq", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.__iter__": [[201, 205], ["iter", "list", "reversed", "expression_seqs.ReversedExpressionSequence.base_expr_seq.as_list"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.reversed", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_list"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "    ", "if", "self", ".", "expr_list", "is", "None", ":", "\n", "      ", "self", ".", "expr_list", "=", "list", "(", "reversed", "(", "self", ".", "base_expr_seq", ".", "as_list", "(", ")", ")", ")", "\n", "", "return", "iter", "(", "self", ".", "expr_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.__getitem__": [[206, 208], ["len"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "key", ")", ":", "\n", "    ", "return", "self", ".", "base_expr_seq", "[", "len", "(", "self", ")", "-", "key", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_list": [[209, 213], ["list", "reversed", "expression_seqs.ReversedExpressionSequence.base_expr_seq.as_list"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.reversed", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_list"], ["", "def", "as_list", "(", "self", ")", ":", "\n", "    ", "if", "self", ".", "expr_list", "is", "None", ":", "\n", "      ", "self", ".", "expr_list", "=", "list", "(", "reversed", "(", "self", ".", "base_expr_seq", ".", "as_list", "(", ")", ")", ")", "\n", "", "return", "self", ".", "expr_list", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.has_list": [[214, 216], ["expression_seqs.ReversedExpressionSequence.base_expr_seq.has_list"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.has_list"], ["", "def", "has_list", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "base_expr_seq", ".", "has_list", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor": [[217, 224], ["dynet.concatenate_cols", "list", "reversed", "expression_seqs.ReversedExpressionSequence.base_expr_seq.as_list"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.reversed", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_list"], ["", "def", "as_tensor", "(", "self", ")", ":", "\n", "# note: this is quite memory hungry and should be avoided if possible", "\n", "    ", "if", "self", ".", "expr_tensor", "is", "None", ":", "\n", "      ", "if", "self", ".", "expr_list", "is", "None", ":", "\n", "        ", "self", ".", "expr_list", "=", "list", "(", "reversed", "(", "self", ".", "base_expr_seq", ".", "as_list", "(", ")", ")", ")", "\n", "", "self", ".", "expr_tensor", "=", "dy", ".", "concatenate_cols", "(", "self", ".", "expr_list", ")", "\n", "", "return", "self", ".", "expr_tensor", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.has_tensor": [[225, 227], ["None"], "methods", ["None"], ["", "def", "has_tensor", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "expr_tensor", "is", "not", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.CompoundSeqExpression.__init__": [[232, 234], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "exprseq_list", ")", ":", "\n", "    ", "self", ".", "exprseq_list", "=", "exprseq_list", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.CompoundSeqExpression.__iter__": [[235, 237], ["iter"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "    ", "return", "iter", "(", "self", ".", "exprseq_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.CompoundSeqExpression.__getitem__": [[238, 240], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "    ", "return", "self", ".", "exprseq_list", "[", "idx", "]", "", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.settings.SettingsAccessor.__getattr__": [[67, 71], ["getattr", "settings._resolve_active_settings"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.settings._resolve_active_settings"], ["  ", "def", "__getattr__", "(", "self", ",", "item", ")", ":", "\n", "    ", "if", "_active", "is", "None", ":", "\n", "      ", "_resolve_active_settings", "(", ")", "\n", "", "return", "getattr", "(", "_active", ",", "item", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.settings._resolve_active_settings": [[74, 87], ["os.environ.get", "os.environ.items", "arg.startswith", "hasattr", "setattr", "arg.split"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.UninitializedYamlObject.get", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items"], ["def", "_resolve_active_settings", "(", ")", ":", "\n", "# use command line argument, if not given use environment var, if not given us 'standard'", "\n", "# overwrite with environment variables if present.", "\n", "  ", "global", "_active", "\n", "settings_alias", "=", "\"standard\"", "\n", "settings_alias", "=", "os", ".", "environ", ".", "get", "(", "\"XNMT_SETTINGS\"", ",", "default", "=", "settings_alias", ")", "\n", "for", "arg", "in", "sys", ".", "argv", ":", "\n", "    ", "if", "arg", ".", "startswith", "(", "\"--settings\"", ")", ":", "\n", "      ", "settings_alias", "=", "arg", ".", "split", "(", "\"=\"", ")", "[", "1", "]", "\n", "", "", "_active", "=", "_aliases", "[", "settings_alias", "]", "\n", "for", "key", ",", "val", "in", "os", ".", "environ", ".", "items", "(", ")", ":", "\n", "    ", "if", "hasattr", "(", "_active", ",", "key", ")", ":", "\n", "      ", "setattr", "(", "_active", ",", "key", ",", "val", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.experiments.ExpGlobal.__init__": [[38, 66], ["xnmt.persistence.bare", "xnmt.persistence.bare"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "model_file", ":", "str", "=", "settings", ".", "DEFAULT_MOD_PATH", ",", "\n", "log_file", ":", "str", "=", "settings", ".", "DEFAULT_LOG_PATH", ",", "\n", "dropout", ":", "numbers", ".", "Real", "=", "0.3", ",", "\n", "weight_noise", ":", "numbers", ".", "Real", "=", "0.0", ",", "\n", "default_layer_dim", ":", "numbers", ".", "Integral", "=", "512", ",", "\n", "param_init", ":", "ParamInitializer", "=", "bare", "(", "GlorotInitializer", ")", ",", "\n", "bias_init", ":", "ParamInitializer", "=", "bare", "(", "ZeroInitializer", ")", ",", "\n", "truncate_dec_batches", ":", "bool", "=", "False", ",", "\n", "save_num_checkpoints", ":", "numbers", ".", "Integral", "=", "1", ",", "\n", "loss_comb_method", ":", "str", "=", "\"sum\"", ",", "\n", "compute_report", ":", "bool", "=", "False", ",", "\n", "commandline_args", ":", "dict", "=", "{", "}", ",", "\n", "placeholders", ":", "Dict", "[", "str", ",", "Any", "]", "=", "{", "}", ")", "->", "None", ":", "\n", "    ", "self", ".", "model_file", "=", "model_file", "\n", "self", ".", "log_file", "=", "log_file", "\n", "self", ".", "dropout", "=", "dropout", "\n", "self", ".", "weight_noise", "=", "weight_noise", "\n", "self", ".", "default_layer_dim", "=", "default_layer_dim", "\n", "self", ".", "param_init", "=", "param_init", "\n", "self", ".", "bias_init", "=", "bias_init", "\n", "self", ".", "truncate_dec_batches", "=", "truncate_dec_batches", "\n", "self", ".", "commandline_args", "=", "commandline_args", "\n", "self", ".", "save_num_checkpoints", "=", "save_num_checkpoints", "\n", "self", ".", "loss_comb_method", "=", "loss_comb_method", "\n", "self", ".", "compute_report", "=", "compute_report", "\n", "self", ".", "placeholders", "=", "placeholders", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.experiments.Experiment.__init__": [[86, 106], ["xnmt.persistence.bare", "xnmt.logger.info"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "name", ":", "str", ",", "\n", "exp_global", ":", "Optional", "[", "ExpGlobal", "]", "=", "bare", "(", "ExpGlobal", ")", ",", "\n", "preproc", ":", "Optional", "[", "PreprocRunner", "]", "=", "None", ",", "\n", "model", ":", "Optional", "[", "TrainableModel", "]", "=", "None", ",", "\n", "train", ":", "Optional", "[", "TrainingRegimen", "]", "=", "None", ",", "\n", "evaluate", ":", "Optional", "[", "List", "[", "EvalTask", "]", "]", "=", "None", ",", "\n", "random_search_report", ":", "Optional", "[", "dict", "]", "=", "None", ",", "\n", "status", "=", "None", ")", "->", "None", ":", "\n", "    ", "self", ".", "name", "=", "name", "\n", "self", ".", "exp_global", "=", "exp_global", "\n", "self", ".", "preproc", "=", "preproc", "\n", "self", ".", "model", "=", "model", "\n", "self", ".", "train", "=", "train", "\n", "self", ".", "evaluate", "=", "evaluate", "\n", "self", ".", "status", "=", "status", "\n", "\n", "if", "random_search_report", ":", "\n", "      ", "logger", ".", "info", "(", "f\"> instantiated random parameter search: {random_search_report}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.experiments.Experiment.__call__": [[107, 139], ["experiments.Experiment.save_processed_arg", "save_fct", "xnmt.logger.info", "xnmt.logger.info", "experiments.Experiment.train.run_training", "xnmt.logger.info", "xnmt.logger.info", "xnmt.param_collections.ParamManager.param_col.revert_to_best_model", "evaluator.eval", "type", "eval_scores.extend", "eval_scores.append"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.save_processed_arg", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.SerialMultiTaskTrainingRegimen.run_training", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamCollection.revert_to_best_model", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.tasks.DecodingEvalTask.eval", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "", "def", "__call__", "(", "self", ",", "save_fct", ")", ":", "\n", "    ", "\"\"\"\n    Launch training loop, followed by final evaluation.\n    \"\"\"", "\n", "eval_scores", "=", "[", "\"Not evaluated\"", "]", "\n", "if", "self", ".", "status", "!=", "\"done\"", ":", "\n", "      ", "if", "self", ".", "train", ":", "\n", "        ", "logger", ".", "info", "(", "\"> Training\"", ")", "\n", "self", ".", "train", ".", "run_training", "(", "save_fct", "=", "save_fct", ")", "\n", "logger", ".", "info", "(", "'reverting learned weights to best checkpoint..'", ")", "\n", "try", ":", "\n", "          ", "ParamManager", ".", "param_col", ".", "revert_to_best_model", "(", ")", "\n", "", "except", "RevertingUnsavedModelException", ":", "\n", "          ", "pass", "\n", "\n", "", "", "evaluate_args", "=", "self", ".", "evaluate", "\n", "if", "evaluate_args", ":", "\n", "        ", "logger", ".", "info", "(", "\"> Performing final evaluation\"", ")", "\n", "eval_scores", "=", "[", "]", "\n", "for", "evaluator", "in", "evaluate_args", ":", "\n", "          ", "eval_score", "=", "evaluator", ".", "eval", "(", ")", "\n", "if", "type", "(", "eval_score", ")", "==", "list", ":", "\n", "            ", "eval_scores", ".", "extend", "(", "eval_score", ")", "\n", "", "else", ":", "\n", "            ", "eval_scores", ".", "append", "(", "eval_score", ")", "\n", "\n", "", "", "", "self", ".", "save_processed_arg", "(", "\"status\"", ",", "\"done\"", ")", "\n", "save_fct", "(", ")", "\n", "", "else", ":", "\n", "      ", "logger", ".", "info", "(", "\"Experiment already finished, skipping.\"", ")", "\n", "\n", "", "return", "eval_scores", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.levenshtein.LevenshteinAligner.sim": [[7, 12], ["None"], "methods", ["None"], ["def", "sim", "(", "self", ",", "word1", ",", "word2", ")", ":", "\n", "    ", "if", "word1", "==", "word2", ":", "\n", "      ", "return", "0", "\n", "", "else", ":", "\n", "      ", "return", "-", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.levenshtein.LevenshteinAligner.align": [[20, 77], ["range", "range", "range", "range", "len", "range", "len", "len", "len", "len", "len", "range", "len", "len", "len", "max", "len", "s.append", "len", "levenshtein.LevenshteinAligner.sim", "len", "s.append", "len", "levenshtein.LevenshteinAligner.sim", "s.append", "s.append", "levenshtein.LevenshteinAligner.sim"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.levenshtein.LevenshteinAligner.sim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.levenshtein.LevenshteinAligner.sim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.levenshtein.LevenshteinAligner.sim"], ["", "", "def", "align", "(", "self", ",", "l1", ",", "l2", ")", ":", "\n", "# compute matrix", "\n", "    ", "dp_matrix", "=", "[", "[", "0", "]", "*", "(", "len", "(", "l2", ")", "+", "1", ")", "for", "_", "in", "range", "(", "(", "len", "(", "l1", ")", "+", "1", ")", ")", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "l1", ")", "+", "1", ")", ":", "\n", "      ", "dp_matrix", "[", "i", "]", "[", "0", "]", "=", "i", "*", "self", ".", "gapPenalty", "\n", "", "for", "j", "in", "range", "(", "len", "(", "l2", ")", "+", "1", ")", ":", "\n", "      ", "dp_matrix", "[", "0", "]", "[", "j", "]", "=", "j", "*", "self", ".", "gapPenalty", "\n", "", "for", "i", "in", "range", "(", "0", ",", "len", "(", "l1", ")", ")", ":", "\n", "      ", "for", "j", "in", "range", "(", "0", ",", "len", "(", "l2", ")", ")", ":", "\n", "        ", "match", "=", "dp_matrix", "[", "i", "]", "[", "j", "]", "+", "self", ".", "sim", "(", "l1", "[", "i", "]", ",", "l2", "[", "j", "]", ")", "\n", "delete", "=", "dp_matrix", "[", "i", "]", "[", "j", "+", "1", "]", "+", "self", ".", "gapPenalty", "\n", "insert", "=", "dp_matrix", "[", "i", "+", "1", "]", "[", "j", "]", "+", "self", ".", "gapPenalty", "\n", "dp_matrix", "[", "i", "+", "1", "]", "[", "j", "+", "1", "]", "=", "max", "(", "match", ",", "delete", ",", "insert", ")", "\n", "", "", "c", "=", "dp_matrix", "[", "len", "(", "l1", ")", "]", "[", "len", "(", "l2", ")", "]", "\n", "x", "=", "[", "]", "\n", "y", "=", "[", "]", "\n", "i", "=", "len", "(", "l1", ")", "-", "1", "\n", "j", "=", "len", "(", "l2", ")", "-", "1", "\n", "while", "i", ">=", "0", "and", "j", ">=", "0", ":", "\n", "      ", "score", "=", "dp_matrix", "[", "i", "+", "1", "]", "[", "j", "+", "1", "]", "\n", "score_diag", "=", "dp_matrix", "[", "i", "]", "[", "j", "]", "\n", "score_up", "=", "dp_matrix", "[", "i", "+", "1", "]", "[", "j", "]", "\n", "score_left", "=", "dp_matrix", "[", "i", "]", "[", "j", "+", "1", "]", "\n", "if", "score", "==", "score_left", "+", "self", ".", "gapPenalty", ":", "\n", "        ", "x", "=", "[", "l1", "[", "i", "]", "]", "+", "x", "\n", "y", "=", "[", "self", ".", "gapSymbol", "]", "+", "y", "\n", "i", "-=", "1", "\n", "", "elif", "score", "==", "score_up", "+", "self", ".", "gapPenalty", ":", "\n", "        ", "x", "=", "[", "self", ".", "gapSymbol", "]", "+", "x", "\n", "y", "=", "[", "l2", "[", "j", "]", "]", "+", "y", "\n", "j", "-=", "1", "\n", "", "else", ":", "\n", "        ", "assert", "score", "==", "score_diag", "+", "self", ".", "sim", "(", "l1", "[", "i", "]", ",", "l2", "[", "j", "]", ")", "\n", "x", "=", "[", "l1", "[", "i", "]", "]", "+", "x", "\n", "y", "=", "[", "l2", "[", "j", "]", "]", "+", "y", "\n", "i", "-=", "1", "\n", "j", "-=", "1", "\n", "", "", "while", "i", ">=", "0", ":", "\n", "      ", "x", "=", "[", "l1", "[", "i", "]", "]", "+", "x", "\n", "y", "=", "[", "self", ".", "gapSymbol", "]", "+", "y", "\n", "i", "-=", "1", "\n", "", "while", "j", ">=", "0", ":", "\n", "      ", "x", "=", "[", "self", ".", "gapSymbol", "]", "+", "x", "\n", "y", "=", "[", "l2", "[", "j", "]", "]", "+", "y", "\n", "j", "-=", "1", "\n", "", "s", "=", "[", "]", "\n", "assert", "len", "(", "x", ")", "==", "len", "(", "y", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "x", ")", ")", ":", "\n", "      ", "if", "x", "[", "i", "]", "is", "self", ".", "gapSymbol", "and", "y", "[", "i", "]", "is", "not", "self", ".", "gapSymbol", ":", "\n", "        ", "s", ".", "append", "(", "'i'", ")", "\n", "", "elif", "x", "[", "i", "]", "is", "not", "self", ".", "gapSymbol", "and", "y", "[", "i", "]", "is", "self", ".", "gapSymbol", ":", "\n", "        ", "s", ".", "append", "(", "'d'", ")", "\n", "", "elif", "self", ".", "sim", "(", "x", "[", "i", "]", ",", "y", "[", "i", "]", ")", ">=", "0", ":", "\n", "        ", "s", ".", "append", "(", "'c'", ")", "\n", "", "else", ":", "\n", "        ", "s", ".", "append", "(", "'s'", ")", "\n", "", "", "return", "c", ",", "x", ",", "y", ",", "s", "\n", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.search_strategies.SearchStrategy.generate_output": [[29, 41], ["NotImplementedError"], "methods", ["None"], ["def", "generate_output", "(", "self", ",", "translator", ",", "initial_state", ",", "\n", "src_length", "=", "None", ",", "forced_trg_ids", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n      translator: a translator\n      initial_state: initial decoder state\n      src_length: length of src sequence, required for some types of length normalization\n      forced_trg_ids: list of word ids, if given will force to generate this is the target sequence\n    Returns:\n      List of (word_ids, attentions, score, logsoftmaxes)\n    \"\"\"", "\n", "raise", "NotImplementedError", "(", "'generate_output must be implemented in SearchStrategy subclasses'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.search_strategies.GreedySearch.__init__": [[52, 55], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "max_len", ":", "numbers", ".", "Integral", "=", "100", ")", ":", "\n", "    ", "self", ".", "max_len", "=", "max_len", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.search_strategies.GreedySearch.generate_output": [[56, 102], ["range", "masks.insert", "numpy.stack", "numpy.sum", "translator.generate_one_step", "dynet.pick_batch", "numpy.sum.append", "word_ids.append", "attentions.append", "logsoftmaxes.append", "states.append", "all", "SearchOutput", "numpy.argmax", "xnmt.batchers.is_batched", "dynet.cmult", "masks.append", "dynet.cmult.npvalue", "dynet.pick_batch", "translator.get_nobp_state", "translator.generate_one_step.logsoftmax.npvalue", "len", "dynet.inputTensor", "range", "range", "range", "len", "range", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.generate_one_step", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.bow.BowPredictor.get_nobp_state"], ["", "def", "generate_output", "(", "self", ",", "translator", ",", "initial_state", ",", "\n", "src_length", "=", "None", ",", "forced_trg_ids", "=", "None", ")", ":", "\n", "# Output variables", "\n", "    ", "score", "=", "[", "]", "\n", "word_ids", "=", "[", "]", "\n", "attentions", "=", "[", "]", "\n", "logsoftmaxes", "=", "[", "]", "\n", "states", "=", "[", "]", "\n", "masks", "=", "[", "]", "\n", "# Search Variables", "\n", "done", "=", "None", "\n", "current_state", "=", "initial_state", "\n", "for", "length", "in", "range", "(", "self", ".", "max_len", ")", ":", "\n", "      ", "prev_word", "=", "word_ids", "[", "length", "-", "1", "]", "if", "length", ">", "0", "else", "None", "\n", "current_output", "=", "translator", ".", "generate_one_step", "(", "prev_word", ",", "current_state", ")", "\n", "current_state", "=", "current_output", ".", "state", "\n", "if", "forced_trg_ids", "is", "None", ":", "\n", "        ", "word_id", "=", "np", ".", "argmax", "(", "current_output", ".", "logsoftmax", ".", "npvalue", "(", ")", ",", "axis", "=", "0", ")", "\n", "if", "len", "(", "word_id", ".", "shape", ")", "==", "2", ":", "\n", "          ", "word_id", "=", "word_id", "[", "0", "]", "\n", "", "", "else", ":", "\n", "        ", "if", "batchers", ".", "is_batched", "(", "forced_trg_ids", ")", ":", "\n", "          ", "word_id", "=", "[", "forced_trg_ids", "[", "i", "]", "[", "length", "]", "for", "i", "in", "range", "(", "len", "(", "forced_trg_ids", ")", ")", "]", "\n", "", "else", ":", "\n", "          ", "word_id", "=", "[", "forced_trg_ids", "[", "length", "]", "]", "\n", "", "", "logsoft", "=", "dy", ".", "pick_batch", "(", "current_output", ".", "logsoftmax", ",", "word_id", ")", "\n", "if", "done", "is", "not", "None", ":", "\n", "        ", "word_id", "=", "[", "word_id", "[", "i", "]", "if", "not", "done", "[", "i", "]", "else", "Vocab", ".", "ES", "for", "i", "in", "range", "(", "len", "(", "done", ")", ")", "]", "\n", "# masking for logsoftmax", "\n", "mask", "=", "[", "1", "if", "not", "done", "[", "i", "]", "else", "0", "for", "i", "in", "range", "(", "len", "(", "done", ")", ")", "]", "\n", "logsoft", "=", "dy", ".", "cmult", "(", "logsoft", ",", "dy", ".", "inputTensor", "(", "mask", ",", "batched", "=", "True", ")", ")", "\n", "masks", ".", "append", "(", "mask", ")", "\n", "# Packing outputs", "\n", "", "score", ".", "append", "(", "logsoft", ".", "npvalue", "(", ")", ")", "\n", "word_ids", ".", "append", "(", "word_id", ")", "\n", "attentions", ".", "append", "(", "current_output", ".", "attention", ")", "\n", "logsoftmaxes", ".", "append", "(", "dy", ".", "pick_batch", "(", "current_output", ".", "logsoftmax", ",", "word_id", ")", ")", "\n", "states", ".", "append", "(", "translator", ".", "get_nobp_state", "(", "current_state", ")", ")", "\n", "# Check if we are done.", "\n", "done", "=", "[", "x", "==", "Vocab", ".", "ES", "for", "x", "in", "word_id", "]", "\n", "if", "all", "(", "done", ")", ":", "\n", "        ", "break", "\n", "", "", "masks", ".", "insert", "(", "0", ",", "[", "1", "for", "_", "in", "range", "(", "len", "(", "done", ")", ")", "]", ")", "\n", "words", "=", "np", ".", "stack", "(", "word_ids", ",", "axis", "=", "1", ")", "\n", "score", "=", "np", ".", "sum", "(", "score", ",", "axis", "=", "0", ")", "\n", "return", "[", "SearchOutput", "(", "words", ",", "attentions", ",", "score", ",", "logsoftmaxes", ",", "states", ",", "masks", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.search_strategies.BeamSearch.__init__": [[119, 131], ["xnmt.persistence.bare"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "beam_size", ":", "numbers", ".", "Integral", "=", "1", ",", "\n", "max_len", ":", "numbers", ".", "Integral", "=", "100", ",", "\n", "len_norm", ":", "LengthNormalization", "=", "bare", "(", "NoNormalization", ")", ",", "\n", "one_best", ":", "bool", "=", "True", ",", "\n", "scores_proc", ":", "Optional", "[", "Callable", "[", "[", "np", ".", "ndarray", "]", ",", "None", "]", "]", "=", "None", ")", ":", "\n", "    ", "self", ".", "beam_size", "=", "beam_size", "\n", "self", ".", "max_len", "=", "max_len", "\n", "self", ".", "len_norm", "=", "len_norm", "\n", "self", ".", "one_best", "=", "one_best", "\n", "self", ".", "scores_proc", "=", "scores_proc", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.search_strategies.BeamSearch.generate_output": [[132, 203], ["range", "search_strategies.BeamSearch.len_norm.normalize_completed", "sorted", "xnmt.logger.warning", "search_strategies.BeamSearch.Hypothesis", "len", "list", "results.append", "forced_trg_ids.sent_len", "len", "translator.generate_one_step", "translator.generate_one_step.logsoftmax.npvalue().transpose", "sorted", "zip", "word_ids.append", "attentions.append", "SearchOutput", "completed_hyp.append", "search_strategies.BeamSearch.scores_proc", "search_strategies.BeamSearch.len_norm.normalize_partial_topk", "new_set.append", "list", "list", "translator.generate_one_step.logsoftmax.npvalue", "numpy.argpartition", "search_strategies.BeamSearch.Hypothesis", "list", "list", "reversed", "reversed", "max", "reversed", "reversed", "len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.length_norm.GaussianNormalization.normalize_completed", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.generate_one_step", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.length_norm.PolynomialNormalization.normalize_partial_topk", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.reversed", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.reversed", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.reversed", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.reversed"], ["", "def", "generate_output", "(", "self", ",", "translator", ",", "initial_state", ",", "\n", "src_length", "=", "None", ",", "forced_trg_ids", "=", "None", ")", ":", "\n", "# TODO(philip30): can only do single decoding, not batched", "\n", "    ", "assert", "forced_trg_ids", "is", "None", "or", "self", ".", "beam_size", "==", "1", "\n", "if", "forced_trg_ids", "is", "not", "None", "and", "forced_trg_ids", ".", "sent_len", "(", ")", ">", "self", ".", "max_len", ":", "\n", "      ", "logger", ".", "warning", "(", "\"Forced decoding with a target longer than max_len. \"", "\n", "\"Increase max_len to avoid unexpected behavior.\"", ")", "\n", "\n", "", "active_hyp", "=", "[", "self", ".", "Hypothesis", "(", "0", ",", "None", ",", "None", ",", "None", ")", "]", "\n", "completed_hyp", "=", "[", "]", "\n", "for", "length", "in", "range", "(", "self", ".", "max_len", ")", ":", "\n", "      ", "if", "len", "(", "completed_hyp", ")", ">=", "self", ".", "beam_size", ":", "\n", "        ", "break", "\n", "# Expand hyp", "\n", "", "new_set", "=", "[", "]", "\n", "for", "hyp", "in", "active_hyp", ":", "\n", "        ", "if", "length", ">", "0", ":", "\n", "          ", "prev_word", "=", "hyp", ".", "word", "\n", "prev_state", "=", "hyp", ".", "output", ".", "state", "\n", "", "else", ":", "\n", "          ", "prev_word", "=", "None", "\n", "prev_state", "=", "initial_state", "\n", "", "if", "prev_word", "==", "Vocab", ".", "ES", ":", "\n", "          ", "completed_hyp", ".", "append", "(", "hyp", ")", "\n", "continue", "\n", "", "current_output", "=", "translator", ".", "generate_one_step", "(", "prev_word", ",", "prev_state", ")", "\n", "score", "=", "current_output", ".", "logsoftmax", ".", "npvalue", "(", ")", ".", "transpose", "(", ")", "\n", "if", "self", ".", "scores_proc", ":", "\n", "          ", "self", ".", "scores_proc", "(", "score", ")", "\n", "# Next Words", "\n", "", "if", "forced_trg_ids", "is", "None", ":", "\n", "          ", "top_words", "=", "np", ".", "argpartition", "(", "score", ",", "max", "(", "-", "len", "(", "score", ")", ",", "-", "self", ".", "beam_size", ")", ")", "[", "-", "self", ".", "beam_size", ":", "]", "\n", "", "else", ":", "\n", "          ", "top_words", "=", "[", "forced_trg_ids", "[", "length", "]", "]", "\n", "# Queue next states", "\n", "", "for", "cur_word", "in", "top_words", ":", "\n", "          ", "new_score", "=", "self", ".", "len_norm", ".", "normalize_partial_topk", "(", "hyp", ".", "score", ",", "score", "[", "cur_word", "]", ",", "length", "+", "1", ")", "\n", "new_set", ".", "append", "(", "self", ".", "Hypothesis", "(", "new_score", ",", "current_output", ",", "hyp", ",", "cur_word", ")", ")", "\n", "# Next top hypothesis", "\n", "", "", "active_hyp", "=", "sorted", "(", "new_set", ",", "key", "=", "lambda", "x", ":", "x", ".", "score", ",", "reverse", "=", "True", ")", "[", ":", "self", ".", "beam_size", "]", "\n", "# There is no hyp reached </s>", "\n", "", "if", "len", "(", "completed_hyp", ")", "==", "0", ":", "\n", "      ", "completed_hyp", "=", "active_hyp", "\n", "# Length Normalization", "\n", "", "normalized_scores", "=", "self", ".", "len_norm", ".", "normalize_completed", "(", "completed_hyp", ",", "src_length", ")", "\n", "hyp_and_score", "=", "sorted", "(", "list", "(", "zip", "(", "completed_hyp", ",", "normalized_scores", ")", ")", ",", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", ",", "reverse", "=", "True", ")", "\n", "if", "self", ".", "one_best", ":", "\n", "      ", "hyp_and_score", "=", "[", "hyp_and_score", "[", "0", "]", "]", "\n", "# Backtracing + Packing outputs", "\n", "", "results", "=", "[", "]", "\n", "for", "end_hyp", ",", "score", "in", "hyp_and_score", ":", "\n", "      ", "logsoftmaxes", "=", "[", "]", "\n", "word_ids", "=", "[", "]", "\n", "attentions", "=", "[", "]", "\n", "states", "=", "[", "]", "\n", "current", "=", "end_hyp", "\n", "while", "current", ".", "parent", "is", "not", "None", ":", "\n", "        ", "word_ids", ".", "append", "(", "current", ".", "word", ")", "\n", "attentions", ".", "append", "(", "current", ".", "output", ".", "attention", ")", "\n", "# TODO(philip30): This should probably be uncommented.", "\n", "# These 2 statements are an overhead because it is need only for reinforce and minrisk", "\n", "# Furthermore, the attentions is only needed for report.", "\n", "# We should have a global flag to indicate whether this is needed or not?", "\n", "# The global flag is modified if certain objects is instantiated.", "\n", "#logsoftmaxes.append(dy.pick(current.output.logsoftmax, current.word))", "\n", "#states.append(translator.get_nobp_state(current.output.state))", "\n", "current", "=", "current", ".", "parent", "\n", "", "results", ".", "append", "(", "SearchOutput", "(", "[", "list", "(", "reversed", "(", "word_ids", ")", ")", "]", ",", "[", "list", "(", "reversed", "(", "attentions", ")", ")", "]", ",", "\n", "[", "score", "]", ",", "list", "(", "reversed", "(", "logsoftmaxes", ")", ")", ",", "\n", "list", "(", "reversed", "(", "states", ")", ")", ",", "None", ")", ")", "\n", "", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.search_strategies.SamplingSearch.__init__": [[216, 220], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "max_len", ":", "numbers", ".", "Integral", "=", "100", ",", "sample_size", ":", "numbers", ".", "Integral", "=", "5", ")", ":", "\n", "    ", "self", ".", "max_len", "=", "max_len", "\n", "self", ".", "sample_size", "=", "sample_size", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.search_strategies.SamplingSearch.generate_output": [[221, 230], ["range", "outputs.append", "outputs.append", "search_strategies.SamplingSearch.sample_one", "search_strategies.SamplingSearch.sample_one"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.search_strategies.SamplingSearch.sample_one", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.search_strategies.SamplingSearch.sample_one"], ["", "def", "generate_output", "(", "self", ",", "translator", ",", "initial_state", ",", "\n", "src_length", "=", "None", ",", "forced_trg_ids", "=", "None", ")", ":", "\n", "    ", "outputs", "=", "[", "]", "\n", "for", "k", "in", "range", "(", "self", ".", "sample_size", ")", ":", "\n", "      ", "if", "k", "==", "0", "and", "forced_trg_ids", "is", "not", "None", ":", "\n", "        ", "outputs", ".", "append", "(", "self", ".", "sample_one", "(", "translator", ",", "initial_state", ",", "forced_trg_ids", ")", ")", "\n", "", "else", ":", "\n", "        ", "outputs", ".", "append", "(", "self", ".", "sample_one", "(", "translator", ",", "initial_state", ")", ")", "\n", "", "", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.search_strategies.SamplingSearch.sample_one": [[232, 277], ["range", "dynet.esum().npvalue", "masks.insert", "numpy.stack", "SearchOutput", "translator.generate_one_step", "dynet.pick_batch", "logsofts.append", "numpy.stack.append", "states.append", "attentions.append", "all", "translator.generate_one_step.logsoftmax.tensor_value().categorical_sample_log_prob().as_numpy", "dynet.cmult", "masks.append", "translator.get_nobp_state", "dynet.esum", "len", "dynet.inputTensor", "range", "translator.generate_one_step.logsoftmax.tensor_value().categorical_sample_log_prob", "range", "range", "len", "forced_trg.sent_len", "len", "len", "translator.generate_one_step.logsoftmax.tensor_value"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.generate_one_step", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.bow.BowPredictor.get_nobp_state", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len"], ["", "def", "sample_one", "(", "self", ",", "translator", ",", "initial_state", ",", "forced_trg_ids", "=", "None", ")", ":", "\n", "# Search variables", "\n", "    ", "current_words", "=", "None", "\n", "current_state", "=", "initial_state", "\n", "done", "=", "None", "\n", "# Outputs", "\n", "logsofts", "=", "[", "]", "\n", "samples", "=", "[", "]", "\n", "states", "=", "[", "]", "\n", "attentions", "=", "[", "]", "\n", "masks", "=", "[", "]", "\n", "# Sample to the max length", "\n", "for", "length", "in", "range", "(", "self", ".", "max_len", ")", ":", "\n", "      ", "translator_output", "=", "translator", ".", "generate_one_step", "(", "current_words", ",", "current_state", ")", "\n", "if", "forced_trg_ids", "is", "None", ":", "\n", "        ", "sample", "=", "translator_output", ".", "logsoftmax", ".", "tensor_value", "(", ")", ".", "categorical_sample_log_prob", "(", ")", ".", "as_numpy", "(", ")", "\n", "if", "len", "(", "sample", ".", "shape", ")", "==", "2", ":", "\n", "          ", "sample", "=", "sample", "[", "0", "]", "\n", "", "", "else", ":", "\n", "        ", "sample", "=", "[", "forced_trg", "[", "length", "]", "if", "forced_trg", ".", "sent_len", "(", ")", ">", "length", "else", "Vocab", ".", "ES", "for", "forced_trg", "in", "forced_trg_ids", "]", "\n", "", "logsoft", "=", "dy", ".", "pick_batch", "(", "translator_output", ".", "logsoftmax", ",", "sample", ")", "\n", "if", "done", "is", "not", "None", ":", "\n", "        ", "sample", "=", "[", "sample", "[", "i", "]", "if", "not", "done", "[", "i", "]", "else", "Vocab", ".", "ES", "for", "i", "in", "range", "(", "len", "(", "done", ")", ")", "]", "\n", "# masking for logsoftmax", "\n", "mask", "=", "[", "1", "if", "not", "done", "[", "i", "]", "else", "0", "for", "i", "in", "range", "(", "len", "(", "done", ")", ")", "]", "\n", "logsoft", "=", "dy", ".", "cmult", "(", "logsoft", ",", "dy", ".", "inputTensor", "(", "mask", ",", "batched", "=", "True", ")", ")", "\n", "masks", ".", "append", "(", "mask", ")", "\n", "# Appending output", "\n", "", "logsofts", ".", "append", "(", "logsoft", ")", "\n", "samples", ".", "append", "(", "sample", ")", "\n", "states", ".", "append", "(", "translator", ".", "get_nobp_state", "(", "translator_output", ".", "state", ")", ")", "\n", "attentions", ".", "append", "(", "translator_output", ".", "attention", ")", "\n", "# Next time step", "\n", "current_words", "=", "sample", "\n", "current_state", "=", "translator_output", ".", "state", "\n", "# Check done", "\n", "done", "=", "[", "x", "==", "Vocab", ".", "ES", "for", "x", "in", "sample", "]", "\n", "# Check if we are done.", "\n", "if", "all", "(", "done", ")", ":", "\n", "        ", "break", "\n", "# Packing output", "\n", "", "", "scores", "=", "dy", ".", "esum", "(", "logsofts", ")", ".", "npvalue", "(", ")", "\n", "masks", ".", "insert", "(", "0", ",", "[", "1", "for", "_", "in", "range", "(", "len", "(", "done", ")", ")", "]", ")", "\n", "samples", "=", "np", ".", "stack", "(", "samples", ",", "axis", "=", "1", ")", "\n", "return", "SearchOutput", "(", "samples", ",", "attentions", ",", "scores", ",", "logsofts", ",", "states", ",", "masks", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.search_strategies.MctsNode.__init__": [[280, 297], ["None"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "parent", ",", "prior_dist", ",", "word", ",", "attention", ",", "translator", ",", "dec_state", ")", ":", "\n", "    ", "self", ".", "parent", "=", "parent", "\n", "self", ".", "prior_dist", "=", "prior_dist", "# log of softmax", "\n", "self", ".", "word", "=", "word", "\n", "self", ".", "attention", "=", "attention", "\n", "\n", "self", ".", "translator", "=", "translator", "\n", "self", ".", "dec_state", "=", "dec_state", "\n", "\n", "self", ".", "tries", "=", "0", "\n", "self", ".", "avg_value", "=", "0.0", "\n", "self", ".", "children", "=", "{", "}", "\n", "\n", "# If the child is unvisited, set its avg_value to", "\n", "# parent value - reduction where reduction = c * sqrt(sum of scores of all visited children)", "\n", "# where c is 0.25 in leela", "\n", "self", ".", "reduction", "=", "0.0", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.search_strategies.MctsNode.choose_child": [[298, 301], ["max", "range", "len", "search_strategies.MctsNode.compute_priority"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.search_strategies.MctsNode.compute_priority"], ["", "def", "choose_child", "(", "self", ")", ":", "\n", "    ", "return", "max", "(", "range", "(", "len", "(", "self", ".", "prior_dist", ")", ")", ",", "\n", "key", "=", "lambda", "move", ":", "self", ".", "compute_priority", "(", "move", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.search_strategies.MctsNode.compute_priority": [[302, 317], ["math.sqrt", "math.exp"], "methods", ["None"], ["", "def", "compute_priority", "(", "self", ",", "move", ")", ":", "\n", "    ", "if", "move", "not", "in", "self", ".", "children", ":", "\n", "      ", "child_val", "=", "self", ".", "prior_dist", "[", "move", "]", "+", "self", ".", "avg_value", "-", "self", ".", "reduction", "\n", "child_tries", "=", "0", "\n", "", "else", ":", "\n", "      ", "child_val", "=", "self", ".", "prior_dist", "[", "move", "]", "+", "self", ".", "children", "[", "move", "]", ".", "avg_value", "\n", "child_tries", "=", "self", ".", "children", "[", "move", "]", ".", "tries", "\n", "\n", "", "K", "=", "5.0", "\n", "exp_term", "=", "math", ".", "sqrt", "(", "1.0", "*", "self", ".", "tries", "+", "1.0", ")", "/", "(", "child_tries", "+", "1", ")", "\n", "# TODO: This exp could be done before the prior is passed into the MctsNode", "\n", "# so it's done as a big batch", "\n", "exp_term", "*=", "K", "*", "math", ".", "exp", "(", "self", ".", "prior_dist", "[", "move", "]", ")", "\n", "total_value", "=", "child_val", "+", "exp_term", "\n", "return", "total_value", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.search_strategies.MctsNode.expand": [[318, 341], ["search_strategies.MctsNode.choose_child", "search_strategies.MctsNode.children[].expand", "search_strategies.MctsNode.translator.generate_one_step", "search_strategies.MctsNode.logsoftmax.npvalue", "print", "search_strategies.MctsNode", "path.append", "str", "reversed"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.search_strategies.MctsNode.choose_child", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.search_strategies.MctsNode.expand", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.generate_one_step", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.reversed"], ["", "def", "expand", "(", "self", ")", ":", "\n", "    ", "if", "self", ".", "word", "==", "Vocab", ".", "ES", ":", "\n", "      ", "return", "self", "\n", "\n", "", "move", "=", "self", ".", "choose_child", "(", ")", "\n", "if", "move", "in", "self", ".", "children", ":", "\n", "      ", "return", "self", ".", "children", "[", "move", "]", ".", "expand", "(", ")", "\n", "", "else", ":", "\n", "      ", "output", "=", "self", ".", "translator", ".", "generate_one_step", "(", "move", ",", "self", ".", "dec_state", ")", "\n", "prior_dist", "=", "output", ".", "logsoftmax", ".", "npvalue", "(", ")", "\n", "attention", "=", "output", ".", "attention", "\n", "\n", "path", "=", "[", "]", "\n", "node", "=", "self", "\n", "while", "node", "is", "not", "None", ":", "\n", "        ", "path", ".", "append", "(", "node", ".", "word", ")", "\n", "node", "=", "node", ".", "parent", "\n", "", "path", "=", "' '", ".", "join", "(", "str", "(", "word", ")", "for", "word", "in", "reversed", "(", "path", ")", ")", "\n", "print", "(", "'Creating new node:'", ",", "path", ",", "'+'", ",", "move", ")", "\n", "new_node", "=", "MctsNode", "(", "self", ",", "prior_dist", ",", "move", ",", "attention", ",", "\n", "self", ".", "translator", ",", "output", ".", "state", ")", "\n", "self", ".", "children", "[", "move", "]", "=", "new_node", "\n", "return", "new_node", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.search_strategies.MctsNode.rollout": [[342, 366], ["search_strategies.MctsNode.translator.generate_one_step", "search_strategies.MctsNode.logsoftmax.npvalue", "sample_func", "print", "prefix.append", "scores.append", "len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.generate_one_step", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "", "def", "rollout", "(", "self", ",", "sample_func", ",", "max_len", ")", ":", "\n", "    ", "prefix", "=", "[", "]", "\n", "scores", "=", "[", "]", "\n", "prev_word", "=", "None", "\n", "dec_state", "=", "self", ".", "dec_state", "\n", "\n", "if", "self", ".", "word", "==", "Vocab", ".", "ES", ":", "\n", "      ", "return", "prefix", ",", "scores", "\n", "\n", "", "while", "True", ":", "\n", "      ", "output", "=", "self", ".", "translator", ".", "generate_one_step", "(", "prev_word", ",", "dec_state", ")", "\n", "logsoftmax", "=", "output", ".", "logsoftmax", ".", "npvalue", "(", ")", "\n", "attention", "=", "output", ".", "attention", "\n", "best_id", "=", "sample_func", "(", "logsoftmax", ")", "\n", "print", "(", "\"Rolling out node with word=\"", ",", "best_id", ",", "'score='", ",", "logsoftmax", "[", "best_id", "]", ")", "\n", "\n", "prefix", ".", "append", "(", "best_id", ")", "\n", "scores", ".", "append", "(", "logsoftmax", "[", "best_id", "]", ")", "\n", "\n", "if", "best_id", "==", "Vocab", ".", "ES", "or", "len", "(", "prefix", ")", ">=", "max_len", ":", "\n", "        ", "break", "\n", "", "prev_word", "=", "best_id", "\n", "dec_state", "=", "output", ".", "state", "\n", "", "return", "prefix", ",", "scores", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.search_strategies.MctsNode.backup": [[367, 374], ["print", "search_strategies.MctsNode.parent.backup"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.search_strategies.MctsNode.backup"], ["", "def", "backup", "(", "self", ",", "result", ")", ":", "\n", "    ", "print", "(", "'Backing up'", ",", "result", ")", "\n", "self", ".", "avg_value", "=", "self", ".", "avg_value", "*", "(", "self", ".", "tries", "/", "(", "self", ".", "tries", "+", "1", ")", ")", "+", "result", "/", "(", "self", ".", "tries", "+", "1", ")", "\n", "self", ".", "tries", "+=", "1", "\n", "if", "self", ".", "parent", "is", "not", "None", ":", "\n", "      ", "my_prob", "=", "self", ".", "parent", ".", "prior_dist", "[", "self", ".", "word", "]", "\n", "self", ".", "parent", ".", "backup", "(", "result", "+", "my_prob", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.search_strategies.MctsNode.collect": [[375, 382], ["words.append", "attentions.append", "len", "max", "max.collect", "search_strategies.MctsNode.children.itervalues"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.search_strategies.MctsNode.collect"], ["", "", "def", "collect", "(", "self", ",", "words", ",", "attentions", ")", ":", "\n", "    ", "if", "self", ".", "word", "is", "not", "None", ":", "\n", "      ", "words", ".", "append", "(", "self", ".", "word", ")", "\n", "attentions", ".", "append", "(", "self", ".", "attention", ")", "\n", "", "if", "len", "(", "self", ".", "children", ")", ">", "0", ":", "\n", "      ", "best_child", "=", "max", "(", "self", ".", "children", ".", "itervalues", "(", ")", ",", "key", "=", "lambda", "child", ":", "child", ".", "visits", ")", "\n", "best_child", ".", "collect", "(", "words", ",", "attentions", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.search_strategies.MctsSearch.__init__": [[402, 406], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "visits", "=", "200", ",", "max_len", "=", "100", ")", ":", "\n", "    ", "self", ".", "max_len", "=", "max_len", "\n", "self", ".", "visits", "=", "visits", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.search_strategies.MctsSearch.generate_output": [[407, 454], ["translator.generate_one_step", "translator.generate_one_step.logsoftmax.npvalue", "search_strategies.MctsNode", "range", "print", "print", "numpy.expand_dims", "search_strategies.MctsNode.expand", "search_strategies.MctsNode.expand", "search_strategies.MctsNode.expand", "print", "print", "max", "scores.append", "logsoftmaxes.append", "numpy.expand_dims.append", "attentions.append", "states.append", "masks.append", "SearchOutput", "sum", "search_strategies.MctsNode.compute_priority", "len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.generate_one_step", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.search_strategies.MctsNode.expand", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.search_strategies.MctsNode.expand", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.search_strategies.MctsNode.expand", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.search_strategies.MctsNode.compute_priority"], ["", "def", "generate_output", "(", "self", ",", "translator", ",", "dec_state", ",", "\n", "src_length", "=", "None", ",", "forced_trg_ids", "=", "None", ")", ":", "\n", "    ", "assert", "forced_trg_ids", "is", "None", "\n", "orig_dec_state", "=", "dec_state", "\n", "\n", "output", "=", "translator", ".", "generate_one_step", "(", "None", ",", "dec_state", ")", "\n", "dec_state", "=", "output", ".", "state", "\n", "assert", "dec_state", "==", "orig_dec_state", "\n", "logsoftmax", "=", "output", ".", "logsoftmax", ".", "npvalue", "(", ")", "\n", "root_node", "=", "MctsNode", "(", "None", ",", "logsoftmax", ",", "None", ",", "None", ",", "translator", ",", "dec_state", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "visits", ")", ":", "\n", "      ", "terminal", "=", "root_node", ".", "expand", "(", ")", "\n", "words", ",", "scores", "=", "terminal", ".", "rollout", "(", "random_choice", ",", "self", ".", "max_len", ")", "\n", "terminal", ".", "backup", "(", "sum", "(", "scores", ")", ")", "\n", "print", "(", ")", "\n", "\n", "", "print", "(", "'Final stats:'", ")", "\n", "for", "word", "in", "root_node", ".", "children", ":", "\n", "      ", "print", "(", "word", ",", "root_node", ".", "compute_priority", "(", "word", ")", ",", "root_node", ".", "prior_dist", "[", "word", "]", "+", "root_node", ".", "children", "[", "word", "]", ".", "avg_value", ",", "root_node", ".", "children", "[", "word", "]", ".", "tries", ")", "\n", "", "print", "(", ")", "\n", "\n", "scores", "=", "[", "]", "\n", "logsoftmaxes", "=", "[", "]", "\n", "word_ids", "=", "[", "]", "\n", "attentions", "=", "[", "]", "\n", "states", "=", "[", "]", "\n", "masks", "=", "[", "]", "\n", "\n", "node", "=", "root_node", "\n", "while", "True", ":", "\n", "      ", "if", "len", "(", "node", ".", "children", ")", "==", "0", ":", "\n", "        ", "break", "\n", "", "best_word", "=", "max", "(", "node", ".", "children", ",", "key", "=", "lambda", "word", ":", "node", ".", "children", "[", "word", "]", ".", "tries", ")", "\n", "score", "=", "node", ".", "prior_dist", "[", "best_word", "]", "\n", "attention", "=", "node", ".", "children", "[", "best_word", "]", ".", "attention", "\n", "\n", "scores", ".", "append", "(", "score", ")", "\n", "logsoftmaxes", ".", "append", "(", "node", ".", "prior_dist", ")", "\n", "word_ids", ".", "append", "(", "best_word", ")", "\n", "attentions", ".", "append", "(", "attention", ")", "\n", "states", ".", "append", "(", "node", ".", "dec_state", ")", "\n", "masks", ".", "append", "(", "1", ")", "\n", "\n", "node", "=", "node", ".", "children", "[", "best_word", "]", "\n", "\n", "", "word_ids", "=", "np", ".", "expand_dims", "(", "word_ids", ",", "axis", "=", "0", ")", "\n", "return", "[", "SearchOutput", "(", "word_ids", ",", "attentions", ",", "scores", ",", "logsoftmaxes", ",", "states", ",", "masks", ")", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.search_strategies.random_choice": [[384, 390], ["numpy.exp", "sum", "numpy.random.choice", "len"], "function", ["None"], ["", "", "", "def", "random_choice", "(", "logsoftmax", ")", ":", "\n", "#logsoftmax *= 100", "\n", "  ", "probs", "=", "np", ".", "exp", "(", "logsoftmax", ")", "\n", "probs", "/=", "sum", "(", "probs", ")", "\n", "choices", "=", "np", ".", "random", ".", "choice", "(", "len", "(", "probs", ")", ",", "1", ",", "p", "=", "probs", ")", "\n", "return", "choices", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.search_strategies.greedy_choice": [[392, 394], ["numpy.argmax"], "function", ["None"], ["", "def", "greedy_choice", "(", "logsoftmax", ")", ":", "\n", "  ", "return", "np", ".", "argmax", "(", "logsoftmax", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.xnmt_run_experiments.main": [[32, 111], ["xnmt.tee.Tee", "xnmt.tee.Tee", "argparse.ArgumentParser", "xnmt.utils.add_dynet_argparse", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.set_defaults", "argparse.ArgumentParser.parse_args", "xnmt.persistence.YamlPreloader.experiment_names_from_file", "xnmt.tee.log_preamble", "random.seed", "numpy.random.seed", "set().difference", "xnmt.param_collections.ParamManager.init_param_col", "xnmt.persistence.YamlPreloader.preload_experiment_from_file", "xnmt.logger.info", "xnmt.tee.set_out_file", "xnmt.tee.log_preamble", "len", "Exception", "os.path.isfile", "xnmt.logger.warning", "vars", "xnmt.persistence.initialize_if_needed", "xnmt.param_collections.ParamManager.populate", "xnmt.persistence.initialize_if_needed.", "results.append", "xnmt_run_experiments.print_results", "xnmt.tee.unset_out_file", "set", "xnmt.tee.get_git_revision", "socket.gethostname", "datetime.datetime.now().strftime", "xnmt.file_logger.error", "traceback.format_exc", "list", "datetime.datetime.now", "xnmt.persistence.save_to_file"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.utils.add_dynet_argparse", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.reload_example.parse_args", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader.experiment_names_from_file", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.log_preamble", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.init_param_col", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader.preload_experiment_from_file", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.set_out_file", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.log_preamble", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.initialize_if_needed", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.populate", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.xnmt_run_experiments.print_results", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.unset_out_file", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.get_git_revision", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.save_to_file"], ["", "def", "main", "(", "overwrite_args", "=", "None", ")", ":", "\n", "\n", "  ", "with", "tee", ".", "Tee", "(", ")", ",", "tee", ".", "Tee", "(", "error", "=", "True", ")", ":", "\n", "    ", "argparser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "utils", ".", "add_dynet_argparse", "(", "argparser", ")", "\n", "argparser", ".", "add_argument", "(", "\"--settings\"", ",", "type", "=", "str", ",", "default", "=", "\"standard\"", ",", "help", "=", "\"settings (standard, debug, or unittest)\"", "\n", "\"must be given in '=' syntax, e.g.\"", "\n", "\" --settings=standard\"", ")", "\n", "argparser", ".", "add_argument", "(", "\"--resume\"", ",", "action", "=", "'store_true'", ",", "help", "=", "\"whether a saved experiment is being resumed, and\"", "\n", "\"locations of output files should be re-used.\"", ")", "\n", "argparser", ".", "add_argument", "(", "\"experiments_file\"", ")", "\n", "argparser", ".", "add_argument", "(", "\"experiment_name\"", ",", "nargs", "=", "'*'", ",", "help", "=", "\"Run only the specified experiments\"", ")", "\n", "argparser", ".", "set_defaults", "(", "generate_doc", "=", "False", ")", "\n", "args", "=", "argparser", ".", "parse_args", "(", "overwrite_args", ")", "\n", "\n", "if", "args", ".", "dynet_seed", ":", "\n", "      ", "random", ".", "seed", "(", "args", ".", "dynet_seed", ")", "\n", "np", ".", "random", ".", "seed", "(", "args", ".", "dynet_seed", ")", "\n", "\n", "", "if", "args", ".", "dynet_gpu", ":", "\n", "      ", "if", "settings", ".", "CHECK_VALIDITY", ":", "\n", "        ", "settings", ".", "CHECK_VALIDITY", "=", "False", "\n", "log_preamble", "(", "\"disabling CHECK_VALIDITY because it is not supported on GPU currently\"", ",", "logging", ".", "WARNING", ")", "\n", "\n", "", "", "config_experiment_names", "=", "YamlPreloader", ".", "experiment_names_from_file", "(", "args", ".", "experiments_file", ")", "\n", "\n", "results", "=", "[", "]", "\n", "\n", "# Check ahead of time that all experiments exist, to avoid bad surprises", "\n", "experiment_names", "=", "args", ".", "experiment_name", "or", "config_experiment_names", "\n", "\n", "if", "args", ".", "experiment_name", ":", "\n", "      ", "nonexistent", "=", "set", "(", "experiment_names", ")", ".", "difference", "(", "config_experiment_names", ")", "\n", "if", "len", "(", "nonexistent", ")", "!=", "0", ":", "\n", "        ", "raise", "Exception", "(", "\"Experiments {} do not exist\"", ".", "format", "(", "\",\"", ".", "join", "(", "list", "(", "nonexistent", ")", ")", ")", ")", "\n", "\n", "", "", "log_preamble", "(", "f\"running XNMT revision {tee.get_git_revision()} on {socket.gethostname()} on {datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\"", ")", "\n", "for", "experiment_name", "in", "experiment_names", ":", "\n", "\n", "      ", "ParamManager", ".", "init_param_col", "(", ")", "\n", "\n", "uninitialized_exp_args", "=", "YamlPreloader", ".", "preload_experiment_from_file", "(", "args", ".", "experiments_file", ",", "experiment_name", ",", "\n", "resume", "=", "args", ".", "resume", ")", "\n", "\n", "logger", ".", "info", "(", "f\"=> Running {experiment_name}\"", ")", "\n", "\n", "glob_args", "=", "uninitialized_exp_args", ".", "data", ".", "exp_global", "\n", "log_file", "=", "glob_args", ".", "log_file", "\n", "\n", "if", "os", ".", "path", ".", "isfile", "(", "log_file", ")", "and", "not", "settings", ".", "OVERWRITE_LOG", ":", "\n", "        ", "logger", ".", "warning", "(", "f\"log file {log_file} already exists, skipping experiment; please delete log file by hand if you want to overwrite it \"", "\n", "f\"(or activate OVERWRITE_LOG, by either specifying an environment variable as OVERWRITE_LOG=1, \"", "\n", "f\"or specifying --settings=debug, or changing xnmt.settings.Standard.OVERWRITE_LOG manually)\"", ")", "\n", "continue", "\n", "\n", "", "tee", ".", "set_out_file", "(", "log_file", ",", "exp_name", "=", "experiment_name", ")", "\n", "\n", "try", ":", "\n", "\n", "        ", "model_file", "=", "glob_args", ".", "model_file", "\n", "\n", "uninitialized_exp_args", ".", "data", ".", "exp_global", ".", "commandline_args", "=", "vars", "(", "args", ")", "\n", "\n", "# Create the model", "\n", "experiment", "=", "initialize_if_needed", "(", "uninitialized_exp_args", ")", "\n", "ParamManager", ".", "param_col", ".", "model_file", "=", "experiment", ".", "exp_global", ".", "model_file", "\n", "ParamManager", ".", "param_col", ".", "save_num_checkpoints", "=", "experiment", ".", "exp_global", ".", "save_num_checkpoints", "\n", "ParamManager", ".", "populate", "(", ")", "\n", "\n", "# Run the experiment", "\n", "eval_scores", "=", "experiment", "(", "save_fct", "=", "lambda", ":", "save_to_file", "(", "model_file", ",", "experiment", ")", ")", "\n", "results", ".", "append", "(", "(", "experiment_name", ",", "eval_scores", ")", ")", "\n", "print_results", "(", "results", ")", "\n", "\n", "", "except", "Exception", "as", "e", ":", "\n", "        ", "file_logger", ".", "error", "(", "traceback", ".", "format_exc", "(", ")", ")", "\n", "raise", "e", "\n", "", "finally", ":", "\n", "        ", "tee", ".", "unset_out_file", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.xnmt_run_experiments.print_results": [[112, 120], ["print", "print", "print", "range", "len", "print", "str"], "function", ["None"], ["", "", "", "", "def", "print_results", "(", "results", ")", ":", "\n", "  ", "print", "(", "\"\"", ")", "\n", "print", "(", "\"{:<30}|{:<40}\"", ".", "format", "(", "\"Experiment\"", ",", "\" Final Scores\"", ")", ")", "\n", "print", "(", "\"-\"", "*", "(", "70", "+", "1", ")", ")", "\n", "\n", "for", "experiment_name", ",", "eval_scores", "in", "results", ":", "\n", "    ", "for", "i", "in", "range", "(", "len", "(", "eval_scores", ")", ")", ":", "\n", "      ", "print", "(", "\"{:<30}| {:<40}\"", ".", "format", "(", "(", "experiment_name", "if", "i", "==", "0", "else", "\"\"", ")", ",", "str", "(", "eval_scores", "[", "i", "]", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.__init__.init_representer": [[70, 77], ["dumper.represent_mapping", "id", "id"], "function", ["None"], []], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_calculators.LossCalculator.calc_loss": [[21, 23], ["NotImplementedError"], "methods", ["None"], ["def", "calc_loss", "(", "self", ",", "translator", ",", "src", ",", "trg", ")", ":", "\n", "    ", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_calculators.LossCalculator.remove_eos": [[24, 32], ["sequence.index"], "methods", ["None"], ["", "def", "remove_eos", "(", "self", ",", "sequence", ",", "eos_sym", "=", "Vocab", ".", "ES", ")", ":", "\n", "    ", "try", ":", "\n", "      ", "idx", "=", "sequence", ".", "index", "(", "eos_sym", ")", "\n", "sequence", "=", "sequence", "[", ":", "idx", "]", "\n", "", "except", "ValueError", ":", "\n", "# NO EOS", "\n", "      ", "pass", "\n", "", "return", "sequence", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_calculators.MLELoss.__init__": [[38, 41], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ")", "->", "None", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_calculators.MLELoss.calc_loss": [[42, 48], ["model.calc_nll", "xnmt.losses.FactoredLossExpr"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.calc_nll"], ["", "def", "calc_loss", "(", "self", ",", "\n", "model", ":", "'model_base.ConditionedModel'", ",", "\n", "src", ":", "Union", "[", "sent", ".", "Sentence", ",", "'batchers.Batch'", "]", ",", "\n", "trg", ":", "Union", "[", "sent", ".", "Sentence", ",", "'batchers.Batch'", "]", ")", ":", "\n", "    ", "loss", "=", "model", ".", "calc_nll", "(", "src", ",", "trg", ")", "\n", "return", "FactoredLossExpr", "(", "{", "\"mle\"", ":", "loss", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_calculators.GlobalFertilityLoss.__init__": [[57, 60], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ")", "->", "None", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_calculators.GlobalFertilityLoss.calc_loss": [[61, 74], ["loss_calculators.GlobalFertilityLoss.global_fertility", "xnmt.losses.FactoredLossExpr", "hasattr", "hasattr", "trg.mask.np_arr.transpose", "dynet.cmult", "dynet.inputTensor", "zip"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_calculators.GlobalFertilityLoss.global_fertility"], ["", "def", "calc_loss", "(", "self", ",", "\n", "model", ":", "'model_base.ConditionedModel'", ",", "\n", "src", ":", "Union", "[", "sent", ".", "Sentence", ",", "'batchers.Batch'", "]", ",", "\n", "trg", ":", "Union", "[", "sent", ".", "Sentence", ",", "'batchers.Batch'", "]", ")", ":", "\n", "    ", "assert", "hasattr", "(", "model", ",", "\"attender\"", ")", "and", "hasattr", "(", "model", ".", "attender", ",", "\"attention_vecs\"", ")", ",", "\"Must be called after MLELoss with models that have attender.\"", "\n", "masked_attn", "=", "model", ".", "attender", ".", "attention_vecs", "\n", "if", "trg", ".", "mask", "is", "not", "None", ":", "\n", "      ", "trg_mask", "=", "1", "-", "(", "trg", ".", "mask", ".", "np_arr", ".", "transpose", "(", ")", ")", "\n", "masked_attn", "=", "[", "dy", ".", "cmult", "(", "attn", ",", "dy", ".", "inputTensor", "(", "mask", ",", "batched", "=", "True", ")", ")", "for", "attn", ",", "mask", "in", "zip", "(", "masked_attn", ",", "trg_mask", ")", "]", "\n", "\n", "", "loss", "=", "self", ".", "global_fertility", "(", "masked_attn", ")", "\n", "return", "FactoredLossExpr", "(", "{", "\"global_fertility\"", ":", "loss", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_calculators.GlobalFertilityLoss.global_fertility": [[75, 77], ["dynet.sum_elems", "dynet.square", "dynet.esum"], "methods", ["None"], ["", "def", "global_fertility", "(", "self", ",", "a", ")", ":", "\n", "    ", "return", "dy", ".", "sum_elems", "(", "dy", ".", "square", "(", "1", "-", "dy", ".", "esum", "(", "a", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_calculators.CompositeLoss.__init__": [[83, 91], ["len", "len", "range", "len"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "losses", ":", "List", "[", "LossCalculator", "]", ",", "loss_weight", "=", "None", ")", ":", "\n", "    ", "self", ".", "losses", "=", "losses", "\n", "if", "loss_weight", "is", "None", ":", "\n", "      ", "self", ".", "loss_weight", "=", "[", "1.0", "for", "_", "in", "range", "(", "len", "(", "losses", ")", ")", "]", "\n", "", "else", ":", "\n", "      ", "self", ".", "loss_weight", "=", "loss_weight", "\n", "", "assert", "len", "(", "self", ".", "loss_weight", ")", "==", "len", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_calculators.CompositeLoss.calc_loss": [[92, 100], ["xnmt.losses.FactoredLossExpr", "zip", "xnmt.losses.FactoredLossExpr.add_factored_loss_expr", "loss.calc_loss"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossExpr.add_factored_loss_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_encoder.DualEncoderSimilarity.calc_loss"], ["", "def", "calc_loss", "(", "self", ",", "\n", "model", ":", "'model_base.ConditionedModel'", ",", "\n", "src", ":", "Union", "[", "sent", ".", "Sentence", ",", "'batchers.Batch'", "]", ",", "\n", "trg", ":", "Union", "[", "sent", ".", "Sentence", ",", "'batchers.Batch'", "]", ")", ":", "\n", "    ", "total_loss", "=", "FactoredLossExpr", "(", ")", "\n", "for", "loss", ",", "weight", "in", "zip", "(", "self", ".", "losses", ",", "self", ".", "loss_weight", ")", ":", "\n", "      ", "total_loss", ".", "add_factored_loss_expr", "(", "loss", ".", "calc_loss", "(", "model", ",", "src", ",", "trg", ")", "*", "weight", ")", "\n", "", "return", "total_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_calculators.ReinforceLoss.__init__": [[111, 129], ["xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.persistence.Ref", "loss_calculators.ReinforceLoss.add_serializable_component", "xnmt.modelparts.transforms.Linear"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "baseline", "=", "None", ",", "\n", "evaluation_metric", ":", "metrics", ".", "SentenceLevelEvaluator", "=", "bare", "(", "metrics", ".", "FastBLEUEvaluator", ")", ",", "\n", "search_strategy", ":", "SearchStrategy", "=", "bare", "(", "SamplingSearch", ")", ",", "\n", "sample_length", ":", "numbers", ".", "Integral", "=", "50", ",", "\n", "use_baseline", ":", "bool", "=", "False", ",", "\n", "inv_eval", ":", "bool", "=", "True", ",", "\n", "decoder_hidden_dim", ":", "numbers", ".", "Integral", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ")", ":", "\n", "    ", "self", ".", "inv_eval", "=", "inv_eval", "\n", "self", ".", "search_strategy", "=", "search_strategy", "\n", "self", ".", "evaluation_metric", "=", "evaluation_metric", "\n", "\n", "if", "use_baseline", ":", "\n", "      ", "self", ".", "baseline", "=", "self", ".", "add_serializable_component", "(", "\"baseline\"", ",", "baseline", ",", "\n", "lambda", ":", "Linear", "(", "input_dim", "=", "decoder_hidden_dim", ",", "output_dim", "=", "1", ")", ")", "\n", "", "else", ":", "\n", "      ", "self", ".", "baseline", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_calculators.ReinforceLoss.calc_loss": [[130, 163], ["translator.generate_search_output", "xnmt.losses.FactoredLossExpr", "zip", "dynet.inputTensor", "xnmt.losses.FactoredLossExpr", "xnmt.losses.FactoredLossExpr.add_factored_loss_expr", "loss_calculators.ReinforceLoss.remove_eos", "loss_calculators.ReinforceLoss.evaluation_metric.evaluate_one_sent", "loss_calculators.ReinforceLoss.eval_score.append", "zip", "xnmt.losses.FactoredLossExpr.add_loss", "xnmt.losses.FactoredLossExpr.add_loss", "xnmt.losses.FactoredLossExpr.add_loss", "loss_calculators.ReinforceLoss.tolist", "loss_calculators.ReinforceLoss.baseline.transform", "baseline_loss.append", "dynet.cmult", "list", "losses.append", "dynet.sum_elems", "dynet.sum_elems", "dynet.sum_elems", "trg_i.len_unpadded", "dynet.squared_distance", "dynet.cmult", "dynet.esum", "dynet.esum", "dynet.cmult", "numpy.nonzero", "dynet.inputTensor", "dynet.esum"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.FactorTranslator.generate_search_output", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossExpr.add_factored_loss_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_calculators.LossCalculator.remove_eos", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.bow.BowFMeasureEvaluator.evaluate_one_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossExpr.add_loss", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossExpr.add_loss", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossExpr.add_loss", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.DenseWordEmbedder.transform", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.len_unpadded"], ["", "", "def", "calc_loss", "(", "self", ",", "translator", ",", "src", ",", "trg", ")", ":", "\n", "    ", "search_outputs", "=", "translator", ".", "generate_search_output", "(", "src", ",", "self", ".", "search_strategy", ")", "\n", "sign", "=", "-", "1", "if", "self", ".", "inv_eval", "else", "1", "\n", "\n", "total_loss", "=", "FactoredLossExpr", "(", ")", "\n", "for", "search_output", "in", "search_outputs", ":", "\n", "      ", "self", ".", "eval_score", "=", "[", "]", "\n", "for", "trg_i", ",", "sample_i", "in", "zip", "(", "trg", ",", "search_output", ".", "word_ids", ")", ":", "\n", "# Removing EOS", "\n", "        ", "sample_i", "=", "self", ".", "remove_eos", "(", "sample_i", ".", "tolist", "(", ")", ")", "\n", "ref_i", "=", "trg_i", ".", "words", "[", ":", "trg_i", ".", "len_unpadded", "(", ")", "]", "\n", "score", "=", "self", ".", "evaluation_metric", ".", "evaluate_one_sent", "(", "ref_i", ",", "sample_i", ")", "\n", "self", ".", "eval_score", ".", "append", "(", "sign", "*", "score", ")", "\n", "", "self", ".", "reward", "=", "dy", ".", "inputTensor", "(", "self", ".", "eval_score", ",", "batched", "=", "True", ")", "\n", "# Composing losses", "\n", "loss", "=", "FactoredLossExpr", "(", ")", "\n", "if", "self", ".", "baseline", "is", "not", "None", ":", "\n", "        ", "baseline_loss", "=", "[", "]", "\n", "losses", "=", "[", "]", "\n", "for", "state", ",", "logsoft", ",", "mask", "in", "zip", "(", "search_output", ".", "state", ",", "\n", "search_output", ".", "logsoftmaxes", ",", "\n", "search_output", ".", "mask", ")", ":", "\n", "          ", "bs_score", "=", "self", ".", "baseline", ".", "transform", "(", "state", ")", "\n", "baseline_loss", ".", "append", "(", "dy", ".", "squared_distance", "(", "self", ".", "reward", ",", "bs_score", ")", ")", "\n", "loss_i", "=", "dy", ".", "cmult", "(", "logsoft", ",", "self", ".", "reward", "-", "bs_score", ")", "\n", "valid", "=", "list", "(", "np", ".", "nonzero", "(", "mask", ")", "[", "0", "]", ")", "\n", "losses", ".", "append", "(", "dy", ".", "cmult", "(", "loss_i", ",", "dy", ".", "inputTensor", "(", "mask", ",", "batched", "=", "True", ")", ")", ")", "\n", "", "loss", ".", "add_loss", "(", "\"reinforce\"", ",", "dy", ".", "sum_elems", "(", "dy", ".", "esum", "(", "losses", ")", ")", ")", "\n", "loss", ".", "add_loss", "(", "\"reinf_baseline\"", ",", "dy", ".", "sum_elems", "(", "dy", ".", "esum", "(", "baseline_loss", ")", ")", ")", "\n", "", "else", ":", "\n", "        ", "loss", ".", "add_loss", "(", "\"reinforce\"", ",", "dy", ".", "sum_elems", "(", "dy", ".", "cmult", "(", "self", ".", "true_score", ",", "dy", ".", "esum", "(", "logsofts", ")", ")", ")", ")", "\n", "", "total_loss", ".", "add_factored_loss_expr", "(", "loss", ")", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_calculators.MinRiskLoss.__init__": [[167, 180], ["xnmt.persistence.bare", "xnmt.persistence.bare"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "evaluation_metric", "=", "bare", "(", "metrics", ".", "FastBLEUEvaluator", ")", ",", "\n", "alpha", "=", "0.005", ",", "\n", "inv_eval", "=", "True", ",", "\n", "unique_sample", "=", "True", ",", "\n", "search_strategy", "=", "bare", "(", "SamplingSearch", ")", ")", ":", "\n", "# Samples", "\n", "    ", "self", ".", "alpha", "=", "alpha", "\n", "self", ".", "evaluation_metric", "=", "evaluation_metric", "\n", "self", ".", "inv_eval", "=", "inv_eval", "\n", "self", ".", "unique_sample", "=", "unique_sample", "\n", "self", ".", "search_strategy", "=", "search_strategy", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_calculators.MinRiskLoss.calc_loss": [[181, 224], ["trg.batch_size", "translator.generate_search_output", "dynet.softmax", "dynet.concatenate", "dynet.sum_elems", "xnmt.losses.FactoredLossExpr", "set", "numpy.zeros", "numpy.zeros", "range", "dynet.concatenate.append", "probs.append", "dynet.concatenate", "dynet.cmult", "range", "dynet.esum", "loss_calculators.MinRiskLoss.remove_eos", "loss_calculators.MinRiskLoss.remove_eos", "dynet.inputTensor", "dynet.inputTensor", "sample[].tolist", "hash", "loss_calculators.MinRiskLoss.evaluation_metric.evaluate_one_sent", "tuple", "uniques[].add", "len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.batch_size", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.FactorTranslator.generate_search_output", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_calculators.LossCalculator.remove_eos", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_calculators.LossCalculator.remove_eos", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.bow.BowFMeasureEvaluator.evaluate_one_sent"], ["", "def", "calc_loss", "(", "self", ",", "translator", ",", "src", ",", "trg", ")", ":", "\n", "    ", "batch_size", "=", "trg", ".", "batch_size", "(", ")", "\n", "uniques", "=", "[", "set", "(", ")", "for", "_", "in", "range", "(", "batch_size", ")", "]", "\n", "deltas", "=", "[", "]", "\n", "probs", "=", "[", "]", "\n", "sign", "=", "-", "1", "if", "self", ".", "inv_eval", "else", "1", "\n", "search_outputs", "=", "translator", ".", "generate_search_output", "(", "src", ",", "self", ".", "search_strategy", ")", "\n", "for", "search_output", "in", "search_outputs", ":", "\n", "      ", "logprob", "=", "search_output", ".", "logsoftmaxes", "\n", "sample", "=", "search_output", ".", "word_ids", "\n", "attentions", "=", "search_output", ".", "attentions", "\n", "\n", "logprob", "=", "dy", ".", "esum", "(", "logprob", ")", "*", "self", ".", "alpha", "\n", "# Calculate the evaluation score", "\n", "eval_score", "=", "np", ".", "zeros", "(", "batch_size", ",", "dtype", "=", "float", ")", "\n", "mask", "=", "np", ".", "zeros", "(", "batch_size", ",", "dtype", "=", "float", ")", "\n", "for", "j", "in", "range", "(", "batch_size", ")", ":", "\n", "        ", "ref_j", "=", "self", ".", "remove_eos", "(", "trg", "[", "j", "]", ".", "words", ")", "\n", "hyp_j", "=", "self", ".", "remove_eos", "(", "sample", "[", "j", "]", ".", "tolist", "(", ")", ")", "\n", "if", "self", ".", "unique_sample", ":", "\n", "          ", "hash_val", "=", "hash", "(", "tuple", "(", "hyp_j", ")", ")", "\n", "if", "len", "(", "hyp_j", ")", "==", "0", "or", "hash_val", "in", "uniques", "[", "j", "]", ":", "\n", "            ", "mask", "[", "j", "]", "=", "-", "1e20", "# represents negative infinity", "\n", "continue", "\n", "", "else", ":", "\n", "            ", "uniques", "[", "j", "]", ".", "add", "(", "hash_val", ")", "\n", "# Calc evaluation score", "\n", "", "", "eval_score", "[", "j", "]", "=", "self", ".", "evaluation_metric", ".", "evaluate_one_sent", "(", "ref_j", ",", "hyp_j", ")", "*", "sign", "\n", "# Appending the delta and logprob of this sample", "\n", "", "prob", "=", "logprob", "+", "dy", ".", "inputTensor", "(", "mask", ",", "batched", "=", "True", ")", "\n", "deltas", ".", "append", "(", "dy", ".", "inputTensor", "(", "eval_score", ",", "batched", "=", "True", ")", ")", "\n", "probs", ".", "append", "(", "prob", ")", "\n", "", "sample_prob", "=", "dy", ".", "softmax", "(", "dy", ".", "concatenate", "(", "probs", ")", ")", "\n", "deltas", "=", "dy", ".", "concatenate", "(", "deltas", ")", "\n", "risk", "=", "dy", ".", "sum_elems", "(", "dy", ".", "cmult", "(", "sample_prob", ",", "deltas", ")", ")", "\n", "\n", "### Debug", "\n", "#print(sample_prob.npvalue().transpose()[0])", "\n", "#print(deltas.npvalue().transpose()[0])", "\n", "#print(\"----------------------\")", "\n", "### End debug", "\n", "\n", "return", "FactoredLossExpr", "(", "{", "\"risk\"", ":", "risk", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_calculators.FeedbackLoss.__init__": [[237, 243], ["xnmt.persistence.bare"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "child_loss", ":", "LossCalculator", "=", "bare", "(", "MLELoss", ")", ",", "\n", "repeat", ":", "numbers", ".", "Integral", "=", "1", ")", "->", "None", ":", "\n", "    ", "self", ".", "child_loss", "=", "child_loss", "\n", "self", ".", "repeat", "=", "repeat", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_calculators.FeedbackLoss.calc_loss": [[244, 255], ["xnmt.losses.FactoredLossExpr", "range", "loss_calculators.FeedbackLoss.child_loss.calc_loss", "xnmt.event_trigger.calc_additional_loss", "xnmt.losses.FactoredLossExpr.add_factored_loss_expr", "xnmt.losses.FactoredLossExpr.add_factored_loss_expr"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_encoder.DualEncoderSimilarity.calc_loss", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.calc_additional_loss", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossExpr.add_factored_loss_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossExpr.add_factored_loss_expr"], ["", "def", "calc_loss", "(", "self", ",", "\n", "model", ":", "'model_base.ConditionedModel'", ",", "\n", "src", ":", "Union", "[", "sent", ".", "Sentence", ",", "'batcher.Batch'", "]", ",", "\n", "trg", ":", "Union", "[", "sent", ".", "Sentence", ",", "'batcher.Batch'", "]", ")", ":", "\n", "    ", "loss_builder", "=", "FactoredLossExpr", "(", ")", "\n", "for", "_", "in", "range", "(", "self", ".", "repeat", ")", ":", "\n", "      ", "standard_loss", "=", "self", ".", "child_loss", ".", "calc_loss", "(", "model", ",", "src", ",", "trg", ")", "\n", "additional_loss", "=", "event_trigger", ".", "calc_additional_loss", "(", "trg", ",", "model", ",", "standard_loss", ")", "\n", "loss_builder", ".", "add_factored_loss_expr", "(", "standard_loss", ")", "\n", "loss_builder", ".", "add_factored_loss_expr", "(", "additional_loss", ")", "\n", "", "return", "loss_builder", "\n", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.transformer.TimeDistributed.__call__": [[14, 18], ["input.dim", "dynet.reshape"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["  ", "def", "__call__", "(", "self", ",", "input", ")", ":", "\n", "    ", "(", "model_dim", ",", "seq_len", ")", ",", "batch_size", "=", "input", ".", "dim", "(", ")", "\n", "total_words", "=", "seq_len", "*", "batch_size", "\n", "return", "dy", ".", "reshape", "(", "input", ",", "(", "model_dim", ",", ")", ",", "batch_size", "=", "total_words", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.transformer.ReverseTimeDistributed.__call__": [[21, 25], ["input.dim", "dynet.reshape"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["  ", "def", "__call__", "(", "self", ",", "input", ",", "seq_len", ",", "batch_size", ")", ":", "\n", "    ", "(", "model_dim", ",", ")", ",", "total_words", "=", "input", ".", "dim", "(", ")", "\n", "assert", "(", "seq_len", "*", "batch_size", "==", "total_words", ")", "\n", "return", "dy", ".", "reshape", "(", "input", ",", "(", "model_dim", ",", "seq_len", ")", ",", "batch_size", "=", "batch_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.transformer.LinearSent.__init__": [[28, 30], ["xnmt.modelparts.transforms.Linear", "xnmt.param_initializers.LeCunUniformInitializer", "xnmt.param_initializers.LeCunUniformInitializer"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "dy_model", ",", "input_dim", ",", "output_dim", ")", ":", "\n", "    ", "self", ".", "L", "=", "Linear", "(", "input_dim", ",", "output_dim", ",", "dy_model", ",", "param_init", "=", "LeCunUniformInitializer", "(", ")", ",", "bias_init", "=", "LeCunUniformInitializer", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.transformer.LinearSent.__call__": [[31, 42], ["transformer.LinearSent.L", "input_expr.dim", "transformer.ReverseTimeDistributed", "transformer.TimeDistributed"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["", "def", "__call__", "(", "self", ",", "input_expr", ",", "reconstruct_shape", "=", "True", ",", "timedistributed", "=", "False", ")", ":", "\n", "    ", "if", "not", "timedistributed", ":", "\n", "        ", "input", "=", "TimeDistributed", "(", ")", "(", "input_expr", ")", "\n", "", "else", ":", "\n", "        ", "input", "=", "input_expr", "\n", "\n", "", "output", "=", "self", ".", "L", "(", "input", ")", "\n", "if", "not", "reconstruct_shape", ":", "\n", "        ", "return", "output", "\n", "", "(", "_", ",", "seq_len", ")", ",", "batch_size", "=", "input_expr", ".", "dim", "(", ")", "\n", "return", "ReverseTimeDistributed", "(", ")", "(", "output", ",", "seq_len", ",", "batch_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.transformer.LinearNoBiasSent.__init__": [[45, 48], ["xnmt.modelparts.transforms.Linear", "xnmt.param_initializers.LeCunUniformInitializer", "xnmt.param_initializers.LeCunUniformInitializer"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "dy_model", ",", "input_dim", ",", "output_dim", ")", ":", "\n", "    ", "self", ".", "L", "=", "Linear", "(", "input_dim", ",", "output_dim", ",", "dy_model", ",", "bias", "=", "False", ",", "param_init", "=", "LeCunUniformInitializer", "(", ")", ",", "bias_init", "=", "LeCunUniformInitializer", "(", ")", ")", "\n", "self", ".", "output_dim", "=", "output_dim", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.transformer.LinearNoBiasSent.__call__": [[49, 56], ["input_expr.dim", "transformer.LinearNoBiasSent.L", "transformer.ReverseTimeDistributed"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["", "def", "__call__", "(", "self", ",", "input_expr", ")", ":", "\n", "    ", "(", "_", ",", "seq_len", ")", ",", "batch_size", "=", "input_expr", ".", "dim", "(", ")", "\n", "output", "=", "self", ".", "L", "(", "input_expr", ")", "\n", "\n", "if", "seq_len", "==", "1", ":", "# This is helpful when sequence length is 1, especially during decoding", "\n", "        ", "output", "=", "ReverseTimeDistributed", "(", ")", "(", "output", ",", "seq_len", ",", "batch_size", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.transformer.LayerNorm.__init__": [[59, 62], ["dy_model.add_parameters", "dy_model.add_parameters"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "dy_model", ",", "d_hid", ")", ":", "\n", "    ", "self", ".", "p_g", "=", "dy_model", ".", "add_parameters", "(", "dim", "=", "d_hid", ")", "\n", "self", ".", "p_b", "=", "dy_model", ".", "add_parameters", "(", "dim", "=", "d_hid", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.transformer.LayerNorm.__call__": [[63, 71], ["dynet.parameter", "dynet.parameter", "input_expr.dim", "dynet.layer_norm", "transformer.TimeDistributed", "transformer.ReverseTimeDistributed"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["", "def", "__call__", "(", "self", ",", "input_expr", ")", ":", "\n", "    ", "g", "=", "dy", ".", "parameter", "(", "self", ".", "p_g", ")", "\n", "b", "=", "dy", ".", "parameter", "(", "self", ".", "p_b", ")", "\n", "\n", "(", "_", ",", "seq_len", ")", ",", "batch_size", "=", "input_expr", ".", "dim", "(", ")", "\n", "input", "=", "TimeDistributed", "(", ")", "(", "input_expr", ")", "\n", "output", "=", "dy", ".", "layer_norm", "(", "input", ",", "g", ",", "b", ")", "\n", "return", "ReverseTimeDistributed", "(", ")", "(", "output", ",", "seq_len", ",", "batch_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.transformer.MultiHeadAttention.__init__": [[76, 84], ["transformer.LinearNoBiasSent", "transformer.LinearNoBiasSent", "transformer.LinearNoBiasSent", "transformer.LinearNoBiasSent"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "dy_model", ",", "n_units", ",", "h", "=", "1", ",", "attn_dropout", "=", "False", ")", ":", "\n", "    ", "self", ".", "W_Q", "=", "LinearNoBiasSent", "(", "dy_model", ",", "n_units", ",", "n_units", ")", "\n", "self", ".", "W_K", "=", "LinearNoBiasSent", "(", "dy_model", ",", "n_units", ",", "n_units", ")", "\n", "self", ".", "W_V", "=", "LinearNoBiasSent", "(", "dy_model", ",", "n_units", ",", "n_units", ")", "\n", "self", ".", "finishing_linear_layer", "=", "LinearNoBiasSent", "(", "dy_model", ",", "n_units", ",", "n_units", ")", "\n", "self", ".", "h", "=", "h", "\n", "self", ".", "scale_score", "=", "1.", "/", "(", "n_units", "/", "h", ")", "**", "0.5", "\n", "self", ".", "attn_dropout", "=", "attn_dropout", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.transformer.MultiHeadAttention.split_rows": [[85, 93], ["X.dim", "range", "range", "output.append", "dynet.pickrange"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "def", "split_rows", "(", "self", ",", "X", ",", "h", ")", ":", "\n", "    ", "(", "n_rows", ",", "_", ")", ",", "batch", "=", "X", ".", "dim", "(", ")", "\n", "l", "=", "range", "(", "n_rows", ")", "\n", "steps", "=", "n_rows", "//", "h", "\n", "output", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "n_rows", ",", "steps", ")", ":", "\n", "      ", "output", ".", "append", "(", "dy", ".", "pickrange", "(", "X", ",", "i", ",", "i", "+", "steps", ")", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.transformer.MultiHeadAttention.split_batch": [[94, 103], ["X.dim", "range", "range", "output.append", "dynet.pick_batch_elems"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "def", "split_batch", "(", "self", ",", "X", ",", "h", ")", ":", "\n", "    ", "(", "n_rows", ",", "_", ")", ",", "batch", "=", "X", ".", "dim", "(", ")", "\n", "l", "=", "range", "(", "batch", ")", "\n", "steps", "=", "batch", "//", "h", "\n", "output", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "batch", ",", "steps", ")", ":", "\n", "      ", "indexes", "=", "l", "[", "i", ":", "i", "+", "steps", "]", "\n", "output", ".", "append", "(", "dy", ".", "pick_batch_elems", "(", "X", ",", "indexes", ")", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.transformer.MultiHeadAttention.set_dropout": [[104, 106], ["None"], "methods", ["None"], ["", "def", "set_dropout", "(", "self", ",", "dropout", ")", ":", "\n", "    ", "self", ".", "dropout", "=", "dropout", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.transformer.MultiHeadAttention.__call__": [[107, 155], ["transformer.MultiHeadAttention.dim", "transformer.MultiHeadAttention.dim", "dynet.concatenate_to_batch", "dynet.concatenate_to_batch", "dynet.concatenate_to_batch", "numpy.concatenate", "numpy.moveaxis", "dynet.inputTensor", "dynet.cmult", "dynet.transpose", "dynet.concatenate", "transformer.MultiHeadAttention.finishing_linear_layer", "transformer.MultiHeadAttention.W_Q", "transformer.MultiHeadAttention.W_K", "transformer.MultiHeadAttention.W_V", "transformer.MultiHeadAttention.W_Q", "transformer.MultiHeadAttention.W_K", "transformer.MultiHeadAttention.W_V", "transformer.MultiHeadAttention.split_rows", "transformer.MultiHeadAttention.split_rows", "transformer.MultiHeadAttention.split_rows", "dynet.cmult", "dynet.softmax", "dynet.softmax", "dynet.dropout.dim", "dynet.transpose.dim", "transformer.MultiHeadAttention.split_batch", "transformer.MultiHeadAttention.dim", "dynet.concatenate_to_batch.dim", "dynet.concatenate_to_batch.dim", "dynet.concatenate_to_batch.dim", "dynet.transpose", "dynet.dropout.dim", "dynet.dropout", "dynet.transpose"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.transformer.MultiHeadAttention.split_rows", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.transformer.MultiHeadAttention.split_rows", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.transformer.MultiHeadAttention.split_rows", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.transformer.MultiHeadAttention.split_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["", "def", "__call__", "(", "self", ",", "x", ",", "z", "=", "None", ",", "mask", "=", "None", ")", ":", "\n", "    ", "h", "=", "self", ".", "h", "\n", "if", "z", "is", "None", ":", "\n", "      ", "Q", "=", "self", ".", "W_Q", "(", "x", ")", "\n", "K", "=", "self", ".", "W_K", "(", "x", ")", "\n", "V", "=", "self", ".", "W_V", "(", "x", ")", "\n", "", "else", ":", "\n", "      ", "Q", "=", "self", ".", "W_Q", "(", "x", ")", "\n", "K", "=", "self", ".", "W_K", "(", "z", ")", "\n", "V", "=", "self", ".", "W_V", "(", "z", ")", "\n", "\n", "", "(", "n_units", ",", "n_querys", ")", ",", "batch", "=", "Q", ".", "dim", "(", ")", "\n", "(", "_", ",", "n_keys", ")", ",", "_", "=", "K", ".", "dim", "(", ")", "\n", "\n", "batch_Q", "=", "dy", ".", "concatenate_to_batch", "(", "self", ".", "split_rows", "(", "Q", ",", "h", ")", ")", "\n", "batch_K", "=", "dy", ".", "concatenate_to_batch", "(", "self", ".", "split_rows", "(", "K", ",", "h", ")", ")", "\n", "batch_V", "=", "dy", ".", "concatenate_to_batch", "(", "self", ".", "split_rows", "(", "V", ",", "h", ")", ")", "\n", "\n", "assert", "(", "batch_Q", ".", "dim", "(", ")", "==", "(", "n_units", "//", "h", ",", "n_querys", ")", ",", "batch", "*", "h", ")", "\n", "assert", "(", "batch_K", ".", "dim", "(", ")", "==", "(", "n_units", "//", "h", ",", "n_keys", ")", ",", "batch", "*", "h", ")", "\n", "assert", "(", "batch_V", ".", "dim", "(", ")", "==", "(", "n_units", "//", "h", ",", "n_keys", ")", ",", "batch", "*", "h", ")", "\n", "\n", "mask", "=", "np", ".", "concatenate", "(", "[", "mask", "]", "*", "h", ",", "axis", "=", "0", ")", "\n", "mask", "=", "np", ".", "moveaxis", "(", "mask", ",", "[", "1", ",", "0", ",", "2", "]", ",", "[", "0", ",", "2", ",", "1", "]", ")", "\n", "mask", "=", "dy", ".", "inputTensor", "(", "mask", ",", "batched", "=", "True", ")", "\n", "batch_A", "=", "(", "dy", ".", "transpose", "(", "batch_Q", ")", "*", "batch_K", ")", "*", "self", ".", "scale_score", "\n", "batch_A", "=", "dy", ".", "cmult", "(", "batch_A", ",", "mask", ")", "+", "(", "1", "-", "mask", ")", "*", "MIN_VALUE", "\n", "\n", "sent_len", "=", "batch_A", ".", "dim", "(", ")", "[", "0", "]", "[", "0", "]", "\n", "if", "sent_len", "==", "1", ":", "\n", "        ", "batch_A", "=", "dy", ".", "softmax", "(", "batch_A", ")", "\n", "", "else", ":", "\n", "        ", "batch_A", "=", "dy", ".", "softmax", "(", "batch_A", ",", "d", "=", "1", ")", "\n", "\n", "", "batch_A", "=", "dy", ".", "cmult", "(", "batch_A", ",", "mask", ")", "\n", "assert", "(", "batch_A", ".", "dim", "(", ")", "==", "(", "(", "n_querys", ",", "n_keys", ")", ",", "batch", "*", "h", ")", ")", "\n", "\n", "if", "self", ".", "attn_dropout", ":", "\n", "      ", "if", "self", ".", "dropout", "!=", "0.0", ":", "\n", "        ", "batch_A", "=", "dy", ".", "dropout", "(", "batch_A", ",", "self", ".", "dropout", ")", "\n", "\n", "", "", "batch_C", "=", "dy", ".", "transpose", "(", "batch_A", "*", "dy", ".", "transpose", "(", "batch_V", ")", ")", "\n", "assert", "(", "batch_C", ".", "dim", "(", ")", "==", "(", "(", "n_units", "//", "h", ",", "n_querys", ")", ",", "batch", "*", "h", ")", ")", "\n", "\n", "C", "=", "dy", ".", "concatenate", "(", "self", ".", "split_batch", "(", "batch_C", ",", "h", ")", ",", "d", "=", "0", ")", "\n", "assert", "(", "C", ".", "dim", "(", ")", "==", "(", "(", "n_units", ",", "n_querys", ")", ",", "batch", ")", ")", "\n", "C", "=", "self", ".", "finishing_linear_layer", "(", "C", ")", "\n", "return", "C", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.transformer.FeedForwardLayerSent.__init__": [[158, 163], ["transformer.LinearSent", "transformer.LinearSent"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "dy_model", ",", "n_units", ")", ":", "\n", "    ", "n_inner_units", "=", "n_units", "*", "4", "\n", "self", ".", "W_1", "=", "LinearSent", "(", "dy_model", ",", "n_units", ",", "n_inner_units", ")", "\n", "self", ".", "W_2", "=", "LinearSent", "(", "dy_model", ",", "n_inner_units", ",", "n_units", ")", "\n", "self", ".", "act", "=", "dy", ".", "rectify", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.transformer.FeedForwardLayerSent.__call__": [[164, 169], ["transformer.FeedForwardLayerSent.W_1", "transformer.FeedForwardLayerSent.act", "transformer.FeedForwardLayerSent.W_2"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "e", ")", ":", "\n", "    ", "e", "=", "self", ".", "W_1", "(", "e", ",", "reconstruct_shape", "=", "False", ",", "timedistributed", "=", "True", ")", "\n", "e", "=", "self", ".", "act", "(", "e", ")", "\n", "e", "=", "self", ".", "W_2", "(", "e", ",", "reconstruct_shape", "=", "False", ",", "timedistributed", "=", "True", ")", "\n", "return", "e", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.transformer.EncoderLayer.__init__": [[172, 179], ["transformer.MultiHeadAttention", "transformer.FeedForwardLayerSent", "transformer.LayerNorm", "transformer.LayerNorm"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "dy_model", ",", "n_units", ",", "h", "=", "1", ",", "attn_dropout", "=", "False", ",", "layer_norm", "=", "False", ")", ":", "\n", "    ", "self", ".", "self_attention", "=", "MultiHeadAttention", "(", "dy_model", ",", "n_units", ",", "h", ",", "attn_dropout", "=", "attn_dropout", ")", "\n", "self", ".", "feed_forward", "=", "FeedForwardLayerSent", "(", "dy_model", ",", "n_units", ")", "\n", "self", ".", "layer_norm", "=", "layer_norm", "\n", "if", "self", ".", "layer_norm", ":", "\n", "      ", "self", ".", "ln_1", "=", "LayerNorm", "(", "dy_model", ",", "n_units", ")", "\n", "self", ".", "ln_2", "=", "LayerNorm", "(", "dy_model", ",", "n_units", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.transformer.EncoderLayer.set_dropout": [[180, 182], ["None"], "methods", ["None"], ["", "", "def", "set_dropout", "(", "self", ",", "dropout", ")", ":", "\n", "    ", "self", ".", "dropout", "=", "dropout", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.transformer.EncoderLayer.__call__": [[183, 199], ["transformer.EncoderLayer.self_attention.set_dropout", "transformer.EncoderLayer.self_attention", "transformer.EncoderLayer.feed_forward", "dynet.dropout", "transformer.EncoderLayer.ln_1.transform", "dynet.dropout", "transformer.EncoderLayer.ln_2.transform"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.self_attentional_am.TransformerEncoderLayer.set_dropout", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.DenseWordEmbedder.transform", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.DenseWordEmbedder.transform"], ["", "def", "__call__", "(", "self", ",", "e", ",", "xx_mask", ")", ":", "\n", "    ", "self", ".", "self_attention", ".", "set_dropout", "(", "self", ".", "dropout", ")", "\n", "sub", "=", "self", ".", "self_attention", "(", "e", ",", "mask", "=", "xx_mask", ")", "\n", "if", "self", ".", "dropout", "!=", "0.0", ":", "\n", "      ", "sub", "=", "dy", ".", "dropout", "(", "sub", ",", "self", ".", "dropout", ")", "\n", "", "e", "=", "e", "+", "sub", "\n", "if", "self", ".", "layer_norm", ":", "\n", "      ", "e", "=", "self", ".", "ln_1", ".", "transform", "(", "e", ")", "\n", "\n", "", "sub", "=", "self", ".", "feed_forward", "(", "e", ")", "\n", "if", "self", ".", "dropout", "!=", "0.0", ":", "\n", "      ", "sub", "=", "dy", ".", "dropout", "(", "sub", ",", "self", ".", "dropout", ")", "\n", "", "e", "=", "e", "+", "sub", "\n", "if", "self", ".", "layer_norm", ":", "\n", "      ", "e", "=", "self", ".", "ln_2", ".", "transform", "(", "e", ")", "\n", "", "return", "e", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.transformer.DecoderLayer.__init__": [[202, 211], ["transformer.MultiHeadAttention", "transformer.MultiHeadAttention", "transformer.FeedForwardLayerSent", "transformer.LayerNorm", "transformer.LayerNorm", "transformer.LayerNorm"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "dy_model", ",", "n_units", ",", "h", "=", "1", ",", "attn_dropout", "=", "False", ",", "layer_norm", "=", "False", ")", ":", "\n", "    ", "self", ".", "self_attention", "=", "MultiHeadAttention", "(", "dy_model", ",", "n_units", ",", "h", ",", "attn_dropout", "=", "attn_dropout", ")", "\n", "self", ".", "source_attention", "=", "MultiHeadAttention", "(", "dy_model", ",", "n_units", ",", "h", ",", "attn_dropout", "=", "attn_dropout", ")", "\n", "self", ".", "feed_forward", "=", "FeedForwardLayerSent", "(", "dy_model", ",", "n_units", ")", "\n", "self", ".", "layer_norm", "=", "layer_norm", "\n", "if", "self", ".", "layer_norm", ":", "\n", "      ", "self", ".", "ln_1", "=", "LayerNorm", "(", "dy_model", ",", "n_units", ")", "\n", "self", ".", "ln_2", "=", "LayerNorm", "(", "dy_model", ",", "n_units", ")", "\n", "self", ".", "ln_3", "=", "LayerNorm", "(", "dy_model", ",", "n_units", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.transformer.DecoderLayer.set_dropout": [[212, 214], ["None"], "methods", ["None"], ["", "", "def", "set_dropout", "(", "self", ",", "dropout", ")", ":", "\n", "    ", "self", ".", "dropout", "=", "dropout", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.transformer.DecoderLayer.__call__": [[215, 239], ["transformer.DecoderLayer.self_attention.set_dropout", "transformer.DecoderLayer.self_attention", "transformer.DecoderLayer.source_attention.set_dropout", "transformer.DecoderLayer.source_attention", "transformer.DecoderLayer.feed_forward", "dynet.dropout", "transformer.DecoderLayer.ln_1.transform", "dynet.dropout", "transformer.DecoderLayer.ln_2.transform", "dynet.dropout", "transformer.DecoderLayer.ln_3.transform"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.self_attentional_am.TransformerEncoderLayer.set_dropout", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.self_attentional_am.TransformerEncoderLayer.set_dropout", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.DenseWordEmbedder.transform", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.DenseWordEmbedder.transform", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.DenseWordEmbedder.transform"], ["", "def", "__call__", "(", "self", ",", "e", ",", "s", ",", "xy_mask", ",", "yy_mask", ")", ":", "\n", "    ", "self", ".", "self_attention", ".", "set_dropout", "(", "self", ".", "dropout", ")", "\n", "sub", "=", "self", ".", "self_attention", "(", "e", ",", "mask", "=", "yy_mask", ")", "\n", "if", "self", ".", "dropout", "!=", "0.0", ":", "\n", "      ", "sub", "=", "dy", ".", "dropout", "(", "sub", ",", "self", ".", "dropout", ")", "\n", "", "e", "=", "e", "+", "sub", "\n", "if", "self", ".", "layer_norm", ":", "\n", "      ", "e", "=", "self", ".", "ln_1", ".", "transform", "(", "e", ")", "\n", "\n", "", "self", ".", "source_attention", ".", "set_dropout", "(", "self", ".", "dropout", ")", "\n", "sub", "=", "self", ".", "source_attention", "(", "e", ",", "s", ",", "mask", "=", "xy_mask", ")", "\n", "if", "self", ".", "dropout", "!=", "0.0", ":", "\n", "      ", "sub", "=", "dy", ".", "dropout", "(", "sub", ",", "self", ".", "dropout", ")", "\n", "", "e", "=", "e", "+", "sub", "\n", "if", "self", ".", "layer_norm", ":", "\n", "      ", "e", "=", "self", ".", "ln_2", ".", "transform", "(", "e", ")", "\n", "\n", "", "sub", "=", "self", ".", "feed_forward", "(", "e", ")", "\n", "if", "self", ".", "dropout", "!=", "0.0", ":", "\n", "      ", "sub", "=", "dy", ".", "dropout", "(", "sub", ",", "self", ".", "dropout", ")", "\n", "", "e", "=", "e", "+", "sub", "\n", "if", "self", ".", "layer_norm", ":", "\n", "      ", "e", "=", "self", ".", "ln_3", ".", "transform", "(", "e", ")", "\n", "", "return", "e", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.transformer.TransformerEncoder.__init__": [[244, 256], ["xnmt.param_collections.ParamManager.my_params", "range", "transformer.EncoderLayer", "transformer.TransformerEncoder.layer_names.append"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.my_params", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["@", "register_xnmt_handler", "\n", "@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "layers", "=", "1", ",", "input_dim", "=", "512", ",", "h", "=", "1", ",", "\n", "dropout", "=", "0.0", ",", "attn_dropout", "=", "False", ",", "layer_norm", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "dy_model", "=", "ParamManager", ".", "my_params", "(", "self", ")", "\n", "self", ".", "layer_names", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "layers", "+", "1", ")", ":", "\n", "      ", "name", "=", "'l{}'", ".", "format", "(", "i", ")", "\n", "layer", "=", "EncoderLayer", "(", "dy_model", ",", "input_dim", ",", "h", ",", "attn_dropout", ",", "layer_norm", ")", "\n", "self", ".", "layer_names", ".", "append", "(", "(", "name", ",", "layer", ")", ")", "\n", "\n", "", "self", ".", "dropout_val", "=", "dropout", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.transformer.TransformerEncoder.on_set_train": [[257, 260], ["transformer.TransformerEncoder.set_dropout"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.self_attentional_am.TransformerEncoderLayer.set_dropout"], ["", "@", "handle_xnmt_event", "\n", "def", "on_set_train", "(", "self", ",", "val", ")", ":", "\n", "    ", "self", ".", "set_dropout", "(", "self", ".", "dropout_val", "if", "val", "else", "0.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.transformer.TransformerEncoder.set_dropout": [[261, 263], ["None"], "methods", ["None"], ["", "def", "set_dropout", "(", "self", ",", "dropout", ")", ":", "\n", "    ", "self", ".", "dropout", "=", "dropout", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.transformer.TransformerEncoder.__call__": [[264, 272], ["dynet.dropout", "layer.set_dropout", "layer"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.self_attentional_am.TransformerEncoderLayer.set_dropout"], ["", "def", "__call__", "(", "self", ",", "e", ",", "xx_mask", ")", ":", "\n", "    ", "if", "self", ".", "dropout", "!=", "0.0", ":", "\n", "      ", "e", "=", "dy", ".", "dropout", "(", "e", ",", "self", ".", "dropout", ")", "# Word Embedding Dropout", "\n", "\n", "", "for", "name", ",", "layer", "in", "self", ".", "layer_names", ":", "\n", "      ", "layer", ".", "set_dropout", "(", "self", ".", "dropout", ")", "\n", "e", "=", "layer", "(", "e", ",", "xx_mask", ")", "\n", "", "return", "e", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.transformer.TransformerDecoder.__init__": [[277, 293], ["xnmt.persistence.Ref", "xnmt.param_collections.ParamManager.my_params", "range", "transformer.TransformerDecoder.choose_vocab_size", "transformer.LinearSent", "transformer.DecoderLayer", "transformer.TransformerDecoder.layer_names.append"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.my_params", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.Embedder.choose_vocab_size", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["@", "register_xnmt_handler", "\n", "@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "layers", "=", "1", ",", "input_dim", "=", "512", ",", "h", "=", "1", ",", "\n", "dropout", "=", "0.0", ",", "attn_dropout", "=", "False", ",", "layer_norm", "=", "False", ",", "\n", "vocab_size", "=", "None", ",", "vocab", "=", "None", ",", "\n", "trg_reader", "=", "Ref", "(", "\"model.trg_reader\"", ")", ")", ":", "\n", "    ", "dy_model", "=", "ParamManager", ".", "my_params", "(", "self", ")", "\n", "self", ".", "layer_names", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "layers", "+", "1", ")", ":", "\n", "      ", "name", "=", "'l{}'", ".", "format", "(", "i", ")", "\n", "layer", "=", "DecoderLayer", "(", "dy_model", ",", "input_dim", ",", "h", ",", "attn_dropout", ",", "layer_norm", ")", "\n", "self", ".", "layer_names", ".", "append", "(", "(", "name", ",", "layer", ")", ")", "\n", "\n", "", "self", ".", "vocab_size", "=", "self", ".", "choose_vocab_size", "(", "vocab_size", ",", "vocab", ",", "trg_reader", ")", "\n", "self", ".", "output_affine", "=", "LinearSent", "(", "dy_model", ",", "input_dim", ",", "self", ".", "vocab_size", ")", "\n", "self", ".", "dropout_val", "=", "dropout", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.transformer.TransformerDecoder.choose_vocab_size": [[294, 307], ["len", "ValueError", "len"], "methods", ["None"], ["", "def", "choose_vocab_size", "(", "self", ",", "vocab_size", ",", "vocab", ",", "trg_reader", ")", ":", "\n", "    ", "\"\"\"Choose the vocab size for the embedder basd on the passed arguments\n\n    This is done in order of priority of vocab_size, vocab, model+yaml_path\n    \"\"\"", "\n", "if", "vocab_size", "is", "not", "None", ":", "\n", "      ", "return", "vocab_size", "\n", "", "elif", "vocab", "is", "not", "None", ":", "\n", "      ", "return", "len", "(", "vocab", ")", "\n", "", "elif", "trg_reader", "is", "None", "or", "trg_reader", ".", "vocab", "is", "None", ":", "\n", "      ", "raise", "ValueError", "(", "\"Could not determine trg_embedder's size. Please set its vocab_size or vocab member explicitly, or specify the vocabulary of trg_reader ahead of time.\"", ")", "\n", "", "else", ":", "\n", "      ", "return", "len", "(", "trg_reader", ".", "vocab", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.transformer.TransformerDecoder.on_set_train": [[308, 311], ["transformer.TransformerDecoder.set_dropout"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.self_attentional_am.TransformerEncoderLayer.set_dropout"], ["", "", "@", "handle_xnmt_event", "\n", "def", "on_set_train", "(", "self", ",", "val", ")", ":", "\n", "    ", "self", ".", "set_dropout", "(", "self", ".", "dropout_val", "if", "val", "else", "0.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.transformer.TransformerDecoder.set_dropout": [[312, 314], ["None"], "methods", ["None"], ["", "def", "set_dropout", "(", "self", ",", "dropout", ")", ":", "\n", "    ", "self", ".", "dropout", "=", "dropout", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.transformer.TransformerDecoder.__call__": [[315, 322], ["dynet.dropout", "layer.set_dropout", "layer"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.self_attentional_am.TransformerEncoderLayer.set_dropout"], ["", "def", "__call__", "(", "self", ",", "e", ",", "source", ",", "xy_mask", ",", "yy_mask", ")", ":", "\n", "    ", "if", "self", ".", "dropout", "!=", "0.0", ":", "\n", "      ", "e", "=", "dy", ".", "dropout", "(", "e", ",", "self", ".", "dropout", ")", "# Word Embedding Dropout", "\n", "", "for", "name", ",", "layer", "in", "self", ".", "layer_names", ":", "\n", "      ", "layer", ".", "set_dropout", "(", "self", ".", "dropout", ")", "\n", "e", "=", "layer", "(", "e", ",", "source", ",", "xy_mask", ",", "yy_mask", ")", "\n", "", "return", "e", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.transformer.TransformerDecoder.output_and_loss": [[323, 331], ["transformer.TransformerDecoder.output_affine", "numpy.argwhere().ravel", "dynet.pick_batch_elems", "dynet.pickneglogsoftmax_batch", "numpy.argwhere"], "methods", ["None"], ["", "def", "output_and_loss", "(", "self", ",", "h_block", ",", "concat_t_block", ")", ":", "\n", "    ", "concat_logit_block", "=", "self", ".", "output_affine", "(", "h_block", ",", "reconstruct_shape", "=", "False", ")", "\n", "bool_array", "=", "concat_t_block", "!=", "0", "\n", "indexes", "=", "np", ".", "argwhere", "(", "bool_array", ")", ".", "ravel", "(", ")", "\n", "concat_logit_block", "=", "dy", ".", "pick_batch_elems", "(", "concat_logit_block", ",", "indexes", ")", "\n", "concat_t_block", "=", "concat_t_block", "[", "bool_array", "]", "\n", "loss", "=", "dy", ".", "pickneglogsoftmax_batch", "(", "concat_logit_block", ",", "concat_t_block", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.transformer.TransformerDecoder.output": [[332, 335], ["transformer.TransformerDecoder.output_affine"], "methods", ["None"], ["", "def", "output", "(", "self", ",", "h_block", ")", ":", "\n", "    ", "concat_logit_block", "=", "self", ".", "output_affine", "(", "h_block", ",", "reconstruct_shape", "=", "False", ",", "timedistributed", "=", "True", ")", "\n", "return", "concat_logit_block", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.xnmt_evaluate.read_data": [[9, 20], ["list", "open", "line.strip", "list.append", "post_process"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["def", "read_data", "(", "loc_", ",", "post_process", "=", "None", ")", ":", "\n", "  ", "\"\"\"Reads the lines in the file specified in loc_ and return the list after inserting the tokens\n  \"\"\"", "\n", "data", "=", "list", "(", ")", "\n", "with", "open", "(", "loc_", ",", "encoding", "=", "'utf-8'", ")", "as", "fp", ":", "\n", "    ", "for", "line", "in", "fp", ":", "\n", "      ", "t", "=", "line", ".", "strip", "(", ")", "\n", "if", "post_process", "is", "not", "None", ":", "\n", "        ", "t", "=", "post_process", "(", "t", ")", "\n", "", "data", ".", "append", "(", "t", ")", "\n", "", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.xnmt_evaluate.xnmt_evaluate": [[32, 64], ["isinstance", "xnmt_evaluate.read_data", "len", "zip", "line.split", "line.split", "xnmt_evaluate.read_data", "len", "logger.info", "len", "xnmt_evaluate.read_data", "filter", "evaluator.evaluate_multi_ref", "evaluator.evaluate", "xnmt_evaluate.read_data", "tuple", "zip", "range", "len", "len", "range", "len"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.xnmt_evaluate.read_data", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.xnmt_evaluate.read_data", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.xnmt_evaluate.read_data", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.ErrorOnlyFilter.filter", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.BLEUEvaluator.evaluate_multi_ref", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.RecallEvaluator.evaluate", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.xnmt_evaluate.read_data"], ["def", "xnmt_evaluate", "(", "ref_file", ":", "Union", "[", "str", ",", "Sequence", "[", "str", "]", "]", ",", "hyp_file", ":", "Union", "[", "str", ",", "Sequence", "[", "str", "]", "]", ",", "\n", "evaluators", ":", "Sequence", "[", "metrics", ".", "Evaluator", "]", ",", "desc", ":", "Any", "=", "None", ")", "->", "Sequence", "[", "metrics", ".", "EvalScore", "]", ":", "\n", "  ", "\"\"\"\"Returns the eval score (e.g. BLEU) of the hyp sents using reference trg sents\n\n  Args:\n    ref_file: path of the reference file\n    hyp_file: path of the hypothesis trg file\n    evaluators: Evaluation metrics. Can be a list of evaluator objects, or a shortcut string\n    desc: descriptive string passed on to evaluators\n  \"\"\"", "\n", "hyp_postprocess", "=", "lambda", "line", ":", "line", ".", "split", "(", ")", "\n", "ref_postprocess", "=", "lambda", "line", ":", "line", ".", "split", "(", ")", "\n", "\n", "is_multi", "=", "False", "\n", "if", "isinstance", "(", "ref_file", ",", "str", ")", ":", "\n", "    ", "ref_corpus", "=", "read_data", "(", "ref_file", ",", "post_process", "=", "ref_postprocess", ")", "\n", "", "else", ":", "\n", "    ", "if", "len", "(", "ref_file", ")", "==", "1", ":", "ref_corpus", "=", "read_data", "(", "ref_file", "[", "0", "]", ",", "post_process", "=", "ref_postprocess", ")", "\n", "else", ":", "\n", "      ", "is_multi", "=", "True", "\n", "ref_corpora", "=", "[", "read_data", "(", "ref_file_i", ",", "post_process", "=", "ref_postprocess", ")", "for", "ref_file_i", "in", "ref_file", "]", "\n", "ref_corpus", "=", "[", "tuple", "(", "ref_corpora", "[", "i", "]", "[", "j", "]", "for", "i", "in", "range", "(", "len", "(", "ref_file", ")", ")", ")", "for", "j", "in", "range", "(", "len", "(", "ref_corpora", "[", "0", "]", ")", ")", "]", "\n", "", "", "hyp_corpus", "=", "read_data", "(", "hyp_file", ",", "post_process", "=", "hyp_postprocess", ")", "\n", "len_before", "=", "len", "(", "hyp_corpus", ")", "\n", "ref_corpus", ",", "hyp_corpus", "=", "zip", "(", "*", "filter", "(", "lambda", "x", ":", "inferences", ".", "NO_DECODING_ATTEMPTED", "not", "in", "x", "[", "1", "]", ",", "zip", "(", "ref_corpus", ",", "hyp_corpus", ")", ")", ")", "\n", "if", "len", "(", "ref_corpus", ")", "<", "len_before", ":", "\n", "    ", "logger", ".", "info", "(", "f\"> ignoring {len_before - len(ref_corpus)} out of {len_before} test sentences.\"", ")", "\n", "\n", "", "if", "is_multi", ":", "\n", "    ", "return", "[", "evaluator", ".", "evaluate_multi_ref", "(", "ref_corpus", ",", "hyp_corpus", ",", "desc", "=", "desc", ")", "for", "evaluator", "in", "evaluators", "]", "\n", "", "else", ":", "\n", "    ", "return", "[", "evaluator", ".", "evaluate", "(", "ref_corpus", ",", "hyp_corpus", ",", "desc", "=", "desc", ")", "for", "evaluator", "in", "evaluators", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.xnmt_evaluate.main": [[65, 84], ["argparse.ArgumentParser", "xnmt.utils.add_dynet_argparse", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "xnmt_evaluate.xnmt_evaluate", "print", "eval", "eval_shortcuts.keys"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.utils.add_dynet_argparse", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.reload_example.parse_args", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.xnmt_evaluate.xnmt_evaluate", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.tasks.DecodingEvalTask.eval"], ["", "", "def", "main", "(", ")", ":", "\n", "  ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "utils", ".", "add_dynet_argparse", "(", "parser", ")", "\n", "parser", ".", "add_argument", "(", "\"--metric\"", ",", "\n", "help", "=", "f\"Scoring metric(s), a string. \"", "\n", "f\"Accepted metrics are {', '.join(eval_shortcuts.keys())}.\"", "\n", "f\"Alternatively, metrics with non-default settings can by used by specifying a Python \"", "\n", "f\"Evaluator object to be parsed using eval(). Example: 'WEREvaluator(case_sensitive=True)'\"", ",", "\n", "nargs", "=", "\"+\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--hyp\"", ",", "help", "=", "\"Path to read hypothesis file from\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--ref\"", ",", "help", "=", "\"Path to read reference file from\"", ",", "nargs", "=", "\"+\"", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "evaluators", "=", "args", ".", "metric", "\n", "evaluators", "=", "[", "eval_shortcuts", "[", "shortcut", "]", "(", ")", "if", "shortcut", "in", "eval_shortcuts", "else", "eval", "(", "shortcut", ")", "for", "shortcut", "in", "evaluators", "]", "\n", "\n", "scores", "=", "xnmt_evaluate", "(", "args", ".", "ref", ",", "args", ".", "hyp", ",", "evaluators", ")", "\n", "for", "score", "in", "scores", ":", "\n", "    ", "print", "(", "score", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.__init__": [[108, 121], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ")", ":", "\n", "    ", "\"\"\"\n    Initialize class, including allocation of DyNet parameters if needed.\n\n    The __init__() must always be annotated with @serializable_init. It's arguments are exactly those that can be\n    specified in a YAML config file. If the argument values are Serializable, they are initialized before being passed\n    to this class. The order of the arguments defined here determines in what order children are initialized, which\n    may be important when there are dependencies between children.\n    \"\"\"", "\n", "\n", "# attributes that are in the YAML file (never change this manually, use Serializable.save_processed_arg() instead)", "\n", "self", ".", "serialize_params", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.shared_params": [[122, 143], ["None"], "methods", ["None"], ["", "def", "shared_params", "(", "self", ")", "->", "List", "[", "Set", "[", "Union", "[", "str", ",", "'Path'", "]", "]", "]", ":", "\n", "    ", "\"\"\"\n    Return the shared parameters of this Serializable class.\n\n    This can be overwritten to specify what parameters of this component and its subcomponents are shared.\n    Parameter sharing is performed before any components are initialized, and can therefore only\n    include basic data types that are already present in the YAML file (e.g. # dimensions, etc.)\n    Sharing is performed if at least one parameter is specified and multiple shared parameters don't conflict.\n    In case of conflict a warning is printed, and no sharing is performed.\n    The ordering of shared parameters is irrelevant.\n    Note also that if a submodule is replaced by a reference, its shared parameters are ignored.\n\n    Returns:\n      objects referencing params of this component or a subcompononent\n      e.g.::\n\n        return [set([\".input_dim\",\n                     \".sub_module.input_dim\",\n                     \".submodules_list.0.input_dim\"])]\n    \"\"\"", "\n", "return", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.save_processed_arg": [[144, 164], ["hasattr", "ValueError", "persistence._get_init_args_defaults"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._get_init_args_defaults"], ["", "def", "save_processed_arg", "(", "self", ",", "key", ":", "str", ",", "val", ":", "Any", ")", "->", "None", ":", "\n", "    ", "\"\"\"\n    Save a new value for an init argument (call from within ``__init__()``).\n\n    Normally, the serialization mechanism makes sure that the same arguments are passed when creating the class\n    initially based on a config file, and when loading it from a saved model. This method can be called from inside\n    ``__init__()`` to save a new value that will be passed when loading the saved model. This can be useful when one\n    doesn't want to recompute something every time (like a vocab) or when something has been passed via implicit\n    referencing which might yield inconsistent result when loading the model to assemble a new model of different\n    structure.\n\n    Args:\n      key: name of property, must match an argument of ``__init__()``\n      val: new value; a :class:`Serializable` or basic Python type or list or dict of these\n    \"\"\"", "\n", "if", "not", "hasattr", "(", "self", ",", "\"serialize_params\"", ")", ":", "\n", "      ", "self", ".", "serialize_params", "=", "{", "}", "\n", "", "if", "key", "!=", "\"xnmt_subcol_name\"", "and", "key", "not", "in", "_get_init_args_defaults", "(", "self", ")", ":", "\n", "      ", "raise", "ValueError", "(", "f\"{key} is not an init argument of {self}\"", ")", "\n", "", "self", ".", "serialize_params", "[", "key", "]", "=", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component": [[165, 199], ["create_fct", "persistence.Serializable.save_processed_arg"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.save_processed_arg"], ["", "def", "add_serializable_component", "(", "self", ",", "name", ":", "str", ",", "passed", ":", "Any", ",", "\n", "create_fct", ":", "Callable", "[", "[", "]", ",", "Any", "]", ")", "->", "Any", ":", "\n", "    ", "\"\"\"\n    Create a :class:`Serializable` component, or a container component with several :class:`Serializable`-s.\n\n    :class:`Serializable` sub-components should always be created using this helper to make sure DyNet parameters are\n    assigned properly and serialization works properly. The components must also be accepted as init arguments,\n    defaulting to ``None``. The helper makes sure that components are only created if ``None`` is passed, otherwise the\n    passed component is reused.\n\n    The idiom for using this for an argument named ``my_comp`` would be::\n\n      def __init__(self, my_comp=None, other_args, ...):\n        ...\n        my_comp = self.add_serializable_component(\"my_comp\", my_comp, lambda: SomeSerializable(other_args))\n        # now, do something with my_comp\n        ...\n\n    Args:\n      name: name of the object\n      passed: object as passed in the constructor. If ``None``, will be created using create_fct.\n      create_fct: a callable with no arguments that returns a :class:`Serializable` or a collection of\n                  :class:`Serializable`-s. When loading a saved model, this same object will be passed via the\n                  ``passed`` argument, and ``create_fct`` is not invoked.\n\n    Returns:\n      reused or newly created object(s).\n    \"\"\"", "\n", "if", "passed", "is", "None", ":", "\n", "      ", "initialized", "=", "create_fct", "(", ")", "\n", "self", ".", "save_processed_arg", "(", "name", ",", "initialized", ")", "\n", "return", "initialized", "\n", "", "else", ":", "\n", "      ", "return", "passed", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.__repr__": [[200, 205], ["getattr", "id"], "methods", ["None"], ["", "", "def", "__repr__", "(", "self", ")", ":", "\n", "    ", "if", "getattr", "(", "self", ",", "\"_is_bare\"", ",", "False", ")", ":", "\n", "      ", "return", "f\"bare({self.__class__.__name__}{self._bare_kwargs if self._bare_kwargs else ''})\"", "\n", "", "else", ":", "\n", "      ", "return", "f\"{self.__class__.__name__}@{id(self)}\"", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.UninitializedYamlObject.__init__": [[215, 219], ["isinstance"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "data", ":", "Any", ")", "->", "None", ":", "\n", "    ", "if", "isinstance", "(", "data", ",", "UninitializedYamlObject", ")", ":", "\n", "      ", "raise", "AssertionError", "\n", "", "self", ".", "data", "=", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.UninitializedYamlObject.get": [[220, 222], ["persistence.UninitializedYamlObject.data.get"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.UninitializedYamlObject.get"], ["", "def", "get", "(", "self", ",", "key", ":", "str", ",", "default", ":", "Any", ")", ":", "\n", "    ", "return", "self", ".", "data", ".", "get", "(", "key", ",", "default", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Ref.__init__": [[263, 273], ["isinstance", "ValueError", "persistence.Path", "str"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "path", ":", "Union", "[", "None", ",", "'Path'", ",", "str", "]", "=", "None", ",", "name", ":", "Optional", "[", "str", "]", "=", "None", ",", "\n", "default", ":", "Any", "=", "NO_DEFAULT", ")", "->", "None", ":", "\n", "    ", "if", "name", "is", "not", "None", "and", "path", "is", "not", "None", ":", "\n", "      ", "raise", "ValueError", "(", "f\"Ref cannot be initialized with both a name and a path ({name} / {path})\"", ")", "\n", "", "if", "isinstance", "(", "path", ",", "str", ")", ":", "path", "=", "Path", "(", "path", ")", "\n", "self", ".", "name", "=", "name", "\n", "self", ".", "path", "=", "path", "\n", "self", ".", "default", "=", "default", "\n", "self", ".", "serialize_params", "=", "{", "'name'", ":", "name", "}", "if", "name", "else", "{", "'path'", ":", "str", "(", "path", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Ref.get_name": [[274, 277], ["getattr"], "methods", ["None"], ["", "def", "get_name", "(", "self", ")", "->", "str", ":", "\n", "    ", "\"\"\"Return name, or ``None`` if this is not a named reference\"\"\"", "\n", "return", "getattr", "(", "self", ",", "\"name\"", ",", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Ref.get_path": [[278, 284], ["getattr", "isinstance", "persistence.Path"], "methods", ["None"], ["", "def", "get_path", "(", "self", ")", "->", "Optional", "[", "'Path'", "]", ":", "\n", "    ", "\"\"\"Return path, or ``None`` if this is a named reference\"\"\"", "\n", "if", "getattr", "(", "self", ",", "\"path\"", ",", "None", ")", ":", "\n", "      ", "if", "isinstance", "(", "self", ".", "path", ",", "str", ")", ":", "self", ".", "path", "=", "Path", "(", "self", ".", "path", ")", "\n", "return", "self", ".", "path", "\n", "", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Ref.is_required": [[285, 288], ["getattr"], "methods", ["None"], ["", "def", "is_required", "(", "self", ")", "->", "bool", ":", "\n", "    ", "\"\"\"Return ``True`` iff there exists no default value and it is mandatory that this reference be resolved.\"\"\"", "\n", "return", "getattr", "(", "self", ",", "\"default\"", ",", "Ref", ".", "NO_DEFAULT", ")", "==", "Ref", ".", "NO_DEFAULT", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Ref.get_default": [[289, 292], ["getattr"], "methods", ["None"], ["", "def", "get_default", "(", "self", ")", "->", "Any", ":", "\n", "    ", "\"\"\"Return default value, or ``Ref.NO_DEFAULT`` if no default value is set (i.e., this is a required reference).\"\"\"", "\n", "return", "getattr", "(", "self", ",", "\"default\"", ",", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Ref.__str__": [[293, 299], ["persistence.Ref.get_name", "getattr", "persistence.Ref.get_name", "persistence.Ref.get_path"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Ref.get_name", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Ref.get_name", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Ref.get_path"], ["", "def", "__str__", "(", "self", ")", ":", "\n", "    ", "default_str", "=", "f\", default={self.default}\"", "if", "getattr", "(", "self", ",", "\"default\"", ",", "Ref", ".", "NO_DEFAULT", ")", "!=", "Ref", ".", "NO_DEFAULT", "else", "\"\"", "\n", "if", "self", ".", "get_name", "(", ")", ":", "\n", "      ", "return", "f\"Ref(name={self.get_name()}{default_str})\"", "\n", "", "else", ":", "\n", "      ", "return", "f\"Ref(path={self.get_path()}{default_str})\"", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Ref.__repr__": [[300, 302], ["str"], "methods", ["None"], ["", "", "def", "__repr__", "(", "self", ")", ":", "\n", "    ", "return", "str", "(", "self", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Ref.resolve_path": [[303, 315], ["persistence.Ref.get_path", "isinstance", "persistence.Ref.get_path", "persistence.Path", "persistence.Ref.get_name", "ValueError", "persistence.Ref.get_path", "persistence.Ref.get_name"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Ref.get_path", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Ref.get_path", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Ref.get_name", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Ref.get_path", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Ref.get_name"], ["", "def", "resolve_path", "(", "self", ",", "named_paths", ":", "Dict", "[", "str", ",", "'Path'", "]", ")", "->", "'Path'", ":", "\n", "    ", "\"\"\"Get path, resolving paths properly in case this is a named reference.\"\"\"", "\n", "if", "self", ".", "get_path", "(", ")", ":", "\n", "      ", "if", "isinstance", "(", "self", ".", "get_path", "(", ")", ",", "str", ")", ":", "\n", "# need to do this here, because the initializer is never called when", "\n", "# Ref objects are specified in the YAML file", "\n", "        ", "self", ".", "path", "=", "Path", "(", "self", ".", "get_path", "(", ")", ")", "\n", "", "return", "self", ".", "path", "\n", "", "elif", "self", ".", "get_name", "(", ")", "in", "named_paths", ":", "\n", "      ", "return", "named_paths", "[", "self", ".", "get_name", "(", ")", "]", "\n", "", "else", ":", "\n", "      ", "raise", "ValueError", "(", "f\"Could not resolve path of reference {self}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.__init__": [[327, 332], ["ValueError", "path_str.strip", "len"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "path_str", ":", "str", "=", "\"\"", ")", "->", "None", ":", "\n", "    ", "if", "(", "len", "(", "path_str", ")", ">", "1", "and", "path_str", "[", "-", "1", "]", "==", "\".\"", "and", "path_str", "[", "-", "2", "]", "!=", "\".\"", ")", "or", "\"..\"", "in", "path_str", ".", "strip", "(", "\".\"", ")", ":", "\n", "      ", "raise", "ValueError", "(", "f\"'{path_str}' is not a valid path string\"", ")", "\n", "", "self", ".", "path_str", "=", "path_str", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append": [[333, 349], ["ValueError", "len", "persistence.Path", "persistence.Path", "persistence.Path.path_str.strip"], "methods", ["None"], ["", "def", "append", "(", "self", ",", "link", ":", "str", ")", "->", "'Path'", ":", "\n", "    ", "\"\"\"\n    Return a new path by appending a link.\n\n    Args:\n      link: link to append\n\n    Returns: new path\n\n    \"\"\"", "\n", "if", "not", "link", "or", "\".\"", "in", "link", ":", "\n", "      ", "raise", "ValueError", "(", "f\"'{link}' is not a valid link\"", ")", "\n", "", "if", "len", "(", "self", ".", "path_str", ".", "strip", "(", "\".\"", ")", ")", "==", "0", ":", "\n", "      ", "return", "Path", "(", "f\"{self.path_str}{link}\"", ")", "\n", "", "else", ":", "\n", "      ", "return", "Path", "(", "f\"{self.path_str}.{link}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.add_path": [[350, 365], ["path_to_add.is_relative_path", "NotImplementedError", "persistence.Path", "persistence.Path", "len", "len", "persistence.Path.path_str.strip"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.is_relative_path"], ["", "", "def", "add_path", "(", "self", ",", "path_to_add", ":", "'Path'", ")", "->", "'Path'", ":", "\n", "    ", "\"\"\"\n    Concatenates a path\n\n    Args:\n      path_to_add: path to concatenate\n\n    Returns: concatenated path\n\n    \"\"\"", "\n", "if", "path_to_add", ".", "is_relative_path", "(", ")", ":", "raise", "NotImplementedError", "(", "\"add_path() is not implemented for relative paths.\"", ")", "\n", "if", "len", "(", "self", ".", "path_str", ".", "strip", "(", "\".\"", ")", ")", "==", "0", "or", "len", "(", "path_to_add", ".", "path_str", ")", "==", "0", ":", "\n", "      ", "return", "Path", "(", "f\"{self.path_str}{path_to_add.path_str}\"", ")", "\n", "", "else", ":", "\n", "      ", "return", "Path", "(", "f\"{self.path_str}.{path_to_add.path_str}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.__str__": [[366, 368], ["None"], "methods", ["None"], ["", "", "def", "__str__", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "path_str", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.__repr__": [[369, 371], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "path_str", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.is_relative_path": [[372, 374], ["persistence.Path.path_str.startswith"], "methods", ["None"], ["", "def", "is_relative_path", "(", "self", ")", "->", "bool", ":", "\n", "    ", "return", "self", ".", "path_str", ".", "startswith", "(", "\".\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.get_absolute": [[375, 388], ["rel_to.append.append.is_relative_path", "persistence.Path.is_relative_path", "ValueError", "range", "persistence.Path.path_str.strip", "rel_to.append.append.parent", "len", "persistence.Path.split", "len", "len", "rel_to.append.append.append", "persistence.Path.path_str.strip"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.is_relative_path", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.is_relative_path", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.parent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "def", "get_absolute", "(", "self", ",", "rel_to", ":", "'Path'", ")", "->", "'Path'", ":", "\n", "    ", "if", "rel_to", ".", "is_relative_path", "(", ")", ":", "raise", "ValueError", "(", "\"rel_to must be an absolute path!\"", ")", "\n", "if", "self", ".", "is_relative_path", "(", ")", ":", "\n", "      ", "num_up", "=", "len", "(", "self", ".", "path_str", ")", "-", "len", "(", "self", ".", "path_str", ".", "strip", "(", "\".\"", ")", ")", "-", "1", "\n", "for", "_", "in", "range", "(", "num_up", ")", ":", "\n", "        ", "rel_to", "=", "rel_to", ".", "parent", "(", ")", "\n", "", "s", "=", "self", ".", "path_str", ".", "strip", "(", "\".\"", ")", "\n", "if", "len", "(", "s", ")", ">", "0", ":", "\n", "        ", "for", "link", "in", "s", ".", "split", "(", "\".\"", ")", ":", "\n", "          ", "rel_to", "=", "rel_to", ".", "append", "(", "link", ")", "\n", "", "", "return", "rel_to", "\n", "", "else", ":", "\n", "      ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.descend_one": [[389, 393], ["persistence.Path", "persistence.Path.is_relative_path", "ValueError", "len", "persistence.Path.path_str.split"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.is_relative_path"], ["", "", "def", "descend_one", "(", "self", ")", "->", "'Path'", ":", "\n", "    ", "if", "self", ".", "is_relative_path", "(", ")", "or", "len", "(", "self", ")", "==", "0", ":", "\n", "      ", "raise", "ValueError", "(", "f\"Can't call descend_one() on path {self.path_str}\"", ")", "\n", "", "return", "Path", "(", "\".\"", ".", "join", "(", "self", ".", "path_str", ".", "split", "(", "\".\"", ")", "[", "1", ":", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.__len__": [[394, 399], ["persistence.Path.is_relative_path", "len", "ValueError", "len", "persistence.Path.path_str.split"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.is_relative_path"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "    ", "if", "self", ".", "is_relative_path", "(", ")", ":", "\n", "      ", "raise", "ValueError", "(", "f\"Can't call __len__() on path {self.path_str}\"", ")", "\n", "", "if", "len", "(", "self", ".", "path_str", ")", "==", "0", ":", "return", "0", "\n", "return", "len", "(", "self", ".", "path_str", ".", "split", "(", "\".\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.__getitem__": [[400, 409], ["persistence.Path.is_relative_path", "isinstance", "ValueError", "key.indices", "persistence.Path", "len", "ValueError", "persistence.Path.path_str.split", "persistence.Path.path_str.split"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.is_relative_path"], ["", "def", "__getitem__", "(", "self", ",", "key", ")", ":", "\n", "    ", "if", "self", ".", "is_relative_path", "(", ")", ":", "\n", "      ", "raise", "ValueError", "(", "f\"Can't call __getitem__() on path {self.path_str}\"", ")", "\n", "", "if", "isinstance", "(", "key", ",", "slice", ")", ":", "\n", "      ", "_", ",", "_", ",", "step", "=", "key", ".", "indices", "(", "len", "(", "self", ")", ")", "\n", "if", "step", "is", "not", "None", "and", "step", "!=", "1", ":", "raise", "ValueError", "(", "f\"step must be 1, found {step}\"", ")", "\n", "return", "Path", "(", "\".\"", ".", "join", "(", "self", ".", "path_str", ".", "split", "(", "\".\"", ")", "[", "key", "]", ")", ")", "\n", "", "else", ":", "\n", "      ", "return", "self", ".", "path_str", ".", "split", "(", "\".\"", ")", "[", "key", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.parent": [[410, 419], ["len", "ValueError", "persistence.Path.path_str.strip", "persistence.Path.path_str.split", "persistence.Path.path_str.startswith", "persistence.Path", "persistence.Path"], "methods", ["None"], ["", "", "def", "parent", "(", "self", ")", "->", "'Path'", ":", "\n", "    ", "if", "len", "(", "self", ".", "path_str", ".", "strip", "(", "\".\"", ")", ")", "==", "0", ":", "\n", "      ", "raise", "ValueError", "(", "f\"Path '{self.path_str}' has no parent\"", ")", "\n", "", "else", ":", "\n", "      ", "spl", "=", "self", ".", "path_str", ".", "split", "(", "\".\"", ")", "[", ":", "-", "1", "]", "\n", "if", "'.'", ".", "join", "(", "spl", ")", "==", "\"\"", "and", "self", ".", "path_str", ".", "startswith", "(", "\".\"", ")", ":", "\n", "        ", "return", "Path", "(", "\".\"", ")", "\n", "", "else", ":", "\n", "        ", "return", "Path", "(", "\".\"", ".", "join", "(", "spl", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.__hash__": [[420, 422], ["hash"], "methods", ["None"], ["", "", "", "def", "__hash__", "(", "self", ")", ":", "\n", "    ", "return", "hash", "(", "self", ".", "path_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.__eq__": [[423, 428], ["isinstance"], "methods", ["None"], ["", "def", "__eq__", "(", "self", ",", "other", ")", ":", "\n", "    ", "if", "isinstance", "(", "other", ",", "Path", ")", ":", "\n", "      ", "return", "self", ".", "path_str", "==", "other", ".", "path_str", "\n", "", "else", ":", "\n", "      ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.ancestors": [[429, 436], ["len", "a.parent.parent.parent", "ret.add", "a.parent.parent.path_str.strip"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.parent"], ["", "", "def", "ancestors", "(", "self", ")", "->", "Set", "[", "'Path'", "]", ":", "\n", "    ", "a", "=", "self", "\n", "ret", "=", "{", "a", "}", "\n", "while", "len", "(", "a", ".", "path_str", ".", "strip", "(", "\".\"", ")", ")", ">", "0", ":", "\n", "      ", "a", "=", "a", ".", "parent", "(", ")", "\n", "ret", ".", "add", "(", "a", ")", "\n", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Repeat.__init__": [[446, 451], ["ValueError"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "times", ":", "numbers", ".", "Integral", ",", "content", ":", "Any", ")", ":", "\n", "    ", "self", ".", "times", "=", "times", "\n", "self", ".", "content", "=", "content", "\n", "raise", "ValueError", "(", "\"Repeat cannot be instantiated\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.PathError.__init__": [[722, 724], ["Exception.__init__"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__"], ["  ", "def", "__init__", "(", "self", ",", "message", ")", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "message", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.SavedFormatString.__init__": [[728, 732], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "value", ",", "unformatted_value", ")", ":", "\n", "    ", "self", ".", "unformatted_value", "=", "unformatted_value", "\n", "self", ".", "value", "=", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.FormatString.__new__": [[741, 743], ["super().__new__"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.FormatString.__new__"], ["def", "__new__", "(", "cls", ",", "value", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "return", "super", "(", ")", ".", "__new__", "(", "cls", ",", "value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.FormatString.__init__": [[744, 747], ["None"], "methods", ["None"], ["", "def", "__init__", "(", "self", ",", "value", ",", "serialize_as", ")", ":", "\n", "    ", "self", ".", "value", "=", "value", "\n", "self", ".", "serialize_as", "=", "serialize_as", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.RandomParam.__init__": [[756, 758], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "values", ")", ":", "\n", "    ", "self", ".", "values", "=", "values", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.RandomParam.__repr__": [[759, 761], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "    ", "return", "f\"{self.__class__.__name__}(values={self.values})\"", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.RandomParam.draw_value": [[762, 766], ["hasattr", "random.choice"], "methods", ["None"], ["", "def", "draw_value", "(", "self", ")", ":", "\n", "    ", "if", "not", "hasattr", "(", "self", ",", "'drawn_value'", ")", ":", "\n", "      ", "self", ".", "drawn_value", "=", "random", ".", "choice", "(", "self", ".", "values", ")", "\n", "", "return", "self", ".", "drawn_value", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.LoadSerialized.__init__": [[791, 797], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "filename", ":", "str", ",", "path", ":", "str", "=", "\"\"", ",", "overwrite", ":", "Optional", "[", "List", "[", "Dict", "[", "str", ",", "Any", "]", "]", "]", "=", "None", ")", ":", "\n", "    ", "if", "overwrite", "is", "None", ":", "overwrite", "=", "[", "]", "\n", "self", ".", "filename", "=", "filename", "\n", "self", ".", "path", "=", "path", "\n", "self", ".", "overwrite", "=", "overwrite", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.LoadSerialized._check_wellformed": [[798, 809], ["persistence._check_serializable_args_valid", "hasattr", "isinstance", "ValueError", "isinstance", "ValueError", "item.keys", "ValueError", "type", "type", "item.keys"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._check_serializable_args_valid"], ["", "@", "staticmethod", "\n", "def", "_check_wellformed", "(", "load_serialized", ")", ":", "\n", "    ", "_check_serializable_args_valid", "(", "load_serialized", ")", "\n", "if", "hasattr", "(", "load_serialized", ",", "\"overwrite\"", ")", ":", "\n", "      ", "if", "not", "isinstance", "(", "load_serialized", ".", "overwrite", ",", "list", ")", ":", "\n", "        ", "raise", "ValueError", "(", "f\"LoadSerialized.overwrite must be a list, found: {type(load_serialized.overwrite)}\"", ")", "\n", "", "for", "item", "in", "load_serialized", ".", "overwrite", ":", "\n", "        ", "if", "not", "isinstance", "(", "item", ",", "dict", ")", ":", "\n", "          ", "raise", "ValueError", "(", "f\"LoadSerialized.overwrite must be a list of dictionaries, found list item: {type(item)}\"", ")", "\n", "", "if", "item", ".", "keys", "(", ")", "!=", "{", "\"path\"", ",", "\"val\"", "}", ":", "\n", "          ", "raise", "ValueError", "(", "f\"Each overwrite item must have 'path', 'val' (and no other) keys. Found: {item.keys()}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader.experiment_names_from_file": [[827, 863], ["isinstance", "sorted", "isinstance", "open", "yaml.load", "RuntimeError", "logger.error", "yaml.load.keys", "len", "len", "ValueError", "TypeError", "hasattr", "ValueError", "hasattr", "ValueError", "exp_names.append", "set", "type"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["@", "staticmethod", "\n", "def", "experiment_names_from_file", "(", "filename", ":", "str", ")", "->", "List", "[", "str", "]", ":", "\n", "    ", "\"\"\"Return list of experiment names.\n\n    Args:\n      filename: path to YAML file\n    Returns:\n      experiment names occuring in the given file in lexicographic order.\n    \"\"\"", "\n", "try", ":", "\n", "      ", "with", "open", "(", "filename", ")", "as", "stream", ":", "\n", "        ", "experiments", "=", "yaml", ".", "load", "(", "stream", ")", "\n", "", "", "except", "IOError", "as", "e", ":", "\n", "      ", "raise", "RuntimeError", "(", "f\"Could not read configuration file {filename}: {e}\"", ")", "\n", "", "except", "yaml", ".", "constructor", ".", "ConstructorError", ":", "\n", "      ", "logger", ".", "error", "(", "\n", "\"for proper deserialization of a class object, make sure the class is a subclass of \"", "\n", "\"xnmt.serialize.serializable.Serializable, specifies a proper yaml_tag with leading '!', and its module is \"", "\n", "\"imported under xnmt/__init__.py\"", ")", "\n", "raise", "\n", "", "if", "isinstance", "(", "experiments", ",", "dict", ")", ":", "\n", "      ", "if", "\"defaults\"", "in", "experiments", ":", "del", "experiments", "[", "\"defaults\"", "]", "\n", "return", "sorted", "(", "experiments", ".", "keys", "(", ")", ")", "\n", "", "elif", "isinstance", "(", "experiments", ",", "list", ")", ":", "\n", "      ", "exp_names", "=", "[", "]", "\n", "for", "exp", "in", "experiments", ":", "\n", "        ", "if", "not", "hasattr", "(", "exp", ",", "\"name\"", ")", ":", "raise", "ValueError", "(", "\"Encountered unnamed experiment.\"", ")", "\n", "if", "exp", ".", "name", "!=", "\"default\"", ":", "exp_names", ".", "append", "(", "exp", ".", "name", ")", "\n", "", "if", "len", "(", "exp_names", ")", "!=", "len", "(", "set", "(", "exp_names", ")", ")", ":", "raise", "ValueError", "(", "f\"Found duplicate experiment names: {exp_names}.\"", ")", "\n", "return", "exp_names", "\n", "", "else", ":", "\n", "      ", "if", "experiments", ".", "__class__", ".", "__name__", "!=", "\"Experiment\"", ":", "\n", "        ", "raise", "TypeError", "(", "f\"Top level of config file must be a single Experiment or a list or dict of experiments.\"", "\n", "f\"Found: {experiments} of type {type(experiments)}.\"", ")", "\n", "", "if", "not", "hasattr", "(", "experiments", ",", "\"name\"", ")", ":", "raise", "ValueError", "(", "\"Encountered unnamed experiment.\"", ")", "\n", "return", "[", "experiments", ".", "name", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader.preload_experiment_from_file": [[864, 901], ["isinstance", "persistence.YamlPreloader.preload_obj", "isinstance", "open", "yaml.load", "RuntimeError", "getattr", "ValueError", "isinstance", "ValueError", "hasattr", "ValueError", "isinstance", "os.path.dirname", "hasattr", "ValueError", "ValueError"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader.preload_obj"], ["", "", "@", "staticmethod", "\n", "def", "preload_experiment_from_file", "(", "filename", ":", "str", ",", "exp_name", ":", "str", ",", "resume", ":", "bool", "=", "False", ")", "->", "UninitializedYamlObject", ":", "\n", "    ", "\"\"\"Preload experiment from YAML file.\n\n    Args:\n      filename: YAML config file name\n      exp_name: experiment name to load\n      resume: set to True if we are loading a saved model file directly and want to restore all formatted strings.\n\n    Returns:\n      Preloaded but uninitialized object.\n    \"\"\"", "\n", "try", ":", "\n", "      ", "with", "open", "(", "filename", ")", "as", "stream", ":", "\n", "        ", "config", "=", "yaml", ".", "load", "(", "stream", ")", "\n", "", "", "except", "IOError", "as", "e", ":", "\n", "      ", "raise", "RuntimeError", "(", "f\"Could not read configuration file {filename}: {e}\"", ")", "\n", "\n", "", "if", "isinstance", "(", "config", ",", "dict", ")", ":", "\n", "      ", "experiment", "=", "config", "[", "exp_name", "]", "\n", "if", "getattr", "(", "experiment", ",", "\"name\"", ",", "exp_name", ")", "!=", "exp_name", ":", "\n", "        ", "raise", "ValueError", "(", "f\"Inconsistent experiment name '{exp_name}' / '{experiment.name}'\"", ")", "\n", "", "if", "not", "isinstance", "(", "experiment", ",", "LoadSerialized", ")", ":", "\n", "        ", "experiment", ".", "name", "=", "exp_name", "\n", "", "", "elif", "isinstance", "(", "config", ",", "list", ")", ":", "\n", "      ", "experiment", "=", "None", "\n", "for", "exp", "in", "config", ":", "\n", "        ", "if", "not", "hasattr", "(", "exp", ",", "\"name\"", ")", ":", "raise", "ValueError", "(", "\"Encountered unnamed experiment.\"", ")", "\n", "if", "exp", ".", "name", "==", "exp_name", ":", "experiment", "=", "exp", "\n", "", "if", "exp", "is", "None", ":", "raise", "ValueError", "(", "f\"No experiment of name '{exp_name}' exists.\"", ")", "\n", "", "else", ":", "\n", "      ", "experiment", "=", "config", "\n", "if", "not", "hasattr", "(", "experiment", ",", "\"name\"", ")", ":", "raise", "ValueError", "(", "\"Encountered unnamed experiment.\"", ")", "\n", "if", "not", "isinstance", "(", "experiment", ",", "LoadSerialized", ")", ":", "\n", "        ", "if", "experiment", ".", "name", "!=", "exp_name", ":", "raise", "ValueError", "(", "f\"No experiment of name '{exp_name}' exists.\"", ")", "\n", "", "", "return", "YamlPreloader", ".", "preload_obj", "(", "experiment", ",", "exp_name", "=", "exp_name", ",", "exp_dir", "=", "os", ".", "path", ".", "dirname", "(", "filename", ")", "or", "\".\"", ",", "\n", "resume", "=", "resume", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader.preload_obj": [[902, 951], ["persistence._traverse_tree", "persistence.YamlPreloader._copy_duplicate_components", "persistence.YamlPreloader._remove_saved_format_strings", "persistence.YamlPreloader._format_strings", "persistence.YamlPreloader._load_serialized", "persistence.YamlPreloader._instantiate_random_search", "persistence.YamlPreloader._resolve_repeat", "persistence.YamlPreloader._resolve_bare_default_args", "persistence.YamlPreloader._remove_saved_format_strings", "persistence.YamlPreloader._format_strings", "persistence.UninitializedYamlObject", "isinstance", "os.getpid", "xnmt.tee.get_git_revision", "setattr", "persistence.YamlPreloader._resolve_kwargs"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._traverse_tree", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader._copy_duplicate_components", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader._remove_saved_format_strings", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader._format_strings", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader._load_serialized", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader._instantiate_random_search", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader._resolve_repeat", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader._resolve_bare_default_args", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader._remove_saved_format_strings", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader._format_strings", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.get_git_revision", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader._resolve_kwargs"], ["", "@", "staticmethod", "\n", "def", "preload_obj", "(", "root", ":", "Any", ",", "exp_name", ":", "str", ",", "exp_dir", ":", "str", ",", "resume", ":", "bool", "=", "False", ")", "->", "UninitializedYamlObject", ":", "\n", "    ", "\"\"\"Preload a given object.\n\n    Preloading a given object, usually an :class:`xnmt.experiment.Experiment` or :class:`LoadSerialized` object as\n    parsed by pyyaml, includes replacing ``!LoadSerialized``, resolving ``kwargs`` syntax, and instantiating random\n    search.\n\n    Args:\n      root: object to preload\n      exp_name: experiment name, needed to replace ``{EXP}``\n      exp_dir: directory of the corresponding config file, needed to replace ``{EXP_DIR}``\n      resume: if True, keep the formatted strings, e.g. set ``{EXP}`` to the value of the previous run if possible\n\n    Returns:\n      Preloaded but uninitialized object.\n    \"\"\"", "\n", "for", "_", ",", "node", "in", "_traverse_tree", "(", "root", ")", ":", "\n", "      ", "if", "isinstance", "(", "node", ",", "Serializable", ")", ":", "\n", "        ", "YamlPreloader", ".", "_resolve_kwargs", "(", "node", ")", "\n", "\n", "", "", "YamlPreloader", ".", "_copy_duplicate_components", "(", "root", ")", "# sometimes duplicate objects occur with yaml.load()", "\n", "\n", "placeholders", "=", "{", "\"EXP\"", ":", "exp_name", ",", "\n", "\"PID\"", ":", "os", ".", "getpid", "(", ")", ",", "\n", "\"EXP_DIR\"", ":", "exp_dir", ",", "\n", "\"GIT_REV\"", ":", "get_git_revision", "(", ")", "}", "\n", "\n", "# do this both before and after resolving !LoadSerialized", "\n", "root", "=", "YamlPreloader", ".", "_remove_saved_format_strings", "(", "root", ",", "keep_value", "=", "resume", ")", "\n", "YamlPreloader", ".", "_format_strings", "(", "root", ",", "placeholders", ")", "\n", "\n", "root", "=", "YamlPreloader", ".", "_load_serialized", "(", "root", ")", "\n", "\n", "random_search_report", "=", "YamlPreloader", ".", "_instantiate_random_search", "(", "root", ")", "\n", "if", "random_search_report", ":", "\n", "      ", "setattr", "(", "root", ",", "'random_search_report'", ",", "random_search_report", ")", "\n", "\n", "", "root", "=", "YamlPreloader", ".", "_resolve_repeat", "(", "root", ")", "\n", "\n", "# if arguments were not given in the YAML file and are set to a bare(Serializable) by default, copy the bare object", "\n", "# into the object hierarchy so it can be used w/ param sharing etc.", "\n", "YamlPreloader", ".", "_resolve_bare_default_args", "(", "root", ")", "\n", "\n", "# do this both before and after resolving !LoadSerialized", "\n", "root", "=", "YamlPreloader", ".", "_remove_saved_format_strings", "(", "root", ",", "keep_value", "=", "resume", ")", "\n", "YamlPreloader", ".", "_format_strings", "(", "root", ",", "placeholders", ")", "\n", "\n", "return", "UninitializedYamlObject", "(", "root", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader._load_serialized": [[952, 1007], ["persistence._traverse_tree", "isinstance", "persistence.LoadSerialized._check_wellformed", "os.path.isdir", "persistence.Path", "range", "set", "getattr", "xnmt.param_collections.ParamManager.add_load_path", "getattr", "persistence._get_descendant", "isinstance", "persistence._get_named_paths", "persistence._traverse_tree", "persistence.Path", "persistence._set_descendant", "len", "persistence._set_descendant", "open", "yaml.load", "RuntimeError", "_get_descendant.get_path", "isinstance", "sub_node.resolve_path", "sub_node.resolve_path.is_relative_path", "NotImplementedError", "persistence.Ref", "persistence._set_descendant", "set.add", "id", "id", "str().startswith", "persistence._get_descendant", "persistence._set_descendant", "path.add_path", "persistence.Ref", "persistence._set_descendant", "set.add", "sub_node.get_default", "str", "path.add_path", "id", "len", "str", "sub_node.get_default", "len", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._traverse_tree", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.LoadSerialized._check_wellformed", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.add_load_path", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._get_descendant", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._get_named_paths", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._traverse_tree", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._set_descendant", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._set_descendant", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Ref.get_path", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Ref.resolve_path", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.is_relative_path", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._set_descendant", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._get_descendant", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._set_descendant", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.add_path", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._set_descendant", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Ref.get_default", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.add_path", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Ref.get_default"], ["", "@", "staticmethod", "\n", "def", "_load_serialized", "(", "root", ":", "Any", ")", "->", "Any", ":", "\n", "    ", "for", "path", ",", "node", "in", "_traverse_tree", "(", "root", ",", "traversal_order", "=", "_TraversalOrder", ".", "ROOT_LAST", ")", ":", "\n", "      ", "if", "isinstance", "(", "node", ",", "LoadSerialized", ")", ":", "\n", "        ", "LoadSerialized", ".", "_check_wellformed", "(", "node", ")", "\n", "try", ":", "\n", "          ", "with", "open", "(", "node", ".", "filename", ")", "as", "stream", ":", "\n", "            ", "loaded_root", "=", "yaml", ".", "load", "(", "stream", ")", "\n", "", "", "except", "IOError", "as", "e", ":", "\n", "          ", "raise", "RuntimeError", "(", "f\"Could not read configuration file {node.filename}: {e}\"", ")", "\n", "", "if", "os", ".", "path", ".", "isdir", "(", "f\"{node.filename}.data\"", ")", ":", "\n", "          ", "ParamManager", ".", "add_load_path", "(", "f\"{node.filename}.data\"", ")", "\n", "", "cur_path", "=", "Path", "(", "getattr", "(", "node", ",", "\"path\"", ",", "\"\"", ")", ")", "\n", "for", "_", "in", "range", "(", "10", ")", ":", "# follow references", "\n", "          ", "loaded_trg", "=", "_get_descendant", "(", "loaded_root", ",", "cur_path", ",", "redirect", "=", "True", ")", "\n", "if", "isinstance", "(", "loaded_trg", ",", "Ref", ")", ":", "\n", "            ", "cur_path", "=", "loaded_trg", ".", "get_path", "(", ")", "\n", "", "else", ":", "\n", "            ", "break", "\n", "\n", "", "", "found_outside_ref", "=", "True", "\n", "self_inserted_ref_ids", "=", "set", "(", ")", "\n", "while", "found_outside_ref", ":", "\n", "          ", "found_outside_ref", "=", "False", "\n", "named_paths", "=", "_get_named_paths", "(", "loaded_root", ")", "\n", "replaced_paths", "=", "{", "}", "\n", "for", "sub_path", ",", "sub_node", "in", "_traverse_tree", "(", "loaded_trg", ",", "path_to_node", "=", "cur_path", ")", ":", "\n", "            ", "if", "isinstance", "(", "sub_node", ",", "Ref", ")", "and", "not", "id", "(", "sub_node", ")", "in", "self_inserted_ref_ids", ":", "\n", "              ", "referenced_path", "=", "sub_node", ".", "resolve_path", "(", "named_paths", ")", "\n", "if", "referenced_path", ".", "is_relative_path", "(", ")", ":", "\n", "                ", "raise", "NotImplementedError", "(", "\"Handling of relative paths with LoadSerialized is not yet implemented.\"", ")", "\n", "", "if", "referenced_path", "in", "replaced_paths", ":", "\n", "                ", "new_ref", "=", "Ref", "(", "replaced_paths", "[", "referenced_path", "]", ",", "default", "=", "sub_node", ".", "get_default", "(", ")", ")", "\n", "_set_descendant", "(", "loaded_trg", ",", "sub_path", "[", "len", "(", "cur_path", ")", ":", "]", ",", "new_ref", ")", "\n", "self_inserted_ref_ids", ".", "add", "(", "id", "(", "new_ref", ")", ")", "\n", "# if outside node:", "\n", "", "elif", "not", "str", "(", "referenced_path", ")", ".", "startswith", "(", "str", "(", "cur_path", ")", ")", ":", "\n", "                ", "found_outside_ref", "=", "True", "\n", "referenced_obj", "=", "_get_descendant", "(", "loaded_root", ",", "referenced_path", ")", "\n", "_set_descendant", "(", "loaded_trg", ",", "sub_path", "[", "len", "(", "cur_path", ")", ":", "]", ",", "referenced_obj", ")", "\n", "# replaced_paths[referenced_path] = sub_path", "\n", "replaced_paths", "[", "referenced_path", "]", "=", "path", ".", "add_path", "(", "sub_path", "[", "len", "(", "cur_path", ")", ":", "]", ")", "\n", "", "else", ":", "\n", "                ", "new_ref", "=", "Ref", "(", "path", ".", "add_path", "(", "referenced_path", "[", "len", "(", "cur_path", ")", ":", "]", ")", ",", "default", "=", "sub_node", ".", "get_default", "(", ")", ")", "\n", "_set_descendant", "(", "loaded_trg", ",", "sub_path", "[", "len", "(", "cur_path", ")", ":", "]", ",", "new_ref", ")", "\n", "self_inserted_ref_ids", ".", "add", "(", "id", "(", "new_ref", ")", ")", "\n", "\n", "", "", "", "", "for", "d", "in", "getattr", "(", "node", ",", "\"overwrite\"", ",", "[", "]", ")", ":", "\n", "          ", "overwrite_path", "=", "Path", "(", "d", "[", "\"path\"", "]", ")", "\n", "_set_descendant", "(", "loaded_trg", ",", "overwrite_path", ",", "d", "[", "\"val\"", "]", ")", "\n", "", "if", "len", "(", "path", ")", "==", "0", ":", "\n", "          ", "root", "=", "loaded_trg", "\n", "", "else", ":", "\n", "          ", "_set_descendant", "(", "root", ",", "path", ",", "loaded_trg", ")", "\n", "", "", "", "return", "root", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader._copy_duplicate_components": [[1008, 1016], ["set", "persistence._traverse_tree", "isinstance", "set.add", "id", "persistence._set_descendant", "id", "copy.deepcopy"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._traverse_tree", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._set_descendant"], ["", "@", "staticmethod", "\n", "def", "_copy_duplicate_components", "(", "root", ")", ":", "\n", "    ", "obj_ids", "=", "set", "(", ")", "\n", "for", "path", ",", "node", "in", "_traverse_tree", "(", "root", ",", "_TraversalOrder", ".", "ROOT_LAST", ")", ":", "\n", "      ", "if", "isinstance", "(", "node", ",", "(", "list", ",", "dict", ",", "Serializable", ")", ")", ":", "\n", "        ", "if", "id", "(", "node", ")", "in", "obj_ids", ":", "\n", "          ", "_set_descendant", "(", "root", ",", "path", ",", "copy", ".", "deepcopy", "(", "node", ")", ")", "\n", "", "obj_ids", ".", "add", "(", "id", "(", "node", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader._resolve_kwargs": [[1017, 1029], ["hasattr", "obj.kwargs.items", "delattr", "hasattr", "setattr", "ValueError", "str", "str"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items"], ["", "", "", "@", "staticmethod", "\n", "def", "_resolve_kwargs", "(", "obj", ":", "Any", ")", "->", "None", ":", "\n", "    ", "\"\"\"\n    If obj has a kwargs attribute (dictionary), set the dictionary items as attributes\n    of the object via setattr (asserting that there are no collisions).\n    \"\"\"", "\n", "if", "hasattr", "(", "obj", ",", "\"kwargs\"", ")", ":", "\n", "      ", "for", "k", ",", "v", "in", "obj", ".", "kwargs", ".", "items", "(", ")", ":", "\n", "        ", "if", "hasattr", "(", "obj", ",", "k", ")", ":", "\n", "          ", "raise", "ValueError", "(", "f\"kwargs '{str(k)}' already specified as class member for object '{str(obj)}'\"", ")", "\n", "", "setattr", "(", "obj", ",", "k", ",", "v", ")", "\n", "", "delattr", "(", "obj", ",", "\"kwargs\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader._instantiate_random_search": [[1030, 1046], ["persistence._traverse_tree", "isinstance", "v.draw_value.draw_value.draw_value", "hasattr", "persistence._set_descendant", "hasattr"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._traverse_tree", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.RandomParam.draw_value", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._set_descendant"], ["", "", "@", "staticmethod", "\n", "def", "_instantiate_random_search", "(", "experiment", ")", ":", "\n", "# TODO: this should probably be refactored: pull out of persistence.py and generalize so other things like", "\n", "# grid search and bayesian optimization can be supported", "\n", "    ", "param_report", "=", "{", "}", "\n", "initialized_random_params", "=", "{", "}", "\n", "for", "path", ",", "v", "in", "_traverse_tree", "(", "experiment", ")", ":", "\n", "      ", "if", "isinstance", "(", "v", ",", "RandomParam", ")", ":", "\n", "        ", "if", "hasattr", "(", "v", ",", "\"_xnmt_id\"", ")", "and", "v", ".", "_xnmt_id", "in", "initialized_random_params", ":", "\n", "          ", "v", "=", "initialized_random_params", "[", "v", ".", "_xnmt_id", "]", "\n", "", "v", "=", "v", ".", "draw_value", "(", ")", "\n", "if", "hasattr", "(", "v", ",", "\"_xnmt_id\"", ")", ":", "\n", "          ", "initialized_random_params", "[", "v", ".", "_xnmt_id", "]", "=", "v", "\n", "", "_set_descendant", "(", "experiment", ",", "path", ",", "v", ")", "\n", "param_report", "[", "path", "]", "=", "v", "\n", "", "", "return", "param_report", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader._resolve_repeat": [[1047, 1059], ["persistence._traverse_tree", "isinstance", "range", "expanded.append", "len", "persistence._set_descendant", "copy.deepcopy"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._traverse_tree", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._set_descendant"], ["", "@", "staticmethod", "\n", "def", "_resolve_repeat", "(", "root", ")", ":", "\n", "    ", "for", "path", ",", "node", "in", "_traverse_tree", "(", "root", ",", "traversal_order", "=", "_TraversalOrder", ".", "ROOT_LAST", ")", ":", "\n", "      ", "if", "isinstance", "(", "node", ",", "Repeat", ")", ":", "\n", "        ", "expanded", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "node", ".", "times", ")", ":", "\n", "          ", "expanded", ".", "append", "(", "copy", ".", "deepcopy", "(", "node", ".", "content", ")", ")", "\n", "", "if", "len", "(", "path", ")", "==", "0", ":", "\n", "          ", "root", "=", "expanded", "\n", "", "else", ":", "\n", "          ", "_set_descendant", "(", "root", ",", "path", ",", "expanded", ")", "\n", "", "", "", "return", "root", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader._remove_saved_format_strings": [[1060, 1070], ["persistence._traverse_tree", "isinstance", "len", "persistence._set_descendant"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._traverse_tree", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._set_descendant"], ["", "@", "staticmethod", "\n", "def", "_remove_saved_format_strings", "(", "root", ",", "keep_value", "=", "False", ")", ":", "\n", "    ", "for", "path", ",", "node", "in", "_traverse_tree", "(", "root", ",", "traversal_order", "=", "_TraversalOrder", ".", "ROOT_LAST", ")", ":", "\n", "      ", "if", "isinstance", "(", "node", ",", "SavedFormatString", ")", ":", "\n", "        ", "replace_by", "=", "node", ".", "value", "if", "keep_value", "else", "node", ".", "unformatted_value", "\n", "if", "len", "(", "path", ")", "==", "0", ":", "\n", "          ", "root", "=", "replace_by", "\n", "", "else", ":", "\n", "          ", "_set_descendant", "(", "root", ",", "path", ",", "replace_by", ")", "\n", "", "", "", "return", "root", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader._resolve_bare_default_args": [[1071, 1086], ["persistence._traverse_tree", "isinstance", "persistence._get_init_args_defaults", "isinstance", "persistence.YamlPreloader._resolve_bare_default_args", "setattr", "isinstance", "getattr", "ValueError", "copy.deepcopy", "persistence._name_children"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._traverse_tree", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._get_init_args_defaults", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader._resolve_bare_default_args", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._name_children"], ["", "@", "staticmethod", "\n", "def", "_resolve_bare_default_args", "(", "root", ":", "Any", ")", "->", "None", ":", "\n", "    ", "for", "path", ",", "node", "in", "_traverse_tree", "(", "root", ")", ":", "\n", "      ", "if", "isinstance", "(", "node", ",", "Serializable", ")", ":", "\n", "        ", "init_args_defaults", "=", "_get_init_args_defaults", "(", "node", ")", "\n", "for", "expected_arg", "in", "init_args_defaults", ":", "\n", "          ", "if", "not", "expected_arg", "in", "[", "x", "[", "0", "]", "for", "x", "in", "_name_children", "(", "node", ",", "include_reserved", "=", "False", ")", "]", ":", "\n", "            ", "arg_default", "=", "init_args_defaults", "[", "expected_arg", "]", ".", "default", "\n", "if", "isinstance", "(", "arg_default", ",", "Serializable", ")", "and", "not", "isinstance", "(", "arg_default", ",", "Ref", ")", ":", "\n", "              ", "if", "not", "getattr", "(", "arg_default", ",", "\"_is_bare\"", ",", "False", ")", ":", "\n", "                ", "raise", "ValueError", "(", "\n", "f\"only Serializables created via bare(SerializableSubtype) are permitted as default arguments; \"", "\n", "f\"found a fully initialized Serializable: {arg_default} at {path}\"", ")", "\n", "", "YamlPreloader", ".", "_resolve_bare_default_args", "(", "arg_default", ")", "# apply recursively", "\n", "setattr", "(", "node", ",", "expected_arg", ",", "copy", ".", "deepcopy", "(", "arg_default", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader._format_strings": [[1087, 1120], ["persistence._traverse_tree", "format_dict.update", "isinstance", "isinstance", "node.format", "persistence._set_descendant", "persistence._get_init_args_defaults", "persistence.FormatString", "isinstance", "arg_default.format", "setattr", "persistence._name_children", "persistence.FormatString"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._traverse_tree", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.MultiTaskTrainingRegimen.update", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.YamlFormatter.format", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._set_descendant", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._get_init_args_defaults", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.YamlFormatter.format", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._name_children"], ["", "", "", "", "", "", "@", "staticmethod", "\n", "def", "_format_strings", "(", "root", ":", "Any", ",", "format_dict", ":", "Dict", "[", "str", ",", "str", "]", ")", "->", "None", ":", "\n", "    ", "\"\"\"\n    - replaces strings containing ``{EXP}`` and other supported args\n    - also checks if there are default arguments for which no arguments are set and instantiates them with replaced\n      ``{EXP}`` if applicable\n    \"\"\"", "\n", "try", ":", "\n", "      ", "format_dict", ".", "update", "(", "root", ".", "exp_global", ".", "placeholders", ")", "\n", "", "except", "AttributeError", ":", "\n", "      ", "pass", "\n", "", "for", "path", ",", "node", "in", "_traverse_tree", "(", "root", ")", ":", "\n", "      ", "if", "isinstance", "(", "node", ",", "str", ")", ":", "\n", "        ", "try", ":", "\n", "          ", "formatted", "=", "node", ".", "format", "(", "**", "format_dict", ")", "\n", "", "except", "(", "ValueError", ",", "KeyError", ",", "IndexError", ")", ":", "# will occur e.g. if a vocab entry contains a curly bracket", "\n", "          ", "formatted", "=", "node", "\n", "", "if", "node", "!=", "formatted", ":", "\n", "          ", "_set_descendant", "(", "root", ",", "\n", "path", ",", "\n", "FormatString", "(", "formatted", ",", "node", ")", ")", "\n", "", "", "elif", "isinstance", "(", "node", ",", "Serializable", ")", ":", "\n", "        ", "init_args_defaults", "=", "_get_init_args_defaults", "(", "node", ")", "\n", "for", "expected_arg", "in", "init_args_defaults", ":", "\n", "          ", "if", "not", "expected_arg", "in", "[", "x", "[", "0", "]", "for", "x", "in", "_name_children", "(", "node", ",", "include_reserved", "=", "False", ")", "]", ":", "\n", "            ", "arg_default", "=", "init_args_defaults", "[", "expected_arg", "]", ".", "default", "\n", "if", "isinstance", "(", "arg_default", ",", "str", ")", ":", "\n", "              ", "try", ":", "\n", "                ", "formatted", "=", "arg_default", ".", "format", "(", "**", "format_dict", ")", "\n", "", "except", "(", "ValueError", ",", "KeyError", ")", ":", "# will occur e.g. if a vocab entry contains a curly bracket", "\n", "                ", "formatted", "=", "arg_default", "\n", "", "if", "arg_default", "!=", "formatted", ":", "\n", "                ", "setattr", "(", "node", ",", "expected_arg", ",", "FormatString", "(", "formatted", ",", "arg_default", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._YamlDeserializer.__init__": [[1124, 1126], ["None"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ")", ":", "\n", "    ", "self", ".", "has_been_called", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._YamlDeserializer.initialize_if_needed": [[1127, 1142], ["persistence._YamlDeserializer.is_initialized", "persistence._YamlDeserializer.initialize_object"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._YamlDeserializer.is_initialized", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.initialize_object"], ["", "def", "initialize_if_needed", "(", "self", ",", "obj", ")", ":", "\n", "    ", "\"\"\"\n    Initialize if obj has not yet been initialized.\n\n    Note: make sure to always create a new ``_YamlDeserializer`` before calling this, e.g. using\n    ``_YamlDeserializer().initialize_object()``\n\n    Args:\n      obj (Union[Serializable,UninitializedYamlObject]): object to be potentially serialized\n\n    Returns:\n      Serializable: initialized object\n    \"\"\"", "\n", "if", "self", ".", "is_initialized", "(", "obj", ")", ":", "return", "obj", "\n", "else", ":", "return", "self", ".", "initialize_object", "(", "deserialized_yaml_wrapper", "=", "obj", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._YamlDeserializer.is_initialized": [[1143, 1152], ["type"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "is_initialized", "(", "obj", ")", ":", "\n", "    ", "\"\"\"\n    Returns: ``True`` if a serializable object's ``__init__()`` has been invoked (either programmatically or through\n              YAML deserialization).\n              ``False`` if ``__init__()`` has not been invoked, i.e. the object has been produced by the YAML parser but\n              is not ready to use.\n    \"\"\"", "\n", "return", "type", "(", "obj", ")", "!=", "UninitializedYamlObject", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._YamlDeserializer.initialize_object": [[1153, 1186], ["persistence._YamlDeserializer.is_initialized", "copy.deepcopy", "persistence._YamlDeserializer.check_args", "persistence.YamlPreloader._resolve_bare_default_args", "persistence._get_named_paths", "persistence._YamlDeserializer.resolve_ref_default_args", "persistence._YamlDeserializer.create_referenced_default_args", "persistence._YamlDeserializer.share_init_params_top_down", "persistence._YamlDeserializer.init_components_bottom_up", "AssertionError"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._YamlDeserializer.is_initialized", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._YamlDeserializer.check_args", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.YamlPreloader._resolve_bare_default_args", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._get_named_paths", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._YamlDeserializer.resolve_ref_default_args", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._YamlDeserializer.create_referenced_default_args", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._YamlDeserializer.share_init_params_top_down", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._YamlDeserializer.init_components_bottom_up"], ["", "def", "initialize_object", "(", "self", ",", "deserialized_yaml_wrapper", ")", ":", "\n", "    ", "\"\"\"\n    Initializes a hierarchy of deserialized YAML objects.\n\n    Note: make sure to always create a new ``_YamlDeserializer`` before calling this, e.g. using\n    ``_YamlDeserializer().initialize_object()``\n\n    Args:\n      deserialized_yaml_wrapper: deserialized YAML data inside a :class:`UninitializedYamlObject` wrapper (classes are\n                                 resolved and class members set, but ``__init__()`` has not been called at this point)\n    Returns:\n      the appropriate object, with properly shared parameters and ``__init__()`` having been invoked\n    \"\"\"", "\n", "assert", "not", "self", ".", "has_been_called", "\n", "self", ".", "has_been_called", "=", "True", "\n", "if", "self", ".", "is_initialized", "(", "deserialized_yaml_wrapper", ")", ":", "\n", "      ", "raise", "AssertionError", "(", ")", "\n", "# make a copy to avoid side effects", "\n", "", "self", ".", "deserialized_yaml", "=", "copy", ".", "deepcopy", "(", "deserialized_yaml_wrapper", ".", "data", ")", "\n", "# make sure only arguments accepted by the Serializable derivatives' __init__() methods were passed", "\n", "self", ".", "check_args", "(", "self", ".", "deserialized_yaml", ")", "\n", "# if arguments were not given in the YAML file and are set to a bare(Serializable) by default, copy the bare object into the object hierarchy so it can be used w/ param sharing etc.", "\n", "YamlPreloader", ".", "_resolve_bare_default_args", "(", "self", ".", "deserialized_yaml", ")", "\n", "self", ".", "named_paths", "=", "_get_named_paths", "(", "self", ".", "deserialized_yaml", ")", "\n", "# if arguments were not given in the YAML file and are set to a Ref by default, copy this Ref into the object structure so that it can be properly resolved in a subsequent step", "\n", "self", ".", "resolve_ref_default_args", "(", "self", ".", "deserialized_yaml", ")", "\n", "# if references point to places that are not specified explicitly in the YAML file, but have given default arguments, substitute those default arguments", "\n", "self", ".", "create_referenced_default_args", "(", "self", ".", "deserialized_yaml", ")", "\n", "# apply sharing as requested by Serializable.shared_params()", "\n", "self", ".", "share_init_params_top_down", "(", "self", ".", "deserialized_yaml", ")", "\n", "# finally, initialize each component via __init__(**init_params), while properly resolving references", "\n", "initialized", "=", "self", ".", "init_components_bottom_up", "(", "self", ".", "deserialized_yaml", ")", "\n", "return", "initialized", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._YamlDeserializer.check_args": [[1187, 1191], ["persistence._traverse_tree", "isinstance", "persistence._check_serializable_args_valid"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._traverse_tree", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._check_serializable_args_valid"], ["", "def", "check_args", "(", "self", ",", "root", ")", ":", "\n", "    ", "for", "_", ",", "node", "in", "_traverse_tree", "(", "root", ")", ":", "\n", "      ", "if", "isinstance", "(", "node", ",", "Serializable", ")", ":", "\n", "        ", "_check_serializable_args_valid", "(", "node", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._YamlDeserializer.resolve_ref_default_args": [[1192, 1201], ["persistence._traverse_tree", "isinstance", "persistence._get_init_args_defaults", "copy.deepcopy", "isinstance", "setattr", "persistence._name_children"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._traverse_tree", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._get_init_args_defaults", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._name_children"], ["", "", "", "def", "resolve_ref_default_args", "(", "self", ",", "root", ")", ":", "\n", "    ", "for", "_", ",", "node", "in", "_traverse_tree", "(", "root", ")", ":", "\n", "      ", "if", "isinstance", "(", "node", ",", "Serializable", ")", ":", "\n", "        ", "init_args_defaults", "=", "_get_init_args_defaults", "(", "node", ")", "\n", "for", "expected_arg", "in", "init_args_defaults", ":", "\n", "          ", "if", "not", "expected_arg", "in", "[", "x", "[", "0", "]", "for", "x", "in", "_name_children", "(", "node", ",", "include_reserved", "=", "False", ")", "]", ":", "\n", "            ", "arg_default", "=", "copy", ".", "deepcopy", "(", "init_args_defaults", "[", "expected_arg", "]", ".", "default", ")", "\n", "if", "isinstance", "(", "arg_default", ",", "Ref", ")", ":", "\n", "              ", "setattr", "(", "node", ",", "expected_arg", ",", "arg_default", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._YamlDeserializer.create_referenced_default_args": [[1202, 1229], ["persistence._traverse_tree", "isinstance", "node.get_path", "isinstance", "sorted", "persistence.Path", "persistence.Path.ancestors", "persistence._get_descendant", "len", "persistence._get_descendant", "isinstance", "ancestor.parent", "persistence._get_init_args_defaults", "persistence._set_descendant", "copy.deepcopy"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._traverse_tree", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Ref.get_path", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.ancestors", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._get_descendant", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._get_descendant", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.parent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._get_init_args_defaults", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._set_descendant"], ["", "", "", "", "", "", "def", "create_referenced_default_args", "(", "self", ",", "root", ")", ":", "\n", "    ", "for", "path", ",", "node", "in", "_traverse_tree", "(", "root", ")", ":", "\n", "      ", "if", "isinstance", "(", "node", ",", "Ref", ")", ":", "\n", "        ", "referenced_path", "=", "node", ".", "get_path", "(", ")", "\n", "if", "not", "referenced_path", ":", "\n", "          ", "continue", "# skip named paths", "\n", "", "if", "isinstance", "(", "referenced_path", ",", "str", ")", ":", "referenced_path", "=", "Path", "(", "referenced_path", ")", "\n", "give_up", "=", "False", "\n", "for", "ancestor", "in", "sorted", "(", "referenced_path", ".", "ancestors", "(", ")", ",", "key", "=", "lambda", "x", ":", "len", "(", "x", ")", ")", ":", "\n", "          ", "try", ":", "\n", "            ", "_get_descendant", "(", "root", ",", "ancestor", ")", "\n", "", "except", "PathError", ":", "\n", "            ", "try", ":", "\n", "              ", "ancestor_parent", "=", "_get_descendant", "(", "root", ",", "ancestor", ".", "parent", "(", ")", ")", "\n", "if", "isinstance", "(", "ancestor_parent", ",", "Serializable", ")", ":", "\n", "                ", "init_args_defaults", "=", "_get_init_args_defaults", "(", "ancestor_parent", ")", "\n", "if", "ancestor", "[", "-", "1", "]", "in", "init_args_defaults", ":", "\n", "                  ", "referenced_arg_default", "=", "init_args_defaults", "[", "ancestor", "[", "-", "1", "]", "]", ".", "default", "\n", "", "else", ":", "\n", "                  ", "referenced_arg_default", "=", "inspect", ".", "Parameter", ".", "empty", "\n", "", "if", "referenced_arg_default", "!=", "inspect", ".", "Parameter", ".", "empty", ":", "\n", "                  ", "_set_descendant", "(", "root", ",", "ancestor", ",", "copy", ".", "deepcopy", "(", "referenced_arg_default", ")", ")", "\n", "", "", "else", ":", "\n", "                ", "give_up", "=", "True", "\n", "", "", "except", "PathError", ":", "\n", "              ", "pass", "\n", "", "", "if", "give_up", ":", "break", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._YamlDeserializer.share_init_params_top_down": [[1230, 1266], ["persistence._traverse_tree", "isinstance", "set", "node.shared_params", "persistence._traverse_tree", "len", "logger.warning", "set", "set", "persistence._get_descendant", "isinstance", "isinstance", "set.add", "len", "abs_shared_param_sets.append", "ValueError", "p.get_absolute", "isinstance", "persistence.Path", "persistence._get_init_args_defaults", "persistence._set_descendant", "persistence._get_descendant", "shared_param_path.parent", "list"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._traverse_tree", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.shared_params", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._traverse_tree", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._get_descendant", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.get_absolute", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._get_init_args_defaults", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._set_descendant", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._get_descendant", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.parent"], ["", "", "", "", "def", "share_init_params_top_down", "(", "self", ",", "root", ")", ":", "\n", "    ", "abs_shared_param_sets", "=", "[", "]", "\n", "for", "path", ",", "node", "in", "_traverse_tree", "(", "root", ")", ":", "\n", "      ", "if", "isinstance", "(", "node", ",", "Serializable", ")", ":", "\n", "        ", "for", "shared_param_set", "in", "node", ".", "shared_params", "(", ")", ":", "\n", "          ", "shared_param_set", "=", "set", "(", "Path", "(", "p", ")", "if", "isinstance", "(", "p", ",", "str", ")", "else", "p", "for", "p", "in", "shared_param_set", ")", "\n", "abs_shared_param_set", "=", "set", "(", "p", ".", "get_absolute", "(", "path", ")", "for", "p", "in", "shared_param_set", ")", "\n", "added", "=", "False", "\n", "for", "prev_set", "in", "abs_shared_param_sets", ":", "\n", "            ", "if", "prev_set", "&", "abs_shared_param_set", ":", "\n", "              ", "prev_set", "|=", "abs_shared_param_set", "\n", "added", "=", "True", "\n", "break", "\n", "", "", "if", "not", "added", ":", "\n", "            ", "abs_shared_param_sets", ".", "append", "(", "abs_shared_param_set", ")", "\n", "", "", "", "", "for", "shared_param_set", "in", "abs_shared_param_sets", ":", "\n", "      ", "shared_val_choices", "=", "set", "(", ")", "\n", "for", "shared_param_path", "in", "shared_param_set", ":", "\n", "        ", "try", ":", "\n", "          ", "new_shared_val", "=", "_get_descendant", "(", "root", ",", "shared_param_path", ")", "\n", "", "except", "PathError", ":", "\n", "          ", "continue", "\n", "", "for", "_", ",", "child_of_shared_param", "in", "_traverse_tree", "(", "new_shared_val", ",", "include_root", "=", "False", ")", ":", "\n", "          ", "if", "isinstance", "(", "child_of_shared_param", ",", "Serializable", ")", ":", "\n", "            ", "raise", "ValueError", "(", "f\"{path} shared params {shared_param_set} contains Serializable sub-object {child_of_shared_param} which is not permitted\"", ")", "\n", "", "", "if", "not", "isinstance", "(", "new_shared_val", ",", "Ref", ")", ":", "\n", "          ", "shared_val_choices", ".", "add", "(", "new_shared_val", ")", "\n", "", "", "if", "len", "(", "shared_val_choices", ")", ">", "1", ":", "\n", "        ", "logger", ".", "warning", "(", "f\"inconsistent shared params at {path} for {shared_param_set}: {shared_val_choices}; Ignoring these shared parameters.\"", ")", "\n", "", "elif", "len", "(", "shared_val_choices", ")", "==", "1", ":", "\n", "        ", "for", "shared_param_path", "in", "shared_param_set", ":", "\n", "          ", "try", ":", "\n", "            ", "if", "shared_param_path", "[", "-", "1", "]", "in", "_get_init_args_defaults", "(", "_get_descendant", "(", "root", ",", "shared_param_path", ".", "parent", "(", ")", ")", ")", ":", "\n", "              ", "_set_descendant", "(", "root", ",", "shared_param_path", ",", "list", "(", "shared_val_choices", ")", "[", "0", "]", ")", "\n", "", "", "except", "PathError", ":", "\n", "            ", "pass", "# can happen when the shared path contained a reference, which we don't follow to avoid unwanted effects", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._YamlDeserializer.init_components_bottom_up": [[1267, 1289], ["persistence._traverse_tree_deep_once", "isinstance", "isinstance", "persistence._YamlDeserializer.init_component", "len", "persistence._set_descendant", "persistence._YamlDeserializer.init_component.cache_info", "node.resolve_path", "persistence._YamlDeserializer.init_component", "logger.debug", "persistence._YamlDeserializer.init_component.cache_info", "getattr", "copy.deepcopy"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._traverse_tree_deep_once", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._YamlDeserializer.init_component", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._set_descendant", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Ref.resolve_path", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._YamlDeserializer.init_component"], ["", "", "", "", "", "def", "init_components_bottom_up", "(", "self", ",", "root", ")", ":", "\n", "    ", "for", "path", ",", "node", "in", "_traverse_tree_deep_once", "(", "root", ",", "root", ",", "_TraversalOrder", ".", "ROOT_LAST", ",", "named_paths", "=", "self", ".", "named_paths", ")", ":", "\n", "      ", "if", "isinstance", "(", "node", ",", "Serializable", ")", ":", "\n", "        ", "if", "isinstance", "(", "node", ",", "Ref", ")", ":", "\n", "          ", "hits_before", "=", "self", ".", "init_component", ".", "cache_info", "(", ")", ".", "hits", "\n", "try", ":", "\n", "            ", "resolved_path", "=", "node", ".", "resolve_path", "(", "self", ".", "named_paths", ")", "\n", "initialized_component", "=", "self", ".", "init_component", "(", "resolved_path", ")", "\n", "", "except", "PathError", ":", "\n", "            ", "if", "getattr", "(", "node", ",", "\"default\"", ",", "Ref", ".", "NO_DEFAULT", ")", "==", "Ref", ".", "NO_DEFAULT", ":", "\n", "              ", "initialized_component", "=", "None", "\n", "", "else", ":", "\n", "              ", "initialized_component", "=", "copy", ".", "deepcopy", "(", "node", ".", "default", ")", "\n", "", "", "if", "self", ".", "init_component", ".", "cache_info", "(", ")", ".", "hits", ">", "hits_before", ":", "\n", "            ", "logger", ".", "debug", "(", "f\"for {path}: reusing previously initialized {initialized_component}\"", ")", "\n", "", "", "else", ":", "\n", "          ", "initialized_component", "=", "self", ".", "init_component", "(", "path", ")", "\n", "", "if", "len", "(", "path", ")", "==", "0", ":", "\n", "          ", "root", "=", "initialized_component", "\n", "", "else", ":", "\n", "          ", "_set_descendant", "(", "root", ",", "path", ",", "initialized_component", ")", "\n", "", "", "", "return", "root", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._YamlDeserializer.check_init_param_types": [[1290, 1298], ["persistence._get_init_args_defaults", "persistence.check_type", "ValueError", "type"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._get_init_args_defaults", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.check_type"], ["", "def", "check_init_param_types", "(", "self", ",", "obj", ",", "init_params", ")", ":", "\n", "    ", "for", "init_param_name", "in", "init_params", ":", "\n", "      ", "param_sig", "=", "_get_init_args_defaults", "(", "obj", ")", "\n", "if", "init_param_name", "in", "param_sig", ":", "\n", "        ", "annotated_type", "=", "param_sig", "[", "init_param_name", "]", ".", "annotation", "\n", "if", "annotated_type", "!=", "inspect", ".", "Parameter", ".", "empty", ":", "\n", "          ", "if", "not", "check_type", "(", "init_params", "[", "init_param_name", "]", ",", "annotated_type", ")", ":", "\n", "            ", "raise", "ValueError", "(", "f\"type check failed for '{init_param_name}' argument of {obj}: expected {annotated_type}, received {init_params[init_param_name]} of type {type(init_params[init_param_name])}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._YamlDeserializer.init_component": [[1299, 1328], ["functools.lru_cache", "persistence._get_descendant", "collections.OrderedDict", "collections.OrderedDict", "persistence._get_init_args_defaults", "persistence._YamlDeserializer.check_init_param_types", "isinstance", "persistence._name_children", "xnmt.utils.ReportOnException", "isinstance", "hasattr", "logger.debug", "_get_descendant.__class__", "_get_descendant.__class__", "persistence.ComponentInitError", "id", "dict", "_get_init_args_defaults.keys", "type"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._get_descendant", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._get_init_args_defaults", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._YamlDeserializer.check_init_param_types", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._name_children"], ["", "", "", "", "", "@", "lru_cache", "(", "maxsize", "=", "None", ")", "\n", "def", "init_component", "(", "self", ",", "path", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n      path: path to uninitialized object\n    Returns:\n      initialized object; this method is cached, so multiple requests for the same path will return the exact same object\n    \"\"\"", "\n", "obj", "=", "_get_descendant", "(", "self", ".", "deserialized_yaml", ",", "path", ")", "\n", "if", "not", "isinstance", "(", "obj", ",", "Serializable", ")", "or", "isinstance", "(", "obj", ",", "FormatString", ")", ":", "\n", "      ", "return", "obj", "\n", "", "init_params", "=", "OrderedDict", "(", "_name_children", "(", "obj", ",", "include_reserved", "=", "False", ")", ")", "\n", "init_args", "=", "_get_init_args_defaults", "(", "obj", ")", "\n", "if", "\"yaml_path\"", "in", "init_args", ":", "init_params", "[", "\"yaml_path\"", "]", "=", "path", "\n", "self", ".", "check_init_param_types", "(", "obj", ",", "init_params", ")", "\n", "with", "utils", ".", "ReportOnException", "(", "{", "\"yaml_path\"", ":", "path", "}", ")", ":", "\n", "      ", "try", ":", "\n", "        ", "if", "hasattr", "(", "obj", ",", "\"xnmt_subcol_name\"", ")", ":", "\n", "          ", "initialized_obj", "=", "obj", ".", "__class__", "(", "**", "init_params", ",", "xnmt_subcol_name", "=", "obj", ".", "xnmt_subcol_name", ")", "\n", "", "else", ":", "\n", "          ", "initialized_obj", "=", "obj", ".", "__class__", "(", "**", "init_params", ")", "\n", "", "logger", ".", "debug", "(", "f\"initialized {path}: {obj.__class__.__name__}@{id(obj)}({dict(init_params)})\"", "[", ":", "1000", "]", ")", "\n", "", "except", "TypeError", "as", "e", ":", "\n", "        ", "raise", "ComponentInitError", "(", "f\"An error occurred when calling {type(obj).__name__}.__init__()\\n\"", "\n", "f\" The following arguments were passed: {init_params}\\n\"", "\n", "f\" The following arguments were expected: {init_args.keys()}\\n\"", "\n", "f\" Current path: {path}\\n\"", "\n", "f\" Error message: {e}\"", ")", "\n", "", "", "return", "initialized_obj", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.serializable_init": [[41, 102], ["functools.wraps", "dict", "set", "params.values", "dict.values", "list", "list", "f", "dict.update", "dict.items", "kwargs.pop", "hasattr", "inspect.signature", "len", "enumerate", "dict.items", "isinstance", "dict.items", "getattr", "getattr", "persistence._generate_subcol_name", "copy.deepcopy", "set.add", "persistence.initialize_object", "hasattr", "setattr", "list", "type", "arg.is_required", "copy.deepcopy", "persistence.UninitializedYamlObject", "getattr", "params.values", "type", "type", "arg.get_default", "ValueError", "ValueError", "type", "type"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.MultiTaskTrainingRegimen.update", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._generate_subcol_name", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.initialize_object", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Ref.is_required", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Ref.get_default"], ["def", "serializable_init", "(", "f", ")", ":", "\n", "  ", "@", "wraps", "(", "f", ")", "\n", "def", "wrapper", "(", "obj", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "if", "\"xnmt_subcol_name\"", "in", "kwargs", ":", "\n", "      ", "xnmt_subcol_name", "=", "kwargs", ".", "pop", "(", "\"xnmt_subcol_name\"", ")", "\n", "", "elif", "hasattr", "(", "obj", ",", "\"xnmt_subcol_name\"", ")", ":", "# happens when calling wrapped super() constructors", "\n", "      ", "xnmt_subcol_name", "=", "obj", ".", "xnmt_subcol_name", "\n", "", "else", ":", "\n", "      ", "xnmt_subcol_name", "=", "_generate_subcol_name", "(", "obj", ")", "\n", "", "obj", ".", "xnmt_subcol_name", "=", "xnmt_subcol_name", "\n", "serialize_params", "=", "dict", "(", "kwargs", ")", "\n", "params", "=", "inspect", ".", "signature", "(", "f", ")", ".", "parameters", "\n", "if", "len", "(", "args", ")", ">", "0", ":", "\n", "      ", "param_names", "=", "[", "p", ".", "name", "for", "p", "in", "list", "(", "params", ".", "values", "(", ")", ")", "]", "\n", "assert", "param_names", "[", "0", "]", "==", "\"self\"", "\n", "param_names", "=", "param_names", "[", "1", ":", "]", "\n", "for", "i", ",", "arg", "in", "enumerate", "(", "args", ")", ":", "\n", "        ", "serialize_params", "[", "param_names", "[", "i", "]", "]", "=", "arg", "\n", "", "", "auto_added_defaults", "=", "set", "(", ")", "\n", "for", "param", "in", "params", ".", "values", "(", ")", ":", "\n", "      ", "if", "param", ".", "name", "!=", "\"self\"", "and", "param", ".", "default", "!=", "inspect", ".", "Parameter", ".", "empty", "and", "param", ".", "name", "not", "in", "serialize_params", ":", "\n", "        ", "serialize_params", "[", "param", ".", "name", "]", "=", "copy", ".", "deepcopy", "(", "param", ".", "default", ")", "\n", "auto_added_defaults", ".", "add", "(", "param", ".", "name", ")", "\n", "", "", "for", "arg", "in", "serialize_params", ".", "values", "(", ")", ":", "\n", "      ", "if", "type", "(", "obj", ")", ".", "__name__", "!=", "\"Experiment\"", ":", "\n", "        ", "assert", "type", "(", "arg", ")", ".", "__name__", "!=", "\"ExpGlobal\"", ",", "\"ExpGlobal can no longer be passed directly. Use a reference to its properties instead.\"", "\n", "assert", "type", "(", "arg", ")", ".", "__name__", "!=", "\"ParameterCollection\"", ",", "\"cannot pass dy.ParameterCollection to a Serializable class. \"", "\"Use ParamManager.my_params() from within the Serializable class's __init__() method instead.\"", "\n", "", "", "for", "key", ",", "arg", "in", "list", "(", "serialize_params", ".", "items", "(", ")", ")", ":", "\n", "      ", "if", "isinstance", "(", "arg", ",", "Ref", ")", ":", "\n", "        ", "if", "not", "arg", ".", "is_required", "(", ")", ":", "\n", "          ", "serialize_params", "[", "key", "]", "=", "copy", ".", "deepcopy", "(", "arg", ".", "get_default", "(", ")", ")", "\n", "", "else", ":", "\n", "          ", "if", "key", "in", "auto_added_defaults", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "f\"Required argument '{key}' of {type(obj).__name__}.__init__() was not specified, and {arg} could not be resolved\"", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "f\"Cannot pass a reference as argument; received {serialize_params[key]} in {type(obj).__name__}.__init__()\"", ")", "\n", "", "", "", "", "for", "key", ",", "arg", "in", "list", "(", "serialize_params", ".", "items", "(", ")", ")", ":", "\n", "      ", "if", "getattr", "(", "arg", ",", "\"_is_bare\"", ",", "False", ")", ":", "\n", "        ", "initialized", "=", "initialize_object", "(", "UninitializedYamlObject", "(", "arg", ")", ")", "\n", "assert", "not", "getattr", "(", "initialized", ",", "\"_is_bare\"", ",", "False", ")", "\n", "serialize_params", "[", "key", "]", "=", "initialized", "\n", "", "", "f", "(", "obj", ",", "**", "serialize_params", ")", "\n", "if", "ParamManager", ".", "initialized", "and", "xnmt_subcol_name", "in", "ParamManager", ".", "param_col", ".", "subcols", ":", "\n", "      ", "serialize_params", "[", "\"xnmt_subcol_name\"", "]", "=", "xnmt_subcol_name", "\n", "", "serialize_params", ".", "update", "(", "getattr", "(", "obj", ",", "\"serialize_params\"", ",", "{", "}", ")", ")", "\n", "if", "\"yaml_path\"", "in", "serialize_params", ":", "del", "serialize_params", "[", "\"yaml_path\"", "]", "\n", "obj", ".", "serialize_params", "=", "serialize_params", "\n", "obj", ".", "init_completed", "=", "True", "\n", "# TODO: the below is needed for proper reference creation when saving the model, but should be replaced with", "\n", "# something safer", "\n", "for", "key", ",", "arg", "in", "serialize_params", ".", "items", "(", ")", ":", "\n", "      ", "if", "not", "hasattr", "(", "obj", ",", "key", ")", ":", "\n", "        ", "setattr", "(", "obj", ",", "key", ",", "arg", ")", "\n", "\n", "", "", "", "wrapper", ".", "uses_serializable_init", "=", "True", "\n", "return", "wrapper", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare": [[225, 247], ["class_type.__new__", "isinstance", "kwargs.items", "setattr", "setattr", "setattr"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.FormatString.__new__", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items"], ["def", "bare", "(", "class_type", ":", "Type", "[", "T", "]", ",", "**", "kwargs", ":", "Any", ")", "->", "T", ":", "\n", "  ", "\"\"\"\n  Create an uninitialized object of arbitrary type.\n\n  This is useful to specify XNMT components as default arguments. ``__init__()`` commonly requires DyNet parameters,\n  component referencing, etc., which are not yet set up at the time the default arguments are loaded.\n  In this case, a bare class can be specified with the desired arguments, and will be properly initialized when passed\n  as arguments into a component.\n\n  Args:\n    class_type: class type (must be a subclass of :class:`Serializable`)\n    kwargs: will be passed to class's ``__init__()``\n  Returns:\n    uninitialized object\n  \"\"\"", "\n", "obj", "=", "class_type", ".", "__new__", "(", "class_type", ")", "\n", "assert", "isinstance", "(", "obj", ",", "Serializable", ")", "\n", "for", "key", ",", "val", "in", "kwargs", ".", "items", "(", ")", ":", "\n", "    ", "setattr", "(", "obj", ",", "key", ",", "val", ")", "\n", "", "setattr", "(", "obj", ",", "\"_is_bare\"", ",", "True", ")", "\n", "setattr", "(", "obj", ",", "\"_bare_kwargs\"", ",", "kwargs", ")", "\n", "return", "obj", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._generate_subcol_name": [[456, 460], ["_subcol_rand.getrandbits", "type"], "function", ["None"], ["def", "_generate_subcol_name", "(", "subcol_owner", ")", ":", "\n", "  ", "rand_bits", "=", "_subcol_rand", ".", "getrandbits", "(", "32", ")", "\n", "rand_hex", "=", "\"%008x\"", "%", "rand_bits", "\n", "return", "f\"{type(subcol_owner).__name__}.{rand_hex}\"", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._get_init_args_defaults": [[465, 467], ["inspect.signature"], "function", ["None"], ["def", "_get_init_args_defaults", "(", "obj", ")", ":", "\n", "  ", "return", "inspect", ".", "signature", "(", "obj", ".", "__init__", ")", ".", "parameters", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._check_serializable_args_valid": [[469, 480], ["map", "persistence._get_init_args_defaults", "inspect.getmembers", "inspect.getmembers", "inspect.getmembers", "name.startswith", "ValueError", "list", "type", "_get_init_args_defaults.keys"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._get_init_args_defaults"], ["", "def", "_check_serializable_args_valid", "(", "node", ")", ":", "\n", "  ", "base_arg_names", "=", "map", "(", "lambda", "x", ":", "x", "[", "0", "]", ",", "inspect", ".", "getmembers", "(", "yaml", ".", "YAMLObject", ")", ")", "\n", "class_param_names", "=", "[", "x", "[", "0", "]", "for", "x", "in", "inspect", ".", "getmembers", "(", "node", ".", "__class__", ")", "]", "\n", "init_args", "=", "_get_init_args_defaults", "(", "node", ")", "\n", "items", "=", "{", "key", ":", "val", "for", "(", "key", ",", "val", ")", "in", "inspect", ".", "getmembers", "(", "node", ")", "}", "\n", "for", "name", "in", "items", ":", "\n", "    ", "if", "name", "in", "base_arg_names", "or", "name", "in", "class_param_names", ":", "continue", "\n", "if", "name", ".", "startswith", "(", "\"_\"", ")", "or", "name", "in", "_reserved_arg_names", ":", "continue", "\n", "if", "name", "not", "in", "init_args", ":", "\n", "      ", "raise", "ValueError", "(", "\n", "f\"'{name}' is not a accepted argument of {type(node).__name__}.__init__(). Valid are {list(init_args.keys())}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._name_serializable_children": [[482, 485], ["persistence._name_children"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._name_children"], ["", "", "", "@", "singledispatch", "\n", "def", "_name_serializable_children", "(", "node", ")", ":", "\n", "  ", "return", "_name_children", "(", "node", ",", "include_reserved", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._name_serializable_children_serializable": [[487, 490], ["_name_serializable_children.register", "getattr().items", "getattr"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items"], ["", "@", "_name_serializable_children", ".", "register", "(", "Serializable", ")", "\n", "def", "_name_serializable_children_serializable", "(", "node", ")", ":", "\n", "  ", "return", "getattr", "(", "node", ",", "\"serialize_params\"", ",", "{", "}", ")", ".", "items", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._name_children": [[492, 495], ["None"], "function", ["None"], ["", "@", "singledispatch", "\n", "def", "_name_children", "(", "node", ",", "include_reserved", ")", ":", "\n", "  ", "return", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._name_children_serializable": [[497, 511], ["_name_children.register", "list", "_get_init_args_defaults().keys", "inspect.getmembers", "ret.append", "persistence._get_init_args_defaults"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._get_init_args_defaults"], ["", "@", "_name_children", ".", "register", "(", "Serializable", ")", "\n", "def", "_name_children_serializable", "(", "node", ",", "include_reserved", ")", ":", "\n", "  ", "\"\"\"\n  Returns the specified arguments in the order they appear in the corresponding ``__init__()``\n  \"\"\"", "\n", "init_args", "=", "list", "(", "_get_init_args_defaults", "(", "node", ")", ".", "keys", "(", ")", ")", "\n", "if", "include_reserved", ":", "init_args", "+=", "[", "n", "for", "n", "in", "_reserved_arg_names", "if", "not", "n", "in", "init_args", "]", "\n", "items", "=", "{", "key", ":", "val", "for", "(", "key", ",", "val", ")", "in", "inspect", ".", "getmembers", "(", "node", ")", "}", "\n", "ret", "=", "[", "]", "\n", "for", "name", "in", "init_args", ":", "\n", "    ", "if", "name", "in", "items", ":", "\n", "      ", "val", "=", "items", "[", "name", "]", "\n", "ret", ".", "append", "(", "(", "name", ",", "val", ")", ")", "\n", "", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._name_children_dict": [[513, 516], ["_name_children.register", "node.items"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items"], ["", "@", "_name_children", ".", "register", "(", "dict", ")", "\n", "def", "_name_children_dict", "(", "node", ",", "include_reserved", ")", ":", "\n", "  ", "return", "node", ".", "items", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._name_children_list": [[518, 521], ["_name_children.register", "str", "enumerate"], "function", ["None"], ["", "@", "_name_children", ".", "register", "(", "list", ")", "\n", "def", "_name_children_list", "(", "node", ",", "include_reserved", ")", ":", "\n", "  ", "return", "[", "(", "str", "(", "n", ")", ",", "l", ")", "for", "n", ",", "l", "in", "enumerate", "(", "node", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._name_children_tuple": [[522, 525], ["_name_children.register", "ValueError"], "function", ["None"], ["", "@", "_name_children", ".", "register", "(", "tuple", ")", "\n", "def", "_name_children_tuple", "(", "node", ",", "include_reserved", ")", ":", "\n", "  ", "raise", "ValueError", "(", "f\"Tuples are not serializable, use a list instead. Found this tuple: {node}.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._get_child": [[526, 530], ["getattr", "hasattr", "persistence.PathError"], "function", ["None"], ["", "@", "singledispatch", "\n", "def", "_get_child", "(", "node", ",", "name", ")", ":", "\n", "  ", "if", "not", "hasattr", "(", "node", ",", "name", ")", ":", "raise", "PathError", "(", "f\"{node} has no child named {name}\"", ")", "\n", "return", "getattr", "(", "node", ",", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._get_child_list": [[532, 541], ["_get_child.register", "int", "persistence.PathError", "persistence.PathError", "len", "int"], "function", ["None"], ["", "@", "_get_child", ".", "register", "(", "list", ")", "\n", "def", "_get_child_list", "(", "node", ",", "name", ")", ":", "\n", "  ", "try", ":", "\n", "    ", "name", "=", "int", "(", "name", ")", "\n", "", "except", ":", "\n", "    ", "raise", "PathError", "(", "f\"{node} has no child named {name} (integer expected)\"", ")", "\n", "", "if", "not", "0", "<=", "name", "<", "len", "(", "node", ")", ":", "\n", "    ", "raise", "PathError", "(", "f\"{node} has no child named {name} (index error)\"", ")", "\n", "", "return", "node", "[", "int", "(", "name", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._get_child_dict": [[543, 548], ["_get_child.register", "persistence.PathError", "node.keys"], "function", ["None"], ["", "@", "_get_child", ".", "register", "(", "dict", ")", "\n", "def", "_get_child_dict", "(", "node", ",", "name", ")", ":", "\n", "  ", "if", "not", "name", "in", "node", ".", "keys", "(", ")", ":", "\n", "    ", "raise", "PathError", "(", "f\"{node} has no child named {name} (key error)\"", ")", "\n", "", "return", "node", "[", "name", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._get_child_serializable": [[550, 558], ["_get_child.register", "getattr", "hasattr", "persistence.PathError"], "function", ["None"], ["", "@", "_get_child", ".", "register", "(", "Serializable", ")", "\n", "def", "_get_child_serializable", "(", "node", ",", "name", ")", ":", "\n", "# if hasattr(node, \"serialize_params\"):", "\n", "#   return _get_child(node.serialize_params, name)", "\n", "# else:", "\n", "    ", "if", "not", "hasattr", "(", "node", ",", "name", ")", ":", "\n", "      ", "raise", "PathError", "(", "f\"{node} has no child named {name}\"", ")", "\n", "", "return", "getattr", "(", "node", ",", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._set_child": [[560, 563], ["None"], "function", ["None"], ["", "@", "singledispatch", "\n", "def", "_set_child", "(", "node", ",", "name", ",", "val", ")", ":", "\n", "  ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._set_child_serializable": [[565, 568], ["_set_child.register", "setattr"], "function", ["None"], ["", "@", "_set_child", ".", "register", "(", "Serializable", ")", "\n", "def", "_set_child_serializable", "(", "node", ",", "name", ",", "val", ")", ":", "\n", "  ", "setattr", "(", "node", ",", "name", ",", "val", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._set_child_list": [[570, 583], ["_set_child.register", "len", "int", "persistence.PathError", "len", "node.append", "persistence.PathError", "len", "int"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "@", "_set_child", ".", "register", "(", "list", ")", "\n", "def", "_set_child_list", "(", "node", ",", "name", ",", "val", ")", ":", "\n", "  ", "if", "name", "==", "\"append\"", ":", "name", "=", "len", "(", "node", ")", "\n", "try", ":", "\n", "    ", "name", "=", "int", "(", "name", ")", "\n", "", "except", ":", "\n", "    ", "raise", "PathError", "(", "f\"{node} has no child named {name} (integer expected)\"", ")", "\n", "", "if", "not", "0", "<=", "name", "<", "len", "(", "node", ")", "+", "1", ":", "\n", "    ", "raise", "PathError", "(", "f\"{node} has no child named {name} (index error)\"", ")", "\n", "", "if", "name", "==", "len", "(", "node", ")", ":", "\n", "    ", "node", ".", "append", "(", "val", ")", "\n", "", "else", ":", "\n", "    ", "node", "[", "int", "(", "name", ")", "]", "=", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._set_child_dict": [[585, 588], ["_set_child.register"], "function", ["None"], ["", "", "@", "_set_child", ".", "register", "(", "dict", ")", "\n", "def", "_set_child_dict", "(", "node", ",", "name", ",", "val", ")", ":", "\n", "  ", "node", "[", "name", "]", "=", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._redirect_path_untested": [[590, 605], ["len", "isinstance", "isinstance", "cur_node.get_path", "persistence._redirect_path_untested", "cur_node.get_path().is_relative_path", "cur_node.get_path", "persistence._get_descendant", "path[].add_path", "cur_node.get_path", "persistence._redirect_path_untested", "cur_node.get_path", "path.descend_one", "persistence._get_child"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Ref.get_path", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._redirect_path_untested", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.is_relative_path", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Ref.get_path", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._get_descendant", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.add_path", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Ref.get_path", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._redirect_path_untested", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Ref.get_path", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.descend_one", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._get_child"], ["", "def", "_redirect_path_untested", "(", "path", ",", "root", ",", "cur_node", "=", "None", ")", ":", "\n", "# note: this might become useful in the future, but is not carefully tested, use with care", "\n", "  ", "if", "cur_node", "is", "None", ":", "cur_node", "=", "root", "\n", "if", "len", "(", "path", ")", "==", "0", ":", "\n", "    ", "if", "isinstance", "(", "cur_node", ",", "Ref", ")", ":", "\n", "      ", "return", "cur_node", ".", "get_path", "(", ")", "\n", "", "return", "path", "\n", "", "elif", "isinstance", "(", "cur_node", ",", "Ref", ")", ":", "\n", "    ", "assert", "not", "cur_node", ".", "get_path", "(", ")", ".", "is_relative_path", "(", ")", "\n", "return", "_redirect_path_untested", "(", "cur_node", ".", "get_path", "(", ")", ",", "root", ",", "_get_descendant", "(", "root", ",", "cur_node", ".", "get_path", "(", ")", ")", ")", "\n", "", "else", ":", "\n", "    ", "try", ":", "\n", "      ", "return", "path", "[", ":", "1", "]", ".", "add_path", "(", "_redirect_path_untested", "(", "path", ".", "descend_one", "(", ")", ",", "root", ",", "_get_child", "(", "cur_node", ",", "path", "[", "0", "]", ")", ")", ")", "\n", "", "except", "PathError", ":", "# child does not exist", "\n", "      ", "return", "path", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._get_descendant": [[607, 616], ["len", "isinstance", "node.get_path", "isinstance", "persistence.Ref", "persistence._get_descendant", "persistence.Path", "persistence.Path.add_path", "persistence._get_child", "path.descend_one", "node.get_default"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Ref.get_path", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._get_descendant", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.add_path", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._get_child", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.descend_one", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Ref.get_default"], ["", "", "", "def", "_get_descendant", "(", "node", ",", "path", ",", "redirect", "=", "False", ")", ":", "\n", "  ", "if", "len", "(", "path", ")", "==", "0", ":", "\n", "    ", "return", "node", "\n", "", "elif", "redirect", "and", "isinstance", "(", "node", ",", "Ref", ")", ":", "\n", "    ", "node_path", "=", "node", ".", "get_path", "(", ")", "\n", "if", "isinstance", "(", "node_path", ",", "str", ")", ":", "node_path", "=", "Path", "(", "node_path", ")", "\n", "return", "Ref", "(", "node_path", ".", "add_path", "(", "path", ")", ",", "default", "=", "node", ".", "get_default", "(", ")", ")", "\n", "", "else", ":", "\n", "    ", "return", "_get_descendant", "(", "_get_child", "(", "node", ",", "path", "[", "0", "]", ")", ",", "path", ".", "descend_one", "(", ")", ",", "redirect", "=", "redirect", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._set_descendant": [[618, 625], ["len", "ValueError", "len", "persistence._set_child", "persistence._set_descendant", "persistence._get_child", "path.descend_one"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._set_child", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._set_descendant", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._get_child", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.descend_one"], ["", "", "def", "_set_descendant", "(", "root", ",", "path", ",", "val", ")", ":", "\n", "  ", "if", "len", "(", "path", ")", "==", "0", ":", "\n", "    ", "raise", "ValueError", "(", "\"path was empty\"", ")", "\n", "", "elif", "len", "(", "path", ")", "==", "1", ":", "\n", "    ", "_set_child", "(", "root", ",", "path", "[", "0", "]", ",", "val", ")", "\n", "", "else", ":", "\n", "    ", "_set_descendant", "(", "_get_child", "(", "root", ",", "path", "[", "0", "]", ")", ",", "path", ".", "descend_one", "(", ")", ",", "val", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._traverse_tree": [[632, 642], ["persistence.Path", "persistence._name_children", "persistence._traverse_tree", "path_to_node.append"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._name_children", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._traverse_tree", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "def", "_traverse_tree", "(", "node", ",", "traversal_order", "=", "_TraversalOrder", ".", "ROOT_FIRST", ",", "path_to_node", "=", "Path", "(", ")", ",", "include_root", "=", "True", ")", ":", "\n", "  ", "\"\"\"\n  For each node in the tree, yield a (path, node) tuple\n  \"\"\"", "\n", "if", "include_root", "and", "traversal_order", "==", "_TraversalOrder", ".", "ROOT_FIRST", ":", "\n", "    ", "yield", "path_to_node", ",", "node", "\n", "", "for", "child_name", ",", "child", "in", "_name_children", "(", "node", ",", "include_reserved", "=", "False", ")", ":", "\n", "    ", "yield", "from", "_traverse_tree", "(", "child", ",", "traversal_order", ",", "path_to_node", ".", "append", "(", "child_name", ")", ")", "\n", "", "if", "include_root", "and", "traversal_order", "==", "_TraversalOrder", ".", "ROOT_LAST", ":", "\n", "    ", "yield", "path_to_node", ",", "node", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._traverse_serializable": [[644, 648], ["persistence.Path", "persistence._name_serializable_children", "persistence._traverse_serializable", "path_to_node.append"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._name_serializable_children", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._traverse_serializable", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "", "def", "_traverse_serializable", "(", "root", ",", "path_to_node", "=", "Path", "(", ")", ")", ":", "\n", "  ", "yield", "path_to_node", ",", "root", "\n", "for", "child_name", ",", "child", "in", "_name_serializable_children", "(", "root", ")", ":", "\n", "    ", "yield", "from", "_traverse_serializable", "(", "child", ",", "path_to_node", ".", "append", "(", "child_name", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._traverse_serializable_breadth_first": [[650, 654], ["iter", "persistence._traverse_serializable", "sorted", "enumerate", "len"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._traverse_serializable"], ["", "", "def", "_traverse_serializable_breadth_first", "(", "root", ")", ":", "\n", "  ", "all_nodes", "=", "[", "(", "path", ",", "node", ")", "for", "(", "path", ",", "node", ")", "in", "_traverse_serializable", "(", "root", ")", "]", "\n", "all_nodes", "=", "[", "item", "[", "1", "]", "for", "item", "in", "sorted", "(", "enumerate", "(", "all_nodes", ")", ",", "key", "=", "lambda", "x", ":", "(", "len", "(", "x", "[", "1", "]", "[", "0", "]", ")", ",", "x", "[", "0", "]", ")", ")", "]", "\n", "return", "iter", "(", "all_nodes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._traverse_tree_deep": [[656, 693], ["persistence.Path", "set", "set", "set.add", "isinstance", "id", "id", "cur_node.resolve_path", "persistence._name_children", "persistence._traverse_tree_deep", "persistence._traverse_tree_deep", "persistence._get_descendant", "path_to_node.append"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Ref.resolve_path", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._name_children", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._traverse_tree_deep", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._traverse_tree_deep", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._get_descendant", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "def", "_traverse_tree_deep", "(", "root", ",", "cur_node", ",", "traversal_order", "=", "_TraversalOrder", ".", "ROOT_FIRST", ",", "path_to_node", "=", "Path", "(", ")", ",", "named_paths", "=", "None", ",", "\n", "past_visits", "=", "set", "(", ")", ")", ":", "\n", "  ", "\"\"\"\n  Traverse the tree and descend into references. The returned path is that of the resolved reference.\n\n  Args:\n    root (Serializable):\n    cur_node (Serializable):\n    traversal_order (_TraversalOrder):\n    path_to_node (Path):\n    named_paths (dict):\n    past_visits (set):\n  \"\"\"", "\n", "\n", "# prevent infinite recursion:", "\n", "if", "named_paths", "is", "None", ":", "\n", "    ", "named_paths", "=", "{", "}", "\n", "", "cur_call_sig", "=", "(", "id", "(", "root", ")", ",", "id", "(", "cur_node", ")", ",", "path_to_node", ")", "\n", "if", "cur_call_sig", "in", "past_visits", ":", "return", "\n", "past_visits", "=", "set", "(", "past_visits", ")", "\n", "past_visits", ".", "add", "(", "cur_call_sig", ")", "\n", "\n", "if", "traversal_order", "==", "_TraversalOrder", ".", "ROOT_FIRST", ":", "\n", "    ", "yield", "path_to_node", ",", "cur_node", "\n", "", "if", "isinstance", "(", "cur_node", ",", "Ref", ")", ":", "\n", "    ", "resolved_path", "=", "cur_node", ".", "resolve_path", "(", "named_paths", ")", "\n", "try", ":", "\n", "      ", "yield", "from", "_traverse_tree_deep", "(", "root", ",", "_get_descendant", "(", "root", ",", "resolved_path", ")", ",", "traversal_order", ",", "resolved_path", ",", "\n", "named_paths", ",", "past_visits", "=", "past_visits", ")", "\n", "", "except", "PathError", ":", "\n", "      ", "pass", "\n", "", "", "else", ":", "\n", "    ", "for", "child_name", ",", "child", "in", "_name_children", "(", "cur_node", ",", "include_reserved", "=", "False", ")", ":", "\n", "      ", "yield", "from", "_traverse_tree_deep", "(", "root", ",", "child", ",", "traversal_order", ",", "path_to_node", ".", "append", "(", "child_name", ")", ",", "named_paths", ",", "\n", "past_visits", "=", "past_visits", ")", "\n", "", "", "if", "traversal_order", "==", "_TraversalOrder", ".", "ROOT_LAST", ":", "\n", "    ", "yield", "path_to_node", ",", "cur_node", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._traverse_tree_deep_once": [[695, 708], ["persistence.Path", "set", "persistence._traverse_tree_deep", "set.add", "path.ancestors"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._traverse_tree_deep", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.ancestors"], ["", "", "def", "_traverse_tree_deep_once", "(", "root", ",", "cur_node", ",", "traversal_order", "=", "_TraversalOrder", ".", "ROOT_FIRST", ",", "path_to_node", "=", "Path", "(", ")", ",", "\n", "named_paths", "=", "None", ")", ":", "\n", "  ", "\"\"\"\n  Calls _traverse_tree_deep, but skips over nodes that have been visited before (can happen because we're descending into\n   references).\n  \"\"\"", "\n", "if", "named_paths", "is", "None", ":", "\n", "    ", "named_paths", "=", "{", "}", "\n", "", "yielded_paths", "=", "set", "(", ")", "\n", "for", "path", ",", "node", "in", "_traverse_tree_deep", "(", "root", ",", "cur_node", ",", "traversal_order", ",", "path_to_node", ",", "named_paths", ")", ":", "\n", "    ", "if", "not", "(", "path", ".", "ancestors", "(", ")", "&", "yielded_paths", ")", ":", "\n", "      ", "yielded_paths", ".", "add", "(", "path", ")", "\n", "yield", "(", "path", ",", "node", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._get_named_paths": [[710, 719], ["persistence._traverse_tree", "persistence._get_child", "ValueError", "persistence._name_children"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._traverse_tree", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._get_child", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._name_children"], ["", "", "", "def", "_get_named_paths", "(", "root", ")", ":", "\n", "  ", "d", "=", "{", "}", "\n", "for", "path", ",", "node", "in", "_traverse_tree", "(", "root", ")", ":", "\n", "    ", "if", "\"_xnmt_id\"", "in", "[", "name", "for", "(", "name", ",", "_", ")", "in", "_name_children", "(", "node", ",", "include_reserved", "=", "True", ")", "]", ":", "\n", "      ", "xnmt_id", "=", "_get_child", "(", "node", ",", "\"_xnmt_id\"", ")", "\n", "if", "xnmt_id", "in", "d", ":", "\n", "        ", "raise", "ValueError", "(", "f\"_xnmt_id {xnmt_id} was specified multiple times!\"", ")", "\n", "", "d", "[", "xnmt_id", "]", "=", "path", "\n", "", "", "return", "d", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._init_fs_representer": [[748, 750], ["dumper.represent_mapping"], "function", ["None"], ["", "", "def", "_init_fs_representer", "(", "dumper", ",", "obj", ")", ":", "\n", "  ", "return", "dumper", ".", "represent_mapping", "(", "'!SavedFormatString'", ",", "{", "\"value\"", ":", "obj", ".", "value", ",", "\"unformatted_value\"", ":", "obj", ".", "serialize_as", "}", ")", "\n", "# return dumper.represent_data(SavedFormatString(value=obj.value, unformatted_value=obj.serialize_as))", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._resolve_serialize_refs": [[1329, 1375], ["set", "persistence._traverse_serializable", "set", "set", "persistence._traverse_serializable", "isinstance", "RuntimeError", "set.add", "isinstance", "set", "isinstance", "id", "hasattr", "ValueError", "dict", "isinstance", "path_trg.ancestors", "persistence._traverse_serializable", "id", "list", "id", "id", "id", "persistence.Ref", "persistence._get_descendant", "persistence._set_descendant", "isinstance", "set.add", "set.add", "path_src.parent", "persistence.Path", "isinstance", "persistence._get_descendant", "id", "id", "persistence._get_descendant", "path_src.parent().parent", "path_src.parent().parent", "id", "path_src.parent", "id", "path_src.parent"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._traverse_serializable", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._traverse_serializable", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.ancestors", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._traverse_serializable", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._get_descendant", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._set_descendant", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.parent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._get_descendant", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._get_descendant", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.parent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.parent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.parent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.parent"], ["", "", "def", "_resolve_serialize_refs", "(", "root", ")", ":", "\n", "  ", "all_serializable", "=", "set", "(", ")", "# for DyNet param check", "\n", "\n", "# gather all non-basic types (Serializable, list, dict) in the global dictionary xnmt.resolved_serialize_params", "\n", "for", "_", ",", "node", "in", "_traverse_serializable", "(", "root", ")", ":", "\n", "    ", "if", "isinstance", "(", "node", ",", "Serializable", ")", ":", "\n", "      ", "all_serializable", ".", "add", "(", "id", "(", "node", ")", ")", "\n", "if", "not", "hasattr", "(", "node", ",", "\"serialize_params\"", ")", ":", "\n", "        ", "raise", "ValueError", "(", "f\"Cannot serialize node that has no serialize_params attribute: {node}\\n\"", "\n", "\"Did you forget to wrap the __init__() in @serializable_init ?\"", ")", "\n", "", "xnmt", ".", "resolved_serialize_params", "[", "id", "(", "node", ")", "]", "=", "node", ".", "serialize_params", "\n", "", "elif", "isinstance", "(", "node", ",", "collections", ".", "abc", ".", "MutableMapping", ")", ":", "\n", "      ", "xnmt", ".", "resolved_serialize_params", "[", "id", "(", "node", ")", "]", "=", "dict", "(", "node", ")", "\n", "", "elif", "isinstance", "(", "node", ",", "collections", ".", "abc", ".", "MutableSequence", ")", ":", "\n", "      ", "xnmt", ".", "resolved_serialize_params", "[", "id", "(", "node", ")", "]", "=", "list", "(", "node", ")", "\n", "\n", "", "", "if", "not", "set", "(", "id", "(", "o", ")", "for", "o", "in", "ParamManager", ".", "param_col", ".", "all_subcol_owners", ")", "<=", "all_serializable", ":", "\n", "    ", "raise", "RuntimeError", "(", "f\"Not all registered DyNet parameter collections written out. \"", "\n", "f\"Missing: {ParamManager.param_col.all_subcol_owners - all_serializable}.\\n\"", "\n", "f\"This indicates that potentially not all components adhere to the protocol of using \"", "\n", "f\"Serializable.add_serializable_component() for creating serializable sub-components.\"", ")", "\n", "\n", "", "refs_inserted_at", "=", "set", "(", ")", "\n", "refs_inserted_to", "=", "set", "(", ")", "\n", "for", "path_trg", ",", "node_trg", "in", "_traverse_serializable", "(", "root", ")", ":", "# loop potential reference targets", "\n", "    ", "if", "not", "refs_inserted_at", "&", "path_trg", ".", "ancestors", "(", ")", ":", "# skip target if it or its ancestor has already been replaced by a reference", "\n", "      ", "if", "isinstance", "(", "node_trg", ",", "Serializable", ")", ":", "\n", "        ", "for", "path_src", ",", "node_src", "in", "_traverse_serializable", "(", "root", ")", ":", "# loop potential nodes that should be replaced by a reference to the current target", "\n", "          ", "if", "not", "path_src", "in", "refs_inserted_to", ":", "# don't replace by reference if someone is pointing to this node already", "\n", "            ", "if", "path_src", "!=", "path_trg", "and", "node_src", "is", "node_trg", ":", "# don't reference to self", "\n", "# now we're ready to create a reference from node_src to node_trg (node_src will be replaced, node_trg remains unchanged)", "\n", "              ", "ref", "=", "Ref", "(", "path", "=", "path_trg", ")", "\n", "xnmt", ".", "resolved_serialize_params", "[", "id", "(", "ref", ")", "]", "=", "ref", ".", "serialize_params", "# make sure the reference itself can be properly serialized", "\n", "\n", "src_node_parent", "=", "_get_descendant", "(", "root", ",", "path_src", ".", "parent", "(", ")", ")", "\n", "src_node_parent_serialize_params", "=", "xnmt", ".", "resolved_serialize_params", "[", "id", "(", "src_node_parent", ")", "]", "\n", "_set_descendant", "(", "src_node_parent_serialize_params", ",", "Path", "(", "path_src", "[", "-", "1", "]", ")", ",", "ref", ")", "\n", "if", "isinstance", "(", "src_node_parent", ",", "(", "collections", ".", "abc", ".", "MutableMapping", ",", "collections", ".", "abc", ".", "MutableSequence", ")", ")", ":", "\n", "                ", "assert", "isinstance", "(", "_get_descendant", "(", "root", ",", "path_src", ".", "parent", "(", ")", ".", "parent", "(", ")", ")", ",", "Serializable", ")", ",", "\"resolving references inside nested lists/dicts is not yet implemented\"", "\n", "src_node_grandparent", "=", "_get_descendant", "(", "root", ",", "path_src", ".", "parent", "(", ")", ".", "parent", "(", ")", ")", "\n", "src_node_parent_name", "=", "path_src", "[", "-", "2", "]", "\n", "xnmt", ".", "resolved_serialize_params", "[", "id", "(", "src_node_grandparent", ")", "]", "[", "src_node_parent_name", "]", "=", "xnmt", ".", "resolved_serialize_params", "[", "id", "(", "src_node_parent", ")", "]", "\n", "", "refs_inserted_at", ".", "add", "(", "path_src", ")", "\n", "refs_inserted_to", ".", "add", "(", "path_trg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._dump": [[1376, 1382], ["persistence._resolve_serialize_refs", "yaml.dump", "xnmt.resolved_serialize_params.clear", "len"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._resolve_serialize_refs", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.clear"], ["", "", "", "", "", "", "", "def", "_dump", "(", "ser_obj", ")", ":", "\n", "  ", "assert", "len", "(", "xnmt", ".", "resolved_serialize_params", ")", "==", "0", "\n", "_resolve_serialize_refs", "(", "ser_obj", ")", "\n", "ret", "=", "yaml", ".", "dump", "(", "ser_obj", ")", "\n", "xnmt", ".", "resolved_serialize_params", ".", "clear", "(", ")", "\n", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.save_to_file": [[1383, 1397], ["os.path.dirname", "os.makedirs", "open", "f.write", "xnmt.param_collections.ParamManager.param_col.save", "os.path.exists", "persistence._dump"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.write", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamCollection.save", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence._dump"], ["", "def", "save_to_file", "(", "fname", ":", "str", ",", "mod", ":", "Any", ")", "->", "None", ":", "\n", "  ", "\"\"\"\n  Save a component hierarchy and corresponding DyNet parameter collection to disk.\n\n  Args:\n    fname: Filename to save to.\n    mod: Component hierarchy.\n  \"\"\"", "\n", "dirname", "=", "os", ".", "path", ".", "dirname", "(", "fname", ")", "\n", "if", "dirname", "and", "not", "os", ".", "path", ".", "exists", "(", "dirname", ")", ":", "\n", "    ", "os", ".", "makedirs", "(", "dirname", ")", "\n", "", "with", "open", "(", "fname", ",", "'w'", ")", "as", "f", ":", "\n", "    ", "f", ".", "write", "(", "_dump", "(", "mod", ")", ")", "\n", "param_collections", ".", "ParamManager", ".", "param_col", ".", "save", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.initialize_if_needed": [[1399, 1412], ["persistence._YamlDeserializer.initialize_if_needed", "persistence._YamlDeserializer"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.initialize_if_needed"], ["", "", "def", "initialize_if_needed", "(", "root", ":", "Union", "[", "Any", ",", "UninitializedYamlObject", "]", ")", "->", "Any", ":", "\n", "  ", "\"\"\"\n  Initialize if obj has not yet been initialized.\n\n  This includes parameter sharing and resolving of references.\n\n  Args:\n    root: object to be potentially serialized\n\n  Returns:\n    initialized object\n  \"\"\"", "\n", "return", "_YamlDeserializer", "(", ")", ".", "initialize_if_needed", "(", "root", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.initialize_object": [[1413, 1426], ["persistence._YamlDeserializer.initialize_object", "persistence._YamlDeserializer"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.initialize_object"], ["", "def", "initialize_object", "(", "root", ":", "UninitializedYamlObject", ")", "->", "Any", ":", "\n", "  ", "\"\"\"\n  Initialize an uninitialized object.\n\n  This includes parameter sharing and resolving of references.\n\n  Args:\n    root: object to be serialized\n\n  Returns:\n    initialized object\n  \"\"\"", "\n", "return", "_YamlDeserializer", "(", ")", ".", "initialize_object", "(", "root", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.check_type": [[1432, 1490], ["isinstance", "isinstance", "any", "type", "type", "any", "issubclass", "issubclass", "isinstance", "persistence.check_type", "isinstance", "all", "all", "all", "isinstance", "persistence.check_type", "persistence.check_type", "persistence.check_type", "persistence.check_type", "all", "obj.keys", "obj.values", "len", "len", "persistence.check_type", "range", "len"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.check_type", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.check_type", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.check_type", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.check_type", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.check_type", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.check_type"], ["", "def", "check_type", "(", "obj", ",", "desired_type", ")", ":", "\n", "  ", "\"\"\"\n  Checks argument types using isinstance, or some custom logic if type hints from the 'typing' module are given.\n\n  Regarding type hints, only a few major ones are supported. This should cover almost everything that would be expected\n  in a YAML config file, but might miss a few special cases.\n  For unsupported types, this function evaluates to True.\n  Most notably, forward references such as 'SomeType' (with apostrophes around the type) are not supported.\n  Note  also that typing.Tuple is among the unsupported types because tuples aren't supported by the XNMT serializer.\n\n  Args:\n    obj: object whose type to check\n    desired_type: desired type of obj\n\n  Returns:\n    False if types don't match or desired_type is unsupported, True otherwise.\n  \"\"\"", "\n", "try", ":", "\n", "    ", "if", "isinstance", "(", "obj", ",", "desired_type", ")", ":", "return", "True", "\n", "if", "isinstance", "(", "obj", ",", "Serializable", ")", ":", "# handle some special issues, probably caused by inconsistent imports:", "\n", "      ", "if", "obj", ".", "__class__", ".", "__name__", "==", "desired_type", ".", "__name__", "or", "any", "(", "\n", "base", ".", "__name__", "==", "desired_type", ".", "__name__", "for", "base", "in", "obj", ".", "__class__", ".", "__bases__", ")", ":", "\n", "        ", "return", "True", "\n", "", "", "return", "False", "\n", "", "except", "TypeError", ":", "\n", "    ", "if", "type", "(", "desired_type", ")", "==", "str", ":", "return", "True", "# don't support forward type references", "\n", "if", "desired_type", ".", "__class__", ".", "__name__", "==", "\"_Any\"", ":", "\n", "      ", "return", "True", "\n", "", "elif", "desired_type", "==", "type", "(", "None", ")", ":", "\n", "      ", "return", "obj", "is", "None", "\n", "", "elif", "desired_type", ".", "__class__", ".", "__name__", "==", "\"_Union\"", ":", "\n", "      ", "return", "any", "(", "\n", "subtype", ".", "__class__", ".", "__name__", "==", "\"_ForwardRef\"", "or", "check_type", "(", "obj", ",", "subtype", ")", "for", "subtype", "in", "desired_type", ".", "__args__", ")", "\n", "", "elif", "issubclass", "(", "desired_type", ",", "collections", ".", "abc", ".", "MutableMapping", ")", ":", "\n", "      ", "if", "not", "isinstance", "(", "obj", ",", "collections", ".", "abc", ".", "MutableMapping", ")", ":", "return", "False", "\n", "if", "desired_type", ".", "__args__", ":", "\n", "        ", "return", "(", "desired_type", ".", "__args__", "[", "0", "]", ".", "__class__", ".", "__name__", "==", "\"_ForwardRef\"", "or", "all", "(", "\n", "check_type", "(", "key", ",", "desired_type", ".", "__args__", "[", "0", "]", ")", "for", "key", "in", "obj", ".", "keys", "(", ")", ")", ")", "and", "(", "\n", "desired_type", ".", "__args__", "[", "1", "]", ".", "__class__", ".", "__name__", "==", "\"_ForwardRef\"", "or", "all", "(", "\n", "check_type", "(", "val", ",", "desired_type", ".", "__args__", "[", "1", "]", ")", "for", "val", "in", "obj", ".", "values", "(", ")", ")", ")", "\n", "", "else", ":", "return", "True", "\n", "", "elif", "issubclass", "(", "desired_type", ",", "collections", ".", "abc", ".", "Sequence", ")", ":", "\n", "      ", "if", "not", "isinstance", "(", "obj", ",", "collections", ".", "abc", ".", "Sequence", ")", ":", "return", "False", "\n", "if", "desired_type", ".", "__args__", "and", "desired_type", ".", "__args__", "[", "0", "]", ".", "__class__", ".", "__name__", "!=", "\"_ForwardRef\"", ":", "\n", "        ", "return", "all", "(", "check_type", "(", "item", ",", "desired_type", ".", "__args__", "[", "0", "]", ")", "for", "item", "in", "obj", ")", "\n", "", "else", ":", "return", "True", "\n", "", "elif", "desired_type", ".", "__class__", ".", "__name__", "==", "\"TupleMeta\"", ":", "\n", "      ", "if", "not", "isinstance", "(", "obj", ",", "tuple", ")", ":", "return", "False", "\n", "if", "desired_type", ".", "__args__", ":", "\n", "        ", "if", "desired_type", ".", "__args__", "[", "-", "1", "]", "is", "...", ":", "\n", "          ", "return", "desired_type", ".", "__args__", "[", "0", "]", ".", "__class__", ".", "__name__", "==", "\"_ForwardRef\"", "or", "check_type", "(", "obj", "[", "0", "]", ",", "\n", "desired_type", ".", "__args__", "[", "0", "]", ")", "\n", "", "else", ":", "\n", "          ", "return", "len", "(", "obj", ")", "==", "len", "(", "desired_type", ".", "__args__", ")", "and", "all", "(", "\n", "desired_type", ".", "__args__", "[", "i", "]", ".", "__class__", ".", "__name__", "==", "\"_ForwardRef\"", "or", "check_type", "(", "obj", "[", "i", "]", ",", "desired_type", ".", "__args__", "[", "i", "]", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "obj", ")", ")", ")", "\n", "", "", "else", ":", "return", "True", "\n", "", "return", "True", "# case of unsupported types: return True", "\n", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.utils.RollingStatistic.__init__": [[63, 69], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "window_size", "=", "100", ")", ":", "\n", "    ", "self", ".", "N", "=", "window_size", "\n", "self", ".", "average", "=", "None", "\n", "self", ".", "variance", "=", "None", "\n", "self", ".", "stddev", "=", "None", "\n", "self", ".", "vals", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.utils.RollingStatistic.update": [[70, 92], ["utils.RollingStatistic.vals.append", "len", "numpy.average", "numpy.var", "math.sqrt", "len", "utils.RollingStatistic.vals.pop", "math.sqrt", "len", "xnmt.logger.warn", "numpy.var", "math.sqrt"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "def", "update", "(", "self", ",", "new", ")", ":", "\n", "    ", "self", ".", "vals", ".", "append", "(", "new", ")", "\n", "if", "len", "(", "self", ".", "vals", ")", "==", "self", ".", "N", ":", "\n", "      ", "self", ".", "average", "=", "np", ".", "average", "(", "self", ".", "vals", ")", "\n", "self", ".", "variance", "=", "np", ".", "var", "(", "self", ".", "vals", ")", "\n", "self", ".", "stddev", "=", "math", ".", "sqrt", "(", "self", ".", "variance", ")", "\n", "", "elif", "len", "(", "self", ".", "vals", ")", "==", "self", ".", "N", "+", "1", ":", "\n", "      ", "old", "=", "self", ".", "vals", ".", "pop", "(", "0", ")", "\n", "oldavg", "=", "self", ".", "average", "\n", "newavg", "=", "oldavg", "+", "(", "new", "-", "old", ")", "/", "self", ".", "N", "\n", "self", ".", "average", "=", "newavg", "\n", "self", ".", "variance", "+=", "(", "new", "-", "old", ")", "*", "(", "new", "-", "newavg", "+", "old", "-", "oldavg", ")", "/", "(", "self", ".", "N", "-", "1", ")", "\n", "try", ":", "\n", "        ", "self", ".", "stddev", "=", "math", ".", "sqrt", "(", "self", ".", "variance", ")", "\n", "", "except", "ValueError", ":", "\n", "        ", "logger", ".", "warn", "(", "\"rolling stddev: numerical issues?\"", ")", "\n", "# switch to more expensive full computation", "\n", "self", ".", "variance", "=", "np", ".", "var", "(", "self", ".", "vals", ")", "\n", "self", ".", "stddev", "=", "math", ".", "sqrt", "(", "self", ".", "variance", ")", "\n", "\n", "", "", "else", ":", "\n", "      ", "assert", "len", "(", "self", ".", "vals", ")", "<", "self", ".", "N", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.utils.ReportOnException.__init__": [[100, 102], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "args", ":", "dict", ")", ":", "\n", "    ", "self", ".", "args", "=", "args", "\n", "", "def", "__enter__", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.utils.ReportOnException.__enter__": [[102, 104], ["None"], "methods", ["None"], ["", "def", "__enter__", "(", "self", ")", ":", "\n", "    ", "return", "self", "\n", "", "def", "__exit__", "(", "self", ",", "et", ",", "ev", ",", "traceback", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.utils.ReportOnException.__exit__": [[104, 113], ["xnmt.logger.error", "utils.ReportOnException.args.items", "xnmt.logger.error", "callable", "val", "xnmt.logger.error", "str"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items"], ["", "def", "__exit__", "(", "self", ",", "et", ",", "ev", ",", "traceback", ")", ":", "\n", "    ", "if", "et", "is", "not", "None", ":", "# exception occurred", "\n", "      ", "logger", ".", "error", "(", "\"------ Error Report ------\"", ")", "\n", "for", "key", ",", "val", "in", "self", ".", "args", ".", "items", "(", ")", ":", "\n", "        ", "logger", ".", "error", "(", "f\"*** {key} ***\"", ")", "\n", "if", "callable", "(", "val", ")", ":", "\n", "          ", "val", "(", ")", "\n", "", "else", ":", "\n", "          ", "logger", ".", "error", "(", "str", "(", "val", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.utils.ArgClass.__init__": [[120, 122], ["setattr"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "    ", "for", "key", "in", "kwargs", ":", "setattr", "(", "self", ",", "key", ",", "kwargs", "[", "key", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.utils.print_cg_conditional": [[14, 17], ["dynet.print_text_graphviz"], "function", ["None"], ["def", "print_cg_conditional", "(", ")", ":", "\n", "  ", "if", "settings", ".", "PRINT_CG_ON_ERROR", ":", "\n", "    ", "dy", ".", "print_text_graphviz", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.utils.make_parent_dir": [[18, 25], ["os.path.exists", "os.makedirs", "os.path.dirname", "os.path.dirname"], "function", ["None"], ["", "", "def", "make_parent_dir", "(", "filename", ")", ":", "\n", "  ", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "dirname", "(", "filename", ")", "or", "\".\"", ")", ":", "\n", "    ", "try", ":", "\n", "      ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "dirname", "(", "filename", ")", ")", "\n", "", "except", "OSError", "as", "exc", ":", "# Guard against race condition", "\n", "      ", "if", "exc", ".", "errno", "!=", "os", ".", "errno", ".", "EEXIST", ":", "\n", "        ", "raise", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.utils.valid_filename": [[29, 38], ["unicodedata.normalize().encode().decode", "filename.replace.replace", "unicodedata.normalize().encode", "unicodedata.normalize"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.base.normalize"], ["def", "valid_filename", "(", "filename", ",", "whitelist", "=", "_valid_filename_chars", ",", "replace", "=", "' '", ")", ":", "\n", "# from https://gist.github.com/wassname/1393c4a57cfcbf03641dbc31886123b8", "\n", "# replace spaces", "\n", "  ", "for", "r", "in", "replace", ":", "\n", "    ", "filename", "=", "filename", ".", "replace", "(", "r", ",", "'_'", ")", "\n", "# keep only valid ascii chars", "\n", "", "cleaned_filename", "=", "unicodedata", ".", "normalize", "(", "'NFKD'", ",", "filename", ")", ".", "encode", "(", "'ASCII'", ",", "'ignore'", ")", ".", "decode", "(", ")", "\n", "# keep only whitelisted chars", "\n", "return", "''", ".", "join", "(", "c", "for", "c", "in", "cleaned_filename", "if", "c", "in", "whitelist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.utils.format_time": [[39, 42], ["time.strftime", "int", "time.gmtime"], "function", ["None"], ["", "def", "format_time", "(", "seconds", ")", ":", "\n", "  ", "return", "\"{}-{}\"", ".", "format", "(", "int", "(", "seconds", ")", "//", "86400", ",", "\n", "time", ".", "strftime", "(", "\"%H:%M:%S\"", ",", "time", ".", "gmtime", "(", "seconds", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.utils.log_readable_and_tensorboard": [[43, 55], ["dict", "dict.update", "xnmt.logger.info", "tensorboard_writer.add_scalars", "template.format"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.MultiTaskTrainingRegimen.update", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.TensorboardCustomWriter.add_scalars", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.YamlFormatter.format"], ["", "def", "log_readable_and_tensorboard", "(", "template", ",", "args", ",", "n_iter", ",", "data_name", ",", "task_name", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "  ", "log_args", "=", "dict", "(", "args", ")", "\n", "log_args", "[", "\"data_name\"", "]", "=", "data_name", "\n", "log_args", "[", "\"epoch\"", "]", "=", "n_iter", "\n", "log_args", ".", "update", "(", "kwargs", ")", "\n", "if", "task_name", ":", "log_args", "[", "\"task_name\"", "]", "=", "task_name", "\n", "logger", ".", "info", "(", "template", ".", "format", "(", "**", "log_args", ")", ",", "extra", "=", "log_args", ")", "\n", "\n", "from", "xnmt", ".", "tee", "import", "tensorboard_writer", "\n", "tensorboard_writer", ".", "add_scalars", "(", "f\"{task_name}/{data_name}\"", "if", "task_name", "else", "data_name", ",", "\n", "args", ",", "\n", "n_iter", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.utils.cached_file_lines": [[123, 128], ["functools.lru_cache", "open", "f.readlines"], "function", ["None"], ["", "", "@", "functools", ".", "lru_cache", "(", ")", "\n", "def", "cached_file_lines", "(", "file_name", ")", ":", "\n", "  ", "with", "open", "(", "file_name", ")", "as", "f", ":", "\n", "    ", "ret", "=", "f", ".", "readlines", "(", ")", "\n", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.utils.add_dynet_argparse": [[129, 140], ["argparser.add_argument", "argparser.add_argument", "argparser.add_argument", "argparser.add_argument", "argparser.add_argument", "argparser.add_argument", "argparser.add_argument", "argparser.add_argument", "argparser.add_argument", "argparser.add_argument"], "function", ["None"], ["", "def", "add_dynet_argparse", "(", "argparser", ")", ":", "\n", "  ", "argparser", ".", "add_argument", "(", "\"--dynet-mem\"", ",", "type", "=", "str", ")", "\n", "argparser", ".", "add_argument", "(", "\"--dynet-seed\"", ",", "type", "=", "int", ",", "help", "=", "\"set random seed for DyNet and XNMT.\"", ")", "\n", "argparser", ".", "add_argument", "(", "\"--dynet-autobatch\"", ",", "type", "=", "int", ")", "\n", "argparser", ".", "add_argument", "(", "\"--dynet-devices\"", ",", "type", "=", "str", ")", "\n", "argparser", ".", "add_argument", "(", "\"--dynet-viz\"", ",", "action", "=", "'store_true'", ",", "help", "=", "\"use visualization\"", ")", "\n", "argparser", ".", "add_argument", "(", "\"--dynet-gpu\"", ",", "action", "=", "'store_true'", ",", "help", "=", "\"use GPU acceleration\"", ")", "\n", "argparser", ".", "add_argument", "(", "\"--dynet-gpu-ids\"", ",", "type", "=", "int", ")", "\n", "argparser", ".", "add_argument", "(", "\"--dynet-gpus\"", ",", "type", "=", "int", ")", "\n", "argparser", ".", "add_argument", "(", "\"--dynet-weight-decay\"", ",", "type", "=", "float", ")", "\n", "argparser", ".", "add_argument", "(", "\"--dynet-profiling\"", ",", "type", "=", "int", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.utils.has_cython": [[141, 147], ["None"], "function", ["None"], ["", "def", "has_cython", "(", ")", ":", "\n", "  ", "try", ":", "\n", "    ", "from", "xnmt", ".", "cython", "import", "xnmt_cython", "\n", "return", "True", "\n", "", "except", ":", "\n", "    ", "return", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.ReportInfo.__init__": [[43, 46], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "sent_info", "=", "[", "]", ",", "glob_info", "=", "{", "}", ")", ":", "\n", "    ", "self", ".", "sent_info", "=", "sent_info", "\n", "self", ".", "glob_info", "=", "glob_info", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.Reportable.__init__": [[62, 65], ["None"], "methods", ["None"], ["@", "register_xnmt_handler", "\n", "def", "__init__", "(", "self", ")", "->", "None", ":", "\n", "    ", "self", ".", "_sent_info_list", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.Reportable.report_sent_info": [[66, 79], ["reports.Reportable._sent_info_list.append", "hasattr"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "def", "report_sent_info", "(", "self", ",", "sent_info", ":", "Dict", "[", "str", ",", "Any", "]", ")", "->", "None", ":", "\n", "    ", "\"\"\"\n    Add key/value pairs belonging to the current sentence for reporting.\n\n    This should be called consistently for every sentence and in order.\n\n    Args:\n      sent_info: A dictionary of key/value pairs. The keys must match (be a subset of) the arguments in the reporter's\n                 ``create_sent_report()`` method, and the values must be of the corresponding types.\n    \"\"\"", "\n", "if", "not", "hasattr", "(", "self", ",", "\"_sent_info_list\"", ")", ":", "\n", "      ", "self", ".", "_sent_info_list", "=", "[", "]", "\n", "", "self", ".", "_sent_info_list", ".", "append", "(", "sent_info", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.Reportable.report_corpus_info": [[80, 91], ["reports.Reportable._glob_info_list.update", "hasattr"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.MultiTaskTrainingRegimen.update"], ["", "def", "report_corpus_info", "(", "self", ",", "glob_info", ":", "Dict", "[", "str", ",", "Any", "]", ")", "->", "None", ":", "\n", "    ", "\"\"\"\n    Add key/value pairs for reporting that are relevant to all reported sentences.\n\n    Args:\n      glob_info: A dictionary of key/value pairs. The keys must match (be a subset of) the arguments in the reporter's\n                 ``create_sent_report()`` method, and the values must be of the corresponding types.\n    \"\"\"", "\n", "if", "not", "hasattr", "(", "self", ",", "\"_glob_info_list\"", ")", ":", "\n", "      ", "self", ".", "_glob_info_list", "=", "{", "}", "\n", "", "self", ".", "_glob_info_list", ".", "update", "(", "glob_info", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.Reportable.on_get_report_input": [[92, 107], ["reports.ReportInfo", "hasattr", "zip", "reports.Reportable._sent_info_list.clear", "context.glob_info.update", "hasattr", "len", "range", "context_i.update", "len", "len", "len", "context.sent_info.append"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.clear", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.MultiTaskTrainingRegimen.update", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.MultiTaskTrainingRegimen.update", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "@", "handle_xnmt_event", "\n", "def", "on_get_report_input", "(", "self", ",", "context", "=", "ReportInfo", "(", ")", ")", ":", "\n", "    ", "if", "hasattr", "(", "self", ",", "\"_glob_info_list\"", ")", ":", "\n", "      ", "context", ".", "glob_info", ".", "update", "(", "self", ".", "_glob_info_list", ")", "\n", "", "if", "not", "hasattr", "(", "self", ",", "\"_sent_info_list\"", ")", ":", "\n", "      ", "return", "context", "\n", "", "if", "len", "(", "context", ".", "sent_info", ")", ">", "0", ":", "\n", "      ", "assert", "len", "(", "context", ".", "sent_info", ")", "==", "len", "(", "self", ".", "_sent_info_list", ")", "\n", "", "else", ":", "\n", "      ", "context", ".", "sent_info", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "len", "(", "self", ".", "_sent_info_list", ")", ")", ":", "context", ".", "sent_info", ".", "append", "(", "{", "}", ")", "\n", "", "for", "context_i", ",", "sent_i", "in", "zip", "(", "context", ".", "sent_info", ",", "self", ".", "_sent_info_list", ")", ":", "\n", "      ", "context_i", ".", "update", "(", "sent_i", ")", "\n", "", "self", ".", "_sent_info_list", ".", "clear", "(", ")", "\n", "return", "context", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.Reporter.create_sent_report": [[112, 123], ["NotImplementedError"], "methods", ["None"], ["def", "create_sent_report", "(", "self", ",", "**", "kwargs", ")", "->", "None", ":", "\n", "    ", "\"\"\"\n    Create the report.\n\n    The reporter should specify the arguments it needs explicitly, and should specify ``kwargs`` in addition to handle\n    extra (unused) arguments without crashing.\n\n    Args:\n      **kwargs: additional arguments\n    \"\"\"", "\n", "raise", "NotImplementedError", "(", "\"must be implemented by subclasses\"", ")", "\n", "", "def", "conclude_report", "(", "self", ")", "->", "None", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.Reporter.conclude_report": [[123, 125], ["NotImplementedError"], "methods", ["None"], ["", "def", "conclude_report", "(", "self", ")", "->", "None", ":", "\n", "    ", "raise", "NotImplementedError", "(", "\"must be implemented by subclasses\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.ReferenceDiffReporter.__init__": [[138, 148], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "@", "register_xnmt_handler", "\n", "def", "__init__", "(", "self", ",", "\n", "match_size", ":", "numbers", ".", "Integral", "=", "3", ",", "\n", "alt_norm", ":", "bool", "=", "False", ",", "\n", "report_path", ":", "str", "=", "settings", ".", "DEFAULT_REPORT_PATH", ")", "->", "None", ":", "\n", "    ", "self", ".", "match_size", "=", "match_size", "\n", "self", ".", "alt_norm", "=", "alt_norm", "\n", "self", ".", "report_path", "=", "report_path", "\n", "self", ".", "hyp_sents", ",", "self", ".", "ref_sents", ",", "self", ".", "src_sents", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.ReferenceDiffReporter.create_sent_report": [[149, 166], ["output.sent_str", "isinstance", "reports.ReferenceDiffReporter.hyp_sents.append", "reports.ReferenceDiffReporter.ref_sents.append", "xnmt.utils.cached_file_lines", "src.sent_str", "reports.ReferenceDiffReporter.src_sents.append"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.NbestSentence.sent_str", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.utils.cached_file_lines", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.NbestSentence.sent_str", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "def", "create_sent_report", "(", "self", ",", "src", ":", "sent", ".", "Sentence", ",", "output", ":", "sent", ".", "ReadableSentence", ",", "ref_file", ":", "str", "=", "None", ",", "**", "kwargs", ")", "->", "None", ":", "\n", "    ", "\"\"\"\n    Create report.\n\n    Args:\n      src: source-side input\n      output: generated output\n      ref_file: path to reference file\n      **kwargs: arguments to be ignored\n    \"\"\"", "\n", "reference", "=", "utils", ".", "cached_file_lines", "(", "ref_file", ")", "[", "output", ".", "idx", "]", "\n", "trg_str", "=", "output", ".", "sent_str", "(", ")", "\n", "if", "isinstance", "(", "src", ",", "sent", ".", "ReadableSentence", ")", ":", "\n", "      ", "src_str", "=", "src", ".", "sent_str", "(", ")", "\n", "self", ".", "src_sents", ".", "append", "(", "src_str", ")", "\n", "", "self", ".", "hyp_sents", ".", "append", "(", "trg_str", ")", "\n", "self", ".", "ref_sents", ".", "append", "(", "reference", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.ReferenceDiffReporter.conclude_report": [[167, 177], ["os.path.join", "xnmt.utils.make_parent_dir", "xnmt.utils.ArgClass", "xnmt.thirdparty.charcut.charcut.load_input_segs", "xnmt.thirdparty.charcut.charcut.run_on"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.make_parent_dir", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.load_input_segs", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.run_on"], ["", "def", "conclude_report", "(", "self", ")", ":", "\n", "    ", "if", "self", ".", "hyp_sents", ":", "\n", "      ", "html_filename", "=", "os", ".", "path", ".", "join", "(", "self", ".", "report_path", ",", "\"charcut.html\"", ")", "\n", "utils", ".", "make_parent_dir", "(", "html_filename", ")", "\n", "args", "=", "utils", ".", "ArgClass", "(", "html_output_file", "=", "html_filename", ",", "match_size", "=", "self", ".", "match_size", ",", "alt_norm", "=", "self", ".", "alt_norm", ")", "\n", "aligned_segs", "=", "charcut", ".", "load_input_segs", "(", "cand_segs", "=", "self", ".", "hyp_sents", ",", "\n", "ref_segs", "=", "self", ".", "ref_sents", ",", "\n", "src_segs", "=", "self", ".", "src_sents", ")", "\n", "charcut", ".", "run_on", "(", "aligned_segs", ",", "args", ")", "\n", "self", ".", "hyp_sents", ",", "self", ".", "ref_sents", ",", "self", ".", "src_sents", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.CompareMtReporter.__init__": [[197, 217], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "@", "register_xnmt_handler", "\n", "def", "__init__", "(", "self", ",", "\n", "out2_file", ":", "Optional", "[", "str", "]", "=", "None", ",", "\n", "train_file", ":", "Optional", "[", "str", "]", "=", "None", ",", "\n", "train_counts", ":", "Optional", "[", "str", "]", "=", "None", ",", "\n", "alpha", ":", "numbers", ".", "Real", "=", "1.0", ",", "\n", "ngram", ":", "numbers", ".", "Integral", "=", "4", ",", "\n", "ngram_size", ":", "numbers", ".", "Integral", "=", "50", ",", "\n", "sent_size", ":", "numbers", ".", "Integral", "=", "10", ",", "\n", "report_path", ":", "str", "=", "settings", ".", "DEFAULT_REPORT_PATH", ")", "->", "None", ":", "\n", "    ", "self", ".", "out2_file", "=", "out2_file", "\n", "self", ".", "train_file", "=", "train_file", "\n", "self", ".", "train_counts", "=", "train_counts", "\n", "self", ".", "alpha", "=", "alpha", "\n", "self", ".", "ngram", "=", "ngram", "\n", "self", ".", "ngram_size", "=", "ngram_size", "\n", "self", ".", "sent_size", "=", "sent_size", "\n", "self", ".", "report_path", "=", "report_path", "\n", "self", ".", "hyp_sents", ",", "self", ".", "ref_sents", "=", "[", "]", ",", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.CompareMtReporter.create_sent_report": [[218, 231], ["output.sent_str", "reports.CompareMtReporter.hyp_sents.append", "reports.CompareMtReporter.ref_sents.append", "xnmt.utils.cached_file_lines"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.NbestSentence.sent_str", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.utils.cached_file_lines"], ["", "def", "create_sent_report", "(", "self", ",", "output", ":", "sent", ".", "ReadableSentence", ",", "ref_file", ":", "str", ",", "**", "kwargs", ")", "->", "None", ":", "\n", "    ", "\"\"\"\n    Create report.\n\n    Args:\n      output: generated output\n      ref_file: path to reference file\n      **kwargs: arguments to be ignored\n    \"\"\"", "\n", "reference", "=", "utils", ".", "cached_file_lines", "(", "ref_file", ")", "[", "output", ".", "idx", "]", "\n", "trg_str", "=", "output", ".", "sent_str", "(", ")", "\n", "self", ".", "hyp_sents", ".", "append", "(", "trg_str", ")", "\n", "self", ".", "ref_sents", ".", "append", "(", "reference", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.CompareMtReporter.conclude_report": [[232, 257], ["os.path.join", "os.path.join", "xnmt.utils.make_parent_dir", "xnmt.utils.ArgClass", "compare_mt.main", "os.path.join", "xnmt.utils.make_parent_dir", "open", "open", "open", "fout.write", "fout.write", "fout.write", "l.strip", "l.strip"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.make_parent_dir", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.make_parent_dir", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.write", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.write", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.write"], ["", "def", "conclude_report", "(", "self", ")", ":", "\n", "    ", "if", "self", ".", "hyp_sents", ":", "\n", "      ", "ref_filename", "=", "os", ".", "path", ".", "join", "(", "self", ".", "report_path", ",", "\"tmp\"", ",", "\"compare-mt.ref\"", ")", "\n", "out_filename", "=", "os", ".", "path", ".", "join", "(", "self", ".", "report_path", ",", "\"tmp\"", ",", "\"compare-mt.out\"", ")", "\n", "utils", ".", "make_parent_dir", "(", "out_filename", ")", "\n", "with", "open", "(", "ref_filename", ",", "\"w\"", ")", "as", "fout", ":", "\n", "        ", "for", "l", "in", "self", ".", "ref_sents", ":", "fout", ".", "write", "(", "f\"{l.strip()}\\n\"", ")", "\n", "", "with", "open", "(", "out_filename", ",", "\"w\"", ")", "as", "fout", ":", "\n", "        ", "for", "l", "in", "self", ".", "hyp_sents", ":", "fout", ".", "write", "(", "f\"{l.strip()}\\n\"", ")", "\n", "", "import", "xnmt", ".", "thirdparty", ".", "comparemt", ".", "compare_mt", "as", "compare_mt", "\n", "args", "=", "utils", ".", "ArgClass", "(", "ref_file", "=", "ref_filename", ",", "\n", "out_file", "=", "out_filename", ",", "\n", "out2_file", "=", "self", ".", "out2_file", ",", "\n", "train_file", "=", "self", ".", "train_file", ",", "\n", "train_counts", "=", "self", ".", "train_counts", ",", "\n", "alpha", "=", "self", ".", "alpha", ",", "\n", "ngram", "=", "self", ".", "ngram", ",", "\n", "ngram_size", "=", "self", ".", "ngram_size", ",", "\n", "sent_size", "=", "self", ".", "sent_size", ")", "\n", "out_lines", "=", "compare_mt", ".", "main", "(", "args", ")", "\n", "report_filename", "=", "os", ".", "path", ".", "join", "(", "self", ".", "report_path", ",", "\"compare-mt.txt\"", ")", "\n", "utils", ".", "make_parent_dir", "(", "report_filename", ")", "\n", "with", "open", "(", "report_filename", ",", "\"w\"", ")", "as", "fout", ":", "\n", "        ", "for", "l", "in", "out_lines", ":", "fout", ".", "write", "(", "f\"{l}\\n\"", ")", "\n", "", "self", ".", "hyp_sents", ",", "self", ".", "ref_sents", ",", "self", ".", "src_sents", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.HtmlReporter.__init__": [[267, 304], ["reports.HtmlReporter.html_contents.append"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["def", "__init__", "(", "self", ",", "report_name", ":", "str", ",", "report_path", ":", "str", "=", "settings", ".", "DEFAULT_REPORT_PATH", ")", "->", "None", ":", "\n", "    ", "self", ".", "report_name", "=", "report_name", "\n", "self", ".", "report_path", "=", "report_path", "\n", "self", ".", "html_contents", "=", "[", "\"<html><meta charset='UTF-8' /><head><title>Translation Report</title></head><body>\"", "]", "\n", "self", ".", "html_contents", ".", "append", "(", "\"\"\"\n      <style>\n        body {font-family: sans-serif; font-size: 11pt;}\n        table, td, th {border-spacing: 0;}\n        th {padding: 10px;}\n        td {padding: 5px;}\n        th {border-top: solid black 2px; font-weight: normal;}\n        .tophead {border-bottom: solid black 1px;}\n        .src {font-style: oblique;}\n        .trg {font-family: Consolas, monospace;}\n        .del {font-weight: bold; color: #f00000;}\n        .ins {font-weight: bold; color: #0040ff;}\n        .shift {font-weight: bold;}\n        .match {}\n        .mainrow {border-top: solid black 1px; padding: 1em;}\n        .midrow {border-bottom: dotted gray 1px;}\n        .seghead {color: gray; text-align: right;}\n        .score {font-family: Consolas, monospace; text-align: right; font-size: large;}\n        .detail {font-size: xx-small; color: gray;}\n      </style>\n      <script>\n        function enter(cls) {\n          var elts = document.getElementsByClassName(cls);\n          for (var i=0; i<elts.length; i++)\n            elts[i].style.backgroundColor = \"yellow\";\n        }\n        function leave(cls) {\n          var elts = document.getElementsByClassName(cls);\n          for (var i=0; i<elts.length; i++)\n            elts[i].style.backgroundColor = \"transparent\";\n        }\n      </script>\n   \"\"\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.HtmlReporter.add_sent_heading": [[305, 308], ["reports.HtmlReporter.html_contents.append", "reports.HtmlReporter.html_contents.append"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "def", "add_sent_heading", "(", "self", ",", "idx", ":", "numbers", ".", "Integral", ")", ":", "\n", "    ", "self", ".", "html_contents", ".", "append", "(", "f\"<h1>Translation Report for Sentence {idx}</h1>\"", ")", "\n", "self", ".", "html_contents", ".", "append", "(", "\"<table>\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.HtmlReporter.finish_sent": [[309, 311], ["reports.HtmlReporter.html_contents.append"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "def", "finish_sent", "(", "self", ")", ":", "\n", "    ", "self", ".", "html_contents", ".", "append", "(", "\"</table>\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.HtmlReporter.finish_html_doc": [[312, 314], ["reports.HtmlReporter.html_contents.append"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "def", "finish_html_doc", "(", "self", ")", ":", "\n", "    ", "self", ".", "html_contents", ".", "append", "(", "\"</body></html>\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.HtmlReporter.write_html": [[315, 323], ["bs4.BeautifulSoup", "bs4.BeautifulSoup.prettify", "os.path.join", "xnmt.utils.make_parent_dir", "open", "f.write"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.make_parent_dir", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.write"], ["", "def", "write_html", "(", "self", ")", "->", "None", ":", "\n", "    ", "html_str", "=", "\"\\n\"", ".", "join", "(", "self", ".", "html_contents", ")", "\n", "soup", "=", "bs", "(", "html_str", ",", "\"lxml\"", ")", "\n", "pretty_html", "=", "soup", ".", "prettify", "(", ")", "\n", "html_file_name", "=", "os", ".", "path", ".", "join", "(", "self", ".", "report_path", ",", "f\"{self.report_name}.html\"", ")", "\n", "utils", ".", "make_parent_dir", "(", "html_file_name", ")", "\n", "with", "open", "(", "html_file_name", ",", "'w'", ",", "encoding", "=", "'utf-8'", ")", "as", "f", ":", "\n", "      ", "f", ".", "write", "(", "pretty_html", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.HtmlReporter.add_fields_if_set": [[324, 331], ["fields.items", "reports.HtmlReporter.html_contents.append"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "", "def", "add_fields_if_set", "(", "self", ",", "fields", ")", ":", "\n", "    ", "html_ret", "=", "\"\"", "\n", "for", "key", ",", "val", "in", "fields", ".", "items", "(", ")", ":", "\n", "      ", "if", "val", ":", "\n", "        ", "html_ret", "+=", "f\"<tr><td class='seghead'>{key}:</td><td>{val}</td></tr>\"", "\n", "", "", "if", "html_ret", ":", "\n", "      ", "self", ".", "html_contents", ".", "append", "(", "html_ret", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.HtmlReporter.add_charcut_diff": [[332, 344], ["xnmt.thirdparty.charcut.charcut.load_input_segs", "list", "reports.HtmlReporter.html_contents.append", "xnmt.thirdparty.charcut.charcut.compare_segments", "xnmt.thirdparty.charcut.charcut.score_all", "xnmt.thirdparty.charcut.charcut.segs2html"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.load_input_segs", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.compare_segments", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.score_all", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.segs2html"], ["", "", "def", "add_charcut_diff", "(", "self", ",", "trg_str", ",", "reference", ",", "match_size", "=", "3", ",", "alt_norm", "=", "False", ",", "mt_label", "=", "\"MT:\"", ",", "ref_label", "=", "\"Ref:\"", ")", ":", "\n", "    ", "aligned_segs", "=", "charcut", ".", "load_input_segs", "(", "cand_segs", "=", "[", "trg_str", "]", ",", "\n", "ref_segs", "=", "[", "reference", "]", ")", "\n", "styled_ops", "=", "[", "charcut", ".", "compare_segments", "(", "cand", ",", "ref", ",", "match_size", ")", "\n", "for", "seg_id", ",", "_", ",", "_", ",", "cand", ",", "ref", "in", "aligned_segs", "]", "\n", "\n", "seg_scores", "=", "list", "(", "charcut", ".", "score_all", "(", "aligned_segs", ",", "styled_ops", ",", "alt_norm", ")", ")", "\n", "# doc_cost = sum(cost for cost, _ in seg_scores)", "\n", "# doc_div = sum(div for _, div in seg_scores)", "\n", "\n", "self", ".", "html_contents", ".", "append", "(", "charcut", ".", "segs2html", "(", "aligned_segs", "[", "0", "]", ",", "styled_ops", "[", "0", "]", ",", "seg_scores", "[", "0", "]", ",", "mt_label", "=", "mt_label", ",", "\n", "ref_label", "=", "ref_label", ",", "use_id_col", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.AttentionReporter.__init__": [[358, 367], ["reports.HtmlReporter.__init__"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__"], ["@", "register_xnmt_handler", "\n", "@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "max_num_sents", ":", "Optional", "[", "numbers", ".", "Integral", "]", "=", "100", ",", "\n", "report_name", ":", "str", "=", "\"attention\"", ",", "\n", "report_path", ":", "str", "=", "settings", ".", "DEFAULT_REPORT_PATH", ")", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "report_name", "=", "report_name", ",", "report_path", "=", "report_path", ")", "\n", "self", ".", "max_num_sents", "=", "max_num_sents", "\n", "self", ".", "cur_sent_no", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.AttentionReporter.create_sent_report": [[368, 395], ["reports.AttentionReporter.add_sent_heading", "output.str_tokens", "output.sent_str", "reports.AttentionReporter.add_charcut_diff", "reports.AttentionReporter.add_fields_if_set", "reports.AttentionReporter.add_atts", "reports.AttentionReporter.finish_sent", "xnmt.utils.cached_file_lines", "isinstance", "src.str_tokens", "isinstance", "src.sent_str", "isinstance", "src.get_array"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.HtmlReporter.add_sent_heading", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.SimpleSentence.str_tokens", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.NbestSentence.sent_str", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.HtmlReporter.add_charcut_diff", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.HtmlReporter.add_fields_if_set", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.AttentionReporter.add_atts", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.HtmlReporter.finish_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.utils.cached_file_lines", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.SimpleSentence.str_tokens", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.NbestSentence.sent_str", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.get_array"], ["", "def", "create_sent_report", "(", "self", ",", "src", ":", "sent", ".", "Sentence", ",", "output", ":", "sent", ".", "ReadableSentence", ",", "attentions", ":", "np", ".", "ndarray", ",", "\n", "ref_file", ":", "Optional", "[", "str", "]", ",", "**", "kwargs", ")", "->", "None", ":", "\n", "\n", "    ", "\"\"\"\n    Create report.\n\n    Args:\n      src: source-side input\n      output: generated output\n      attentions: attention matrices\n      ref_file: path to reference file\n      **kwargs: arguments to be ignored\n    \"\"\"", "\n", "self", ".", "cur_sent_no", "+=", "1", "\n", "if", "self", ".", "max_num_sents", "and", "self", ".", "cur_sent_no", ">", "self", ".", "max_num_sents", ":", "return", "\n", "reference", "=", "utils", ".", "cached_file_lines", "(", "ref_file", ")", "[", "output", ".", "idx", "]", "\n", "idx", "=", "src", ".", "idx", "\n", "self", ".", "add_sent_heading", "(", "idx", ")", "\n", "src_tokens", "=", "src", ".", "str_tokens", "(", ")", "if", "isinstance", "(", "src", ",", "sent", ".", "ReadableSentence", ")", "else", "[", "]", "\n", "trg_tokens", "=", "output", ".", "str_tokens", "(", ")", "\n", "src_str", "=", "src", ".", "sent_str", "(", ")", "if", "isinstance", "(", "src", ",", "sent", ".", "ReadableSentence", ")", "else", "\"\"", "\n", "trg_str", "=", "output", ".", "sent_str", "(", ")", "\n", "self", ".", "add_charcut_diff", "(", "trg_str", ",", "reference", ")", "\n", "self", ".", "add_fields_if_set", "(", "{", "\"Src\"", ":", "src_str", "}", ")", "\n", "self", ".", "add_atts", "(", "attentions", ",", "src", ".", "get_array", "(", ")", "if", "isinstance", "(", "src", ",", "sent", ".", "ArraySentence", ")", "else", "src_tokens", ",", "\n", "trg_tokens", ",", "idx", ")", "\n", "self", ".", "finish_sent", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.AttentionReporter.conclude_report": [[396, 400], ["reports.AttentionReporter.finish_html_doc", "reports.AttentionReporter.write_html"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.HtmlReporter.finish_html_doc", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.HtmlReporter.write_html"], ["", "def", "conclude_report", "(", "self", ")", ":", "\n", "    ", "self", ".", "finish_html_doc", "(", ")", "\n", "self", ".", "write_html", "(", ")", "\n", "self", ".", "cur_sent_no", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.AttentionReporter.add_atts": [[401, 429], ["isinstance", "xnmt.plotting.plot_attention", "reports.AttentionReporter.html_contents.append", "math.log", "math.log", "math.log", "xnmt.utils.valid_filename().lower", "os.path.basename", "len", "len", "xnmt.utils.valid_filename"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.plotting.plot_attention", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.utils.valid_filename"], ["", "def", "add_atts", "(", "self", ",", "\n", "attentions", ":", "np", ".", "ndarray", ",", "\n", "src_tokens", ":", "Union", "[", "Sequence", "[", "str", "]", ",", "np", ".", "ndarray", "]", ",", "\n", "trg_tokens", ":", "Sequence", "[", "str", "]", ",", "\n", "idx", ":", "numbers", ".", "Integral", ",", "\n", "desc", ":", "str", "=", "\"Attentions\"", ")", "->", "None", ":", "\n", "    ", "\"\"\"\n    Add attention matrix to HTML code.\n\n    Args:\n      attentions: numpy array of dimensions (src_len x trg_len)\n      src_tokens: list of strings (case of src text) or numpy array of dims (nfeat x speech_len) (case of src speech)\n      trg_tokens: list of string tokens\n      idx: sentence no\n      desc: readable description\n    \"\"\"", "\n", "src_is_speech", "=", "isinstance", "(", "src_tokens", ",", "np", ".", "ndarray", ")", "\n", "size_x", "=", "math", ".", "log", "(", "len", "(", "trg_tokens", ")", "+", "2", ")", "*", "3", "\n", "if", "src_is_speech", ":", "\n", "      ", "size_y", "=", "math", ".", "log", "(", "src_tokens", ".", "shape", "[", "1", "]", "+", "2", ")", "\n", "", "else", ":", "\n", "      ", "size_y", "=", "math", ".", "log", "(", "len", "(", "src_tokens", ")", "+", "2", ")", "*", "3", "\n", "", "attention_file", "=", "f\"{self.report_path}/img/attention.{utils.valid_filename(desc).lower()}.{idx}.png\"", "\n", "html_att", "=", "f'<tr><td class=\"seghead\">{desc}:</td><td></td></tr>'", "f'<tr><td colspan=\"2\" align=\"left\"><img src=\"img/{os.path.basename(attention_file)}\" alt=\"attention matrix\" /></td></tr>'", "\n", "plotting", ".", "plot_attention", "(", "src_words", "=", "src_tokens", ",", "trg_words", "=", "trg_tokens", ",", "attention_matrix", "=", "attentions", ",", "\n", "file_name", "=", "attention_file", ",", "size_x", "=", "size_x", ",", "size_y", "=", "size_y", ")", "\n", "self", ".", "html_contents", ".", "append", "(", "html_att", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.SegmentationReporter.__init__": [[440, 445], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "@", "register_xnmt_handler", "\n", "def", "__init__", "(", "self", ",", "report_path", ":", "str", "=", "settings", ".", "DEFAULT_REPORT_PATH", ")", ":", "\n", "    ", "self", ".", "report_path", "=", "report_path", "\n", "self", ".", "report_fp", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.SegmentationReporter.create_sent_report": [[446, 460], ["src.str_tokens.str_tokens.str_tokens", "print", "os.path.join", "xnmt.utils.make_parent_dir", "open", "words.append", "str"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.SimpleSentence.str_tokens", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.make_parent_dir", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "def", "create_sent_report", "(", "self", ",", "segment_actions", ",", "src", ",", "**", "kwargs", ")", ":", "\n", "    ", "if", "self", ".", "report_fp", "is", "None", ":", "\n", "      ", "report_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "report_path", ",", "\"segment.txt\"", ")", "\n", "utils", ".", "make_parent_dir", "(", "report_path", ")", "\n", "self", ".", "report_fp", "=", "open", "(", "report_path", ",", "\"w\"", ")", "\n", "\n", "", "actions", "=", "segment_actions", "[", "0", "]", "\n", "src", "=", "src", ".", "str_tokens", "(", ")", "\n", "words", "=", "[", "]", "\n", "start", "=", "0", "\n", "for", "end", "in", "actions", ":", "\n", "      ", "words", ".", "append", "(", "\"\"", ".", "join", "(", "str", "(", "src", "[", "start", ":", "end", "+", "1", "]", ")", ")", ")", "\n", "start", "=", "end", "+", "1", "\n", "", "print", "(", "\" \"", ".", "join", "(", "words", ")", ",", "file", "=", "self", ".", "report_fp", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.SegmentationReporter.conclude_report": [[461, 464], ["hasattr", "reports.SegmentationReporter.report_fp.close"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.close"], ["", "def", "conclude_report", "(", "self", ")", ":", "\n", "    ", "if", "hasattr", "(", "self", ",", "\"report_fp\"", ")", "and", "self", ".", "report_fp", ":", "\n", "      ", "self", ".", "report_fp", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.OOVStatisticsReporter.__init__": [[481, 488], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "@", "register_xnmt_handler", "\n", "def", "__init__", "(", "self", ",", "train_trg_file", ",", "report_path", ":", "str", "=", "settings", ".", "DEFAULT_REPORT_PATH", ")", ":", "\n", "    ", "self", ".", "report_path", "=", "report_path", "\n", "self", ".", "report_fp", "=", "None", "\n", "self", ".", "train_trg_file", "=", "train_trg_file", "\n", "self", ".", "out_sents", ",", "self", ".", "ref_lines", "=", "[", "]", ",", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.OOVStatisticsReporter.create_sent_report": [[489, 494], ["reports.OOVStatisticsReporter.ref_lines.append", "reports.OOVStatisticsReporter.out_sents.append", "xnmt.utils.cached_file_lines"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.utils.cached_file_lines"], ["", "def", "create_sent_report", "(", "self", ",", "output", ":", "sent", ".", "ReadableSentence", ",", "ref_file", ":", "str", ",", "**", "kwargs", ")", ":", "\n", "    ", "self", ".", "output_vocab", "=", "output", ".", "vocab", "\n", "reference", "=", "utils", ".", "cached_file_lines", "(", "ref_file", ")", "[", "output", ".", "idx", "]", "\n", "self", ".", "ref_lines", ".", "append", "(", "reference", ")", "\n", "self", ".", "out_sents", ".", "append", "(", "output", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.OOVStatisticsReporter.conclude_report": [[495, 556], ["set", "set", "collections.defaultdict", "collections.defaultdict", "zip", "set", "collections.defaultdict", "collections.defaultdict", "collections.defaultdict", "zip", "sorted", "sorted", "sorted", "sum", "sum", "sum", "open", "ref_line.strip().split", "ValueError", "trg_sent.sent_str().split", "ValueError", "collections.defaultdict.items", "collections.defaultdict.items", "collections.defaultdict.items", "collections.defaultdict.values", "collections.defaultdict.values", "collections.defaultdict.values", "open", "fout.write", "fout.write", "fout.write", "fout.write", "fout.write", "fout.write", "fout.write", "fout.write", "fout.write", "fout.write", "fout.write", "fout.write", "fout.write", "fout.write", "fout.write", "fout.write", "line.strip().split", "set.add", "set.add", "os.path.join", "set.add", "ref_line.strip", "trg_sent.sent_str", "ref_line.strip().split", "line.strip", "trg_sent.sent_str().split", "len", "len", "len", "len", "ref_line.strip", "trg_sent.sent_str"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.write", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.write", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.write", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.write", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.write", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.write", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.write", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.write", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.write", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.write", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.write", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.write", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.write", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.write", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.write", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.write", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.NbestSentence.sent_str", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.NbestSentence.sent_str"], ["", "def", "conclude_report", "(", "self", ")", ":", "\n", "    ", "train_words", "=", "set", "(", ")", "\n", "with", "open", "(", "self", ".", "train_trg_file", ")", "as", "f_train", ":", "\n", "      ", "for", "line", "in", "f_train", ":", "\n", "        ", "for", "word", "in", "line", ".", "strip", "(", ")", ".", "split", "(", ")", ":", "\n", "          ", "train_words", ".", "add", "(", "word", ")", "\n", "", "", "", "ref_words", "=", "set", "(", ")", "\n", "ref_words_oov", "=", "defaultdict", "(", "int", ")", "\n", "ref_words_total", "=", "0", "\n", "ref_oovs_unmatched", "=", "defaultdict", "(", "int", ")", "\n", "for", "ref_line", ",", "trg_sent", "in", "zip", "(", "self", ".", "ref_lines", ",", "self", ".", "out_sents", ")", ":", "\n", "      ", "for", "word", "in", "ref_line", ".", "strip", "(", ")", ".", "split", "(", ")", ":", "\n", "        ", "ref_words", ".", "add", "(", "word", ")", "\n", "ref_words_total", "+=", "1", "\n", "if", "word", "not", "in", "train_words", ":", "\n", "          ", "ref_words_oov", "[", "word", "]", "+=", "1", "\n", "if", "word", "not", "in", "trg_sent", ".", "sent_str", "(", ")", ".", "split", "(", ")", ":", "\n", "            ", "ref_oovs_unmatched", "[", "word", "]", "+=", "1", "\n", "", "", "", "", "if", "ref_words_total", "==", "0", ":", "raise", "ValueError", "(", "\"Found empty reference\"", ")", "\n", "hyp_words", "=", "set", "(", ")", "\n", "hyp_words_oov", "=", "defaultdict", "(", "int", ")", "\n", "hyp_words_total", "=", "0", "\n", "hyp_oovs_matched", "=", "defaultdict", "(", "int", ")", "\n", "hyp_oovs_unmatched", "=", "defaultdict", "(", "int", ")", "\n", "for", "trg_sent", ",", "ref_line", "in", "zip", "(", "self", ".", "out_sents", ",", "self", ".", "ref_lines", ")", ":", "\n", "      ", "for", "word", "in", "trg_sent", ".", "sent_str", "(", ")", ".", "split", "(", ")", ":", "\n", "        ", "hyp_words", ".", "add", "(", "word", ")", "\n", "hyp_words_total", "+=", "1", "\n", "if", "word", "not", "in", "train_words", ":", "\n", "          ", "hyp_words_oov", "[", "word", "]", "+=", "1", "\n", "ref_line_words", "=", "ref_line", ".", "strip", "(", ")", ".", "split", "(", ")", "\n", "if", "word", "in", "ref_line_words", ":", "\n", "            ", "hyp_oovs_matched", "[", "word", "]", "+=", "1", "\n", "", "else", ":", "\n", "            ", "hyp_oovs_unmatched", "[", "word", "]", "+=", "1", "\n", "", "", "", "", "if", "hyp_words_total", "==", "0", ":", "raise", "ValueError", "(", "\"Found empty hypothesis\"", ")", "\n", "sorted_hyp_oovs_matched", "=", "sorted", "(", "hyp_oovs_matched", ".", "items", "(", ")", ",", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", ",", "reverse", "=", "True", ")", "\n", "sorted_hyp_oovs_unmatched", "=", "sorted", "(", "hyp_oovs_unmatched", ".", "items", "(", ")", ",", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", ",", "reverse", "=", "True", ")", "\n", "sorted_ref_oovs_unmatched", "=", "sorted", "(", "ref_oovs_unmatched", ".", "items", "(", ")", ",", "key", "=", "lambda", "x", ":", "x", "[", "1", "]", ",", "reverse", "=", "True", ")", "\n", "num_oovs_ref", "=", "sum", "(", "ref_words_oov", ".", "values", "(", ")", ")", "\n", "num_oovs_hyp", "=", "sum", "(", "hyp_words_oov", ".", "values", "(", ")", ")", "\n", "num_oovs_hyp_matched", "=", "sum", "(", "hyp_oovs_matched", ".", "values", "(", ")", ")", "\n", "hyp_oov_prec", "=", "f\"{num_oovs_hyp_matched/num_oovs_hyp*100:.2f}%\"", "if", "num_oovs_hyp", ">", "0", "else", "\"n/a\"", "\n", "hyp_oov_rec", "=", "f\"{num_oovs_hyp_matched/num_oovs_ref*100:.2f}%\"", "if", "num_oovs_ref", ">", "0", "else", "\"n/a\"", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "self", ".", "report_path", ",", "\"oov-statistics.txt\"", ")", ",", "\"w\"", ")", "as", "fout", ":", "\n", "      ", "fout", ".", "write", "(", "f\"OOV Statistics Report\\n---------------------\\n\"", ")", "\n", "fout", ".", "write", "(", "f\"Size of subword vocab:                      {len(self.output_vocab)}\\n\"", ")", "\n", "fout", ".", "write", "(", "f\"Word types in training corpus:              {len(train_words)}\\n\"", ")", "\n", "fout", ".", "write", "(", "f\"Word types in test reference:               {len(ref_words)}\\n\"", ")", "\n", "fout", ".", "write", "(", "f\"Word types in test hypothesis:              {len(hyp_words)}\\n\"", ")", "\n", "fout", ".", "write", "(", "f\"OOV words in test reference:                {num_oovs_ref} ({num_oovs_ref/ref_words_total*100:.2f}%)\\n\"", ")", "\n", "fout", ".", "write", "(", "f\"OOV words in test hypothesis:               {num_oovs_hyp} ({num_oovs_hyp/hyp_words_total*100:.2f}%)\\n\"", ")", "\n", "fout", ".", "write", "(", "f\"Hypothesis OOVs precision (sentence-match): {hyp_oov_prec}\\n\"", ")", "\n", "fout", ".", "write", "(", "f\"Hypothesis OOVs recall (sentence-match):    {hyp_oov_rec}\\n\"", ")", "\n", "fout", ".", "write", "(", "f\"\\n\\nListing:\\n\"", ")", "\n", "fout", ".", "write", "(", "f\"OOVs recovered: \\n\"", ")", "\n", "fout", ".", "write", "(", "\"\\n\"", ".", "join", "(", "[", "f\"{item[0]} ({item[1]})\"", "for", "item", "in", "sorted_hyp_oovs_matched", "]", ")", ")", "\n", "fout", ".", "write", "(", "f\"\\n\\nOOVs not recovered: \\n\"", ")", "\n", "fout", ".", "write", "(", "\"\\n\"", ".", "join", "(", "[", "f\"{item[0]} ({item[1]})\"", "for", "item", "in", "sorted_ref_oovs_unmatched", "]", ")", ")", "\n", "fout", ".", "write", "(", "f\"\\n\\nfantasized words: \\n\"", ")", "\n", "fout", ".", "write", "(", "\"\\n\"", ".", "join", "(", "[", "f\"{item[0]} ({item[1]})\"", "for", "item", "in", "sorted_hyp_oovs_unmatched", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossExpr.__init__": [[17, 22], ["collections.defaultdict", "init_loss.items", "dynet.scalarInput"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items"], ["def", "__init__", "(", "self", ",", "init_loss", ":", "Optional", "[", "Dict", "[", "str", ",", "dy", ".", "Expression", "]", "]", "=", "None", ")", "->", "None", ":", "\n", "    ", "self", ".", "expr_factors", "=", "collections", ".", "defaultdict", "(", "lambda", ":", "dy", ".", "scalarInput", "(", "0", ")", ")", "\n", "if", "init_loss", "is", "not", "None", ":", "\n", "      ", "for", "key", ",", "val", "in", "init_loss", ".", "items", "(", ")", ":", "\n", "        ", "self", ".", "expr_factors", "[", "key", "]", "=", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossExpr.add_loss": [[23, 26], ["None"], "methods", ["None"], ["", "", "", "def", "add_loss", "(", "self", ",", "loss_name", ":", "str", ",", "loss", ":", "Optional", "[", "dy", ".", "Expression", "]", ")", "->", "None", ":", "\n", "    ", "if", "loss", ":", "\n", "      ", "self", ".", "expr_factors", "[", "loss_name", "]", "+=", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossExpr.add_factored_loss_expr": [[27, 31], ["factored_loss_expr.expr_factors.items"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items"], ["", "", "def", "add_factored_loss_expr", "(", "self", ",", "factored_loss_expr", ":", "Optional", "[", "'FactoredLossExpr'", "]", ")", "->", "None", ":", "\n", "    ", "if", "factored_loss_expr", ":", "\n", "      ", "for", "loss_name", ",", "loss", "in", "factored_loss_expr", ".", "expr_factors", ".", "items", "(", ")", ":", "\n", "        ", "self", ".", "expr_factors", "[", "loss_name", "]", "+=", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossExpr.compute": [[32, 43], ["losses.FactoredLossExpr._combine_batches", "dynet.esum", "list", "losses.FactoredLossExpr.expr_factors.values"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossExpr._combine_batches"], ["", "", "", "def", "compute", "(", "self", ",", "comb_method", ":", "str", "=", "\"sum\"", ")", "->", "dy", ".", "Expression", ":", "\n", "    ", "\"\"\"\n    Compute loss as DyNet expression by summing over factors and batch elements.\n\n    Args:\n      comb_method: method for combining loss across batch elements ('sum' or 'avg').\n\n    Returns:\n      Scalar DyNet expression.\n    \"\"\"", "\n", "return", "self", ".", "_combine_batches", "(", "dy", ".", "esum", "(", "list", "(", "self", ".", "expr_factors", ".", "values", "(", ")", ")", ")", ",", "comb_method", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossExpr.value": [[44, 52], ["dynet.esum().value", "dynet.esum", "list", "losses.FactoredLossExpr.expr_factors.values"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value"], ["", "def", "value", "(", "self", ")", "->", "List", "[", "float", "]", ":", "\n", "    ", "\"\"\"\n    Get list of per-batch-element loss values, summed over factors.\n\n    Returns:\n      List of same length as batch-size.\n    \"\"\"", "\n", "return", "dy", ".", "esum", "(", "list", "(", "self", ".", "expr_factors", ".", "values", "(", ")", ")", ")", ".", "value", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossExpr.__getitem__": [[53, 55], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "loss_name", ":", "str", ")", "->", "dy", ".", "Expression", ":", "\n", "    ", "return", "self", ".", "expr_factors", "[", "loss_name", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossExpr.get_factored_loss_val": [[56, 67], ["losses.FactoredLossVal", "losses.FactoredLossExpr._combine_batches().value", "losses.FactoredLossExpr.expr_factors.items", "losses.FactoredLossExpr._combine_batches"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossExpr._combine_batches"], ["", "def", "get_factored_loss_val", "(", "self", ",", "comb_method", ":", "str", "=", "\"sum\"", ")", "->", "'FactoredLossVal'", ":", "\n", "    ", "\"\"\"\n    Create factored loss values by calling ``.value()`` for each DyNet loss expression and applying batch combination.\n\n    Args:\n      comb_method: method for combining loss across batch elements ('sum' or 'avg').\n\n    Returns:\n      Factored loss values.\n    \"\"\"", "\n", "return", "FactoredLossVal", "(", "{", "k", ":", "self", ".", "_combine_batches", "(", "v", ",", "comb_method", ")", ".", "value", "(", ")", "for", "k", ",", "v", "in", "self", ".", "expr_factors", ".", "items", "(", ")", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossExpr._combine_batches": [[68, 75], ["dynet.sum_batches", "ValueError", "dynet.sum_batches", "batched_expr.dim"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["", "def", "_combine_batches", "(", "self", ",", "batched_expr", ",", "comb_method", ":", "str", "=", "\"sum\"", ")", ":", "\n", "    ", "if", "comb_method", "==", "\"sum\"", ":", "\n", "      ", "return", "dy", ".", "sum_batches", "(", "batched_expr", ")", "\n", "", "elif", "comb_method", "==", "\"avg\"", ":", "\n", "      ", "return", "dy", ".", "sum_batches", "(", "batched_expr", ")", "*", "(", "1.0", "/", "batched_expr", ".", "dim", "(", ")", "[", "1", "]", ")", "\n", "", "else", ":", "\n", "      ", "raise", "ValueError", "(", "f\"Unknown batch combination method '{comb_method}', expected 'sum' or 'avg'.'\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossExpr.get_nobackprop_loss": [[76, 78], ["dynet.nobackprop", "losses.FactoredLossExpr.expr_factors.items"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items"], ["", "", "def", "get_nobackprop_loss", "(", "self", ")", ":", "\n", "    ", "return", "{", "k", ":", "dy", ".", "nobackprop", "(", "v", ")", "for", "k", ",", "v", "in", "self", ".", "expr_factors", ".", "items", "(", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossExpr.__len__": [[79, 81], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "    ", "return", "len", "(", "self", ".", "expr_factors", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossExpr.__mul__": [[82, 84], ["losses.FactoredLossExpr", "losses.FactoredLossExpr.expr_factors.items"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items"], ["", "def", "__mul__", "(", "self", ",", "scalar", ")", ":", "\n", "    ", "return", "FactoredLossExpr", "(", "{", "key", ":", "scalar", "*", "value", "for", "key", ",", "value", "in", "self", ".", "expr_factors", ".", "items", "(", ")", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.__init__": [[93, 97], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "loss_dict", "=", "None", ")", "->", "None", ":", "\n", "    ", "if", "loss_dict", "is", "None", ":", "\n", "      ", "loss_dict", "=", "{", "}", "\n", "", "self", ".", "_loss_dict", "=", "loss_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.__iadd__": [[98, 114], ["other._loss_dict.items"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items"], ["", "def", "__iadd__", "(", "self", ",", "other", ":", "'FactoredLossVal'", ")", ":", "\n", "    ", "\"\"\"\n    Implements += operator, adding up factors individually.\n\n    Args:\n      other: other factored float loss\n\n    Returns:\n      self\n    \"\"\"", "\n", "for", "name", ",", "value", "in", "other", ".", "_loss_dict", ".", "items", "(", ")", ":", "\n", "      ", "if", "name", "in", "self", ".", "_loss_dict", ":", "\n", "        ", "self", ".", "_loss_dict", "[", "name", "]", "+=", "value", "\n", "", "else", ":", "\n", "        ", "self", ".", "_loss_dict", "[", "name", "]", "=", "value", "\n", "", "", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.sum_factors": [[115, 123], ["sum", "losses.FactoredLossVal._loss_dict.values"], "methods", ["None"], ["", "def", "sum_factors", "(", "self", ")", "->", "float", ":", "\n", "    ", "\"\"\"\n    Return the sum of all loss factors.\n\n    Returns:\n      A float value.\n    \"\"\"", "\n", "return", "sum", "(", "[", "x", "for", "x", "in", "self", ".", "_loss_dict", ".", "values", "(", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items": [[124, 132], ["losses.FactoredLossVal._loss_dict.items"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items"], ["", "def", "items", "(", "self", ")", "->", "List", "[", "Tuple", "[", "str", ",", "float", "]", "]", ":", "\n", "    ", "\"\"\"\n    Get name/value tuples for loss factors.\n\n    Returns:\n      Name/value tuples.\n    \"\"\"", "\n", "return", "self", ".", "_loss_dict", ".", "items", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.__len__": [[133, 135], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "    ", "return", "len", "(", "self", ".", "_loss_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.clear": [[136, 141], ["losses.FactoredLossVal._loss_dict.clear"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.clear"], ["", "def", "clear", "(", "self", ")", "->", "None", ":", "\n", "    ", "\"\"\"\n    Clears all loss factors.\n    \"\"\"", "\n", "self", ".", "_loss_dict", ".", "clear", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.hyper_params.Scalar.__init__": [[20, 26], ["hyper_params.Scalar.get_curr_value"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.hyper_params.DefinedSequence.get_curr_value"], ["@", "serializable_init", "\n", "@", "register_xnmt_handler", "\n", "def", "__init__", "(", "self", ",", "initial", "=", "0.0", ",", "times_updated", "=", "0", ")", ":", "\n", "    ", "self", ".", "initial", "=", "initial", "\n", "self", ".", "times_updated", "=", "times_updated", "\n", "self", ".", "value", "=", "self", ".", "get_curr_value", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.hyper_params.Scalar.on_new_epoch": [[27, 32], ["hyper_params.Scalar.get_curr_value", "hyper_params.Scalar.save_processed_arg"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.hyper_params.DefinedSequence.get_curr_value", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.save_processed_arg"], ["", "@", "handle_xnmt_event", "\n", "def", "on_new_epoch", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "self", ".", "value", "=", "self", ".", "get_curr_value", "(", ")", "\n", "self", ".", "times_updated", "+=", "1", "\n", "self", ".", "save_processed_arg", "(", "\"times_updated\"", ",", "self", ".", "times_updated", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.hyper_params.Scalar.get_curr_value": [[33, 35], ["None"], "methods", ["None"], ["", "def", "get_curr_value", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "initial", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.hyper_params.Scalar.__repr__": [[36, 38], ["hyper_params.Scalar.get_curr_value"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.hyper_params.DefinedSequence.get_curr_value"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "    ", "return", "f\"{self.__class__.__name__}[curr={self.get_curr_value()}]\"", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.hyper_params.Scalar.__lt__": [[40, 41], ["None"], "methods", ["None"], ["", "def", "__lt__", "(", "a", ",", "b", ")", ":", "return", "a", ".", "value", "<", "b", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.hyper_params.Scalar.__le__": [[42, 43], ["None"], "methods", ["None"], ["def", "__le__", "(", "a", ",", "b", ")", ":", "return", "a", ".", "value", "<=", "b", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.hyper_params.Scalar.__eq__": [[44, 45], ["None"], "methods", ["None"], ["def", "__eq__", "(", "a", ",", "b", ")", ":", "return", "a", ".", "value", "==", "b", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.hyper_params.Scalar.__ne__": [[46, 47], ["None"], "methods", ["None"], ["def", "__ne__", "(", "a", ",", "b", ")", ":", "return", "a", ".", "value", "!=", "b", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.hyper_params.Scalar.__ge__": [[48, 49], ["None"], "methods", ["None"], ["def", "__ge__", "(", "a", ",", "b", ")", ":", "return", "a", ".", "value", ">=", "b", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.hyper_params.Scalar.__gt__": [[50, 51], ["None"], "methods", ["None"], ["def", "__gt__", "(", "a", ",", "b", ")", ":", "return", "a", ".", "value", ">", "b", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.hyper_params.Scalar.__add__": [[52, 53], ["None"], "methods", ["None"], ["def", "__add__", "(", "a", ",", "b", ")", ":", "return", "a", ".", "value", "+", "b", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.hyper_params.Scalar.__sub__": [[54, 55], ["None"], "methods", ["None"], ["def", "__sub__", "(", "a", ",", "b", ")", ":", "return", "a", ".", "value", "-", "b", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.hyper_params.Scalar.__mul__": [[56, 57], ["None"], "methods", ["None"], ["def", "__mul__", "(", "a", ",", "b", ")", ":", "return", "a", ".", "value", "*", "b", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.hyper_params.Scalar.__neg__": [[58, 59], ["None"], "methods", ["None"], ["def", "__neg__", "(", "a", ")", ":", "return", "-", "a", ".", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.hyper_params.Scalar.__pos__": [[60, 61], ["None"], "methods", ["None"], ["def", "__pos__", "(", "a", ")", ":", "return", "+", "a", ".", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.hyper_params.Scalar.__pow__": [[62, 63], ["None"], "methods", ["None"], ["def", "__pow__", "(", "a", ",", "b", ")", ":", "return", "a", ".", "value", "**", "b", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.hyper_params.Scalar.__truediv__": [[64, 65], ["None"], "methods", ["None"], ["def", "__truediv__", "(", "a", ",", "b", ")", ":", "return", "a", ".", "value", "/", "b", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.hyper_params.Scalar.__floordiv__": [[66, 67], ["None"], "methods", ["None"], ["def", "__floordiv__", "(", "a", ",", "b", ")", ":", "return", "a", ".", "value", "//", "b", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.hyper_params.DefinedSequence.__init__": [[88, 93], ["hyper_params.Scalar.__init__", "len", "ValueError"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "sequence", ":", "typing", ".", "Sequence", "[", "numbers", ".", "Real", "]", ",", "times_updated", ":", "numbers", ".", "Integral", "=", "0", ")", ":", "\n", "    ", "self", ".", "sequence", "=", "sequence", "\n", "if", "len", "(", "sequence", ")", "==", "0", ":", "raise", "ValueError", "(", "\"DefinedSequence initialized with empty sequence\"", ")", "\n", "super", "(", ")", ".", "__init__", "(", "times_updated", "=", "times_updated", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.hyper_params.DefinedSequence.get_curr_value": [[94, 96], ["min", "len"], "methods", ["None"], ["", "def", "get_curr_value", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "sequence", "[", "min", "(", "len", "(", "self", ".", "sequence", ")", "-", "1", ",", "self", ".", "times_updated", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.NoErrorFilter.filter": [[14, 16], ["None"], "methods", ["None"], ["  ", "def", "filter", "(", "self", ",", "record", ")", ":", "\n", "    ", "return", "not", "record", ".", "levelno", "in", "[", "logging", ".", "WARNING", ",", "logging", ".", "ERROR", ",", "logging", ".", "CRITICAL", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.ErrorOnlyFilter.filter": [[18, 20], ["None"], "methods", ["None"], ["  ", "def", "filter", "(", "self", ",", "record", ")", ":", "\n", "    ", "return", "record", ".", "levelno", "in", "[", "logging", ".", "WARNING", ",", "logging", ".", "ERROR", ",", "logging", ".", "CRITICAL", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.MainFormatter.format": [[22, 29], ["getattr", "logging.Formatter.format", "record.msg.split"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.YamlFormatter.format"], ["  ", "def", "format", "(", "self", ",", "record", ")", ":", "\n", "    ", "task_name", "=", "getattr", "(", "record", ",", "\"task_name\"", ",", "None", ")", "\n", "if", "task_name", ":", "\n", "      ", "record", ".", "msg", "=", "f\"[{record.task_name}] {record.msg}\"", "\n", "", "if", "record", ".", "levelno", "in", "[", "logging", ".", "WARNING", ",", "logging", ".", "ERROR", ",", "logging", ".", "CRITICAL", "]", ":", "\n", "      ", "record", ".", "msg", "=", "\"\\n\"", ".", "join", "(", "[", "f\"{record.levelname}: {line}\"", "for", "line", "in", "record", ".", "msg", ".", "split", "(", "\"\\n\"", ")", "]", ")", "\n", "", "return", "super", "(", ")", ".", "format", "(", "record", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.YamlFormatter.format": [[31, 34], ["yaml.dump().rstrip", "logging.Formatter.format", "yaml.dump"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.YamlFormatter.format"], ["  ", "def", "format", "(", "self", ",", "record", ")", ":", "\n", "    ", "record", ".", "msg", "=", "yaml", ".", "dump", "(", "[", "record", ".", "msg", "]", ")", ".", "rstrip", "(", ")", "\n", "return", "super", "(", ")", ".", "format", "(", "record", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.TensorboardCustomWriter.__init__": [[60, 64], ["None"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ")", ":", "\n", "    ", "self", ".", "out_file_name", "=", "None", "\n", "self", ".", "writer", "=", "None", "\n", "self", ".", "exp_name", "=", "None", "\n", "", "def", "set_out_file", "(", "self", ",", "out_file_name", ",", "exp_name", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.TensorboardCustomWriter.set_out_file": [[64, 68], ["tensorboardX.SummaryWriter"], "methods", ["None"], ["", "def", "set_out_file", "(", "self", ",", "out_file_name", ",", "exp_name", ")", ":", "\n", "    ", "self", ".", "out_file_name", "=", "out_file_name", "\n", "self", ".", "exp_name", "=", "exp_name", "\n", "self", ".", "writer", "=", "tensorboardX", ".", "SummaryWriter", "(", "log_dir", "=", "f\"{out_file_name}\"", ")", "\n", "", "def", "unset_out_file", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.TensorboardCustomWriter.unset_out_file": [[68, 70], ["None"], "methods", ["None"], ["", "def", "unset_out_file", "(", "self", ")", ":", "\n", "    ", "self", ".", "out_file_name", "=", "None", "\n", "", "def", "add_scalars", "(", "self", ",", "name", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.TensorboardCustomWriter.add_scalars": [[70, 72], ["tee.TensorboardCustomWriter.writer.add_scalars"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.TensorboardCustomWriter.add_scalars"], ["", "def", "add_scalars", "(", "self", ",", "name", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "return", "self", ".", "writer", ".", "add_scalars", "(", "f\"{self.exp_name}/{name}\"", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.__init__": [[128, 137], ["None"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "indent", "=", "0", ",", "error", "=", "False", ")", ":", "\n", "    ", "self", ".", "logger", "=", "logger", "\n", "self", ".", "stdstream", "=", "sys_std_err", "if", "error", "else", "sys_std_out", "\n", "self", ".", "indent", "=", "indent", "\n", "self", ".", "error", "=", "error", "\n", "if", "error", ":", "\n", "      ", "sys", ".", "stderr", "=", "self", "\n", "", "else", ":", "\n", "      ", "sys", ".", "stdout", "=", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.close": [[138, 143], ["None"], "methods", ["None"], ["", "", "def", "close", "(", "self", ")", ":", "\n", "    ", "if", "self", ".", "error", ":", "\n", "      ", "sys", ".", "stderr", "=", "self", ".", "stdstream", "\n", "", "else", ":", "\n", "      ", "sys", ".", "stdout", "=", "self", ".", "stdstream", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.__enter__": [[144, 146], ["None"], "methods", ["None"], ["", "", "def", "__enter__", "(", "self", ")", ":", "\n", "    ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.__exit__": [[147, 149], ["tee.Tee.close"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.close"], ["", "def", "__exit__", "(", "self", ",", "exc_type", ",", "exc_val", ",", "exc_tb", ")", ":", "\n", "    ", "self", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.write": [[150, 157], ["data.strip", "tee.Tee.flush", "tee.Tee.logger.error", "tee.Tee.logger.log", "data.rstrip", "data.rstrip"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.flush"], ["", "def", "write", "(", "self", ",", "data", ")", ":", "\n", "    ", "if", "data", ".", "strip", "(", ")", "!=", "\"\"", ":", "\n", "      ", "if", "self", ".", "error", ":", "\n", "        ", "self", ".", "logger", ".", "error", "(", "data", ".", "rstrip", "(", ")", ")", "\n", "", "else", ":", "\n", "        ", "self", ".", "logger", ".", "log", "(", "STD_OUTPUT_LEVELNO", ",", "data", ".", "rstrip", "(", ")", ")", "\n", "", "self", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.flush": [[158, 160], ["tee.Tee.stdstream.flush"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.flush"], ["", "", "def", "flush", "(", "self", ")", ":", "\n", "    ", "self", ".", "stdstream", ".", "flush", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.getvalue": [[161, 163], ["tee.Tee.stdstream.getvalue"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.getvalue"], ["", "def", "getvalue", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "stdstream", ".", "getvalue", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.log_preamble": [[76, 85], ["_preamble_content.append", "logger.log"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["def", "log_preamble", "(", "log_line", ",", "level", "=", "logging", ".", "INFO", ")", ":", "\n", "  ", "\"\"\"\n  Logs a message when no out_file is set. Once out_file is set, all preamble strings will be prepended to the out_file.\n  Args:\n    log_line: log message\n    level: log level\n  \"\"\"", "\n", "_preamble_content", ".", "append", "(", "log_line", ")", "\n", "logger", ".", "log", "(", "level", "=", "level", ",", "msg", "=", "log_line", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.set_out_file": [[86, 109], ["tee.unset_out_file", "xnmt.utils.make_parent_dir", "logging.FileHandler", "logging.FileHandler.setLevel", "logging.FileHandler.setFormatter", "logger.addHandler", "logger_file.addHandler", "logging.FileHandler", "logging.FileHandler.setLevel", "logging.FileHandler.setFormatter", "logging.FileHandler.setLevel", "yaml_logger.addHandler", "tensorboard_writer.set_out_file", "open", "tee.MainFormatter", "tee.YamlFormatter", "f_out.write"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.unset_out_file", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.make_parent_dir", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.set_out_file", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.write"], ["", "def", "set_out_file", "(", "out_file", ",", "exp_name", ")", ":", "\n", "  ", "\"\"\"\n  Set the file to log to. Before calling this, logs are only passed to stdout/stderr.\n  Args:\n    out_file: file name\n    exp_name: name of experiment\n  \"\"\"", "\n", "unset_out_file", "(", ")", "\n", "utils", ".", "make_parent_dir", "(", "out_file", ")", "\n", "with", "open", "(", "out_file", ",", "mode", "=", "\"w\"", ")", "as", "f_out", ":", "\n", "    ", "for", "line", "in", "_preamble_content", ":", "\n", "      ", "f_out", ".", "write", "(", "f\"{line}\\n\"", ")", "\n", "", "", "fh", "=", "logging", ".", "FileHandler", "(", "out_file", ",", "encoding", "=", "\"utf-8\"", ")", "\n", "fh", ".", "setLevel", "(", "settings", ".", "LOG_LEVEL_FILE", ")", "\n", "fh", ".", "setFormatter", "(", "MainFormatter", "(", ")", ")", "\n", "logger", ".", "addHandler", "(", "fh", ")", "\n", "logger_file", ".", "addHandler", "(", "fh", ")", "\n", "yaml_fh", "=", "logging", ".", "FileHandler", "(", "f\"{out_file}.yaml\"", ",", "mode", "=", "'w'", ",", "encoding", "=", "\"utf-8\"", ")", "\n", "yaml_fh", ".", "setLevel", "(", "logging", ".", "DEBUG", ")", "\n", "yaml_fh", ".", "setFormatter", "(", "YamlFormatter", "(", ")", ")", "\n", "yaml_fh", ".", "setLevel", "(", "logging", ".", "DEBUG", ")", "\n", "yaml_logger", ".", "addHandler", "(", "yaml_fh", ")", "\n", "tensorboard_writer", ".", "set_out_file", "(", "f\"{out_file}.tb\"", ",", "exp_name", "=", "exp_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.unset_out_file": [[110, 126], ["list", "list", "list", "tensorboard_writer.unset_out_file", "isinstance", "isinstance", "hdlr.close", "logger_file.removeHandler", "hdlr.close", "logger.removeHandler", "hdlr.close", "yaml_logger.removeHandler"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.unset_out_file", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.close", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.close", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.close"], ["", "def", "unset_out_file", "(", ")", ":", "\n", "  ", "\"\"\"\n  Unset the file to log to.\n  \"\"\"", "\n", "for", "hdlr", "in", "list", "(", "logger", ".", "handlers", ")", ":", "\n", "    ", "if", "isinstance", "(", "hdlr", ",", "logging", ".", "FileHandler", ")", ":", "\n", "      ", "hdlr", ".", "close", "(", ")", "\n", "logger", ".", "removeHandler", "(", "hdlr", ")", "\n", "", "", "for", "hdlr", "in", "list", "(", "yaml_logger", ".", "handlers", ")", ":", "\n", "    ", "if", "isinstance", "(", "hdlr", ",", "logging", ".", "FileHandler", ")", ":", "\n", "      ", "hdlr", ".", "close", "(", ")", "\n", "yaml_logger", ".", "removeHandler", "(", "hdlr", ")", "\n", "", "", "for", "hdlr", "in", "list", "(", "logger_file", ".", "handlers", ")", ":", "\n", "    ", "hdlr", ".", "close", "(", ")", "\n", "logger_file", ".", "removeHandler", "(", "hdlr", ")", "\n", "", "tensorboard_writer", ".", "unset_out_file", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.get_git_revision": [[164, 173], ["check_output().decode().strip", "check_output().decode", "check_output", "command.split", "os.path.dirname"], "function", ["None"], ["", "", "def", "get_git_revision", "(", ")", ":", "\n", "  ", "if", "xnmt", ".", "git_rev", ".", "CUR_GIT_REVISION", ":", "return", "xnmt", ".", "git_rev", ".", "CUR_GIT_REVISION", "\n", "from", "subprocess", "import", "CalledProcessError", ",", "check_output", "\n", "try", ":", "\n", "    ", "command", "=", "'git rev-parse --short HEAD'", "\n", "rev", "=", "check_output", "(", "command", ".", "split", "(", "u' '", ")", ",", "cwd", "=", "os", ".", "path", ".", "dirname", "(", "__file__", ")", ")", ".", "decode", "(", "'ascii'", ")", ".", "strip", "(", ")", "\n", "", "except", "(", "CalledProcessError", ",", "OSError", ")", ":", "\n", "    ", "rev", "=", "None", "\n", "", "return", "rev", "\n", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.optimizers.XnmtOptimizer.__init__": [[27, 32], ["xnmt.utils.RollingStatistic"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "optimizer", ":", "dy", ".", "Trainer", ",", "skip_noisy", ":", "bool", "=", "False", ")", "->", "None", ":", "\n", "    ", "self", ".", "optimizer", "=", "optimizer", "\n", "self", ".", "skip_noisy", "=", "skip_noisy", "\n", "if", "skip_noisy", ":", "\n", "      ", "self", ".", "rolling_stats", "=", "utils", ".", "RollingStatistic", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.optimizers.XnmtOptimizer.update": [[33, 47], ["optimizers.XnmtOptimizer.optimizer.update", "xnmt.logger.info", "xnmt.logger.warning", "xnmt.param_collections.ParamManager.param_col.subcols.values", "optimizers.XnmtOptimizer._check_gradients_noisy", "subcol.parameters_list", "param.scale_gradient"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.MultiTaskTrainingRegimen.update", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.optimizers.XnmtOptimizer._check_gradients_noisy"], ["", "", "def", "update", "(", "self", ")", "->", "None", ":", "\n", "    ", "\"\"\"\n    Update the parameters.\n    \"\"\"", "\n", "try", ":", "\n", "      ", "if", "not", "(", "self", ".", "skip_noisy", "and", "self", ".", "_check_gradients_noisy", "(", ")", ")", ":", "\n", "        ", "self", ".", "optimizer", ".", "update", "(", ")", "\n", "", "else", ":", "\n", "        ", "logger", ".", "info", "(", "\"skipping noisy update\"", ")", "\n", "", "", "except", "RuntimeError", ":", "\n", "      ", "logger", ".", "warning", "(", "\"Failed to perform update. Skipping example and clearing gradients.\"", ")", "\n", "for", "subcol", "in", "ParamManager", ".", "param_col", ".", "subcols", ".", "values", "(", ")", ":", "\n", "        ", "for", "param", "in", "subcol", ".", "parameters_list", "(", ")", ":", "\n", "          ", "param", ".", "scale_gradient", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.optimizers.XnmtOptimizer.status": [[48, 55], ["optimizers.XnmtOptimizer.optimizer.status"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.optimizers.DummyTrainer.status"], ["", "", "", "", "def", "status", "(", "self", ")", ":", "\n", "    ", "\"\"\"\n    Outputs information about the trainer in the stderr.\n\n    (number of updates since last call, number of clipped gradients, learning rate, etc\u2026)\n    \"\"\"", "\n", "return", "self", ".", "optimizer", ".", "status", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.optimizers.XnmtOptimizer.set_clip_threshold": [[56, 66], ["optimizers.XnmtOptimizer.optimizer.set_clip_threshold"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.optimizers.DummyTrainer.set_clip_threshold"], ["", "def", "set_clip_threshold", "(", "self", ",", "thr", ":", "numbers", ".", "Real", ")", ":", "\n", "    ", "\"\"\"\n    Set clipping thershold\n\n    To deactivate clipping, set the threshold to be <=0\n\n    Args:\n      thr: Clipping threshold\n    \"\"\"", "\n", "return", "self", ".", "optimizer", ".", "set_clip_threshold", "(", "thr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.optimizers.XnmtOptimizer.get_clip_threshold": [[67, 75], ["optimizers.XnmtOptimizer.optimizer.get_clip_threshold"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.optimizers.DummyTrainer.get_clip_threshold"], ["", "def", "get_clip_threshold", "(", "self", ")", "->", "numbers", ".", "Real", ":", "\n", "    ", "\"\"\"\n    Get clipping threshold\n\n    Returns:\n      Gradient clipping threshold\n    \"\"\"", "\n", "return", "self", ".", "optimizer", ".", "get_clip_threshold", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.optimizers.XnmtOptimizer.restart": [[76, 83], ["optimizers.XnmtOptimizer.optimizer.restart"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.optimizers.DummyTrainer.restart"], ["", "def", "restart", "(", "self", ")", ":", "\n", "    ", "\"\"\"\n    Restarts the optimizer\n\n    Clears all momentum values and assimilate (if applicable)\n    \"\"\"", "\n", "return", "self", ".", "optimizer", ".", "restart", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.optimizers.XnmtOptimizer.learning_rate": [[87, 90], ["None"], "methods", ["None"], ["", "@", "learning_rate", ".", "setter", "\n", "def", "learning_rate", "(", "self", ",", "value", ")", ":", "\n", "    ", "self", ".", "optimizer", ".", "learning_rate", "=", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.optimizers.XnmtOptimizer._check_gradients_noisy": [[91, 105], ["xnmt.param_collections.ParamManager.param_col.subcols.values", "numpy.log", "optimizers.XnmtOptimizer.rolling_stats.update", "subcol.parameters_list", "numpy.sqrt", "param.grad_as_array", "numpy.sum", "numpy.square"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.MultiTaskTrainingRegimen.update"], ["", "def", "_check_gradients_noisy", "(", "self", ")", "->", "bool", ":", "\n", "    ", "sq_norm", "=", "0", "\n", "for", "subcol", "in", "ParamManager", ".", "param_col", ".", "subcols", ".", "values", "(", ")", ":", "\n", "      ", "for", "param", "in", "subcol", ".", "parameters_list", "(", ")", ":", "\n", "        ", "cur_grads", "=", "param", ".", "grad_as_array", "(", ")", "\n", "sq_norm", "+=", "np", ".", "sum", "(", "np", ".", "square", "(", "cur_grads", ")", ")", "\n", "", "", "log_norm", "=", "np", ".", "log", "(", "np", ".", "sqrt", "(", "sq_norm", ")", ")", "\n", "self", ".", "rolling_stats", ".", "update", "(", "log_norm", ")", "\n", "if", "self", ".", "rolling_stats", ".", "average", "is", "None", ":", "# too few statistics", "\n", "      ", "return", "False", "\n", "", "else", ":", "\n", "      ", "req_min", "=", "self", ".", "rolling_stats", ".", "average", "-", "4", "*", "self", ".", "rolling_stats", ".", "stddev", "\n", "req_max", "=", "self", ".", "rolling_stats", ".", "average", "+", "4", "*", "self", ".", "rolling_stats", ".", "stddev", "\n", "return", "not", "(", "req_min", "<", "log_norm", "<", "req_max", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.optimizers.SimpleSGDTrainer.__init__": [[120, 124], ["optimizers.XnmtOptimizer.__init__", "dynet.SimpleSGDTrainer", "xnmt.param_collections.ParamManager.global_collection"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.global_collection"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "e0", ":", "numbers", ".", "Real", "=", "0.1", ",", "skip_noisy", ":", "bool", "=", "False", ")", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "optimizer", "=", "dy", ".", "SimpleSGDTrainer", "(", "ParamManager", ".", "global_collection", "(", ")", ",", "e0", ")", ",", "\n", "skip_noisy", "=", "skip_noisy", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.optimizers.MomentumSGDTrainer.__init__": [[140, 144], ["optimizers.XnmtOptimizer.__init__", "dynet.MomentumSGDTrainer", "xnmt.param_collections.ParamManager.global_collection"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.global_collection"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "e0", ":", "numbers", ".", "Real", "=", "0.01", ",", "mom", ":", "numbers", ".", "Real", "=", "0.9", ",", "skip_noisy", ":", "bool", "=", "False", ")", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "optimizer", "=", "dy", ".", "MomentumSGDTrainer", "(", "ParamManager", ".", "global_collection", "(", ")", ",", "e0", ",", "mom", ")", ",", "\n", "skip_noisy", "=", "skip_noisy", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.optimizers.AdagradTrainer.__init__": [[160, 164], ["optimizers.XnmtOptimizer.__init__", "dynet.AdagradTrainer", "xnmt.param_collections.ParamManager.global_collection"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.global_collection"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "e0", ":", "numbers", ".", "Real", "=", "0.1", ",", "eps", ":", "numbers", ".", "Real", "=", "1e-20", ",", "skip_noisy", ":", "bool", "=", "False", ")", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "optimizer", "=", "dy", ".", "AdagradTrainer", "(", "ParamManager", ".", "global_collection", "(", ")", ",", "e0", ",", "eps", "=", "eps", ")", ",", "\n", "skip_noisy", "=", "skip_noisy", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.optimizers.AdadeltaTrainer.__init__": [[180, 184], ["optimizers.XnmtOptimizer.__init__", "dynet.AdadeltaTrainer", "xnmt.param_collections.ParamManager.global_collection"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.global_collection"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "eps", ":", "numbers", ".", "Real", "=", "1e-6", ",", "rho", ":", "numbers", ".", "Real", "=", "0.95", ",", "skip_noisy", ":", "bool", "=", "False", ")", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "optimizer", "=", "dy", ".", "AdadeltaTrainer", "(", "ParamManager", ".", "global_collection", "(", ")", ",", "eps", ",", "rho", ")", ",", "\n", "skip_noisy", "=", "skip_noisy", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.optimizers.AdamTrainer.__init__": [[202, 211], ["optimizers.XnmtOptimizer.__init__", "dynet.AdamTrainer", "xnmt.param_collections.ParamManager.global_collection"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.global_collection"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "alpha", ":", "numbers", ".", "Real", "=", "0.001", ",", "\n", "beta_1", ":", "numbers", ".", "Real", "=", "0.9", ",", "\n", "beta_2", ":", "numbers", ".", "Real", "=", "0.999", ",", "\n", "eps", ":", "numbers", ".", "Real", "=", "1e-8", ",", "\n", "skip_noisy", ":", "bool", "=", "False", ")", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "optimizer", "=", "dy", ".", "AdamTrainer", "(", "ParamManager", ".", "global_collection", "(", ")", ",", "alpha", ",", "beta_1", ",", "beta_2", ",", "eps", ")", ",", "\n", "skip_noisy", "=", "skip_noisy", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.optimizers.NoamTrainer.__init__": [[230, 248], ["optimizers.XnmtOptimizer.__init__", "dynet.AdamTrainer", "xnmt.param_collections.ParamManager.global_collection"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.global_collection"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "alpha", ":", "numbers", ".", "Real", "=", "1.0", ",", "\n", "dim", ":", "numbers", ".", "Integral", "=", "512", ",", "\n", "warmup_steps", ":", "numbers", ".", "Integral", "=", "4000", ",", "\n", "beta_1", ":", "numbers", ".", "Real", "=", "0.9", ",", "\n", "beta_2", ":", "numbers", ".", "Real", "=", "0.98", ",", "\n", "eps", ":", "numbers", ".", "Real", "=", "1e-9", ",", "\n", "skip_noisy", ":", "bool", "=", "False", ")", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "optimizer", "=", "dy", ".", "AdamTrainer", "(", "ParamManager", ".", "global_collection", "(", ")", ",", "\n", "alpha", "=", "alpha", ",", "\n", "beta_1", "=", "beta_1", ",", "\n", "beta_2", "=", "beta_2", ",", "\n", "eps", "=", "eps", ")", ",", "\n", "skip_noisy", "=", "skip_noisy", ")", "\n", "self", ".", "dim", "=", "dim", "\n", "self", ".", "warmup_steps", "=", "warmup_steps", "\n", "self", ".", "steps", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.optimizers.NoamTrainer.update": [[249, 258], ["optimizers.XnmtOptimizer.update", "numpy.min", "xnmt.logger.info", "xnmt.logger.info"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.MultiTaskTrainingRegimen.update"], ["", "def", "update", "(", "self", ")", ":", "\n", "    ", "self", ".", "steps", "+=", "1", "\n", "decay", "=", "(", "self", ".", "dim", "**", "(", "-", "0.5", ")", ")", "*", "np", ".", "min", "(", "[", "self", ".", "steps", "**", "(", "-", "0.5", ")", ",", "self", ".", "steps", "*", "(", "self", ".", "warmup_steps", "**", "(", "-", "1.5", ")", ")", "]", ")", "\n", "self", ".", "optimizer", ".", "learning_rate", "=", "1.", "*", "decay", "\n", "super", "(", ")", ".", "update", "(", ")", "\n", "\n", "if", "self", ".", "steps", "%", "200", "==", "0", ":", "\n", "      ", "logger", ".", "info", "(", "'> Optimizer Logging'", ")", "\n", "logger", ".", "info", "(", "'  Steps=%d, learning_rate=%.2e'", "%", "(", "self", ".", "steps", ",", "self", ".", "optimizer", ".", "learning_rate", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.optimizers.DummyTrainer.__init__": [[267, 270], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ")", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.optimizers.DummyTrainer.update": [[271, 273], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ")", "->", "None", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.optimizers.DummyTrainer.status": [[274, 276], ["None"], "methods", ["None"], ["", "def", "status", "(", "self", ")", ":", "\n", "    ", "return", "\"n/a\"", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.optimizers.DummyTrainer.set_clip_threshold": [[277, 279], ["None"], "methods", ["None"], ["", "def", "set_clip_threshold", "(", "self", ",", "thr", ")", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.optimizers.DummyTrainer.get_clip_threshold": [[280, 282], ["None"], "methods", ["None"], ["", "def", "get_clip_threshold", "(", "self", ")", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.optimizers.DummyTrainer.restart": [[283, 285], ["None"], "methods", ["None"], ["", "def", "restart", "(", "self", ")", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.optimizers.DummyTrainer.learning_rate": [[289, 292], ["None"], "methods", ["None"], ["", "@", "learning_rate", ".", "setter", "\n", "def", "learning_rate", "(", "self", ",", "value", ")", ":", "\n", "    ", "pass", "\n", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.base.FinalTransducerState.__init__": [[20, 23], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "main_expr", ":", "dy", ".", "Expression", ",", "cell_expr", ":", "dy", ".", "Expression", "=", "None", ")", ":", "\n", "    ", "self", ".", "_main_expr", "=", "main_expr", "\n", "self", ".", "_cell_expr", "=", "cell_expr", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.base.FinalTransducerState.main_expr": [[24, 26], ["None"], "methods", ["None"], ["", "def", "main_expr", "(", "self", ")", "->", "dy", ".", "Expression", ":", "\n", "    ", "return", "self", ".", "_main_expr", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.base.FinalTransducerState.cell_expr": [[27, 37], ["None"], "methods", ["None"], ["", "def", "cell_expr", "(", "self", ")", "->", "dy", ".", "Expression", ":", "\n", "    ", "\"\"\"Returns:\n         dy.Expression: cell state; if not given, it is inferred as inverse tanh of main expression\n    \"\"\"", "\n", "if", "self", ".", "_cell_expr", "is", "None", ":", "\n", "# TODO: This taking of the tanh inverse is disabled, because it can cause NaNs", "\n", "#       Instead just copy", "\n", "# self._cell_expr = 0.5 * dy.log( dy.cdiv(1.+self._main_expr, 1.-self._main_expr) )", "\n", "      ", "self", ".", "_cell_expr", "=", "self", ".", "_main_expr", "\n", "", "return", "self", ".", "_cell_expr", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.base.SeqTransducer.transduce": [[43, 54], ["NotImplementedError"], "methods", ["None"], ["def", "transduce", "(", "self", ",", "seq", ":", "'expression_seqs.ExpressionSequence'", ")", "->", "'expression_seqs.ExpressionSequence'", ":", "\n", "    ", "\"\"\"\n    Parameters should be :class:`expression_seqs.ExpressionSequence` objects wherever appropriate\n\n    Args:\n      seq: An expression sequence representing the input to the transduction\n\n    Returns:\n      result of transduction, an expression sequence\n    \"\"\"", "\n", "raise", "NotImplementedError", "(", "\"SeqTransducer.transduce() must be implemented by SeqTransducer sub-classes\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.base.SeqTransducer.get_final_states": [[55, 60], ["NotImplementedError"], "methods", ["None"], ["", "def", "get_final_states", "(", "self", ")", "->", "List", "[", "FinalTransducerState", "]", ":", "\n", "    ", "\"\"\"Returns:\n         A list of FinalTransducerState objects corresponding to a fixed-dimension representation of the input, after having invoked transduce()\n    \"\"\"", "\n", "raise", "NotImplementedError", "(", "\"SeqTransducer.get_final_states() must be implemented by SeqTransducer sub-classes\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.base.ModularSeqTransducer.__init__": [[76, 79], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "input_dim", ":", "numbers", ".", "Integral", ",", "modules", ":", "List", "[", "SeqTransducer", "]", ")", ":", "\n", "    ", "self", ".", "modules", "=", "modules", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.base.ModularSeqTransducer.shared_params": [[80, 82], ["None"], "methods", ["None"], ["", "def", "shared_params", "(", "self", ")", ":", "\n", "    ", "return", "[", "{", "\".input_dim\"", ",", "\".modules.0.input_dim\"", "}", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.base.ModularSeqTransducer.transduce": [[83, 87], ["module.transduce"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce"], ["", "def", "transduce", "(", "self", ",", "seq", ":", "'expression_seqs.ExpressionSequence'", ")", "->", "'expression_seqs.ExpressionSequence'", ":", "\n", "    ", "for", "module", "in", "self", ".", "modules", ":", "\n", "      ", "seq", "=", "module", ".", "transduce", "(", "seq", ")", "\n", "", "return", "seq", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.base.ModularSeqTransducer.get_final_states": [[88, 93], ["mod.get_final_states"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.get_final_states"], ["", "def", "get_final_states", "(", "self", ")", "->", "List", "[", "FinalTransducerState", "]", ":", "\n", "    ", "final_states", "=", "[", "]", "\n", "for", "mod", "in", "self", ".", "modules", ":", "\n", "      ", "final_states", "+=", "mod", ".", "get_final_states", "(", ")", "\n", "", "return", "final_states", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.base.IdentitySeqTransducer.__init__": [[102, 105], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ")", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.base.IdentitySeqTransducer.transduce": [[106, 108], ["None"], "methods", ["None"], ["", "def", "transduce", "(", "self", ",", "seq", ":", "'expression_seqs.ExpressionSequence'", ")", "->", "'expression_seqs.ExpressionSequence'", ":", "\n", "    ", "return", "seq", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.base.TransformSeqTransducer.__init__": [[121, 126], ["ValueError"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "transform", ":", "transforms", ".", "Transform", ",", "downsample_by", ":", "numbers", ".", "Integral", "=", "1", ")", "->", "None", ":", "\n", "    ", "self", ".", "transform", "=", "transform", "\n", "if", "downsample_by", "<", "1", ":", "raise", "ValueError", "(", "f\"downsample_by must be >=1, was {downsample_by}\"", ")", "\n", "self", ".", "downsample_by", "=", "downsample_by", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.base.TransformSeqTransducer.get_final_states": [[127, 129], ["None"], "methods", ["None"], ["", "def", "get_final_states", "(", "self", ")", "->", "List", "[", "FinalTransducerState", "]", ":", "\n", "    ", "return", "self", ".", "_final_states", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.base.TransformSeqTransducer.transduce": [[130, 150], ["src.as_tensor", "base.TransformSeqTransducer.transform.transform", "xnmt.expression_seqs.ExpressionSequence", "dynet.reshape.dim", "dynet.reshape", "base.FinalTransducerState", "len", "ValueError", "out_mask.lin_subsampled.lin_subsampled.lin_subsampled", "dynet.reshape.dim", "dynet.reshape.dim"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.DenseWordEmbedder.transform", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.lin_subsampled", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["", "def", "transduce", "(", "self", ",", "src", ":", "expression_seqs", ".", "ExpressionSequence", ")", "->", "expression_seqs", ".", "ExpressionSequence", ":", "\n", "    ", "src_tensor", "=", "src", ".", "as_tensor", "(", ")", "\n", "out_mask", "=", "src", ".", "mask", "\n", "if", "self", ".", "downsample_by", ">", "1", ":", "\n", "      ", "assert", "len", "(", "src_tensor", ".", "dim", "(", ")", "[", "0", "]", ")", "==", "2", ",", "f\"Downsampling only supported for tensors of order to. Found dims {src_tensor.dim()}\"", "\n", "(", "hidden_dim", ",", "seq_len", ")", ",", "batch_size", "=", "src_tensor", ".", "dim", "(", ")", "\n", "if", "seq_len", "%", "self", ".", "downsample_by", "!=", "0", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "\"For downsampling, sequence lengths must be multiples of the total reduce factor. \"", "\n", "\"Configure batcher accordingly.\"", ")", "\n", "", "src_tensor", "=", "dy", ".", "reshape", "(", "src_tensor", ",", "\n", "(", "hidden_dim", "*", "self", ".", "downsample_by", ",", "seq_len", "//", "self", ".", "downsample_by", ")", ",", "\n", "batch_size", "=", "batch_size", ")", "\n", "if", "out_mask", ":", "\n", "        ", "out_mask", "=", "out_mask", ".", "lin_subsampled", "(", "reduce_factor", "=", "self", ".", "downsample_by", ")", "\n", "", "", "output", "=", "self", ".", "transform", ".", "transform", "(", "src_tensor", ")", "\n", "output_seq", "=", "expression_seqs", ".", "ExpressionSequence", "(", "expr_tensor", "=", "output", ",", "mask", "=", "out_mask", ")", "\n", "self", ".", "_final_states", "=", "[", "FinalTransducerState", "(", "output_seq", "[", "-", "1", "]", ")", "]", "\n", "return", "output_seq", "\n", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.residual.ResidualSeqTransducer.__init__": [[23, 32], ["xnmt.param_collections.ParamManager.my_params", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.my_params"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "child", ":", "SeqTransducer", ",", "input_dim", ":", "numbers", ".", "Integral", ",", "layer_norm", ":", "bool", "=", "False", ")", ":", "\n", "    ", "self", ".", "child", "=", "child", "\n", "self", ".", "input_dim", "=", "input_dim", "\n", "self", ".", "layer_norm", "=", "layer_norm", "\n", "if", "layer_norm", ":", "\n", "      ", "model", "=", "ParamManager", ".", "my_params", "(", "self", ")", "\n", "self", ".", "ln_g", "=", "model", ".", "add_parameters", "(", "dim", "=", "(", "input_dim", ",", ")", ")", "\n", "self", ".", "ln_b", "=", "model", ".", "add_parameters", "(", "dim", "=", "(", "input_dim", ",", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.residual.ResidualSeqTransducer.transduce": [[33, 41], ["xnmt.expression_seqs.ExpressionSequence", "residual.ResidualSeqTransducer.child.transduce().as_tensor", "seq.as_tensor", "dynet.reshape.dim", "dynet.reshape", "dynet.layer_norm", "dynet.reshape", "residual.ResidualSeqTransducer.child.transduce"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce"], ["", "", "def", "transduce", "(", "self", ",", "seq", ":", "ExpressionSequence", ")", "->", "ExpressionSequence", ":", "\n", "    ", "seq_tensor", "=", "self", ".", "child", ".", "transduce", "(", "seq", ")", ".", "as_tensor", "(", ")", "+", "seq", ".", "as_tensor", "(", ")", "\n", "if", "self", ".", "layer_norm", ":", "\n", "      ", "d", "=", "seq_tensor", ".", "dim", "(", ")", "\n", "seq_tensor", "=", "dy", ".", "reshape", "(", "seq_tensor", ",", "(", "d", "[", "0", "]", "[", "0", "]", ",", ")", ",", "batch_size", "=", "d", "[", "0", "]", "[", "1", "]", "*", "d", "[", "1", "]", ")", "\n", "seq_tensor", "=", "dy", ".", "layer_norm", "(", "seq_tensor", ",", "self", ".", "ln_g", ",", "self", ".", "ln_b", ")", "\n", "seq_tensor", "=", "dy", ".", "reshape", "(", "seq_tensor", ",", "d", "[", "0", "]", ",", "batch_size", "=", "d", "[", "1", "]", ")", "\n", "", "return", "ExpressionSequence", "(", "expr_tensor", "=", "seq_tensor", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.residual.ResidualSeqTransducer.get_final_states": [[42, 45], ["residual.ResidualSeqTransducer.child.get_final_states"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.get_final_states"], ["", "def", "get_final_states", "(", "self", ")", "->", "List", "[", "FinalTransducerState", "]", ":", "\n", "# TODO: is this OK to do?", "\n", "    ", "return", "self", ".", "child", ".", "get_final_states", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMState.__init__": [[18, 27], ["tuple", "tuple", "dynet.zeroes", "dynet.zeroes", "range", "range"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "network", ",", "prev", "=", "None", ",", "c", "=", "None", ",", "h", "=", "None", ")", ":", "\n", "    ", "self", ".", "_network", "=", "network", "\n", "if", "c", "is", "None", ":", "\n", "      ", "c", "=", "[", "dy", ".", "zeroes", "(", "dim", "=", "(", "network", ".", "hidden_dim", ",", ")", ")", "for", "_", "in", "range", "(", "network", ".", "num_layers", ")", "]", "\n", "", "if", "h", "is", "None", ":", "\n", "      ", "h", "=", "[", "dy", ".", "zeroes", "(", "dim", "=", "(", "network", ".", "hidden_dim", ",", ")", ")", "for", "_", "in", "range", "(", "network", ".", "num_layers", ")", "]", "\n", "", "self", ".", "_c", "=", "tuple", "(", "c", ")", "\n", "self", ".", "_h", "=", "tuple", "(", "h", ")", "\n", "self", ".", "_prev", "=", "prev", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMState.add_input": [[28, 31], ["recurrent.UniLSTMState._network.add_input_to_prev", "recurrent.UniLSTMState"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMSeqTransducer.add_input_to_prev"], ["", "def", "add_input", "(", "self", ",", "x", ")", ":", "\n", "    ", "new_c", ",", "new_h", "=", "self", ".", "_network", ".", "add_input_to_prev", "(", "self", ",", "x", ")", "\n", "return", "UniLSTMState", "(", "self", ".", "_network", ",", "prev", "=", "self", ",", "c", "=", "new_c", ",", "h", "=", "new_h", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMState.b": [[32, 34], ["None"], "methods", ["None"], ["", "def", "b", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "_network", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMState.h": [[35, 37], ["None"], "methods", ["None"], ["", "def", "h", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "_h", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMState.s": [[38, 40], ["None"], "methods", ["None"], ["", "def", "s", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "_c", "+", "self", ".", "_h", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMState.prev": [[41, 43], ["None"], "methods", ["None"], ["", "def", "prev", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "_prev", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMState.set_h": [[44, 49], ["tuple", "len"], "methods", ["None"], ["", "def", "set_h", "(", "self", ",", "es", "=", "None", ")", ":", "\n", "    ", "if", "es", "is", "not", "None", ":", "\n", "      ", "assert", "len", "(", "es", ")", "==", "self", ".", "_network", ".", "num_layers", "\n", "", "self", ".", "_h", "=", "tuple", "(", "es", ")", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMState.set_s": [[50, 56], ["tuple", "tuple", "len"], "methods", ["None"], ["", "def", "set_s", "(", "self", ",", "es", "=", "None", ")", ":", "\n", "    ", "if", "es", "is", "not", "None", ":", "\n", "      ", "assert", "len", "(", "es", ")", "==", "2", "*", "self", ".", "_network", ".", "num_layers", "\n", "", "self", ".", "_c", "=", "tuple", "(", "es", "[", ":", "self", ".", "_network", ".", "num_layers", "]", ")", "\n", "self", ".", "_h", "=", "tuple", "(", "es", "[", "self", ".", "_network", ".", "num_layers", ":", "]", ")", "\n", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMState.output": [[57, 59], ["None"], "methods", ["None"], ["", "def", "output", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "_h", "[", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMState.__getitem__": [[60, 65], ["recurrent.UniLSTMState"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "item", ")", ":", "\n", "    ", "return", "UniLSTMState", "(", "network", "=", "self", ".", "_network", ",", "\n", "prev", "=", "self", ".", "_prev", ",", "\n", "c", "=", "[", "ci", "[", "item", "]", "for", "ci", "in", "self", ".", "_c", "]", ",", "\n", "h", "=", "[", "hi", "[", "item", "]", "for", "hi", "in", "self", ".", "_h", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMSeqTransducer.__init__": [[87, 123], ["xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.param_collections.ParamManager.my_params", "isinstance", "isinstance", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.persistence.bare", "xnmt.persistence.bare", "range", "range", "range", "param_init[].initializer", "param_init[].initializer", "param_init[].initializer", "bias_init[].initializer"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.my_params", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer"], ["@", "register_xnmt_handler", "\n", "@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "layers", "=", "1", ",", "\n", "input_dim", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "hidden_dim", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "dropout", "=", "Ref", "(", "\"exp_global.dropout\"", ",", "default", "=", "0.0", ")", ",", "\n", "weightnoise_std", "=", "Ref", "(", "\"exp_global.weight_noise\"", ",", "default", "=", "0.0", ")", ",", "\n", "param_init", "=", "Ref", "(", "\"exp_global.param_init\"", ",", "default", "=", "bare", "(", "GlorotInitializer", ")", ")", ",", "\n", "bias_init", "=", "Ref", "(", "\"exp_global.bias_init\"", ",", "default", "=", "bare", "(", "ZeroInitializer", ")", ")", ",", "\n", "yaml_path", "=", "None", ",", "\n", "decoder_input_dim", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ",", "default", "=", "None", ")", ",", "\n", "decoder_input_feeding", "=", "True", ")", ":", "\n", "    ", "self", ".", "num_layers", "=", "layers", "\n", "model", "=", "ParamManager", ".", "my_params", "(", "self", ")", "\n", "if", "yaml_path", "is", "not", "None", "and", "\"decoder\"", "in", "yaml_path", ":", "\n", "      ", "if", "decoder_input_feeding", ":", "\n", "        ", "input_dim", "+=", "decoder_input_dim", "\n", "", "", "self", ".", "hidden_dim", "=", "hidden_dim", "\n", "self", ".", "dropout_rate", "=", "dropout", "\n", "self", ".", "weightnoise_std", "=", "weightnoise_std", "\n", "self", ".", "input_dim", "=", "input_dim", "\n", "\n", "if", "not", "isinstance", "(", "param_init", ",", "Sequence", ")", ":", "\n", "      ", "param_init", "=", "[", "param_init", "]", "*", "layers", "\n", "", "if", "not", "isinstance", "(", "bias_init", ",", "Sequence", ")", ":", "\n", "        ", "bias_init", "=", "[", "bias_init", "]", "*", "layers", "\n", "\n", "# [i; f; o; g]", "\n", "", "self", ".", "p_Wx", "=", "[", "model", ".", "add_parameters", "(", "dim", "=", "(", "hidden_dim", "*", "4", ",", "input_dim", ")", ",", "init", "=", "param_init", "[", "0", "]", ".", "initializer", "(", "(", "hidden_dim", "*", "4", ",", "input_dim", ")", ",", "num_shared", "=", "4", ")", ")", "]", "\n", "self", ".", "p_Wx", "+=", "[", "model", ".", "add_parameters", "(", "dim", "=", "(", "hidden_dim", "*", "4", ",", "hidden_dim", ")", ",", "init", "=", "param_init", "[", "i", "]", ".", "initializer", "(", "(", "hidden_dim", "*", "4", ",", "hidden_dim", ")", ",", "num_shared", "=", "4", ")", ")", "for", "i", "in", "range", "(", "1", ",", "layers", ")", "]", "\n", "self", ".", "p_Wh", "=", "[", "model", ".", "add_parameters", "(", "dim", "=", "(", "hidden_dim", "*", "4", ",", "hidden_dim", ")", ",", "init", "=", "param_init", "[", "i", "]", ".", "initializer", "(", "(", "hidden_dim", "*", "4", ",", "hidden_dim", ")", ",", "num_shared", "=", "4", ")", ")", "for", "i", "in", "range", "(", "layers", ")", "]", "\n", "self", ".", "p_b", "=", "[", "model", ".", "add_parameters", "(", "dim", "=", "(", "hidden_dim", "*", "4", ",", ")", ",", "init", "=", "bias_init", "[", "i", "]", ".", "initializer", "(", "(", "hidden_dim", "*", "4", ",", ")", ",", "num_shared", "=", "4", ")", ")", "for", "i", "in", "range", "(", "layers", ")", "]", "\n", "\n", "self", ".", "dropout_mask_x", "=", "None", "\n", "self", ".", "dropout_mask_h", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMSeqTransducer.on_set_train": [[124, 127], ["None"], "methods", ["None"], ["", "@", "handle_xnmt_event", "\n", "def", "on_set_train", "(", "self", ",", "val", ")", ":", "\n", "    ", "self", ".", "train", "=", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMSeqTransducer.on_start_sent": [[128, 136], ["dynet.parameter", "dynet.parameter", "dynet.parameter"], "methods", ["None"], ["", "@", "handle_xnmt_event", "\n", "def", "on_start_sent", "(", "self", ",", "src", ")", ":", "\n", "    ", "self", ".", "_final_states", "=", "None", "\n", "self", ".", "Wx", "=", "[", "dy", ".", "parameter", "(", "Wx", ")", "for", "Wx", "in", "self", ".", "p_Wx", "]", "\n", "self", ".", "Wh", "=", "[", "dy", ".", "parameter", "(", "Wh", ")", "for", "Wh", "in", "self", ".", "p_Wh", "]", "\n", "self", ".", "b", "=", "[", "dy", ".", "parameter", "(", "b", ")", "for", "b", "in", "self", ".", "p_b", "]", "\n", "self", ".", "dropout_mask_x", "=", "None", "\n", "self", ".", "dropout_mask_h", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMSeqTransducer.get_final_states": [[137, 139], ["None"], "methods", ["None"], ["", "def", "get_final_states", "(", "self", ")", "->", "List", "[", "transducers", ".", "FinalTransducerState", "]", ":", "\n", "    ", "return", "self", ".", "_final_states", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMSeqTransducer.initial_state": [[140, 142], ["recurrent.UniLSTMState"], "methods", ["None"], ["", "def", "initial_state", "(", "self", ")", ":", "\n", "    ", "return", "UniLSTMState", "(", "self", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMSeqTransducer.set_dropout": [[143, 145], ["None"], "methods", ["None"], ["", "def", "set_dropout", "(", "self", ",", "dropout", ")", ":", "\n", "    ", "self", ".", "dropout_rate", "=", "dropout", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMSeqTransducer.set_dropout_masks": [[146, 153], ["dynet.random_bernoulli", "dynet.random_bernoulli", "dynet.random_bernoulli", "range", "range"], "methods", ["None"], ["", "def", "set_dropout_masks", "(", "self", ",", "batch_size", "=", "1", ")", ":", "\n", "    ", "if", "self", ".", "dropout_rate", ">", "0.0", "and", "self", ".", "train", ":", "\n", "      ", "retention_rate", "=", "1.0", "-", "self", ".", "dropout_rate", "\n", "scale", "=", "1.0", "/", "retention_rate", "\n", "self", ".", "dropout_mask_x", "=", "[", "dy", ".", "random_bernoulli", "(", "(", "self", ".", "input_dim", ",", ")", ",", "retention_rate", ",", "scale", ",", "batch_size", "=", "batch_size", ")", "]", "\n", "self", ".", "dropout_mask_x", "+=", "[", "dy", ".", "random_bernoulli", "(", "(", "self", ".", "hidden_dim", ",", ")", ",", "retention_rate", ",", "scale", ",", "batch_size", "=", "batch_size", ")", "for", "_", "in", "range", "(", "1", ",", "self", ".", "num_layers", ")", "]", "\n", "self", ".", "dropout_mask_h", "=", "[", "dy", ".", "random_bernoulli", "(", "(", "self", ".", "hidden_dim", ",", ")", ",", "retention_rate", ",", "scale", ",", "batch_size", "=", "batch_size", ")", "for", "_", "in", "range", "(", "self", ".", "num_layers", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMSeqTransducer.add_input_to_prev": [[154, 180], ["isinstance", "range", "recurrent.UniLSTMSeqTransducer.set_dropout_masks", "new_c.append", "new_h.append", "type", "list", "dynet.vanilla_lstm_gates_dropout_concat", "dynet.vanilla_lstm_gates_concat", "dynet.vanilla_lstm_c", "dynet.vanilla_lstm_h"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMSeqTransducer.set_dropout_masks", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "", "def", "add_input_to_prev", "(", "self", ",", "prev_state", ",", "x", ")", ":", "\n", "    ", "if", "isinstance", "(", "x", ",", "dy", ".", "Expression", ")", ":", "\n", "      ", "x", "=", "[", "x", "]", "\n", "", "elif", "type", "(", "x", ")", "!=", "list", ":", "\n", "      ", "x", "=", "list", "(", "x", ")", "\n", "\n", "", "if", "self", ".", "dropout_rate", ">", "0.0", "and", "self", ".", "train", "and", "self", ".", "dropout_mask_x", "is", "None", ":", "\n", "      ", "self", ".", "set_dropout_masks", "(", ")", "\n", "\n", "", "new_c", ",", "new_h", "=", "[", "]", ",", "[", "]", "\n", "for", "layer_i", "in", "range", "(", "self", ".", "num_layers", ")", ":", "\n", "      ", "if", "self", ".", "dropout_rate", ">", "0.0", "and", "self", ".", "train", ":", "\n", "# apply dropout according to https://arxiv.org/abs/1512.05287 (tied weights)", "\n", "        ", "gates", "=", "dy", ".", "vanilla_lstm_gates_dropout_concat", "(", "\n", "x", ",", "prev_state", ".", "_h", "[", "layer_i", "]", ",", "self", ".", "Wx", "[", "layer_i", "]", ",", "self", ".", "Wh", "[", "layer_i", "]", ",", "self", ".", "b", "[", "layer_i", "]", ",", "\n", "self", ".", "dropout_mask_x", "[", "layer_i", "]", ",", "self", ".", "dropout_mask_h", "[", "layer_i", "]", ",", "\n", "self", ".", "weightnoise_std", "if", "self", ".", "train", "else", "0.0", ")", "\n", "", "else", ":", "\n", "        ", "gates", "=", "dy", ".", "vanilla_lstm_gates_concat", "(", "\n", "x", ",", "prev_state", ".", "_h", "[", "layer_i", "]", ",", "self", ".", "Wx", "[", "layer_i", "]", ",", "self", ".", "Wh", "[", "layer_i", "]", ",", "self", ".", "b", "[", "layer_i", "]", ",", "\n", "self", ".", "weightnoise_std", "if", "self", ".", "train", "else", "0.0", ")", "\n", "", "new_c", ".", "append", "(", "dy", ".", "vanilla_lstm_c", "(", "prev_state", ".", "_c", "[", "layer_i", "]", ",", "gates", ")", ")", "\n", "new_h", ".", "append", "(", "dy", ".", "vanilla_lstm_h", "(", "new_c", "[", "-", "1", "]", ",", "gates", ")", ")", "\n", "x", "=", "[", "new_h", "[", "-", "1", "]", "]", "\n", "\n", "", "return", "new_c", ",", "new_h", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMSeqTransducer.transduce": [[181, 236], ["isinstance", "len", "range", "xnmt.expression_seqs.ExpressionSequence", "[].dim", "recurrent.UniLSTMSeqTransducer.set_dropout_masks", "range", "recurrent.UniLSTMSeqTransducer._final_states.append", "dynet.zeroes", "dynet.zeroes", "isinstance", "dynet.vanilla_lstm_c", "dynet.vanilla_lstm_h", "xnmt.transducers.base.FinalTransducerState", "sum", "sum", "ValueError", "dynet.vanilla_lstm_gates_dropout_concat", "dynet.vanilla_lstm_gates_concat", "numpy.isclose", "c.append", "h.append", "c.append", "h.append", "range", "type", "list", "numpy.sum", "len", "expr_seq[].mask.cmult_by_timestep_expr", "expr_seq[].mask.cmult_by_timestep_expr", "expr_seq[].mask.cmult_by_timestep_expr", "expr_seq[].mask.cmult_by_timestep_expr", "x_t_i.dim", "x_t_i.dim"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMSeqTransducer.set_dropout_masks", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.cmult_by_timestep_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.cmult_by_timestep_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.cmult_by_timestep_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.cmult_by_timestep_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["", "def", "transduce", "(", "self", ",", "expr_seq", ":", "'expression_seqs.ExpressionSequence'", ")", "->", "'expression_seqs.ExpressionSequence'", ":", "\n", "    ", "\"\"\"\n    transduce the sequence, applying masks if given (masked timesteps simply copy previous h / c)\n\n    Args:\n      expr_seq: expression sequence or list of expression sequences (where each inner list will be concatenated)\n    Returns:\n      expression sequence\n    \"\"\"", "\n", "if", "isinstance", "(", "expr_seq", ",", "expression_seqs", ".", "ExpressionSequence", ")", ":", "\n", "      ", "expr_seq", "=", "[", "expr_seq", "]", "\n", "", "batch_size", "=", "expr_seq", "[", "0", "]", "[", "0", "]", ".", "dim", "(", ")", "[", "1", "]", "\n", "seq_len", "=", "len", "(", "expr_seq", "[", "0", "]", ")", "\n", "\n", "if", "self", ".", "dropout_rate", ">", "0.0", "and", "self", ".", "train", ":", "\n", "      ", "self", ".", "set_dropout_masks", "(", "batch_size", "=", "batch_size", ")", "\n", "\n", "", "cur_input", "=", "expr_seq", "\n", "self", ".", "_final_states", "=", "[", "]", "\n", "for", "layer_i", "in", "range", "(", "self", ".", "num_layers", ")", ":", "\n", "      ", "h", "=", "[", "dy", ".", "zeroes", "(", "dim", "=", "(", "self", ".", "hidden_dim", ",", ")", ",", "batch_size", "=", "batch_size", ")", "]", "\n", "c", "=", "[", "dy", ".", "zeroes", "(", "dim", "=", "(", "self", ".", "hidden_dim", ",", ")", ",", "batch_size", "=", "batch_size", ")", "]", "\n", "for", "pos_i", "in", "range", "(", "seq_len", ")", ":", "\n", "        ", "x_t", "=", "[", "cur_input", "[", "j", "]", "[", "pos_i", "]", "for", "j", "in", "range", "(", "len", "(", "cur_input", ")", ")", "]", "\n", "if", "isinstance", "(", "x_t", ",", "dy", ".", "Expression", ")", ":", "\n", "          ", "x_t", "=", "[", "x_t", "]", "\n", "", "elif", "type", "(", "x_t", ")", "!=", "list", ":", "\n", "          ", "x_t", "=", "list", "(", "x_t", ")", "\n", "", "if", "sum", "(", "[", "x_t_i", ".", "dim", "(", ")", "[", "0", "]", "[", "0", "]", "for", "x_t_i", "in", "x_t", "]", ")", "!=", "self", ".", "input_dim", ":", "\n", "          ", "found_dim", "=", "sum", "(", "[", "x_t_i", ".", "dim", "(", ")", "[", "0", "]", "[", "0", "]", "for", "x_t_i", "in", "x_t", "]", ")", "\n", "raise", "ValueError", "(", "f\"VanillaLSTMGates: x_t has inconsistent dimension {found_dim}, expecting {self.input_dim}\"", ")", "\n", "", "if", "self", ".", "dropout_rate", ">", "0.0", "and", "self", ".", "train", ":", "\n", "# apply dropout according to https://arxiv.org/abs/1512.05287 (tied weights)", "\n", "          ", "gates_t", "=", "dy", ".", "vanilla_lstm_gates_dropout_concat", "(", "x_t", ",", "\n", "h", "[", "-", "1", "]", ",", "\n", "self", ".", "Wx", "[", "layer_i", "]", ",", "\n", "self", ".", "Wh", "[", "layer_i", "]", ",", "\n", "self", ".", "b", "[", "layer_i", "]", ",", "\n", "self", ".", "dropout_mask_x", "[", "layer_i", "]", ",", "\n", "self", ".", "dropout_mask_h", "[", "layer_i", "]", ",", "\n", "self", ".", "weightnoise_std", "if", "self", ".", "train", "else", "0.0", ")", "\n", "", "else", ":", "\n", "          ", "gates_t", "=", "dy", ".", "vanilla_lstm_gates_concat", "(", "x_t", ",", "h", "[", "-", "1", "]", ",", "self", ".", "Wx", "[", "layer_i", "]", ",", "self", ".", "Wh", "[", "layer_i", "]", ",", "self", ".", "b", "[", "layer_i", "]", ",", "self", ".", "weightnoise_std", "if", "self", ".", "train", "else", "0.0", ")", "\n", "", "c_t", "=", "dy", ".", "vanilla_lstm_c", "(", "c", "[", "-", "1", "]", ",", "gates_t", ")", "\n", "h_t", "=", "dy", ".", "vanilla_lstm_h", "(", "c_t", ",", "gates_t", ")", "\n", "if", "expr_seq", "[", "0", "]", ".", "mask", "is", "None", "or", "np", ".", "isclose", "(", "np", ".", "sum", "(", "expr_seq", "[", "0", "]", ".", "mask", ".", "np_arr", "[", ":", ",", "pos_i", ":", "pos_i", "+", "1", "]", ")", ",", "0.0", ")", ":", "\n", "          ", "c", ".", "append", "(", "c_t", ")", "\n", "h", ".", "append", "(", "h_t", ")", "\n", "", "else", ":", "\n", "          ", "c", ".", "append", "(", "expr_seq", "[", "0", "]", ".", "mask", ".", "cmult_by_timestep_expr", "(", "c_t", ",", "pos_i", ",", "True", ")", "+", "expr_seq", "[", "0", "]", ".", "mask", ".", "cmult_by_timestep_expr", "(", "c", "[", "-", "1", "]", ",", "pos_i", ",", "False", ")", ")", "\n", "h", ".", "append", "(", "expr_seq", "[", "0", "]", ".", "mask", ".", "cmult_by_timestep_expr", "(", "h_t", ",", "pos_i", ",", "True", ")", "+", "expr_seq", "[", "0", "]", ".", "mask", ".", "cmult_by_timestep_expr", "(", "h", "[", "-", "1", "]", ",", "pos_i", ",", "False", ")", ")", "\n", "", "", "self", ".", "_final_states", ".", "append", "(", "transducers", ".", "FinalTransducerState", "(", "h", "[", "-", "1", "]", ",", "c", "[", "-", "1", "]", ")", ")", "\n", "cur_input", "=", "[", "h", "[", "1", ":", "]", "]", "\n", "\n", "", "return", "expression_seqs", ".", "ExpressionSequence", "(", "expr_list", "=", "h", "[", "1", ":", "]", ",", "mask", "=", "expr_seq", "[", "0", "]", ".", "mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.BiLSTMSeqTransducer.__init__": [[256, 284], ["xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "recurrent.BiLSTMSeqTransducer.add_serializable_component", "recurrent.BiLSTMSeqTransducer.add_serializable_component", "xnmt.persistence.bare", "xnmt.persistence.bare", "recurrent.UniLSTMSeqTransducer", "recurrent.UniLSTMSeqTransducer", "range", "range", "isinstance", "isinstance", "isinstance", "isinstance"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare"], ["@", "register_xnmt_handler", "\n", "@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "layers", "=", "1", ",", "\n", "input_dim", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "hidden_dim", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "dropout", "=", "Ref", "(", "\"exp_global.dropout\"", ",", "default", "=", "0.0", ")", ",", "\n", "weightnoise_std", "=", "Ref", "(", "\"exp_global.weight_noise\"", ",", "default", "=", "0.0", ")", ",", "\n", "param_init", "=", "Ref", "(", "\"exp_global.param_init\"", ",", "default", "=", "bare", "(", "GlorotInitializer", ")", ")", ",", "\n", "bias_init", "=", "Ref", "(", "\"exp_global.bias_init\"", ",", "default", "=", "bare", "(", "ZeroInitializer", ")", ")", ",", "\n", "forward_layers", "=", "None", ",", "backward_layers", "=", "None", ")", ":", "\n", "    ", "self", ".", "num_layers", "=", "layers", "\n", "self", ".", "hidden_dim", "=", "hidden_dim", "\n", "self", ".", "dropout_rate", "=", "dropout", "\n", "self", ".", "weightnoise_std", "=", "weightnoise_std", "\n", "assert", "hidden_dim", "%", "2", "==", "0", "\n", "self", ".", "forward_layers", "=", "self", ".", "add_serializable_component", "(", "\"forward_layers\"", ",", "forward_layers", ",", "lambda", ":", "[", "\n", "UniLSTMSeqTransducer", "(", "input_dim", "=", "input_dim", "if", "i", "==", "0", "else", "hidden_dim", ",", "hidden_dim", "=", "hidden_dim", "/", "2", ",", "dropout", "=", "dropout", ",", "\n", "weightnoise_std", "=", "weightnoise_std", ",", "\n", "param_init", "=", "param_init", "[", "i", "]", "if", "isinstance", "(", "param_init", ",", "Sequence", ")", "else", "param_init", ",", "\n", "bias_init", "=", "bias_init", "[", "i", "]", "if", "isinstance", "(", "bias_init", ",", "Sequence", ")", "else", "bias_init", ")", "for", "i", "in", "\n", "range", "(", "layers", ")", "]", ")", "\n", "self", ".", "backward_layers", "=", "self", ".", "add_serializable_component", "(", "\"backward_layers\"", ",", "backward_layers", ",", "lambda", ":", "[", "\n", "UniLSTMSeqTransducer", "(", "input_dim", "=", "input_dim", "if", "i", "==", "0", "else", "hidden_dim", ",", "hidden_dim", "=", "hidden_dim", "/", "2", ",", "dropout", "=", "dropout", ",", "\n", "weightnoise_std", "=", "weightnoise_std", ",", "\n", "param_init", "=", "param_init", "[", "i", "]", "if", "isinstance", "(", "param_init", ",", "Sequence", ")", "else", "param_init", ",", "\n", "bias_init", "=", "bias_init", "[", "i", "]", "if", "isinstance", "(", "bias_init", ",", "Sequence", ")", "else", "bias_init", ")", "for", "i", "in", "\n", "range", "(", "layers", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.BiLSTMSeqTransducer.on_start_sent": [[285, 288], ["None"], "methods", ["None"], ["", "@", "handle_xnmt_event", "\n", "def", "on_start_sent", "(", "self", ",", "src", ")", ":", "\n", "    ", "self", ".", "_final_states", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.BiLSTMSeqTransducer.get_final_states": [[289, 291], ["None"], "methods", ["None"], ["", "def", "get_final_states", "(", "self", ")", "->", "List", "[", "transducers", ".", "FinalTransducerState", "]", ":", "\n", "    ", "return", "self", ".", "_final_states", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.BiLSTMSeqTransducer.transduce": [[292, 314], ["recurrent.BiLSTMSeqTransducer.forward_layers[].transduce", "recurrent.BiLSTMSeqTransducer.backward_layers[].transduce", "range", "xnmt.expression_seqs.ExpressionSequence", "xnmt.expression_seqs.ReversedExpressionSequence", "len", "recurrent.BiLSTMSeqTransducer.forward_layers[].transduce", "xnmt.expression_seqs.ExpressionSequence", "xnmt.transducers.base.FinalTransducerState", "recurrent.BiLSTMSeqTransducer.backward_layers[].transduce().as_list", "dynet.concatenate", "dynet.concatenate", "range", "xnmt.expression_seqs.ReversedExpressionSequence", "len", "dynet.concatenate", "recurrent.BiLSTMSeqTransducer.backward_layers[].transduce", "[].main_expr", "[].main_expr", "[].cell_expr", "[].cell_expr", "range", "len", "xnmt.expression_seqs.ReversedExpressionSequence", "recurrent.BiLSTMSeqTransducer.forward_layers[].get_final_states", "recurrent.BiLSTMSeqTransducer.backward_layers[].get_final_states", "recurrent.BiLSTMSeqTransducer.forward_layers[].get_final_states", "recurrent.BiLSTMSeqTransducer.backward_layers[].get_final_states"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_list", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.base.FinalTransducerState.main_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.base.FinalTransducerState.main_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.base.FinalTransducerState.cell_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.base.FinalTransducerState.cell_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.get_final_states", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.get_final_states", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.get_final_states", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.get_final_states"], ["", "def", "transduce", "(", "self", ",", "es", ":", "'expression_seqs.ExpressionSequence'", ")", "->", "'expression_seqs.ExpressionSequence'", ":", "\n", "    ", "mask", "=", "es", ".", "mask", "\n", "# first layer", "\n", "forward_es", "=", "self", ".", "forward_layers", "[", "0", "]", ".", "transduce", "(", "es", ")", "\n", "rev_backward_es", "=", "self", ".", "backward_layers", "[", "0", "]", ".", "transduce", "(", "expression_seqs", ".", "ReversedExpressionSequence", "(", "es", ")", ")", "\n", "\n", "for", "layer_i", "in", "range", "(", "1", ",", "len", "(", "self", ".", "forward_layers", ")", ")", ":", "\n", "      ", "new_forward_es", "=", "self", ".", "forward_layers", "[", "layer_i", "]", ".", "transduce", "(", "[", "forward_es", ",", "expression_seqs", ".", "ReversedExpressionSequence", "(", "rev_backward_es", ")", "]", ")", "\n", "rev_backward_es", "=", "expression_seqs", ".", "ExpressionSequence", "(", "\n", "self", ".", "backward_layers", "[", "layer_i", "]", ".", "transduce", "(", "[", "expression_seqs", ".", "ReversedExpressionSequence", "(", "forward_es", ")", ",", "rev_backward_es", "]", ")", ".", "as_list", "(", ")", ",", "\n", "mask", "=", "mask", ")", "\n", "forward_es", "=", "new_forward_es", "\n", "\n", "", "self", ".", "_final_states", "=", "[", "\n", "transducers", ".", "FinalTransducerState", "(", "dy", ".", "concatenate", "(", "[", "self", ".", "forward_layers", "[", "layer_i", "]", ".", "get_final_states", "(", ")", "[", "0", "]", ".", "main_expr", "(", ")", ",", "\n", "self", ".", "backward_layers", "[", "layer_i", "]", ".", "get_final_states", "(", ")", "[", "\n", "0", "]", ".", "main_expr", "(", ")", "]", ")", ",", "\n", "dy", ".", "concatenate", "(", "[", "self", ".", "forward_layers", "[", "layer_i", "]", ".", "get_final_states", "(", ")", "[", "0", "]", ".", "cell_expr", "(", ")", ",", "\n", "self", ".", "backward_layers", "[", "layer_i", "]", ".", "get_final_states", "(", ")", "[", "\n", "0", "]", ".", "cell_expr", "(", ")", "]", ")", ")", "for", "layer_i", "in", "range", "(", "len", "(", "self", ".", "forward_layers", ")", ")", "]", "\n", "return", "expression_seqs", ".", "ExpressionSequence", "(", "expr_list", "=", "[", "dy", ".", "concatenate", "(", "[", "forward_es", "[", "i", "]", ",", "rev_backward_es", "[", "-", "i", "-", "1", "]", "]", ")", "for", "i", "in", "range", "(", "len", "(", "forward_es", ")", ")", "]", ",", "mask", "=", "mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.CustomLSTMSeqTransducer.__init__": [[336, 352], ["xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.param_collections.ParamManager.my_params", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters", "RuntimeError", "xnmt.persistence.bare", "xnmt.persistence.bare", "param_init.initializer", "param_init.initializer", "bias_init.initializer"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.my_params", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "layers", ",", "\n", "input_dim", ",", "\n", "hidden_dim", ",", "\n", "param_init", "=", "Ref", "(", "\"exp_global.param_init\"", ",", "default", "=", "bare", "(", "GlorotInitializer", ")", ")", ",", "\n", "bias_init", "=", "Ref", "(", "\"exp_global.bias_init\"", ",", "default", "=", "bare", "(", "ZeroInitializer", ")", ")", ")", ":", "\n", "    ", "if", "layers", "!=", "1", ":", "raise", "RuntimeError", "(", "\"CustomLSTMSeqTransducer supports only exactly one layer\"", ")", "\n", "self", ".", "input_dim", "=", "input_dim", "\n", "self", ".", "hidden_dim", "=", "hidden_dim", "\n", "model", "=", "ParamManager", ".", "my_params", "(", "self", ")", "\n", "\n", "# [i; f; o; g]", "\n", "self", ".", "p_Wx", "=", "model", ".", "add_parameters", "(", "dim", "=", "(", "hidden_dim", "*", "4", ",", "input_dim", ")", ",", "init", "=", "param_init", ".", "initializer", "(", "(", "hidden_dim", "*", "4", ",", "input_dim", ")", ")", ")", "\n", "self", ".", "p_Wh", "=", "model", ".", "add_parameters", "(", "dim", "=", "(", "hidden_dim", "*", "4", ",", "hidden_dim", ")", ",", "init", "=", "param_init", ".", "initializer", "(", "(", "hidden_dim", "*", "4", ",", "hidden_dim", ")", ")", ")", "\n", "self", ".", "p_b", "=", "model", ".", "add_parameters", "(", "dim", "=", "(", "hidden_dim", "*", "4", ",", ")", ",", "init", "=", "bias_init", ".", "initializer", "(", "(", "hidden_dim", "*", "4", ",", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.CustomLSTMSeqTransducer.transduce": [[353, 378], ["dynet.parameter", "dynet.parameter", "dynet.parameter", "enumerate", "dynet.pick_range", "dynet.pick_range", "dynet.pick_range", "dynet.pick_range", "dynet.logistic", "dynet.logistic", "dynet.logistic", "dynet.tanh", "h.append", "dynet.affine_transform", "dynet.affine_transform", "c.append", "c.append", "dynet.cmult", "dynet.cmult", "dynet.tanh", "dynet.cmult", "dynet.cmult"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "def", "transduce", "(", "self", ",", "xs", ":", "'expression_seqs.ExpressionSequence'", ")", "->", "'expression_seqs.ExpressionSequence'", ":", "\n", "    ", "Wx", "=", "dy", ".", "parameter", "(", "self", ".", "p_Wx", ")", "\n", "Wh", "=", "dy", ".", "parameter", "(", "self", ".", "p_Wh", ")", "\n", "b", "=", "dy", ".", "parameter", "(", "self", ".", "p_b", ")", "\n", "h", "=", "[", "]", "\n", "c", "=", "[", "]", "\n", "for", "i", ",", "x_t", "in", "enumerate", "(", "xs", ")", ":", "\n", "      ", "if", "i", "==", "0", ":", "\n", "        ", "tmp", "=", "dy", ".", "affine_transform", "(", "[", "b", ",", "Wx", ",", "x_t", "]", ")", "\n", "", "else", ":", "\n", "        ", "tmp", "=", "dy", ".", "affine_transform", "(", "[", "b", ",", "Wx", ",", "x_t", ",", "Wh", ",", "h", "[", "-", "1", "]", "]", ")", "\n", "", "i_ait", "=", "dy", ".", "pick_range", "(", "tmp", ",", "0", ",", "self", ".", "hidden_dim", ")", "\n", "i_aft", "=", "dy", ".", "pick_range", "(", "tmp", ",", "self", ".", "hidden_dim", ",", "self", ".", "hidden_dim", "*", "2", ")", "\n", "i_aot", "=", "dy", ".", "pick_range", "(", "tmp", ",", "self", ".", "hidden_dim", "*", "2", ",", "self", ".", "hidden_dim", "*", "3", ")", "\n", "i_agt", "=", "dy", ".", "pick_range", "(", "tmp", ",", "self", ".", "hidden_dim", "*", "3", ",", "self", ".", "hidden_dim", "*", "4", ")", "\n", "i_it", "=", "dy", ".", "logistic", "(", "i_ait", ")", "\n", "i_ft", "=", "dy", ".", "logistic", "(", "i_aft", "+", "1.0", ")", "\n", "i_ot", "=", "dy", ".", "logistic", "(", "i_aot", ")", "\n", "i_gt", "=", "dy", ".", "tanh", "(", "i_agt", ")", "\n", "if", "i", "==", "0", ":", "\n", "        ", "c", ".", "append", "(", "dy", ".", "cmult", "(", "i_it", ",", "i_gt", ")", ")", "\n", "", "else", ":", "\n", "        ", "c", ".", "append", "(", "dy", ".", "cmult", "(", "i_ft", ",", "c", "[", "-", "1", "]", ")", "+", "dy", ".", "cmult", "(", "i_it", ",", "i_gt", ")", ")", "\n", "", "h", ".", "append", "(", "dy", ".", "cmult", "(", "i_ot", ",", "dy", ".", "tanh", "(", "c", "[", "-", "1", "]", ")", ")", ")", "\n", "", "return", "h", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.hm.HMLSTMCell.__init__": [[37, 66], ["xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.param_collections.ParamManager.my_params", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.persistence.bare", "xnmt.persistence.bare", "param_init.initializer", "param_init.initializer", "bias_init.initializer", "param_init.initializer"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.my_params", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "input_dim", ",", "\n", "hidden_dim", ",", "\n", "above_dim", ",", "\n", "a", ",", "\n", "hier", ",", "\n", "last_layer", ",", "\n", "param_init", "=", "Ref", "(", "\"exp_global.param_init\"", ",", "default", "=", "bare", "(", "GlorotInitializer", ")", ")", ",", "\n", "bias_init", "=", "Ref", "(", "\"exp_global.bias_init\"", ",", "default", "=", "bare", "(", "ZeroInitializer", ")", ")", ")", ":", "\n", "        ", "self", ".", "input_dim", "=", "input_dim", "\n", "self", ".", "hidden_dim", "=", "hidden_dim", "\n", "self", ".", "above_dim", "=", "above_dim", "\n", "self", ".", "last_layer", "=", "last_layer", "\n", "self", ".", "a", "=", "a", "#for slope annealing", "\n", "self", ".", "hier", "=", "hier", "\n", "#        self.save_processed_arg(\"last_layer\", self.last_layer)", "\n", "model", "=", "ParamManager", ".", "my_params", "(", "self", ")", "\n", "\n", "self", ".", "p_W_1l_r", "=", "model", ".", "add_parameters", "(", "dim", "=", "(", "hidden_dim", "*", "4", "+", "1", ",", "hidden_dim", ")", ",", "init", "=", "param_init", ".", "initializer", "(", "(", "hidden_dim", "*", "4", "+", "1", ",", "hidden_dim", ")", ")", ")", "\n", "if", "not", "self", ".", "last_layer", ":", "\n", "            ", "self", ".", "p_W_2l_td", "=", "model", ".", "add_parameters", "(", "dim", "=", "(", "hidden_dim", "*", "4", "+", "1", ",", "above_dim", ")", ",", "init", "=", "param_init", ".", "initializer", "(", "(", "hidden_dim", "*", "4", "+", "1", ",", "above_dim", ")", ")", ")", "\n", "", "self", ".", "p_W_0l_bu", "=", "model", ".", "add_parameters", "(", "dim", "=", "(", "hidden_dim", "*", "4", "+", "1", ",", "input_dim", ")", ",", "init", "=", "param_init", ".", "initializer", "(", "(", "hidden_dim", "*", "4", "+", "1", ",", "input_dim", ")", ")", ")", "\n", "self", ".", "p_bias", "=", "model", ".", "add_parameters", "(", "dim", "=", "(", "hidden_dim", "*", "4", "+", "1", ",", ")", ",", "init", "=", "bias_init", ".", "initializer", "(", "(", "hidden_dim", "*", "4", "+", "1", ",", ")", ")", ")", "\n", "\n", "# to track prev timestep c, h, & z values for this layer", "\n", "self", ".", "c", "=", "None", "\n", "self", ".", "h", "=", "None", "\n", "self", ".", "z", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.hm.HMLSTMCell.transduce": [[69, 142], ["dynet.parameter", "dynet.parameter", "dynet.parameter", "dynet.cmult", "dynet.cmult", "dynet.pick_range", "dynet.pick_range", "dynet.pick_range", "dynet.pick_range", "dynet.logistic", "dynet.logistic", "dynet.logistic", "dynet.tanh", "dynet.pick_range", "dynet.logistic", "dynet.round", "dynet.zeroes", "dynet.zeroes", "dynet.ones", "dynet.parameter", "dynet.parameter", "dynet.zeroes", "dynet.cmult", "dynet.cmult", "dynet.cmult", "dynet.cmult", "dynet.cmult", "dynet.cmult", "dynet.cmult", "dynet.tanh", "s_recur.dim"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["", "def", "transduce", "(", "self", ",", "h_below", ":", "'expression_seqs.ExpressionSequence'", ",", "h_above", ",", "z_below", ")", "->", "'expression_seqs.ExpressionSequence'", ":", "\n", "        ", "if", "self", ".", "c", "==", "None", ":", "\n", "            ", "self", ".", "c", "=", "dy", ".", "zeroes", "(", "dim", "=", "(", "self", ".", "hidden_dim", ",", ")", ")", "#?? does (hidden,) take care of batch_size?", "\n", "", "if", "self", ".", "h", "==", "None", ":", "\n", "            ", "self", ".", "h", "=", "dy", ".", "zeroes", "(", "dim", "=", "(", "self", ".", "hidden_dim", ",", ")", ")", "\n", "", "if", "self", ".", "z", "==", "None", ":", "\n", "            ", "self", ".", "z", "=", "dy", ".", "ones", "(", "dim", "=", "(", "1", ",", ")", ")", "\n", "\n", "", "W_1l_r", "=", "dy", ".", "parameter", "(", "self", ".", "p_W_1l_r", ")", "\n", "bias", "=", "dy", ".", "parameter", "(", "self", ".", "p_bias", ")", "\n", "h", "=", "dy", ".", "parameter", "(", "self", ".", "h", ")", "\n", "\n", "s_recur", "=", "W_1l_r", "*", "h", "#matrix multiply is *, element-wise is dy.cmult. CURRERROR: stale expression", "\n", "if", "not", "self", ".", "last_layer", ":", "\n", "            ", "W_2l_td", "=", "dy", ".", "parameter", "(", "self", ".", "p_W_2l_td", ")", "\n", "W_0l_bu", "=", "dy", ".", "parameter", "(", "self", ".", "p_W_0l_bu", ")", "\n", "s_bottomup", "=", "W_0l_bu", "*", "h_below", "#?? this is becoming (2049,). does it need to be (2049,1) to do scalar * matrix?", "\n", "s_topdown", "=", "W_2l_td", "*", "h_above", "\n", "", "else", ":", "\n", "            ", "s_topdown", "=", "dy", ".", "zeroes", "(", "s_recur", ".", "dim", "(", ")", "[", "0", "]", "[", "0", "]", ",", ")", "#?? this gets the shape e.g. ((5, 1), 1). do i actually want batch_size as well?", "\n", "s_bottomup", "=", "W_1l_r", "*", "h", "\n", "", "s_bottomup", "=", "dy", ".", "cmult", "(", "z_below", ",", "s_bottomup", ")", "#to handle batched scalar * matrix -> e.g. (1x10, 2049x10)", "\n", "s_topdown", "=", "dy", ".", "cmult", "(", "self", ".", "z", ",", "s_topdown", ")", "#will be zeros if last_layer. is this right, or should z=1 in this case ??", "\n", "\n", "fslice", "=", "s_recur", "+", "s_topdown", "+", "s_bottomup", "+", "bias", "#?? checkme. bias has same shape as s_recur et al? [4*hidden+1, batch_size]?", "\n", "\n", "i_ft", "=", "dy", ".", "pick_range", "(", "fslice", ",", "0", ",", "self", ".", "hidden_dim", ")", "\n", "i_it", "=", "dy", ".", "pick_range", "(", "fslice", ",", "self", ".", "hidden_dim", ",", "self", ".", "hidden_dim", "*", "2", ")", "\n", "i_ot", "=", "dy", ".", "pick_range", "(", "fslice", ",", "self", ".", "hidden_dim", "*", "2", ",", "self", ".", "hidden_dim", "*", "3", ")", "\n", "i_gt", "=", "dy", ".", "pick_range", "(", "fslice", ",", "self", ".", "hidden_dim", "*", "3", ",", "self", ".", "hidden_dim", "*", "4", ")", "\n", "f_t", "=", "dy", ".", "logistic", "(", "i_ft", "+", "1.0", ")", "#+1.0 bc a paper said it was better to init that way (matthias)", "\n", "i_t", "=", "dy", ".", "logistic", "(", "i_it", ")", "\n", "o_t", "=", "dy", ".", "logistic", "(", "i_ot", ")", "\n", "g_t", "=", "dy", ".", "tanh", "(", "i_gt", ")", "\n", "\n", "\n", "#z * normal_update + (1-z)*copy: ie, when z_below is 0, z_new = z (copied prev timestamp). when z_below is 1, z_new = dy.round etc", "\n", "\n", "#hier = True", "\n", "#        z_tmp = dy.pick_range(fslice, self.hidden_dim*4,self.hidden_dim*4+1)", "\n", "#        z_tilde = dy.logistic(z_tmp)  #original: hard sigmoid + slope annealing (a)", "\n", "#        z_new = dy.cmult(1-z_below, self.z) + dy.cmult(z_below, dy.round(z_tilde, gradient_mode=\"straight_through_gradient\"))", "\n", "\n", "#hier = False", "\n", "z_tmp", "=", "dy", ".", "pick_range", "(", "fslice", ",", "self", ".", "hidden_dim", "*", "4", ",", "self", ".", "hidden_dim", "*", "4", "+", "1", ")", "\n", "z_tilde", "=", "dy", ".", "logistic", "(", "z_tmp", ")", "#original: hard sigmoid + slope annealing (a)", "\n", "z_new", "=", "dy", ".", "round", "(", "z_tilde", ",", "gradient_mode", "=", "\"straight_through_gradient\"", ")", "#use straight-through estimator for gradient: step fn forward, hard sigmoid backward", "\n", "\n", "#z = z_l,t-1", "\n", "#z_below = z_l-1,t", "\n", "\n", "#        if self.z.value() == 1: #FLUSH", "\n", "#            c_new = dy.cmult(i_t, g_t)", "\n", "#            h_new = dy.cmult(o_t, dy.tanh(c_new))", "\n", "#        elif z_below.value() == 0: #COPY", "\n", "\n", "# if flush removed, only copy or normal update", "\n", "# when z_below is 0, c_new and h_new are self.c and self.h. when z_below is 1, c_new, h_new = normal update", "\n", "c_new", "=", "dy", ".", "cmult", "(", "(", "1", "-", "z_below", ")", ",", "self", ".", "c", ")", "+", "dy", ".", "cmult", "(", "z_below", ",", "(", "dy", ".", "cmult", "(", "f_t", ",", "self", ".", "c", ")", "+", "dy", ".", "cmult", "(", "i_t", ",", "g_t", ")", ")", ")", "\n", "h_new", "=", "dy", ".", "cmult", "(", "(", "1", "-", "z_below", ")", ",", "self", ".", "h", ")", "+", "dy", ".", "cmult", "(", "z_below", ",", "dy", ".", "cmult", "(", "o_t", ",", "dy", ".", "tanh", "(", "c_new", ")", ")", ")", "\n", "\n", "#        if z_below.value() == 0: #COPY", "\n", "#            c_new = self.c", "\n", "#            h_new = self.h", "\n", "#        else: #UPDATE", "\n", "#            c_new = dy.cmult(f_t, self.c) + dy.cmult(i_t, g_t)", "\n", "#            h_new = dy.cmult(o_t, dy.tanh(c_new))", "\n", "\n", "self", ".", "c", "=", "c_new", "\n", "self", ".", "h", "=", "h_new", "\n", "self", ".", "z", "=", "z_new", "\n", "\n", "return", "h_new", ",", "z_new", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.hm.HM_LSTMTransducer.__init__": [[149, 184], ["hm.HM_LSTMTransducer.add_serializable_component", "hm.HM_LSTMTransducer.add_serializable_component", "hm.HM_LSTMTransducer.add_serializable_component", "hm.HMLSTMCell", "hm.HMLSTMCell", "hm.HMLSTMCell"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component"], ["@", "register_xnmt_handler", "\n", "@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "input_dim", ",", "\n", "hidden_dim", ",", "\n", "hier", "=", "False", ",", "\n", "a", "=", "1", ",", "\n", "bottom_layer", "=", "None", ",", "\n", "mid_layer", "=", "None", ",", "\n", "top_layer", "=", "None", ")", ":", "\n", "        ", "self", ".", "input_dim", "=", "input_dim", "\n", "self", ".", "hidden_dim", "=", "hidden_dim", "\n", "self", ".", "a", "=", "a", "#for slope annealing", "\n", "self", ".", "bottom_layer", "=", "self", ".", "add_serializable_component", "(", "\"bottom_layer\"", ",", "bottom_layer", ",", "\n", "lambda", ":", "HMLSTMCell", "(", "input_dim", "=", "input_dim", ",", "\n", "hidden_dim", "=", "hidden_dim", ",", "\n", "above_dim", "=", "hidden_dim", ",", "\n", "a", "=", "a", ",", "\n", "hier", "=", "hier", ",", "\n", "last_layer", "=", "False", ")", ")", "\n", "self", ".", "mid_layer", "=", "self", ".", "add_serializable_component", "(", "\"mid_layer\"", ",", "mid_layer", ",", "\n", "lambda", ":", "HMLSTMCell", "(", "input_dim", "=", "hidden_dim", ",", "\n", "hidden_dim", "=", "hidden_dim", ",", "\n", "above_dim", "=", "hidden_dim", ",", "\n", "a", "=", "a", ",", "\n", "hier", "=", "hier", ",", "\n", "last_layer", "=", "False", ")", ")", "\n", "self", ".", "top_layer", "=", "self", ".", "add_serializable_component", "(", "\"top_layer\"", ",", "top_layer", ",", "\n", "lambda", ":", "HMLSTMCell", "(", "input_dim", "=", "hidden_dim", ",", "\n", "hidden_dim", "=", "hidden_dim", ",", "\n", "above_dim", "=", "None", ",", "\n", "a", "=", "a", ",", "\n", "hier", "=", "hier", ",", "\n", "last_layer", "=", "True", ")", ")", "\n", "self", ".", "modules", "=", "[", "self", ".", "bottom_layer", ",", "self", ".", "mid_layer", ",", "self", ".", "top_layer", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.hm.HM_LSTMTransducer.on_start_sent": [[187, 190], ["None"], "methods", ["None"], ["", "@", "handle_xnmt_event", "\n", "def", "on_start_sent", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "_final_states", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.hm.HM_LSTMTransducer.get_final_states": [[191, 194], ["None"], "methods", ["None"], ["", "def", "get_final_states", "(", "self", ")", ":", "\n", "        ", "assert", "self", ".", "_final_states", "is", "not", "None", ",", "\"transduce() must be invoked before get_final_states()\"", "\n", "return", "self", ".", "_final_states", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.hm.HM_LSTMTransducer.transduce": [[196, 248], ["dynet.ones", "h_bot.append", "h_mid.append", "h_top.append", "enumerate", "xnmt.expression_seqs.ExpressionSequence", "[].dim", "dynet.zeroes", "dynet.zeroes", "dynet.zeroes", "hm.HM_LSTMTransducer.bottom_layer.transduce", "hm.HM_LSTMTransducer.mid_layer.transduce", "hm.HM_LSTMTransducer.top_layer.transduce", "h_bot.append", "z_bot.append", "h_mid.append", "z_mid.append", "h_top.append", "z_top.append", "xnmt.transducers.base.FinalTransducerState"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "def", "transduce", "(", "self", ",", "xs", ":", "'expression_seqs.ExpressionSequence'", ")", "->", "'expression_seqs.ExpressionSequence'", ":", "\n", "        ", "batch_size", "=", "xs", "[", "0", "]", "[", "0", "]", ".", "dim", "(", ")", "[", "1", "]", "\n", "h_bot", "=", "[", "]", "\n", "h_mid", "=", "[", "]", "\n", "h_top", "=", "[", "]", "\n", "z_bot", "=", "[", "]", "\n", "z_mid", "=", "[", "]", "\n", "z_top", "=", "[", "]", "\n", "\n", "self", ".", "top_layer", ".", "h", "=", "None", "\n", "self", ".", "top_layer", ".", "c", "=", "None", "\n", "self", ".", "top_layer", ".", "z", "=", "None", "\n", "self", ".", "mid_layer", ".", "h", "=", "None", "\n", "self", ".", "mid_layer", ".", "c", "=", "None", "\n", "self", ".", "mid_layer", ".", "z", "=", "None", "\n", "self", ".", "bottom_layer", ".", "h", "=", "None", "\n", "self", ".", "bottom_layer", ".", "c", "=", "None", "\n", "self", ".", "bottom_layer", ".", "z", "=", "None", "\n", "\n", "#?? checkme. want to init z to ones? (cherry paper)", "\n", "z_one", "=", "dy", ".", "ones", "(", "1", ",", "batch_size", "=", "batch_size", ")", "\n", "h_bot", ".", "append", "(", "dy", ".", "zeroes", "(", "dim", "=", "(", "self", ".", "hidden_dim", ",", ")", ",", "batch_size", "=", "batch_size", ")", ")", "#indices for timesteps are +1", "\n", "h_mid", ".", "append", "(", "dy", ".", "zeroes", "(", "dim", "=", "(", "self", ".", "hidden_dim", ",", ")", ",", "batch_size", "=", "batch_size", ")", ")", "\n", "h_top", ".", "append", "(", "dy", ".", "zeroes", "(", "dim", "=", "(", "self", ".", "hidden_dim", ",", ")", ",", "batch_size", "=", "batch_size", ")", ")", "\n", "\n", "for", "i", ",", "x_t", "in", "enumerate", "(", "xs", ")", ":", "\n", "            ", "h_t_bot", ",", "z_t_bot", "=", "self", ".", "bottom_layer", ".", "transduce", "(", "h_below", "=", "x_t", ",", "h_above", "=", "h_mid", "[", "i", "]", ",", "z_below", "=", "z_one", ")", "#uses h_t_top from layer above@previous time step, h_t_bot and z_t_bot from previous time step (saved in hmlstmcell)", "\n", "h_t_mid", ",", "z_t_mid", "=", "self", ".", "mid_layer", ".", "transduce", "(", "h_below", "=", "h_t_bot", ",", "h_above", "=", "h_top", "[", "i", "]", ",", "z_below", "=", "z_t_bot", ")", "#uses h_t_top from layer above@previous time step, h_t_bot and z_t_bot from previous time step (saved in hmlstmcell)", "\n", "h_t_top", ",", "z_t_top", "=", "self", ".", "top_layer", ".", "transduce", "(", "h_below", "=", "h_t_mid", ",", "h_above", "=", "None", ",", "z_below", "=", "z_t_mid", ")", "#uses z_t_bot and h_t_bot from previous layer call, h_t_top and z_t_top from previous time step (saved in hmlstmcell)", "\n", "\n", "h_bot", ".", "append", "(", "h_t_bot", ")", "\n", "z_bot", ".", "append", "(", "z_t_bot", ")", "\n", "h_mid", ".", "append", "(", "h_t_mid", ")", "\n", "z_mid", ".", "append", "(", "z_t_mid", ")", "\n", "h_top", ".", "append", "(", "h_t_top", ")", "\n", "z_top", ".", "append", "(", "z_t_top", ")", "\n", "\n", "#        #gated output module", "\n", "#", "\n", "#        #sigmoid", "\n", "#        W_layer = dy.parameters(dim=(len(self.modules), hidden_dim)) #needs to be moved to init? num layers by hidden_dim", "\n", "#        h_cat   = dy.transpose(dy.concatenate([h_bot, h_mid, h_top]))", "\n", "#        dotted  = dy.dot_product(e1, e2)", "\n", "#        gates   = dy.logistic(dotted)", "\n", "#        #relu", "\n", "#        ", "\n", "#        om = dy.relu()", "\n", "\n", "#final state is last hidden state from top layer", "\n", "", "self", ".", "_final_states", "=", "[", "transducers", ".", "FinalTransducerState", "(", "h_top", "[", "-", "1", "]", ")", "]", "\n", "fin_xs", "=", "expression_seqs", ".", "ExpressionSequence", "(", "expr_list", "=", "h_top", "[", "1", ":", "]", ")", "\n", "return", "fin_xs", "#removes the init zeros to make it same length as seq", "\n", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.hm.hard_sigmoid_anneal": [[20, 23], ["None"], "function", ["None"], ["def", "hard_sigmoid_anneal", "(", "zz", ",", "a", "=", "1.0", ")", ":", "\n", "    ", "tmp", "=", "(", "(", "a", "*", "zz", ")", "+", "1.0", ")", "/", "2.0", "#todo: clip to [0,1]", "\n", "return", "tmp", "\n", "##    output = np.clip(tmp, a_min=0, a_max=1) #?? can i do this to a dynet object? [no]. is there another way? [yes, tbd non-messy way]", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.network_in_network.NinSeqTransducer.__init__": [[26, 50], ["xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "network_in_network.NinSeqTransducer.add_serializable_component", "network_in_network.NinSeqTransducer.add_serializable_component", "network_in_network.NinSeqTransducer.add_serializable_component", "xnmt.persistence.bare", "xnmt.transducers.base.TransformSeqTransducer", "xnmt.norms.BatchNorm", "xnmt.transducers.base.TransformSeqTransducer", "xnmt.modelparts.transforms.Linear", "xnmt.modelparts.transforms.Cwise"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "input_dim", ":", "numbers", ".", "Integral", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "hidden_dim", ":", "numbers", ".", "Integral", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "downsample_by", ":", "numbers", ".", "Integral", "=", "1", ",", "\n", "param_init", ":", "param_initializers", ".", "ParamInitializer", "=", "Ref", "(", "\"exp_global.param_init\"", ",", "default", "=", "bare", "(", "param_initializers", ".", "GlorotInitializer", ")", ")", ",", "\n", "projection", ":", "Optional", "[", "base", ".", "TransformSeqTransducer", "]", "=", "None", ",", "\n", "batch_norm", ":", "Optional", "[", "norms", ".", "BatchNorm", "]", "=", "None", ",", "\n", "nonlinearity", ":", "Optional", "[", "base", ".", "TransformSeqTransducer", "]", "=", "None", ")", ":", "\n", "    ", "self", ".", "projection", "=", "self", ".", "add_serializable_component", "(", "\"projection\"", ",", "projection", ",", "\n", "lambda", ":", "base", ".", "TransformSeqTransducer", "(", "\n", "modelparts_transforms", ".", "Linear", "(", "input_dim", "=", "input_dim", "*", "downsample_by", ",", "\n", "output_dim", "=", "hidden_dim", ",", "\n", "bias", "=", "False", ",", "\n", "param_init", "=", "param_init", ")", ",", "\n", "downsample_by", "=", "downsample_by", ")", ")", "\n", "self", ".", "batch_norm", "=", "self", ".", "add_serializable_component", "(", "\"batch_norm\"", ",", "batch_norm", ",", "\n", "lambda", ":", "norms", ".", "BatchNorm", "(", "hidden_dim", "=", "hidden_dim", ",", "\n", "num_dim", "=", "2", ")", ")", "\n", "self", ".", "nonlinearity", "=", "self", ".", "add_serializable_component", "(", "\"nonlinearity\"", ",", "nonlinearity", ",", "\n", "lambda", ":", "base", ".", "TransformSeqTransducer", "(", "\n", "modelparts_transforms", ".", "Cwise", "(", "\"rectify\"", ")", "\n", ")", ")", "\n", "self", ".", "modules", "=", "[", "self", ".", "projection", ",", "self", ".", "batch_norm", ",", "self", ".", "nonlinearity", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.network_in_network.NinSeqTransducer.get_final_states": [[51, 53], ["network_in_network.NinSeqTransducer.modules[].get_final_states"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.get_final_states"], ["", "def", "get_final_states", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "modules", "[", "-", "1", "]", ".", "get_final_states", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.positional.PositionalSeqTransducer.__init__": [[20, 42], ["xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.param_collections.ParamManager.my_params", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.persistence.bare", "param_init.initializer"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.my_params", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "max_pos", ":", "numbers", ".", "Integral", ",", "\n", "op", ":", "str", "=", "'sum'", ",", "\n", "emb_type", ":", "str", "=", "'param'", ",", "\n", "input_dim", ":", "numbers", ".", "Integral", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "param_init", ":", "ParamInitializer", "=", "Ref", "(", "\"exp_global.param_init\"", ",", "default", "=", "bare", "(", "GlorotInitializer", ")", ")", ")", ":", "\n", "    ", "\"\"\"\n    max_pos: largest embedded position\n    op: how to combine positional encodings with the original encodings, can be \"sum\" or \"concat\"\n    type: what type of embddings to use, \"param\"=parameterized (others, such as the trigonometric embeddings are todo)\n    input_dim: embedding size\n    param_init: how to initialize embedding matrix\n    \"\"\"", "\n", "self", ".", "max_pos", "=", "max_pos", "\n", "self", ".", "input_dim", "=", "input_dim", "\n", "self", ".", "op", "=", "op", "\n", "self", ".", "emb_type", "=", "emb_type", "\n", "param_init", "=", "param_init", "\n", "dim", "=", "(", "self", ".", "input_dim", ",", "max_pos", ")", "\n", "param_collection", "=", "ParamManager", ".", "my_params", "(", "self", ")", "\n", "self", ".", "embedder", "=", "param_collection", ".", "add_parameters", "(", "dim", ",", "init", "=", "param_init", ".", "initializer", "(", "dim", ",", "is_lookup", "=", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.positional.PositionalSeqTransducer.get_final_states": [[43, 45], ["None"], "methods", ["None"], ["", "def", "get_final_states", "(", "self", ")", "->", "List", "[", "FinalTransducerState", "]", ":", "\n", "    ", "return", "self", ".", "_final_states", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.positional.PositionalSeqTransducer.transduce": [[46, 58], ["len", "dynet.strided_select", "xnmt.expression_seqs.ExpressionSequence", "dynet.parameter", "xnmt.transducers.base.FinalTransducerState", "src.as_tensor", "dynet.concatenate", "ValueError", "src.as_tensor"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor"], ["", "def", "transduce", "(", "self", ",", "src", ":", "ExpressionSequence", ")", "->", "ExpressionSequence", ":", "\n", "    ", "sent_len", "=", "len", "(", "src", ")", "\n", "embeddings", "=", "dy", ".", "strided_select", "(", "dy", ".", "parameter", "(", "self", ".", "embedder", ")", ",", "[", "1", ",", "1", "]", ",", "[", "0", ",", "0", "]", ",", "[", "self", ".", "input_dim", ",", "sent_len", "]", ")", "\n", "if", "self", ".", "op", "==", "'sum'", ":", "\n", "      ", "output", "=", "embeddings", "+", "src", ".", "as_tensor", "(", ")", "\n", "", "elif", "self", ".", "op", "==", "'concat'", ":", "\n", "      ", "output", "=", "dy", ".", "concatenate", "(", "[", "embeddings", ",", "src", ".", "as_tensor", "(", ")", "]", ")", "\n", "", "else", ":", "\n", "      ", "raise", "ValueError", "(", "f'Illegal op {op} in PositionalTransducer (options are \"sum\"/\"concat\")'", ")", "\n", "", "output_seq", "=", "ExpressionSequence", "(", "expr_tensor", "=", "output", ",", "mask", "=", "src", ".", "mask", ")", "\n", "self", ".", "_final_states", "=", "[", "FinalTransducerState", "(", "output_seq", "[", "-", "1", "]", ")", "]", "\n", "return", "output_seq", "\n", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.fixed_size_att.FixedSizeAttSeqTransducer.__init__": [[30, 49], ["xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.param_collections.ParamManager.my_params", "xnmt.param_collections.ParamManager.my_params.add_parameters", "numpy.zeros", "range", "xnmt.persistence.bare", "param_init.initializer", "range"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.my_params", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "hidden_dim", ":", "numbers", ".", "Integral", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "output_len", ":", "numbers", ".", "Integral", "=", "32", ",", "\n", "pos_enc_max", ":", "Optional", "[", "numbers", ".", "Integral", "]", "=", "None", ",", "\n", "param_init", ":", "ParamInitializer", "=", "Ref", "(", "\"exp_global.param_init\"", ",", "\n", "default", "=", "bare", "(", "GlorotInitializer", ")", ")", ")", "->", "None", ":", "\n", "    ", "subcol", "=", "ParamManager", ".", "my_params", "(", "self", ")", "\n", "self", ".", "output_len", "=", "output_len", "\n", "self", ".", "W", "=", "subcol", ".", "add_parameters", "(", "dim", "=", "(", "hidden_dim", ",", "output_len", ")", ",", "\n", "init", "=", "param_init", ".", "initializer", "(", "(", "hidden_dim", ",", "output_len", ")", ")", ")", "\n", "self", ".", "pos_enc_max", "=", "pos_enc_max", "\n", "if", "self", ".", "pos_enc_max", ":", "\n", "      ", "self", ".", "pos_enc", "=", "np", ".", "zeros", "(", "(", "self", ".", "pos_enc_max", ",", "self", ".", "output_len", ")", ")", "\n", "for", "k", "in", "range", "(", "self", ".", "output_len", ")", ":", "\n", "        ", "for", "s", "in", "range", "(", "self", ".", "pos_enc_max", ")", ":", "\n", "          ", "self", ".", "pos_enc", "[", "s", ",", "k", "]", "=", "(", "1.0", "-", "k", "/", "self", ".", "output_len", ")", "*", "(", "\n", "1.0", "-", "s", "/", "self", ".", "pos_enc_max", ")", "+", "k", "/", "self", ".", "output_len", "*", "s", "/", "self", ".", "pos_enc_max", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.fixed_size_att.FixedSizeAttSeqTransducer.get_final_states": [[50, 52], ["NotImplementedError"], "methods", ["None"], ["", "", "", "", "def", "get_final_states", "(", "self", ")", "->", "List", "[", "transducers", ".", "FinalTransducerState", "]", ":", "\n", "    ", "raise", "NotImplementedError", "(", "'FixedSizeAttSeqTransducer.get_final_states() not implemented'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.fixed_size_att.FixedSizeAttSeqTransducer.transduce": [[53, 65], ["x.as_transposed_tensor", "dynet.softmax", "xnmt.expression_seqs.ExpressionSequence", "dynet.parameter", "x.mask.add_to_tensor_expr", "dynet.cmult", "x.as_tensor", "dynet.inputTensor", "x.as_transposed_tensor.dim"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.as_transposed_tensor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.add_to_tensor_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["", "def", "transduce", "(", "self", ",", "x", ":", "expression_seqs", ".", "ExpressionSequence", ")", "->", "expression_seqs", ".", "ExpressionSequence", ":", "\n", "    ", "x_T", "=", "x", ".", "as_transposed_tensor", "(", ")", "\n", "scores", "=", "x_T", "*", "dy", ".", "parameter", "(", "self", ".", "W", ")", "\n", "if", "x", ".", "mask", "is", "not", "None", ":", "\n", "      ", "scores", "=", "x", ".", "mask", ".", "add_to_tensor_expr", "(", "scores", ",", "multiplicator", "=", "-", "100.0", ",", "time_first", "=", "True", ")", "\n", "", "if", "self", ".", "pos_enc_max", ":", "\n", "      ", "seq_len", "=", "x_T", ".", "dim", "(", ")", "[", "0", "]", "[", "0", "]", "\n", "pos_enc", "=", "self", ".", "pos_enc", "[", ":", "seq_len", ",", ":", "]", "\n", "scores", "=", "dy", ".", "cmult", "(", "scores", ",", "dy", ".", "inputTensor", "(", "pos_enc", ")", ")", "\n", "", "attention", "=", "dy", ".", "softmax", "(", "scores", ")", "\n", "output_expr", "=", "x", ".", "as_tensor", "(", ")", "*", "attention", "\n", "return", "expression_seqs", ".", "ExpressionSequence", "(", "expr_tensor", "=", "output_expr", ",", "mask", "=", "None", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.convolution.ConvConnectedSeqTransducer.__init__": [[17, 56], ["xnmt.param_collections.ParamManager.my_params", "dynet.NormalInitializer", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters", "range", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters", "convolution.ConvConnectedSeqTransducer.builder_layers.append"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.my_params", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "input_dim", ",", "window_receptor", ",", "output_dim", ",", "num_layers", ",", "internal_dim", ",", "non_linearity", "=", "'linear'", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n      num_layers: num layers after first receptor conv\n      input_dim: size of the inputs\n      window_receptor: window for the receptor\n      ouput_dim: size of the outputs\n      internal_dim: size of hidden dimension, internal dimension\n      non_linearity: Non linearity to apply between layers\n      \"\"\"", "\n", "\n", "model", "=", "ParamManager", ".", "my_params", "(", "self", ")", "\n", "self", ".", "input_dim", "=", "input_dim", "\n", "self", ".", "window_receptor", "=", "window_receptor", "\n", "self", ".", "internal_dim", "=", "internal_dim", "\n", "self", ".", "non_linearity", "=", "non_linearity", "\n", "self", ".", "output_dim", "=", "output_dim", "\n", "if", "self", ".", "non_linearity", "==", "'linear'", ":", "\n", "        ", "self", ".", "gain", "=", "1.0", "\n", "", "elif", "self", ".", "non_linearity", "==", "'tanh'", ":", "\n", "        ", "self", ".", "gain", "=", "1.0", "\n", "", "elif", "self", ".", "non_linearity", "==", "'relu'", ":", "\n", "        ", "self", ".", "gain", "=", "0.5", "\n", "", "elif", "self", ".", "non_linearity", "==", "'sigmoid'", ":", "\n", "        ", "self", ".", "gain", "=", "4.0", "\n", "\n", "", "normalInit", "=", "dy", ".", "NormalInitializer", "(", "0", ",", "0.1", ")", "\n", "\n", "self", ".", "pConv1", "=", "model", ".", "add_parameters", "(", "dim", "=", "(", "self", ".", "input_dim", ",", "self", ".", "window_receptor", ",", "1", ",", "self", ".", "internal_dim", ")", ",", "init", "=", "normalInit", ")", "\n", "self", ".", "pBias1", "=", "model", ".", "add_parameters", "(", "dim", "=", "(", "self", ".", "internal_dim", ",", ")", ")", "\n", "self", ".", "builder_layers", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "num_layers", ")", ":", "\n", "        ", "conv", "=", "model", ".", "add_parameters", "(", "dim", "=", "(", "self", ".", "internal_dim", ",", "1", ",", "1", ",", "self", ".", "internal_dim", ")", ",", "init", "=", "normalInit", ")", "\n", "bias", "=", "model", ".", "add_parameters", "(", "dim", "=", "(", "self", ".", "internal_dim", ",", ")", ")", "\n", "self", ".", "builder_layers", ".", "append", "(", "(", "conv", ",", "bias", ")", ")", "\n", "\n", "", "self", ".", "last_conv", "=", "model", ".", "add_parameters", "(", "dim", "=", "(", "self", ".", "internal_dim", ",", "1", ",", "1", ",", "self", ".", "output_dim", ")", ",", "init", "=", "normalInit", ")", "\n", "self", ".", "last_bias", "=", "model", ".", "add_parameters", "(", "dim", "=", "(", "self", ".", "output_dim", ",", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.convolution.ConvConnectedSeqTransducer.whoami": [[57, 58], ["None"], "methods", ["None"], ["", "def", "whoami", "(", "self", ")", ":", "return", "\"ConvConnectedEncoder\"", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.convolution.ConvConnectedSeqTransducer.get_final_states": [[59, 61], ["None"], "methods", ["None"], ["def", "get_final_states", "(", "self", ")", "->", "List", "[", "FinalTransducerState", "]", ":", "\n", "    ", "return", "self", ".", "_final_states", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.convolution.ConvConnectedSeqTransducer.transduce": [[62, 105], ["embed_sent.as_tensor", "dynet.concatenate", "dynet.parameter", "dynet.parameter", "dynet.reshape", "dynet.conv2d_bias", "dynet.reshape", "dynet.parameter", "dynet.parameter", "dynet.conv2d_bias", "dynet.reshape", "xnmt.expression_seqs.ExpressionSequence", "dynet.concatenate.dim", "dynet.conv2d_bias", "dynet.reshape", "xnmt.transducers.base.FinalTransducerState", "dynet.concatenate.dim", "dynet.zeroes", "dynet.zeroes", "dynet.tanh", "dynet.parameter", "dynet.parameter", "dynet.rectify", "dynet.tanh", "dynet.logistic", "dynet.rectify", "dynet.logistic"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["", "def", "transduce", "(", "self", ",", "embed_sent", ":", "ExpressionSequence", ")", "->", "ExpressionSequence", ":", "\n", "    ", "src", "=", "embed_sent", ".", "as_tensor", "(", ")", "\n", "\n", "sent_len", "=", "src", ".", "dim", "(", ")", "[", "0", "]", "[", "1", "]", "\n", "batch_size", "=", "src", ".", "dim", "(", ")", "[", "1", "]", "\n", "pad_size", "=", "(", "self", ".", "window_receptor", "-", "1", ")", "/", "2", "#TODO adapt it also for even window size", "\n", "\n", "src", "=", "dy", ".", "concatenate", "(", "[", "dy", ".", "zeroes", "(", "(", "self", ".", "input_dim", ",", "pad_size", ")", ",", "batch_size", "=", "batch_size", ")", ",", "src", ",", "dy", ".", "zeroes", "(", "(", "self", ".", "input_dim", ",", "pad_size", ")", ",", "batch_size", "=", "batch_size", ")", "]", ",", "d", "=", "1", ")", "\n", "padded_sent_len", "=", "sent_len", "+", "2", "*", "pad_size", "\n", "\n", "conv1", "=", "dy", ".", "parameter", "(", "self", ".", "pConv1", ")", "\n", "bias1", "=", "dy", ".", "parameter", "(", "self", ".", "pBias1", ")", "\n", "src_chn", "=", "dy", ".", "reshape", "(", "src", ",", "(", "self", ".", "input_dim", ",", "padded_sent_len", ",", "1", ")", ",", "batch_size", "=", "batch_size", ")", "\n", "cnn_layer1", "=", "dy", ".", "conv2d_bias", "(", "src_chn", ",", "conv1", ",", "bias1", ",", "stride", "=", "[", "1", ",", "1", "]", ")", "\n", "\n", "hidden_layer", "=", "dy", ".", "reshape", "(", "cnn_layer1", ",", "(", "self", ".", "internal_dim", ",", "sent_len", ",", "1", ")", ",", "batch_size", "=", "batch_size", ")", "\n", "if", "self", ".", "non_linearity", "is", "'linear'", ":", "\n", "        ", "hidden_layer", "=", "hidden_layer", "\n", "", "elif", "self", ".", "non_linearity", "is", "'tanh'", ":", "\n", "        ", "hidden_layer", "=", "dy", ".", "tanh", "(", "hidden_layer", ")", "\n", "", "elif", "self", ".", "non_linearity", "is", "'relu'", ":", "\n", "        ", "hidden_layer", "=", "dy", ".", "rectify", "(", "hidden_layer", ")", "\n", "", "elif", "self", ".", "non_linearity", "is", "'sigmoid'", ":", "\n", "        ", "hidden_layer", "=", "dy", ".", "logistic", "(", "hidden_layer", ")", "\n", "\n", "", "for", "conv_hid", ",", "bias_hid", "in", "self", ".", "builder_layers", ":", "\n", "        ", "hidden_layer", "=", "dy", ".", "conv2d_bias", "(", "hidden_layer", ",", "dy", ".", "parameter", "(", "conv_hid", ")", ",", "dy", ".", "parameter", "(", "bias_hid", ")", ",", "stride", "=", "[", "1", ",", "1", "]", ")", "\n", "hidden_layer", "=", "dy", ".", "reshape", "(", "hidden_layer", ",", "(", "self", ".", "internal_dim", ",", "sent_len", ",", "1", ")", ",", "batch_size", "=", "batch_size", ")", "\n", "if", "self", ".", "non_linearity", "is", "'linear'", ":", "\n", "            ", "hidden_layer", "=", "hidden_layer", "\n", "", "elif", "self", ".", "non_linearity", "is", "'tanh'", ":", "\n", "            ", "hidden_layer", "=", "dy", ".", "tanh", "(", "hidden_layer", ")", "\n", "", "elif", "self", ".", "non_linearity", "is", "'relu'", ":", "\n", "            ", "hidden_layer", "=", "dy", ".", "rectify", "(", "hidden_layer", ")", "\n", "", "elif", "self", ".", "non_linearity", "is", "'sigmoid'", ":", "\n", "            ", "hidden_layer", "=", "dy", ".", "logistic", "(", "hidden_layer", ")", "\n", "", "", "last_conv", "=", "dy", ".", "parameter", "(", "self", ".", "last_conv", ")", "\n", "last_bias", "=", "dy", ".", "parameter", "(", "self", ".", "last_bias", ")", "\n", "output", "=", "dy", ".", "conv2d_bias", "(", "hidden_layer", ",", "last_conv", ",", "last_bias", ",", "stride", "=", "[", "1", ",", "1", "]", ")", "\n", "output", "=", "dy", ".", "reshape", "(", "output", ",", "(", "sent_len", ",", "self", ".", "output_dim", ")", ",", "batch_size", "=", "batch_size", ")", "\n", "output_seq", "=", "ExpressionSequence", "(", "expr_tensor", "=", "output", ")", "\n", "self", ".", "_final_states", "=", "[", "FinalTransducerState", "(", "output_seq", "[", "-", "1", "]", ")", "]", "\n", "return", "output_seq", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.self_attention.MultiHeadAttentionSeqTransducer.__init__": [[23, 40], ["xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.param_collections.ParamManager.my_params", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.persistence.bare", "xnmt.persistence.bare", "range", "range", "param_init.initializer", "bias_init.initializer"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.my_params", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer"], ["@", "register_xnmt_handler", "\n", "@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "input_dim", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "param_init", "=", "Ref", "(", "\"exp_global.param_init\"", ",", "default", "=", "bare", "(", "GlorotInitializer", ")", ")", ",", "\n", "bias_init", "=", "Ref", "(", "\"exp_global.bias_init\"", ",", "default", "=", "bare", "(", "ZeroInitializer", ")", ")", ",", "\n", "num_heads", "=", "8", ")", ":", "\n", "    ", "assert", "(", "input_dim", "%", "num_heads", "==", "0", ")", "\n", "\n", "param_collection", "=", "ParamManager", ".", "my_params", "(", "self", ")", "\n", "\n", "self", ".", "input_dim", "=", "input_dim", "\n", "self", ".", "num_heads", "=", "num_heads", "\n", "self", ".", "head_dim", "=", "input_dim", "//", "num_heads", "\n", "\n", "self", ".", "pWq", ",", "self", ".", "pWk", ",", "self", ".", "pWv", ",", "self", ".", "pWo", "=", "[", "param_collection", ".", "add_parameters", "(", "dim", "=", "(", "input_dim", ",", "input_dim", ")", ",", "init", "=", "param_init", ".", "initializer", "(", "(", "input_dim", ",", "input_dim", ")", ")", ")", "for", "_", "in", "range", "(", "4", ")", "]", "\n", "self", ".", "pbq", ",", "self", ".", "pbk", ",", "self", ".", "pbv", ",", "self", ".", "pbo", "=", "[", "param_collection", ".", "add_parameters", "(", "dim", "=", "(", "1", ",", "input_dim", ")", ",", "init", "=", "bias_init", ".", "initializer", "(", "(", "1", ",", "input_dim", ",", ")", ")", ")", "for", "_", "in", "range", "(", "4", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.self_attention.MultiHeadAttentionSeqTransducer.on_start_sent": [[41, 44], ["None"], "methods", ["None"], ["", "@", "handle_xnmt_event", "\n", "def", "on_start_sent", "(", "self", ",", "src", ")", ":", "\n", "    ", "self", ".", "_final_states", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.self_attention.MultiHeadAttentionSeqTransducer.get_final_states": [[45, 47], ["None"], "methods", ["None"], ["", "def", "get_final_states", "(", "self", ")", "->", "List", "[", "FinalTransducerState", "]", ":", "\n", "    ", "return", "self", ".", "_final_states", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.self_attention.MultiHeadAttentionSeqTransducer.on_set_train": [[48, 51], ["None"], "methods", ["None"], ["", "@", "handle_xnmt_event", "\n", "def", "on_set_train", "(", "self", ",", "val", ")", ":", "\n", "    ", "self", ".", "train", "=", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.self_attention.MultiHeadAttentionSeqTransducer.transduce": [[52, 98], ["xnmt.expression_seqs.ExpressionSequence.as_transposed_tensor", "dynet.softmax", "dynet.reshape", "xnmt.expression_seqs.ExpressionSequence", "dynet.parameter", "dynet.parameter", "xnmt.expression_seqs.ExpressionSequence.as_transposed_tensor.dim", "dynet.reshape", "math.sqrt", "xnmt.transducers.base.FinalTransducerState", "xnmt.expression_seqs.ExpressionSequence.as_transposed_tensor.dim", "dynet.transpose", "dynet.inputTensor", "numpy.repeat().transpose", "numpy.repeat"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.as_transposed_tensor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["", "def", "transduce", "(", "self", ",", "expr_seq", ":", "ExpressionSequence", ")", "->", "ExpressionSequence", ":", "\n", "    ", "\"\"\"\n    transduce the sequence\n\n    Args:\n      expr_seq: expression sequence or list of expression sequences (where each inner list will be concatenated)\n    Returns:\n      expression sequence\n    \"\"\"", "\n", "\n", "Wq", ",", "Wk", ",", "Wv", ",", "Wo", "=", "[", "dy", ".", "parameter", "(", "x", ")", "for", "x", "in", "(", "self", ".", "pWq", ",", "self", ".", "pWk", ",", "self", ".", "pWv", ",", "self", ".", "pWo", ")", "]", "\n", "bq", ",", "bk", ",", "bv", ",", "bo", "=", "[", "dy", ".", "parameter", "(", "x", ")", "for", "x", "in", "(", "self", ".", "pbq", ",", "self", ".", "pbk", ",", "self", ".", "pbv", ",", "self", ".", "pbo", ")", "]", "\n", "\n", "# Start with a [(length, model_size) x batch] tensor", "\n", "x", "=", "expr_seq", ".", "as_transposed_tensor", "(", ")", "\n", "x_len", "=", "x", ".", "dim", "(", ")", "[", "0", "]", "[", "0", "]", "\n", "x_batch", "=", "x", ".", "dim", "(", ")", "[", "1", "]", "\n", "# Get the query key and value vectors", "\n", "# TODO: do we need bias broadcasting in DyNet?", "\n", "# q = dy.affine_transform([bq, x, Wq])", "\n", "# k = dy.affine_transform([bk, x, Wk])", "\n", "# v = dy.affine_transform([bv, x, Wv])", "\n", "q", "=", "bq", "+", "x", "*", "Wq", "\n", "k", "=", "bk", "+", "x", "*", "Wk", "\n", "v", "=", "bv", "+", "x", "*", "Wv", "\n", "\n", "# Split to batches [(length, head_dim) x batch * num_heads] tensor", "\n", "q", ",", "k", ",", "v", "=", "[", "dy", ".", "reshape", "(", "x", ",", "(", "x_len", ",", "self", ".", "head_dim", ")", ",", "batch_size", "=", "x_batch", "*", "self", ".", "num_heads", ")", "for", "x", "in", "(", "q", ",", "k", ",", "v", ")", "]", "\n", "\n", "# Do scaled dot product [(length, length) x batch * num_heads], rows are queries, columns are keys", "\n", "attn_score", "=", "q", "*", "dy", ".", "transpose", "(", "k", ")", "/", "sqrt", "(", "self", ".", "head_dim", ")", "\n", "if", "expr_seq", ".", "mask", "is", "not", "None", ":", "\n", "      ", "mask", "=", "dy", ".", "inputTensor", "(", "np", ".", "repeat", "(", "expr_seq", ".", "mask", ".", "np_arr", ",", "self", ".", "num_heads", ",", "axis", "=", "0", ")", ".", "transpose", "(", ")", ",", "batched", "=", "True", ")", "*", "-", "1e10", "\n", "attn_score", "=", "attn_score", "+", "mask", "\n", "", "attn_prob", "=", "dy", ".", "softmax", "(", "attn_score", ",", "d", "=", "1", ")", "\n", "# Reduce using attention and resize to match [(length, model_size) x batch]", "\n", "o", "=", "dy", ".", "reshape", "(", "attn_prob", "*", "v", ",", "(", "x_len", ",", "self", ".", "input_dim", ")", ",", "batch_size", "=", "x_batch", ")", "\n", "# Final transformation", "\n", "# o = dy.affine_transform([bo, attn_prob * v, Wo])", "\n", "o", "=", "bo", "+", "o", "*", "Wo", "\n", "\n", "expr_seq", "=", "ExpressionSequence", "(", "expr_transposed_tensor", "=", "o", ",", "mask", "=", "expr_seq", ".", "mask", ")", "\n", "\n", "self", ".", "_final_states", "=", "[", "FinalTransducerState", "(", "expr_seq", "[", "-", "1", "]", ",", "None", ")", "]", "\n", "\n", "return", "expr_seq", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.pyramidal.PyramidalLSTMSeqTransducer.__init__": [[31, 56], ["xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "pyramidal.PyramidalLSTMSeqTransducer.add_serializable_component", "type", "pyramidal.PyramidalLSTMSeqTransducer.make_builder_layers", "type", "len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.pyramidal.PyramidalUniLSTMSeqTransducer.make_builder_layers"], ["@", "register_xnmt_handler", "\n", "@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "layers", ":", "numbers", ".", "Integral", "=", "1", ",", "\n", "input_dim", ":", "numbers", ".", "Integral", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "hidden_dim", ":", "numbers", ".", "Integral", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "downsampling_method", ":", "str", "=", "\"concat\"", ",", "\n", "reduce_factor", ":", "Union", "[", "numbers", ".", "Integral", ",", "Sequence", "[", "numbers", ".", "Integral", "]", "]", "=", "2", ",", "\n", "dropout", ":", "float", "=", "Ref", "(", "\"exp_global.dropout\"", ",", "default", "=", "0.0", ")", ",", "\n", "builder_layers", ":", "Any", "=", "None", ")", ":", "\n", "    ", "self", ".", "dropout", "=", "dropout", "\n", "assert", "layers", ">", "0", "\n", "assert", "hidden_dim", "%", "2", "==", "0", "\n", "assert", "type", "(", "reduce_factor", ")", "==", "int", "or", "(", "type", "(", "reduce_factor", ")", "==", "list", "and", "len", "(", "reduce_factor", ")", "==", "layers", "-", "1", ")", "\n", "assert", "downsampling_method", "in", "[", "\"concat\"", ",", "\"skip\"", "]", "\n", "\n", "self", ".", "downsampling_method", "=", "downsampling_method", "\n", "self", ".", "reduce_factor", "=", "reduce_factor", "\n", "self", ".", "input_dim", "=", "input_dim", "\n", "self", ".", "hidden_dim", "=", "hidden_dim", "\n", "self", ".", "builder_layers", "=", "self", ".", "add_serializable_component", "(", "\"builder_layers\"", ",", "builder_layers", ",", "\n", "lambda", ":", "self", ".", "make_builder_layers", "(", "input_dim", ",", "hidden_dim", ",", "\n", "layers", ",", "dropout", ",", "\n", "downsampling_method", ",", "\n", "reduce_factor", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.pyramidal.PyramidalLSTMSeqTransducer.make_builder_layers": [[57, 68], ["xnmt.transducers.recurrent.UniLSTMSeqTransducer", "xnmt.transducers.recurrent.UniLSTMSeqTransducer", "builder_layers.append", "range", "xnmt.transducers.recurrent.UniLSTMSeqTransducer", "xnmt.transducers.recurrent.UniLSTMSeqTransducer", "builder_layers.append"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "def", "make_builder_layers", "(", "self", ",", "input_dim", ",", "hidden_dim", ",", "layers", ",", "dropout", ",", "downsampling_method", ",", "reduce_factor", ")", ":", "\n", "    ", "builder_layers", "=", "[", "]", "\n", "f", "=", "UniLSTMSeqTransducer", "(", "input_dim", "=", "input_dim", ",", "hidden_dim", "=", "hidden_dim", "/", "2", ",", "dropout", "=", "dropout", ")", "\n", "b", "=", "UniLSTMSeqTransducer", "(", "input_dim", "=", "input_dim", ",", "hidden_dim", "=", "hidden_dim", "/", "2", ",", "dropout", "=", "dropout", ")", "\n", "builder_layers", ".", "append", "(", "[", "f", ",", "b", "]", ")", "\n", "for", "_", "in", "range", "(", "layers", "-", "1", ")", ":", "\n", "      ", "layer_input_dim", "=", "hidden_dim", "if", "downsampling_method", "==", "\"skip\"", "else", "hidden_dim", "*", "reduce_factor", "\n", "f", "=", "UniLSTMSeqTransducer", "(", "input_dim", "=", "layer_input_dim", ",", "hidden_dim", "=", "hidden_dim", "/", "2", ",", "dropout", "=", "dropout", ")", "\n", "b", "=", "UniLSTMSeqTransducer", "(", "input_dim", "=", "layer_input_dim", ",", "hidden_dim", "=", "hidden_dim", "/", "2", ",", "dropout", "=", "dropout", ")", "\n", "builder_layers", ".", "append", "(", "[", "f", ",", "b", "]", ")", "\n", "", "return", "builder_layers", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.pyramidal.PyramidalLSTMSeqTransducer.on_start_sent": [[69, 72], ["None"], "methods", ["None"], ["", "@", "handle_xnmt_event", "\n", "def", "on_start_sent", "(", "self", ",", "src", ")", ":", "\n", "    ", "self", ".", "_final_states", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.pyramidal.PyramidalLSTMSeqTransducer.get_final_states": [[73, 75], ["None"], "methods", ["None"], ["", "def", "get_final_states", "(", "self", ")", "->", "List", "[", "FinalTransducerState", "]", ":", "\n", "    ", "return", "self", ".", "_final_states", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.pyramidal.PyramidalLSTMSeqTransducer._reduce_factor_for_layer": [[76, 83], ["len", "type"], "methods", ["None"], ["", "def", "_reduce_factor_for_layer", "(", "self", ",", "layer_i", ")", ":", "\n", "    ", "if", "layer_i", ">=", "len", "(", "self", ".", "builder_layers", ")", "-", "1", ":", "\n", "      ", "return", "1", "\n", "", "elif", "type", "(", "self", ".", "reduce_factor", ")", "==", "int", ":", "\n", "      ", "return", "self", ".", "reduce_factor", "\n", "", "else", ":", "\n", "      ", "return", "self", ".", "reduce_factor", "[", "layer_i", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.pyramidal.PyramidalLSTMSeqTransducer.transduce": [[84, 138], ["enumerate", "pyramidal.PyramidalLSTMSeqTransducer._reduce_factor_for_layer", "fb.transduce", "bb.transduce", "xnmt.transducers.base.FinalTransducerState", "es_list[].mask.lin_subsampled", "ValueError", "xnmt.expression_seqs.ExpressionSequence", "dynet.concatenate", "dynet.concatenate", "xnmt.expression_seqs.ReversedExpressionSequence", "len", "len", "xnmt.expression_seqs.ExpressionSequence", "xnmt.expression_seqs.ExpressionSequence", "len", "range", "RuntimeError", "[].main_expr", "[].main_expr", "[].cell_expr", "[].cell_expr", "len", "range", "dynet.concatenate", "es_list_fwd[].append", "es_list_bwd[].append", "xnmt.expression_seqs.ExpressionSequence", "xnmt.expression_seqs.ExpressionSequence", "zip", "es_list_fwd.append", "es_list_bwd.append", "range", "range", "xnmt.expression_seqs.ReversedExpressionSequence", "fb.get_final_states", "bb.get_final_states", "fb.get_final_states", "bb.get_final_states", "len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.pyramidal.PyramidalUniLSTMSeqTransducer._reduce_factor_for_layer", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.lin_subsampled", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.base.FinalTransducerState.main_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.base.FinalTransducerState.main_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.base.FinalTransducerState.cell_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.base.FinalTransducerState.cell_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.get_final_states", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.get_final_states", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.get_final_states", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.get_final_states"], ["", "", "def", "transduce", "(", "self", ",", "es", ":", "ExpressionSequence", ")", "->", "ExpressionSequence", ":", "\n", "    ", "\"\"\"\n    returns the list of output Expressions obtained by adding the given inputs\n    to the current state, one by one, to both the forward and backward RNNs,\n    and concatenating.\n\n    Args:\n      es: an ExpressionSequence\n    \"\"\"", "\n", "es_list", "=", "[", "es", "]", "\n", "\n", "for", "layer_i", ",", "(", "fb", ",", "bb", ")", "in", "enumerate", "(", "self", ".", "builder_layers", ")", ":", "\n", "      ", "reduce_factor", "=", "self", ".", "_reduce_factor_for_layer", "(", "layer_i", ")", "\n", "\n", "if", "es_list", "[", "0", "]", ".", "mask", "is", "None", ":", "mask_out", "=", "None", "\n", "else", ":", "mask_out", "=", "es_list", "[", "0", "]", ".", "mask", ".", "lin_subsampled", "(", "reduce_factor", ")", "\n", "\n", "if", "self", ".", "downsampling_method", "==", "\"concat\"", "and", "len", "(", "es_list", "[", "0", "]", ")", "%", "reduce_factor", "!=", "0", ":", "\n", "        ", "raise", "ValueError", "(", "f\"For 'concat' subsampling, sequence lengths must be multiples of the total reduce factor, \"", "\n", "f\"but got sequence length={len(es_list[0])} for reduce_factor={reduce_factor}. \"", "\n", "f\"Set Batcher's pad_src_to_multiple argument accordingly.\"", ")", "\n", "", "fs", "=", "fb", ".", "transduce", "(", "es_list", ")", "\n", "bs", "=", "bb", ".", "transduce", "(", "[", "ReversedExpressionSequence", "(", "es_item", ")", "for", "es_item", "in", "es_list", "]", ")", "\n", "if", "layer_i", "<", "len", "(", "self", ".", "builder_layers", ")", "-", "1", ":", "\n", "        ", "if", "self", ".", "downsampling_method", "==", "\"skip\"", ":", "\n", "          ", "es_list", "=", "[", "ExpressionSequence", "(", "expr_list", "=", "fs", "[", ":", ":", "reduce_factor", "]", ",", "mask", "=", "mask_out", ")", ",", "\n", "ExpressionSequence", "(", "expr_list", "=", "bs", "[", ":", ":", "reduce_factor", "]", "[", ":", ":", "-", "1", "]", ",", "mask", "=", "mask_out", ")", "]", "\n", "", "elif", "self", ".", "downsampling_method", "==", "\"concat\"", ":", "\n", "          ", "es_len", "=", "len", "(", "es_list", "[", "0", "]", ")", "\n", "es_list_fwd", "=", "[", "]", "\n", "es_list_bwd", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "es_len", ",", "reduce_factor", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "reduce_factor", ")", ":", "\n", "              ", "if", "i", "==", "0", ":", "\n", "                ", "es_list_fwd", ".", "append", "(", "[", "]", ")", "\n", "es_list_bwd", ".", "append", "(", "[", "]", ")", "\n", "", "es_list_fwd", "[", "j", "]", ".", "append", "(", "fs", "[", "i", "+", "j", "]", ")", "\n", "es_list_bwd", "[", "j", "]", ".", "append", "(", "bs", "[", "len", "(", "es_list", "[", "0", "]", ")", "-", "reduce_factor", "+", "j", "-", "i", "]", ")", "\n", "", "", "es_list", "=", "[", "ExpressionSequence", "(", "expr_list", "=", "es_list_fwd", "[", "j", "]", ",", "mask", "=", "mask_out", ")", "for", "j", "in", "range", "(", "reduce_factor", ")", "]", "+", "[", "ExpressionSequence", "(", "expr_list", "=", "es_list_bwd", "[", "j", "]", ",", "mask", "=", "mask_out", ")", "for", "j", "in", "range", "(", "reduce_factor", ")", "]", "\n", "", "else", ":", "\n", "          ", "raise", "RuntimeError", "(", "f\"unknown downsampling_method {self.downsampling_method}\"", ")", "\n", "", "", "else", ":", "\n", "# concat final outputs", "\n", "        ", "ret_es", "=", "ExpressionSequence", "(", "\n", "expr_list", "=", "[", "dy", ".", "concatenate", "(", "[", "f", ",", "b", "]", ")", "for", "f", ",", "b", "in", "zip", "(", "fs", ",", "ReversedExpressionSequence", "(", "bs", ")", ")", "]", ",", "mask", "=", "mask_out", ")", "\n", "\n", "", "", "self", ".", "_final_states", "=", "[", "FinalTransducerState", "(", "dy", ".", "concatenate", "(", "[", "fb", ".", "get_final_states", "(", ")", "[", "0", "]", ".", "main_expr", "(", ")", ",", "\n", "bb", ".", "get_final_states", "(", ")", "[", "0", "]", ".", "main_expr", "(", ")", "]", ")", ",", "\n", "dy", ".", "concatenate", "(", "[", "fb", ".", "get_final_states", "(", ")", "[", "0", "]", ".", "cell_expr", "(", ")", ",", "\n", "bb", ".", "get_final_states", "(", ")", "[", "0", "]", ".", "cell_expr", "(", ")", "]", ")", ")", "for", "(", "fb", ",", "bb", ")", "in", "self", ".", "builder_layers", "]", "\n", "\n", "return", "ret_es", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.pyramidal.PyramidalUniLSTMSeqTransducer.__init__": [[159, 183], ["xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "pyramidal.PyramidalUniLSTMSeqTransducer.add_serializable_component", "type", "pyramidal.PyramidalUniLSTMSeqTransducer.make_builder_layers", "type", "len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.pyramidal.PyramidalUniLSTMSeqTransducer.make_builder_layers"], ["@", "register_xnmt_handler", "\n", "@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "layers", ":", "numbers", ".", "Integral", "=", "1", ",", "\n", "input_dim", ":", "numbers", ".", "Integral", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "hidden_dim", ":", "numbers", ".", "Integral", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "downsampling_method", ":", "str", "=", "\"concat\"", ",", "\n", "reduce_factor", ":", "Union", "[", "numbers", ".", "Integral", ",", "Sequence", "[", "numbers", ".", "Integral", "]", "]", "=", "2", ",", "\n", "dropout", ":", "float", "=", "Ref", "(", "\"exp_global.dropout\"", ",", "default", "=", "0.0", ")", ",", "\n", "builder_layers", ":", "Any", "=", "None", ")", ":", "\n", "    ", "self", ".", "dropout", "=", "dropout", "\n", "assert", "layers", ">", "0", "\n", "assert", "type", "(", "reduce_factor", ")", "==", "int", "or", "(", "type", "(", "reduce_factor", ")", "==", "list", "and", "len", "(", "reduce_factor", ")", "==", "layers", "-", "1", ")", "\n", "assert", "downsampling_method", "in", "[", "\"concat\"", ",", "\"skip\"", "]", "\n", "\n", "self", ".", "downsampling_method", "=", "downsampling_method", "\n", "self", ".", "reduce_factor", "=", "reduce_factor", "\n", "self", ".", "input_dim", "=", "input_dim", "\n", "self", ".", "hidden_dim", "=", "hidden_dim", "\n", "self", ".", "builder_layers", "=", "self", ".", "add_serializable_component", "(", "\"builder_layers\"", ",", "builder_layers", ",", "\n", "lambda", ":", "self", ".", "make_builder_layers", "(", "input_dim", ",", "hidden_dim", ",", "\n", "layers", ",", "dropout", ",", "\n", "downsampling_method", ",", "\n", "reduce_factor", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.pyramidal.PyramidalUniLSTMSeqTransducer.make_builder_layers": [[184, 193], ["xnmt.transducers.recurrent.UniLSTMSeqTransducer", "builder_layers.append", "range", "xnmt.transducers.recurrent.UniLSTMSeqTransducer", "builder_layers.append"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "def", "make_builder_layers", "(", "self", ",", "input_dim", ",", "hidden_dim", ",", "layers", ",", "dropout", ",", "downsampling_method", ",", "reduce_factor", ")", ":", "\n", "    ", "builder_layers", "=", "[", "]", "\n", "f", "=", "UniLSTMSeqTransducer", "(", "input_dim", "=", "input_dim", ",", "hidden_dim", "=", "hidden_dim", ",", "dropout", "=", "dropout", ")", "\n", "builder_layers", ".", "append", "(", "f", ")", "\n", "for", "_", "in", "range", "(", "layers", "-", "1", ")", ":", "\n", "      ", "layer_input_dim", "=", "hidden_dim", "if", "downsampling_method", "==", "\"skip\"", "else", "hidden_dim", "*", "reduce_factor", "\n", "f", "=", "UniLSTMSeqTransducer", "(", "input_dim", "=", "layer_input_dim", ",", "hidden_dim", "=", "hidden_dim", ",", "dropout", "=", "dropout", ")", "\n", "builder_layers", ".", "append", "(", "f", ")", "\n", "", "return", "builder_layers", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.pyramidal.PyramidalUniLSTMSeqTransducer.on_start_sent": [[194, 197], ["None"], "methods", ["None"], ["", "@", "handle_xnmt_event", "\n", "def", "on_start_sent", "(", "self", ",", "src", ")", ":", "\n", "    ", "self", ".", "_final_states", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.pyramidal.PyramidalUniLSTMSeqTransducer.get_final_states": [[198, 200], ["None"], "methods", ["None"], ["", "def", "get_final_states", "(", "self", ")", "->", "List", "[", "FinalTransducerState", "]", ":", "\n", "    ", "return", "self", ".", "_final_states", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.pyramidal.PyramidalUniLSTMSeqTransducer._reduce_factor_for_layer": [[201, 208], ["len", "type"], "methods", ["None"], ["", "def", "_reduce_factor_for_layer", "(", "self", ",", "layer_i", ")", ":", "\n", "    ", "if", "layer_i", ">=", "len", "(", "self", ".", "builder_layers", ")", "-", "1", ":", "\n", "      ", "return", "1", "\n", "", "elif", "type", "(", "self", ".", "reduce_factor", ")", "==", "int", ":", "\n", "      ", "return", "self", ".", "reduce_factor", "\n", "", "else", ":", "\n", "      ", "return", "self", ".", "reduce_factor", "[", "layer_i", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.pyramidal.PyramidalUniLSTMSeqTransducer.transduce": [[209, 253], ["enumerate", "pyramidal.PyramidalUniLSTMSeqTransducer._reduce_factor_for_layer", "fb.transduce", "xnmt.transducers.base.FinalTransducerState", "es_list[].mask.lin_subsampled", "ValueError", "xnmt.expression_seqs.ExpressionSequence", "[].main_expr", "[].cell_expr", "len", "len", "xnmt.expression_seqs.ExpressionSequence", "len", "range", "RuntimeError", "len", "range", "xnmt.expression_seqs.ExpressionSequence", "fb.get_final_states", "fb.get_final_states", "es_list_fwd[].append", "range", "es_list_fwd.append"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.pyramidal.PyramidalUniLSTMSeqTransducer._reduce_factor_for_layer", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.lin_subsampled", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.base.FinalTransducerState.main_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.base.FinalTransducerState.cell_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.get_final_states", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.get_final_states", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "", "def", "transduce", "(", "self", ",", "es", ":", "ExpressionSequence", ")", "->", "ExpressionSequence", ":", "\n", "    ", "\"\"\"\n    returns the list of output Expressions obtained by adding the given inputs\n    to the current state, one by one.\n\n    Args:\n      es: an ExpressionSequence\n    \"\"\"", "\n", "es_list", "=", "[", "es", "]", "\n", "\n", "for", "layer_i", ",", "fb", "in", "enumerate", "(", "self", ".", "builder_layers", ")", ":", "\n", "      ", "reduce_factor", "=", "self", ".", "_reduce_factor_for_layer", "(", "layer_i", ")", "\n", "\n", "if", "es_list", "[", "0", "]", ".", "mask", "is", "None", ":", "mask_out", "=", "None", "\n", "else", ":", "mask_out", "=", "es_list", "[", "0", "]", ".", "mask", ".", "lin_subsampled", "(", "reduce_factor", ")", "\n", "\n", "if", "self", ".", "downsampling_method", "==", "\"concat\"", "and", "len", "(", "es_list", "[", "0", "]", ")", "%", "reduce_factor", "!=", "0", ":", "\n", "        ", "raise", "ValueError", "(", "f\"For 'concat' subsampling, sequence lengths must be multiples of the total reduce factor, \"", "\n", "f\"but got sequence length={len(es_list[0])} for reduce_factor={reduce_factor}. \"", "\n", "f\"Set Batcher's pad_src_to_multiple argument accordingly.\"", ")", "\n", "", "fs", "=", "fb", ".", "transduce", "(", "es_list", ")", "\n", "if", "layer_i", "<", "len", "(", "self", ".", "builder_layers", ")", "-", "1", ":", "\n", "        ", "if", "self", ".", "downsampling_method", "==", "\"skip\"", ":", "\n", "          ", "es_list", "=", "[", "ExpressionSequence", "(", "expr_list", "=", "fs", "[", ":", ":", "reduce_factor", "]", ",", "mask", "=", "mask_out", ")", "]", "\n", "", "elif", "self", ".", "downsampling_method", "==", "\"concat\"", ":", "\n", "          ", "es_len", "=", "len", "(", "es_list", "[", "0", "]", ")", "\n", "es_list_fwd", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "es_len", ",", "reduce_factor", ")", ":", "\n", "            ", "for", "j", "in", "range", "(", "reduce_factor", ")", ":", "\n", "              ", "if", "i", "==", "0", ":", "\n", "                ", "es_list_fwd", ".", "append", "(", "[", "]", ")", "\n", "", "es_list_fwd", "[", "j", "]", ".", "append", "(", "fs", "[", "i", "+", "j", "]", ")", "\n", "", "", "es_list", "=", "[", "ExpressionSequence", "(", "expr_list", "=", "es_list_fwd", "[", "j", "]", ",", "mask", "=", "mask_out", ")", "for", "j", "in", "range", "(", "reduce_factor", ")", "]", "\n", "", "else", ":", "\n", "          ", "raise", "RuntimeError", "(", "f\"unknown downsampling_method {self.downsampling_method}\"", ")", "\n", "", "", "else", ":", "\n", "# concat final outputs", "\n", "        ", "ret_es", "=", "ExpressionSequence", "(", "expr_list", "=", "[", "f", "for", "f", "in", "fs", "]", ",", "mask", "=", "mask_out", ")", "\n", "\n", "", "", "self", ".", "_final_states", "=", "[", "FinalTransducerState", "(", "fb", ".", "get_final_states", "(", ")", "[", "0", "]", ".", "main_expr", "(", ")", ",", "\n", "fb", ".", "get_final_states", "(", ")", "[", "0", "]", ".", "cell_expr", "(", ")", ")", "\n", "for", "fb", "in", "self", ".", "builder_layers", "]", "\n", "\n", "return", "ret_es", "\n", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.transforms.Transform.transform": [[14, 16], ["NotImplementedError"], "methods", ["None"], ["def", "transform", "(", "self", ",", "input_expr", ":", "dy", ".", "Expression", ")", "->", "dy", ".", "Expression", ":", "\n", "    ", "raise", "NotImplementedError", "(", "'transform() must be implemented in subclasses of Transform'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.transforms.Identity.transform": [[24, 26], ["None"], "methods", ["None"], ["def", "transform", "(", "self", ",", "input_expr", ":", "dy", ".", "Expression", ")", "->", "dy", ".", "Expression", ":", "\n", "    ", "return", "input_expr", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.transforms.Linear.__init__": [[40, 55], ["xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.param_collections.ParamManager.my_params", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.persistence.bare", "xnmt.persistence.bare", "param_init.initializer", "bias_init.initializer"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.my_params", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "input_dim", ":", "numbers", ".", "Integral", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "output_dim", ":", "numbers", ".", "Integral", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "bias", ":", "bool", "=", "True", ",", "\n", "param_init", ":", "param_initializers", ".", "ParamInitializer", "=", "Ref", "(", "\"exp_global.param_init\"", ",", "default", "=", "bare", "(", "param_initializers", ".", "GlorotInitializer", ")", ")", ",", "\n", "bias_init", ":", "param_initializers", ".", "ParamInitializer", "=", "Ref", "(", "\"exp_global.bias_init\"", ",", "default", "=", "bare", "(", "param_initializers", ".", "ZeroInitializer", ")", ")", ")", "->", "None", ":", "\n", "    ", "self", ".", "bias", "=", "bias", "\n", "self", ".", "input_dim", "=", "input_dim", "\n", "self", ".", "output_dim", "=", "output_dim", "\n", "\n", "model", "=", "param_collections", ".", "ParamManager", ".", "my_params", "(", "self", ")", "\n", "self", ".", "W1", "=", "model", ".", "add_parameters", "(", "(", "output_dim", ",", "input_dim", ")", ",", "init", "=", "param_init", ".", "initializer", "(", "(", "output_dim", ",", "input_dim", ")", ")", ")", "\n", "if", "self", ".", "bias", ":", "\n", "      ", "self", ".", "b1", "=", "model", ".", "add_parameters", "(", "(", "output_dim", ",", ")", ",", "init", "=", "bias_init", ".", "initializer", "(", "(", "output_dim", ",", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.transforms.Linear.transform": [[56, 63], ["dynet.parameter", "dynet.parameter", "dynet.affine_transform"], "methods", ["None"], ["", "", "def", "transform", "(", "self", ",", "input_expr", ":", "dy", ".", "Expression", ")", "->", "dy", ".", "Expression", ":", "\n", "    ", "W1", "=", "dy", ".", "parameter", "(", "self", ".", "W1", ")", "\n", "if", "self", ".", "bias", ":", "\n", "      ", "b1", "=", "dy", ".", "parameter", "(", "self", ".", "b1", ")", "\n", "return", "dy", ".", "affine_transform", "(", "[", "b1", ",", "W1", ",", "input_expr", "]", ")", "\n", "", "else", ":", "\n", "      ", "return", "W1", "*", "input_expr", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.transforms.NonLinear.__init__": [[79, 113], ["xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.param_collections.ParamManager.my_params", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.persistence.bare", "xnmt.persistence.bare", "param_init.initializer", "bias_init.initializer", "ValueError"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.my_params", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "input_dim", ":", "numbers", ".", "Integral", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "output_dim", ":", "numbers", ".", "Integral", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "bias", ":", "bool", "=", "True", ",", "\n", "activation", ":", "str", "=", "'tanh'", ",", "\n", "param_init", ":", "param_initializers", ".", "ParamInitializer", "=", "Ref", "(", "\"exp_global.param_init\"", ",", "default", "=", "bare", "(", "param_initializers", ".", "GlorotInitializer", ")", ")", ",", "\n", "bias_init", ":", "param_initializers", ".", "ParamInitializer", "=", "Ref", "(", "\"exp_global.bias_init\"", ",", "default", "=", "bare", "(", "param_initializers", ".", "ZeroInitializer", ")", ")", ")", "->", "None", ":", "\n", "    ", "self", ".", "bias", "=", "bias", "\n", "self", ".", "output_dim", "=", "output_dim", "\n", "self", ".", "input_dim", "=", "input_dim", "\n", "if", "activation", "==", "'tanh'", ":", "\n", "      ", "self", ".", "activation", "=", "dy", ".", "tanh", "\n", "", "elif", "activation", "==", "'relu'", ":", "\n", "      ", "self", ".", "activation", "=", "dy", ".", "rectify", "\n", "", "elif", "activation", "==", "'sigmoid'", ":", "\n", "      ", "self", ".", "activation", "=", "dy", ".", "sigmoid", "\n", "", "elif", "activation", "==", "'elu'", ":", "\n", "      ", "self", ".", "activation", "=", "dy", ".", "elu", "\n", "", "elif", "activation", "==", "'selu'", ":", "\n", "      ", "self", ".", "activation", "=", "dy", ".", "selu", "\n", "", "elif", "activation", "==", "'asinh'", ":", "\n", "      ", "self", ".", "activation", "=", "dy", ".", "asinh", "\n", "", "elif", "activation", "==", "'identity'", ":", "\n", "      ", "def", "identity", "(", "x", ")", ":", "\n", "        ", "return", "x", "\n", "", "self", ".", "activation", "=", "identity", "\n", "", "else", ":", "\n", "      ", "raise", "ValueError", "(", "'Unknown activation %s'", "%", "activation", ")", "\n", "\n", "", "model", "=", "param_collections", ".", "ParamManager", ".", "my_params", "(", "self", ")", "\n", "self", ".", "W1", "=", "model", ".", "add_parameters", "(", "(", "self", ".", "output_dim", ",", "self", ".", "input_dim", ")", ",", "init", "=", "param_init", ".", "initializer", "(", "(", "self", ".", "output_dim", ",", "self", ".", "input_dim", ")", ")", ")", "\n", "if", "self", ".", "bias", ":", "\n", "      ", "self", ".", "b1", "=", "model", ".", "add_parameters", "(", "(", "self", ".", "output_dim", ",", ")", ",", "init", "=", "bias_init", ".", "initializer", "(", "(", "self", ".", "output_dim", ",", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.transforms.NonLinear.transform": [[114, 121], ["dynet.parameter", "dynet.parameter", "transforms.NonLinear.activation", "transforms.NonLinear.activation", "dynet.affine_transform"], "methods", ["None"], ["", "", "def", "transform", "(", "self", ",", "input_expr", ":", "dy", ".", "Expression", ")", "->", "dy", ".", "Expression", ":", "\n", "    ", "W1", "=", "dy", ".", "parameter", "(", "self", ".", "W1", ")", "\n", "if", "self", ".", "bias", ":", "\n", "      ", "b1", "=", "dy", ".", "parameter", "(", "self", ".", "b1", ")", "\n", "return", "self", ".", "activation", "(", "dy", ".", "affine_transform", "(", "[", "b1", ",", "W1", ",", "input_expr", "]", ")", ")", "\n", "", "else", ":", "\n", "      ", "return", "self", ".", "activation", "(", "W1", "*", "input_expr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.transforms.AuxNonLinear.__init__": [[142, 162], ["xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "transforms.NonLinear.__init__", "transforms.AuxNonLinear.save_processed_arg", "xnmt.persistence.bare", "xnmt.persistence.bare"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.save_processed_arg", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "input_dim", ":", "numbers", ".", "Integral", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "output_dim", ":", "numbers", ".", "Integral", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "aux_input_dim", ":", "numbers", ".", "Integral", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "bias", ":", "bool", "=", "True", ",", "\n", "activation", ":", "str", "=", "'tanh'", ",", "\n", "param_init", ":", "param_initializers", ".", "ParamInitializer", "=", "Ref", "(", "\"exp_global.param_init\"", ",", "default", "=", "bare", "(", "param_initializers", ".", "GlorotInitializer", ")", ")", ",", "\n", "bias_init", ":", "param_initializers", ".", "ParamInitializer", "=", "Ref", "(", "\"exp_global.bias_init\"", ",", "default", "=", "bare", "(", "param_initializers", ".", "ZeroInitializer", ")", ")", ")", "->", "None", ":", "\n", "    ", "original_input_dim", "=", "input_dim", "\n", "input_dim", "+=", "aux_input_dim", "\n", "super", "(", ")", ".", "__init__", "(", "\n", "input_dim", "=", "input_dim", ",", "\n", "output_dim", "=", "output_dim", ",", "\n", "bias", "=", "bias", ",", "\n", "activation", "=", "activation", ",", "\n", "param_init", "=", "param_init", ",", "\n", "bias_init", "=", "bias_init", "\n", ")", "\n", "self", ".", "save_processed_arg", "(", "\"input_dim\"", ",", "original_input_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.transforms.MLP.__init__": [[170, 191], ["xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "transforms.MLP.add_serializable_component", "xnmt.persistence.bare", "xnmt.persistence.bare", "transforms.MLP._create_layers"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.transforms.MLP._create_layers"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "input_dim", ":", "numbers", ".", "Integral", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "hidden_dim", ":", "numbers", ".", "Integral", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "output_dim", ":", "numbers", ".", "Integral", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "bias", ":", "bool", "=", "True", ",", "\n", "activation", ":", "str", "=", "'tanh'", ",", "\n", "hidden_layers", ":", "numbers", ".", "Integral", "=", "1", ",", "\n", "param_init", ":", "param_initializers", ".", "ParamInitializer", "=", "Ref", "(", "\"exp_global.param_init\"", ",", "default", "=", "bare", "(", "param_initializers", ".", "GlorotInitializer", ")", ")", ",", "\n", "bias_init", ":", "param_initializers", ".", "ParamInitializer", "=", "Ref", "(", "\"exp_global.bias_init\"", ",", "default", "=", "bare", "(", "param_initializers", ".", "ZeroInitializer", ")", ")", ",", "\n", "layers", ":", "Optional", "[", "Sequence", "[", "Transform", "]", "]", "=", "None", ")", "->", "None", ":", "\n", "    ", "self", ".", "layers", "=", "self", ".", "add_serializable_component", "(", "\"layers\"", ",", "\n", "layers", ",", "\n", "lambda", ":", "MLP", ".", "_create_layers", "(", "num_layers", "=", "hidden_layers", ",", "\n", "input_dim", "=", "input_dim", ",", "\n", "hidden_dim", "=", "hidden_dim", ",", "\n", "output_dim", "=", "output_dim", ",", "\n", "bias", "=", "bias", ",", "\n", "activation", "=", "activation", ",", "\n", "param_init", "=", "param_init", ",", "\n", "bias_init", "=", "bias_init", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.transforms.MLP._create_layers": [[192, 209], ["transforms.Linear", "transforms.NonLinear", "transforms.NonLinear", "range"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_create_layers", "(", "num_layers", ":", "numbers", ".", "Integral", ",", "input_dim", ":", "numbers", ".", "Integral", ",", "hidden_dim", ":", "numbers", ".", "Integral", ",", "\n", "output_dim", ":", "numbers", ".", "Integral", ",", "bias", ":", "bool", ",", "activation", ":", "str", ",", "\n", "param_init", ":", "param_initializers", ".", "ParamInitializer", ",", "bias_init", ":", "param_initializers", ".", "ParamInitializer", ")", "->", "Sequence", "[", "Transform", "]", ":", "\n", "    ", "layers", "=", "[", "]", "\n", "if", "num_layers", ">", "0", ":", "\n", "      ", "layers", "=", "[", "NonLinear", "(", "input_dim", "=", "input_dim", ",", "output_dim", "=", "hidden_dim", ",", "bias", "=", "bias", ",", "activation", "=", "activation", ",", "\n", "param_init", "=", "param_init", ",", "bias_init", "=", "bias_init", ")", "]", "\n", "layers", "+=", "[", "NonLinear", "(", "input_dim", "=", "hidden_dim", ",", "output_dim", "=", "hidden_dim", ",", "bias", "=", "bias", ",", "activation", "=", "activation", ",", "\n", "param_init", "=", "param_init", ",", "bias_init", "=", "bias_init", ")", "for", "_", "in", "range", "(", "1", ",", "num_layers", ")", "]", "\n", "", "layers", "+=", "[", "Linear", "(", "input_dim", "=", "hidden_dim", "if", "num_layers", ">", "0", "else", "input_dim", ",", "\n", "output_dim", "=", "output_dim", ",", "\n", "bias", "=", "bias", ",", "\n", "param_init", "=", "param_init", ",", "\n", "bias_init", "=", "bias_init", ")", "]", "\n", "return", "layers", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.transforms.MLP.transform": [[210, 214], ["layer.transform"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.DenseWordEmbedder.transform"], ["", "def", "transform", "(", "self", ",", "expr", ":", "dy", ".", "Expression", ")", "->", "dy", ".", "Expression", ":", "\n", "    ", "for", "layer", "in", "self", ".", "layers", ":", "\n", "      ", "expr", "=", "layer", ".", "transform", "(", "expr", ")", "\n", "", "return", "expr", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.transforms.Cwise.__init__": [[224, 229], ["getattr", "ValueError"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "op", ":", "str", "=", "\"rectify\"", ")", "->", "None", ":", "\n", "    ", "self", ".", "op", "=", "getattr", "(", "dy", ",", "op", ",", "None", ")", "\n", "if", "not", "self", ".", "op", ":", "\n", "      ", "raise", "ValueError", "(", "f\"DyNet does not have an operation '{op}'.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.transforms.Cwise.transform": [[230, 232], ["transforms.Cwise.op"], "methods", ["None"], ["", "", "def", "transform", "(", "self", ",", "input_expr", ":", "dy", ".", "Expression", ")", "->", "dy", ".", "Expression", ":", "\n", "    ", "return", "self", ".", "op", "(", "input_expr", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.bridges.Bridge.decoder_init": [[15, 23], ["NotImplementedError"], "methods", ["None"], ["def", "decoder_init", "(", "self", ",", "enc_final_states", ":", "Sequence", "[", "transducers", ".", "FinalTransducerState", "]", ")", "->", "List", "[", "dy", ".", "Expression", "]", ":", "\n", "    ", "\"\"\"\n    Args:\n      enc_final_states: list of final states for each encoder layer\n    Returns:\n      list of initial hidden and cell expressions for each layer. List indices 0..n-1 hold hidden states, n..2n-1 hold cell states.\n    \"\"\"", "\n", "raise", "NotImplementedError", "(", "\"decoder_init() must be implemented by Bridge subclasses\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.bridges.NoBridge.__init__": [[34, 40], ["xnmt.persistence.Ref"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "dec_layers", ":", "numbers", ".", "Integral", "=", "1", ",", "\n", "dec_dim", ":", "numbers", ".", "Integral", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ")", "->", "None", ":", "\n", "    ", "self", ".", "dec_layers", "=", "dec_layers", "\n", "self", ".", "dec_dim", "=", "dec_dim", "\n", "", "def", "decoder_init", "(", "self", ",", "enc_final_states", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.bridges.NoBridge.decoder_init": [[40, 44], ["dynet.zeros", "enc_final_states[].main_expr().dim", "enc_final_states[].main_expr"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.base.FinalTransducerState.main_expr"], ["", "def", "decoder_init", "(", "self", ",", "enc_final_states", ")", ":", "\n", "    ", "batch_size", "=", "enc_final_states", "[", "0", "]", ".", "main_expr", "(", ")", ".", "dim", "(", ")", "[", "1", "]", "\n", "z", "=", "dy", ".", "zeros", "(", "self", ".", "dec_dim", ",", "batch_size", ")", "\n", "return", "[", "z", "]", "*", "(", "self", ".", "dec_layers", "*", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.bridges.CopyBridge.__init__": [[58, 64], ["xnmt.persistence.Ref"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "dec_layers", ":", "numbers", ".", "Integral", "=", "1", ",", "\n", "dec_dim", ":", "numbers", ".", "Integral", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ")", "->", "None", ":", "\n", "    ", "self", ".", "dec_layers", "=", "dec_layers", "\n", "self", ".", "dec_dim", "=", "dec_dim", "\n", "", "def", "decoder_init", "(", "self", ",", "enc_final_states", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.bridges.CopyBridge.decoder_init": [[64, 71], ["len", "RuntimeError", "RuntimeError", "enc_state.cell_expr", "enc_state.main_expr", "enc_final_states[].main_expr().dim", "len", "enc_final_states[].main_expr", "enc_final_states[].main_expr().dim", "enc_final_states[].main_expr"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.base.FinalTransducerState.cell_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.base.FinalTransducerState.main_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.base.FinalTransducerState.main_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.base.FinalTransducerState.main_expr"], ["", "def", "decoder_init", "(", "self", ",", "enc_final_states", ")", ":", "\n", "    ", "if", "self", ".", "dec_layers", ">", "len", "(", "enc_final_states", ")", ":", "\n", "      ", "raise", "RuntimeError", "(", "\"CopyBridge requires dec_layers <= len(enc_final_states), but got %s and %s\"", "%", "(", "self", ".", "dec_layers", ",", "len", "(", "enc_final_states", ")", ")", ")", "\n", "", "if", "enc_final_states", "[", "0", "]", ".", "main_expr", "(", ")", ".", "dim", "(", ")", "[", "0", "]", "[", "0", "]", "!=", "self", ".", "dec_dim", ":", "\n", "      ", "raise", "RuntimeError", "(", "\"CopyBridge requires enc_dim == dec_dim, but got %s and %s\"", "%", "(", "enc_final_states", "[", "0", "]", ".", "main_expr", "(", ")", ".", "dim", "(", ")", "[", "0", "]", "[", "0", "]", ",", "self", ".", "dec_dim", ")", ")", "\n", "", "return", "[", "enc_state", ".", "cell_expr", "(", ")", "for", "enc_state", "in", "enc_final_states", "[", "-", "self", ".", "dec_layers", ":", "]", "]", "+", "[", "enc_state", ".", "main_expr", "(", ")", "for", "enc_state", "in", "enc_final_states", "[", "-", "self", ".", "dec_layers", ":", "]", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.bridges.LinearBridge.decoder_init": [[87, 96], ["len", "RuntimeError", "RuntimeError", "bridges.LinearBridge.projector.transform", "enc_state.main_expr", "dynet.tanh", "enc_final_states[].main_expr().dim", "len", "enc_final_states[].main_expr", "enc_final_states[].main_expr().dim", "enc_final_states[].main_expr"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.DenseWordEmbedder.transform", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.base.FinalTransducerState.main_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.base.FinalTransducerState.main_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.base.FinalTransducerState.main_expr"], ["def", "decoder_init", "(", "self", ",", "enc_final_states", ")", ":", "\n", "    ", "if", "self", ".", "dec_layers", ">", "len", "(", "enc_final_states", ")", ":", "\n", "      ", "raise", "RuntimeError", "(", "\n", "f\"LinearBridge requires dec_layers <= len(enc_final_states), but got {self.dec_layers} and {len(enc_final_states)}\"", ")", "\n", "", "if", "enc_final_states", "[", "0", "]", ".", "main_expr", "(", ")", ".", "dim", "(", ")", "[", "0", "]", "[", "0", "]", "!=", "self", ".", "enc_dim", ":", "\n", "      ", "raise", "RuntimeError", "(", "\n", "f\"LinearBridge requires enc_dim == {self.enc_dim}, but got {enc_final_states[0].main_expr().dim()[0][0]}\"", ")", "\n", "", "decoder_init", "=", "[", "self", ".", "projector", ".", "transform", "(", "enc_state", ".", "main_expr", "(", ")", ")", "for", "enc_state", "in", "enc_final_states", "[", "-", "self", ".", "dec_layers", ":", "]", "]", "\n", "return", "decoder_init", "+", "[", "dy", ".", "tanh", "(", "dec", ")", "for", "dec", "in", "decoder_init", "]", "\n", "", "@", "serializable_init", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.bridges.LinearBridge.__init__": [[96, 113], ["xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "bridges.LinearBridge.add_serializable_component", "xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.modelparts.transforms.Linear"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare"], ["", "@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "dec_layers", ":", "numbers", ".", "Integral", "=", "1", ",", "\n", "enc_dim", ":", "numbers", ".", "Integral", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "dec_dim", ":", "numbers", ".", "Integral", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "param_init", ":", "param_initializers", ".", "ParamInitializer", "=", "Ref", "(", "\"exp_global.param_init\"", ",", "default", "=", "bare", "(", "param_initializers", ".", "GlorotInitializer", ")", ")", ",", "\n", "bias_init", ":", "param_initializers", ".", "ParamInitializer", "=", "Ref", "(", "\"exp_global.bias_init\"", ",", "default", "=", "bare", "(", "param_initializers", ".", "ZeroInitializer", ")", ")", ",", "\n", "projector", ":", "Optional", "[", "transforms", ".", "Linear", "]", "=", "None", ")", ":", "\n", "    ", "self", ".", "dec_layers", "=", "dec_layers", "\n", "self", ".", "enc_dim", "=", "enc_dim", "\n", "self", ".", "dec_dim", "=", "dec_dim", "\n", "self", ".", "projector", "=", "self", ".", "add_serializable_component", "(", "\"projector\"", ",", "\n", "projector", ",", "\n", "lambda", ":", "transforms", ".", "Linear", "(", "input_dim", "=", "self", ".", "enc_dim", ",", "\n", "output_dim", "=", "self", ".", "dec_dim", ",", "\n", "param_init", "=", "param_init", ",", "\n", "bias_init", "=", "bias_init", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.decoders.Decoder.calc_loss": [[17, 19], ["NotImplementedError"], "methods", ["None"], ["def", "calc_loss", "(", "self", ",", "x", ",", "ref_action", ")", ":", "\n", "    ", "raise", "NotImplementedError", "(", "'must be implemented by subclasses'", ")", "\n", "", "def", "calc_score", "(", "self", ",", "calc_scores_logsoftmax", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.decoders.Decoder.calc_score": [[19, 21], ["NotImplementedError"], "methods", ["None"], ["", "def", "calc_score", "(", "self", ",", "calc_scores_logsoftmax", ")", ":", "\n", "    ", "raise", "NotImplementedError", "(", "'must be implemented by subclasses'", ")", "\n", "", "def", "calc_prob", "(", "self", ",", "calc_scores_logsoftmax", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.decoders.Decoder.calc_prob": [[21, 23], ["NotImplementedError"], "methods", ["None"], ["", "def", "calc_prob", "(", "self", ",", "calc_scores_logsoftmax", ")", ":", "\n", "    ", "raise", "NotImplementedError", "(", "'must be implemented by subclasses'", ")", "\n", "", "def", "calc_log_prob", "(", "self", ",", "calc_scores_logsoftmax", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.decoders.Decoder.calc_log_prob": [[23, 25], ["NotImplementedError"], "methods", ["None"], ["", "def", "calc_log_prob", "(", "self", ",", "calc_scores_logsoftmax", ")", ":", "\n", "    ", "raise", "NotImplementedError", "(", "'must be implemented by subclasses'", ")", "\n", "", "def", "add_input", "(", "self", ",", "mlp_dec_state", ",", "trg_embedding", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.decoders.Decoder.add_input": [[25, 27], ["NotImplementedError"], "methods", ["None"], ["", "def", "add_input", "(", "self", ",", "mlp_dec_state", ",", "trg_embedding", ")", ":", "\n", "    ", "raise", "NotImplementedError", "(", "'must be implemented by subclasses'", ")", "\n", "", "def", "initial_state", "(", "self", ",", "enc_final_states", ",", "ss_expr", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.decoders.Decoder.initial_state": [[27, 29], ["NotImplementedError"], "methods", ["None"], ["", "def", "initial_state", "(", "self", ",", "enc_final_states", ",", "ss_expr", ")", ":", "\n", "    ", "raise", "NotImplementedError", "(", "'must be implemented by subclasses'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.decoders.AutoRegressiveDecoderState.__init__": [[37, 40], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "rnn_state", "=", "None", ",", "context", "=", "None", ")", ":", "\n", "    ", "self", ".", "rnn_state", "=", "rnn_state", "\n", "self", ".", "context", "=", "context", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.decoders.AutoRegressiveDecoder.__init__": [[58, 81], ["xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.persistence.Ref", "xnmt.param_collections.ParamManager.my_params"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.my_params"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "input_dim", ":", "numbers", ".", "Integral", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "trg_embed_dim", ":", "numbers", ".", "Integral", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "input_feeding", ":", "bool", "=", "True", ",", "\n", "bridge", ":", "bridges", ".", "Bridge", "=", "bare", "(", "bridges", ".", "CopyBridge", ")", ",", "\n", "rnn", ":", "recurrent", ".", "UniLSTMSeqTransducer", "=", "bare", "(", "recurrent", ".", "UniLSTMSeqTransducer", ")", ",", "\n", "transform", ":", "transforms", ".", "Transform", "=", "bare", "(", "transforms", ".", "AuxNonLinear", ")", ",", "\n", "scorer", ":", "scorers", ".", "Scorer", "=", "bare", "(", "scorers", ".", "Softmax", ")", ",", "\n", "truncate_dec_batches", ":", "bool", "=", "Ref", "(", "\"exp_global.truncate_dec_batches\"", ",", "default", "=", "False", ")", ")", "->", "None", ":", "\n", "    ", "self", ".", "param_col", "=", "param_collections", ".", "ParamManager", ".", "my_params", "(", "self", ")", "\n", "self", ".", "input_dim", "=", "input_dim", "\n", "self", ".", "truncate_dec_batches", "=", "truncate_dec_batches", "\n", "self", ".", "bridge", "=", "bridge", "\n", "self", ".", "rnn", "=", "rnn", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "scorer", "=", "scorer", "\n", "# Input feeding", "\n", "self", ".", "input_feeding", "=", "input_feeding", "\n", "rnn_input_dim", "=", "trg_embed_dim", "\n", "if", "input_feeding", ":", "\n", "      ", "rnn_input_dim", "+=", "input_dim", "\n", "", "assert", "rnn_input_dim", "==", "rnn", ".", "input_dim", ",", "\"Wrong input dimension in RNN layer: {} != {}\"", ".", "format", "(", "rnn_input_dim", ",", "rnn", ".", "input_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.decoders.AutoRegressiveDecoder.shared_params": [[82, 91], ["None"], "methods", ["None"], ["", "def", "shared_params", "(", "self", ")", ":", "\n", "    ", "return", "[", "{", "\".trg_embed_dim\"", ",", "\".rnn.input_dim\"", "}", ",", "\n", "{", "\".input_dim\"", ",", "\".rnn.decoder_input_dim\"", "}", ",", "\n", "{", "\".input_dim\"", ",", "\".transform.input_dim\"", "}", ",", "\n", "{", "\".input_feeding\"", ",", "\".rnn.decoder_input_feeding\"", "}", ",", "\n", "{", "\".rnn.layers\"", ",", "\".bridge.dec_layers\"", "}", ",", "\n", "{", "\".rnn.hidden_dim\"", ",", "\".bridge.dec_dim\"", "}", ",", "\n", "{", "\".rnn.hidden_dim\"", ",", "\".transform.aux_input_dim\"", "}", ",", "\n", "{", "\".transform.output_dim\"", ",", "\".scorer.input_dim\"", "}", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.decoders.AutoRegressiveDecoder.initial_state": [[92, 107], ["decoders.AutoRegressiveDecoder.rnn.initial_state", "decoders.AutoRegressiveDecoder.bridge.decoder_init", "rnn_state.add_input.add_input.set_s", "rnn_state.add_input.add_input.add_input", "decoders.AutoRegressiveDecoderState", "dynet.zeros", "dynet.concatenate"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.decoders.AutoRegressiveDecoder.initial_state", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.bridges.LinearBridge.decoder_init", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMState.set_s", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.decoders.AutoRegressiveDecoder.add_input"], ["", "def", "initial_state", "(", "self", ",", "enc_final_states", ":", "Any", ",", "ss_expr", ":", "dy", ".", "Expression", ")", "->", "AutoRegressiveDecoderState", ":", "\n", "    ", "\"\"\"Get the initial state of the decoder given the encoder final states.\n\n    Args:\n      enc_final_states: The encoder final states. Usually but not necessarily an :class:`xnmt.expression_sequence.ExpressionSequence`\n      ss_expr: first input\n    Returns:\n      initial decoder state\n    \"\"\"", "\n", "rnn_state", "=", "self", ".", "rnn", ".", "initial_state", "(", ")", "\n", "rnn_s", "=", "self", ".", "bridge", ".", "decoder_init", "(", "enc_final_states", ")", "\n", "rnn_state", "=", "rnn_state", ".", "set_s", "(", "rnn_s", ")", "\n", "zeros", "=", "dy", ".", "zeros", "(", "self", ".", "input_dim", ")", "if", "self", ".", "input_feeding", "else", "None", "\n", "rnn_state", "=", "rnn_state", ".", "add_input", "(", "dy", ".", "concatenate", "(", "[", "ss_expr", ",", "zeros", "]", ")", "if", "self", ".", "input_feeding", "else", "ss_expr", ")", "\n", "return", "AutoRegressiveDecoderState", "(", "rnn_state", "=", "rnn_state", ",", "context", "=", "zeros", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.decoders.AutoRegressiveDecoder.add_input": [[108, 124], ["decoders.AutoRegressiveDecoderState", "dynet.concatenate", "xnmt.batchers.truncate_batches", "rnn_state.add_input"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.truncate_batches", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.decoders.AutoRegressiveDecoder.add_input"], ["", "def", "add_input", "(", "self", ",", "mlp_dec_state", ":", "AutoRegressiveDecoderState", ",", "trg_embedding", ":", "dy", ".", "Expression", ")", "->", "AutoRegressiveDecoderState", ":", "\n", "    ", "\"\"\"Add an input and update the state.\n\n    Args:\n      mlp_dec_state: An object containing the current state.\n      trg_embedding: The embedding of the word to input.\n    Returns:\n      The updated decoder state.\n    \"\"\"", "\n", "inp", "=", "trg_embedding", "\n", "if", "self", ".", "input_feeding", ":", "\n", "      ", "inp", "=", "dy", ".", "concatenate", "(", "[", "inp", ",", "mlp_dec_state", ".", "context", "]", ")", "\n", "", "rnn_state", "=", "mlp_dec_state", ".", "rnn_state", "\n", "if", "self", ".", "truncate_dec_batches", ":", "rnn_state", ",", "inp", "=", "batchers", ".", "truncate_batches", "(", "rnn_state", ",", "inp", ")", "\n", "return", "AutoRegressiveDecoderState", "(", "rnn_state", "=", "rnn_state", ".", "add_input", "(", "inp", ")", ",", "\n", "context", "=", "mlp_dec_state", ".", "context", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.decoders.AutoRegressiveDecoder._calc_transform": [[125, 128], ["dynet.concatenate", "decoders.AutoRegressiveDecoder.transform.transform", "mlp_dec_state.rnn_state.output"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.DenseWordEmbedder.transform", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMState.output"], ["", "def", "_calc_transform", "(", "self", ",", "mlp_dec_state", ":", "AutoRegressiveDecoderState", ")", "->", "dy", ".", "Expression", ":", "\n", "    ", "h", "=", "dy", ".", "concatenate", "(", "[", "mlp_dec_state", ".", "rnn_state", ".", "output", "(", ")", ",", "mlp_dec_state", ".", "context", "]", ")", "\n", "return", "self", ".", "transform", ".", "transform", "(", "h", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.decoders.AutoRegressiveDecoder.calc_scores": [[129, 138], ["decoders.AutoRegressiveDecoder.scorer.calc_scores", "decoders.AutoRegressiveDecoder._calc_transform"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.scorers.Softmax.calc_scores", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.decoders.AutoRegressiveDecoder._calc_transform"], ["", "def", "calc_scores", "(", "self", ",", "mlp_dec_state", ":", "AutoRegressiveDecoderState", ")", "->", "dy", ".", "Expression", ":", "\n", "    ", "\"\"\"Get scores given a current state.\n\n    Args:\n      mlp_dec_state: Decoder state with last RNN output and optional context vector.\n    Returns:\n      Scores over the vocabulary given this state.\n    \"\"\"", "\n", "return", "self", ".", "scorer", ".", "calc_scores", "(", "self", ".", "_calc_transform", "(", "mlp_dec_state", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.decoders.AutoRegressiveDecoder.calc_log_probs": [[139, 141], ["decoders.AutoRegressiveDecoder.scorer.calc_log_probs", "decoders.AutoRegressiveDecoder._calc_transform"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.EnsembleDecoder.calc_log_probs", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.decoders.AutoRegressiveDecoder._calc_transform"], ["", "def", "calc_log_probs", "(", "self", ",", "mlp_dec_state", ")", ":", "\n", "    ", "return", "self", ".", "scorer", ".", "calc_log_probs", "(", "self", ".", "_calc_transform", "(", "mlp_dec_state", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.decoders.AutoRegressiveDecoder.calc_loss": [[142, 144], ["decoders.AutoRegressiveDecoder.scorer.calc_loss", "decoders.AutoRegressiveDecoder._calc_transform"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_encoder.DualEncoderSimilarity.calc_loss", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.decoders.AutoRegressiveDecoder._calc_transform"], ["", "def", "calc_loss", "(", "self", ",", "mlp_dec_state", ",", "ref_action", ")", ":", "\n", "    ", "return", "self", ".", "scorer", ".", "calc_loss", "(", "self", ".", "_calc_transform", "(", "mlp_dec_state", ")", ",", "ref_action", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.scorers.Scorer.calc_scores": [[16, 26], ["NotImplementedError"], "methods", ["None"], ["def", "calc_scores", "(", "self", ",", "x", ":", "dy", ".", "Expression", ")", "->", "dy", ".", "Expression", ":", "\n", "    ", "\"\"\"\n    Calculate the score of each discrete decision, where the higher\n    the score is the better the model thinks a decision is. These\n    often correspond to unnormalized log probabilities.\n\n    Args:\n      x: The vector used to make the prediction\n    \"\"\"", "\n", "raise", "NotImplementedError", "(", "'calc_score must be implemented by subclasses of Scorer'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.scorers.Scorer.calc_probs": [[27, 35], ["NotImplementedError"], "methods", ["None"], ["", "def", "calc_probs", "(", "self", ",", "x", ":", "dy", ".", "Expression", ")", "->", "dy", ".", "Expression", ":", "\n", "    ", "\"\"\"\n    Calculate the normalized probability of a decision.\n\n    Args:\n      x: The vector used to make the prediction\n    \"\"\"", "\n", "raise", "NotImplementedError", "(", "'calc_prob must be implemented by subclasses of Scorer'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.scorers.Scorer.calc_log_probs": [[36, 48], ["NotImplementedError"], "methods", ["None"], ["", "def", "calc_log_probs", "(", "self", ",", "x", ":", "dy", ".", "Expression", ")", "->", "dy", ".", "Expression", ":", "\n", "    ", "\"\"\"\n    Calculate the log probability of a decision\n    \n    log(calc_prob()) == calc_log_prob()\n\n    Both functions exist because it might help save memory.\n\n    Args:\n      x: The vector used to make the prediction\n    \"\"\"", "\n", "raise", "NotImplementedError", "(", "'calc_log_prob must be implemented by subclasses of Scorer'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.scorers.Scorer.calc_loss": [[49, 58], ["NotImplementedError"], "methods", ["None"], ["", "def", "calc_loss", "(", "self", ",", "x", ":", "dy", ".", "Expression", ",", "y", ":", "Union", "[", "int", ",", "List", "[", "int", "]", "]", ")", "->", "dy", ".", "Expression", ":", "\n", "    ", "\"\"\"\n    Calculate the loss incurred by making a particular decision.\n\n    Args:\n      x: The vector used to make the prediction\n      y: The correct label(s)\n    \"\"\"", "\n", "raise", "NotImplementedError", "(", "'calc_loss must be implemented by subclasses of Scorer'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.scorers.Scorer._choose_vocab_size": [[59, 83], ["len", "ValueError", "len"], "methods", ["None"], ["", "def", "_choose_vocab_size", "(", "self", ",", "vocab_size", ":", "Optional", "[", "int", "]", ",", "vocab", ":", "Optional", "[", "vocabs", ".", "Vocab", "]", ",", "\n", "trg_reader", ":", "Optional", "[", "input_readers", ".", "InputReader", "]", ")", "->", "int", ":", "\n", "    ", "\"\"\"Choose the vocab size for the embedder based on the passed arguments.\n\n    This is done in order of priority of vocab_size, vocab, model\n\n    Args:\n      vocab_size: vocab size or None\n      vocab: vocab or None\n      trg_reader: Model's trg_reader, if exists and unambiguous.\n\n    Returns:\n      chosen vocab size\n    \"\"\"", "\n", "if", "vocab_size", "is", "not", "None", ":", "\n", "      ", "return", "vocab_size", "\n", "", "elif", "vocab", "is", "not", "None", ":", "\n", "      ", "return", "len", "(", "vocab", ")", "\n", "", "elif", "trg_reader", "is", "None", "or", "trg_reader", ".", "vocab", "is", "None", ":", "\n", "      ", "raise", "ValueError", "(", "\n", "\"Could not determine scorer's's output size. \"", "\n", "\"Please set its vocab_size or vocab member explicitly, or specify the vocabulary of trg_reader ahead of time.\"", ")", "\n", "", "else", ":", "\n", "      ", "return", "len", "(", "trg_reader", ".", "vocab", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.scorers.Softmax.__init__": [[107, 126], ["xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.param_collections.ParamManager.my_params", "scorers.Softmax._choose_vocab_size", "scorers.Softmax.add_serializable_component", "xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.modelparts.transforms.Linear"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.my_params", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.scorers.Scorer._choose_vocab_size", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "input_dim", ":", "numbers", ".", "Integral", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "vocab_size", ":", "Optional", "[", "numbers", ".", "Integral", "]", "=", "None", ",", "\n", "vocab", ":", "Optional", "[", "vocabs", ".", "Vocab", "]", "=", "None", ",", "\n", "trg_reader", ":", "Optional", "[", "input_readers", ".", "InputReader", "]", "=", "Ref", "(", "\"model.trg_reader\"", ",", "default", "=", "None", ")", ",", "\n", "label_smoothing", ":", "numbers", ".", "Real", "=", "0.0", ",", "\n", "param_init", ":", "param_initializers", ".", "ParamInitializer", "=", "Ref", "(", "\"exp_global.param_init\"", ",", "default", "=", "bare", "(", "param_initializers", ".", "GlorotInitializer", ")", ")", ",", "\n", "bias_init", ":", "param_initializers", ".", "ParamInitializer", "=", "Ref", "(", "\"exp_global.bias_init\"", ",", "default", "=", "bare", "(", "param_initializers", ".", "ZeroInitializer", ")", ")", ",", "\n", "output_projector", ":", "transforms", ".", "Linear", "=", "None", ")", "->", "None", ":", "\n", "    ", "self", ".", "param_col", "=", "param_collections", ".", "ParamManager", ".", "my_params", "(", "self", ")", "\n", "self", ".", "input_dim", "=", "input_dim", "\n", "self", ".", "output_dim", "=", "self", ".", "_choose_vocab_size", "(", "vocab_size", ",", "vocab", ",", "trg_reader", ")", "\n", "self", ".", "label_smoothing", "=", "label_smoothing", "\n", "\n", "self", ".", "output_projector", "=", "self", ".", "add_serializable_component", "(", "\"output_projector\"", ",", "output_projector", ",", "\n", "lambda", ":", "output_projector", "or", "transforms", ".", "Linear", "(", "\n", "input_dim", "=", "self", ".", "input_dim", ",", "output_dim", "=", "self", ".", "output_dim", ",", "\n", "param_init", "=", "param_init", ",", "bias_init", "=", "bias_init", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.scorers.Softmax.calc_scores": [[127, 129], ["scorers.Softmax.output_projector.transform"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.DenseWordEmbedder.transform"], ["", "def", "calc_scores", "(", "self", ",", "x", ":", "dy", ".", "Expression", ")", "->", "dy", ".", "Expression", ":", "\n", "    ", "return", "self", ".", "output_projector", ".", "transform", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.scorers.Softmax.calc_loss": [[130, 152], ["scorers.Softmax.calc_scores", "dynet.log_softmax", "xnmt.batchers.is_batched", "dynet.pickneglogsoftmax", "dynet.pickneglogsoftmax_batch", "xnmt.batchers.is_batched", "dynet.mean_elems", "dynet.pick", "dynet.pick_batch"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.scorers.Softmax.calc_scores", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched"], ["", "def", "calc_loss", "(", "self", ",", "x", ":", "dy", ".", "Expression", ",", "y", ":", "Union", "[", "numbers", ".", "Integral", ",", "List", "[", "numbers", ".", "Integral", "]", "]", ")", "->", "dy", ".", "Expression", ":", "\n", "\n", "    ", "scores", "=", "self", ".", "calc_scores", "(", "x", ")", "\n", "\n", "if", "self", ".", "label_smoothing", "==", "0.0", ":", "\n", "# single mode", "\n", "      ", "if", "not", "batchers", ".", "is_batched", "(", "y", ")", ":", "\n", "        ", "loss", "=", "dy", ".", "pickneglogsoftmax", "(", "scores", ",", "y", ")", "\n", "# minibatch mode", "\n", "", "else", ":", "\n", "        ", "loss", "=", "dy", ".", "pickneglogsoftmax_batch", "(", "scores", ",", "y", ")", "\n", "", "", "else", ":", "\n", "      ", "log_prob", "=", "dy", ".", "log_softmax", "(", "scores", ")", "\n", "if", "not", "batchers", ".", "is_batched", "(", "y", ")", ":", "\n", "        ", "pre_loss", "=", "-", "dy", ".", "pick", "(", "log_prob", ",", "y", ")", "\n", "", "else", ":", "\n", "        ", "pre_loss", "=", "-", "dy", ".", "pick_batch", "(", "log_prob", ",", "y", ")", "\n", "\n", "", "ls_loss", "=", "-", "dy", ".", "mean_elems", "(", "log_prob", ")", "\n", "loss", "=", "(", "(", "1", "-", "self", ".", "label_smoothing", ")", "*", "pre_loss", ")", "+", "(", "self", ".", "label_smoothing", "*", "ls_loss", ")", "\n", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.scorers.Softmax.calc_probs": [[153, 155], ["dynet.softmax", "scorers.Softmax.calc_scores"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.scorers.Softmax.calc_scores"], ["", "def", "calc_probs", "(", "self", ",", "x", ":", "dy", ".", "Expression", ")", "->", "dy", ".", "Expression", ":", "\n", "    ", "return", "dy", ".", "softmax", "(", "self", ".", "calc_scores", "(", "x", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.scorers.Softmax.calc_log_probs": [[156, 158], ["dynet.log_softmax", "scorers.Softmax.calc_scores"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.scorers.Softmax.calc_scores"], ["", "def", "calc_log_probs", "(", "self", ",", "x", ":", "dy", ".", "Expression", ")", "->", "dy", ".", "Expression", ":", "\n", "    ", "return", "dy", ".", "log_softmax", "(", "self", ".", "calc_scores", "(", "x", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.Embedder.embed": [[19, 30], ["NotImplementedError"], "methods", ["None"], ["def", "embed", "(", "self", ",", "word", ")", ":", "\n", "    ", "\"\"\"Embed a single word.\n\n    Args:\n      word: This will generally be an integer word ID, but could also be something like a string. It could\n            also be batched, in which case the input will be a :class:`xnmt.batcher.Batch` of integers or other things.\n\n    Returns:\n      A DyNet Expression corresponding to the embedding of the word(s), possibly batched using :class:`xnmt.batcher.Batch`.\n    \"\"\"", "\n", "raise", "NotImplementedError", "(", "'embed must be implemented in Embedder subclasses'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.Embedder.embed_sent": [[31, 54], ["xnmt.expression_seqs.ExpressionSequence", "xnmt.batchers.is_batched", "x.sent_len", "range", "embedders.Embedder.embed", "xnmt.batchers.mark_as_batch", "embeddings.append", "single_sent.sent_len", "embedders.Embedder.embed", "xnmt.batchers.is_batched"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.embed", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.embed", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched"], ["", "def", "embed_sent", "(", "self", ",", "x", ")", "->", "expression_seqs", ".", "ExpressionSequence", ":", "\n", "    ", "\"\"\"Embed a full sentence worth of words. By default, just do a for loop.\n\n    Args:\n      x: This will generally be a list of word IDs, but could also be a list of strings or some other format.\n         It could also be batched, in which case it will be a (possibly masked) :class:`xnmt.batcher.Batch` object\n\n    Returns:\n      An expression sequence representing vectors of each word in the input.\n    \"\"\"", "\n", "# single mode", "\n", "if", "not", "batchers", ".", "is_batched", "(", "x", ")", ":", "\n", "      ", "embeddings", "=", "[", "self", ".", "embed", "(", "word", ")", "for", "word", "in", "x", "]", "\n", "# minibatch mode", "\n", "", "else", ":", "\n", "      ", "embeddings", "=", "[", "]", "\n", "seq_len", "=", "x", ".", "sent_len", "(", ")", "\n", "for", "single_sent", "in", "x", ":", "assert", "single_sent", ".", "sent_len", "(", ")", "==", "seq_len", "\n", "for", "word_i", "in", "range", "(", "seq_len", ")", ":", "\n", "        ", "batch", "=", "batchers", ".", "mark_as_batch", "(", "[", "single_sent", "[", "word_i", "]", "for", "single_sent", "in", "x", "]", ")", "\n", "embeddings", ".", "append", "(", "self", ".", "embed", "(", "batch", ")", ")", "\n", "\n", "", "", "return", "expression_seqs", ".", "ExpressionSequence", "(", "expr_list", "=", "embeddings", ",", "mask", "=", "x", ".", "mask", "if", "batchers", ".", "is_batched", "(", "x", ")", "else", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.Embedder.choose_vocab": [[55, 81], ["len", "len", "ValueError", "len", "ValueError", "ValueError"], "methods", ["None"], ["", "def", "choose_vocab", "(", "self", ",", "vocab", ":", "vocabs", ".", "Vocab", ",", "yaml_path", ",", "src_reader", ":", "input_readers", ".", "InputReader", ",", "trg_reader", ":", "input_readers", ".", "InputReader", ")", ":", "\n", "    ", "\"\"\"Choose the vocab for the embedder basd on the passed arguments\n\n    This is done in order of priority of vocab, model+yaml_path\n\n    Args:\n      vocab: If None, try to obtain from ``src_reader`` or ``trg_reader``, depending on the ``yaml_path``\n      yaml_path: Path of this embedder in the component hierarchy. Automatically determined when deserializing the YAML model.\n      src_reader: Model's src_reader, if exists and unambiguous.\n      trg_reader: Model's trg_reader, if exists and unambiguous.\n\n    Returns:\n      xnmt.vocab.Vocab: chosen vocab\n    \"\"\"", "\n", "if", "vocab", "is", "not", "None", ":", "\n", "      ", "return", "len", "(", "vocab", ")", "\n", "", "elif", "\"src_embedder\"", "in", "yaml_path", ":", "\n", "      ", "if", "src_reader", "is", "None", "or", "src_reader", ".", "vocab", "is", "None", ":", "\n", "        ", "raise", "ValueError", "(", "\"Could not determine src_embedder's vocabulary. Please set its vocab member explicitly, or specify the vocabulary of src_reader ahead of time.\"", ")", "\n", "", "return", "len", "(", "src_reader", ".", "vocab", ")", "\n", "", "elif", "\"trg_embedder\"", "in", "yaml_path", "or", "\"output_projector\"", "in", "yaml_path", ":", "\n", "      ", "if", "trg_reader", "is", "None", "or", "trg_reader", ".", "vocab", "is", "None", ":", "\n", "        ", "raise", "ValueError", "(", "\"Could not determine trg_embedder's vocabulary. Please set its vocab member explicitly, or specify the vocabulary of trg_reader ahead of time.\"", ")", "\n", "", "return", "len", "(", "trg_reader", ".", "vocab", ")", "\n", "", "else", ":", "\n", "      ", "raise", "ValueError", "(", "\"Attempted to determine vocab size of {} (path: {}), but path was not src_embedder, trg_embedder, or output_projector, so it could not determine what part of the model to use. Please set vocab_size or vocab explicitly.\"", ".", "format", "(", "self", ".", "__class__", ",", "yaml_path", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.Embedder.choose_vocab_size": [[82, 118], ["len", "len", "ValueError", "len", "ValueError", "getattr", "ValueError"], "methods", ["None"], ["", "", "def", "choose_vocab_size", "(", "self", ",", "\n", "vocab_size", ":", "numbers", ".", "Integral", ",", "\n", "vocab", ":", "vocabs", ".", "Vocab", ",", "\n", "yaml_path", ",", "\n", "src_reader", ":", "input_readers", ".", "InputReader", ",", "\n", "trg_reader", ":", "input_readers", ".", "InputReader", ")", "->", "int", ":", "\n", "    ", "\"\"\"Choose the vocab size for the embedder basd on the passed arguments\n\n    This is done in order of priority of vocab_size, vocab, model+yaml_path\n\n    Args:\n      vocab_size : vocab size or None\n      vocab: vocab or None\n      yaml_path: Path of this embedder in the component hierarchy. Automatically determined when YAML-deserializing.\n      src_reader: Model's src_reader, if exists and unambiguous.\n      trg_reader: Model's trg_reader, if exists and unambiguous.\n\n    Returns:\n      chosen vocab size\n    \"\"\"", "\n", "if", "vocab_size", "is", "not", "None", ":", "\n", "      ", "return", "vocab_size", "\n", "", "elif", "vocab", "is", "not", "None", ":", "\n", "      ", "return", "len", "(", "vocab", ")", "\n", "", "elif", "\"src_embedder\"", "in", "yaml_path", ":", "\n", "      ", "if", "src_reader", "is", "None", "or", "getattr", "(", "src_reader", ",", "\"vocab\"", ",", "None", ")", "is", "None", ":", "\n", "        ", "raise", "ValueError", "(", "\"Could not determine src_embedder's size. \"", "\n", "\"Please set its vocab_size or vocab member explicitly, or specify the vocabulary of src_reader ahead of time.\"", ")", "\n", "", "return", "len", "(", "src_reader", ".", "vocab", ")", "\n", "", "elif", "\"trg_embedder\"", "in", "yaml_path", "or", "\"output_projector\"", "in", "yaml_path", ":", "\n", "      ", "if", "trg_reader", "is", "None", "or", "trg_reader", ".", "vocab", "is", "None", ":", "\n", "        ", "raise", "ValueError", "(", "\"Could not determine target embedder's size. \"", "\n", "\"Please set its vocab_size or vocab member explicitly, or specify the vocabulary of trg_reader ahead of time.\"", ")", "\n", "", "return", "len", "(", "trg_reader", ".", "vocab", ")", "\n", "", "else", ":", "\n", "      ", "raise", "ValueError", "(", "f\"Attempted to determine vocab size of {self.__class__} (path: {yaml_path}), \"", "\n", "f\"but path was not src_embedder, trg_embedder, or output_projector, so it could not determine what part of the model to use. \"", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.DenseWordEmbedder.__init__": [[140, 165], ["xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.param_collections.ParamManager.my_params", "embedders.DenseWordEmbedder.choose_vocab_size", "embedders.DenseWordEmbedder.save_processed_arg", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.persistence.bare", "xnmt.persistence.bare", "param_init.initializer", "bias_init.initializer"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.my_params", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.Embedder.choose_vocab_size", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.save_processed_arg", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer"], ["@", "events", ".", "register_xnmt_handler", "\n", "@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "emb_dim", ":", "numbers", ".", "Integral", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "weight_noise", ":", "numbers", ".", "Real", "=", "Ref", "(", "\"exp_global.weight_noise\"", ",", "default", "=", "0.0", ")", ",", "\n", "word_dropout", ":", "numbers", ".", "Real", "=", "0.0", ",", "\n", "fix_norm", ":", "Optional", "[", "numbers", ".", "Real", "]", "=", "None", ",", "\n", "param_init", ":", "param_initializers", ".", "ParamInitializer", "=", "Ref", "(", "\"exp_global.param_init\"", ",", "default", "=", "bare", "(", "\n", "param_initializers", ".", "GlorotInitializer", ")", ")", ",", "\n", "bias_init", ":", "param_initializers", ".", "ParamInitializer", "=", "Ref", "(", "\"exp_global.bias_init\"", ",", "\n", "default", "=", "bare", "(", "param_initializers", ".", "ZeroInitializer", ")", ")", ",", "\n", "vocab_size", ":", "Optional", "[", "numbers", ".", "Integral", "]", "=", "None", ",", "\n", "vocab", ":", "Optional", "[", "vocabs", ".", "Vocab", "]", "=", "None", ",", "\n", "yaml_path", "=", "None", ",", "\n", "src_reader", ":", "Optional", "[", "input_readers", ".", "InputReader", "]", "=", "Ref", "(", "\"model.src_reader\"", ",", "default", "=", "None", ")", ",", "\n", "trg_reader", ":", "Optional", "[", "input_readers", ".", "InputReader", "]", "=", "Ref", "(", "\"model.trg_reader\"", ",", "default", "=", "None", ")", ")", "->", "None", ":", "\n", "    ", "self", ".", "fix_norm", "=", "fix_norm", "\n", "self", ".", "weight_noise", "=", "weight_noise", "\n", "self", ".", "word_dropout", "=", "word_dropout", "\n", "self", ".", "emb_dim", "=", "emb_dim", "\n", "param_collection", "=", "param_collections", ".", "ParamManager", ".", "my_params", "(", "self", ")", "\n", "self", ".", "vocab_size", "=", "self", ".", "choose_vocab_size", "(", "vocab_size", ",", "vocab", ",", "yaml_path", ",", "src_reader", ",", "trg_reader", ")", "\n", "self", ".", "save_processed_arg", "(", "\"vocab_size\"", ",", "self", ".", "vocab_size", ")", "\n", "self", ".", "embeddings", "=", "param_collection", ".", "add_parameters", "(", "(", "self", ".", "vocab_size", ",", "self", ".", "emb_dim", ")", ",", "init", "=", "param_init", ".", "initializer", "(", "(", "self", ".", "vocab_size", ",", "self", ".", "emb_dim", ")", ",", "is_lookup", "=", "True", ")", ")", "\n", "self", ".", "bias", "=", "param_collection", ".", "add_parameters", "(", "(", "self", ".", "vocab_size", ",", ")", ",", "init", "=", "bias_init", ".", "initializer", "(", "(", "self", ".", "vocab_size", ",", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.DenseWordEmbedder.on_start_sent": [[166, 169], ["None"], "methods", ["None"], ["", "@", "events", ".", "handle_xnmt_event", "\n", "def", "on_start_sent", "(", "self", ",", "src", ")", ":", "\n", "    ", "self", ".", "word_id_mask", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.DenseWordEmbedder.on_set_train": [[170, 173], ["None"], "methods", ["None"], ["", "@", "events", ".", "handle_xnmt_event", "\n", "def", "on_set_train", "(", "self", ",", "val", ")", ":", "\n", "    ", "self", ".", "train", "=", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.DenseWordEmbedder.embed": [[174, 202], ["dynet.parameter", "xnmt.batchers.is_batched", "dynet.pick_batch", "dynet.noise", "xnmt.batchers.is_batched", "x.batch_size", "set", "dynet.zeros", "dynet.pick", "dynet.cdiv", "any", "dynet.inputTensor", "dynet.cmult", "numpy.random.choice", "range", "dynet.cdiv", "dynet.l2_norm", "numpy.transpose", "int", "dynet.l2_norm", "range", "x.batch_size", "range", "x.batch_size"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.batch_size", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.batch_size", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.batch_size"], ["", "def", "embed", "(", "self", ",", "x", ")", ":", "\n", "    ", "if", "self", ".", "train", "and", "self", ".", "word_dropout", ">", "0.0", "and", "self", ".", "word_id_mask", "is", "None", ":", "\n", "      ", "batch_size", "=", "x", ".", "batch_size", "(", ")", "if", "batchers", ".", "is_batched", "(", "x", ")", "else", "1", "\n", "self", ".", "word_id_mask", "=", "[", "set", "(", "np", ".", "random", ".", "choice", "(", "self", ".", "vocab_size", ",", "int", "(", "self", ".", "vocab_size", "*", "self", ".", "word_dropout", ")", ",", "replace", "=", "False", ")", ")", "for", "_", "in", "range", "(", "batch_size", ")", "]", "\n", "", "emb_e", "=", "dy", ".", "parameter", "(", "self", ".", "embeddings", ")", "\n", "# single mode", "\n", "if", "not", "batchers", ".", "is_batched", "(", "x", ")", ":", "\n", "      ", "if", "self", ".", "train", "and", "self", ".", "word_id_mask", "and", "x", "in", "self", ".", "word_id_mask", "[", "0", "]", ":", "\n", "        ", "ret", "=", "dy", ".", "zeros", "(", "(", "self", ".", "emb_dim", ",", ")", ")", "\n", "", "else", ":", "\n", "        ", "ret", "=", "dy", ".", "pick", "(", "emb_e", ",", "index", "=", "x", ")", "\n", "if", "self", ".", "fix_norm", "is", "not", "None", ":", "\n", "          ", "ret", "=", "dy", ".", "cdiv", "(", "ret", ",", "dy", ".", "l2_norm", "(", "ret", ")", ")", "\n", "if", "self", ".", "fix_norm", "!=", "1", ":", "\n", "            ", "ret", "*=", "self", ".", "fix_norm", "\n", "# minibatch mode", "\n", "", "", "", "", "else", ":", "\n", "      ", "ret", "=", "dy", ".", "pick_batch", "(", "emb_e", ",", "x", ")", "\n", "if", "self", ".", "fix_norm", "is", "not", "None", ":", "\n", "        ", "ret", "=", "dy", ".", "cdiv", "(", "ret", ",", "dy", ".", "l2_norm", "(", "ret", ")", ")", "\n", "if", "self", ".", "fix_norm", "!=", "1", ":", "\n", "          ", "ret", "*=", "self", ".", "fix_norm", "\n", "", "", "if", "self", ".", "train", "and", "self", ".", "word_id_mask", "and", "any", "(", "x", "[", "i", "]", "in", "self", ".", "word_id_mask", "[", "i", "]", "for", "i", "in", "range", "(", "x", ".", "batch_size", "(", ")", ")", ")", ":", "\n", "        ", "dropout_mask", "=", "dy", ".", "inputTensor", "(", "np", ".", "transpose", "(", "[", "[", "0.0", "]", "*", "self", ".", "emb_dim", "if", "x", "[", "i", "]", "in", "self", ".", "word_id_mask", "[", "i", "]", "else", "[", "1.0", "]", "*", "self", ".", "emb_dim", "for", "i", "in", "range", "(", "x", ".", "batch_size", "(", ")", ")", "]", ")", ",", "batched", "=", "True", ")", "\n", "ret", "=", "dy", ".", "cmult", "(", "ret", ",", "dropout_mask", ")", "\n", "", "", "if", "self", ".", "train", "and", "self", ".", "weight_noise", ">", "0.0", ":", "\n", "      ", "ret", "=", "dy", ".", "noise", "(", "ret", ",", "self", ".", "weight_noise", ")", "\n", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.DenseWordEmbedder.transform": [[203, 207], ["dynet.parameter", "dynet.parameter", "dynet.affine_transform"], "methods", ["None"], ["", "def", "transform", "(", "self", ",", "input_expr", ")", ":", "\n", "    ", "W1", "=", "dy", ".", "parameter", "(", "self", ".", "embeddings", ")", "\n", "b1", "=", "dy", ".", "parameter", "(", "self", ".", "bias", ")", "\n", "return", "dy", ".", "affine_transform", "(", "[", "b1", ",", "W1", ",", "input_expr", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.SimpleWordEmbedder.__init__": [[228, 254], ["xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.param_collections.ParamManager.my_params", "embedders.SimpleWordEmbedder.choose_vocab_size", "embedders.SimpleWordEmbedder.save_processed_arg", "xnmt.param_collections.ParamManager.my_params.add_lookup_parameters", "xnmt.persistence.bare", "param_init.initializer"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.my_params", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.Embedder.choose_vocab_size", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.save_processed_arg", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer"], ["@", "events", ".", "register_xnmt_handler", "\n", "@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "emb_dim", ":", "numbers", ".", "Integral", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "weight_noise", ":", "numbers", ".", "Real", "=", "Ref", "(", "\"exp_global.weight_noise\"", ",", "default", "=", "0.0", ")", ",", "\n", "word_dropout", ":", "numbers", ".", "Real", "=", "0.0", ",", "\n", "fix_norm", ":", "Optional", "[", "numbers", ".", "Real", "]", "=", "None", ",", "\n", "param_init", ":", "param_initializers", ".", "ParamInitializer", "=", "Ref", "(", "\"exp_global.param_init\"", ",", "default", "=", "bare", "(", "\n", "param_initializers", ".", "GlorotInitializer", ")", ")", ",", "\n", "vocab_size", ":", "Optional", "[", "numbers", ".", "Integral", "]", "=", "None", ",", "\n", "vocab", ":", "Optional", "[", "vocabs", ".", "Vocab", "]", "=", "None", ",", "\n", "yaml_path", "=", "None", ",", "\n", "src_reader", ":", "Optional", "[", "input_readers", ".", "InputReader", "]", "=", "Ref", "(", "\"model.src_reader\"", ",", "default", "=", "None", ")", ",", "\n", "trg_reader", ":", "Optional", "[", "input_readers", ".", "InputReader", "]", "=", "Ref", "(", "\"model.trg_reader\"", ",", "default", "=", "None", ")", ")", "->", "None", ":", "\n", "#print(f\"embedder received param_init: {param_init}\")", "\n", "    ", "self", ".", "emb_dim", "=", "emb_dim", "\n", "self", ".", "weight_noise", "=", "weight_noise", "\n", "self", ".", "word_dropout", "=", "word_dropout", "\n", "self", ".", "fix_norm", "=", "fix_norm", "\n", "self", ".", "word_id_mask", "=", "None", "\n", "self", ".", "train", "=", "False", "\n", "param_collection", "=", "param_collections", ".", "ParamManager", ".", "my_params", "(", "self", ")", "\n", "self", ".", "vocab_size", "=", "self", ".", "choose_vocab_size", "(", "vocab_size", ",", "vocab", ",", "yaml_path", ",", "src_reader", ",", "trg_reader", ")", "\n", "self", ".", "save_processed_arg", "(", "\"vocab_size\"", ",", "self", ".", "vocab_size", ")", "\n", "self", ".", "embeddings", "=", "param_collection", ".", "add_lookup_parameters", "(", "(", "self", ".", "vocab_size", ",", "self", ".", "emb_dim", ")", ",", "\n", "init", "=", "param_init", ".", "initializer", "(", "(", "self", ".", "vocab_size", ",", "self", ".", "emb_dim", ")", ",", "is_lookup", "=", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.SimpleWordEmbedder.on_set_train": [[255, 258], ["None"], "methods", ["None"], ["", "@", "events", ".", "handle_xnmt_event", "\n", "def", "on_set_train", "(", "self", ",", "val", ")", ":", "\n", "    ", "self", ".", "train", "=", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.SimpleWordEmbedder.on_start_sent": [[259, 262], ["None"], "methods", ["None"], ["", "@", "events", ".", "handle_xnmt_event", "\n", "def", "on_start_sent", "(", "self", ",", "src", ")", ":", "\n", "    ", "self", ".", "word_id_mask", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.SimpleWordEmbedder.embed": [[263, 290], ["xnmt.batchers.is_batched", "embedders.SimpleWordEmbedder.embeddings.batch", "dynet.noise", "xnmt.batchers.is_batched", "x.batch_size", "set", "dynet.zeros", "dynet.cdiv", "any", "dynet.inputTensor", "dynet.cmult", "numpy.random.choice", "range", "dynet.cdiv", "dynet.l2_norm", "numpy.transpose", "int", "dynet.l2_norm", "range", "x.batch_size", "range", "x.batch_size"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.batch_size", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.batch_size", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.batch_size"], ["", "def", "embed", "(", "self", ",", "x", ")", ":", "\n", "    ", "if", "self", ".", "train", "and", "self", ".", "word_dropout", ">", "0.0", "and", "self", ".", "word_id_mask", "is", "None", ":", "\n", "      ", "batch_size", "=", "x", ".", "batch_size", "(", ")", "if", "batchers", ".", "is_batched", "(", "x", ")", "else", "1", "\n", "self", ".", "word_id_mask", "=", "[", "set", "(", "np", ".", "random", ".", "choice", "(", "self", ".", "vocab_size", ",", "int", "(", "self", ".", "vocab_size", "*", "self", ".", "word_dropout", ")", ",", "replace", "=", "False", ")", ")", "for", "_", "in", "range", "(", "batch_size", ")", "]", "\n", "# single mode", "\n", "", "if", "not", "batchers", ".", "is_batched", "(", "x", ")", ":", "\n", "      ", "if", "self", ".", "train", "and", "self", ".", "word_id_mask", "and", "x", "in", "self", ".", "word_id_mask", "[", "0", "]", ":", "\n", "        ", "ret", "=", "dy", ".", "zeros", "(", "(", "self", ".", "emb_dim", ",", ")", ")", "\n", "", "else", ":", "\n", "        ", "ret", "=", "self", ".", "embeddings", "[", "x", "]", "\n", "if", "self", ".", "fix_norm", "is", "not", "None", ":", "\n", "          ", "ret", "=", "dy", ".", "cdiv", "(", "ret", ",", "dy", ".", "l2_norm", "(", "ret", ")", ")", "\n", "if", "self", ".", "fix_norm", "!=", "1", ":", "\n", "            ", "ret", "*=", "self", ".", "fix_norm", "\n", "# minibatch mode", "\n", "", "", "", "", "else", ":", "\n", "      ", "ret", "=", "self", ".", "embeddings", ".", "batch", "(", "x", ")", "\n", "if", "self", ".", "fix_norm", "is", "not", "None", ":", "\n", "        ", "ret", "=", "dy", ".", "cdiv", "(", "ret", ",", "dy", ".", "l2_norm", "(", "ret", ")", ")", "\n", "if", "self", ".", "fix_norm", "!=", "1", ":", "\n", "          ", "ret", "*=", "self", ".", "fix_norm", "\n", "", "", "if", "self", ".", "train", "and", "self", ".", "word_id_mask", "and", "any", "(", "x", "[", "i", "]", "in", "self", ".", "word_id_mask", "[", "i", "]", "for", "i", "in", "range", "(", "x", ".", "batch_size", "(", ")", ")", ")", ":", "\n", "        ", "dropout_mask", "=", "dy", ".", "inputTensor", "(", "np", ".", "transpose", "(", "[", "[", "0.0", "]", "*", "self", ".", "emb_dim", "if", "x", "[", "i", "]", "in", "self", ".", "word_id_mask", "[", "i", "]", "else", "[", "1.0", "]", "*", "self", ".", "emb_dim", "for", "i", "in", "range", "(", "x", ".", "batch_size", "(", ")", ")", "]", ")", ",", "batched", "=", "True", ")", "\n", "ret", "=", "dy", ".", "cmult", "(", "ret", ",", "dropout_mask", ")", "\n", "", "", "if", "self", ".", "train", "and", "self", ".", "weight_noise", ">", "0.0", ":", "\n", "      ", "ret", "=", "dy", ".", "noise", "(", "ret", ",", "self", ".", "weight_noise", ")", "\n", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.NoopEmbedder.__init__": [[303, 306], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "emb_dim", ":", "Optional", "[", "numbers", ".", "Integral", "]", ")", "->", "None", ":", "\n", "    ", "self", ".", "emb_dim", "=", "emb_dim", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.NoopEmbedder.embed": [[307, 309], ["dynet.inputTensor", "xnmt.batchers.is_batched"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched"], ["", "def", "embed", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "dy", ".", "inputTensor", "(", "x", ",", "batched", "=", "batchers", ".", "is_batched", "(", "x", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.NoopEmbedder.embed_sent": [[310, 329], ["xnmt.batchers.is_batched", "hasattr", "xnmt.expression_seqs.ExpressionSequence", "xnmt.expression_seqs.LazyNumpyExpressionSequence", "xnmt.expression_seqs.LazyNumpyExpressionSequence", "range", "embedders.NoopEmbedder.embed", "x.sent_len", "embeddings.append", "x.get_array", "xnmt.batchers.mark_as_batch", "embedders.NoopEmbedder.embed", "xnmt.batchers.mark_as_batch"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.embed", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.get_array", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.embed", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch"], ["", "def", "embed_sent", "(", "self", ",", "x", ")", ":", "\n", "# TODO refactor: seems a bit too many special cases that need to be distinguished", "\n", "    ", "batched", "=", "batchers", ".", "is_batched", "(", "x", ")", "\n", "first_sent", "=", "x", "[", "0", "]", "if", "batched", "else", "x", "\n", "if", "hasattr", "(", "first_sent", ",", "\"get_array\"", ")", ":", "\n", "      ", "if", "not", "batched", ":", "\n", "        ", "return", "expression_seqs", ".", "LazyNumpyExpressionSequence", "(", "lazy_data", "=", "x", ".", "get_array", "(", ")", ")", "\n", "", "else", ":", "\n", "        ", "return", "expression_seqs", ".", "LazyNumpyExpressionSequence", "(", "lazy_data", "=", "batchers", ".", "mark_as_batch", "(", "\n", "[", "s", "for", "s", "in", "x", "]", ")", ",", "\n", "mask", "=", "x", ".", "mask", ")", "\n", "", "", "else", ":", "\n", "      ", "if", "not", "batched", ":", "\n", "        ", "embeddings", "=", "[", "self", ".", "embed", "(", "word", ")", "for", "word", "in", "x", "]", "\n", "", "else", ":", "\n", "        ", "embeddings", "=", "[", "]", "\n", "for", "word_i", "in", "range", "(", "x", ".", "sent_len", "(", ")", ")", ":", "\n", "          ", "embeddings", ".", "append", "(", "self", ".", "embed", "(", "batchers", ".", "mark_as_batch", "(", "[", "single_sent", "[", "word_i", "]", "for", "single_sent", "in", "x", "]", ")", ")", ")", "\n", "", "", "return", "expression_seqs", ".", "ExpressionSequence", "(", "expr_list", "=", "embeddings", ",", "mask", "=", "x", ".", "mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.PretrainedSimpleWordEmbedder.__init__": [[349, 377], ["xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.param_collections.ParamManager.my_params", "embedders.PretrainedSimpleWordEmbedder.choose_vocab", "len", "embedders.PretrainedSimpleWordEmbedder.save_processed_arg", "xnmt.param_collections.ParamManager.my_params.lookup_parameters_from_numpy", "xnmt.logger.info", "open", "embedders.PretrainedSimpleWordEmbedder._read_fasttext_embeddings"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.my_params", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.Embedder.choose_vocab", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.save_processed_arg", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.PretrainedSimpleWordEmbedder._read_fasttext_embeddings"], ["@", "events", ".", "register_xnmt_handler", "\n", "@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "filename", ":", "str", ",", "\n", "emb_dim", ":", "numbers", ".", "Integral", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "weight_noise", ":", "numbers", ".", "Real", "=", "Ref", "(", "\"exp_global.weight_noise\"", ",", "default", "=", "0.0", ")", ",", "\n", "word_dropout", ":", "numbers", ".", "Real", "=", "0.0", ",", "\n", "fix_norm", ":", "Optional", "[", "numbers", ".", "Real", "]", "=", "None", ",", "\n", "vocab", ":", "Optional", "[", "vocabs", ".", "Vocab", "]", "=", "None", ",", "\n", "yaml_path", "=", "None", ",", "\n", "src_reader", ":", "Optional", "[", "input_readers", ".", "InputReader", "]", "=", "Ref", "(", "\"model.src_reader\"", ",", "default", "=", "None", ")", ",", "\n", "trg_reader", ":", "Optional", "[", "input_readers", ".", "InputReader", "]", "=", "Ref", "(", "\"model.trg_reader\"", ",", "default", "=", "None", ")", ")", "->", "None", ":", "\n", "    ", "self", ".", "emb_dim", "=", "emb_dim", "\n", "self", ".", "weight_noise", "=", "weight_noise", "\n", "self", ".", "word_dropout", "=", "word_dropout", "\n", "self", ".", "word_id_mask", "=", "None", "\n", "self", ".", "train", "=", "False", "\n", "self", ".", "fix_norm", "=", "fix_norm", "\n", "self", ".", "pretrained_filename", "=", "filename", "\n", "param_collection", "=", "param_collections", ".", "ParamManager", ".", "my_params", "(", "self", ")", "\n", "self", ".", "vocab", "=", "self", ".", "choose_vocab", "(", "vocab", ",", "yaml_path", ",", "src_reader", ",", "trg_reader", ")", "\n", "self", ".", "vocab_size", "=", "len", "(", "vocab", ")", "\n", "self", ".", "save_processed_arg", "(", "\"vocab\"", ",", "self", ".", "vocab", ")", "\n", "with", "open", "(", "self", ".", "pretrained_filename", ",", "encoding", "=", "'utf-8'", ")", "as", "embeddings_file", ":", "\n", "      ", "total_embs", ",", "in_vocab", ",", "missing", ",", "initial_embeddings", "=", "self", ".", "_read_fasttext_embeddings", "(", "vocab", ",", "embeddings_file", ")", "\n", "", "self", ".", "embeddings", "=", "param_collection", ".", "lookup_parameters_from_numpy", "(", "initial_embeddings", ")", "\n", "\n", "logger", ".", "info", "(", "f\"{in_vocab} vocabulary matches out of {total_embs} total embeddings; \"", "\n", "f\"{missing} vocabulary words without a pretrained embedding out of {self.vocab_size}\"", ")", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.PretrainedSimpleWordEmbedder._read_fasttext_embeddings": [[379, 420], ["next().split", "numpy.sqrt", "numpy.empty", "numpy.zeros", "range", "int", "Exception", "line.strip().split", "next", "numpy.fromstring", "numpy.random.uniform", "line.strip"], "methods", ["None"], ["", "def", "_read_fasttext_embeddings", "(", "self", ",", "vocab", ":", "vocabs", ".", "Vocab", ",", "embeddings_file_handle", ")", ":", "\n", "    ", "\"\"\"\n    Reads FastText embeddings from a file. Also prints stats about the loaded embeddings for sanity checking.\n\n    Args:\n      vocab: a `Vocab` object containing the vocabulary for the experiment\n      embeddings_file_handle: A file handle on the embeddings file. The embeddings must be in FastText text\n                              format.\n    Returns:\n      tuple: A tuple of (total number of embeddings read, # embeddings that match vocabulary words, # vocabulary words\n     without a matching embedding, embeddings array).\n    \"\"\"", "\n", "_", ",", "dimension", "=", "next", "(", "embeddings_file_handle", ")", ".", "split", "(", ")", "\n", "if", "int", "(", "dimension", ")", "!=", "self", ".", "emb_dim", ":", "\n", "      ", "raise", "Exception", "(", "f\"An embedding size of {self.emb_dim} was specified, but the pretrained embeddings have size {dimension}\"", ")", "\n", "\n", "# Poor man's Glorot initializer for missing embeddings", "\n", "", "bound", "=", "np", ".", "sqrt", "(", "6", "/", "(", "self", ".", "vocab_size", "+", "self", ".", "emb_dim", ")", ")", "\n", "\n", "total_embs", "=", "0", "\n", "in_vocab", "=", "0", "\n", "missing", "=", "0", "\n", "\n", "embeddings", "=", "np", ".", "empty", "(", "(", "self", ".", "vocab_size", ",", "self", ".", "emb_dim", ")", ",", "dtype", "=", "'float'", ")", "\n", "found", "=", "np", ".", "zeros", "(", "self", ".", "vocab_size", ",", "dtype", "=", "'bool_'", ")", "\n", "\n", "for", "line", "in", "embeddings_file_handle", ":", "\n", "      ", "total_embs", "+=", "1", "\n", "word", ",", "vals", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "' '", ",", "1", ")", "\n", "if", "word", "in", "vocab", ".", "w2i", ":", "\n", "        ", "in_vocab", "+=", "1", "\n", "index", "=", "vocab", ".", "w2i", "[", "word", "]", "\n", "embeddings", "[", "index", "]", "=", "np", ".", "fromstring", "(", "vals", ",", "sep", "=", "\" \"", ")", "\n", "found", "[", "index", "]", "=", "True", "\n", "\n", "", "", "for", "i", "in", "range", "(", "self", ".", "vocab_size", ")", ":", "\n", "      ", "if", "not", "found", "[", "i", "]", ":", "\n", "        ", "missing", "+=", "1", "\n", "embeddings", "[", "i", "]", "=", "np", ".", "random", ".", "uniform", "(", "-", "bound", ",", "bound", ",", "self", ".", "emb_dim", ")", "\n", "\n", "", "", "return", "total_embs", ",", "in_vocab", ",", "missing", ",", "embeddings", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.PositionEmbedder.__init__": [[426, 443], ["xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.param_collections.ParamManager.my_params", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.persistence.bare", "param_init.initializer"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.my_params", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "max_pos", ":", "numbers", ".", "Integral", ",", "\n", "emb_dim", ":", "numbers", ".", "Integral", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "param_init", ":", "param_initializers", ".", "ParamInitializer", "=", "Ref", "(", "\"exp_global.param_init\"", ",", "\n", "default", "=", "bare", "(", "param_initializers", ".", "GlorotInitializer", ")", ")", ")", ":", "\n", "    ", "\"\"\"\n    max_pos: largest embedded position\n    emb_dim: embedding size\n    param_init: how to initialize embedding matrix\n    \"\"\"", "\n", "self", ".", "max_pos", "=", "max_pos", "\n", "self", ".", "emb_dim", "=", "emb_dim", "\n", "param_collection", "=", "param_collections", ".", "ParamManager", ".", "my_params", "(", "self", ")", "\n", "param_init", "=", "param_init", "\n", "dim", "=", "(", "self", ".", "emb_dim", ",", "max_pos", ")", "\n", "self", ".", "embeddings", "=", "param_collection", ".", "add_parameters", "(", "dim", ",", "init", "=", "param_init", ".", "initializer", "(", "dim", ",", "is_lookup", "=", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.PositionEmbedder.embed": [[444, 445], ["NotImplementedError"], "methods", ["None"], ["", "def", "embed", "(", "self", ",", "word", ")", ":", "raise", "NotImplementedError", "(", "\"Position-embedding for individual words not implemented yet.\"", ")", "\n", "def", "embed_sent", "(", "self", ",", "sent_len", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.PositionEmbedder.embed_sent": [[445, 448], ["dynet.strided_select", "xnmt.expression_seqs.ExpressionSequence", "dynet.parameter"], "methods", ["None"], ["def", "embed_sent", "(", "self", ",", "sent_len", ")", ":", "\n", "    ", "embeddings", "=", "dy", ".", "strided_select", "(", "dy", ".", "parameter", "(", "self", ".", "embeddings", ")", ",", "[", "1", ",", "1", "]", ",", "[", "0", ",", "0", "]", ",", "[", "self", ".", "emb_dim", ",", "sent_len", "]", ")", "\n", "return", "expression_seqs", ".", "ExpressionSequence", "(", "expr_tensor", "=", "embeddings", ",", "mask", "=", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.__init__": [[463, 493], ["xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.param_collections.ParamManager.my_params", "embedders.FactorEmbedder.choose_vocab_size", "embedders.FactorEmbedder.save_processed_arg", "xnmt.param_collections.ParamManager.my_params.add_lookup_parameters", "xnmt.persistence.bare", "param_init.initializer"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.my_params", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.Embedder.choose_vocab_size", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.save_processed_arg", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer"], ["@", "events", ".", "register_xnmt_handler", "\n", "@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "emb_dim", ":", "numbers", ".", "Integral", "=", "104", ",", "\n", "speech_emb_dim", ":", "numbers", ".", "Integral", "=", "40", ",", "\n", "fact_emb_dim", ":", "numbers", ".", "Integral", "=", "64", ",", "\n", "weight_noise", ":", "numbers", ".", "Real", "=", "Ref", "(", "\"exp_global.weight_noise\"", ",", "default", "=", "0.0", ")", ",", "\n", "word_dropout", ":", "numbers", ".", "Real", "=", "0.0", ",", "\n", "fix_norm", ":", "Optional", "[", "numbers", ".", "Real", "]", "=", "None", ",", "\n", "param_init", ":", "param_initializers", ".", "ParamInitializer", "=", "Ref", "(", "\"exp_global.param_init\"", ",", "default", "=", "bare", "(", "\n", "param_initializers", ".", "GlorotInitializer", ")", ")", ",", "\n", "vocab_size", ":", "Optional", "[", "numbers", ".", "Integral", "]", "=", "None", ",", "\n", "vocab", ":", "Optional", "[", "vocabs", ".", "Vocab", "]", "=", "None", ",", "\n", "yaml_path", "=", "None", ",", "\n", "src_reader", ":", "Optional", "[", "input_readers", ".", "InputReader", "]", "=", "Ref", "(", "\"model.src_reader\"", ",", "default", "=", "None", ")", ",", "\n", "trg_reader", ":", "Optional", "[", "input_readers", ".", "InputReader", "]", "=", "Ref", "(", "\"model.trg_reader\"", ",", "default", "=", "None", ")", ")", "->", "None", ":", "\n", "#print(f\"embedder received param_init: {param_init}\")", "\n", "    ", "self", ".", "emb_dim", "=", "emb_dim", "\n", "self", ".", "speech_emb_dim", "=", "speech_emb_dim", "\n", "self", ".", "fact_emb_dim", "=", "fact_emb_dim", "\n", "self", ".", "weight_noise", "=", "weight_noise", "\n", "self", ".", "word_dropout", "=", "word_dropout", "\n", "self", ".", "fix_norm", "=", "fix_norm", "\n", "self", ".", "word_id_mask", "=", "None", "\n", "self", ".", "train", "=", "False", "\n", "param_collection", "=", "param_collections", ".", "ParamManager", ".", "my_params", "(", "self", ")", "\n", "self", ".", "vocab_size", "=", "self", ".", "choose_vocab_size", "(", "vocab_size", ",", "vocab", ",", "yaml_path", ",", "src_reader", ",", "trg_reader", ")", "\n", "self", ".", "save_processed_arg", "(", "\"vocab_size\"", ",", "self", ".", "vocab_size", ")", "\n", "self", ".", "embeddings", "=", "param_collection", ".", "add_lookup_parameters", "(", "(", "self", ".", "vocab_size", ",", "self", ".", "fact_emb_dim", ")", ",", "\n", "init", "=", "param_init", ".", "initializer", "(", "(", "self", ".", "vocab_size", ",", "self", ".", "fact_emb_dim", ")", ",", "is_lookup", "=", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.on_set_train": [[494, 497], ["None"], "methods", ["None"], ["", "@", "events", ".", "handle_xnmt_event", "\n", "def", "on_set_train", "(", "self", ",", "val", ")", ":", "\n", "    ", "self", ".", "train", "=", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.on_start_sent": [[498, 501], ["None"], "methods", ["None"], ["", "@", "events", ".", "handle_xnmt_event", "\n", "def", "on_start_sent", "(", "self", ",", "src", ")", ":", "\n", "    ", "self", ".", "word_id_mask", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.embed_factor": [[502, 529], ["xnmt.batchers.is_batched", "embedders.FactorEmbedder.embeddings.batch", "dynet.noise", "xnmt.batchers.is_batched", "x.batch_size", "set", "dynet.zeros", "dynet.cdiv", "any", "dynet.inputTensor", "dynet.cmult", "numpy.random.choice", "range", "dynet.cdiv", "dynet.l2_norm", "numpy.transpose", "int", "dynet.l2_norm", "range", "x.batch_size", "range", "x.batch_size"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.batch_size", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.batch_size", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.batch_size"], ["", "def", "embed_factor", "(", "self", ",", "x", ")", ":", "\n", "    ", "if", "self", ".", "train", "and", "self", ".", "word_dropout", ">", "0.0", "and", "self", ".", "word_id_mask", "is", "None", ":", "\n", "      ", "batch_size", "=", "x", ".", "batch_size", "(", ")", "if", "batchers", ".", "is_batched", "(", "x", ")", "else", "1", "\n", "self", ".", "word_id_mask", "=", "[", "set", "(", "np", ".", "random", ".", "choice", "(", "self", ".", "vocab_size", ",", "int", "(", "self", ".", "vocab_size", "*", "self", ".", "word_dropout", ")", ",", "replace", "=", "False", ")", ")", "for", "_", "in", "range", "(", "batch_size", ")", "]", "\n", "# single mode", "\n", "", "if", "not", "batchers", ".", "is_batched", "(", "x", ")", ":", "\n", "      ", "if", "self", ".", "train", "and", "self", ".", "word_id_mask", "and", "x", "in", "self", ".", "word_id_mask", "[", "0", "]", ":", "\n", "        ", "ret", "=", "dy", ".", "zeros", "(", "(", "self", ".", "fact_emb_dim", ",", ")", ")", "\n", "", "else", ":", "\n", "        ", "ret", "=", "self", ".", "embeddings", "[", "x", "]", "\n", "if", "self", ".", "fix_norm", "is", "not", "None", ":", "\n", "          ", "ret", "=", "dy", ".", "cdiv", "(", "ret", ",", "dy", ".", "l2_norm", "(", "ret", ")", ")", "\n", "if", "self", ".", "fix_norm", "!=", "1", ":", "\n", "            ", "ret", "*=", "self", ".", "fix_norm", "\n", "# minibatch mode", "\n", "", "", "", "", "else", ":", "\n", "      ", "ret", "=", "self", ".", "embeddings", ".", "batch", "(", "x", ")", "\n", "if", "self", ".", "fix_norm", "is", "not", "None", ":", "\n", "        ", "ret", "=", "dy", ".", "cdiv", "(", "ret", ",", "dy", ".", "l2_norm", "(", "ret", ")", ")", "\n", "if", "self", ".", "fix_norm", "!=", "1", ":", "\n", "          ", "ret", "*=", "self", ".", "fix_norm", "\n", "", "", "if", "self", ".", "train", "and", "self", ".", "word_id_mask", "and", "any", "(", "x", "[", "i", "]", "in", "self", ".", "word_id_mask", "[", "i", "]", "for", "i", "in", "range", "(", "x", ".", "batch_size", "(", ")", ")", ")", ":", "\n", "        ", "dropout_mask", "=", "dy", ".", "inputTensor", "(", "np", ".", "transpose", "(", "[", "[", "0.0", "]", "*", "self", ".", "fact_emb_dim", "if", "x", "[", "i", "]", "in", "self", ".", "word_id_mask", "[", "i", "]", "else", "[", "1.0", "]", "*", "self", ".", "fact_emb_dim", "for", "i", "in", "range", "(", "x", ".", "batch_size", "(", ")", ")", "]", ")", ",", "batched", "=", "True", ")", "\n", "ret", "=", "dy", ".", "cmult", "(", "ret", ",", "dropout_mask", ")", "\n", "", "", "if", "self", ".", "train", "and", "self", ".", "weight_noise", ">", "0.0", ":", "\n", "      ", "ret", "=", "dy", ".", "noise", "(", "ret", ",", "self", ".", "weight_noise", ")", "\n", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.embed_factor_sent": [[530, 544], ["xnmt.expression_seqs.ExpressionSequence", "xnmt.batchers.is_batched", "x.sent_len", "range", "embedders.FactorEmbedder.embed_factor", "xnmt.batchers.mark_as_batch", "embeddings.append", "single_sent.sent_len", "embedders.FactorEmbedder.embed_factor", "xnmt.batchers.is_batched"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.embed_factor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.embed_factor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched"], ["", "def", "embed_factor_sent", "(", "self", ",", "x", ",", "speech_len", ")", ":", "\n", "# single mode", "\n", "    ", "if", "not", "batchers", ".", "is_batched", "(", "x", ")", ":", "\n", "      ", "embeddings", "=", "[", "self", ".", "embed_factor", "(", "word", ")", "for", "word", "in", "x", "]", "\n", "# minibatch mode", "\n", "", "else", ":", "\n", "      ", "embeddings", "=", "[", "]", "\n", "seq_len", "=", "x", ".", "sent_len", "(", ")", "\n", "for", "single_sent", "in", "x", ":", "assert", "single_sent", ".", "sent_len", "(", ")", "==", "seq_len", "\n", "#      for word_i in range(seq_len):", "\n", "for", "word_i", "in", "range", "(", "speech_len", ")", ":", "\n", "        ", "batch", "=", "batchers", ".", "mark_as_batch", "(", "[", "single_sent", "[", "word_i", "]", "for", "single_sent", "in", "x", "]", ")", "\n", "embeddings", ".", "append", "(", "self", ".", "embed_factor", "(", "batch", ")", ")", "\n", "", "", "return", "expression_seqs", ".", "ExpressionSequence", "(", "expr_list", "=", "embeddings", ",", "mask", "=", "x", ".", "mask", "if", "batchers", ".", "is_batched", "(", "x", ")", "else", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.embed_speech": [[546, 548], ["dynet.inputTensor", "xnmt.batchers.is_batched"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched"], ["", "def", "embed_speech", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "dy", ".", "inputTensor", "(", "x", ",", "batched", "=", "batchers", ".", "is_batched", "(", "x", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.embed_speech_sent": [[549, 564], ["xnmt.batchers.is_batched", "hasattr", "ValueError", "xnmt.expression_seqs.ExpressionSequence", "xnmt.expression_seqs.LazyNumpyExpressionSequence", "xnmt.expression_seqs.LazyNumpyExpressionSequence", "x.get_array", "xnmt.batchers.mark_as_batch"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.get_array", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch"], ["", "def", "embed_speech_sent", "(", "self", ",", "x", ")", ":", "\n", "# TODO refactor: seems a bit too many special cases that need to be distinguished", "\n", "#    x = x.batches[0]", "\n", "    ", "batched", "=", "batchers", ".", "is_batched", "(", "x", ")", "\n", "first_sent", "=", "x", "[", "0", "]", "if", "batched", "else", "x", "\n", "if", "hasattr", "(", "first_sent", ",", "\"get_array\"", ")", ":", "\n", "      ", "if", "not", "batched", ":", "\n", "        ", "return", "expression_seqs", ".", "LazyNumpyExpressionSequence", "(", "lazy_data", "=", "x", ".", "get_array", "(", ")", ")", "\n", "", "else", ":", "\n", "        ", "return", "expression_seqs", ".", "LazyNumpyExpressionSequence", "(", "lazy_data", "=", "batchers", ".", "mark_as_batch", "(", "\n", "[", "s", "for", "s", "in", "x", "]", ")", ",", "\n", "mask", "=", "x", ".", "mask", ")", "\n", "", "", "else", ":", "\n", "      ", "raise", "ValueError", "(", "\"!! Expected to use above\"", ")", "\n", "return", "expression_seqs", ".", "ExpressionSequence", "(", "expr_list", "=", "embeddings", ",", "mask", "=", "x", ".", "mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.embed": [[566, 567], ["NotImplementedError"], "methods", ["None"], ["", "", "def", "embed", "(", "self", ",", "word", ")", ":", "raise", "NotImplementedError", "(", "\"Factor-embedding for individual words not implemented yet.\"", ")", "\n", "def", "embed_sent", "(", "self", ",", "x", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.embed_sent": [[567, 596], ["embedders.FactorEmbedder.embed_speech_sent", "embedders.FactorEmbedder.embed_factor_sent", "dynet.concatenate", "xnmt.expression_seqs.ExpressionSequence", "speech_x.sent_len", "embedders.FactorEmbedder.as_tensor", "embedders.FactorEmbedder.as_tensor"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.embed_speech_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.embed_factor_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor"], ["def", "embed_sent", "(", "self", ",", "x", ")", ":", "\n", "    ", "speech_x", "=", "x", ".", "batches", "[", "0", "]", "\n", "factor_x", "=", "x", ".", "batches", "[", "1", "]", "\n", "\n", "#    if speech_x.sent_len()!=factor_x.sent_len():", "\n", "#      print(speech_x.sent_len())", "\n", "#      print(factor_x.sent_len())", "\n", "#      if speech_x.sent_len()!=factor_x.sent_len()+4:", "\n", "#        print(\"PROBLEM !!!!!!!!\") #ah this is due to concatenated sentences which don't have both phonemes for both parts. shouldn't happen with the kaldi phones i don't think", "\n", "#      print(\"---\")", "\n", "\n", "#    if speech_x.sent_len()==factor_x.sent_len():", "\n", "#      speech_xs = self.embed_speech_sent(speech_x)", "\n", "#      factor_xs = self.embed_factor_sent(factor_x, speech_x.sent_len())", "\n", "#    elif speech_x.sent_len()+4==factor_x.sent_len():", "\n", "#      speech_xs = self.embed_speech_sent(speech_x)", "\n", "#      factor_xs = self.embed_factor_sent(factor_x, speech_x.sent_len())", "\n", "#    elif speech_x.sent_len() > factor_x.sent_len():", "\n", "#      speech_xs = self.embed_speech_sent(speech_x)", "\n", "#      factor_xs = self.embed_factor_sent(factor_x, speech_x.sent_len())", "\n", "#    else:", "\n", "#      raise ValueError(\"!! unforseen sent mismatch in factor embedder\")", "\n", "\n", "speech_xs", "=", "self", ".", "embed_speech_sent", "(", "speech_x", ")", "\n", "factor_xs", "=", "self", ".", "embed_factor_sent", "(", "factor_x", ",", "speech_x", ".", "sent_len", "(", ")", ")", "\n", "\n", "catted", "=", "dy", ".", "concatenate", "(", "[", "speech_xs", ".", "as_tensor", "(", ")", ",", "factor_xs", ".", "as_tensor", "(", ")", "]", ")", "\n", "output_seq", "=", "expression_seqs", ".", "ExpressionSequence", "(", "expr_tensor", "=", "catted", ",", "mask", "=", "speech_x", ".", "mask", ")", "\n", "return", "output_seq", "\n", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.attenders.Attender.init_sent": [[16, 21], ["NotImplementedError"], "methods", ["None"], ["def", "init_sent", "(", "self", ",", "sent", ":", "ExpressionSequence", ")", ":", "\n", "    ", "\"\"\"Args:\n         sent: the encoder states, aka keys and values. Usually but not necessarily an :class:`xnmt.expression_sequence.ExpressionSequence`\n    \"\"\"", "\n", "raise", "NotImplementedError", "(", "'init_sent must be implemented for Attender subclasses'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.attenders.Attender.calc_attention": [[22, 29], ["NotImplementedError"], "methods", ["None"], ["", "def", "calc_attention", "(", "self", ",", "state", ")", ":", "\n", "    ", "\"\"\" Compute attention weights.\n\n    Args:\n      state (dy.Expression): the current decoder state, aka query, for which to compute the weights.\n    \"\"\"", "\n", "raise", "NotImplementedError", "(", "'calc_attention must be implemented for Attender subclasses'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.attenders.Attender.calc_context": [[30, 39], ["attenders.Attender.calc_attention", "attenders.Attender.curr_sent.as_tensor"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.attenders.MlpLocationAttender.calc_attention", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor"], ["", "def", "calc_context", "(", "self", ",", "state", ")", ":", "\n", "    ", "\"\"\" Compute weighted sum.\n\n    Args:\n      state (dy.Expression): the current decoder state, aka query, for which to compute the weighted sum.\n    \"\"\"", "\n", "attention", "=", "self", ".", "calc_attention", "(", "state", ")", "\n", "I", "=", "self", ".", "curr_sent", ".", "as_tensor", "(", ")", "\n", "return", "I", "*", "attention", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.attenders.Attender.get_last_attention": [[40, 42], ["None"], "methods", ["None"], ["", "def", "get_last_attention", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "attention_vecs", "[", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.attenders.MlpAttender.__init__": [[59, 77], ["xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.param_collections.ParamManager.my_params", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.persistence.bare", "xnmt.persistence.bare", "param_init.initializer", "param_init.initializer", "bias_init.initializer", "param_init.initializer"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.my_params", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "input_dim", ":", "numbers", ".", "Integral", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "state_dim", ":", "numbers", ".", "Integral", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "hidden_dim", ":", "numbers", ".", "Integral", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "param_init", ":", "param_initializers", ".", "ParamInitializer", "=", "Ref", "(", "\"exp_global.param_init\"", ",", "default", "=", "bare", "(", "param_initializers", ".", "GlorotInitializer", ")", ")", ",", "\n", "bias_init", ":", "param_initializers", ".", "ParamInitializer", "=", "Ref", "(", "\"exp_global.bias_init\"", ",", "default", "=", "bare", "(", "param_initializers", ".", "ZeroInitializer", ")", ")", ",", "\n", "truncate_dec_batches", ":", "bool", "=", "Ref", "(", "\"exp_global.truncate_dec_batches\"", ",", "default", "=", "False", ")", ")", "->", "None", ":", "\n", "    ", "self", ".", "input_dim", "=", "input_dim", "\n", "self", ".", "state_dim", "=", "state_dim", "\n", "self", ".", "hidden_dim", "=", "hidden_dim", "\n", "self", ".", "truncate_dec_batches", "=", "truncate_dec_batches", "\n", "param_collection", "=", "param_collections", ".", "ParamManager", ".", "my_params", "(", "self", ")", "\n", "self", ".", "pW", "=", "param_collection", ".", "add_parameters", "(", "(", "hidden_dim", ",", "input_dim", ")", ",", "init", "=", "param_init", ".", "initializer", "(", "(", "hidden_dim", ",", "input_dim", ")", ")", ")", "\n", "self", ".", "pV", "=", "param_collection", ".", "add_parameters", "(", "(", "hidden_dim", ",", "state_dim", ")", ",", "init", "=", "param_init", ".", "initializer", "(", "(", "hidden_dim", ",", "state_dim", ")", ")", ")", "\n", "self", ".", "pb", "=", "param_collection", ".", "add_parameters", "(", "(", "hidden_dim", ",", ")", ",", "init", "=", "bias_init", ".", "initializer", "(", "(", "hidden_dim", ",", ")", ")", ")", "\n", "self", ".", "pU", "=", "param_collection", ".", "add_parameters", "(", "(", "1", ",", "hidden_dim", ")", ",", "init", "=", "param_init", ".", "initializer", "(", "(", "1", ",", "hidden_dim", ")", ")", ")", "\n", "self", ".", "curr_sent", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.attenders.MlpAttender.init_sent": [[78, 90], ["attenders.MlpAttender.curr_sent.as_tensor", "dynet.parameter", "dynet.parameter", "dynet.affine_transform", "attenders.MlpAttender.WI.dim", "len", "dynet.reshape"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["", "def", "init_sent", "(", "self", ",", "sent", ":", "ExpressionSequence", ")", ":", "\n", "    ", "self", ".", "attention_vecs", "=", "[", "]", "\n", "self", ".", "curr_sent", "=", "sent", "\n", "I", "=", "self", ".", "curr_sent", ".", "as_tensor", "(", ")", "\n", "W", "=", "dy", ".", "parameter", "(", "self", ".", "pW", ")", "\n", "b", "=", "dy", ".", "parameter", "(", "self", ".", "pb", ")", "\n", "self", ".", "WI", "=", "dy", ".", "affine_transform", "(", "[", "b", ",", "W", ",", "I", "]", ")", "\n", "wi_dim", "=", "self", ".", "WI", ".", "dim", "(", ")", "\n", "# TODO(philip30): dynet affine transform bug, should be fixed upstream", "\n", "# if the input size is \"1\" then the last dimension will be dropped.", "\n", "if", "len", "(", "wi_dim", "[", "0", "]", ")", "==", "1", ":", "\n", "      ", "self", ".", "WI", "=", "dy", ".", "reshape", "(", "self", ".", "WI", ",", "(", "wi_dim", "[", "0", "]", "[", "0", "]", ",", "1", ")", ",", "batch_size", "=", "wi_dim", "[", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.attenders.MlpAttender.calc_attention": [[91, 107], ["dynet.parameter", "dynet.parameter", "dynet.tanh", "dynet.transpose", "dynet.softmax", "attenders.MlpAttender.attention_vecs.append", "dynet.colwise_add", "curr_sent_mask.add_to_tensor_expr", "xnmt.batchers.truncate_batches", "xnmt.batchers.truncate_batches"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.add_to_tensor_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.truncate_batches", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.truncate_batches"], ["", "", "def", "calc_attention", "(", "self", ",", "state", ")", ":", "\n", "    ", "V", "=", "dy", ".", "parameter", "(", "self", ".", "pV", ")", "\n", "U", "=", "dy", ".", "parameter", "(", "self", ".", "pU", ")", "\n", "\n", "WI", "=", "self", ".", "WI", "\n", "curr_sent_mask", "=", "self", ".", "curr_sent", ".", "mask", "\n", "if", "self", ".", "truncate_dec_batches", ":", "\n", "      ", "if", "curr_sent_mask", ":", "state", ",", "WI", ",", "curr_sent_mask", "=", "batchers", ".", "truncate_batches", "(", "state", ",", "WI", ",", "curr_sent_mask", ")", "\n", "else", ":", "state", ",", "WI", "=", "batchers", ".", "truncate_batches", "(", "state", ",", "WI", ")", "\n", "", "h", "=", "dy", ".", "tanh", "(", "dy", ".", "colwise_add", "(", "WI", ",", "V", "*", "state", ")", ")", "\n", "scores", "=", "dy", ".", "transpose", "(", "U", "*", "h", ")", "\n", "if", "curr_sent_mask", "is", "not", "None", ":", "\n", "      ", "scores", "=", "curr_sent_mask", ".", "add_to_tensor_expr", "(", "scores", ",", "multiplicator", "=", "-", "100.0", ")", "\n", "", "normalized", "=", "dy", ".", "softmax", "(", "scores", ")", "\n", "self", ".", "attention_vecs", ".", "append", "(", "normalized", ")", "\n", "return", "normalized", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.attenders.MlpAttender.calc_context": [[108, 113], ["attenders.MlpAttender.calc_attention", "attenders.MlpAttender.curr_sent.as_tensor", "xnmt.batchers.truncate_batches"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.attenders.MlpLocationAttender.calc_attention", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.truncate_batches"], ["", "def", "calc_context", "(", "self", ",", "state", ")", ":", "\n", "    ", "attention", "=", "self", ".", "calc_attention", "(", "state", ")", "\n", "I", "=", "self", ".", "curr_sent", ".", "as_tensor", "(", ")", "\n", "if", "self", ".", "truncate_dec_batches", ":", "I", ",", "attention", "=", "batchers", ".", "truncate_batches", "(", "I", ",", "attention", ")", "\n", "return", "I", "*", "attention", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.attenders.DotAttender.__init__": [[126, 133], ["xnmt.persistence.Ref", "NotImplementedError"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "scale", ":", "bool", "=", "True", ",", "\n", "truncate_dec_batches", ":", "bool", "=", "Ref", "(", "\"exp_global.truncate_dec_batches\"", ",", "default", "=", "False", ")", ")", "->", "None", ":", "\n", "    ", "if", "truncate_dec_batches", ":", "raise", "NotImplementedError", "(", "\"truncate_dec_batches not yet implemented for DotAttender\"", ")", "\n", "self", ".", "curr_sent", "=", "None", "\n", "self", ".", "scale", "=", "scale", "\n", "self", ".", "attention_vecs", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.attenders.DotAttender.init_sent": [[134, 138], ["dynet.transpose", "attenders.DotAttender.curr_sent.as_tensor"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor"], ["", "def", "init_sent", "(", "self", ",", "sent", ":", "ExpressionSequence", ")", ":", "\n", "    ", "self", ".", "curr_sent", "=", "sent", "\n", "self", ".", "attention_vecs", "=", "[", "]", "\n", "self", ".", "I", "=", "dy", ".", "transpose", "(", "self", ".", "curr_sent", ".", "as_tensor", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.attenders.DotAttender.calc_attention": [[139, 148], ["dynet.softmax", "attenders.DotAttender.attention_vecs.append", "math.sqrt", "attenders.DotAttender.curr_sent.mask.add_to_tensor_expr", "state.dim"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.add_to_tensor_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["", "def", "calc_attention", "(", "self", ",", "state", ")", ":", "\n", "    ", "scores", "=", "self", ".", "I", "*", "state", "\n", "if", "self", ".", "scale", ":", "\n", "      ", "scores", "/=", "math", ".", "sqrt", "(", "state", ".", "dim", "(", ")", "[", "0", "]", "[", "0", "]", ")", "\n", "", "if", "self", ".", "curr_sent", ".", "mask", "is", "not", "None", ":", "\n", "      ", "scores", "=", "self", ".", "curr_sent", ".", "mask", ".", "add_to_tensor_expr", "(", "scores", ",", "multiplicator", "=", "-", "100.0", ")", "\n", "", "normalized", "=", "dy", ".", "softmax", "(", "scores", ")", "\n", "self", ".", "attention_vecs", ".", "append", "(", "normalized", ")", "\n", "return", "normalized", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.attenders.DotAttender.calc_context": [[149, 153], ["attenders.DotAttender.calc_attention", "attenders.DotAttender.curr_sent.as_tensor"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.attenders.MlpLocationAttender.calc_attention", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor"], ["", "def", "calc_context", "(", "self", ",", "state", ")", ":", "\n", "    ", "attention", "=", "self", ".", "calc_attention", "(", "state", ")", "\n", "I", "=", "self", ".", "curr_sent", ".", "as_tensor", "(", ")", "\n", "return", "I", "*", "attention", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.attenders.BilinearAttender.__init__": [[168, 180], ["xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.param_collections.ParamManager.my_params", "xnmt.param_collections.ParamManager.my_params.add_parameters", "NotImplementedError", "xnmt.persistence.bare", "param_init.initializer"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.my_params", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "input_dim", ":", "numbers", ".", "Integral", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "state_dim", ":", "numbers", ".", "Integral", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "param_init", ":", "param_initializers", ".", "ParamInitializer", "=", "Ref", "(", "\"exp_global.param_init\"", ",", "default", "=", "bare", "(", "param_initializers", ".", "GlorotInitializer", ")", ")", ",", "\n", "truncate_dec_batches", ":", "bool", "=", "Ref", "(", "\"exp_global.truncate_dec_batches\"", ",", "default", "=", "False", ")", ")", "->", "None", ":", "\n", "    ", "if", "truncate_dec_batches", ":", "raise", "NotImplementedError", "(", "\"truncate_dec_batches not yet implemented for BilinearAttender\"", ")", "\n", "self", ".", "input_dim", "=", "input_dim", "\n", "self", ".", "state_dim", "=", "state_dim", "\n", "param_collection", "=", "param_collections", ".", "ParamManager", ".", "my_params", "(", "self", ")", "\n", "self", ".", "pWa", "=", "param_collection", ".", "add_parameters", "(", "(", "input_dim", ",", "state_dim", ")", ",", "init", "=", "param_init", ".", "initializer", "(", "(", "input_dim", ",", "state_dim", ")", ")", ")", "\n", "self", ".", "curr_sent", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.attenders.BilinearAttender.init_sent": [[181, 185], ["attenders.BilinearAttender.curr_sent.as_tensor"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor"], ["", "def", "init_sent", "(", "self", ",", "sent", ":", "ExpressionSequence", ")", ":", "\n", "    ", "self", ".", "curr_sent", "=", "sent", "\n", "self", ".", "attention_vecs", "=", "[", "]", "\n", "self", ".", "I", "=", "self", ".", "curr_sent", ".", "as_tensor", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.attenders.BilinearAttender.calc_attention": [[187, 194], ["xnmt.logger.warning", "dynet.parameter", "dynet.softmax", "attenders.BilinearAttender.attention_vecs.append", "dynet.transpose", "dynet.transpose"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "def", "calc_attention", "(", "self", ",", "state", ")", ":", "\n", "    ", "logger", ".", "warning", "(", "\"BilinearAttender does currently not do masking, which may harm training results.\"", ")", "\n", "Wa", "=", "dy", ".", "parameter", "(", "self", ".", "pWa", ")", "\n", "scores", "=", "(", "dy", ".", "transpose", "(", "state", ")", "*", "Wa", ")", "*", "self", ".", "I", "\n", "normalized", "=", "dy", ".", "softmax", "(", "scores", ")", "\n", "self", ".", "attention_vecs", ".", "append", "(", "normalized", ")", "\n", "return", "dy", ".", "transpose", "(", "normalized", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.attenders.BilinearAttender.calc_context": [[195, 198], ["attenders.BilinearAttender.calc_attention"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.attenders.MlpLocationAttender.calc_attention"], ["", "def", "calc_context", "(", "self", ",", "state", ")", ":", "\n", "    ", "attention", "=", "self", ".", "calc_attention", "(", "state", ")", "\n", "return", "self", ".", "I", "*", "attention", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.attenders.MlpLocationAttender.__init__": [[217, 235], ["xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.param_collections.ParamManager.my_params", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.persistence.bare", "xnmt.persistence.bare", "param_init.initializer", "param_init.initializer", "bias_init.initializer", "param_init.initializer", "param_init.initializer"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.my_params", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "input_dim", ":", "numbers", ".", "Integral", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "state_dim", ":", "numbers", ".", "Integral", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "hidden_dim", ":", "numbers", ".", "Integral", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "param_init", ":", "param_initializers", ".", "ParamInitializer", "=", "Ref", "(", "\"exp_global.param_init\"", ",", "default", "=", "bare", "(", "param_initializers", ".", "GlorotInitializer", ")", ")", ",", "\n", "bias_init", ":", "param_initializers", ".", "ParamInitializer", "=", "Ref", "(", "\"exp_global.bias_init\"", ",", "default", "=", "bare", "(", "param_initializers", ".", "ZeroInitializer", ")", ")", ")", "->", "None", ":", "\n", "    ", "self", ".", "input_dim", "=", "input_dim", "\n", "self", ".", "state_dim", "=", "state_dim", "\n", "self", ".", "hidden_dim", "=", "hidden_dim", "\n", "param_collection", "=", "param_collections", ".", "ParamManager", ".", "my_params", "(", "self", ")", "\n", "self", ".", "pW", "=", "param_collection", ".", "add_parameters", "(", "(", "hidden_dim", ",", "input_dim", ")", ",", "init", "=", "param_init", ".", "initializer", "(", "(", "hidden_dim", ",", "input_dim", ")", ")", ")", "\n", "self", ".", "pV", "=", "param_collection", ".", "add_parameters", "(", "(", "hidden_dim", ",", "state_dim", ")", ",", "init", "=", "param_init", ".", "initializer", "(", "(", "hidden_dim", ",", "state_dim", ")", ")", ")", "\n", "self", ".", "pb", "=", "param_collection", ".", "add_parameters", "(", "(", "hidden_dim", ",", ")", ",", "init", "=", "bias_init", ".", "initializer", "(", "(", "hidden_dim", ",", ")", ")", ")", "\n", "self", ".", "pU", "=", "param_collection", ".", "add_parameters", "(", "(", "1", ",", "hidden_dim", ")", ",", "init", "=", "param_init", ".", "initializer", "(", "(", "1", ",", "hidden_dim", ")", ")", ")", "\n", "self", ".", "pL", "=", "param_collection", ".", "add_parameters", "(", "(", "100", ",", "1", ",", "1", ",", "hidden_dim", ")", ",", "init", "=", "param_init", ".", "initializer", "(", "(", "100", ",", "1", ",", "1", ",", "hidden_dim", ")", ")", ")", "\n", "self", ".", "curr_sent", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.attenders.MlpLocationAttender.init_sent": [[236, 247], ["attenders.MlpLocationAttender.curr_sent.as_tensor", "dynet.parameter", "dynet.parameter", "dynet.affine_transform", "attenders.MlpLocationAttender.WI.dim", "len", "dynet.reshape"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["", "def", "init_sent", "(", "self", ",", "sent", ":", "ExpressionSequence", ")", ":", "\n", "    ", "self", ".", "attention_vecs", "=", "[", "]", "\n", "self", ".", "curr_sent", "=", "sent", "\n", "I", "=", "self", ".", "curr_sent", ".", "as_tensor", "(", ")", "\n", "W", "=", "dy", ".", "parameter", "(", "self", ".", "pW", ")", "\n", "b", "=", "dy", ".", "parameter", "(", "self", ".", "pb", ")", "\n", "self", ".", "WI", "=", "dy", ".", "affine_transform", "(", "[", "b", ",", "W", ",", "I", "]", ")", "\n", "wi_dim", "=", "self", ".", "WI", ".", "dim", "(", ")", "\n", "# if the input size is \"1\" then the last dimension will be dropped.", "\n", "if", "len", "(", "wi_dim", "[", "0", "]", ")", "==", "1", ":", "\n", "      ", "self", ".", "WI", "=", "dy", ".", "reshape", "(", "self", ".", "WI", ",", "(", "wi_dim", "[", "0", "]", "[", "0", "]", ",", "1", ")", ",", "batch_size", "=", "wi_dim", "[", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.attenders.MlpLocationAttender.calc_attention": [[248, 271], ["dynet.parameter", "dynet.parameter", "dynet.transpose", "dynet.softmax", "attenders.MlpLocationAttender.attention_vecs.append", "dynet.conv2d", "dynet.transpose", "dynet.tanh", "dynet.tanh", "curr_sent_mask.add_to_tensor_expr", "dynet.reshape", "dynet.colwise_add", "dynet.colwise_add", "dynet.transpose.dim", "dynet.transpose.dim"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.add_to_tensor_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["", "", "def", "calc_attention", "(", "self", ",", "state", ")", ":", "\n", "    ", "V", "=", "dy", ".", "parameter", "(", "self", ".", "pV", ")", "\n", "U", "=", "dy", ".", "parameter", "(", "self", ".", "pU", ")", "\n", "\n", "WI", "=", "self", ".", "WI", "\n", "curr_sent_mask", "=", "self", ".", "curr_sent", ".", "mask", "\n", "if", "self", ".", "attention_vecs", ":", "\n", "      ", "conv_feats", "=", "dy", ".", "conv2d", "(", "self", ".", "attention_vecs", "[", "-", "1", "]", ",", "\n", "self", ".", "pL", ",", "\n", "stride", "=", "[", "1", ",", "1", "]", ",", "\n", "is_valid", "=", "False", ")", "\n", "conv_feats", "=", "dy", ".", "transpose", "(", "dy", ".", "reshape", "(", "conv_feats", ",", "\n", "(", "conv_feats", ".", "dim", "(", ")", "[", "0", "]", "[", "0", "]", ",", "self", ".", "hidden_dim", ")", ",", "\n", "batch_size", "=", "conv_feats", ".", "dim", "(", ")", "[", "1", "]", ")", ")", "\n", "h", "=", "dy", ".", "tanh", "(", "dy", ".", "colwise_add", "(", "WI", "+", "conv_feats", ",", "V", "*", "state", ")", ")", "\n", "", "else", ":", "\n", "      ", "h", "=", "dy", ".", "tanh", "(", "dy", ".", "colwise_add", "(", "WI", ",", "V", "*", "state", ")", ")", "\n", "", "scores", "=", "dy", ".", "transpose", "(", "U", "*", "h", ")", "\n", "if", "curr_sent_mask", "is", "not", "None", ":", "\n", "      ", "scores", "=", "curr_sent_mask", ".", "add_to_tensor_expr", "(", "scores", ",", "multiplicator", "=", "-", "100.0", ")", "\n", "", "normalized", "=", "dy", ".", "softmax", "(", "scores", ")", "\n", "self", ".", "attention_vecs", ".", "append", "(", "normalized", ")", "\n", "return", "normalized", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.attenders.MlpLocationAttender.calc_context": [[272, 276], ["attenders.MlpLocationAttender.calc_attention", "attenders.MlpLocationAttender.curr_sent.as_tensor"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.attenders.MlpLocationAttender.calc_attention", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor"], ["", "def", "calc_context", "(", "self", ",", "state", ")", ":", "\n", "    ", "attention", "=", "self", ".", "calc_attention", "(", "state", ")", "\n", "I", "=", "self", ".", "curr_sent", ".", "as_tensor", "(", ")", "\n", "return", "I", "*", "attention", "\n", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.comparemt.compare_mt.main": [[7, 193], ["collections.defaultdict", "bucket_strs.append", "open", "open", "collections.defaultdict", "range", "collections.defaultdict", "left.items", "collections.defaultdict", "collections.defaultdict", "zip", "collections.defaultdict.items", "collections.defaultdict.items", "collections.defaultdict", "collections.defaultdict", "zip", "collections.defaultdict.items", "collections.defaultdict.items", "zip", "compare_mt.main.calc_over_under"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items"], ["def", "main", "(", "parsed_args", ")", ":", "\n", "  ", "out_lines", "=", "[", "]", "\n", "with", "open", "(", "parsed_args", ".", "ref_file", ",", "\"r\"", ")", "as", "f", ":", "\n", "    ", "ref", "=", "[", "line", ".", "strip", "(", ")", ".", "split", "(", ")", "for", "line", "in", "f", "]", "\n", "", "with", "open", "(", "parsed_args", ".", "out_file", ",", "\"r\"", ")", "as", "f", ":", "\n", "    ", "out", "=", "[", "line", ".", "strip", "(", ")", ".", "split", "(", ")", "for", "line", "in", "f", "]", "\n", "", "if", "parsed_args", ".", "out2_file", "!=", "None", ":", "\n", "    ", "with", "open", "(", "parsed_args", ".", "out2_file", ",", "\"r\"", ")", "as", "f", ":", "\n", "      ", "out2", "=", "[", "line", ".", "strip", "(", ")", ".", "split", "(", ")", "for", "line", "in", "f", "]", "\n", "\n", "", "", "def", "calc_ngrams", "(", "sent", ")", ":", "\n", "    ", "ret", "=", "defaultdict", "(", "lambda", ":", "0", ")", "\n", "for", "n", "in", "range", "(", "parsed_args", ".", "ngram", ")", ":", "\n", "      ", "for", "i", "in", "range", "(", "len", "(", "sent", ")", "-", "n", ")", ":", "\n", "        ", "ret", "[", "tuple", "(", "sent", "[", "i", ":", "i", "+", "n", "+", "1", "]", ")", "]", "+=", "1", "\n", "", "", "return", "ret", "\n", "\n", "", "def", "match_ngrams", "(", "left", ",", "right", ")", ":", "\n", "    ", "ret", "=", "defaultdict", "(", "lambda", ":", "0", ")", "\n", "for", "k", ",", "v", "in", "left", ".", "items", "(", ")", ":", "\n", "      ", "if", "k", "in", "right", ":", "\n", "        ", "ret", "[", "k", "]", "=", "min", "(", "v", ",", "right", "[", "k", "]", ")", "\n", "", "", "return", "ret", "\n", "\n", "# Calculate over and under-generated n-grams for two corpora", "\n", "", "def", "calc_over_under", "(", "ref", ",", "out", ",", "alpha", ")", ":", "\n", "# Create n-grams", "\n", "    ", "refall", "=", "defaultdict", "(", "lambda", ":", "0", ")", "\n", "outall", "=", "defaultdict", "(", "lambda", ":", "0", ")", "\n", "for", "refsent", ",", "outsent", "in", "zip", "(", "ref", ",", "out", ")", ":", "\n", "      ", "for", "k", ",", "v", "in", "calc_ngrams", "(", "refsent", ")", ".", "items", "(", ")", ":", "\n", "        ", "refall", "[", "k", "]", "+=", "v", "\n", "", "for", "k", ",", "v", "in", "calc_ngrams", "(", "outsent", ")", ".", "items", "(", ")", ":", "\n", "        ", "outall", "[", "k", "]", "+=", "v", "\n", "# Calculate scores", "\n", "", "", "scores", "=", "{", "}", "\n", "for", "k", ",", "v", "in", "refall", ".", "items", "(", ")", ":", "\n", "      ", "scores", "[", "k", "]", "=", "(", "v", "+", "parsed_args", ".", "alpha", ")", "/", "(", "v", "+", "outall", "[", "k", "]", "+", "2", "*", "parsed_args", ".", "alpha", ")", "\n", "", "for", "k", ",", "v", "in", "outall", ".", "items", "(", ")", ":", "\n", "      ", "scores", "[", "k", "]", "=", "(", "refall", "[", "k", "]", "+", "parsed_args", ".", "alpha", ")", "/", "(", "refall", "[", "k", "]", "+", "v", "+", "2", "*", "parsed_args", ".", "alpha", ")", "\n", "", "return", "refall", ",", "outall", ",", "scores", "\n", "\n", "# Calculate over and under-generated n-grams for two corpora", "\n", "", "def", "calc_compare", "(", "ref", ",", "out", ",", "out2", ",", "alpha", ")", ":", "\n", "    ", "outall", "=", "defaultdict", "(", "lambda", ":", "0", ")", "\n", "out2all", "=", "defaultdict", "(", "lambda", ":", "0", ")", "\n", "for", "refsent", ",", "outsent", ",", "out2sent", "in", "zip", "(", "ref", ",", "out", ",", "out2", ")", ":", "\n", "      ", "refn", "=", "calc_ngrams", "(", "refsent", ")", "\n", "outmatch", "=", "match_ngrams", "(", "refn", ",", "calc_ngrams", "(", "outsent", ")", ")", "\n", "out2match", "=", "match_ngrams", "(", "refn", ",", "calc_ngrams", "(", "out2sent", ")", ")", "\n", "for", "k", ",", "v", "in", "outmatch", ".", "items", "(", ")", ":", "\n", "        ", "if", "v", ">", "out2match", "[", "k", "]", ":", "\n", "          ", "outall", "[", "k", "]", "+=", "v", "-", "out2match", "[", "k", "]", "\n", "", "", "for", "k", ",", "v", "in", "out2match", ".", "items", "(", ")", ":", "\n", "        ", "if", "v", ">", "outmatch", "[", "k", "]", ":", "\n", "          ", "out2all", "[", "k", "]", "+=", "v", "-", "outmatch", "[", "k", "]", "\n", "# Calculate scores", "\n", "", "", "", "scores", "=", "{", "}", "\n", "for", "k", ",", "v", "in", "out2all", ".", "items", "(", ")", ":", "\n", "      ", "scores", "[", "k", "]", "=", "(", "v", "+", "parsed_args", ".", "alpha", ")", "/", "(", "v", "+", "outall", "[", "k", "]", "+", "2", "*", "parsed_args", ".", "alpha", ")", "\n", "", "for", "k", ",", "v", "in", "outall", ".", "items", "(", ")", ":", "\n", "      ", "scores", "[", "k", "]", "=", "(", "out2all", "[", "k", "]", "+", "parsed_args", ".", "alpha", ")", "/", "(", "out2all", "[", "k", "]", "+", "v", "+", "2", "*", "parsed_args", ".", "alpha", ")", "\n", "", "return", "outall", ",", "out2all", ",", "scores", "\n", "\n", "# Calculate the frequency counts, from the training corpus", "\n", "# or training frequency file if either are specified, from the", "\n", "# reference file if not", "\n", "", "freq_counts", "=", "defaultdict", "(", "lambda", ":", "0", ")", "\n", "if", "parsed_args", ".", "train_counts", "!=", "None", ":", "\n", "    ", "with", "open", "(", "parsed_args", ".", "train_counts", ",", "\"r\"", ")", "as", "f", ":", "\n", "      ", "for", "line", "in", "f", ":", "\n", "        ", "word", ",", "freq", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "'\\t'", ")", "\n", "freq_counts", "[", "word", "]", "=", "freq", "\n", "", "", "", "else", ":", "\n", "    ", "my_file", "=", "parsed_args", ".", "train_file", "if", "parsed_args", ".", "train_file", "!=", "None", "else", "parsed_args", ".", "ref_file", "\n", "with", "open", "(", "my_file", ",", "\"r\"", ")", "as", "f", ":", "\n", "      ", "for", "line", "in", "f", ":", "\n", "        ", "for", "word", "in", "line", ".", "strip", "(", ")", ".", "split", "(", ")", ":", "\n", "          ", "freq_counts", "[", "word", "]", "+=", "1", "\n", "\n", "", "", "", "", "def", "calc_matches_by_freq", "(", "ref", ",", "out", ",", "buckets", ")", ":", "\n", "    ", "extended_buckets", "=", "buckets", "+", "[", "max", "(", "freq_counts", ".", "values", "(", ")", ")", "+", "1", "]", "\n", "matches", "=", "[", "[", "0", ",", "0", ",", "0", "]", "for", "x", "in", "extended_buckets", "]", "\n", "for", "refsent", ",", "outsent", "in", "zip", "(", "ref", ",", "out", ")", ":", "\n", "      ", "reffreq", ",", "outfreq", "=", "defaultdict", "(", "lambda", ":", "0", ")", ",", "defaultdict", "(", "lambda", ":", "0", ")", "\n", "for", "x", "in", "refsent", ":", "\n", "        ", "reffreq", "[", "x", "]", "+=", "1", "\n", "", "for", "x", "in", "outsent", ":", "\n", "        ", "outfreq", "[", "x", "]", "+=", "1", "\n", "", "for", "k", "in", "set", "(", "itertools", ".", "chain", "(", "reffreq", ".", "keys", "(", ")", ",", "outfreq", ".", "keys", "(", ")", ")", ")", ":", "\n", "        ", "for", "bucket", ",", "match", "in", "zip", "(", "extended_buckets", ",", "matches", ")", ":", "\n", "          ", "if", "freq_counts", "[", "k", "]", "<", "bucket", ":", "\n", "            ", "match", "[", "0", "]", "+=", "min", "(", "reffreq", "[", "k", "]", ",", "outfreq", "[", "k", "]", ")", "\n", "match", "[", "1", "]", "+=", "reffreq", "[", "k", "]", "\n", "match", "[", "2", "]", "+=", "outfreq", "[", "k", "]", "\n", "break", "\n", "", "", "", "", "for", "bothf", ",", "reff", ",", "outf", "in", "matches", ":", "\n", "      ", "if", "bothf", "==", "0", ":", "\n", "        ", "rec", ",", "prec", ",", "fmeas", "=", "0.0", ",", "0.0", ",", "0.0", "\n", "", "else", ":", "\n", "        ", "rec", "=", "bothf", "/", "float", "(", "reff", ")", "\n", "prec", "=", "bothf", "/", "float", "(", "outf", ")", "\n", "fmeas", "=", "2", "*", "prec", "*", "rec", "/", "(", "prec", "+", "rec", ")", "\n", "", "yield", "bothf", ",", "reff", ",", "outf", ",", "rec", ",", "prec", ",", "fmeas", "\n", "\n", "", "", "buckets", "=", "[", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "10", ",", "100", ",", "1000", "]", "\n", "bucket_strs", "=", "[", "]", "\n", "last_start", "=", "0", "\n", "for", "x", "in", "buckets", ":", "\n", "    ", "if", "x", "-", "1", "==", "last_start", ":", "\n", "      ", "bucket_strs", ".", "append", "(", "str", "(", "last_start", ")", ")", "\n", "", "else", ":", "\n", "      ", "bucket_strs", ".", "append", "(", "\"{}-{}\"", ".", "format", "(", "last_start", ",", "x", "-", "1", ")", ")", "\n", "", "last_start", "=", "x", "\n", "", "bucket_strs", ".", "append", "(", "\"{}+\"", ".", "format", "(", "last_start", ")", ")", "\n", "\n", "# Analyze the reference/output", "\n", "if", "parsed_args", ".", "out2_file", "==", "None", ":", "\n", "    ", "refall", ",", "outall", ",", "scores", "=", "calc_over_under", "(", "ref", ",", "out", ",", "parsed_args", ".", "alpha", ")", "\n", "scorelist", "=", "sorted", "(", "scores", ".", "items", "(", ")", ",", "key", "=", "operator", ".", "itemgetter", "(", "1", ")", ")", "\n", "# Print the ouput", "\n", "out_lines", ".", "append", "(", "'********************** N-gram Difference Analysis ************************'", ")", "\n", "out_lines", ".", "append", "(", "'--- %d over-generated n-grams indicative of output'", "%", "parsed_args", ".", "ngram_size", ")", "\n", "for", "k", ",", "v", "in", "scorelist", "[", ":", "parsed_args", ".", "ngram_size", "]", ":", "\n", "      ", "out_lines", ".", "append", "(", "'%s\\t%f (ref=%d, out=%d)'", "%", "(", "' '", ".", "join", "(", "k", ")", ",", "v", ",", "refall", "[", "k", "]", ",", "outall", "[", "k", "]", ")", ")", "\n", "", "out_lines", ".", "append", "(", "\"\"", ")", "\n", "out_lines", ".", "append", "(", "'--- %d under-generated n-grams indicative of reference'", "%", "parsed_args", ".", "ngram_size", ")", "\n", "for", "k", ",", "v", "in", "reversed", "(", "scorelist", "[", "-", "parsed_args", ".", "ngram_size", ":", "]", ")", ":", "\n", "      ", "out_lines", ".", "append", "(", "'%s\\t%f (ref=%d, out=%d)'", "%", "(", "' '", ".", "join", "(", "k", ")", ",", "v", ",", "refall", "[", "k", "]", ",", "outall", "[", "k", "]", ")", ")", "\n", "# Calculate f-measure", "\n", "", "matches", "=", "calc_matches_by_freq", "(", "ref", ",", "out", ",", "buckets", ")", "\n", "out_lines", ".", "append", "(", "'\\n\\n********************** Word Frequency Analysis ************************'", ")", "\n", "out_lines", ".", "append", "(", "'--- word f-measure by frequency bucket'", ")", "\n", "for", "bucket_str", ",", "match", "in", "zip", "(", "bucket_strs", ",", "matches", ")", ":", "\n", "      ", "out_lines", ".", "append", "(", "\"{}\\t{:.4f}\"", ".", "format", "(", "bucket_str", ",", "match", "[", "5", "]", ")", ")", "\n", "# Analyze the differences between two systems", "\n", "", "", "else", ":", "\n", "    ", "outall", ",", "out2all", ",", "scores", "=", "calc_compare", "(", "ref", ",", "out", ",", "out2", ",", "parsed_args", ".", "alpha", ")", "\n", "scorelist", "=", "sorted", "(", "scores", ".", "items", "(", ")", ",", "key", "=", "operator", ".", "itemgetter", "(", "1", ")", ")", "\n", "# Print the ouput", "\n", "out_lines", ".", "append", "(", "'********************** N-gram Difference Analysis ************************'", ")", "\n", "out_lines", ".", "append", "(", "'--- %d n-grams that System 1 did a better job of producing'", "%", "parsed_args", ".", "ngram_size", ")", "\n", "for", "k", ",", "v", "in", "scorelist", "[", ":", "parsed_args", ".", "ngram_size", "]", ":", "\n", "      ", "out_lines", ".", "append", "(", "'%s\\t%f (sys1=%d, sys2=%d)'", "%", "(", "' '", ".", "join", "(", "k", ")", ",", "v", ",", "outall", "[", "k", "]", ",", "out2all", "[", "k", "]", ")", ")", "\n", "out_lines", ".", "append", "(", "'\\n--- %d n-grams that System 2 did a better job of producing'", "%", "parsed_args", ".", "ngram_size", ")", "\n", "", "for", "k", ",", "v", "in", "reversed", "(", "scorelist", "[", "-", "parsed_args", ".", "ngram_size", ":", "]", ")", ":", "\n", "      ", "out_lines", ".", "append", "(", "'%s\\t%f (sys1=%d, sys2=%d)'", "%", "(", "' '", ".", "join", "(", "k", ")", ",", "v", ",", "outall", "[", "k", "]", ",", "out2all", "[", "k", "]", ")", ")", "\n", "# Calculate f-measure", "\n", "", "matches", "=", "calc_matches_by_freq", "(", "ref", ",", "out", ",", "buckets", ")", "\n", "matches2", "=", "calc_matches_by_freq", "(", "ref", ",", "out2", ",", "buckets", ")", "\n", "out_lines", ".", "append", "(", "'\\n\\n********************** Word Frequency Analysis ************************'", ")", "\n", "out_lines", ".", "append", "(", "'--- word f-measure by frequency bucket'", ")", "\n", "for", "bucket_str", ",", "match", ",", "match2", "in", "zip", "(", "bucket_strs", ",", "matches", ",", "matches2", ")", ":", "\n", "      ", "out_lines", ".", "append", "(", "\"{}\\t{:.4f}\\t{:.4f}\"", ".", "format", "(", "bucket_str", ",", "match", "[", "5", "]", ",", "match2", "[", "5", "]", ")", ")", "\n", "# Calculate BLEU diff", "\n", "", "scorediff_list", "=", "[", "]", "\n", "chencherry", "=", "nltk", ".", "translate", ".", "bleu_score", ".", "SmoothingFunction", "(", ")", "\n", "for", "i", ",", "(", "o1", ",", "o2", ",", "r", ")", "in", "enumerate", "(", "zip", "(", "out", ",", "out2", ",", "ref", ")", ")", ":", "\n", "      ", "b1", "=", "nltk", ".", "translate", ".", "bleu_score", ".", "sentence_bleu", "(", "[", "r", "]", ",", "o1", ",", "smoothing_function", "=", "chencherry", ".", "method2", ")", "\n", "b2", "=", "nltk", ".", "translate", ".", "bleu_score", ".", "sentence_bleu", "(", "[", "r", "]", ",", "o2", ",", "smoothing_function", "=", "chencherry", ".", "method2", ")", "\n", "scorediff_list", ".", "append", "(", "(", "b2", "-", "b1", ",", "b1", ",", "b2", ",", "i", ")", ")", "\n", "", "scorediff_list", ".", "sort", "(", ")", "\n", "out_lines", ".", "append", "(", "'\\n\\n********************** Length Analysis ************************'", ")", "\n", "out_lines", ".", "append", "(", "'--- length ratio'", ")", "\n", "length_ref", "=", "sum", "(", "[", "len", "(", "x", ")", "for", "x", "in", "ref", "]", ")", "\n", "length_out", "=", "sum", "(", "[", "len", "(", "x", ")", "for", "x", "in", "out", "]", ")", "\n", "length_out2", "=", "sum", "(", "[", "len", "(", "x", ")", "for", "x", "in", "out2", "]", ")", "\n", "out_lines", ".", "append", "(", "'System 1: {}, System 2: {}'", ".", "format", "(", "length_out", "/", "length_ref", ",", "length_out2", "/", "length_ref", ")", ")", "\n", "out_lines", ".", "append", "(", "'--- length difference from reference by bucket'", ")", "\n", "length_diff", "=", "{", "}", "\n", "length_diff2", "=", "{", "}", "\n", "for", "r", ",", "o", ",", "o2", "in", "zip", "(", "ref", ",", "out", ",", "out2", ")", ":", "\n", "      ", "ld", "=", "len", "(", "o", ")", "-", "len", "(", "r", ")", "\n", "ld2", "=", "len", "(", "o2", ")", "-", "len", "(", "r", ")", "\n", "length_diff", "[", "ld", "]", "=", "length_diff", ".", "get", "(", "ld", ",", "0", ")", "+", "1", "\n", "length_diff2", "[", "ld2", "]", "=", "length_diff2", ".", "get", "(", "ld2", ",", "0", ")", "+", "1", "\n", "", "for", "ld", "in", "sorted", "(", "list", "(", "set", "(", "length_diff", ".", "keys", "(", ")", ")", "|", "set", "(", "length_diff2", ".", "keys", "(", ")", ")", ")", ")", ":", "\n", "      ", "out_lines", ".", "append", "(", "\"{}\\t{}\\t{}\"", ".", "format", "(", "ld", ",", "length_diff", ".", "get", "(", "ld", ",", "0", ")", ",", "length_diff2", ".", "get", "(", "ld", ",", "0", ")", ")", ")", "\n", "", "out_lines", ".", "append", "(", "'\\n\\n********************** BLEU Analysis ************************'", ")", "\n", "out_lines", ".", "append", "(", "'--- %d sentences that System 1 did a better job at than System 2'", "%", "parsed_args", ".", "sent_size", ")", "\n", "for", "bdiff", ",", "b1", ",", "b2", ",", "i", "in", "scorediff_list", "[", ":", "parsed_args", ".", "sent_size", "]", ":", "\n", "      ", "out_lines", ".", "append", "(", "'BLEU+1 sys2-sys1={}, sys1={}, sys2={}\\nRef:  {}\\nSys1: {}\\nSys2: {}\\n'", ".", "format", "(", "bdiff", ",", "b1", ",", "b2", ",", "' '", ".", "join", "(", "ref", "[", "i", "]", ")", ",", "' '", ".", "join", "(", "out", "[", "i", "]", ")", ",", "' '", ".", "join", "(", "out2", "[", "i", "]", ")", ")", ")", "\n", "", "out_lines", ".", "append", "(", "'--- %d sentences that System 2 did a better job at than System 1'", "%", "parsed_args", ".", "sent_size", ")", "\n", "for", "bdiff", ",", "b1", ",", "b2", ",", "i", "in", "scorediff_list", "[", "-", "parsed_args", ".", "sent_size", ":", "]", ":", "\n", "      ", "out_lines", ".", "append", "(", "'BLEU+1 sys2-sys1={}, sys1={}, sys2={}\\nRef:  {}\\nSys1: {}\\nSys2: {}\\n'", ".", "format", "(", "bdiff", ",", "b1", ",", "b2", ",", "' '", ".", "join", "(", "ref", "[", "i", "]", ")", ",", "' '", ".", "join", "(", "out", "[", "i", "]", ")", ",", "' '", ".", "join", "(", "out2", "[", "i", "]", ")", ")", ")", "\n", "", "", "return", "out_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.base.mfcc": [[9, 35], ["base.fbank", "numpy.log", "base.lifter", "scipy.fftpack.dct", "numpy.log"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.base.fbank", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.base.lifter"], ["\n", "class", "FinalTransducerState", "(", "object", ")", ":", "\n", "  ", "\"\"\"\n  Represents the final encoder state; Currently handles a main (hidden) state and a cell\n  state. If cell state is not provided, it is created as tanh^{-1}(hidden state).\n  Could in the future be extended to handle dimensions other than h and c.\n\n  Args:\n    main_expr: expression for hidden state\n    cell_expr: expression for cell state, if exists\n  \"\"\"", "\n", "def", "__init__", "(", "self", ",", "main_expr", ":", "dy", ".", "Expression", ",", "cell_expr", ":", "dy", ".", "Expression", "=", "None", ")", ":", "\n", "    ", "self", ".", "_main_expr", "=", "main_expr", "\n", "self", ".", "_cell_expr", "=", "cell_expr", "\n", "\n", "", "def", "main_expr", "(", "self", ")", "->", "dy", ".", "Expression", ":", "\n", "    ", "return", "self", ".", "_main_expr", "\n", "\n", "", "def", "cell_expr", "(", "self", ")", "->", "dy", ".", "Expression", ":", "\n", "    ", "\"\"\"Returns:\n         dy.Expression: cell state; if not given, it is inferred as inverse tanh of main expression\n    \"\"\"", "\n", "if", "self", ".", "_cell_expr", "is", "None", ":", "\n", "# TODO: This taking of the tanh inverse is disabled, because it can cause NaNs", "\n", "#       Instead just copy", "\n", "# self._cell_expr = 0.5 * dy.log( dy.cdiv(1.+self._main_expr, 1.-self._main_expr) )", "\n", "      ", "self", ".", "_cell_expr", "=", "self", ".", "_main_expr", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.base.fbank": [[37, 67], ["xnmt.thirdparty.speech_features.sigproc.framesig", "xnmt.thirdparty.speech_features.sigproc.powspec", "numpy.sum", "numpy.where", "base.get_filterbanks", "numpy.dot", "numpy.where", "numpy.finfo", "numpy.finfo"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.sigproc.framesig", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.sigproc.powspec", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.base.get_filterbanks"], ["\n", "", "", "class", "SeqTransducer", "(", "object", ")", ":", "\n", "  ", "\"\"\"\n  A class that transforms one sequence of vectors into another, using :class:`expression_seqs.ExpressionSequence` objects as inputs and outputs.\n  \"\"\"", "\n", "\n", "def", "transduce", "(", "self", ",", "seq", ":", "'expression_seqs.ExpressionSequence'", ")", "->", "'expression_seqs.ExpressionSequence'", ":", "\n", "    ", "\"\"\"\n    Parameters should be :class:`expression_seqs.ExpressionSequence` objects wherever appropriate\n\n    Args:\n      seq: An expression sequence representing the input to the transduction\n\n    Returns:\n      result of transduction, an expression sequence\n    \"\"\"", "\n", "raise", "NotImplementedError", "(", "\"SeqTransducer.transduce() must be implemented by SeqTransducer sub-classes\"", ")", "\n", "\n", "", "def", "get_final_states", "(", "self", ")", "->", "List", "[", "FinalTransducerState", "]", ":", "\n", "    ", "\"\"\"Returns:\n         A list of FinalTransducerState objects corresponding to a fixed-dimension representation of the input, after having invoked transduce()\n    \"\"\"", "\n", "raise", "NotImplementedError", "(", "\"SeqTransducer.get_final_states() must be implemented by SeqTransducer sub-classes\"", ")", "\n", "\n", "\n", "########################################################", "\n", "\n", "", "", "class", "ModularSeqTransducer", "(", "SeqTransducer", ",", "Serializable", ")", ":", "\n", "  "]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.base.logfbank": [[69, 89], ["base.fbank", "numpy.log"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.base.fbank"], ["\n", "\n", "yaml_tag", "=", "'!ModularSeqTransducer'", "\n", "\n", "@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "input_dim", ":", "numbers", ".", "Integral", ",", "modules", ":", "List", "[", "SeqTransducer", "]", ")", ":", "\n", "    ", "self", ".", "modules", "=", "modules", "\n", "\n", "", "def", "shared_params", "(", "self", ")", ":", "\n", "    ", "return", "[", "{", "\".input_dim\"", ",", "\".modules.0.input_dim\"", "}", "]", "\n", "\n", "", "def", "transduce", "(", "self", ",", "seq", ":", "'expression_seqs.ExpressionSequence'", ")", "->", "'expression_seqs.ExpressionSequence'", ":", "\n", "    ", "for", "module", "in", "self", ".", "modules", ":", "\n", "      ", "seq", "=", "module", ".", "transduce", "(", "seq", ")", "\n", "", "return", "seq", "\n", "\n", "", "def", "get_final_states", "(", "self", ")", "->", "List", "[", "FinalTransducerState", "]", ":", "\n", "    ", "final_states", "=", "[", "]", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.base.hz2mel": [[90, 97], ["numpy.log"], "function", ["None"], ["for", "mod", "in", "self", ".", "modules", ":", "\n", "      ", "final_states", "+=", "mod", ".", "get_final_states", "(", ")", "\n", "", "return", "final_states", "\n", "\n", "\n", "", "", "class", "IdentitySeqTransducer", "(", "SeqTransducer", ",", "Serializable", ")", ":", "\n", "  "]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.base.mel2hz": [[99, 106], ["numpy.exp"], "function", ["None"], ["\n", "yaml_tag", "=", "'!IdentitySeqTransducer'", "\n", "\n", "@", "serializable_init", "\n", "def", "__init__", "(", "self", ")", ":", "\n", "    ", "pass", "\n", "\n", "", "def", "transduce", "(", "self", ",", "seq", ":", "'expression_seqs.ExpressionSequence'", ")", "->", "'expression_seqs.ExpressionSequence'", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.base.get_filterbanks": [[107, 140], ["base.hz2mel", "base.hz2mel", "numpy.zeros", "range", "range", "base.hz2mel"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.base.hz2mel", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.base.hz2mel", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.base.hz2mel"], ["    ", "return", "seq", "\n", "\n", "\n", "", "", "class", "TransformSeqTransducer", "(", "SeqTransducer", ",", "Serializable", ")", ":", "\n", "  ", "\"\"\"\n  A sequence transducer that applies a given transformation to the sequence's tensor representation\n\n  Args:\n      transform: the Transform to apply to the sequence\n      downsample_by: if > 1, downsample the sequence via appropriate reshapes.\n                     The transform must accept a respectively larger hidden dimension.\n  \"\"\"", "\n", "yaml_tag", "=", "'!TransformSeqTransducer'", "\n", "\n", "@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "transform", ":", "transforms", ".", "Transform", ",", "downsample_by", ":", "numbers", ".", "Integral", "=", "1", ")", "->", "None", ":", "\n", "    ", "self", ".", "transform", "=", "transform", "\n", "if", "downsample_by", "<", "1", ":", "raise", "ValueError", "(", "f\"downsample_by must be >=1, was {downsample_by}\"", ")", "\n", "self", ".", "downsample_by", "=", "downsample_by", "\n", "\n", "", "def", "get_final_states", "(", "self", ")", "->", "List", "[", "FinalTransducerState", "]", ":", "\n", "    ", "return", "self", ".", "_final_states", "\n", "\n", "", "def", "transduce", "(", "self", ",", "src", ":", "expression_seqs", ".", "ExpressionSequence", ")", "->", "expression_seqs", ".", "ExpressionSequence", ":", "\n", "    ", "src_tensor", "=", "src", ".", "as_tensor", "(", ")", "\n", "out_mask", "=", "src", ".", "mask", "\n", "if", "self", ".", "downsample_by", ">", "1", ":", "\n", "      ", "assert", "len", "(", "src_tensor", ".", "dim", "(", ")", "[", "0", "]", ")", "==", "2", ",", "f\"Downsampling only supported for tensors of order to. Found dims {src_tensor.dim()}\"", "\n", "(", "hidden_dim", ",", "seq_len", ")", ",", "batch_size", "=", "src_tensor", ".", "dim", "(", ")", "\n", "if", "seq_len", "%", "self", ".", "downsample_by", "!=", "0", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "\"For downsampling, sequence lengths must be multiples of the total reduce factor. \"", "\n", "\"Configure batcher accordingly.\"", ")", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.base.lifter": [[142, 157], ["numpy.shape", "numpy.arange", "numpy.sin"], "function", ["None"], ["(", "hidden_dim", "*", "self", ".", "downsample_by", ",", "seq_len", "//", "self", ".", "downsample_by", ")", ",", "\n", "batch_size", "=", "batch_size", ")", "\n", "if", "out_mask", ":", "\n", "        ", "out_mask", "=", "out_mask", ".", "lin_subsampled", "(", "reduce_factor", "=", "self", ".", "downsample_by", ")", "\n", "", "", "output", "=", "self", ".", "transform", ".", "transform", "(", "src_tensor", ")", "\n", "output_seq", "=", "expression_seqs", ".", "ExpressionSequence", "(", "expr_tensor", "=", "output", ",", "mask", "=", "out_mask", ")", "\n", "self", ".", "_final_states", "=", "[", "FinalTransducerState", "(", "output_seq", "[", "-", "1", "]", ")", "]", "\n", "return", "output_seq", "\n", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.base.calculate_delta": [[159, 170], ["numpy.empty_like", "float", "range", "numpy.array", "sum", "len", "numpy.pad", "range", "numpy.convolve"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.conv_encoder.StridedConvSeqTransducer.pad"], []], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.base.get_mean_std": [[172, 184], ["y.astype", "y.astype.mean", "y.astype.std", "numpy.maximum", "numpy.finfo"], "function", ["None"], []], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.base.normalize": [[185, 195], ["y.astype"], "function", ["None"], []], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.sigproc.round_half_up": [[9, 11], ["int", "decimal.Decimal().quantize", "decimal.Decimal", "decimal.Decimal"], "function", ["None"], ["def", "round_half_up", "(", "number", ")", ":", "\n", "  ", "return", "int", "(", "decimal", ".", "Decimal", "(", "number", ")", ".", "quantize", "(", "decimal", ".", "Decimal", "(", "'1'", ")", ",", "rounding", "=", "decimal", ".", "ROUND_HALF_UP", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.sigproc.rolling_window": [[13, 18], ["numpy.lib.stride_tricks.as_strided", "numpy.float32"], "function", ["None"], ["", "def", "rolling_window", "(", "a", ",", "window", ",", "step", "=", "1", ")", ":", "\n", "# http://ellisvalentiner.com/post/2017-03-21-np-strides-trick", "\n", "  ", "shape", "=", "a", ".", "shape", "[", ":", "-", "1", "]", "+", "(", "a", ".", "shape", "[", "-", "1", "]", "-", "window", "+", "1", ",", "window", ")", "\n", "strides", "=", "a", ".", "strides", "+", "(", "a", ".", "strides", "[", "-", "1", "]", ",", ")", "\n", "return", "numpy", ".", "lib", ".", "stride_tricks", ".", "as_strided", "(", "a", ",", "shape", "=", "shape", ",", "strides", "=", "strides", ")", "[", ":", ":", "step", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.sigproc.framesig": [[20, 65], ["len", "int", "int", "rolling_window.astype", "numpy.zeros", "range", "sigproc.round_half_up", "sigproc.round_half_up", "numpy.empty", "range", "numpy.hamming", "sigproc.rolling_window", "numpy.array", "numpy.tile", "sigproc.do_dither", "sigproc.do_remove_dc_offset", "sigproc.do_preemphasis", "numpy.tile", "numpy.arange", "numpy.tile", "numpy.arange", "numpy.cos"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.sigproc.round_half_up", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.sigproc.round_half_up", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.sigproc.rolling_window", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.sigproc.do_dither", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.sigproc.do_remove_dc_offset", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.sigproc.do_preemphasis"], ["", "def", "framesig", "(", "sig", ",", "frame_len", ",", "frame_step", ",", "dither", "=", "1.0", ",", "preemph", "=", "0.97", ",", "remove_dc_offset", "=", "True", ",", "wintype", "=", "'hamming'", ",", "stride_trick", "=", "True", ")", ":", "\n", "  ", "\"\"\"Frame a signal into overlapping frames.\n\n  :param sig: the audio signal to frame.\n  :param frame_len: length of each frame measured in samples.\n  :param frame_step: number of samples after the start of the previous frame that the next frame should begin.\n  :param winfunc: the analysis window to apply to each frame. By default no window is applied.\n  :param stride_trick: use stride trick to compute the rolling window and window multiplication faster\n  :returns: an array of frames. Size is NUMFRAMES by frame_len.\n  \"\"\"", "\n", "slen", "=", "len", "(", "sig", ")", "\n", "frame_len", "=", "int", "(", "round_half_up", "(", "frame_len", ")", ")", "\n", "frame_step", "=", "int", "(", "round_half_up", "(", "frame_step", ")", ")", "\n", "if", "slen", "<=", "frame_len", ":", "\n", "    ", "numframes", "=", "1", "\n", "", "else", ":", "\n", "    ", "numframes", "=", "1", "+", "(", "(", "slen", "-", "frame_len", ")", "//", "frame_step", ")", "\n", "\n", "# check kaldi/src/feat/feature-window.h", "\n", "", "padsignal", "=", "sig", "[", ":", "(", "numframes", "-", "1", ")", "*", "frame_step", "+", "frame_len", "]", "\n", "if", "wintype", "is", "'povey'", ":", "\n", "    ", "win", "=", "numpy", ".", "empty", "(", "frame_len", ")", "\n", "for", "i", "in", "range", "(", "frame_len", ")", ":", "\n", "      ", "win", "[", "i", "]", "=", "(", "0.5", "-", "0.5", "*", "numpy", ".", "cos", "(", "2", "*", "numpy", ".", "pi", "/", "(", "frame_len", "-", "1", ")", "*", "i", ")", ")", "**", "0.85", "\n", "", "", "else", ":", "# the hamming window", "\n", "    ", "win", "=", "numpy", ".", "hamming", "(", "frame_len", ")", "\n", "\n", "", "if", "stride_trick", ":", "\n", "    ", "frames", "=", "rolling_window", "(", "padsignal", ",", "window", "=", "frame_len", ",", "step", "=", "frame_step", ")", "\n", "", "else", ":", "\n", "    ", "indices", "=", "numpy", ".", "tile", "(", "numpy", ".", "arange", "(", "0", ",", "frame_len", ")", ",", "(", "numframes", ",", "1", ")", ")", "+", "numpy", ".", "tile", "(", "\n", "numpy", ".", "arange", "(", "0", ",", "numframes", "*", "frame_step", ",", "frame_step", ")", ",", "(", "frame_len", ",", "1", ")", ")", ".", "T", "\n", "indices", "=", "numpy", ".", "array", "(", "indices", ",", "dtype", "=", "numpy", ".", "int32", ")", "\n", "frames", "=", "padsignal", "[", "indices", "]", "\n", "win", "=", "numpy", ".", "tile", "(", "win", ",", "(", "numframes", ",", "1", ")", ")", "\n", "\n", "", "frames", "=", "frames", ".", "astype", "(", "numpy", ".", "float32", ")", "\n", "raw_frames", "=", "numpy", ".", "zeros", "(", "frames", ".", "shape", ")", "\n", "for", "frm", "in", "range", "(", "frames", ".", "shape", "[", "0", "]", ")", ":", "\n", "    ", "frames", "[", "frm", ",", ":", "]", "=", "do_dither", "(", "frames", "[", "frm", ",", ":", "]", ",", "dither", ")", "# dither", "\n", "frames", "[", "frm", ",", ":", "]", "=", "do_remove_dc_offset", "(", "frames", "[", "frm", ",", ":", "]", ")", "# remove dc offset", "\n", "raw_frames", "[", "frm", ",", ":", "]", "=", "frames", "[", "frm", ",", ":", "]", "\n", "frames", "[", "frm", ",", ":", "]", "=", "do_preemphasis", "(", "frames", "[", "frm", ",", ":", "]", ",", "preemph", ")", "# preemphasize", "\n", "\n", "", "return", "frames", "*", "win", ",", "raw_frames", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.sigproc.deframesig": [[66, 99], ["sigproc.round_half_up", "sigproc.round_half_up", "numpy.array", "numpy.zeros", "numpy.zeros", "winfunc", "range", "numpy.ones", "numpy.shape", "numpy.tile", "numpy.shape", "numpy.arange", "numpy.tile", "numpy.arange"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.sigproc.round_half_up", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.sigproc.round_half_up"], ["", "def", "deframesig", "(", "frames", ",", "siglen", ",", "frame_len", ",", "frame_step", ",", "winfunc", "=", "lambda", "x", ":", "numpy", ".", "ones", "(", "(", "x", ",", ")", ")", ")", ":", "\n", "  ", "\"\"\"Does overlap-add procedure to undo the action of framesig.\n\n  :param frames: the array of frames.\n  :param siglen: the length of the desired signal, use 0 if unknown. Output will be truncated to siglen samples.\n  :param frame_len: length of each frame measured in samples.\n  :param frame_step: number of samples after the start of the previous frame that the next frame should begin.\n  :param winfunc: the analysis window to apply to each frame. By default no window is applied.\n  :returns: a 1-D signal.\n  \"\"\"", "\n", "frame_len", "=", "round_half_up", "(", "frame_len", ")", "\n", "frame_step", "=", "round_half_up", "(", "frame_step", ")", "\n", "numframes", "=", "numpy", ".", "shape", "(", "frames", ")", "[", "0", "]", "\n", "assert", "numpy", ".", "shape", "(", "frames", ")", "[", "1", "]", "==", "frame_len", ",", "'\"frames\" matrix is wrong size, 2nd dim is not equal to frame_len'", "\n", "\n", "indices", "=", "numpy", ".", "tile", "(", "numpy", ".", "arange", "(", "0", ",", "frame_len", ")", ",", "(", "numframes", ",", "1", ")", ")", "+", "numpy", ".", "tile", "(", "\n", "numpy", ".", "arange", "(", "0", ",", "numframes", "*", "frame_step", ",", "frame_step", ")", ",", "(", "frame_len", ",", "1", ")", ")", ".", "T", "\n", "indices", "=", "numpy", ".", "array", "(", "indices", ",", "dtype", "=", "numpy", ".", "int32", ")", "\n", "padlen", "=", "(", "numframes", "-", "1", ")", "*", "frame_step", "+", "frame_len", "\n", "\n", "if", "siglen", "<=", "0", ":", "siglen", "=", "padlen", "\n", "\n", "rec_signal", "=", "numpy", ".", "zeros", "(", "(", "padlen", ",", ")", ")", "\n", "window_correction", "=", "numpy", ".", "zeros", "(", "(", "padlen", ",", ")", ")", "\n", "win", "=", "winfunc", "(", "frame_len", ")", "\n", "\n", "for", "i", "in", "range", "(", "0", ",", "numframes", ")", ":", "\n", "    ", "window_correction", "[", "indices", "[", "i", ",", ":", "]", "]", "=", "window_correction", "[", "\n", "indices", "[", "i", ",", ":", "]", "]", "+", "win", "+", "1e-15", "# add a little bit so it is never zero", "\n", "rec_signal", "[", "indices", "[", "i", ",", ":", "]", "]", "=", "rec_signal", "[", "indices", "[", "i", ",", ":", "]", "]", "+", "frames", "[", "i", ",", ":", "]", "\n", "\n", "", "rec_signal", "=", "rec_signal", "/", "window_correction", "\n", "return", "rec_signal", "[", "0", ":", "siglen", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.sigproc.magspec": [[101, 114], ["numpy.fft.rfft", "numpy.absolute", "xnmt.logger.warn", "numpy.shape", "numpy.shape"], "function", ["None"], ["", "def", "magspec", "(", "frames", ",", "NFFT", ")", ":", "\n", "  ", "\"\"\"Compute the magnitude spectrum of each frame in frames. If frames is an NxD matrix, output will be Nx(NFFT/2+1).\n\n  :param frames: the array of frames. Each row is a frame.\n  :param NFFT: the FFT length to use. If NFFT > frame_len, the frames are zero-padded.\n  :returns: If frames is an NxD matrix, output will be Nx(NFFT/2+1). Each row will be the magnitude spectrum of the corresponding frame.\n  \"\"\"", "\n", "if", "numpy", ".", "shape", "(", "frames", ")", "[", "1", "]", ">", "NFFT", ":", "\n", "    ", "logger", ".", "warn", "(", "\n", "'frame length (%d) is greater than FFT size (%d), frame will be truncated. Increase NFFT to avoid.'", ",", "\n", "numpy", ".", "shape", "(", "frames", ")", "[", "1", "]", ",", "NFFT", ")", "\n", "", "complex_spec", "=", "numpy", ".", "fft", ".", "rfft", "(", "frames", ",", "NFFT", ")", "\n", "return", "numpy", ".", "absolute", "(", "complex_spec", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.sigproc.powspec": [[116, 124], ["numpy.square", "sigproc.magspec"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.sigproc.magspec"], ["", "def", "powspec", "(", "frames", ",", "NFFT", ")", ":", "\n", "  ", "\"\"\"Compute the power spectrum of each frame in frames. If frames is an NxD matrix, output will be Nx(NFFT/2+1).\n\n  :param frames: the array of frames. Each row is a frame.\n  :param NFFT: the FFT length to use. If NFFT > frame_len, the frames are zero-padded.\n  :returns: If frames is an NxD matrix, output will be Nx(NFFT/2+1). Each row will be the power spectrum of the corresponding frame.\n  \"\"\"", "\n", "return", "numpy", ".", "square", "(", "magspec", "(", "frames", ",", "NFFT", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.sigproc.logpowspec": [[126, 141], ["sigproc.powspec", "numpy.log10", "numpy.max"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.sigproc.powspec"], ["", "def", "logpowspec", "(", "frames", ",", "NFFT", ",", "norm", "=", "1", ")", ":", "\n", "  ", "\"\"\"Compute the log power spectrum of each frame in frames. If frames is an NxD matrix, output will be Nx(NFFT/2+1).\n\n  :param frames: the array of frames. Each row is a frame.\n  :param NFFT: the FFT length to use. If NFFT > frame_len, the frames are zero-padded.\n  :param norm: If norm=1, the log power spectrum is normalised so that the max value (across all frames) is 0.\n  :returns: If frames is an NxD matrix, output will be Nx(NFFT/2+1). Each row will be the log power spectrum of the corresponding frame.\n  \"\"\"", "\n", "ps", "=", "powspec", "(", "frames", ",", "NFFT", ")", "\n", "ps", "[", "ps", "<=", "1e-30", "]", "=", "1e-30", "\n", "lps", "=", "10", "*", "numpy", ".", "log10", "(", "ps", ")", "\n", "if", "norm", ":", "\n", "    ", "return", "lps", "-", "numpy", ".", "max", "(", "lps", ")", "\n", "", "else", ":", "\n", "    ", "return", "lps", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.sigproc.do_dither": [[142, 145], ["numpy.random.normal"], "function", ["None"], ["", "", "def", "do_dither", "(", "signal", ",", "dither_value", "=", "1.0", ")", ":", "\n", "  ", "signal", "+=", "numpy", ".", "random", ".", "normal", "(", "size", "=", "signal", ".", "shape", ")", "*", "dither_value", "\n", "return", "signal", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.sigproc.do_remove_dc_offset": [[146, 149], ["numpy.mean"], "function", ["None"], ["", "def", "do_remove_dc_offset", "(", "signal", ")", ":", "\n", "  ", "signal", "-=", "numpy", ".", "mean", "(", "signal", ")", "\n", "return", "signal", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.speech_features.sigproc.do_preemphasis": [[150, 158], ["numpy.append"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "def", "do_preemphasis", "(", "signal", ",", "coeff", "=", "0.97", ")", ":", "\n", "  ", "\"\"\"perform preemphasis on the input signal.\n\n  :param signal: The signal to filter.\n  :param coeff: The preemphasis coefficient. 0 is no filter, default is 0.95.\n  :returns: the filtered signal.\n  \"\"\"", "\n", "return", "numpy", ".", "append", "(", "(", "1", "-", "coeff", ")", "*", "signal", "[", "0", "]", ",", "signal", "[", "1", ":", "]", "-", "coeff", "*", "signal", "[", ":", "-", "1", "]", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.make_base_parser": [[34, 45], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument"], "function", ["None"], ["def", "make_base_parser", "(", ")", ":", "\n", "    ", "\"\"\"Initiates a CL parser with base arguments used by standalone program and other calling modules\"\"\"", "\n", "parser", "=", "argparse", ".", "ArgumentParser", "(", "description", "=", "'''Character-based difference\n        highlighting and scoring, based on loose differences. By default, just print the document-level\n        score on stdout (0~1, lower is better).'''", ")", "\n", "parser", ".", "add_argument", "(", "'-m'", ",", "'--match-size'", ",", "type", "=", "int", ",", "default", "=", "3", ",", "\n", "help", "=", "'min match size in characters (default: %(default)s)'", ")", "\n", "parser", ".", "add_argument", "(", "'-n'", ",", "'--alt-norm'", ",", "action", "=", "'store_true'", ",", "\n", "help", "=", "'''alternative normalization scheme: use only the candidate's length\n                             for normalization (default: %(default)s)'''", ")", "\n", "return", "parser", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.add_parser_output_options": [[47, 53], ["parser.add_argument", "parser.add_argument"], "function", ["None"], ["", "def", "add_parser_output_options", "(", "parser", ")", ":", "\n", "    ", "\"\"\"Populate a CL base parser with output options\"\"\"", "\n", "parser", ".", "add_argument", "(", "'-o'", ",", "'--html-output-file'", ",", "\n", "help", "=", "'generate a html file with per-segment scores and highlighting'", ")", "\n", "parser", ".", "add_argument", "(", "'-p'", ",", "'--plain-output-file'", ",", "\n", "help", "=", "'generate a plain text file with per-segment scores only'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.parse_args": [[55, 64], ["charcut.make_base_parser", "charcut.add_parser_output_options", "make_base_parser.add_argument", "make_base_parser.add_argument", "make_base_parser.add_argument", "make_base_parser.parse_args"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.make_base_parser", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.add_parser_output_options", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.reload_example.parse_args"], ["", "def", "parse_args", "(", ")", ":", "\n", "    ", "\"\"\"Parse and return command line options.\"\"\"", "\n", "parser", "=", "make_base_parser", "(", ")", "\n", "add_parser_output_options", "(", "parser", ")", "\n", "parser", ".", "add_argument", "(", "'-s'", ",", "'--src'", ",", "help", "=", "'source file, only used for display'", ")", "\n", "parser", ".", "add_argument", "(", "'-c'", ",", "'--cand'", ",", "required", "=", "True", ",", "\n", "help", "=", "'candidate (MT hypothesis) file'", ")", "\n", "parser", ".", "add_argument", "(", "'-r'", ",", "'--ref'", ",", "required", "=", "True", ",", "help", "=", "'reference file'", ")", "\n", "return", "parser", ".", "parse_args", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.read_gz8": [[66, 70], ["open"], "function", ["None"], ["", "def", "read_gz8", "(", "filename", ")", ":", "\n", "    ", "\"\"\"Read a utf8, possibly gzipped, file into memory, as a list of lines.\"\"\"", "\n", "with", "open", "(", "filename", ",", "'r'", ",", "encoding", "=", "'utf-8'", ")", "as", "f", ":", "\n", "        ", "return", "[", "line", "for", "line", "in", "f", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.load_input_segs": [[72, 87], ["len", "len", "len", "len", "cand.strip", "ref.strip", "enumerate", "src.strip", "zip"], "function", ["None"], ["", "", "def", "load_input_segs", "(", "cand_segs", ",", "ref_segs", ",", "src_segs", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Load input files specified in the CL arguments into memory.\n\n    Returns a list of 5-tuples: (segment_id, origin, src_segment,\n                                 candidate_segment, reference_segment)\n    \"origin\" is always None (present for compatibility with other modules handling sdlxliff files).\n    \"src_segment\" is None if the source file was not passed on the CL.\n    \"\"\"", "\n", "# src file is optional", "\n", "src_segs", "=", "src_segs", "or", "[", "None", "]", "*", "len", "(", "cand_segs", ")", "\n", "assert", "len", "(", "src_segs", ")", "==", "len", "(", "cand_segs", ")", "==", "len", "(", "ref_segs", ")", "\n", "return", "[", "(", "i", ",", "None", ",", "src", ".", "strip", "(", ")", "if", "src", "else", "src", ",", "cand", ".", "strip", "(", ")", ",", "ref", ".", "strip", "(", ")", ")", "\n", "for", "i", ",", "(", "src", ",", "cand", ",", "ref", ")", "\n", "in", "enumerate", "(", "zip", "(", "src_segs", ",", "cand_segs", ",", "ref_segs", ")", ",", "1", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.iter_common_substrings": [[89, 136], ["len", "len", "todo.pop", "collections.defaultdict", "collections.defaultdict", "collections.defaultdict.items", "collections.defaultdict.get", "tokens1[].append", "tokens2[].append", "todo.append", "len"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.UninitializedYamlObject.get", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "def", "iter_common_substrings", "(", "seq1", ",", "seq2", ",", "start_pos1", ",", "start_pos2", ",", "min_match_size", ",", "add_fix", ")", ":", "\n", "    ", "\"\"\"\n    Iterates over common substrings between two sequences, looking at specific start positions.\n\n    start_pos1 (resp. start_pos2) is a list of indices in seq1 (resp. seq2)\n    where to look for identical suffixes. This is typically range(len(seq1)) (resp. seq2).\n\n    min_match_size specifies the minimal length of substrings output.\n\n    add_fix is a boolean which indicates whether we should systematically output\n    the longest prefix and the longest suffix, independently of min_match_size.\n\n    Returns an iterator over triples: (common substring, [start idx in seq1], [start idx in seq2])\n    \"\"\"", "\n", "# We test for equality between elements at positions specified by start_pos1 and start_pos2.", "\n", "# For all equal pairs, we perform the test again at matching positions + 1.", "\n", "# This is basically a recursive function, but given how inefficient they are in Python,", "\n", "# we use a while loop with a stack of \"todo\" arguments instead.", "\n", "# This is simpler than suffix arrays given our constraints (and fast enough).", "\n", "n1", "=", "len", "(", "seq1", ")", "\n", "n2", "=", "len", "(", "seq2", ")", "\n", "# Parameters to the \"recursive function\". 3rd one is the offset.", "\n", "todo", "=", "[", "(", "start_pos1", ",", "start_pos2", ",", "0", ")", "]", "\n", "while", "todo", ":", "\n", "        ", "pos1", ",", "pos2", ",", "offset", "=", "todo", ".", "pop", "(", ")", "\n", "# Associate to each token the list of positions it appears at", "\n", "tokens1", "=", "defaultdict", "(", "list", ")", "\n", "tokens2", "=", "defaultdict", "(", "list", ")", "\n", "for", "i", "in", "pos1", ":", "\n", "            ", "if", "i", "+", "offset", "<", "n1", ":", "\n", "                ", "tokens1", "[", "seq1", "[", "i", "+", "offset", "]", "]", ".", "append", "(", "i", ")", "\n", "", "", "for", "i", "in", "pos2", ":", "\n", "            ", "if", "i", "+", "offset", "<", "n2", ":", "\n", "                ", "tokens2", "[", "seq2", "[", "i", "+", "offset", "]", "]", ".", "append", "(", "i", ")", "\n", "# Take intersection of the two token sets", "\n", "", "", "for", "token", ",", "ok_pos1", "in", "tokens1", ".", "items", "(", ")", ":", "\n", "            ", "ok_pos2", "=", "tokens2", ".", "get", "(", "token", ")", "\n", "if", "ok_pos2", ":", "\n", "                ", "first_pos", "=", "ok_pos1", "[", "0", "]", "\n", "substr", "=", "u''", ".", "join", "(", "seq1", "[", "first_pos", ":", "first_pos", "+", "offset", "+", "1", "]", ")", "\n", "if", "len", "(", "substr", ")", ">=", "min_match_size", ":", "\n", "                    ", "yield", "substr", ",", "ok_pos1", ",", "ok_pos2", "\n", "", "elif", "add_fix", "and", "0", "in", "ok_pos1", "and", "0", "in", "ok_pos2", ":", "# common prefix", "\n", "                    ", "yield", "substr", ",", "[", "0", "]", ",", "[", "0", "]", "\n", "", "elif", "add_fix", "and", "n1", "-", "1", "-", "offset", "in", "ok_pos1", "and", "n2", "-", "1", "-", "offset", "in", "ok_pos2", ":", "# common suffix", "\n", "                    ", "yield", "substr", ",", "[", "n1", "-", "1", "-", "offset", "]", ",", "[", "n2", "-", "1", "-", "offset", "]", "\n", "", "todo", ".", "append", "(", "(", "ok_pos1", ",", "ok_pos2", ",", "offset", "+", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.word_split": [[140, 157], ["WORD_RE.split", "len"], "function", ["None"], ["def", "word_split", "(", "seq", ")", ":", "\n", "    ", "\"\"\"\n    Prepares a sequence of characters for the search of inter-words common substrings.\n\n    The search will be operated directly on the tokens returned (word-based comparison).\n    1 non-word character = 1 token.\n\n    Returns an iterator over tuples: (start position, token)\n\n    >>> list(word_split('ab, cd'))\n    [(0, 'ab'), (2, ','), (3, ' '), (4, 'cd')]\n    \"\"\"", "\n", "pos", "=", "0", "\n", "for", "elt", "in", "WORD_RE", ".", "split", "(", "seq", ")", ":", "\n", "        ", "if", "elt", ":", "\n", "            ", "yield", "pos", ",", "elt", "\n", "pos", "+=", "len", "(", "elt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.word_based_matches": [[159, 168], ["charcut.iter_common_substrings", "zip", "zip", "range", "range", "len", "len", "charcut.word_split", "charcut.word_split"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.iter_common_substrings", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.word_split", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.word_split"], ["", "", "", "def", "word_based_matches", "(", "seq1", ",", "seq2", ",", "min_match_size", ")", ":", "\n", "    ", "\"\"\"Iterator over all word-based common substrings between seq1 and seq2.\"\"\"", "\n", "starts1", ",", "words1", "=", "zip", "(", "*", "word_split", "(", "seq1", ")", ")", "if", "seq1", "else", "(", "[", "]", ",", "[", "]", ")", "\n", "starts2", ",", "words2", "=", "zip", "(", "*", "word_split", "(", "seq2", ")", ")", "if", "seq2", "else", "(", "[", "]", ",", "[", "]", ")", "\n", "it", "=", "iter_common_substrings", "(", "words1", ",", "words2", ",", "range", "(", "len", "(", "words1", ")", ")", ",", "\n", "range", "(", "len", "(", "words2", ")", ")", ",", "min_match_size", ",", "True", ")", "\n", "for", "substr", ",", "pos1", ",", "pos2", "in", "it", ":", "\n", "# Replace positions in words with positions in characters", "\n", "        ", "yield", "substr", ",", "[", "starts1", "[", "i", "]", "for", "i", "in", "pos1", "]", ",", "[", "starts2", "[", "i", "]", "for", "i", "in", "pos2", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.start_pos": [[170, 176], ["len"], "function", ["None"], ["", "", "def", "start_pos", "(", "words", ")", ":", "\n", "    ", "\"\"\"Iterator over start positions of a list of words (cumulative lengths).\"\"\"", "\n", "pos", "=", "0", "\n", "for", "elt", "in", "words", ":", "\n", "        ", "yield", "pos", "\n", "pos", "+=", "len", "(", "elt", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.char_split": [[180, 214], ["CHAR_RE.split", "list", "range", "charcut.start_pos", "range", "len", "len", "enumerate"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.start_pos"], ["def", "char_split", "(", "seq", ",", "sep_sign", ")", ":", "\n", "    ", "\"\"\"\n    Prepares a sequence of characters for the search of intra-words common substrings.\n\n    Runs of non-word characters are duplicated: they are used once for the preceding word,\n    and once for the following word.\n    For instance, given the string \"ab, cd\", we will look for common substrings in\n    \"ab, \" and in \", cd\".\n\n    A unique, dummy element is inserted between them in order to prevent the subsequent search\n    for common substrings from spanning multiple words. For this purpose, \"sep_sign\" should be 1\n    for the first sequence and -1 for the second one.\n\n    Returns an iterator over triples: (original position, character, is-start-position)\n    \"is-start-position\" is False for trailing non-word characters.\n\n    >>> list(char_split('ab, cd', 1))\n    [(0, 'a', True), (1, 'b', True), (2, ',', False), (3, ' ', False),\n     (None, 2, False),\n     (2, ',', True), (3, ' ', True), (4, 'c', True), (5, 'd', True)]\n    \"\"\"", "\n", "split", "=", "CHAR_RE", ".", "split", "(", "seq", ")", "\n", "# Fix in case seq contains only non-word characters", "\n", "tokens", "=", "[", "u''", ",", "split", "[", "0", "]", ",", "u''", "]", "if", "len", "(", "split", ")", "==", "1", "else", "split", "\n", "# \"tokens\" alternate actual words and runs of non-word characters", "\n", "starts", "=", "list", "(", "start_pos", "(", "tokens", ")", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "tokens", ")", "-", "2", ",", "2", ")", ":", "\n", "# insert unique separator to prevent common substrings to span multiple words", "\n", "        ", "if", "i", ":", "\n", "            ", "yield", "None", ",", "i", "*", "sep_sign", ",", "False", "\n", "", "for", "j", "in", "range", "(", "i", ",", "i", "+", "3", ")", ":", "\n", "            ", "is_start_pos", "=", "j", "!=", "i", "+", "2", "\n", "for", "k", ",", "char", "in", "enumerate", "(", "tokens", "[", "j", "]", ",", "starts", "[", "j", "]", ")", ":", "\n", "                ", "yield", "k", ",", "char", ",", "is_start_pos", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.char_based_matches": [[216, 226], ["charcut.iter_common_substrings", "zip", "zip", "enumerate", "enumerate", "charcut.char_split", "charcut.char_split"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.iter_common_substrings", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.char_split", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.char_split"], ["", "", "", "", "def", "char_based_matches", "(", "seq1", ",", "seq2", ",", "min_match_size", ")", ":", "\n", "    ", "\"\"\"Iterator over all intra-word character-based common substrings between seq1 and seq2.\"\"\"", "\n", "starts1", ",", "chars1", ",", "is_start1", "=", "zip", "(", "*", "char_split", "(", "seq1", ",", "1", ")", ")", "if", "seq1", "else", "(", "[", "]", ",", "[", "]", ",", "[", "]", ")", "\n", "starts2", ",", "chars2", ",", "is_start2", "=", "zip", "(", "*", "char_split", "(", "seq2", ",", "-", "1", ")", ")", "if", "seq2", "else", "(", "[", "]", ",", "[", "]", ",", "[", "]", ")", "\n", "start_pos1", "=", "[", "i", "for", "i", ",", "is_start", "in", "enumerate", "(", "is_start1", ")", "if", "is_start", "]", "\n", "start_pos2", "=", "[", "i", "for", "i", ",", "is_start", "in", "enumerate", "(", "is_start2", ")", "if", "is_start", "]", "\n", "ics", "=", "iter_common_substrings", "(", "chars1", ",", "chars2", ",", "start_pos1", ",", "start_pos2", ",", "min_match_size", ",", "False", ")", "\n", "for", "substr", ",", "pos1", ",", "pos2", "in", "ics", ":", "\n", "# Replace positions with those from the original sequences", "\n", "        ", "yield", "substr", ",", "[", "starts1", "[", "i", "]", "for", "i", "in", "pos1", "]", ",", "[", "starts2", "[", "i", "]", "for", "i", "in", "pos2", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.order_key": [[228, 232], ["len", "len", "len", "len", "len"], "function", ["None"], ["", "", "def", "order_key", "(", "match", ")", ":", "\n", "    ", "\"\"\"Sort key for common substrings: longest first, plus a few heuristic comparisons.\"\"\"", "\n", "substr", ",", "pos1", ",", "pos2", "=", "match", "\n", "return", "-", "len", "(", "substr", ")", ",", "len", "(", "pos1", ")", "==", "len", "(", "pos2", ")", ",", "len", "(", "pos1", ")", "+", "len", "(", "pos2", ")", ",", "pos1", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.clean_match_list": [[234, 246], ["len", "all", "all"], "function", ["None"], ["", "def", "clean_match_list", "(", "match_list", ",", "mask1", ",", "mask2", ")", ":", "\n", "    ", "\"\"\"\n    Filter list of common substrings: remove those for which at least one character\n    has already been covered (specified by the two masks).\n    \"\"\"", "\n", "for", "substr", ",", "pos1", ",", "pos2", "in", "match_list", ":", "\n", "        ", "k", "=", "len", "(", "substr", ")", "\n", "clean_pos1", "=", "[", "i", "for", "i", "in", "pos1", "if", "all", "(", "mask1", "[", "i", ":", "i", "+", "k", "]", ")", "]", "\n", "if", "clean_pos1", ":", "\n", "            ", "clean_pos2", "=", "[", "i", "for", "i", "in", "pos2", "if", "all", "(", "mask2", "[", "i", ":", "i", "+", "k", "]", ")", "]", "\n", "if", "clean_pos2", ":", "\n", "                ", "yield", "substr", ",", "clean_pos1", ",", "clean_pos2", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.residual_diff": [[248, 263], ["enumerate", "buf.append", "len", "len"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "", "", "", "def", "residual_diff", "(", "mask", ")", ":", "\n", "    ", "\"\"\"\n    Factor successive 0's from a mask.\n\n    Returns list of pairs: (start position, length)\n    \"\"\"", "\n", "buf", "=", "[", "]", "\n", "for", "i", ",", "elt", "in", "enumerate", "(", "mask", ")", ":", "\n", "        ", "if", "elt", ":", "\n", "            ", "buf", ".", "append", "(", "i", ")", "\n", "", "elif", "buf", ":", "\n", "            ", "yield", "buf", "[", "0", "]", ",", "len", "(", "buf", ")", "\n", "buf", "=", "[", "]", "\n", "", "", "if", "buf", ":", "\n", "        ", "yield", "buf", "[", "0", "]", ",", "len", "(", "buf", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.greedy_matching": [[265, 309], ["itertools.chain", "sorted", "charcut.residual_diff", "charcut.residual_diff", "len", "len", "charcut.word_based_matches", "charcut.char_based_matches", "dedup.values", "retained_matches.append", "len", "list", "charcut.clean_match_list"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.residual_diff", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.residual_diff", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.word_based_matches", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.char_based_matches", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.clean_match_list"], ["", "", "def", "greedy_matching", "(", "seq1", ",", "seq2", ",", "min_match_size", ")", ":", "\n", "    ", "\"\"\"\n    Greedy search for common substrings between seq1 and seq2.\n\n    Residual substrings (smaller than min_match_size) are also output as deletions (from seq1)\n    or insertions (into seq2).\n\n    Returns an iterator over triples: (position in seq1, position in seq2, substring)\n    The position in seq1 is -1 for insertions, and the position in seq2 is -1 for deletions.\n    \"\"\"", "\n", "assert", "min_match_size", ">", "0", "\n", "retained_matches", "=", "[", "]", "\n", "# Indicate for each character if it is already covered by a match", "\n", "mask1", "=", "[", "1", "]", "*", "len", "(", "seq1", ")", "\n", "mask2", "=", "[", "1", "]", "*", "len", "(", "seq2", ")", "\n", "\n", "# List *all* common substrings and sort them (mainly) by length.", "\n", "# This is fine since we do (should) not deal with huge strings.", "\n", "match_it", "=", "chain", "(", "word_based_matches", "(", "seq1", ",", "seq2", ",", "min_match_size", ")", ",", "\n", "char_based_matches", "(", "seq1", ",", "seq2", ",", "min_match_size", ")", ")", "\n", "dedup", "=", "{", "match", "[", "0", "]", ":", "match", "for", "match", "in", "match_it", "}", "\n", "match_list", "=", "sorted", "(", "dedup", ".", "values", "(", ")", ",", "key", "=", "order_key", ")", "\n", "\n", "# Consume all common substrings, longest first", "\n", "while", "match_list", ":", "\n", "        ", "substr", ",", "pos1", ",", "pos2", "=", "match_list", "[", "0", "]", "\n", "i", ",", "j", "=", "pos1", "[", "0", "]", ",", "pos2", "[", "0", "]", "\n", "retained_matches", ".", "append", "(", "(", "i", ",", "j", ",", "substr", ")", ")", "\n", "size", "=", "len", "(", "substr", ")", "\n", "# Update masks with newly retained characters", "\n", "mask1", "[", "i", ":", "i", "+", "size", "]", "=", "[", "0", "]", "*", "size", "\n", "mask2", "[", "j", ":", "j", "+", "size", "]", "=", "[", "0", "]", "*", "size", "\n", "# Eliminate common substrings for which at least one char is already covered", "\n", "match_list", "=", "list", "(", "clean_match_list", "(", "match_list", ",", "mask1", ",", "mask2", ")", ")", "\n", "\n", "# Output matches", "\n", "", "for", "match", "in", "retained_matches", ":", "\n", "        ", "yield", "match", "\n", "# Output deletions", "\n", "", "for", "pos", ",", "size", "in", "residual_diff", "(", "mask1", ")", ":", "\n", "        ", "yield", "pos", ",", "-", "1", ",", "seq1", "[", "pos", ":", "pos", "+", "size", "]", "\n", "# Output insertions", "\n", "", "for", "pos", ",", "size", "in", "residual_diff", "(", "mask2", ")", ":", "\n", "        ", "yield", "-", "1", ",", "pos", ",", "seq2", "[", "pos", ":", "pos", "+", "size", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.find_regular_matches": [[311, 326], ["sorted", "sorted", "difflib.SequenceMatcher", "range", "range", "difflib.SequenceMatcher.get_matching_blocks", "len", "len"], "function", ["None"], ["", "", "def", "find_regular_matches", "(", "ops", ")", ":", "\n", "    ", "\"\"\"\n    Find the set of regular (non-shift) matches from the list of operations.\n\n    \"ops\" is the list of triples as returned by greedy_matching().\n    \"\"\"", "\n", "matches1", "=", "sorted", "(", "m", "for", "m", "in", "ops", "if", "m", "[", "0", "]", "!=", "-", "1", "and", "m", "[", "1", "]", "!=", "-", "1", ")", "\n", "matches2", "=", "sorted", "(", "matches1", ",", "key", "=", "lambda", "match", ":", "match", "[", "1", "]", ")", "\n", "# Search for the longest common subsequence in characters", "\n", "# Expand \"string\" matches into \"character\" matches", "\n", "char_matches1", "=", "[", "(", "m", ",", "i", ")", "for", "m", "in", "matches1", "for", "i", "in", "range", "(", "len", "(", "m", "[", "2", "]", ")", ")", "]", "\n", "char_matches2", "=", "[", "(", "m", ",", "i", ")", "for", "m", "in", "matches2", "for", "i", "in", "range", "(", "len", "(", "m", "[", "2", "]", ")", ")", "]", "\n", "sm", "=", "difflib", ".", "SequenceMatcher", "(", "None", ",", "char_matches1", ",", "char_matches2", ",", "autojunk", "=", "False", ")", "\n", "return", "{", "m", "for", "a", ",", "_", ",", "size", "in", "sm", ".", "get_matching_blocks", "(", ")", "\n", "for", "m", ",", "_", "in", "char_matches1", "[", "a", ":", "a", "+", "size", "]", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.eval_shift_distance": [[328, 344], ["sorted", "len", "len"], "function", ["None"], ["", "def", "eval_shift_distance", "(", "shift", ",", "reg_matches", ")", ":", "\n", "    ", "\"\"\"\n    Compute the distance in characters a match has been shifted over.\n\n    \"reg_matches\" is the set of regular matches as returned by find_regular_matches().\n\n    The distance is defined as the number of characters between the shifted match\n    and the closest regular match.\n    \"\"\"", "\n", "mid_matches", "=", "sorted", "(", "m", "for", "m", "in", "reg_matches", "\n", "if", "(", "m", "[", "0", "]", "<", "shift", "[", "0", "]", "and", "m", "[", "1", "]", ">", "shift", "[", "1", "]", ")", "\n", "or", "(", "m", "[", "0", "]", ">", "shift", "[", "0", "]", "and", "m", "[", "1", "]", "<", "shift", "[", "1", "]", ")", ")", "\n", "return", "(", "-", "(", "shift", "[", "0", "]", "-", "mid_matches", "[", "0", "]", "[", "0", "]", ")", "\n", "if", "mid_matches", "[", "0", "]", "[", "0", "]", "<", "shift", "[", "0", "]", "\n", "else", "(", "mid_matches", "[", "-", "1", "]", "[", "0", "]", "+", "len", "(", "mid_matches", "[", "-", "1", "]", "[", "2", "]", ")", "\n", "-", "(", "shift", "[", "0", "]", "+", "len", "(", "shift", "[", "2", "]", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.add_shift_distance": [[346, 370], ["charcut.eval_shift_distance", "math.exp", "abs", "len"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.eval_shift_distance"], ["", "def", "add_shift_distance", "(", "ops", ",", "reg_matches", ")", ":", "\n", "    ", "\"\"\"\n    Decorate the list of operations with the shift distance.\n\n    The distance is 0 for everything but shifts.\n\n    Returns an iterator over 4-tuples:\n    (pos in seq1, pos in seq2, substring, integer distance)\n    \"\"\"", "\n", "# Experimental: turn shifts back into insertions/deletions", "\n", "# if the shift distance is \"too large\".", "\n", "for", "op", "in", "ops", ":", "\n", "        ", "alo", ",", "blo", ",", "slice", "=", "op", "\n", "if", "alo", "==", "-", "1", "or", "blo", "==", "-", "1", "or", "op", "in", "reg_matches", ":", "\n", "            ", "yield", "op", "+", "(", "0", ",", ")", "\n", "", "else", ":", "# shift", "\n", "            ", "dist", "=", "eval_shift_distance", "(", "op", ",", "reg_matches", ")", "\n", "# Heuristic: the shorter a string,", "\n", "# the shorter the distance it is allowed to travel", "\n", "if", "math", ".", "exp", "(", "len", "(", "slice", ")", ")", ">=", "abs", "(", "dist", ")", ":", "\n", "                ", "yield", "op", "+", "(", "dist", ",", ")", "\n", "", "else", ":", "# replace shift with deletion + insertion", "\n", "                ", "yield", "-", "1", ",", "blo", ",", "slice", ",", "0", "\n", "yield", "alo", ",", "-", "1", ",", "slice", ",", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut._merge_adjacent_diffs_aux": [[372, 385], ["len"], "function", ["None"], ["", "", "", "", "def", "_merge_adjacent_diffs_aux", "(", "diffs", ")", ":", "\n", "    ", "prev_start", "=", "0", "\n", "prev_substr", "=", "u''", "\n", "for", "start", ",", "substr", "in", "diffs", ":", "\n", "        ", "if", "start", "==", "prev_start", "+", "len", "(", "prev_substr", ")", ":", "\n", "            ", "prev_substr", "+=", "substr", "\n", "", "else", ":", "\n", "            ", "if", "prev_substr", ":", "\n", "                ", "yield", "prev_start", ",", "prev_substr", "\n", "", "prev_start", "=", "start", "\n", "prev_substr", "=", "substr", "\n", "", "", "if", "prev_substr", ":", "\n", "        ", "yield", "prev_start", ",", "prev_substr", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.merge_adjacent_diffs": [[387, 398], ["sorted", "sorted", "charcut._merge_adjacent_diffs_aux", "charcut._merge_adjacent_diffs_aux"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut._merge_adjacent_diffs_aux", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut._merge_adjacent_diffs_aux"], ["", "", "def", "merge_adjacent_diffs", "(", "ops", ")", ":", "\n", "    ", "\"\"\"Final cleaning: merge adjacent deletions or insertions into a single operation.\"\"\"", "\n", "matches", "=", "[", "op", "for", "op", "in", "ops", "if", "op", "[", "0", "]", "!=", "-", "1", "and", "op", "[", "1", "]", "!=", "-", "1", "]", "\n", "deletions", "=", "sorted", "(", "(", "alo", ",", "substr", ")", "for", "alo", ",", "blo", ",", "substr", ",", "_", "in", "ops", "if", "blo", "==", "-", "1", ")", "\n", "insertions", "=", "sorted", "(", "(", "blo", ",", "substr", ")", "for", "alo", ",", "blo", ",", "substr", ",", "_", "in", "ops", "if", "alo", "==", "-", "1", ")", "\n", "for", "op", "in", "matches", ":", "\n", "        ", "yield", "op", "\n", "", "for", "alo", ",", "substr", "in", "_merge_adjacent_diffs_aux", "(", "deletions", ")", ":", "\n", "        ", "yield", "alo", ",", "-", "1", ",", "substr", ",", "0", "\n", "", "for", "blo", ",", "substr", "in", "_merge_adjacent_diffs_aux", "(", "insertions", ")", ":", "\n", "        ", "yield", "-", "1", ",", "blo", ",", "substr", ",", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.add_css_classes": [[400, 425], ["None"], "function", ["None"], ["", "", "def", "add_css_classes", "(", "ops", ")", ":", "\n", "    ", "\"\"\"\n    Decorate the list of operations with CSS classes for display.\n\n    Each operation is assigned 2 classes:\n    * {ins,del,shift,match} for the display style\n    * {diff,shift,match}X serve as ids for mouse-overs (substrings that match\n    in the two segments compared have the same id)\n\n    Returns an iterator over 6-tuples:\n    (pos in seq1, pos in seq2, substring, distance, css class, css id)\n    \"\"\"", "\n", "# Substrings are identified based on their start index in the first sequence", "\n", "match_alo", "=", "0", "\n", "for", "op", "in", "ops", ":", "\n", "        ", "alo", ",", "blo", ",", "_", ",", "dist", "=", "op", "\n", "if", "alo", "==", "-", "1", ":", "\n", "            ", "yield", "op", "+", "(", "'ins'", ",", "'diff{}'", ".", "format", "(", "match_alo", ")", ")", "\n", "", "elif", "blo", "==", "-", "1", ":", "\n", "            ", "yield", "op", "+", "(", "'del'", ",", "'diff{}'", ".", "format", "(", "match_alo", ")", ")", "\n", "", "elif", "dist", ":", "\n", "            ", "yield", "op", "+", "(", "'shift'", ",", "'shift{}'", ".", "format", "(", "alo", ")", ")", "\n", "", "else", ":", "\n", "            ", "yield", "op", "+", "(", "'match'", ",", "'match{}'", ".", "format", "(", "alo", ")", ")", "\n", "match_alo", "=", "alo", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.compare_segments": [[427, 443], ["list", "charcut.find_regular_matches", "list", "sorted", "sorted", "list", "list", "charcut.greedy_matching", "charcut.merge_adjacent_diffs", "charcut.add_css_classes", "charcut.add_css_classes", "list", "operator.itemgetter", "charcut.add_shift_distance"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.find_regular_matches", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.greedy_matching", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.merge_adjacent_diffs", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.add_css_classes", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.add_css_classes", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.add_shift_distance"], ["", "", "", "def", "compare_segments", "(", "cand", ",", "ref", ",", "min_match_size", ")", ":", "\n", "    ", "\"\"\"\n    Main segment comparison function.\n\n    cand and ref are the original unicode strings.\n\n    Return a pair of operation list (same 6-tuples as returned by add_css_classes())\n    \"\"\"", "\n", "base_ops", "=", "list", "(", "greedy_matching", "(", "cand", ",", "ref", ",", "min_match_size", ")", ")", "\n", "reg_matches", "=", "find_regular_matches", "(", "base_ops", ")", "\n", "clean_ops", "=", "list", "(", "merge_adjacent_diffs", "(", "list", "(", "add_shift_distance", "(", "base_ops", ",", "reg_matches", ")", ")", ")", ")", "\n", "cand_ops", "=", "sorted", "(", "op", "for", "op", "in", "clean_ops", "if", "op", "[", "0", "]", "!=", "-", "1", ")", "\n", "ref_ops", "=", "sorted", "(", "(", "op", "for", "op", "in", "clean_ops", "if", "op", "[", "1", "]", "!=", "-", "1", ")", ",", "key", "=", "itemgetter", "(", "1", ")", ")", "\n", "styled_cand", "=", "list", "(", "add_css_classes", "(", "cand_ops", ")", ")", "\n", "styled_ref", "=", "list", "(", "add_css_classes", "(", "ref_ops", ")", ")", "\n", "return", "styled_cand", ",", "styled_ref", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut._get_cost": [[445, 448], ["sum", "len"], "function", ["None"], ["", "def", "_get_cost", "(", "styled_ops", ",", "css_clazz", ")", ":", "\n", "    ", "return", "sum", "(", "len", "(", "slice", ")", "for", "_", ",", "_", ",", "slice", ",", "_", ",", "clazz", ",", "_", "in", "styled_ops", "\n", "if", "clazz", "==", "css_clazz", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.score_all": [[450, 462], ["zip", "charcut._get_cost", "charcut._get_cost", "charcut._get_cost", "min", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut._get_cost", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut._get_cost", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut._get_cost"], ["", "def", "score_all", "(", "aligned_segs", ",", "styled_ops", ",", "alt_norm", ")", ":", "\n", "    ", "\"\"\"Score segment pairs based on their differences.\"\"\"", "\n", "for", "(", "(", "seg_id", ",", "_", ",", "src", ",", "cand", ",", "ref", ")", ",", "(", "styled_cand", ",", "styled_ref", ")", ")", "in", "zip", "(", "aligned_segs", ",", "styled_ops", ")", ":", "\n", "        ", "ins_cost", "=", "_get_cost", "(", "styled_cand", ",", "'del'", ")", "\n", "del_cost", "=", "_get_cost", "(", "styled_ref", ",", "'ins'", ")", "\n", "# shifts are the same in cand and ref", "\n", "shift_cost", "=", "_get_cost", "(", "styled_cand", ",", "'shift'", ")", "\n", "cost", "=", "ins_cost", "+", "del_cost", "+", "shift_cost", "\n", "div", "=", "2", "*", "len", "(", "cand", ")", "if", "alt_norm", "else", "len", "(", "cand", ")", "+", "len", "(", "ref", ")", "\n", "# Prevent scores > 100%", "\n", "bounded_cost", "=", "min", "(", "cost", ",", "div", ")", "\n", "yield", "bounded_cost", ",", "div", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.ops2html": [[464, 473], ["len", "locals"], "function", ["None"], ["", "", "def", "ops2html", "(", "styled_ops", ",", "seg_id", ")", ":", "\n", "    ", "for", "op", "in", "styled_ops", ":", "\n", "        ", "_", ",", "_", ",", "slice", ",", "dist", ",", "css", ",", "css_id", "=", "op", "\n", "substr_id", "=", "'seg{}_{}'", ".", "format", "(", "seg_id", ",", "css_id", ")", "\n", "dist_str", "=", "'({:+d})'", ".", "format", "(", "dist", ")", "if", "dist", "else", "''", "\n", "slice_len", "=", "len", "(", "slice", ")", "\n", "yield", "'<span title=\"{css}{dist_str}: {slice_len}\" class=\"{css} {substr_id}\" '", "'onmouseenter=\"enter(\\'{substr_id}\\')\" onmouseleave=\"leave(\\'{substr_id}\\')\">'", "'{slice}</span>'", ".", "format", "(", "**", "locals", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.segs2html": [[475, 516], ["charcut.ops2html", "charcut.ops2html", "locals", "locals"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.ops2html", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.ops2html"], ["def", "segs2html", "(", "segs", ",", "ops", ",", "score_pair", ",", "mt_label", "=", "\"MT:\"", ",", "ref_label", "=", "\"Ref:\"", ",", "use_id_col", "=", "True", ")", ":", "\n", "    ", "\"\"\"Do highlighting on a single segment pair.\"\"\"", "\n", "global", "seg_counter", "\n", "seg_counter", "+=", "1", "\n", "seg_id", ",", "origin", ",", "src", ",", "cand", ",", "ref", "=", "segs", "\n", "styled_cand", ",", "styled_ref", "=", "ops", "\n", "cost", ",", "div", "=", "score_pair", "\n", "score", "=", "(", "1.", "*", "cost", "/", "div", ")", "if", "div", "else", "0", "\n", "origin_str", "=", "'<p class=\"detail\">({})</p>'", ".", "format", "(", "origin", ")", "if", "origin", "else", "''", "\n", "src_str", "=", "'''<tr>\n        <td class=\"seghead midrow\">Src:</td>\n        <td class=\"midrow src\">{}</td>\n       </tr>'''", ".", "format", "(", "src", ")", "if", "src", "else", "''", "\n", "cand_str", "=", "''", ".", "join", "(", "ops2html", "(", "styled_cand", ",", "seg_counter", ")", ")", "\n", "ref_str", "=", "''", ".", "join", "(", "ops2html", "(", "styled_ref", ",", "seg_counter", ")", ")", "\n", "id_row", "=", "\"\"", "\n", "if", "use_id_col", ":", "id_row", "=", "'<td class=\"mainrow\">{origin_str}{seg_id}</td>'", ".", "format", "(", "**", "locals", "(", ")", ")", "\n", "return", "'''\n<tr>\n  {id_row}\n  <td class=\"mainrow score\">\n    <span class=\"detail\">{cost:.0f}/{div:.0f}=</span><br/>{score:.0%}\n  </td>\n  <td class=\"mainrow\">\n    <table>\n      {src_str}\n      <tr>\n        <td class=\"seghead midrow\">{mt_label}</td>\n        <td class=\"midrow trg\">\n          {cand_str}\n        </td>\n      </tr>\n      <tr>\n        <td class=\"seghead\">{ref_label}</td><td class=\"trg\">\n          {ref_str}\n        </td>\n      </tr>\n    </table>\n  </td>\n</tr>\n'''", ".", "format", "(", "**", "locals", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.html_dump": [[518, 600], ["print", "zip", "print", "print", "print", "charcut.segs2html", "print", "int", "int"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.segs2html"], ["", "def", "html_dump", "(", "out_file", ",", "aligned_segs", ",", "styled_ops", ",", "seg_scores", ",", "doc_cost", ",", "doc_div", ")", ":", "\n", "    ", "\"\"\"\n    Do highlighting on all segments and output them as a HTML file.\n\n    aligned_segs are the input segments as returned by load_input_segs().\n    styled_ops are the decorated operations as returned by compare_segments().\n    seg_scores are the pairs (cost, div) as returned by score_all().\n    \"\"\"", "\n", "print", "(", "'''<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>charcut output</title>\n  <style>\n    body {font-family: sans-serif; font-size: 11pt;}\n    table, td, th {border-spacing: 0;}\n    th {padding: 10px;}\n    td {padding: 5px;}\n    th {border-top: solid black 2px; font-weight: normal;}\n    .tophead {border-bottom: solid black 1px;}\n    .src {font-style: oblique;}\n    .trg {font-family: Consolas, monospace;}\n    .del {font-weight: bold; color: #f00000;}\n    .ins {font-weight: bold; color: #0040ff;}\n    .shift {font-weight: bold;}\n    .match {}\n    .mainrow {border-top: solid black 1px; padding: 1em;}\n    .midrow {border-bottom: dotted gray 1px;}\n    .seghead {color: gray; text-align: right;}\n    .score {font-family: Consolas, monospace; text-align: right; font-size: large;}\n    .detail {font-size: xx-small; color: gray;}\n  </style>\n  <script>\n    function enter(cls) {\n      var elts = document.getElementsByClassName(cls);\n      for (var i=0; i<elts.length; i++)\n        elts[i].style.backgroundColor = \"yellow\";\n    }\n    function leave(cls) {\n      var elts = document.getElementsByClassName(cls);\n      for (var i=0; i<elts.length; i++)\n        elts[i].style.backgroundColor = \"transparent\";\n    }\n  </script>\n</head>\n<body>\n<table>\n  <tr>\n    <th class=\"tophead\">Seg. id</th>\n    <th class=\"tophead\">Score</th>\n    <th class=\"tophead\">\n      Segment comparison:\n      <span class=\"trg del\">Deletion</span>\n      <span class=\"trg ins\">Insertion</span>\n      <span class=\"trg shift\">Shift</span>\n    </th>\n</tr>'''", ",", "file", "=", "out_file", ")", "\n", "prev_id", "=", "None", "\n", "for", "segs", ",", "ops", ",", "score_pair", "in", "zip", "(", "aligned_segs", ",", "styled_ops", ",", "seg_scores", ")", ":", "\n", "        ", "if", "prev_id", ":", "\n", "# There might be mismatches with unsafe input", "\n", "            ", "try", ":", "\n", "                ", "skipped", "=", "int", "(", "segs", "[", "0", "]", ")", "-", "int", "(", "prev_id", ")", "-", "1", "\n", "", "except", "ValueError", ":", "\n", "# Some seg ids contain letters, just ignore", "\n", "                ", "skipped", "=", "None", "\n", "", "if", "skipped", ":", "\n", "                ", "print", "(", "'''\n<tr>\n  <td class=\"detail\" title=\"Mismatch - {} seg. skipped\">[...]</td>\n</tr>'''", ".", "format", "(", "skipped", ")", ",", "file", "=", "out_file", ")", "\n", "\n", "", "", "prev_id", "=", "segs", "[", "0", "]", "\n", "print", "(", "segs2html", "(", "segs", ",", "ops", ",", "score_pair", ")", ",", "file", "=", "out_file", ")", "\n", "", "print", "(", "'''\n<tr>\n  <th>Total</th>\n  <th class=\"score\"><span class=\"detail\">{:.0f}/{:.0f}=</span><br/>{:.0%}</th>\n  <th></th>\n</tr>'''", ".", "format", "(", "doc_cost", ",", "doc_div", ",", "(", "1.", "*", "doc_cost", "/", "doc_div", ")", "if", "doc_div", "else", "0", ")", ",", "file", "=", "out_file", ")", "\n", "\n", "print", "(", "'</table></html>'", ",", "file", "=", "out_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.format_score": [[602, 605], ["None"], "function", ["None"], ["", "def", "format_score", "(", "cost", ",", "div", ")", ":", "\n", "    ", "score", "=", "(", "1.", "*", "cost", "/", "div", ")", "if", "div", "else", "0.", "\n", "return", "'{:.4f} ({}/{})'", ".", "format", "(", "score", ",", "cost", ",", "div", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.run_on": [[607, 639], ["list", "sum", "sum", "getattr", "getattr", "getattr", "charcut.compare_segments", "charcut.score_all", "open", "open", "charcut.html_dump", "open", "zip", "print", "print", "charcut.format_score", "repr"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.compare_segments", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.score_all", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.html_dump", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.charcut.charcut.format_score"], ["", "def", "run_on", "(", "aligned_segs", ",", "args", ")", ":", "\n", "    ", "\"\"\"\n    Main function.\n\n    aligned_seg and args are as returned by load_input_segs() and parse_args().\n    This way this function can be reused by other modules using different arguments\n    or input means.\n\n    Returns the document-level score (0~1).\n    \"\"\"", "\n", "styled_ops", "=", "[", "compare_segments", "(", "cand", ",", "ref", ",", "args", ".", "match_size", ")", "\n", "for", "seg_id", ",", "_", ",", "_", ",", "cand", ",", "ref", "in", "aligned_segs", "]", "\n", "\n", "seg_scores", "=", "list", "(", "score_all", "(", "aligned_segs", ",", "styled_ops", ",", "args", ".", "alt_norm", ")", ")", "\n", "doc_cost", "=", "sum", "(", "cost", "for", "cost", ",", "_", "in", "seg_scores", ")", "\n", "doc_div", "=", "sum", "(", "div", "for", "_", ",", "div", "in", "seg_scores", ")", "\n", "\n", "if", "getattr", "(", "args", ",", "'plain_output_file'", ",", "None", ")", ":", "\n", "        ", "with", "open", "(", "args", ".", "plain_output_file", ",", "'w'", ")", "as", "plain_file", ":", "\n", "            ", "for", "pair", "in", "seg_scores", ":", "\n", "                ", "print", "(", "plain_file", ",", "format_score", "(", "*", "pair", ")", ")", "\n", "\n", "", "", "", "if", "getattr", "(", "args", ",", "'html_output_file'", ",", "None", ")", ":", "\n", "        ", "with", "open", "(", "args", ".", "html_output_file", ",", "'w'", ")", "as", "html_file", ":", "\n", "            ", "html_dump", "(", "html_file", ",", "aligned_segs", ",", "styled_ops", ",", "seg_scores", ",", "doc_cost", ",", "doc_div", ")", "\n", "\n", "", "", "if", "getattr", "(", "args", ",", "'con_output_file'", ",", "None", ")", ":", "\n", "        ", "with", "open", "(", "args", ".", "con_output_file", ",", "'w'", ")", "as", "con_file", ":", "\n", "            ", "for", "(", "seg_id", ",", "orig", ",", "src", ",", "cand", ",", "ref", ")", ",", "(", "cand_ops", ",", "ref_ops", ")", "in", "zip", "(", "aligned_segs", ",", "styled_ops", ")", ":", "\n", "                ", "print", "(", "repr", "(", "(", "cand_ops", ",", "ref_ops", ",", "cand", ",", "ref", ")", ")", ",", "file", "=", "con_file", ")", "\n", "\n", "", "", "", "return", "(", "1.", "*", "doc_cost", "/", "doc_div", ")", "if", "doc_div", "else", "0.", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.tilburg_harwath.TilburgSpeechSeqTransducer.__init__": [[34, 73], ["xnmt.param_collections.ParamManager.my_params", "xnmt.param_collections.ParamManager.my_params.add_parameters", "range", "tilburg_harwath.TilburgSpeechSeqTransducer.attention.append", "tilburg_harwath.TilburgSpeechSeqTransducer.init.append", "tilburg_harwath.TilburgSpeechSeqTransducer.linear.append", "range", "tilburg_harwath.TilburgSpeechSeqTransducer.recur.append", "xnmt.param_collections.ParamManager.my_params.add_parameters", "recur_layer.append", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.my_params", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "filter_height", ",", "filter_width", ",", "channels", ",", "num_filters", ",", "stride", ",", "rhn_num_hidden_layers", ",", "rhn_dim", ",", "\n", "rhn_microsteps", ",", "attention_dim", ",", "residual", "=", "False", ")", ":", "\n", "    ", "self", ".", "filter_height", "=", "filter_height", "\n", "self", ".", "filter_width", "=", "filter_width", "\n", "self", ".", "channels", "=", "channels", "\n", "self", ".", "num_filters", "=", "num_filters", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "rhn_num_hidden_layers", "=", "rhn_num_hidden_layers", "\n", "self", ".", "rhn_dim", "=", "rhn_dim", "\n", "self", ".", "rhn_microsteps", "=", "rhn_microsteps", "\n", "self", ".", "attention_dim", "=", "attention_dim", "\n", "self", ".", "residual", "=", "residual", "\n", "\n", "model", "=", "ParamManager", ".", "my_params", "(", "self", ")", "\n", "# Convolutional layer", "\n", "self", ".", "filter_conv", "=", "model", ".", "add_parameters", "(", "dim", "=", "(", "self", ".", "filter_height", ",", "self", ".", "filter_width", ",", "self", ".", "channels", ",", "self", ".", "num_filters", ")", ")", "\n", "# Recurrent highway layer", "\n", "self", ".", "recur", "=", "[", "]", "\n", "self", ".", "linear", "=", "[", "]", "\n", "self", ".", "init", "=", "[", "]", "\n", "self", ".", "attention", "=", "[", "]", "\n", "\n", "input_dim", "=", "num_filters", "\n", "for", "_", "in", "range", "(", "rhn_num_hidden_layers", ")", ":", "\n", "      ", "self", ".", "init", ".", "append", "(", "model", ".", "add_parameters", "(", "(", "rhn_dim", ",", ")", ")", ")", "\n", "self", ".", "linear", ".", "append", "(", "(", "model", ".", "add_parameters", "(", "(", "rhn_dim", ",", "input_dim", ")", ")", ",", "\n", "model", ".", "add_parameters", "(", "(", "rhn_dim", ",", "input_dim", ",", ")", ")", ")", ")", "\n", "input_dim", "=", "rhn_dim", "\n", "recur_layer", "=", "[", "]", "\n", "for", "_", "in", "range", "(", "self", ".", "rhn_microsteps", ")", ":", "\n", "        ", "recur_layer", ".", "append", "(", "(", "model", ".", "add_parameters", "(", "(", "rhn_dim", ",", "rhn_dim", ")", ")", ",", "\n", "model", ".", "add_parameters", "(", "(", "rhn_dim", ",", ")", ")", ",", "\n", "model", ".", "add_parameters", "(", "(", "rhn_dim", ",", "rhn_dim", ",", ")", ")", ",", "\n", "model", ".", "add_parameters", "(", "(", "rhn_dim", ",", ")", ")", ")", ")", "\n", "", "self", ".", "recur", ".", "append", "(", "recur_layer", ")", "\n", "# Attention layer", "\n", "", "self", ".", "attention", ".", "append", "(", "(", "model", ".", "add_parameters", "(", "(", "attention_dim", ",", "rhn_dim", ")", ")", ",", "\n", "model", ".", "add_parameters", "(", "attention_dim", ",", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.tilburg_harwath.TilburgSpeechSeqTransducer.transduce": [[74, 110], ["padding.as_tensor", "tilburg_harwath.padding", "dynet.rectify", "dynet.reshape", "range", "dynet.concatenate_cols", "dynet.reshape", "xnmt.expression_seqs.ExpressionSequence", "dynet.conv2d", "dynet.rectify.dim", "dynet.pick", "dynet.parameter", "range", "dynet.transpose", "dynet.tanh", "dynet.softmax", "padding.dim", "dynet.parameter", "dynet.rectify.dim", "dynet.rectify.dim", "range", "range", "rhn_out.append", "dynet.parameter", "padding.dim", "padding.dim", "dynet.affine_transform", "dynet.affine_transform", "dynet.tanh", "dynet.logistic", "sum", "dynet.parameter", "dynet.reshape.dim", "dynet.cmult", "dynet.cmult", "zip", "dynet.reshape.dim", "dynet.parameter", "dynet.parameter", "dynet.parameter", "dynet.parameter", "dynet.parameter", "dynet.parameter"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.tilburg_harwath.padding", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["", "def", "transduce", "(", "self", ",", "src", ":", "ExpressionSequence", ")", "->", "ExpressionSequence", ":", "\n", "    ", "src", "=", "src", ".", "as_tensor", "(", ")", "\n", "# convolutional layer", "\n", "src", "=", "padding", "(", "src", ",", "src", ".", "dim", "(", ")", "[", "0", "]", "[", "0", "]", ",", "src", ".", "dim", "(", ")", "[", "0", "]", "[", "1", "]", ",", "self", ".", "filter_width", ",", "self", ".", "stride", ",", "src", ".", "dim", "(", ")", "[", "1", "]", ")", "\n", "l1", "=", "dy", ".", "rectify", "(", "dy", ".", "conv2d", "(", "src", ",", "dy", ".", "parameter", "(", "self", ".", "filter_conv", ")", ",", "stride", "=", "[", "self", ".", "stride", ",", "self", ".", "stride", "]", ",", "is_valid", "=", "True", ")", ")", "\n", "timestep", "=", "l1", ".", "dim", "(", ")", "[", "0", "]", "[", "1", "]", "\n", "features", "=", "l1", ".", "dim", "(", ")", "[", "0", "]", "[", "2", "]", "\n", "batch_size", "=", "l1", ".", "dim", "(", ")", "[", "1", "]", "\n", "# transpose l1 to be (timesetp, dim), but keep the batch_size.", "\n", "rhn_in", "=", "dy", ".", "reshape", "(", "l1", ",", "(", "timestep", ",", "features", ")", ",", "batch_size", "=", "batch_size", ")", "\n", "rhn_in", "=", "[", "dy", ".", "pick", "(", "rhn_in", ",", "i", ")", "for", "i", "in", "range", "(", "timestep", ")", "]", "\n", "for", "l", "in", "range", "(", "self", ".", "rhn_num_hidden_layers", ")", ":", "\n", "      ", "rhn_out", "=", "[", "]", "\n", "# initialize a random vector for the first state vector, keep the same batch size.", "\n", "prev_state", "=", "dy", ".", "parameter", "(", "self", ".", "init", "[", "l", "]", ")", "\n", "# begin recurrent high way network", "\n", "for", "t", "in", "range", "(", "timestep", ")", ":", "\n", "        ", "for", "m", "in", "range", "(", "0", ",", "self", ".", "rhn_microsteps", ")", ":", "\n", "          ", "H", "=", "dy", ".", "affine_transform", "(", "[", "dy", ".", "parameter", "(", "self", ".", "recur", "[", "l", "]", "[", "m", "]", "[", "1", "]", ")", ",", "dy", ".", "parameter", "(", "self", ".", "recur", "[", "l", "]", "[", "m", "]", "[", "0", "]", ")", ",", "prev_state", "]", ")", "\n", "T", "=", "dy", ".", "affine_transform", "(", "[", "dy", ".", "parameter", "(", "self", ".", "recur", "[", "l", "]", "[", "m", "]", "[", "3", "]", ")", ",", "dy", ".", "parameter", "(", "self", ".", "recur", "[", "l", "]", "[", "m", "]", "[", "2", "]", ")", ",", "prev_state", "]", ")", "\n", "if", "m", "==", "0", ":", "\n", "            ", "H", "+=", "dy", ".", "parameter", "(", "self", ".", "linear", "[", "l", "]", "[", "0", "]", ")", "*", "rhn_in", "[", "t", "]", "\n", "T", "+=", "dy", ".", "parameter", "(", "self", ".", "linear", "[", "l", "]", "[", "1", "]", ")", "*", "rhn_in", "[", "t", "]", "\n", "", "H", "=", "dy", ".", "tanh", "(", "H", ")", "\n", "T", "=", "dy", ".", "logistic", "(", "T", ")", "\n", "prev_state", "=", "dy", ".", "cmult", "(", "1", "-", "T", ",", "prev_state", ")", "+", "dy", ".", "cmult", "(", "T", ",", "H", ")", "# ((1024, ), batch_size)", "\n", "", "rhn_out", ".", "append", "(", "prev_state", ")", "\n", "", "if", "self", ".", "residual", "and", "l", ">", "0", ":", "\n", "        ", "rhn_out", "=", "[", "sum", "(", "x", ")", "for", "x", "in", "zip", "(", "rhn_out", ",", "rhn_in", ")", "]", "\n", "", "rhn_in", "=", "rhn_out", "\n", "# Compute the attention-weighted average of the activations", "\n", "", "rhn_in", "=", "dy", ".", "concatenate_cols", "(", "rhn_in", ")", "\n", "scores", "=", "dy", ".", "transpose", "(", "dy", ".", "parameter", "(", "self", ".", "attention", "[", "0", "]", "[", "1", "]", ")", ")", "*", "dy", ".", "tanh", "(", "dy", ".", "parameter", "(", "self", ".", "attention", "[", "0", "]", "[", "0", "]", ")", "*", "rhn_in", ")", "# ((1,510), batch_size)", "\n", "scores", "=", "dy", ".", "reshape", "(", "scores", ",", "(", "scores", ".", "dim", "(", ")", "[", "0", "]", "[", "1", "]", ",", ")", ",", "batch_size", "=", "scores", ".", "dim", "(", ")", "[", "1", "]", ")", "\n", "attn_out", "=", "rhn_in", "*", "dy", ".", "softmax", "(", "scores", ")", "# # rhn_in.as_tensor() is ((1024,510), batch_size) softmax is ((510,), batch_size)", "\n", "return", "ExpressionSequence", "(", "expr_tensor", "=", "attn_out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.tilburg_harwath.HarwathSpeechSeqTransducer.__init__": [[116, 139], ["xnmt.param_collections.ParamManager.my_params", "dynet.NormalInitializer", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.my_params"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "filter_height", ",", "filter_width", ",", "channels", ",", "num_filters", ",", "stride", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n      num_layers: depth of the RNN\n      input_dim: size of the inputs\n      hidden_dim: size of the outputs (and intermediate RNN layer representations)\n    \"\"\"", "\n", "model", "=", "ParamManager", ".", "my_params", "(", "self", ")", "\n", "self", ".", "filter_height", "=", "filter_height", "\n", "self", ".", "filter_width", "=", "filter_width", "\n", "self", ".", "channels", "=", "channels", "\n", "self", ".", "num_filters", "=", "num_filters", "\n", "self", ".", "stride", "=", "stride", "# (2,2)", "\n", "self", ".", "hidden_states", "=", "{", "}", "\n", "\n", "normalInit", "=", "dy", ".", "NormalInitializer", "(", "0", ",", "0.1", ")", "\n", "self", ".", "filters1", "=", "model", ".", "add_parameters", "(", "dim", "=", "(", "self", ".", "filter_height", "[", "0", "]", ",", "self", ".", "filter_width", "[", "0", "]", ",", "self", ".", "channels", "[", "0", "]", ",", "self", ".", "num_filters", "[", "0", "]", ")", ",", "\n", "init", "=", "normalInit", ")", "\n", "self", ".", "filters2", "=", "model", ".", "add_parameters", "(", "dim", "=", "(", "self", ".", "filter_height", "[", "1", "]", ",", "self", ".", "filter_width", "[", "1", "]", ",", "self", ".", "channels", "[", "1", "]", ",", "self", ".", "num_filters", "[", "1", "]", ")", ",", "\n", "init", "=", "normalInit", ")", "\n", "self", ".", "filters3", "=", "model", ".", "add_parameters", "(", "dim", "=", "(", "self", ".", "filter_height", "[", "2", "]", ",", "self", ".", "filter_width", "[", "2", "]", ",", "self", ".", "channels", "[", "2", "]", ",", "self", ".", "num_filters", "[", "2", "]", ")", ",", "\n", "init", "=", "normalInit", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.tilburg_harwath.HarwathSpeechSeqTransducer.transduce": [[140, 167], ["padding.as_tensor", "tilburg_harwath.padding", "dynet.rectify", "dynet.maxpooling2d", "tilburg_harwath.padding", "dynet.rectify", "dynet.maxpooling2d", "tilburg_harwath.padding", "dynet.rectify", "dynet.max_dim", "dynet.cdiv", "dynet.reshape", "xnmt.expression_seqs.ExpressionSequence", "padding.dim", "dynet.conv2d", "dynet.conv2d", "dynet.conv2d", "dynet.l2_norm", "padding.dim", "padding.dim", "dynet.parameter", "dynet.parameter", "dynet.parameter"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.tilburg_harwath.padding", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.tilburg_harwath.padding", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.tilburg_harwath.padding", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["", "def", "transduce", "(", "self", ",", "src", ":", "ExpressionSequence", ")", "->", "ExpressionSequence", ":", "\n", "    ", "src", "=", "src", ".", "as_tensor", "(", ")", "\n", "\n", "src_height", "=", "src", ".", "dim", "(", ")", "[", "0", "]", "[", "0", "]", "\n", "src_width", "=", "src", ".", "dim", "(", ")", "[", "0", "]", "[", "1", "]", "\n", "# src_channels = 1", "\n", "batch_size", "=", "src", ".", "dim", "(", ")", "[", "1", "]", "\n", "\n", "# convolution and pooling layers", "\n", "# src dim is ((40, 1000), 128)", "\n", "src", "=", "padding", "(", "src", ",", "self", ".", "filter_width", "[", "0", "]", "+", "3", ")", "\n", "l1", "=", "dy", ".", "rectify", "(", "dy", ".", "conv2d", "(", "src", ",", "dy", ".", "parameter", "(", "self", ".", "filters1", ")", ",", "stride", "=", "[", "self", ".", "stride", "[", "0", "]", ",", "self", ".", "stride", "[", "0", "]", "]", ",", "is_valid", "=", "True", ")", ")", "# ((1, 1000, 64), 128)", "\n", "pool1", "=", "dy", ".", "maxpooling2d", "(", "l1", ",", "(", "1", ",", "4", ")", ",", "(", "1", ",", "2", ")", ",", "is_valid", "=", "True", ")", "#((1, 499, 64), 128)", "\n", "\n", "pool1", "=", "padding", "(", "pool1", ",", "self", ".", "filter_width", "[", "1", "]", "+", "3", ")", "\n", "l2", "=", "dy", ".", "rectify", "(", "dy", ".", "conv2d", "(", "pool1", ",", "dy", ".", "parameter", "(", "self", ".", "filters2", ")", ",", "stride", "=", "[", "self", ".", "stride", "[", "1", "]", ",", "self", ".", "stride", "[", "1", "]", "]", ",", "is_valid", "=", "True", ")", ")", "# ((1, 499, 512), 128)", "\n", "pool2", "=", "dy", ".", "maxpooling2d", "(", "l2", ",", "(", "1", ",", "4", ")", ",", "(", "1", ",", "2", ")", ",", "is_valid", "=", "True", ")", "#((1, 248, 512), 128)", "\n", "\n", "pool2", "=", "padding", "(", "pool2", ",", "self", ".", "filter_width", "[", "2", "]", ")", "\n", "l3", "=", "dy", ".", "rectify", "(", "dy", ".", "conv2d", "(", "pool2", ",", "dy", ".", "parameter", "(", "self", ".", "filters3", ")", ",", "stride", "=", "[", "self", ".", "stride", "[", "2", "]", ",", "self", ".", "stride", "[", "2", "]", "]", ",", "is_valid", "=", "True", ")", ")", "# ((1, 248, 1024), 128)", "\n", "pool3", "=", "dy", ".", "max_dim", "(", "l3", ",", "d", "=", "1", ")", "\n", "\n", "my_norm", "=", "dy", ".", "l2_norm", "(", "pool3", ")", "+", "1e-6", "\n", "output", "=", "dy", ".", "cdiv", "(", "pool3", ",", "my_norm", ")", "\n", "output", "=", "dy", ".", "reshape", "(", "output", ",", "(", "self", ".", "num_filters", "[", "2", "]", ",", ")", ",", "batch_size", "=", "batch_size", ")", "\n", "\n", "return", "ExpressionSequence", "(", "expr_tensor", "=", "output", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.tilburg_harwath.HarwathImageTransducer.__init__": [[179, 195], ["xnmt.param_collections.ParamManager.my_params", "dynet.NormalInitializer", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.my_params"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "in_height", ",", "out_height", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n      num_layers: depth of the RNN\n      input_dim: size of the inputs\n      hidden_dim: size of the outputs (and intermediate RNN layer representations)\n      \"\"\"", "\n", "\n", "model", "=", "ParamManager", ".", "my_params", "(", "self", ")", "\n", "self", ".", "in_height", "=", "in_height", "\n", "self", ".", "out_height", "=", "out_height", "\n", "\n", "normalInit", "=", "dy", ".", "NormalInitializer", "(", "0", ",", "0.1", ")", "\n", "self", ".", "pW", "=", "model", ".", "add_parameters", "(", "dim", "=", "(", "self", ".", "out_height", ",", "self", ".", "in_height", ")", ",", "init", "=", "normalInit", ")", "\n", "self", ".", "pb", "=", "model", ".", "add_parameters", "(", "dim", "=", "self", ".", "out_height", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.tilburg_harwath.HarwathImageTransducer.transduce": [[196, 211], ["dynet.reshape.as_tensor", "dynet.parameter", "dynet.parameter", "dynet.reshape", "dynet.cdiv", "xnmt.expression_seqs.ExpressionSequence", "dynet.reshape.dim", "dynet.sqrt", "dynet.reshape.dim", "dynet.squared_norm"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["", "def", "transduce", "(", "self", ",", "src", ":", "ExpressionSequence", ")", "->", "ExpressionSequence", ":", "\n", "    ", "src", "=", "src", ".", "as_tensor", "(", ")", "\n", "\n", "src_height", "=", "src", ".", "dim", "(", ")", "[", "0", "]", "[", "0", "]", "\n", "src_width", "=", "1", "\n", "batch_size", "=", "src", ".", "dim", "(", ")", "[", "1", "]", "\n", "\n", "W", "=", "dy", ".", "parameter", "(", "self", ".", "pW", ")", "\n", "b", "=", "dy", ".", "parameter", "(", "self", ".", "pb", ")", "\n", "\n", "src", "=", "dy", ".", "reshape", "(", "src", ",", "(", "src_height", ",", "src_width", ")", ",", "batch_size", "=", "batch_size", ")", "# ((276, 80, 3), 1)", "\n", "# convolution and pooling layers", "\n", "l1", "=", "(", "W", "*", "src", ")", "+", "b", "\n", "output", "=", "dy", ".", "cdiv", "(", "l1", ",", "dy", ".", "sqrt", "(", "dy", ".", "squared_norm", "(", "l1", ")", ")", ")", "\n", "return", "ExpressionSequence", "(", "expr_tensor", "=", "output", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.tilburg_harwath.padding": [[12, 29], ["src.dim", "dynet.concatenate", "dynet.concatenate", "len", "int", "dynet.zeroes", "int", "dynet.zeroes", "dynet.zeroes"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["def", "padding", "(", "src", ",", "min_size", ")", ":", "\n", "  ", "\"\"\" do padding for the sequence input along the time step (for example speech), so that so that the output of convolutional layer has the same size(time) of the input.\n\n      note that for padding image(two dimensional padding), please refer to dyne.conv2d(..., is_valid = False)\n  \"\"\"", "\n", "# pad before put into convolutional layer", "\n", "src_dim", "=", "src", ".", "dim", "(", ")", "\n", "if", "src_dim", "[", "0", "]", "[", "1", "]", ">=", "min_size", ":", "\n", "    ", "return", "src", "\n", "", "pad_size", "=", "min_size", "-", "src_dim", "[", "0", "]", "[", "1", "]", "\n", "channels", "=", "src_dim", "[", "0", "]", "[", "2", "]", "if", "len", "(", "src_dim", "[", "0", "]", ")", ">=", "3", "else", "1", "\n", "if", "pad_size", "==", "1", ":", "\n", "    ", "return", "dy", ".", "concatenate", "(", "[", "src", ",", "dy", ".", "zeroes", "(", "(", "src_dim", "[", "0", "]", "[", "0", "]", ",", "1", ",", "channels", ")", ")", "]", ",", "d", "=", "1", ")", "\n", "", "else", ":", "\n", "    ", "left_border", "=", "int", "(", "pad_size", ")", "/", "2", "\n", "right_border", "=", "(", "int", "(", "pad_size", ")", "+", "1", ")", "/", "2", "\n", "return", "dy", ".", "concatenate", "(", "[", "dy", ".", "zeroes", "(", "(", "src_dim", "[", "0", "]", "[", "0", "]", ",", "left_border", ",", "channels", ")", ")", ",", "src", ",", "dy", ".", "zeroes", "(", "(", "src_dim", "[", "0", "]", "[", "0", "]", ",", "right_border", ",", "channels", ")", ")", "]", ",", "d", "=", "1", ")", "# do concatenate along cols", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.self_attentional_am.SAAMTimeDistributed.__call__": [[45, 61], ["len", "x.as_tensor", "dynet.reshape", "x[].dim", "x[].dim"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["def", "__call__", "(", "self", ",", "x", ":", "dy", ".", "Expression", ")", "->", "dy", ".", "Expression", ":", "\n", "    ", "\"\"\"\n    Move the time-dimension of an input expression into the batch dimension via a reshape.\n\n    Args:\n      x: expression of dimensions ((hidden, timesteps), batch_size)\n\n    Returns:\n      expression of dimensions ((hidden,), timesteps*batch_size)\n    \"\"\"", "\n", "batch_size", "=", "x", "[", "0", "]", ".", "dim", "(", ")", "[", "1", "]", "\n", "model_dim", "=", "x", "[", "0", "]", ".", "dim", "(", ")", "[", "0", "]", "[", "0", "]", "\n", "seq_len", "=", "len", "(", "x", ")", "\n", "total_words", "=", "seq_len", "*", "batch_size", "\n", "input_tensor", "=", "x", ".", "as_tensor", "(", ")", "\n", "return", "dy", ".", "reshape", "(", "input_tensor", ",", "(", "model_dim", ",", ")", ",", "batch_size", "=", "total_words", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.self_attentional_am.SAAMPositionwiseFeedForward.__init__": [[77, 88], ["self_attentional_am.SAAMPositionwiseFeedForward.SAAMPositionwiseFeedForward.add_serializable_component", "self_attentional_am.SAAMPositionwiseFeedForward.SAAMPositionwiseFeedForward.add_serializable_component", "getattr", "xnmt.norms.LayerNorm", "xnmt.modelparts.transforms.Linear", "xnmt.modelparts.transforms.Linear"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "input_dim", ":", "int", ",", "hidden_dim", ":", "int", ",", "nonlinearity", ":", "str", "=", "\"rectify\"", ",", "\n", "linear_transforms", ":", "typing", ".", "Optional", "[", "typing", ".", "Sequence", "[", "transforms", ".", "Linear", "]", "]", "=", "None", ",", "\n", "layer_norm", ":", "typing", ".", "Optional", "[", "norms", ".", "LayerNorm", "]", "=", "None", ")", "->", "None", ":", "\n", "    ", "w_12", "=", "self", ".", "add_serializable_component", "(", "\"linear_transforms\"", ",", "linear_transforms", ",", "\n", "lambda", ":", "[", "transforms", ".", "Linear", "(", "input_dim", ",", "hidden_dim", ")", ",", "\n", "transforms", ".", "Linear", "(", "hidden_dim", ",", "input_dim", ")", "]", ")", "\n", "self", ".", "w_1", "=", "w_12", "[", "0", "]", "\n", "self", ".", "w_2", "=", "w_12", "[", "1", "]", "\n", "self", ".", "layer_norm", "=", "self", ".", "add_serializable_component", "(", "\"layer_norm\"", ",", "layer_norm", ",", "lambda", ":", "norms", ".", "LayerNorm", "(", "input_dim", ")", ")", "\n", "self", ".", "nonlinearity", "=", "getattr", "(", "dy", ",", "nonlinearity", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.self_attentional_am.SAAMPositionwiseFeedForward.__call__": [[89, 95], ["self_attentional_am.SAAMPositionwiseFeedForward.SAAMPositionwiseFeedForward.w_2.transform", "self_attentional_am.SAAMPositionwiseFeedForward.SAAMPositionwiseFeedForward.layer_norm.transform", "self_attentional_am.SAAMPositionwiseFeedForward.SAAMPositionwiseFeedForward.nonlinearity", "dynet.dropout", "self_attentional_am.SAAMPositionwiseFeedForward.SAAMPositionwiseFeedForward.w_1.transform"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.DenseWordEmbedder.transform", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.DenseWordEmbedder.transform", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.DenseWordEmbedder.transform"], ["", "def", "__call__", "(", "self", ",", "x", ",", "p", ")", ":", "\n", "    ", "residual", "=", "x", "\n", "output", "=", "self", ".", "w_2", ".", "transform", "(", "self", ".", "nonlinearity", "(", "self", ".", "w_1", ".", "transform", "(", "x", ")", ")", ")", "\n", "if", "p", ">", "0.0", ":", "\n", "      ", "output", "=", "dy", ".", "dropout", "(", "output", ",", "p", ")", "\n", "", "return", "self", ".", "layer_norm", ".", "transform", "(", "output", "+", "residual", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.self_attentional_am.SAAMMultiHeadedSelfAttention.__init__": [[122, 204], ["xnmt.param_initializers.GlorotInitializer", "xnmt.param_initializers.ZeroInitializer", "xnmt.param_collections.ParamManager.my_params", "self_attentional_am.SAAMMultiHeadedSelfAttention.SAAMMultiHeadedSelfAttention.add_serializable_component", "self_attentional_am.SAAMMultiHeadedSelfAttention.SAAMMultiHeadedSelfAttention.add_serializable_component", "self_attentional_am.SAAMMultiHeadedSelfAttention.SAAMMultiHeadedSelfAttention.add_serializable_component", "self_attentional_am.SAAMMultiHeadedSelfAttention.SAAMMultiHeadedSelfAttention.add_serializable_component", "self_attentional_am.SAAMMultiHeadedSelfAttention.SAAMMultiHeadedSelfAttention.add_serializable_component", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters", "numpy.exp", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.norms.LayerNorm", "NotImplementedError", "xnmt.modelparts.transforms.Linear", "xnmt.modelparts.embedders.PositionEmbedder", "xnmt.modelparts.transforms.Linear", "dynet.NormalInitializer", "dynet.NormalInitializer", "xnmt.modelparts.transforms.Linear", "xnmt.modelparts.transforms.Linear", "numpy.random.random", "math.log", "dynet.NumpyInitializer", "dynet.ConstInitializer"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.my_params", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component"], ["@", "events", ".", "register_xnmt_handler", "\n", "@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "head_count", ":", "int", ",", "model_dim", ":", "int", ",", "downsample_factor", ":", "int", "=", "1", ",", "input_dim", ":", "int", "=", "None", ",", "\n", "ignore_masks", ":", "bool", "=", "False", ",", "plot_attention", ":", "typing", ".", "Optional", "[", "str", "]", "=", "None", ",", "\n", "diag_gauss_mask", ":", "typing", ".", "Union", "[", "bool", ",", "numbers", ".", "Real", "]", "=", "False", ",", "\n", "square_mask_std", ":", "bool", "=", "True", ",", "cross_pos_encoding_type", ":", "typing", ".", "Optional", "[", "str", "]", "=", "None", ",", "\n", "kq_pos_encoding_type", ":", "typing", ".", "Optional", "[", "str", "]", "=", "None", ",", "kq_pos_encoding_size", ":", "int", "=", "40", ",", "max_len", ":", "int", "=", "1500", ",", "\n", "param_init", ":", "xnmt", ".", "param_initializers", ".", "ParamInitializer", "=", "xnmt", ".", "param_initializers", ".", "GlorotInitializer", "(", ")", ",", "\n", "bias_init", ":", "xnmt", ".", "param_initializers", ".", "ParamInitializer", "=", "xnmt", ".", "param_initializers", ".", "ZeroInitializer", "(", ")", ",", "\n", "linear_kvq", "=", "None", ",", "kq_positional_embedder", "=", "None", ",", "layer_norm", "=", "None", ",", "res_shortcut", "=", "None", ",", "\n", "desc", ":", "typing", ".", "Any", "=", "None", ")", "->", "None", ":", "\n", "    ", "if", "input_dim", "is", "None", ":", "input_dim", "=", "model_dim", "\n", "self", ".", "input_dim", "=", "input_dim", "\n", "assert", "model_dim", "%", "head_count", "==", "0", "\n", "self", ".", "dim_per_head", "=", "model_dim", "//", "head_count", "\n", "self", ".", "model_dim", "=", "model_dim", "\n", "self", ".", "head_count", "=", "head_count", "\n", "assert", "downsample_factor", ">=", "1", "\n", "self", ".", "downsample_factor", "=", "downsample_factor", "\n", "self", ".", "plot_attention", "=", "plot_attention", "\n", "self", ".", "plot_attention_counter", "=", "0", "\n", "self", ".", "desc", "=", "desc", "\n", "\n", "self", ".", "ignore_masks", "=", "ignore_masks", "\n", "self", ".", "diag_gauss_mask", "=", "diag_gauss_mask", "\n", "self", ".", "square_mask_std", "=", "square_mask_std", "\n", "\n", "self", ".", "kq_pos_encoding_type", "=", "kq_pos_encoding_type", "\n", "self", ".", "kq_pos_encoding_size", "=", "kq_pos_encoding_size", "\n", "self", ".", "max_len", "=", "max_len", "\n", "\n", "subcol", "=", "param_collections", ".", "ParamManager", ".", "my_params", "(", "self", ")", "\n", "\n", "if", "self", ".", "kq_pos_encoding_type", "is", "None", ":", "\n", "      ", "self", ".", "linear_kvq", "=", "self", ".", "add_serializable_component", "(", "\"linear_kvq\"", ",", "linear_kvq", ",", "\n", "lambda", ":", "transforms", ".", "Linear", "(", "input_dim", "*", "downsample_factor", ",", "\n", "head_count", "*", "self", ".", "dim_per_head", "*", "3", ",", "\n", "param_init", "=", "param_init", ",", "\n", "bias_init", "=", "bias_init", ")", ")", "\n", "", "else", ":", "\n", "      ", "self", ".", "linear_kq", ",", "self", ".", "linear_v", "=", "self", ".", "add_serializable_component", "(", "\"linear_kvq\"", ",", "\n", "linear_kvq", ",", "\n", "lambda", ":", "[", "\n", "transforms", ".", "Linear", "(", "input_dim", "*", "downsample_factor", "+", "self", ".", "kq_pos_encoding_size", ",", "\n", "head_count", "*", "self", ".", "dim_per_head", "*", "2", ",", "param_init", "=", "param_init", ",", "\n", "bias_init", "=", "bias_init", ")", ",", "\n", "transforms", ".", "Linear", "(", "input_dim", "*", "downsample_factor", ",", "head_count", "*", "self", ".", "dim_per_head", ",", "\n", "param_init", "=", "param_init", ",", "bias_init", "=", "bias_init", ")", "]", ")", "\n", "assert", "self", ".", "kq_pos_encoding_type", "==", "\"embedding\"", "\n", "self", ".", "kq_positional_embedder", "=", "self", ".", "add_serializable_component", "(", "\"kq_positional_embedder\"", ",", "\n", "kq_positional_embedder", ",", "\n", "lambda", ":", "embedders", ".", "PositionEmbedder", "(", "\n", "max_pos", "=", "self", ".", "max_len", ",", "\n", "emb_dim", "=", "self", ".", "kq_pos_encoding_size", ",", "\n", "param_init", "=", "param_init", ")", ")", "\n", "\n", "", "if", "self", ".", "diag_gauss_mask", ":", "\n", "      ", "if", "self", ".", "diag_gauss_mask", "==", "\"rand\"", ":", "\n", "        ", "rand_init", "=", "np", ".", "exp", "(", "(", "np", ".", "random", ".", "random", "(", "size", "=", "(", "self", ".", "head_count", ",", ")", ")", ")", "*", "math", ".", "log", "(", "1000", ")", ")", "\n", "self", ".", "diag_gauss_mask_sigma", "=", "subcol", ".", "add_parameters", "(", "dim", "=", "(", "1", ",", "1", ",", "self", ".", "head_count", ")", ",", "\n", "init", "=", "dy", ".", "NumpyInitializer", "(", "rand_init", ")", ")", "\n", "", "else", ":", "\n", "        ", "self", ".", "diag_gauss_mask_sigma", "=", "subcol", ".", "add_parameters", "(", "dim", "=", "(", "1", ",", "1", ",", "self", ".", "head_count", ")", ",", "\n", "init", "=", "dy", ".", "ConstInitializer", "(", "self", ".", "diag_gauss_mask", ")", ")", "\n", "\n", "", "", "self", ".", "layer_norm", "=", "self", ".", "add_serializable_component", "(", "\"layer_norm\"", ",", "layer_norm", ",", "lambda", ":", "norms", ".", "LayerNorm", "(", "model_dim", ")", ")", "\n", "\n", "if", "model_dim", "!=", "input_dim", "*", "downsample_factor", ":", "\n", "      ", "self", ".", "res_shortcut", "=", "self", ".", "add_serializable_component", "(", "\"res_shortcut\"", ",", "res_shortcut", ",", "\n", "lambda", ":", "transforms", ".", "Linear", "(", "input_dim", "*", "downsample_factor", ",", "\n", "model_dim", ",", "\n", "param_init", "=", "param_init", ",", "\n", "bias_init", "=", "bias_init", ")", ")", "\n", "", "self", ".", "cross_pos_encoding_type", "=", "cross_pos_encoding_type", "\n", "if", "cross_pos_encoding_type", "==", "\"embedding\"", ":", "\n", "      ", "self", ".", "cross_pos_emb_p1", "=", "subcol", ".", "add_parameters", "(", "dim", "=", "(", "self", ".", "max_len", ",", "self", ".", "dim_per_head", ",", "self", ".", "head_count", ")", ",", "\n", "init", "=", "dy", ".", "NormalInitializer", "(", "mean", "=", "1.0", ",", "var", "=", "0.001", ")", ")", "\n", "self", ".", "cross_pos_emb_p2", "=", "subcol", ".", "add_parameters", "(", "dim", "=", "(", "self", ".", "max_len", ",", "self", ".", "dim_per_head", ",", "self", ".", "head_count", ")", ",", "\n", "init", "=", "dy", ".", "NormalInitializer", "(", "mean", "=", "1.0", ",", "var", "=", "0.001", ")", ")", "\n", "", "elif", "cross_pos_encoding_type", "is", "not", "None", ":", "\n", "      ", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.self_attentional_am.SAAMMultiHeadedSelfAttention.plot_att_mat": [[205, 213], ["matplotlib.figure", "matplotlib.figure", "matplotlib.figure.add_subplot", "plt.figure.add_subplot.matshow", "plt.figure.add_subplot.set_aspect", "matplotlib.figure.savefig", "matplotlib.figure.clf", "matplotlib.close", "matplotlib.close"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.close", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.close"], ["", "", "def", "plot_att_mat", "(", "self", ",", "mat", ",", "filename", ",", "dpi", "=", "1200", ")", ":", "\n", "    ", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "ax", "=", "fig", ".", "add_subplot", "(", "111", ")", "\n", "ax", ".", "matshow", "(", "mat", ")", "\n", "ax", ".", "set_aspect", "(", "'auto'", ")", "\n", "fig", ".", "savefig", "(", "filename", ",", "dpi", "=", "dpi", ")", "\n", "fig", ".", "clf", "(", ")", "\n", "plt", ".", "close", "(", "'all'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.self_attentional_am.SAAMMultiHeadedSelfAttention.shape_projection": [[214, 220], ["dynet.reshape", "dynet.transpose", "dynet.reshape", "x.dim"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["", "def", "shape_projection", "(", "self", ",", "x", ",", "batch_size", ")", ":", "\n", "    ", "total_words", "=", "x", ".", "dim", "(", ")", "[", "1", "]", "\n", "seq_len", "=", "total_words", "/", "batch_size", "\n", "out", "=", "dy", ".", "reshape", "(", "x", ",", "(", "self", ".", "model_dim", ",", "seq_len", ")", ",", "batch_size", "=", "batch_size", ")", "\n", "out", "=", "dy", ".", "transpose", "(", "out", ")", "\n", "return", "dy", ".", "reshape", "(", "out", ",", "(", "seq_len", ",", "self", ".", "dim_per_head", ")", ",", "batch_size", "=", "batch_size", "*", "self", ".", "head_count", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.self_attentional_am.SAAMMultiHeadedSelfAttention.__call__": [[221, 379], ["dynet.softmax", "dynet.reshape", "dynet.transpose", "dynet.reshape", "self_attentional_am.SAAMMultiHeadedSelfAttention.SAAMMultiHeadedSelfAttention.layer_norm.transform", "x[].dim", "xnmt.expression_seqs.ExpressionSequence", "self_attentional_am.SAAMMultiHeadedSelfAttention.SAAMMultiHeadedSelfAttention.res_shortcut.transform", "self_attentional_am.SAAMMultiHeadedSelfAttention.SAAMMultiHeadedSelfAttention.linear_kvq.transform", "self_attentional_am.SAAMMultiHeadedSelfAttention.SAAMMultiHeadedSelfAttention.shape_projection", "self_attentional_am.SAAMMultiHeadedSelfAttention.SAAMMultiHeadedSelfAttention.shape_projection", "self_attentional_am.SAAMMultiHeadedSelfAttention.SAAMMultiHeadedSelfAttention.shape_projection", "self_attentional_am.SAAMMultiHeadedSelfAttention.SAAMMultiHeadedSelfAttention.kq_positional_embedder.embed_sent().as_tensor", "self_attentional_am.SAAMMultiHeadedSelfAttention.SAAMMultiHeadedSelfAttention.linear_kq.transform", "self_attentional_am.SAAMMultiHeadedSelfAttention.SAAMMultiHeadedSelfAttention.shape_projection", "self_attentional_am.SAAMMultiHeadedSelfAttention.SAAMMultiHeadedSelfAttention.shape_projection", "self_attentional_am.SAAMMultiHeadedSelfAttention.SAAMMultiHeadedSelfAttention.linear_v.transform", "self_attentional_am.SAAMMultiHeadedSelfAttention.SAAMMultiHeadedSelfAttention.shape_projection", "dynet.pick_range", "dynet.pick_range", "dynet.reshape", "dynet.concatenate_cols", "dynet.reshape", "dynet.reshape", "dynet.concatenate_cols", "dynet.reshape", "dynet.transpose", "yaml_logger.info", "yaml_logger.info", "yaml_logger.info", "yaml_logger.info", "dynet.reshape", "numpy.zeros", "dynet.cmult", "dynet.reshape", "dynet.dropout", "range", "numpy.average", "self_attentional_am.SAAMMultiHeadedSelfAttention.SAAMMultiHeadedSelfAttention.plot_att_mat", "cosine_similarity", "self_attentional_am.SAAMMultiHeadedSelfAttention.SAAMMultiHeadedSelfAttention.plot_att_mat", "cosine_similarity", "self_attentional_am.SAAMMultiHeadedSelfAttention.SAAMMultiHeadedSelfAttention.plot_att_mat", "xnmt.expression_seqs.ExpressionSequence.dim", "ValueError", "out_mask.lin_subsampled.lin_subsampled.lin_subsampled", "self_attentional_am.SAAMMultiHeadedSelfAttention.SAAMTimeDistributed", "self_attentional_am.SAAMMultiHeadedSelfAttention.SAAMTimeDistributed", "dynet.pick_range", "dynet.pick_range", "dynet.pick_range", "dynet.pick_range", "dynet.pick_range", "dynet.parameter", "dynet.parameter", "dynet.inputTensor", "dynet.inputTensor", "numpy.zeros", "range", "dynet.inputTensor", "dynet.parameter", "dynet.cdiv", "dynet.cmult", "dynet.reshape", "dynet.inputTensor", "mats.append", "self_attentional_am.SAAMMultiHeadedSelfAttention.SAAMMultiHeadedSelfAttention.plot_att_mat", "dynet.dropout", "dynet.reshape", "self_attentional_am.SAAMMultiHeadedSelfAttention.SAAMTimeDistributed", "self_attentional_am.SAAMMultiHeadedSelfAttention.SAAMMultiHeadedSelfAttention.kq_positional_embedder.embed_sent", "self_attentional_am.SAAMMultiHeadedSelfAttention.SAAMTimeDistributed", "xnmt.expression_seqs.ExpressionSequence", "self_attentional_am.SAAMMultiHeadedSelfAttention.SAAMTimeDistributed", "dynet.cmult", "dynet.cmult", "dynet.cmult", "dynet.cmult", "math.sqrt", "numpy.resize", "range", "dynet.square", "dynet.ones", "dynet.square", "numpy.average().dumps", "numpy.average().dumps", "scipy.stats.entropy().dumps", "scipy.stats.entropy().dumps", "dynet.reshape.dim", "dynet.pick_batch_elem().npvalue", "xnmt.expression_seqs.ExpressionSequence.as_tensor().npvalue", "dynet.reshape.npvalue", "xnmt.expression_seqs.ExpressionSequence.as_tensor", "numpy.broadcast_to", "dynet.concatenate", "dynet.square.dim", "numpy.average", "numpy.average", "scipy.stats.entropy", "scipy.stats.entropy", "dynet.pick_batch_elem", "xnmt.expression_seqs.ExpressionSequence.as_tensor", "dynet.reshape.value", "dynet.reshape.value", "dynet.reshape.value", "dynet.reshape.value().transpose", "xnmt.expression_seqs.ExpressionSequence.as_tensor", "xnmt.expression_seqs.ExpressionSequence.dim", "xnmt.expression_seqs.ExpressionSequence.dim", "dynet.reshape.value"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.DenseWordEmbedder.transform", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.DenseWordEmbedder.transform", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.DenseWordEmbedder.transform", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.self_attentional_am.SAAMMultiHeadedSelfAttention.shape_projection", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.self_attentional_am.SAAMMultiHeadedSelfAttention.shape_projection", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.self_attentional_am.SAAMMultiHeadedSelfAttention.shape_projection", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.DenseWordEmbedder.transform", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.self_attentional_am.SAAMMultiHeadedSelfAttention.shape_projection", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.self_attentional_am.SAAMMultiHeadedSelfAttention.shape_projection", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.DenseWordEmbedder.transform", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.self_attentional_am.SAAMMultiHeadedSelfAttention.shape_projection", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.self_attentional_am.SAAMMultiHeadedSelfAttention.plot_att_mat", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.self_attentional_am.SAAMMultiHeadedSelfAttention.plot_att_mat", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.self_attentional_am.SAAMMultiHeadedSelfAttention.plot_att_mat", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.lin_subsampled", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.self_attentional_am.SAAMMultiHeadedSelfAttention.plot_att_mat", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.embed_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value"], ["", "def", "__call__", "(", "self", ",", "x", ":", "dy", ".", "Expression", ",", "att_mask", ":", "np", ".", "ndarray", ",", "batch_mask", ":", "np", ".", "ndarray", ",", "p", ":", "numbers", ".", "Real", ")", ":", "\n", "    ", "\"\"\"\n    x: expression of dimensions (input_dim, time) x batch\n    att_mask: numpy array of dimensions (time, time); pre-transposed\n    batch_mask: numpy array of dimensions (batch, time)\n    p: dropout prob\n    \"\"\"", "\n", "sent_len", "=", "x", ".", "dim", "(", ")", "[", "0", "]", "[", "1", "]", "\n", "batch_size", "=", "x", "[", "0", "]", ".", "dim", "(", ")", "[", "1", "]", "\n", "\n", "if", "self", ".", "downsample_factor", ">", "1", ":", "\n", "      ", "if", "sent_len", "%", "self", ".", "downsample_factor", "!=", "0", ":", "\n", "        ", "raise", "ValueError", "(", "\n", "\"For 'reshape' downsampling, sequence lengths must be multiples of the downsampling factor. \"", "\n", "\"Configure batcher accordingly.\"", ")", "\n", "", "if", "batch_mask", "is", "not", "None", ":", "batch_mask", "=", "batch_mask", "[", ":", ",", ":", ":", "self", ".", "downsample_factor", "]", "\n", "sent_len_out", "=", "sent_len", "//", "self", ".", "downsample_factor", "\n", "sent_len", "=", "sent_len_out", "\n", "out_mask", "=", "x", ".", "mask", "\n", "if", "self", ".", "downsample_factor", ">", "1", "and", "out_mask", "is", "not", "None", ":", "\n", "        ", "out_mask", "=", "out_mask", ".", "lin_subsampled", "(", "reduce_factor", "=", "self", ".", "downsample_factor", ")", "\n", "\n", "", "x", "=", "ExpressionSequence", "(", "expr_tensor", "=", "dy", ".", "reshape", "(", "x", ".", "as_tensor", "(", ")", ",", "(", "\n", "x", ".", "dim", "(", ")", "[", "0", "]", "[", "0", "]", "*", "self", ".", "downsample_factor", ",", "x", ".", "dim", "(", ")", "[", "0", "]", "[", "1", "]", "/", "self", ".", "downsample_factor", ")", ",", "batch_size", "=", "batch_size", ")", ",", "\n", "mask", "=", "out_mask", ")", "\n", "residual", "=", "SAAMTimeDistributed", "(", ")", "(", "x", ")", "\n", "", "else", ":", "\n", "      ", "residual", "=", "SAAMTimeDistributed", "(", ")", "(", "x", ")", "\n", "sent_len_out", "=", "sent_len", "\n", "", "if", "self", ".", "model_dim", "!=", "self", ".", "input_dim", "*", "self", ".", "downsample_factor", ":", "\n", "      ", "residual", "=", "self", ".", "res_shortcut", ".", "transform", "(", "residual", ")", "\n", "\n", "# Concatenate all the words together for doing vectorized affine transform", "\n", "", "if", "self", ".", "kq_pos_encoding_type", "is", "None", ":", "\n", "      ", "kvq_lin", "=", "self", ".", "linear_kvq", ".", "transform", "(", "SAAMTimeDistributed", "(", ")", "(", "x", ")", ")", "\n", "key_up", "=", "self", ".", "shape_projection", "(", "dy", ".", "pick_range", "(", "kvq_lin", ",", "0", ",", "self", ".", "head_count", "*", "self", ".", "dim_per_head", ")", ",", "batch_size", ")", "\n", "value_up", "=", "self", ".", "shape_projection", "(", "\n", "dy", ".", "pick_range", "(", "kvq_lin", ",", "self", ".", "head_count", "*", "self", ".", "dim_per_head", ",", "2", "*", "self", ".", "head_count", "*", "self", ".", "dim_per_head", ")", ",", "\n", "batch_size", ")", "\n", "query_up", "=", "self", ".", "shape_projection", "(", "\n", "dy", ".", "pick_range", "(", "kvq_lin", ",", "2", "*", "self", ".", "head_count", "*", "self", ".", "dim_per_head", ",", "3", "*", "self", ".", "head_count", "*", "self", ".", "dim_per_head", ")", ",", "\n", "batch_size", ")", "\n", "", "else", ":", "\n", "      ", "assert", "self", ".", "kq_pos_encoding_type", "==", "\"embedding\"", "\n", "encoding", "=", "self", ".", "kq_positional_embedder", ".", "embed_sent", "(", "sent_len", ")", ".", "as_tensor", "(", ")", "\n", "kq_lin", "=", "self", ".", "linear_kq", ".", "transform", "(", "\n", "SAAMTimeDistributed", "(", ")", "(", "\n", "ExpressionSequence", "(", "expr_tensor", "=", "dy", ".", "concatenate", "(", "[", "x", ".", "as_tensor", "(", ")", ",", "encoding", "]", ")", ")", ")", ")", "\n", "key_up", "=", "self", ".", "shape_projection", "(", "dy", ".", "pick_range", "(", "kq_lin", ",", "0", ",", "self", ".", "head_count", "*", "self", ".", "dim_per_head", ")", ",", "batch_size", ")", "\n", "query_up", "=", "self", ".", "shape_projection", "(", "\n", "dy", ".", "pick_range", "(", "kq_lin", ",", "self", ".", "head_count", "*", "self", ".", "dim_per_head", ",", "2", "*", "self", ".", "head_count", "*", "self", ".", "dim_per_head", ")", ",", "batch_size", ")", "\n", "v_lin", "=", "self", ".", "linear_v", ".", "transform", "(", "SAAMTimeDistributed", "(", ")", "(", "x", ")", ")", "\n", "value_up", "=", "self", ".", "shape_projection", "(", "v_lin", ",", "batch_size", ")", "\n", "\n", "", "if", "self", ".", "cross_pos_encoding_type", ":", "\n", "      ", "assert", "self", ".", "cross_pos_encoding_type", "==", "\"embedding\"", "\n", "emb1", "=", "dy", ".", "pick_range", "(", "dy", ".", "parameter", "(", "self", ".", "cross_pos_emb_p1", ")", ",", "0", ",", "sent_len", ")", "\n", "emb2", "=", "dy", ".", "pick_range", "(", "dy", ".", "parameter", "(", "self", ".", "cross_pos_emb_p2", ")", ",", "0", ",", "sent_len", ")", "\n", "key_up", "=", "dy", ".", "reshape", "(", "key_up", ",", "(", "sent_len", ",", "self", ".", "dim_per_head", ",", "self", ".", "head_count", ")", ",", "batch_size", "=", "batch_size", ")", "\n", "key_up", "=", "dy", ".", "concatenate_cols", "(", "[", "dy", ".", "cmult", "(", "key_up", ",", "emb1", ")", ",", "dy", ".", "cmult", "(", "key_up", ",", "emb2", ")", "]", ")", "\n", "key_up", "=", "dy", ".", "reshape", "(", "key_up", ",", "(", "sent_len", ",", "self", ".", "dim_per_head", "*", "2", ")", ",", "batch_size", "=", "self", ".", "head_count", "*", "batch_size", ")", "\n", "query_up", "=", "dy", ".", "reshape", "(", "query_up", ",", "(", "sent_len", ",", "self", ".", "dim_per_head", ",", "self", ".", "head_count", ")", ",", "batch_size", "=", "batch_size", ")", "\n", "query_up", "=", "dy", ".", "concatenate_cols", "(", "[", "dy", ".", "cmult", "(", "query_up", ",", "emb2", ")", ",", "dy", ".", "cmult", "(", "query_up", ",", "-", "emb1", ")", "]", ")", "\n", "query_up", "=", "dy", ".", "reshape", "(", "query_up", ",", "(", "sent_len", ",", "self", ".", "dim_per_head", "*", "2", ")", ",", "batch_size", "=", "self", ".", "head_count", "*", "batch_size", ")", "\n", "\n", "", "scaled", "=", "query_up", "*", "dy", ".", "transpose", "(", "\n", "key_up", "/", "math", ".", "sqrt", "(", "self", ".", "dim_per_head", ")", ")", "# scale before the matrix multiplication to save memory", "\n", "\n", "# Apply Mask here", "\n", "if", "not", "self", ".", "ignore_masks", ":", "\n", "      ", "if", "att_mask", "is", "not", "None", ":", "\n", "        ", "att_mask_inp", "=", "att_mask", "*", "-", "100.0", "\n", "if", "self", ".", "downsample_factor", ">", "1", ":", "\n", "          ", "att_mask_inp", "=", "att_mask_inp", "[", ":", ":", "self", ".", "downsample_factor", ",", ":", ":", "self", ".", "downsample_factor", "]", "\n", "", "scaled", "+=", "dy", ".", "inputTensor", "(", "att_mask_inp", ")", "\n", "", "if", "batch_mask", "is", "not", "None", ":", "\n", "# reshape (batch, time) -> (time, head_count*batch), then *-100", "\n", "        ", "inp", "=", "np", ".", "resize", "(", "np", ".", "broadcast_to", "(", "batch_mask", ".", "T", "[", ":", ",", "np", ".", "newaxis", ",", ":", "]", ",", "\n", "(", "sent_len", ",", "self", ".", "head_count", ",", "batch_size", ")", ")", ",", "\n", "(", "1", ",", "sent_len", ",", "self", ".", "head_count", "*", "batch_size", ")", ")", "*", "-", "100", "\n", "mask_expr", "=", "dy", ".", "inputTensor", "(", "inp", ",", "batched", "=", "True", ")", "\n", "scaled", "+=", "mask_expr", "\n", "", "if", "self", ".", "diag_gauss_mask", ":", "\n", "        ", "diag_growing", "=", "np", ".", "zeros", "(", "(", "sent_len", ",", "sent_len", ",", "self", ".", "head_count", ")", ")", "\n", "for", "i", "in", "range", "(", "sent_len", ")", ":", "\n", "          ", "for", "j", "in", "range", "(", "sent_len", ")", ":", "\n", "            ", "diag_growing", "[", "i", ",", "j", ",", ":", "]", "=", "-", "(", "i", "-", "j", ")", "**", "2", "/", "2.0", "\n", "", "", "e_diag_gauss_mask", "=", "dy", ".", "inputTensor", "(", "diag_growing", ")", "\n", "e_sigma", "=", "dy", ".", "parameter", "(", "self", ".", "diag_gauss_mask_sigma", ")", "\n", "if", "self", ".", "square_mask_std", ":", "\n", "          ", "e_sigma", "=", "dy", ".", "square", "(", "e_sigma", ")", "\n", "", "e_sigma_sq_inv", "=", "dy", ".", "cdiv", "(", "dy", ".", "ones", "(", "e_sigma", ".", "dim", "(", ")", "[", "0", "]", ",", "batch_size", "=", "batch_size", ")", ",", "dy", ".", "square", "(", "e_sigma", ")", ")", "\n", "e_diag_gauss_mask_final", "=", "dy", ".", "cmult", "(", "e_diag_gauss_mask", ",", "e_sigma_sq_inv", ")", "\n", "scaled", "+=", "dy", ".", "reshape", "(", "e_diag_gauss_mask_final", ",", "(", "sent_len", ",", "sent_len", ")", ",", "batch_size", "=", "batch_size", "*", "self", ".", "head_count", ")", "\n", "\n", "# Computing Softmax here.", "\n", "", "", "attn", "=", "dy", ".", "softmax", "(", "scaled", ",", "d", "=", "1", ")", "\n", "if", "LOG_ATTENTION", ":", "\n", "      ", "yaml_logger", ".", "info", "(", "{", "\"key\"", ":", "\"selfatt_mat_ax0\"", ",", "\"value\"", ":", "np", ".", "average", "(", "attn", ".", "value", "(", ")", ",", "axis", "=", "0", ")", ".", "dumps", "(", ")", ",", "\"desc\"", ":", "self", ".", "desc", "}", ")", "\n", "yaml_logger", ".", "info", "(", "{", "\"key\"", ":", "\"selfatt_mat_ax1\"", ",", "\"value\"", ":", "np", ".", "average", "(", "attn", ".", "value", "(", ")", ",", "axis", "=", "1", ")", ".", "dumps", "(", ")", ",", "\"desc\"", ":", "self", ".", "desc", "}", ")", "\n", "yaml_logger", ".", "info", "(", "{", "\"key\"", ":", "\"selfatt_mat_ax0_ent\"", ",", "\"value\"", ":", "entropy", "(", "attn", ".", "value", "(", ")", ")", ".", "dumps", "(", ")", ",", "\"desc\"", ":", "self", ".", "desc", "}", ")", "\n", "yaml_logger", ".", "info", "(", "\n", "{", "\"key\"", ":", "\"selfatt_mat_ax1_ent\"", ",", "\"value\"", ":", "entropy", "(", "attn", ".", "value", "(", ")", ".", "transpose", "(", ")", ")", ".", "dumps", "(", ")", ",", "\"desc\"", ":", "self", ".", "desc", "}", ")", "\n", "\n", "", "self", ".", "select_att_head", "=", "0", "\n", "if", "self", ".", "select_att_head", "is", "not", "None", ":", "\n", "      ", "attn", "=", "dy", ".", "reshape", "(", "attn", ",", "(", "sent_len", ",", "sent_len", ",", "self", ".", "head_count", ")", ",", "batch_size", "=", "batch_size", ")", "\n", "sel_mask", "=", "np", ".", "zeros", "(", "(", "1", ",", "1", ",", "self", ".", "head_count", ")", ")", "\n", "sel_mask", "[", "0", ",", "0", ",", "self", ".", "select_att_head", "]", "=", "1.0", "\n", "attn", "=", "dy", ".", "cmult", "(", "attn", ",", "dy", ".", "inputTensor", "(", "sel_mask", ")", ")", "\n", "attn", "=", "dy", ".", "reshape", "(", "attn", ",", "(", "sent_len", ",", "sent_len", ")", ",", "batch_size", "=", "self", ".", "head_count", "*", "batch_size", ")", "\n", "\n", "# Applying dropout to attention", "\n", "", "if", "p", ">", "0.0", ":", "\n", "      ", "drop_attn", "=", "dy", ".", "dropout", "(", "attn", ",", "p", ")", "\n", "", "else", ":", "\n", "      ", "drop_attn", "=", "attn", "\n", "\n", "# Computing weighted attention score", "\n", "", "attn_prod", "=", "drop_attn", "*", "value_up", "\n", "\n", "# Reshaping the attn_prod to input query dimensions", "\n", "out", "=", "dy", ".", "reshape", "(", "attn_prod", ",", "(", "sent_len_out", ",", "self", ".", "dim_per_head", "*", "self", ".", "head_count", ")", ",", "batch_size", "=", "batch_size", ")", "\n", "out", "=", "dy", ".", "transpose", "(", "out", ")", "\n", "out", "=", "dy", ".", "reshape", "(", "out", ",", "(", "self", ".", "model_dim", ",", ")", ",", "batch_size", "=", "batch_size", "*", "sent_len_out", ")", "\n", "#     out = dy.reshape_transpose_reshape(attn_prod, (sent_len_out, self.dim_per_head * self.head_count), (self.model_dim,), pre_batch_size=batch_size, post_batch_size=batch_size*sent_len_out)", "\n", "\n", "if", "self", ".", "plot_attention", ":", "\n", "      ", "from", "sklearn", ".", "metrics", ".", "pairwise", "import", "cosine_similarity", "\n", "assert", "batch_size", "==", "1", "\n", "mats", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "attn", ".", "dim", "(", ")", "[", "1", "]", ")", ":", "\n", "        ", "mats", ".", "append", "(", "dy", ".", "pick_batch_elem", "(", "attn", ",", "i", ")", ".", "npvalue", "(", ")", ")", "\n", "self", ".", "plot_att_mat", "(", "mats", "[", "-", "1", "]", ",", "\n", "\"{}.sent_{}.head_{}.png\"", ".", "format", "(", "self", ".", "plot_attention", ",", "self", ".", "plot_attention_counter", ",", "i", ")", ",", "\n", "300", ")", "\n", "", "avg_mat", "=", "np", ".", "average", "(", "mats", ",", "axis", "=", "0", ")", "\n", "self", ".", "plot_att_mat", "(", "avg_mat", ",", "\n", "\"{}.sent_{}.head_avg.png\"", ".", "format", "(", "self", ".", "plot_attention", ",", "self", ".", "plot_attention_counter", ")", ",", "\n", "300", ")", "\n", "cosim_before", "=", "cosine_similarity", "(", "x", ".", "as_tensor", "(", ")", ".", "npvalue", "(", ")", ".", "T", ")", "\n", "self", ".", "plot_att_mat", "(", "cosim_before", ",", "\n", "\"{}.sent_{}.cosim_before.png\"", ".", "format", "(", "self", ".", "plot_attention", ",", "self", ".", "plot_attention_counter", ")", ",", "\n", "600", ")", "\n", "cosim_after", "=", "cosine_similarity", "(", "out", ".", "npvalue", "(", ")", ".", "T", ")", "\n", "self", ".", "plot_att_mat", "(", "cosim_after", ",", "\n", "\"{}.sent_{}.cosim_after.png\"", ".", "format", "(", "self", ".", "plot_attention", ",", "self", ".", "plot_attention_counter", ")", ",", "\n", "600", ")", "\n", "self", ".", "plot_attention_counter", "+=", "1", "\n", "\n", "# Adding dropout and layer normalization", "\n", "", "if", "p", ">", "0.0", ":", "\n", "      ", "res", "=", "dy", ".", "dropout", "(", "out", ",", "p", ")", "+", "residual", "\n", "", "else", ":", "\n", "      ", "res", "=", "out", "+", "residual", "\n", "", "ret", "=", "self", ".", "layer_norm", ".", "transform", "(", "res", ")", "\n", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.self_attentional_am.SAAMMultiHeadedSelfAttention.on_new_epoch": [[380, 385], ["yaml_logger.info", "float", "list", "self_attentional_am.SAAMMultiHeadedSelfAttention.SAAMMultiHeadedSelfAttention.diag_gauss_mask_sigma.as_array"], "methods", ["None"], ["", "@", "events", ".", "handle_xnmt_event", "\n", "def", "on_new_epoch", "(", "self", ",", "training_task", ",", "num_sents", ")", ":", "\n", "    ", "yaml_logger", ".", "info", "(", "\n", "{", "\"key\"", ":", "\"self_att_mask_var: \"", ",", "\"val\"", ":", "[", "float", "(", "x", ")", "for", "x", "in", "list", "(", "self", ".", "diag_gauss_mask_sigma", ".", "as_array", "(", ")", ".", "flat", ")", "]", ",", "\n", "\"desc\"", ":", "self", ".", "desc", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.self_attentional_am.TransformerEncoderLayer.__init__": [[389, 434], ["xnmt.persistence.Ref", "xnmt.persistence.Ref", "self_attentional_am.TransformerEncoderLayer.TransformerEncoderLayer.add_serializable_component", "self_attentional_am.TransformerEncoderLayer.TransformerEncoderLayer.add_serializable_component", "self_attentional_am.TransformerEncoderLayer.TransformerEncoderLayer.add_serializable_component", "xnmt.persistence.bare", "xnmt.persistence.bare", "self_attentional_am.TransformerEncoderLayer.SAAMMultiHeadedSelfAttention", "xnmt.transducers.recurrent.BiLSTMSeqTransducer", "self_attentional_am.TransformerEncoderLayer.SAAMPositionwiseFeedForward"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "hidden_dim", ",", "head_count", "=", "8", ",", "ff_hidden_dim", "=", "2048", ",", "downsample_factor", "=", "1", ",", "\n", "input_dim", "=", "None", ",", "diagonal_mask_width", "=", "None", ",", "ignore_masks", "=", "False", ",", "\n", "plot_attention", "=", "None", ",", "nonlinearity", "=", "\"rectify\"", ",", "diag_gauss_mask", "=", "False", ",", "\n", "square_mask_std", "=", "True", ",", "cross_pos_encoding_type", "=", "None", ",", "\n", "ff_lstm", "=", "False", ",", "kq_pos_encoding_type", "=", "None", ",", "kq_pos_encoding_size", "=", "40", ",", "max_len", "=", "1500", ",", "\n", "param_init", "=", "Ref", "(", "\"exp_global.param_init\"", ",", "default", "=", "bare", "(", "xnmt", ".", "param_initializers", ".", "GlorotInitializer", ")", ")", ",", "\n", "bias_init", "=", "Ref", "(", "\"exp_global.bias_init\"", ",", "default", "=", "bare", "(", "xnmt", ".", "param_initializers", ".", "ZeroInitializer", ")", ")", ",", "\n", "dropout", "=", "None", ",", "self_attn", "=", "None", ",", "feed_forward", "=", "None", ",", "desc", "=", "None", ")", ":", "\n", "    ", "self", ".", "self_attn", "=", "self", ".", "add_serializable_component", "(", "\"self_attn\"", ",", "\n", "self_attn", ",", "\n", "lambda", ":", "SAAMMultiHeadedSelfAttention", "(", "head_count", ",", "hidden_dim", ",", "\n", "downsample_factor", ",", "\n", "input_dim", "=", "input_dim", ",", "\n", "ignore_masks", "=", "ignore_masks", ",", "\n", "plot_attention", "=", "plot_attention", ",", "\n", "diag_gauss_mask", "=", "diag_gauss_mask", ",", "\n", "square_mask_std", "=", "square_mask_std", ",", "\n", "param_init", "=", "param_init", ",", "\n", "bias_init", "=", "bias_init", ",", "\n", "cross_pos_encoding_type", "=", "cross_pos_encoding_type", ",", "\n", "kq_pos_encoding_type", "=", "kq_pos_encoding_type", ",", "\n", "kq_pos_encoding_size", "=", "kq_pos_encoding_size", ",", "\n", "max_len", "=", "max_len", ",", "\n", "desc", "=", "desc", ")", ")", "\n", "self", ".", "ff_lstm", "=", "ff_lstm", "\n", "if", "ff_lstm", ":", "\n", "      ", "self", ".", "feed_forward", "=", "self", ".", "add_serializable_component", "(", "\"feed_forward\"", ",", "\n", "feed_forward", ",", "\n", "lambda", ":", "recurrent", ".", "BiLSTMSeqTransducer", "(", "layers", "=", "1", ",", "\n", "input_dim", "=", "hidden_dim", ",", "\n", "hidden_dim", "=", "hidden_dim", ",", "\n", "dropout", "=", "dropout", ",", "\n", "param_init", "=", "param_init", ",", "\n", "bias_init", "=", "bias_init", ")", ")", "\n", "", "else", ":", "\n", "      ", "self", ".", "feed_forward", "=", "self", ".", "add_serializable_component", "(", "\"feed_forward\"", ",", "\n", "feed_forward", ",", "\n", "lambda", ":", "SAAMPositionwiseFeedForward", "(", "hidden_dim", ",", "ff_hidden_dim", ",", "\n", "nonlinearity", "=", "nonlinearity", ",", "\n", "param_init", "=", "param_init", ")", ")", "\n", "", "self", ".", "head_count", "=", "head_count", "\n", "self", ".", "downsample_factor", "=", "downsample_factor", "\n", "self", ".", "diagonal_mask_width", "=", "diagonal_mask_width", "\n", "if", "diagonal_mask_width", ":", "assert", "diagonal_mask_width", "%", "2", "==", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.self_attentional_am.TransformerEncoderLayer.set_dropout": [[435, 437], ["None"], "methods", ["None"], ["", "def", "set_dropout", "(", "self", ",", "dropout", ")", ":", "\n", "    ", "self", ".", "dropout", "=", "dropout", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.self_attentional_am.TransformerEncoderLayer.transduce": [[438, 471], ["len", "self_attentional_am.TransformerEncoderLayer.TransformerEncoderLayer.self_attn", "xnmt.expression_seqs.ExpressionSequence", "x[].dim", "int", "out_mask.lin_subsampled.lin_subsampled.lin_subsampled", "dynet.reshape", "self_attentional_am.TransformerEncoderLayer.TransformerEncoderLayer.feed_forward.transduce", "dynet.reshape", "self_attentional_am.TransformerEncoderLayer.TransformerEncoderLayer.feed_forward.transduce", "numpy.zeros", "numpy.ones", "range", "math.ceil", "self_attentional_am.TransformerEncoderLayer.TransformerEncoderLayer.dim", "xnmt.expression_seqs.ExpressionSequence", "self_attentional_am.TransformerEncoderLayer.TransformerEncoderLayer.as_tensor", "dynet.reshape", "max", "min", "float", "self_attentional_am.TransformerEncoderLayer.TransformerEncoderLayer.dim"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.lin_subsampled", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["", "def", "transduce", "(", "self", ",", "x", ":", "ExpressionSequence", ")", "->", "ExpressionSequence", ":", "\n", "    ", "seq_len", "=", "len", "(", "x", ")", "\n", "batch_size", "=", "x", "[", "0", "]", ".", "dim", "(", ")", "[", "1", "]", "\n", "\n", "att_mask", "=", "None", "\n", "if", "self", ".", "diagonal_mask_width", "is", "not", "None", ":", "\n", "      ", "if", "self", ".", "diagonal_mask_width", "is", "None", ":", "\n", "        ", "att_mask", "=", "np", ".", "zeros", "(", "(", "seq_len", ",", "seq_len", ")", ")", "\n", "", "else", ":", "\n", "        ", "att_mask", "=", "np", ".", "ones", "(", "(", "seq_len", ",", "seq_len", ")", ")", "\n", "for", "i", "in", "range", "(", "seq_len", ")", ":", "\n", "          ", "from_i", "=", "max", "(", "0", ",", "i", "-", "self", ".", "diagonal_mask_width", "//", "2", ")", "\n", "to_i", "=", "min", "(", "seq_len", ",", "i", "+", "self", ".", "diagonal_mask_width", "//", "2", "+", "1", ")", "\n", "att_mask", "[", "from_i", ":", "to_i", ",", "from_i", ":", "to_i", "]", "=", "0.0", "\n", "\n", "", "", "", "mid", "=", "self", ".", "self_attn", "(", "x", "=", "x", ",", "att_mask", "=", "att_mask", ",", "batch_mask", "=", "x", ".", "mask", ".", "np_arr", "if", "x", ".", "mask", "else", "None", ",", "p", "=", "self", ".", "dropout", ")", "\n", "if", "self", ".", "downsample_factor", ">", "1", ":", "\n", "      ", "seq_len", "=", "int", "(", "math", ".", "ceil", "(", "seq_len", "/", "float", "(", "self", ".", "downsample_factor", ")", ")", ")", "\n", "", "hidden_dim", "=", "mid", ".", "dim", "(", ")", "[", "0", "]", "[", "0", "]", "\n", "out_mask", "=", "x", ".", "mask", "\n", "if", "self", ".", "downsample_factor", ">", "1", "and", "out_mask", "is", "not", "None", ":", "\n", "      ", "out_mask", "=", "out_mask", ".", "lin_subsampled", "(", "reduce_factor", "=", "self", ".", "downsample_factor", ")", "\n", "", "if", "self", ".", "ff_lstm", ":", "\n", "      ", "mid_re", "=", "dy", ".", "reshape", "(", "mid", ",", "(", "hidden_dim", ",", "seq_len", ")", ",", "batch_size", "=", "batch_size", ")", "\n", "out", "=", "self", ".", "feed_forward", ".", "transduce", "(", "ExpressionSequence", "(", "expr_tensor", "=", "mid_re", ",", "mask", "=", "out_mask", ")", ")", "\n", "out", "=", "dy", ".", "reshape", "(", "out", ".", "as_tensor", "(", ")", ",", "(", "hidden_dim", ",", ")", ",", "batch_size", "=", "seq_len", "*", "batch_size", ")", "\n", "", "else", ":", "\n", "      ", "out", "=", "self", ".", "feed_forward", ".", "transduce", "(", "mid", ",", "p", "=", "self", ".", "dropout", ")", "\n", "\n", "", "self", ".", "_recent_output", "=", "out", "\n", "return", "ExpressionSequence", "(", "\n", "expr_tensor", "=", "dy", ".", "reshape", "(", "out", ",", "(", "out", ".", "dim", "(", ")", "[", "0", "]", "[", "0", "]", ",", "seq_len", ")", ",", "batch_size", "=", "batch_size", ")", ",", "\n", "mask", "=", "out_mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.self_attentional_am.SAAMSeqTransducer.__init__": [[503, 551], ["xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "self_attentional_am.SAAMSeqTransducer.SAAMSeqTransducer.add_serializable_component", "self_attentional_am.SAAMSeqTransducer.SAAMSeqTransducer.add_serializable_component", "xnmt.persistence.bare", "xnmt.persistence.bare", "self_attentional_am.SAAMSeqTransducer.SAAMSeqTransducer.make_modules", "xnmt.modelparts.embedders.PositionEmbedder"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.self_attentional_am.SAAMSeqTransducer.make_modules"], ["@", "serializable_init", "\n", "@", "events", ".", "register_xnmt_handler", "\n", "def", "__init__", "(", "self", ",", "input_dim", ":", "int", "=", "512", ",", "layers", ":", "int", "=", "1", ",", "hidden_dim", ":", "int", "=", "512", ",", "head_count", ":", "int", "=", "8", ",", "ff_hidden_dim", ":", "int", "=", "2048", ",", "\n", "dropout", ":", "numbers", ".", "Real", "=", "Ref", "(", "\"exp_global.dropout\"", ",", "default", "=", "0.0", ")", ",", "downsample_factor", ":", "int", "=", "1", ",", "diagonal_mask_width", ":", "int", "=", "None", ",", "\n", "ignore_masks", ":", "bool", "=", "False", ",", "plot_attention", ":", "typing", ".", "Optional", "[", "str", "]", "=", "None", ",", "nonlinearity", ":", "str", "=", "\"rectify\"", ",", "pos_encoding_type", ":", "typing", ".", "Optional", "[", "str", "]", "=", "None", ",", "\n", "pos_encoding_combine", ":", "str", "=", "\"concat\"", ",", "pos_encoding_size", ":", "int", "=", "40", ",", "max_len", ":", "int", "=", "1500", ",", "diag_gauss_mask", ":", "typing", ".", "Union", "[", "bool", ",", "numbers", ".", "Real", "]", "=", "False", ",", "\n", "square_mask_std", ":", "numbers", ".", "Real", "=", "True", ",", "cross_pos_encoding_type", ":", "typing", ".", "Optional", "[", "str", "]", "=", "None", ",", "ff_lstm", ":", "bool", "=", "False", ",", "kq_pos_encoding_type", ":", "typing", ".", "Optional", "[", "str", "]", "=", "None", ",", "\n", "kq_pos_encoding_size", ":", "int", "=", "40", ",", "\n", "param_init", ":", "xnmt", ".", "param_initializers", ".", "ParamInitializer", "=", "Ref", "(", "\"exp_global.param_init\"", ",", "default", "=", "bare", "(", "xnmt", ".", "param_initializers", ".", "GlorotInitializer", ")", ")", ",", "\n", "bias_init", ":", "xnmt", ".", "param_initializers", ".", "ParamInitializer", "=", "Ref", "(", "\"exp_global.bias_init\"", ",", "default", "=", "bare", "(", "xnmt", ".", "param_initializers", ".", "ZeroInitializer", ")", ")", ",", "\n", "positional_embedder", "=", "None", ",", "modules", "=", "None", ")", ":", "\n", "    ", "self", ".", "input_dim", "=", "input_dim", "=", "(", "\n", "input_dim", "+", "(", "pos_encoding_size", "if", "(", "pos_encoding_type", "and", "pos_encoding_combine", "==", "\"concat\"", ")", "else", "0", ")", ")", "\n", "self", ".", "hidden_dim", "=", "hidden_dim", "\n", "self", ".", "dropout", "=", "dropout", "\n", "self", ".", "layers", "=", "layers", "\n", "self", ".", "pos_encoding_type", "=", "pos_encoding_type", "\n", "self", ".", "pos_encoding_combine", "=", "pos_encoding_combine", "\n", "self", ".", "pos_encoding_size", "=", "pos_encoding_size", "\n", "self", ".", "max_len", "=", "max_len", "\n", "self", ".", "position_encoding_block", "=", "None", "\n", "if", "self", ".", "pos_encoding_type", "==", "\"embedding\"", ":", "\n", "      ", "self", ".", "positional_embedder", "=", "self", ".", "add_serializable_component", "(", "\"positional_embedder\"", ",", "\n", "positional_embedder", ",", "\n", "lambda", ":", "embedders", ".", "PositionEmbedder", "(", "max_pos", "=", "self", ".", "max_len", ",", "\n", "emb_dim", "=", "input_dim", "if", "self", ".", "pos_encoding_combine", "==", "\"add\"", "else", "self", ".", "pos_encoding_size", ")", ")", "\n", "\n", "", "self", ".", "modules", "=", "self", ".", "add_serializable_component", "(", "\"modules\"", ",", "modules", ",", "\n", "lambda", ":", "self", ".", "make_modules", "(", "layers", "=", "layers", ",", "\n", "plot_attention", "=", "plot_attention", ",", "\n", "hidden_dim", "=", "hidden_dim", ",", "\n", "downsample_factor", "=", "downsample_factor", ",", "\n", "input_dim", "=", "input_dim", ",", "\n", "head_count", "=", "head_count", ",", "\n", "ff_hidden_dim", "=", "ff_hidden_dim", ",", "\n", "diagonal_mask_width", "=", "diagonal_mask_width", ",", "\n", "ignore_masks", "=", "ignore_masks", ",", "\n", "nonlinearity", "=", "nonlinearity", ",", "\n", "diag_gauss_mask", "=", "diag_gauss_mask", ",", "\n", "square_mask_std", "=", "square_mask_std", ",", "\n", "cross_pos_encoding_type", "=", "cross_pos_encoding_type", ",", "\n", "ff_lstm", "=", "ff_lstm", ",", "\n", "kq_pos_encoding_type", "=", "kq_pos_encoding_type", ",", "\n", "kq_pos_encoding_size", "=", "kq_pos_encoding_size", ",", "\n", "dropout", "=", "dropout", ",", "\n", "param_init", "=", "param_init", ",", "\n", "bias_init", "=", "bias_init", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.self_attentional_am.SAAMSeqTransducer.make_modules": [[552, 582], ["range", "modules.append", "self_attentional_am.SAAMSeqTransducer.TransformerEncoderLayer", "isinstance", "isinstance"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "def", "make_modules", "(", "self", ",", "layers", ",", "plot_attention", ",", "hidden_dim", ",", "downsample_factor", ",", "input_dim", ",", "head_count", ",", "ff_hidden_dim", ",", "diagonal_mask_width", ",", "ignore_masks", ",", "nonlinearity", ",", "diag_gauss_mask", ",", "\n", "square_mask_std", ",", "cross_pos_encoding_type", ",", "ff_lstm", ",", "kq_pos_encoding_type", ",", "kq_pos_encoding_size", ",", "dropout", ",", "param_init", ",", "bias_init", ")", ":", "\n", "    ", "modules", "=", "[", "]", "\n", "for", "layer_i", "in", "range", "(", "layers", ")", ":", "\n", "      ", "if", "plot_attention", "is", "not", "None", ":", "\n", "        ", "plot_attention_layer", "=", "f\"{plot_attention}.layer_{layer_i}\"", "\n", "", "else", ":", "\n", "        ", "plot_attention_layer", "=", "None", "\n", "", "modules", ".", "append", "(", "TransformerEncoderLayer", "(", "hidden_dim", ",", "\n", "downsample_factor", "=", "downsample_factor", ",", "\n", "input_dim", "=", "input_dim", "if", "layer_i", "==", "0", "else", "hidden_dim", ",", "\n", "head_count", "=", "head_count", ",", "ff_hidden_dim", "=", "ff_hidden_dim", ",", "\n", "diagonal_mask_width", "=", "diagonal_mask_width", ",", "\n", "ignore_masks", "=", "ignore_masks", ",", "\n", "plot_attention", "=", "plot_attention_layer", ",", "\n", "nonlinearity", "=", "nonlinearity", ",", "\n", "diag_gauss_mask", "=", "diag_gauss_mask", ",", "\n", "square_mask_std", "=", "square_mask_std", ",", "\n", "cross_pos_encoding_type", "=", "cross_pos_encoding_type", ",", "\n", "ff_lstm", "=", "ff_lstm", ",", "\n", "max_len", "=", "self", ".", "max_len", ",", "\n", "kq_pos_encoding_type", "=", "kq_pos_encoding_type", ",", "\n", "kq_pos_encoding_size", "=", "kq_pos_encoding_size", ",", "\n", "dropout", "=", "dropout", ",", "\n", "param_init", "=", "param_init", "[", "layer_i", "]", "if", "isinstance", "(", "param_init", ",", "\n", "Sequence", ")", "else", "param_init", ",", "\n", "bias_init", "=", "bias_init", "[", "layer_i", "]", "if", "isinstance", "(", "bias_init", ",", "\n", "Sequence", ")", "else", "bias_init", ",", "\n", "desc", "=", "f\"layer_{layer_i}\"", ")", ")", "\n", "", "return", "modules", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.self_attentional_am.SAAMSeqTransducer.transduce": [[583, 605], ["dynet.inputTensor", "module.transduce", "xnmt.transducers.base.FinalTransducerState", "self_attentional_am.SAAMSeqTransducer.SAAMSeqTransducer.initialize_position_encoding", "self_attentional_am.SAAMSeqTransducer.SAAMSeqTransducer.positional_embedder.embed_sent().as_tensor", "xnmt.expression_seqs.ExpressionSequence", "xnmt.expression_seqs.ExpressionSequence", "ValueError", "len", "int", "self_attentional_am.SAAMSeqTransducer.SAAMSeqTransducer.positional_embedder.embed_sent", "dynet.concatenate", "len", "len", "len", "xnmt.expression_seqs.ExpressionSequence.as_tensor", "xnmt.expression_seqs.ExpressionSequence.as_tensor"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.TransformerTranslator.initialize_position_encoding", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.embed_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor"], ["", "def", "transduce", "(", "self", ",", "sent", ":", "ExpressionSequence", ")", "->", "ExpressionSequence", ":", "\n", "    ", "if", "self", ".", "pos_encoding_type", "==", "\"trigonometric\"", ":", "\n", "      ", "if", "self", ".", "position_encoding_block", "is", "None", "or", "self", ".", "position_encoding_block", ".", "shape", "[", "2", "]", "<", "len", "(", "sent", ")", ":", "\n", "        ", "self", ".", "initialize_position_encoding", "(", "int", "(", "len", "(", "sent", ")", "*", "1.2", ")", ",", "\n", "self", ".", "input_dim", "if", "self", ".", "pos_encoding_combine", "==", "\"add\"", "else", "self", ".", "pos_encoding_size", ")", "\n", "", "encoding", "=", "dy", ".", "inputTensor", "(", "self", ".", "position_encoding_block", "[", "0", ",", ":", ",", ":", "len", "(", "sent", ")", "]", ")", "\n", "", "elif", "self", ".", "pos_encoding_type", "==", "\"embedding\"", ":", "\n", "      ", "encoding", "=", "self", ".", "positional_embedder", ".", "embed_sent", "(", "len", "(", "sent", ")", ")", ".", "as_tensor", "(", ")", "\n", "", "if", "self", ".", "pos_encoding_type", ":", "\n", "      ", "if", "self", ".", "pos_encoding_combine", "==", "\"add\"", ":", "\n", "        ", "sent", "=", "ExpressionSequence", "(", "expr_tensor", "=", "sent", ".", "as_tensor", "(", ")", "+", "encoding", ",", "mask", "=", "sent", ".", "mask", ")", "\n", "", "else", ":", "# concat", "\n", "        ", "sent", "=", "ExpressionSequence", "(", "expr_tensor", "=", "dy", ".", "concatenate", "(", "[", "sent", ".", "as_tensor", "(", ")", ",", "encoding", "]", ")", ",", "\n", "mask", "=", "sent", ".", "mask", ")", "\n", "\n", "", "", "elif", "self", ".", "pos_encoding_type", ":", "\n", "      ", "raise", "ValueError", "(", "f\"unknown encoding type {self.pos_encoding_type}\"", ")", "\n", "", "for", "module", "in", "self", ".", "modules", ":", "\n", "      ", "enc_sent", "=", "module", ".", "transduce", "(", "sent", ")", "\n", "sent", "=", "enc_sent", "\n", "", "self", ".", "_final_states", "=", "[", "transducers", ".", "FinalTransducerState", "(", "sent", "[", "-", "1", "]", ")", "]", "\n", "return", "sent", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.self_attentional_am.SAAMSeqTransducer.get_final_states": [[606, 608], ["None"], "methods", ["None"], ["", "def", "get_final_states", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "_final_states", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.self_attentional_am.SAAMSeqTransducer.on_set_train": [[609, 613], ["module.set_dropout"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.self_attentional_am.TransformerEncoderLayer.set_dropout"], ["", "@", "events", ".", "handle_xnmt_event", "\n", "def", "on_set_train", "(", "self", ",", "val", ")", ":", "\n", "    ", "for", "module", "in", "self", ".", "modules", ":", "\n", "      ", "module", ".", "set_dropout", "(", "self", ".", "dropout", "if", "val", "else", "0.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.specialized_encoders.self_attentional_am.SAAMSeqTransducer.initialize_position_encoding": [[614, 625], ["numpy.arange", "numpy.concatenate", "numpy.reshape", "numpy.transpose", "numpy.log", "numpy.exp", "numpy.expand_dims", "numpy.expand_dims", "float", "numpy.sin", "numpy.cos", "numpy.arange().astype", "numpy.arange"], "methods", ["None"], ["", "", "def", "initialize_position_encoding", "(", "self", ",", "length", ",", "n_units", ")", ":", "\n", "# Implementation in the Google tensor2tensor repo", "\n", "    ", "channels", "=", "n_units", "\n", "position", "=", "np", ".", "arange", "(", "length", ",", "dtype", "=", "'f'", ")", "\n", "num_timescales", "=", "channels", "//", "2", "\n", "log_timescale_increment", "=", "(", "np", ".", "log", "(", "10000.", "/", "1.", ")", "/", "(", "float", "(", "num_timescales", ")", "-", "1", ")", ")", "\n", "inv_timescales", "=", "1.", "*", "np", ".", "exp", "(", "np", ".", "arange", "(", "num_timescales", ")", ".", "astype", "(", "'f'", ")", "*", "-", "log_timescale_increment", ")", "\n", "scaled_time", "=", "np", ".", "expand_dims", "(", "position", ",", "1", ")", "*", "np", ".", "expand_dims", "(", "inv_timescales", ",", "0", ")", "\n", "signal", "=", "np", ".", "concatenate", "(", "[", "np", ".", "sin", "(", "scaled_time", ")", ",", "np", ".", "cos", "(", "scaled_time", ")", "]", ",", "axis", "=", "1", ")", "\n", "signal", "=", "np", ".", "reshape", "(", "signal", ",", "[", "1", ",", "length", ",", "channels", "]", ")", "\n", "self", ".", "position_encoding_block", "=", "np", ".", "transpose", "(", "signal", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_composer.SingleComposer.__init__": [[14, 17], ["None"], "methods", ["None"], ["  ", "@", "register_xnmt_handler", "\n", "def", "__init__", "(", "self", ")", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_composer.SingleComposer.compose": [[18, 25], ["segmenting_composer.SingleComposer.set_word", "outputs[].append", "range", "segmenting_composer.SingleComposer.transduce"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_composer.SumMultipleComposer.set_word", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce"], ["", "def", "compose", "(", "self", ",", "composed_words", ",", "batch_size", ")", ":", "\n", "    ", "outputs", "=", "[", "[", "]", "for", "_", "in", "range", "(", "batch_size", ")", "]", "\n", "# Batching expression", "\n", "for", "expr_list", ",", "batch_num", ",", "position", ",", "start", ",", "end", "in", "composed_words", ":", "\n", "      ", "self", ".", "set_word", "(", "self", ".", "src_sent", "[", "batch_num", "]", "[", "start", ":", "end", "]", ")", "\n", "outputs", "[", "batch_num", "]", ".", "append", "(", "self", ".", "transduce", "(", "expr_list", ")", ")", "\n", "", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_composer.SingleComposer.on_start_sent": [[26, 29], ["None"], "methods", ["None"], ["", "@", "handle_xnmt_event", "\n", "def", "on_start_sent", "(", "self", ",", "src", ")", ":", "\n", "    ", "self", ".", "src_sent", "=", "src", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_composer.SingleComposer.set_word": [[30, 32], ["None"], "methods", ["None"], ["", "def", "set_word", "(", "self", ",", "word", ")", ":", "\n", "    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_composer.SingleComposer.transduce": [[33, 35], ["NotImplementedError"], "methods", ["None"], ["", "def", "transduce", "(", "self", ",", "embeds", ")", ":", "\n", "    ", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_composer.SumComposer.__init__": [[38, 41], ["segmenting_composer.SingleComposer.__init__"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ")", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_composer.SumComposer.transduce": [[42, 44], ["dynet.sum_dim"], "methods", ["None"], ["", "def", "transduce", "(", "self", ",", "embeds", ")", ":", "\n", "    ", "return", "dy", ".", "sum_dim", "(", "embeds", ",", "[", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_composer.AverageComposer.__init__": [[47, 50], ["segmenting_composer.SingleComposer.__init__"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ")", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_composer.AverageComposer.transduce": [[51, 53], ["dynet.mean_dim"], "methods", ["None"], ["", "def", "transduce", "(", "self", ",", "embeds", ")", ":", "\n", "    ", "return", "dy", ".", "mean_dim", "(", "embeds", ",", "[", "1", "]", ",", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_composer.MaxComposer.__init__": [[56, 59], ["segmenting_composer.SingleComposer.__init__"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ")", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_composer.MaxComposer.transduce": [[60, 62], ["dynet.max_dim"], "methods", ["None"], ["", "def", "transduce", "(", "self", ",", "embeds", ")", ":", "\n", "    ", "return", "dy", ".", "max_dim", "(", "embeds", ",", "d", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_composer.SeqTransducerComposer.__init__": [[65, 69], ["xnmt.persistence.bare", "segmenting_composer.SingleComposer.__init__"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "seq_transducer", "=", "bare", "(", "BiLSTMSeqTransducer", ")", ")", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "seq_transducer", "=", "seq_transducer", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_composer.SeqTransducerComposer.transduce": [[70, 73], ["segmenting_composer.SeqTransducerComposer.seq_transducer.transduce", "[].main_expr", "xnmt.expression_seqs.ExpressionSequence", "segmenting_composer.SeqTransducerComposer.seq_transducer.get_final_states"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.base.FinalTransducerState.main_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.get_final_states"], ["", "def", "transduce", "(", "self", ",", "embed", ")", ":", "\n", "    ", "encodings", "=", "self", ".", "seq_transducer", ".", "transduce", "(", "ExpressionSequence", "(", "expr_tensor", "=", "embed", ")", ")", "\n", "return", "self", ".", "seq_transducer", ".", "get_final_states", "(", ")", "[", "-", "1", "]", ".", "main_expr", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_composer.ConvolutionComposer.__init__": [[76, 90], ["xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.param_collections.ParamManager.my_params", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.persistence.bare", "xnmt.persistence.bare", "param_init.initializer", "bias_init.initializer"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.my_params", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer"], ["@", "register_xnmt_handler", "\n", "@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "ngram_size", ",", "\n", "param_init", "=", "Ref", "(", "\"exp_global.param_init\"", ",", "default", "=", "bare", "(", "GlorotInitializer", ")", ")", ",", "\n", "bias_init", "=", "Ref", "(", "\"exp_global.param_init\"", ",", "default", "=", "bare", "(", "ZeroInitializer", ")", ")", ",", "\n", "embed_dim", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "hidden_dim", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ")", ":", "\n", "    ", "model", "=", "ParamManager", ".", "my_params", "(", "self", ")", "\n", "dim", "=", "(", "1", ",", "ngram_size", ",", "embed_dim", ",", "hidden_dim", ")", "\n", "self", ".", "filter", "=", "model", ".", "add_parameters", "(", "dim", "=", "dim", ",", "init", "=", "param_init", ".", "initializer", "(", "dim", ")", ")", "\n", "self", ".", "bias", "=", "model", ".", "add_parameters", "(", "dim", "=", "(", "embed_dim", ",", ")", ",", "init", "=", "bias_init", ".", "initializer", "(", "dim", ")", ")", "\n", "self", ".", "ngram_size", "=", "ngram_size", "\n", "self", ".", "embed_dim", "=", "embed_dim", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_composer.ConvolutionComposer.transduce": [[91, 101], ["dynet.concatenate.dim", "dynet.reshape", "dynet.rectify", "dynet.max_dim", "dynet.zeros", "dynet.concatenate", "dynet.concatenate.dim", "dynet.conv2d_bias", "dynet.max_dim", "dynet.parameter", "dynet.parameter"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["", "def", "transduce", "(", "self", ",", "encodings", ")", ":", "\n", "    ", "inp", "=", "encodings", "\n", "dim", "=", "inp", ".", "dim", "(", ")", "\n", "if", "dim", "[", "0", "]", "[", "1", "]", "<", "self", ".", "ngram_size", ":", "\n", "      ", "pad", "=", "dy", ".", "zeros", "(", "(", "self", ".", "embed_dim", ",", "self", ".", "ngram_size", "-", "dim", "[", "0", "]", "[", "1", "]", ")", ")", "\n", "inp", "=", "dy", ".", "concatenate", "(", "[", "inp", ",", "pad", "]", ",", "d", "=", "1", ")", "\n", "dim", "=", "inp", ".", "dim", "(", ")", "\n", "", "inp", "=", "dy", ".", "reshape", "(", "inp", ",", "(", "1", ",", "dim", "[", "0", "]", "[", "1", "]", ",", "dim", "[", "0", "]", "[", "0", "]", ")", ")", "\n", "encodings", "=", "dy", ".", "rectify", "(", "dy", ".", "conv2d_bias", "(", "inp", ",", "dy", ".", "parameter", "(", "self", ".", "filter", ")", ",", "dy", ".", "parameter", "(", "self", ".", "bias", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "is_valid", "=", "True", ")", ")", "\n", "return", "dy", ".", "max_dim", "(", "dy", ".", "max_dim", "(", "encodings", ",", "d", "=", "1", ")", ",", "d", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_composer.LookupComposer.__init__": [[104, 120], ["xnmt.persistence.Ref", "xnmt.persistence.Ref", "segmenting_composer.SingleComposer.__init__", "xnmt.param_collections.ParamManager.my_params", "xnmt.param_collections.ParamManager.my_params.add_lookup_parameters", "xnmt.persistence.Path", "Vocab", "len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.my_params"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "word_vocab", "=", "None", ",", "\n", "src_vocab", "=", "Ref", "(", "Path", "(", "\"model.src_reader.vocab\"", ")", ")", ",", "\n", "hidden_dim", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "vocab_size", "=", "25000", ")", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "param_collection", "=", "ParamManager", ".", "my_params", "(", "self", ")", "\n", "if", "word_vocab", "is", "None", ":", "\n", "      ", "word_vocab", "=", "Vocab", "(", ")", "\n", "dict_entry", "=", "vocab_size", "\n", "", "else", ":", "\n", "      ", "dict_entry", "=", "len", "(", "word_vocab", ")", "\n", "", "self", ".", "src_vocab", "=", "src_vocab", "\n", "self", ".", "word_vocab", "=", "word_vocab", "\n", "self", ".", "embedding", "=", "param_collection", ".", "add_lookup_parameters", "(", "(", "dict_entry", ",", "hidden_dim", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_composer.LookupComposer.transduce": [[121, 123], ["dynet.lookup"], "methods", ["None"], ["", "def", "transduce", "(", "self", ",", "inputs", ")", ":", "\n", "    ", "return", "dy", ".", "lookup", "(", "self", ".", "embedding", ",", "self", ".", "word_id", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_composer.LookupComposer.set_word": [[124, 126], ["segmenting_composer.LookupComposer.to_word_id"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_composer.LookupComposer.to_word_id"], ["", "def", "set_word", "(", "self", ",", "word", ")", ":", "\n", "    ", "self", ".", "word_id", "=", "self", ".", "to_word_id", "(", "word", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_composer.LookupComposer.to_word_id": [[127, 130], ["functools.lru_cache", "segmenting_composer.LookupComposer.word_vocab.convert"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.vocabs.Vocab.convert"], ["", "@", "lru_cache", "(", "maxsize", "=", "32000", ")", "\n", "def", "to_word_id", "(", "self", ",", "word", ")", ":", "\n", "    ", "return", "self", ".", "word_vocab", ".", "convert", "(", "\"\"", ".", "join", "(", "[", "self", ".", "src_vocab", "[", "c", "]", "for", "c", "in", "word", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_composer.CharNGramComposer.__init__": [[141, 163], ["xnmt.persistence.Ref", "xnmt.persistence.Ref", "segmenting_composer.SingleComposer.__init__", "segmenting_composer.CharNGramComposer.add_serializable_component", "xnmt.persistence.Path", "Vocab", "len", "xnmt.modelparts.transforms.Linear"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "word_vocab", "=", "None", ",", "\n", "ngram_size", "=", "4", ",", "\n", "src_vocab", "=", "Ref", "(", "Path", "(", "\"model.src_reader.vocab\"", ")", ")", ",", "\n", "hidden_dim", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "word_ngram", "=", "None", ",", "\n", "vocab_size", "=", "None", ")", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "if", "word_vocab", "is", "None", ":", "\n", "      ", "word_vocab", "=", "Vocab", "(", ")", "\n", "dict_entry", "=", "vocab_size", "\n", "", "else", ":", "\n", "      ", "dict_entry", "=", "len", "(", "word_vocab", ")", "\n", "\n", "", "self", ".", "dict_entry", "=", "dict_entry", "\n", "self", ".", "src_vocab", "=", "src_vocab", "\n", "self", ".", "word_vocab", "=", "word_vocab", "\n", "self", ".", "ngram_size", "=", "ngram_size", "\n", "self", ".", "word_ngram", "=", "self", ".", "add_serializable_component", "(", "\"word_ngram\"", ",", "word_ngram", ",", "\n", "lambda", ":", "Linear", "(", "input_dim", "=", "dict_entry", ",", "\n", "output_dim", "=", "hidden_dim", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_composer.CharNGramComposer.to_word_vector": [[164, 176], ["functools.lru_cache", "collections.Counter", "range", "len", "range", "len", "min", "len", "int", "int", "segmenting_composer.CharNGramComposer.word_vocab.convert"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.vocabs.Vocab.convert"], ["", "@", "lru_cache", "(", "maxsize", "=", "32000", ")", "\n", "def", "to_word_vector", "(", "self", ",", "word", ")", ":", "\n", "    ", "word", "=", "\"\"", ".", "join", "(", "[", "self", ".", "src_vocab", "[", "c", "]", "for", "c", "in", "word", "]", ")", "\n", "word_vector", "=", "Counter", "(", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "word", ")", ")", ":", "\n", "      ", "for", "j", "in", "range", "(", "i", ",", "min", "(", "i", "+", "self", ".", "ngram_size", ",", "len", "(", "word", ")", ")", ")", ":", "\n", "        ", "ngram", "=", "word", "[", "i", ":", "j", "+", "1", "]", "\n", "if", "ngram", "in", "self", ".", "word_vocab", ".", "w2i", ":", "\n", "          ", "word_vector", "[", "int", "(", "self", ".", "word_vocab", ".", "convert", "(", "ngram", ")", ")", "]", "+=", "1", "\n", "", "", "", "if", "len", "(", "word_vector", ")", "==", "0", ":", "\n", "      ", "word_vector", "[", "int", "(", "self", ".", "word_vocab", "[", "self", ".", "word_vocab", ".", "UNK_STR", "]", ")", "]", "+=", "1", "\n", "", "return", "word_vector", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_composer.CharNGramComposer.transduce": [[177, 182], ["list", "list", "dynet.sparse_inputTensor", "dynet.rectify", "segmenting_composer.CharNGramComposer.word_vect.keys", "segmenting_composer.CharNGramComposer.word_vect.values", "segmenting_composer.CharNGramComposer.word_ngram.transform"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.DenseWordEmbedder.transform"], ["", "def", "transduce", "(", "self", ",", "inputs", ")", ":", "\n", "    ", "keys", "=", "list", "(", "self", ".", "word_vect", ".", "keys", "(", ")", ")", "\n", "values", "=", "list", "(", "self", ".", "word_vect", ".", "values", "(", ")", ")", "\n", "ngram_vocab_vect", "=", "dy", ".", "sparse_inputTensor", "(", "[", "keys", "]", ",", "values", ",", "(", "self", ".", "dict_entry", ",", ")", ")", "\n", "return", "dy", ".", "rectify", "(", "self", ".", "word_ngram", ".", "transform", "(", "ngram_vocab_vect", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_composer.CharNGramComposer.set_word": [[183, 185], ["segmenting_composer.CharNGramComposer.to_word_vector"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_composer.CharNGramComposer.to_word_vector"], ["", "def", "set_word", "(", "self", ",", "word", ")", ":", "\n", "    ", "self", ".", "word_vect", "=", "self", ".", "to_word_vector", "(", "word", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_composer.SumMultipleComposer.__init__": [[189, 193], ["segmenting_composer.SingleComposer.__init__"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "composers", ")", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "composers", "=", "composers", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_composer.SumMultipleComposer.set_word": [[194, 197], ["composer.set_word"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_composer.SumMultipleComposer.set_word"], ["", "def", "set_word", "(", "self", ",", "word", ")", ":", "\n", "    ", "for", "composer", "in", "self", ".", "composers", ":", "\n", "      ", "composer", ".", "set_word", "(", "word", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_composer.SumMultipleComposer.transduce": [[198, 200], ["sum", "composer.transduce"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce"], ["", "", "def", "transduce", "(", "self", ",", "embeds", ")", ":", "\n", "    ", "return", "sum", "(", "[", "composer", ".", "transduce", "(", "embeds", ")", "for", "composer", "in", "self", ".", "composers", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_encoder.SegmentingSeqTransducer.__init__": [[52, 72], ["xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.persistence.Ref", "segmenting_encoder.SegmentingSeqTransducer.add_serializable_component", "segmenting_encoder.SegmentingSeqTransducer.add_serializable_component", "segmenting_encoder.SegmentingSeqTransducer.add_serializable_component", "segmenting_encoder.SegmentingSeqTransducer.add_serializable_component", "segmenting_encoder.SegmentingSeqTransducer.add_serializable_component", "segmenting_encoder.SegmentingSeqTransducer.add_serializable_component"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component"], ["@", "register_xnmt_handler", "\n", "@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "embed_encoder", "=", "bare", "(", "IdentitySeqTransducer", ")", ",", "\n", "segment_composer", "=", "bare", "(", "SeqTransducerComposer", ")", ",", "\n", "final_transducer", "=", "bare", "(", "BiLSTMSeqTransducer", ")", ",", "\n", "policy_learning", "=", "None", ",", "\n", "length_prior", "=", "None", ",", "\n", "eps_greedy", "=", "None", ",", "\n", "sample_during_search", "=", "False", ",", "\n", "reporter", "=", "None", ",", "\n", "compute_report", "=", "Ref", "(", "\"exp_global.compute_report\"", ",", "default", "=", "False", ")", ")", ":", "\n", "    ", "self", ".", "embed_encoder", "=", "self", ".", "add_serializable_component", "(", "\"embed_encoder\"", ",", "embed_encoder", ",", "lambda", ":", "embed_encoder", ")", "\n", "self", ".", "segment_composer", "=", "self", ".", "add_serializable_component", "(", "\"segment_composer\"", ",", "segment_composer", ",", "lambda", ":", "segment_composer", ")", "\n", "self", ".", "final_transducer", "=", "self", ".", "add_serializable_component", "(", "\"final_transducer\"", ",", "final_transducer", ",", "lambda", ":", "final_transducer", ")", "\n", "self", ".", "policy_learning", "=", "self", ".", "add_serializable_component", "(", "\"policy_learning\"", ",", "policy_learning", ",", "lambda", ":", "policy_learning", ")", "if", "policy_learning", "is", "not", "None", "else", "None", "\n", "self", ".", "length_prior", "=", "self", ".", "add_serializable_component", "(", "\"length_prior\"", ",", "length_prior", ",", "lambda", ":", "length_prior", ")", "if", "length_prior", "is", "not", "None", "else", "None", "\n", "self", ".", "eps_greedy", "=", "self", ".", "add_serializable_component", "(", "\"eps_greedy\"", ",", "eps_greedy", ",", "lambda", ":", "eps_greedy", ")", "if", "eps_greedy", "is", "not", "None", "else", "None", "\n", "self", ".", "sample_during_search", "=", "sample_during_search", "\n", "self", ".", "compute_report", "=", "compute_report", "\n", "self", ".", "reporter", "=", "reporter", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_encoder.SegmentingSeqTransducer.shared_params": [[73, 77], ["None"], "methods", ["None"], ["", "def", "shared_params", "(", "self", ")", ":", "\n", "    ", "return", "[", "{", "\".embed_encoder.hidden_dim\"", ",", "\".policy_learning.policy_network.input_dim\"", "}", ",", "\n", "{", "\".embed_encoder.hidden_dim\"", ",", "\".policy_learning.baseline.input_dim\"", "}", ",", "\n", "{", "\".segment_composer.hidden_dim\"", ",", "\".final_transducer.input_dim\"", "}", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_encoder.SegmentingSeqTransducer.transduce": [[78, 109], ["segmenting_encoder.SegmentingSeqTransducer.sample_segmentation", "dynet.concatenate", "dynet.concatenate.value", "range", "segmenting_encoder.SegmentingSeqTransducer.segment_composer.compose", "embed_sent[].dim", "dynet.pick_batch_elem", "enumerate", "segmenting_encoder.SegmentingSeqTransducer.pad", "xnmt.expression_seqs.ExpressionSequence", "segmenting_encoder.SegmentingSeqTransducer.final_transducer.transduce", "dynet.pick_range", "composed_words.append", "segmenting_encoder.SegmentingSeqTransducer.report_sent_info", "len", "dynet.concatenate_to_batch", "range"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_encoder.SegmentingSeqTransducer.sample_segmentation", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_composer.SingleComposer.compose", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.conv_encoder.StridedConvSeqTransducer.pad", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.Reportable.report_sent_info"], ["", "def", "transduce", "(", "self", ",", "embed_sent", ":", "ExpressionSequence", ")", "->", "List", "[", "ExpressionSequence", "]", ":", "\n", "    ", "batch_size", "=", "embed_sent", "[", "0", "]", ".", "dim", "(", ")", "[", "1", "]", "\n", "actions", "=", "self", ".", "sample_segmentation", "(", "embed_sent", ",", "batch_size", ")", "\n", "embeddings", "=", "dy", ".", "concatenate", "(", "embed_sent", ".", "expr_list", ",", "d", "=", "1", ")", "\n", "embeddings", ".", "value", "(", ")", "\n", "#", "\n", "composed_words", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "batch_size", ")", ":", "\n", "      ", "sequence", "=", "dy", ".", "pick_batch_elem", "(", "embeddings", ",", "i", ")", "\n", "# For each sampled segmentations", "\n", "lower_bound", "=", "0", "\n", "for", "j", ",", "upper_bound", "in", "enumerate", "(", "actions", "[", "i", "]", ")", ":", "\n", "        ", "char_sequence", "=", "dy", ".", "pick_range", "(", "sequence", ",", "lower_bound", ",", "upper_bound", "+", "1", ",", "1", ")", "\n", "composed_words", ".", "append", "(", "(", "char_sequence", ",", "i", ",", "j", ",", "lower_bound", ",", "upper_bound", "+", "1", ")", ")", "\n", "lower_bound", "=", "upper_bound", "+", "1", "\n", "", "", "outputs", "=", "self", ".", "segment_composer", ".", "compose", "(", "composed_words", ",", "batch_size", ")", "\n", "# Padding + return", "\n", "try", ":", "\n", "      ", "if", "self", ".", "length_prior", ":", "\n", "        ", "seg_size_unpadded", "=", "[", "len", "(", "outputs", "[", "i", "]", ")", "for", "i", "in", "range", "(", "batch_size", ")", "]", "\n", "", "enc_outputs", "=", "[", "]", "\n", "sampled_sentence", ",", "segment_mask", "=", "self", ".", "pad", "(", "outputs", ")", "\n", "expr_seq", "=", "ExpressionSequence", "(", "expr_tensor", "=", "dy", ".", "concatenate_to_batch", "(", "sampled_sentence", ")", ",", "mask", "=", "segment_mask", ")", "\n", "return", "self", ".", "final_transducer", ".", "transduce", "(", "expr_seq", ")", "\n", "", "finally", ":", "\n", "      ", "if", "self", ".", "length_prior", ":", "\n", "        ", "self", ".", "seg_size_unpadded", "=", "seg_size_unpadded", "\n", "", "self", ".", "compose_output", "=", "outputs", "\n", "self", ".", "segment_actions", "=", "actions", "\n", "if", "not", "self", ".", "train", "and", "self", ".", "compute_report", ":", "\n", "        ", "self", ".", "report_sent_info", "(", "{", "\"segment_actions\"", ":", "actions", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_encoder.SegmentingSeqTransducer.on_calc_additional_loss": [[110, 132], ["dynet.inputTensor", "xnmt.losses.FactoredLossExpr", "generator_loss.get_nobackprop_loss().items", "dynet.inputTensor", "dynet.inputTensor.add_loss", "dynet.inputTensor.value", "segmenting_encoder.SegmentingSeqTransducer.policy_learning.calc_loss", "t.len_unpadded", "generator_loss.get_nobackprop_loss", "dynet.inputTensor.add_loss", "dynet.inputTensor.add_loss", "segmenting_encoder.SegmentingSeqTransducer.length_prior.log_ll", "segmenting_encoder.SegmentingSeqTransducer.reporter.report_process", "dynet.cdiv"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossExpr.add_loss", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_encoder.DualEncoderSimilarity.calc_loss", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.len_unpadded", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossExpr.get_nobackprop_loss", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossExpr.add_loss", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossExpr.add_loss", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.length_prior.PoissonLengthPrior.log_ll", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.reporter.SegmentingReporter.report_process"], ["", "", "", "@", "handle_xnmt_event", "\n", "def", "on_calc_additional_loss", "(", "self", ",", "trg", ",", "generator", ",", "generator_loss", ")", ":", "\n", "    ", "if", "self", ".", "policy_learning", "is", "None", ":", "\n", "      ", "return", "None", "\n", "", "trg_counts", "=", "dy", ".", "inputTensor", "(", "[", "t", ".", "len_unpadded", "(", ")", "for", "t", "in", "trg", "]", ",", "batched", "=", "True", ")", "\n", "reward", "=", "FactoredLossExpr", "(", ")", "\n", "# Adding all reward from the translator", "\n", "for", "loss_key", ",", "loss_value", "in", "generator_loss", ".", "get_nobackprop_loss", "(", ")", ".", "items", "(", ")", ":", "\n", "      ", "if", "loss_key", "==", "'mle'", ":", "\n", "        ", "reward", ".", "add_loss", "(", "'mle'", ",", "dy", ".", "cdiv", "(", "-", "loss_value", ",", "trg_counts", ")", ")", "\n", "", "else", ":", "\n", "        ", "reward", ".", "add_loss", "(", "loss_key", ",", "-", "loss_value", ")", "\n", "", "", "if", "self", ".", "length_prior", "is", "not", "None", ":", "\n", "      ", "reward", ".", "add_loss", "(", "'seg_lp'", ",", "self", ".", "length_prior", ".", "log_ll", "(", "self", ".", "seg_size_unpadded", ")", ")", "\n", "", "reward", "=", "dy", ".", "inputTensor", "(", "reward", ".", "value", "(", ")", ",", "batched", "=", "True", ")", "\n", "### Calculate losses    ", "\n", "try", ":", "\n", "      ", "return", "self", ".", "policy_learning", ".", "calc_loss", "(", "reward", ")", "\n", "", "finally", ":", "\n", "      ", "self", ".", "reward", "=", "reward", "\n", "if", "self", ".", "reporter", "is", "not", "None", ":", "\n", "        ", "self", ".", "reporter", ".", "report_process", "(", "self", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_encoder.SegmentingSeqTransducer.on_start_sent": [[133, 138], ["None"], "methods", ["None"], ["", "", "", "@", "handle_xnmt_event", "\n", "def", "on_start_sent", "(", "self", ",", "src", ")", ":", "\n", "    ", "self", ".", "src_sent", "=", "src", "\n", "self", ".", "final_states", "=", "[", "]", "\n", "self", ".", "segmenting_action", "=", "self", ".", "SegmentingAction", ".", "NONE", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_encoder.SegmentingSeqTransducer.on_set_train": [[139, 142], ["None"], "methods", ["None"], ["", "@", "handle_xnmt_event", "\n", "def", "on_set_train", "(", "self", ",", "train", ")", ":", "\n", "    ", "self", ".", "train", "=", "train", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_encoder.SegmentingSeqTransducer.get_final_states": [[143, 145], ["segmenting_encoder.SegmentingSeqTransducer.final_transducer.get_final_states"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.get_final_states"], ["", "def", "get_final_states", "(", "self", ")", "->", "List", "[", "FinalTransducerState", "]", ":", "\n", "    ", "return", "self", ".", "final_transducer", ".", "get_final_states", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_encoder.SegmentingSeqTransducer.sample_segmentation": [[146, 165], ["len", "segmenting_encoder.SegmentingSeqTransducer.embed_encoder.transduce", "segmenting_encoder.SegmentingSeqTransducer.sample_from_policy", "segmenting_encoder.SegmentingSeqTransducer.sample_from_prior", "segmenting_encoder.SegmentingSeqTransducer.sample_from_gold", "segmenting_encoder.SegmentingSeqTransducer.eps_greedy.is_triggered", "segmenting_encoder.SegmentingSeqTransducer.sparse_to_dense", "segmenting_encoder.SegmentingSeqTransducer.sample_from_prior"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.rl.policy_gradient.PolicyGradient.sample_from_policy", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_encoder.SegmentingSeqTransducer.sample_from_prior", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_encoder.SegmentingSeqTransducer.sample_from_gold", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.rl.eps_greedy.EpsilonGreedy.is_triggered", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_encoder.SegmentingSeqTransducer.sparse_to_dense", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_encoder.SegmentingSeqTransducer.sample_from_prior"], ["", "def", "sample_segmentation", "(", "self", ",", "embed_sent", ",", "batch_size", ")", ":", "\n", "    ", "if", "self", ".", "policy_learning", "is", "None", ":", "# Not Learning any policy", "\n", "      ", "if", "self", ".", "eps_greedy", "is", "not", "None", ":", "\n", "        ", "self", ".", "segmenting_action", "=", "self", ".", "SegmentingAction", ".", "PURE_SAMPLE", "\n", "actions", "=", "self", ".", "sample_from_prior", "(", ")", "\n", "", "else", ":", "\n", "        ", "self", ".", "segmenting_action", "=", "self", ".", "SegmentingAction", ".", "GOLD", "\n", "actions", "=", "self", ".", "sample_from_gold", "(", ")", "\n", "", "", "else", ":", "# Learning policy, with defined action or not", "\n", "      ", "predefined_actions", "=", "None", "\n", "seq_len", "=", "len", "(", "embed_sent", ")", "\n", "if", "self", ".", "eps_greedy", "and", "self", ".", "eps_greedy", ".", "is_triggered", "(", ")", ":", "\n", "        ", "self", ".", "segmenting_action", "=", "self", ".", "SegmentingAction", ".", "POLICY_SAMPLE", "\n", "predefined_actions", "=", "self", ".", "sparse_to_dense", "(", "self", ".", "sample_from_prior", "(", ")", ",", "seq_len", ")", "\n", "", "else", ":", "\n", "        ", "self", ".", "segmenting_action", "=", "self", ".", "SegmentingAction", ".", "POLICY", "\n", "", "embed_encode", "=", "self", ".", "embed_encoder", ".", "transduce", "(", "embed_sent", ")", "\n", "actions", "=", "self", ".", "sample_from_policy", "(", "embed_encode", ",", "batch_size", ",", "predefined_actions", ")", "\n", "", "return", "actions", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_encoder.SegmentingSeqTransducer.sample_from_policy": [[166, 190], ["enumerate", "range", "segmenting_encoder.SegmentingSeqTransducer.policy_learning.sample_action", "range", "len", "segmenting_encoder.SegmentingSeqTransducer.src_sent[].len_unpadded", "numpy.nonzero", "actions[].append", "segmenting_encoder.SegmentingSeqTransducer.sample_from_policy.ensure_end_segment"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.rl.policy_gradient.PolicyGradient.sample_action", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.len_unpadded", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "def", "sample_from_policy", "(", "self", ",", "encodings", ",", "batch_size", ",", "predefined_actions", "=", "None", ")", ":", "\n", "    ", "from_argmax", "=", "not", "self", ".", "train", "and", "not", "self", ".", "sample_during_search", "\n", "actions", "=", "[", "[", "]", "for", "_", "in", "range", "(", "batch_size", ")", "]", "\n", "mask", "=", "encodings", ".", "mask", ".", "np_arr", "if", "encodings", ".", "mask", "else", "None", "\n", "# Callback to ensure all samples are ended with </s> being segmented", "\n", "def", "ensure_end_segment", "(", "sample_batch", ",", "position", ")", ":", "\n", "      ", "for", "i", "in", "range", "(", "len", "(", "sample_batch", ")", ")", ":", "\n", "        ", "last_eos", "=", "self", ".", "src_sent", "[", "i", "]", ".", "len_unpadded", "(", ")", "\n", "if", "position", ">=", "last_eos", ":", "\n", "          ", "sample_batch", "[", "i", "]", "=", "1", "\n", "", "", "return", "sample_batch", "\n", "# Loop through all items in the sequence", "\n", "", "for", "position", ",", "encoding", "in", "enumerate", "(", "encodings", ")", ":", "\n", "# Sample from softmax if we have no predefined action", "\n", "      ", "predefined", "=", "predefined_actions", "[", "position", "]", "if", "predefined_actions", "is", "not", "None", "else", "None", "\n", "action", "=", "self", ".", "policy_learning", ".", "sample_action", "(", "encoding", ",", "\n", "argmax", "=", "from_argmax", ",", "\n", "sample_pp", "=", "lambda", "x", ":", "ensure_end_segment", "(", "x", ",", "position", ")", ",", "\n", "predefined_actions", "=", "predefined", ")", "\n", "# Appending the \"1\" position if it has valid flags", "\n", "for", "i", "in", "np", ".", "nonzero", "(", "action", ")", "[", "0", "]", ":", "\n", "        ", "if", "mask", "is", "None", "or", "mask", "[", "i", "]", "[", "position", "]", "==", "0", ":", "\n", "          ", "actions", "[", "i", "]", ".", "append", "(", "position", ")", "\n", "", "", "", "return", "actions", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_encoder.SegmentingSeqTransducer.sample_from_gold": [[191, 193], ["None"], "methods", ["None"], ["", "def", "sample_from_gold", "(", "self", ")", ":", "\n", "    ", "return", "[", "sent", ".", "segment", "for", "sent", "in", "self", ".", "src_sent", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_encoder.SegmentingSeqTransducer.sample_from_prior": [[194, 216], ["segmenting_encoder.SegmentingSeqTransducer.eps_greedy.get_prior", "segmenting_encoder.SegmentingSeqTransducer.src_sent.batch_size", "segmenting_encoder.SegmentingSeqTransducer.src_sent.sent_len", "segmenting_encoder.SegmentingSeqTransducer.sample", "issubclass", "zip", "src_sent.len_unpadded", "range", "actions.append", "len", "action.append", "action.append"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.rl.eps_greedy.EpsilonGreedy.get_prior", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.batch_size", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.priors.GoldInputPrior.sample", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.len_unpadded", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "def", "sample_from_prior", "(", "self", ")", ":", "\n", "    ", "prior", "=", "self", ".", "eps_greedy", ".", "get_prior", "(", ")", "\n", "batch_size", "=", "self", ".", "src_sent", ".", "batch_size", "(", ")", "\n", "length_size", "=", "self", ".", "src_sent", ".", "sent_len", "(", ")", "\n", "samples", "=", "prior", ".", "sample", "(", "batch_size", ",", "length_size", ")", "\n", "if", "issubclass", "(", "prior", ".", "__class__", ",", "GoldInputPrior", ")", ":", "\n", "# Exception when the action is taken directly from the input", "\n", "      ", "actions", "=", "samples", "\n", "", "else", ":", "\n", "      ", "actions", "=", "[", "]", "\n", "for", "src_sent", ",", "sample", "in", "zip", "(", "self", ".", "src_sent", ",", "samples", ")", ":", "\n", "        ", "current", ",", "action", "=", "0", ",", "[", "]", "\n", "src_len", "=", "src_sent", ".", "len_unpadded", "(", ")", "\n", "for", "j", "in", "range", "(", "len", "(", "sample", ")", ")", ":", "\n", "          ", "current", "+=", "sample", "[", "j", "]", "\n", "if", "current", ">=", "src_len", ":", "\n", "            ", "break", "\n", "", "action", ".", "append", "(", "current", ")", "\n", "", "if", "action", "[", "-", "1", "]", "!=", "src_len", ":", "\n", "          ", "action", ".", "append", "(", "src_len", ")", "\n", "", "actions", ".", "append", "(", "action", ")", "\n", "", "", "return", "actions", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_encoder.SegmentingSeqTransducer.sparse_to_dense": [[217, 228], ["numpy.array().transpose", "batch_dense.append", "xnmt.logger.error", "RuntimeError", "xnmt_cython.dense_from_sparse", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "def", "sparse_to_dense", "(", "self", ",", "actions", ",", "length", ")", ":", "\n", "    ", "try", ":", "\n", "      ", "from", "xnmt", ".", "cython", "import", "xnmt_cython", "\n", "", "except", ":", "\n", "      ", "logger", ".", "error", "(", "\"BLEU evaluate fast requires xnmt cython installation step.\"", "\n", "\"please check the documentation.\"", ")", "\n", "raise", "RuntimeError", "(", ")", "\n", "", "batch_dense", "=", "[", "]", "\n", "for", "batch_action", "in", "actions", ":", "\n", "      ", "batch_dense", ".", "append", "(", "xnmt_cython", ".", "dense_from_sparse", "(", "batch_action", ",", "length", ")", ")", "\n", "", "return", "np", ".", "array", "(", "batch_dense", ")", ".", "transpose", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.segmenting_encoder.SegmentingSeqTransducer.pad": [[229, 245], ["max", "dynet.vecInput", "numpy.zeros", "zip", "ret.append", "xnmt.batchers.Mask", "len", "len", "len", "xs.extend", "dynet.concatenate_cols", "[].dim", "range"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["", "def", "pad", "(", "self", ",", "outputs", ")", ":", "\n", "# Padding", "\n", "    ", "max_col", "=", "max", "(", "len", "(", "xs", ")", "for", "xs", "in", "outputs", ")", "\n", "P0", "=", "dy", ".", "vecInput", "(", "outputs", "[", "0", "]", "[", "0", "]", ".", "dim", "(", ")", "[", "0", "]", "[", "0", "]", ")", "\n", "masks", "=", "np", ".", "zeros", "(", "(", "len", "(", "outputs", ")", ",", "max_col", ")", ",", "dtype", "=", "int", ")", "\n", "modified", "=", "False", "\n", "ret", "=", "[", "]", "\n", "for", "xs", ",", "mask", "in", "zip", "(", "outputs", ",", "masks", ")", ":", "\n", "      ", "deficit", "=", "max_col", "-", "len", "(", "xs", ")", "\n", "if", "deficit", ">", "0", ":", "\n", "        ", "xs", ".", "extend", "(", "[", "P0", "for", "_", "in", "range", "(", "deficit", ")", "]", ")", "\n", "mask", "[", "-", "deficit", ":", "]", "=", "1", "\n", "modified", "=", "True", "\n", "", "ret", ".", "append", "(", "dy", ".", "concatenate_cols", "(", "xs", ")", ")", "\n", "", "mask", "=", "Mask", "(", "masks", ")", "if", "modified", "else", "None", "\n", "return", "ret", ",", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.reporter.SegmentingReporter.__init__": [[14, 22], ["xnmt.persistence.Ref", "logging.getLogger", "xnmt.utils.make_parent_dir", "reporter.SegmentingReporter.logger.addHandler", "reporter.SegmentingReporter.logger.setLevel", "xnmt.persistence.Path", "logging.StreamHandler", "open"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.make_parent_dir"], ["@", "serializable_init", "\n", "@", "register_xnmt_handler", "\n", "def", "__init__", "(", "self", ",", "report_path", ":", "str", ",", "src_vocab", "=", "Ref", "(", "Path", "(", "\"model.src_reader.vocab\"", ")", ")", ")", ":", "\n", "    ", "self", ".", "src_vocab", "=", "src_vocab", "\n", "self", ".", "logger", "=", "logging", ".", "getLogger", "(", "\"segmenting_reporter\"", ")", "\n", "utils", ".", "make_parent_dir", "(", "report_path", ")", "\n", "self", ".", "logger", ".", "addHandler", "(", "logging", ".", "StreamHandler", "(", "open", "(", "report_path", ",", "\"w\"", ")", ")", ")", "\n", "self", ".", "logger", ".", "setLevel", "(", "\"INFO\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.reporter.SegmentingReporter.on_start_sent": [[23, 27], ["numpy.random.randint", "src_sent.batch_size"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.batch_size"], ["", "@", "handle_xnmt_event", "\n", "def", "on_start_sent", "(", "self", ",", "src_sent", ")", ":", "\n", "    ", "self", ".", "src_sent", "=", "src_sent", "\n", "self", ".", "idx", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "src_sent", ".", "batch_size", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.reporter.SegmentingReporter.report_process": [[28, 58], ["src.len_unpadded", "table.append", "format.append", "format.append", "table.append", "numpy.array", "reporter.SegmentingReporter.logger.info", "numpy.flip().transpose", "table.append", "reporter.SegmentingReporter.pad_last", "table.append", "format.append", "format.append", "reporter.SegmentingReporter.apply_segmentation", "reporter.SegmentingReporter.logger.info", "range", "numpy.flip", "row_format.format", "src.sent_len", "encoder.policy_learning.policy_lls[].npvalue().transpose", "range", "encoder.policy_learning.policy_lls[].npvalue", "math.exp", "range"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.len_unpadded", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.reporter.SegmentingReporter.pad_last", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.reporter.SegmentingReporter.apply_segmentation", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.YamlFormatter.format", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len"], ["", "def", "report_process", "(", "self", ",", "encoder", ":", "SegmentingSeqTransducer", ")", ":", "\n", "    ", "src", "=", "self", ".", "src_sent", "[", "self", ".", "idx", "]", "\n", "src_len", "=", "src", ".", "len_unpadded", "(", ")", "\n", "src_word", "=", "[", "self", ".", "src_vocab", "[", "c", "]", "for", "c", "in", "src", "]", "\n", "\n", "actions", "=", "encoder", ".", "segment_actions", "\n", "table", "=", "[", "]", "\n", "format", "=", "[", "]", "\n", "table", ".", "append", "(", "[", "\"SRC\"", "]", "+", "src_word", ")", "\n", "format", ".", "append", "(", "\"{:>5}\"", ")", "\n", "sample_action", "=", "actions", "[", "self", ".", "idx", "]", "\n", "sample_dense", "=", "[", "1", "if", "j", "in", "sample_action", "else", "0", "for", "j", "in", "range", "(", "src", ".", "sent_len", "(", ")", ")", "]", "\n", "format", ".", "append", "(", "\"{:>5}\"", ")", "\n", "table", ".", "append", "(", "[", "\"ACT\"", "]", "+", "sample_dense", ")", "\n", "if", "encoder", ".", "policy_learning", "is", "not", "None", ":", "\n", "      ", "policy_lls", "=", "[", "encoder", ".", "policy_learning", ".", "policy_lls", "[", "j", "]", ".", "npvalue", "(", ")", ".", "transpose", "(", ")", "[", "self", ".", "idx", "]", "for", "j", "in", "range", "(", "src_len", ")", "]", "\n", "table", ".", "append", "(", "[", "\"LLS\"", "]", "+", "[", "\"{:.4f}\"", ".", "format", "(", "math", ".", "exp", "(", "policy_lls", "[", "j", "]", "[", "sample_dense", "[", "j", "]", "]", ")", ")", "for", "j", "in", "range", "(", "src_len", ")", "]", ")", "\n", "self", ".", "pad_last", "(", "table", ")", "\n", "valid_pos", "=", "[", "1", "if", "self", ".", "idx", "in", "x", "else", "0", "for", "x", "in", "encoder", ".", "policy_learning", ".", "valid_pos", "]", "\n", "table", ".", "append", "(", "[", "\"MSK\"", "]", "+", "valid_pos", ")", "\n", "format", ".", "append", "(", "\"{:>8}\"", ")", "\n", "format", ".", "append", "(", "\"{:>5}\"", ")", "\n", "", "arr", "=", "np", ".", "array", "(", "table", ")", "\n", "format", "=", "format", "[", ":", ":", "-", "1", "]", "\n", "self", ".", "logger", ".", "info", "(", "\"SRC: %s\"", ",", "self", ".", "apply_segmentation", "(", "src_word", ",", "sample_action", ")", ")", "\n", "arr", "=", "np", ".", "flip", "(", "arr", ",", "0", ")", ".", "transpose", "(", ")", "\n", "\n", "row_format", "=", "\"\"", ".", "join", "(", "format", ")", "\n", "for", "item", "in", "arr", ":", "\n", "      ", "self", ".", "logger", ".", "info", "(", "row_format", ".", "format", "(", "*", "item", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.reporter.SegmentingReporter.pad_last": [[59, 61], ["table[].extend", "range", "len", "len"], "methods", ["None"], ["", "", "def", "pad_last", "(", "self", ",", "table", ")", ":", "\n", "    ", "table", "[", "-", "1", "]", ".", "extend", "(", "[", "\"-\"", "for", "_", "in", "range", "(", "len", "(", "table", "[", "-", "2", "]", ")", "-", "len", "(", "table", "[", "-", "1", "]", ")", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.reporter.SegmentingReporter.apply_segmentation": [[62, 69], ["str", "word.append"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "def", "apply_segmentation", "(", "self", ",", "src", ",", "sample_action", ")", ":", "\n", "    ", "begin", "=", "0", "\n", "word", "=", "[", "]", "\n", "for", "end", "in", "sample_action", ":", "\n", "      ", "word", ".", "append", "(", "\"\"", ".", "join", "(", "src", "[", "begin", ":", "end", "+", "1", "]", ")", ")", "\n", "begin", "=", "end", "+", "1", "\n", "", "return", "str", "(", "word", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.priors.Prior.log_ll": [[18, 19], ["NotImplementedError"], "methods", ["None"], ["  ", "def", "log_ll", "(", "self", ",", "event", ")", ":", "raise", "NotImplementedError", "(", ")", "\n", "def", "sample", "(", "self", ",", "size", ")", ":", "raise", "NotImplementedError", "(", ")", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.priors.Prior.sample": [[19, 20], ["NotImplementedError"], "methods", ["None"], ["def", "sample", "(", "self", ",", "size", ")", ":", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.priors.PoissonPrior.__init__": [[24, 27], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "mu", "=", "3.3", ")", ":", "\n", "    ", "self", ".", "mu", "=", "mu", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.priors.PoissonPrior.log_ll": [[28, 30], ["math.log", "scipy.stats.poisson.pmf"], "methods", ["None"], ["", "def", "log_ll", "(", "self", ",", "event", ")", ":", "\n", "    ", "return", "math", ".", "log", "(", "poisson", ".", "pmf", "(", "event", ",", "self", ".", "mu", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.priors.PoissonPrior.sample": [[31, 33], ["numpy.random.poisson"], "methods", ["None"], ["", "def", "sample", "(", "self", ",", "batch_size", ",", "size", ")", ":", "\n", "    ", "return", "np", ".", "random", ".", "poisson", "(", "lam", "=", "self", ".", "mu", ",", "size", "=", "(", "batch_size", ",", "size", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.priors.UniformPrior.__init__": [[37, 40], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "low", "=", "0", ",", "high", "=", "1", ")", ":", "\n", "    ", "self", ".", "x_diff", "=", "high", "-", "low", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.priors.UniformPrior.log_ll": [[41, 43], ["math.log"], "methods", ["None"], ["", "def", "log_ll", "(", "self", ",", "event", ")", ":", "\n", "    ", "return", "-", "math", ".", "log", "(", "self", ".", "x_diff", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.priors.UniformPrior.sample": [[44, 46], ["numpy.random.uniform"], "methods", ["None"], ["", "def", "sample", "(", "self", ",", "batch_size", ",", "size", ")", ":", "\n", "    ", "return", "np", ".", "random", ".", "uniform", "(", "0", ",", "self", ".", "x_diff", ",", "size", "=", "(", "batch_size", ",", "size", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.priors.GoldInputPrior.__init__": [[58, 62], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "@", "register_xnmt_handler", "\n", "def", "__init__", "(", "self", ",", "attr_name", ")", ":", "\n", "    ", "self", ".", "attr_name", "=", "attr_name", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.priors.GoldInputPrior.log_ll": [[63, 65], ["None"], "methods", ["None"], ["", "def", "log_ll", "(", "self", ",", "event", ")", ":", "\n", "    ", "return", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.priors.GoldInputPrior.on_start_sent": [[66, 69], ["None"], "methods", ["None"], ["", "@", "handle_xnmt_event", "\n", "def", "on_start_sent", "(", "self", ",", "src", ")", ":", "\n", "    ", "self", ".", "src", "=", "src", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.priors.GoldInputPrior.sample": [[70, 72], ["getattr", "range"], "methods", ["None"], ["", "def", "sample", "(", "self", ",", "batch_size", ",", "size", ")", ":", "\n", "    ", "return", "[", "getattr", "(", "self", ".", "src", "[", "i", "]", ",", "self", ".", "attr_name", ")", "for", "i", "in", "range", "(", "batch_size", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.length_prior.PoissonLengthPrior.__init__": [[19, 24], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "@", "register_xnmt_handler", "\n", "def", "__init__", "(", "self", ",", "lmbd", "=", "3.3", ",", "weight", "=", "1", ")", ":", "\n", "    ", "self", ".", "lmbd", "=", "3.3", "\n", "self", ".", "weight", "=", "weight", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.length_prior.PoissonLengthPrior.on_start_sent": [[25, 28], ["None"], "methods", ["None"], ["", "@", "handle_xnmt_event", "\n", "def", "on_start_sent", "(", "self", ",", "src", ")", ":", "\n", "    ", "self", ".", "src", "=", "src", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.segmenting_encoder.length_prior.PoissonLengthPrior.log_ll": [[29, 33], ["dynet.inputTensor", "math.log", "zip", "scipy.stats.poisson.pmf", "src.len_unpadded"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.len_unpadded"], ["", "def", "log_ll", "(", "self", ",", "sample", ")", ":", "\n", "    ", "batch", "=", "[", "self", ".", "weight", "*", "math", ".", "log", "(", "poisson", ".", "pmf", "(", "len_sample", ",", "mu", "=", "src", ".", "len_unpadded", "(", ")", "/", "self", ".", "lmbd", ")", ")", "\n", "for", "src", ",", "len_sample", "in", "zip", "(", "self", ".", "src", ",", "sample", ")", "]", "\n", "return", "dy", ".", "inputTensor", "(", "batch", ",", "batched", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.tasks.EvalTask.eval": [[21, 23], ["NotImplementedError"], "methods", ["None"], ["def", "eval", "(", "self", ")", ":", "\n", "    ", "raise", "NotImplementedError", "(", "\"EvalTask.eval() needs to be implemented in child classes\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.tasks.LossEvalTask.__init__": [[42, 65], ["xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.bare", "xnmt.persistence.Ref", "xnmt.persistence.bare"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "src_file", ":", "Union", "[", "str", ",", "Sequence", "[", "str", "]", "]", ",", "\n", "ref_file", ":", "Optional", "[", "str", "]", "=", "None", ",", "\n", "model", ":", "'model_base.GeneratorModel'", "=", "Ref", "(", "\"model\"", ")", ",", "\n", "batcher", ":", "Batcher", "=", "Ref", "(", "\"train.batcher\"", ",", "default", "=", "bare", "(", "xnmt", ".", "batchers", ".", "SrcBatcher", ",", "batch_size", "=", "32", ")", ")", ",", "\n", "loss_calculator", ":", "LossCalculator", "=", "bare", "(", "MLELoss", ")", ",", "\n", "max_src_len", ":", "Optional", "[", "int", "]", "=", "None", ",", "\n", "max_trg_len", ":", "Optional", "[", "int", "]", "=", "None", ",", "\n", "max_num_sents", ":", "Optional", "[", "int", "]", "=", "None", ",", "\n", "loss_comb_method", ":", "str", "=", "Ref", "(", "\"exp_global.loss_comb_method\"", ",", "default", "=", "\"sum\"", ")", ",", "\n", "desc", ":", "Any", "=", "None", ")", ":", "\n", "    ", "self", ".", "model", "=", "model", "\n", "self", ".", "loss_calculator", "=", "loss_calculator", "\n", "self", ".", "src_file", "=", "src_file", "\n", "self", ".", "ref_file", "=", "ref_file", "\n", "self", ".", "batcher", "=", "batcher", "\n", "self", ".", "src_data", "=", "None", "\n", "self", ".", "max_src_len", "=", "max_src_len", "\n", "self", ".", "max_trg_len", "=", "max_trg_len", "\n", "self", ".", "max_num_sents", "=", "max_num_sents", "\n", "self", ".", "loss_comb_method", "=", "loss_comb_method", "\n", "self", ".", "desc", "=", "desc", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.tasks.LossEvalTask.eval": [[66, 101], ["xnmt.event_trigger.set_train", "xnmt.losses.FactoredLossVal", "zip", "xnmt.eval.metrics.LossScore", "xnmt.input_readers.read_parallel_corpus", "sum", "xnmt.utils.ReportOnException", "dynet.renew_cg", "tasks.LossEvalTask.loss_calculator.calc_loss", "sum", "tasks.LossEvalTask.get_factored_loss_val", "xnmt.losses.FactoredLossVal.items", "loss_stats.values", "trg_i.len_unpadded"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.set_train", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.read_parallel_corpus", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_encoder.DualEncoderSimilarity.calc_loss", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossExpr.get_factored_loss_val", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.len_unpadded"], ["", "def", "eval", "(", "self", ")", "->", "'EvalScore'", ":", "\n", "    ", "\"\"\"\n    Perform evaluation task.\n\n    Returns:\n      Evaluated score\n    \"\"\"", "\n", "event_trigger", ".", "set_train", "(", "False", ")", "\n", "if", "self", ".", "src_data", "is", "None", ":", "\n", "      ", "self", ".", "src_data", ",", "self", ".", "ref_data", ",", "self", ".", "src_batches", ",", "self", ".", "ref_batches", "=", "input_readers", ".", "read_parallel_corpus", "(", "src_reader", "=", "self", ".", "model", ".", "src_reader", ",", "\n", "trg_reader", "=", "self", ".", "model", ".", "trg_reader", ",", "\n", "src_file", "=", "self", ".", "src_file", ",", "\n", "trg_file", "=", "self", ".", "ref_file", ",", "\n", "batcher", "=", "self", ".", "batcher", ",", "\n", "max_num_sents", "=", "self", ".", "max_num_sents", ",", "\n", "max_src_len", "=", "self", ".", "max_src_len", ",", "\n", "max_trg_len", "=", "self", ".", "max_trg_len", ")", "\n", "", "loss_val", "=", "FactoredLossVal", "(", ")", "\n", "ref_words_cnt", "=", "0", "\n", "for", "src", ",", "trg", "in", "zip", "(", "self", ".", "src_batches", ",", "self", ".", "ref_batches", ")", ":", "\n", "      ", "with", "utils", ".", "ReportOnException", "(", "{", "\"src\"", ":", "src", ",", "\"trg\"", ":", "trg", ",", "\"graph\"", ":", "utils", ".", "print_cg_conditional", "}", ")", ":", "\n", "        ", "dy", ".", "renew_cg", "(", "immediate_compute", "=", "settings", ".", "IMMEDIATE_COMPUTE", ",", "check_validity", "=", "settings", ".", "CHECK_VALIDITY", ")", "\n", "\n", "loss", "=", "self", ".", "loss_calculator", ".", "calc_loss", "(", "self", ".", "model", ",", "src", ",", "trg", ")", "\n", "\n", "ref_words_cnt", "+=", "sum", "(", "[", "trg_i", ".", "len_unpadded", "(", ")", "for", "trg_i", "in", "trg", "]", ")", "\n", "loss_val", "+=", "loss", ".", "get_factored_loss_val", "(", "comb_method", "=", "self", ".", "loss_comb_method", ")", "\n", "\n", "", "", "loss_stats", "=", "{", "k", ":", "v", "/", "ref_words_cnt", "for", "k", ",", "v", "in", "loss_val", ".", "items", "(", ")", "}", "\n", "\n", "return", "LossScore", "(", "sum", "(", "loss_stats", ".", "values", "(", ")", ")", ",", "\n", "loss_stats", "=", "loss_stats", ",", "\n", "num_ref_words", "=", "ref_words_cnt", ",", "\n", "desc", "=", "self", ".", "desc", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.tasks.AccuracyEvalTask.__init__": [[118, 133], ["xnmt.persistence.Ref", "isinstance", "isinstance", "eval_metrics.split"], "methods", ["None"], ["@", "serializable_init", "\n", "@", "events", ".", "register_xnmt_handler", "\n", "def", "__init__", "(", "self", ",", "src_file", ":", "Union", "[", "str", ",", "Sequence", "[", "str", "]", "]", ",", "ref_file", ":", "Union", "[", "str", ",", "Sequence", "[", "str", "]", "]", ",", "hyp_file", ":", "str", ",", "\n", "model", ":", "'model_base.GeneratorModel'", "=", "Ref", "(", "\"model\"", ")", ",", "eval_metrics", ":", "Union", "[", "str", ",", "Evaluator", ",", "Sequence", "[", "Evaluator", "]", "]", "=", "\"bleu\"", ",", "\n", "inference", ":", "Optional", "[", "'inferences.Inference'", "]", "=", "None", ",", "desc", ":", "Any", "=", "None", ")", ":", "\n", "    ", "self", ".", "model", "=", "model", "\n", "if", "isinstance", "(", "eval_metrics", ",", "str", ")", ":", "\n", "      ", "eval_metrics", "=", "[", "xnmt", ".", "xnmt_evaluate", ".", "eval_shortcuts", "[", "shortcut", "]", "(", ")", "for", "shortcut", "in", "eval_metrics", ".", "split", "(", "\",\"", ")", "]", "\n", "", "elif", "not", "isinstance", "(", "eval_metrics", ",", "Sequence", ")", ":", "eval_metrics", "=", "[", "eval_metrics", "]", "\n", "self", ".", "eval_metrics", "=", "eval_metrics", "\n", "self", ".", "src_file", "=", "src_file", "\n", "self", ".", "ref_file", "=", "ref_file", "\n", "self", ".", "hyp_file", "=", "hyp_file", "\n", "self", ".", "inference", "=", "inference", "or", "self", ".", "model", ".", "inference", "\n", "self", ".", "desc", "=", "desc", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.tasks.AccuracyEvalTask.eval": [[134, 145], ["xnmt.event_trigger.set_train", "tasks.AccuracyEvalTask.report_corpus_info", "tasks.AccuracyEvalTask.inference.perform_inference", "xnmt.xnmt_evaluate.xnmt_evaluate"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.set_train", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.Reportable.report_corpus_info", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.inferences.CascadeInference.perform_inference", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.xnmt_evaluate.xnmt_evaluate"], ["", "def", "eval", "(", "self", ")", ":", "\n", "    ", "event_trigger", ".", "set_train", "(", "False", ")", "\n", "self", ".", "report_corpus_info", "(", "{", "\"ref_file\"", ":", "self", ".", "ref_file", "}", ")", "\n", "self", ".", "inference", ".", "perform_inference", "(", "generator", "=", "self", ".", "model", ",", "\n", "src_file", "=", "self", ".", "src_file", ",", "\n", "trg_file", "=", "self", ".", "hyp_file", ")", "\n", "# Evaluate", "\n", "eval_scores", "=", "xnmt", ".", "xnmt_evaluate", ".", "xnmt_evaluate", "(", "hyp_file", "=", "self", ".", "hyp_file", ",", "ref_file", "=", "self", ".", "ref_file", ",", "desc", "=", "self", ".", "desc", ",", "\n", "evaluators", "=", "self", ".", "eval_metrics", ")", "\n", "\n", "return", "eval_scores", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.tasks.DecodingEvalTask.__init__": [[159, 167], ["xnmt.persistence.Ref"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "src_file", ":", "Union", "[", "str", ",", "Sequence", "[", "str", "]", "]", ",", "hyp_file", ":", "str", ",", "model", ":", "'model_base.GeneratorModel'", "=", "Ref", "(", "\"model\"", ")", ",", "\n", "inference", ":", "Optional", "[", "'inferences.Inference'", "]", "=", "None", ")", ":", "\n", "\n", "    ", "self", ".", "model", "=", "model", "\n", "self", ".", "src_file", "=", "src_file", "\n", "self", ".", "hyp_file", "=", "hyp_file", "\n", "self", ".", "inference", "=", "inference", "or", "self", ".", "model", ".", "inference", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.tasks.DecodingEvalTask.eval": [[168, 174], ["xnmt.event_trigger.set_train", "tasks.DecodingEvalTask.inference.perform_inference"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.set_train", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.inferences.CascadeInference.perform_inference"], ["", "def", "eval", "(", "self", ")", ":", "\n", "    ", "event_trigger", ".", "set_train", "(", "False", ")", "\n", "self", ".", "inference", ".", "perform_inference", "(", "generator", "=", "self", ".", "model", ",", "\n", "src_file", "=", "self", ".", "src_file", ",", "\n", "trg_file", "=", "self", ".", "hyp_file", ")", "\n", "return", "None", "\n", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.EvalScore.__init__": [[38, 40], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "desc", ":", "Any", "=", "None", ")", "->", "None", ":", "\n", "    ", "self", ".", "desc", "=", "desc", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.EvalScore.higher_is_better": [[41, 49], ["NotImplementedError"], "methods", ["None"], ["", "def", "higher_is_better", "(", "self", ")", "->", "bool", ":", "\n", "    ", "\"\"\"\n    Return ``True`` if higher values are favorable, ``False`` otherwise.\n\n    Returns:\n      Whether higher values are favorable.\n    \"\"\"", "\n", "raise", "NotImplementedError", "(", ")", "\n", "", "def", "value", "(", "self", ")", "->", "float", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.EvalScore.value": [[49, 57], ["NotImplementedError"], "methods", ["None"], ["", "def", "value", "(", "self", ")", "->", "float", ":", "\n", "    ", "\"\"\"\n    Get the numeric value of the evaluated metric.\n\n    Returns:\n      Numeric evaluation score.\n    \"\"\"", "\n", "raise", "NotImplementedError", "(", ")", "\n", "", "def", "metric_name", "(", "self", ")", "->", "str", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.EvalScore.metric_name": [[57, 65], ["NotImplementedError"], "methods", ["None"], ["", "def", "metric_name", "(", "self", ")", "->", "str", ":", "\n", "    ", "\"\"\"\n    Get the metric name.\n\n    Returns:\n      Metric name as string.\n    \"\"\"", "\n", "raise", "NotImplementedError", "(", ")", "\n", "", "def", "score_str", "(", "self", ")", "->", "str", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.EvalScore.score_str": [[65, 73], ["NotImplementedError"], "methods", ["None"], ["", "def", "score_str", "(", "self", ")", "->", "str", ":", "\n", "    ", "\"\"\"\n    A string representation of the evaluated score, potentially including additional statistics.\n\n    Returns:\n      String representation of score.\n    \"\"\"", "\n", "raise", "NotImplementedError", "(", ")", "\n", "", "def", "better_than", "(", "self", ",", "another_score", ":", "'EvalScore'", ")", "->", "bool", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.EvalScore.better_than": [[73, 90], ["metrics.EvalScore.higher_is_better", "type", "type", "another_score.value", "metrics.EvalScore.value", "metrics.EvalScore.value", "another_score.value", "metrics.EvalScore.value", "another_score.value"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.higher_is_better", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value"], ["", "def", "better_than", "(", "self", ",", "another_score", ":", "'EvalScore'", ")", "->", "bool", ":", "\n", "    ", "\"\"\"\n    Compare score against another score and return ``True`` iff this score is better.\n\n    Args:\n      another_score: score to _compare against.\n\n    Returns:\n      Whether this score is better than ``another_score``.\n    \"\"\"", "\n", "if", "another_score", "is", "None", "or", "another_score", ".", "value", "(", ")", "is", "None", ":", "return", "True", "\n", "elif", "self", ".", "value", "(", ")", "is", "None", ":", "return", "False", "\n", "assert", "type", "(", "self", ")", "==", "type", "(", "another_score", ")", "\n", "if", "self", ".", "higher_is_better", "(", ")", ":", "\n", "      ", "return", "self", ".", "value", "(", ")", ">", "another_score", ".", "value", "(", ")", "\n", "", "else", ":", "\n", "      ", "return", "self", ".", "value", "(", ")", "<", "another_score", ".", "value", "(", ")", "\n", "", "", "def", "__str__", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.EvalScore.__str__": [[90, 96], ["getattr", "metrics.EvalScore.metric_name", "metrics.EvalScore.score_str", "metrics.EvalScore.metric_name", "metrics.EvalScore.score_str"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.metric_name", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.score_str", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.metric_name", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.score_str"], ["", "", "def", "__str__", "(", "self", ")", ":", "\n", "    ", "desc", "=", "getattr", "(", "self", ",", "\"desc\"", ",", "None", ")", "\n", "if", "desc", ":", "\n", "      ", "return", "f\"{self.metric_name()} ({desc}): {self.score_str()}\"", "\n", "", "else", ":", "\n", "      ", "return", "f\"{self.metric_name()}: {self.score_str()}\"", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.SentenceLevelEvalScore.aggregate": [[101, 114], ["NotImplementedError"], "methods", ["None"], ["@", "staticmethod", "\n", "def", "aggregate", "(", "scores", ":", "Sequence", "[", "'SentenceLevelEvalScore'", "]", ",", "desc", ":", "Any", "=", "None", ")", "->", "'SentenceLevelEvalScore'", ":", "\n", "    ", "\"\"\"\n    Aggregate a sequence of sentence-level scores into a corpus-level score.\n\n    Args:\n      scores: list of sentence-level scores.\n      desc: human-readable description.\n\n    Returns:\n      Score object that is the aggregate of all sentence-level scores.\n    \"\"\"", "\n", "raise", "NotImplementedError", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.LossScore.__init__": [[128, 141], ["metrics.EvalScore.__init__"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "loss", ":", "numbers", ".", "Real", ",", "\n", "loss_stats", ":", "Dict", "[", "str", ",", "numbers", ".", "Real", "]", "=", "None", ",", "\n", "num_ref_words", ":", "Optional", "[", "numbers", ".", "Integral", "]", "=", "None", ",", "\n", "desc", ":", "Any", "=", "None", ")", "->", "None", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "desc", "=", "desc", ")", "\n", "self", ".", "loss", "=", "loss", "\n", "self", ".", "loss_stats", "=", "loss_stats", "\n", "self", ".", "num_ref_words", "=", "num_ref_words", "\n", "self", ".", "serialize_params", "=", "{", "\"loss\"", ":", "loss", "}", "\n", "if", "desc", "is", "not", "None", ":", "self", ".", "serialize_params", "[", "\"desc\"", "]", "=", "desc", "\n", "if", "loss_stats", "is", "not", "None", ":", "self", ".", "serialize_params", "[", "\"loss_stats\"", "]", "=", "desc", "\n", "", "def", "value", "(", "self", ")", ":", "return", "self", ".", "loss", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.LossScore.value": [[141, 142], ["None"], "methods", ["None"], ["", "def", "value", "(", "self", ")", ":", "return", "self", ".", "loss", "\n", "def", "metric_name", "(", "self", ")", ":", "return", "\"Loss\"", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.LossScore.metric_name": [[142, 143], ["None"], "methods", ["None"], ["def", "metric_name", "(", "self", ")", ":", "return", "\"Loss\"", "\n", "def", "higher_is_better", "(", "self", ")", ":", "return", "False", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.LossScore.higher_is_better": [[143, 144], ["None"], "methods", ["None"], ["def", "higher_is_better", "(", "self", ")", ":", "return", "False", "\n", "def", "score_str", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.LossScore.score_str": [[144, 149], ["len", "metrics.LossScore.value", "metrics.LossScore.loss_stats.items"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items"], ["def", "score_str", "(", "self", ")", ":", "\n", "    ", "if", "self", ".", "loss_stats", "is", "not", "None", "and", "len", "(", "self", ".", "loss_stats", ")", ">", "1", ":", "\n", "      ", "return", "\"{\"", "+", "\", \"", ".", "join", "(", "f\"{k}: {v:.5f}\"", "for", "k", ",", "v", "in", "self", ".", "loss_stats", ".", "items", "(", ")", ")", "+", "f\"}} (ref_len={self.num_ref_words})\"", "\n", "", "else", ":", "\n", "      ", "return", "f\"{self.value():.3f} (ref_len={self.num_ref_words})\"", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.BLEUScore.__init__": [[165, 185], ["metrics.BLEUScore.serialize_params.update", "getattr", "getattr"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.MultiTaskTrainingRegimen.update"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "bleu", ":", "numbers", ".", "Real", ",", "\n", "frac_score_list", ":", "Sequence", "[", "numbers", ".", "Real", "]", "=", "None", ",", "\n", "brevity_penalty_score", ":", "numbers", ".", "Real", "=", "None", ",", "\n", "hyp_len", ":", "numbers", ".", "Integral", "=", "None", ",", "\n", "ref_len", ":", "numbers", ".", "Integral", "=", "None", ",", "\n", "ngram", ":", "numbers", ".", "Integral", "=", "4", ",", "\n", "desc", ":", "Any", "=", "None", ")", "->", "None", ":", "\n", "    ", "self", ".", "bleu", "=", "bleu", "\n", "self", ".", "frac_score_list", "=", "frac_score_list", "\n", "self", ".", "brevity_penalty_score", "=", "brevity_penalty_score", "\n", "self", ".", "hyp_len", "=", "hyp_len", "\n", "self", ".", "ref_len", "=", "ref_len", "\n", "self", ".", "ngram", "=", "ngram", "\n", "self", ".", "desc", "=", "desc", "\n", "self", ".", "serialize_params", "=", "{", "\"bleu\"", ":", "bleu", ",", "\"ngram\"", ":", "ngram", "}", "\n", "self", ".", "serialize_params", ".", "update", "(", "\n", "{", "k", ":", "getattr", "(", "self", ",", "k", ")", "for", "k", "in", "[", "\"frac_score_list\"", ",", "\"brevity_penalty_score\"", ",", "\"hyp_len\"", ",", "\"ref_len\"", ",", "\"desc\"", "]", "if", "\n", "getattr", "(", "self", ",", "k", ")", "is", "not", "None", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.BLEUScore.value": [[186, 187], ["None"], "methods", ["None"], ["", "def", "value", "(", "self", ")", ":", "return", "self", ".", "bleu", "if", "self", ".", "bleu", "is", "not", "None", "else", "0.0", "\n", "def", "metric_name", "(", "self", ")", ":", "return", "\"BLEU\"", "+", "str", "(", "self", ".", "ngram", ")", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.BLEUScore.metric_name": [[187, 188], ["str"], "methods", ["None"], ["def", "metric_name", "(", "self", ")", ":", "return", "\"BLEU\"", "+", "str", "(", "self", ".", "ngram", ")", "\n", "def", "higher_is_better", "(", "self", ")", ":", "return", "True", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.BLEUScore.higher_is_better": [[188, 189], ["None"], "methods", ["None"], ["def", "higher_is_better", "(", "self", ")", ":", "return", "True", "\n", "def", "score_str", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.BLEUScore.score_str": [[189, 194], ["None"], "methods", ["None"], ["def", "score_str", "(", "self", ")", ":", "\n", "    ", "if", "self", ".", "bleu", "is", "None", ":", "\n", "      ", "return", "\"0\"", "\n", "", "else", ":", "\n", "      ", "return", "f\"{self.bleu}, {'/'.join(self.frac_score_list)} (BP = {self.brevity_penalty_score:.6f}, \"", "f\"ratio={self.hyp_len / self.ref_len:.2f}, hyp_len={self.hyp_len}, ref_len={self.ref_len})\"", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.GLEUScore.__init__": [[208, 223], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "corpus_n_match", ":", "numbers", ".", "Integral", ",", "\n", "corpus_total", ":", "numbers", ".", "Integral", ",", "\n", "hyp_len", ":", "numbers", ".", "Integral", ",", "\n", "ref_len", ":", "numbers", ".", "Integral", ",", "\n", "desc", ":", "Any", "=", "None", ")", "->", "None", ":", "\n", "    ", "self", ".", "corpus_n_match", "=", "corpus_n_match", "\n", "self", ".", "corpus_total", "=", "corpus_total", "\n", "self", ".", "hyp_len", "=", "hyp_len", "\n", "self", ".", "ref_len", "=", "ref_len", "\n", "self", ".", "desc", "=", "desc", "\n", "self", ".", "serialize_params", "=", "{", "\"corpus_n_match\"", ":", "corpus_n_match", ",", "\"corpus_total\"", ":", "corpus_total", ",", "\"hyp_len\"", ":", "hyp_len", ",", "\n", "\"ref_len\"", ":", "ref_len", "}", "\n", "if", "desc", "is", "not", "None", ":", "self", ".", "serialize_params", "[", "\"desc\"", "]", "=", "desc", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.GLEUScore.value": [[224, 229], ["None"], "methods", ["None"], ["", "def", "value", "(", "self", ")", ":", "\n", "    ", "if", "self", ".", "corpus_total", "==", "0", ":", "\n", "      ", "return", "0.0", "\n", "", "else", ":", "\n", "      ", "return", "self", ".", "corpus_n_match", "/", "self", ".", "corpus_total", "\n", "", "", "def", "metric_name", "(", "self", ")", ":", "return", "\"GLEU\"", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.GLEUScore.metric_name": [[229, 230], ["None"], "methods", ["None"], ["", "", "def", "metric_name", "(", "self", ")", ":", "return", "\"GLEU\"", "\n", "def", "higher_is_better", "(", "self", ")", ":", "return", "True", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.GLEUScore.higher_is_better": [[230, 231], ["None"], "methods", ["None"], ["def", "higher_is_better", "(", "self", ")", ":", "return", "True", "\n", "def", "score_str", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.GLEUScore.score_str": [[231, 233], ["metrics.GLEUScore.value"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value"], ["def", "score_str", "(", "self", ")", ":", "\n", "    ", "return", "\"{:.6f}\"", ".", "format", "(", "self", ".", "value", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.GLEUScore.aggregate": [[234, 241], ["metrics.GLEUScore", "sum", "sum", "sum", "sum"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "aggregate", "(", "scores", ":", "Sequence", "[", "'SentenceLevelEvalScore'", "]", ",", "desc", ":", "Any", "=", "None", ")", ":", "\n", "    ", "return", "GLEUScore", "(", "corpus_n_match", "=", "sum", "(", "s", ".", "corpus_n_match", "for", "s", "in", "scores", ")", ",", "\n", "corpus_total", "=", "sum", "(", "s", ".", "corpus_total", "for", "s", "in", "scores", ")", ",", "\n", "hyp_len", "=", "sum", "(", "s", ".", "hyp_len", "for", "s", "in", "scores", ")", ",", "\n", "ref_len", "=", "sum", "(", "s", ".", "ref_len", "for", "s", "in", "scores", ")", ",", "\n", "desc", "=", "desc", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.LevenshteinScore.__init__": [[254, 269], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "correct", ":", "numbers", ".", "Integral", ",", "\n", "substitutions", ":", "numbers", ".", "Integral", ",", "\n", "insertions", ":", "numbers", ".", "Integral", ",", "\n", "deletions", ":", "numbers", ".", "Integral", ",", "\n", "desc", ":", "Any", "=", "None", ")", "->", "None", ":", "\n", "    ", "self", ".", "correct", "=", "correct", "\n", "self", ".", "substitutions", "=", "substitutions", "\n", "self", ".", "insertions", "=", "insertions", "\n", "self", ".", "deletions", "=", "deletions", "\n", "self", ".", "desc", "=", "desc", "\n", "self", ".", "serialize_params", "=", "{", "\"correct\"", ":", "correct", ",", "\"substitutions\"", ":", "substitutions", ",", "\"insertions\"", ":", "insertions", ",", "\n", "\"deletions\"", ":", "deletions", "}", "\n", "if", "desc", "is", "not", "None", ":", "self", ".", "serialize_params", "[", "\"desc\"", "]", "=", "desc", "\n", "", "def", "value", "(", "self", ")", ":", "return", "(", "self", ".", "substitutions", "+", "self", ".", "insertions", "+", "self", ".", "deletions", ")", "/", "(", "self", ".", "ref_len", "(", ")", ")", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.LevenshteinScore.value": [[269, 270], ["metrics.LevenshteinScore.ref_len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.LevenshteinScore.ref_len"], ["", "def", "value", "(", "self", ")", ":", "return", "(", "self", ".", "substitutions", "+", "self", ".", "insertions", "+", "self", ".", "deletions", ")", "/", "(", "self", ".", "ref_len", "(", ")", ")", "\n", "def", "hyp_len", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.LevenshteinScore.hyp_len": [[270, 272], ["None"], "methods", ["None"], ["def", "hyp_len", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "correct", "+", "self", ".", "substitutions", "+", "self", ".", "insertions", "\n", "", "def", "ref_len", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.LevenshteinScore.ref_len": [[272, 274], ["None"], "methods", ["None"], ["", "def", "ref_len", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "correct", "+", "self", ".", "substitutions", "+", "self", ".", "deletions", "\n", "", "def", "higher_is_better", "(", "self", ")", ":", "return", "False", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.LevenshteinScore.higher_is_better": [[274, 275], ["None"], "methods", ["None"], ["", "def", "higher_is_better", "(", "self", ")", ":", "return", "False", "\n", "def", "score_str", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.LevenshteinScore.score_str": [[275, 277], ["metrics.LevenshteinScore.hyp_len", "metrics.LevenshteinScore.ref_len", "metrics.LevenshteinScore.value"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.LevenshteinScore.hyp_len", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.LevenshteinScore.ref_len", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value"], ["def", "score_str", "(", "self", ")", ":", "\n", "    ", "return", "f\"{self.value()*100.0:.2f}% \"", "f\"( C/S/I/D: {self.correct}/{self.substitutions}/{self.insertions}/{self.deletions}; \""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.LevenshteinScore.aggregate": [[279, 285], ["scores[].__class__", "sum", "sum", "sum", "sum"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "aggregate", "(", "scores", ":", "Sequence", "[", "'LevenshteinScore'", "]", ",", "desc", ":", "Any", "=", "None", ")", "->", "'LevenshteinScore'", ":", "\n", "    ", "return", "scores", "[", "0", "]", ".", "__class__", "(", "correct", "=", "sum", "(", "s", ".", "correct", "for", "s", "in", "scores", ")", ",", "\n", "substitutions", "=", "sum", "(", "s", ".", "substitutions", "for", "s", "in", "scores", ")", ",", "\n", "insertions", "=", "sum", "(", "s", ".", "insertions", "for", "s", "in", "scores", ")", ",", "\n", "deletions", "=", "sum", "(", "s", ".", "deletions", "for", "s", "in", "scores", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.WERScore.metric_name": [[291, 292], ["None"], "methods", ["None"], ["def", "metric_name", "(", "self", ")", ":", "return", "\"WER\"", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.CERScore.metric_name": [[298, 299], ["None"], "methods", ["None"], ["def", "metric_name", "(", "self", ")", ":", "return", "\"CER\"", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.RecallScore.__init__": [[313, 327], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "recall", ":", "numbers", ".", "Real", ",", "\n", "hyp_len", ":", "numbers", ".", "Integral", ",", "\n", "ref_len", ":", "numbers", ".", "Integral", ",", "\n", "nbest", ":", "numbers", ".", "Integral", "=", "5", ",", "\n", "desc", ":", "Any", "=", "None", ")", "->", "None", ":", "\n", "    ", "self", ".", "recall", "=", "recall", "\n", "self", ".", "hyp_len", "=", "hyp_len", "\n", "self", ".", "ref_len", "=", "ref_len", "\n", "self", ".", "nbest", "=", "nbest", "\n", "self", ".", "desc", "=", "desc", "\n", "self", ".", "serialize_params", "=", "{", "\"recall\"", ":", "recall", ",", "\"hyp_len\"", ":", "hyp_len", ",", "\"ref_len\"", ":", "ref_len", ",", "\"nbest\"", ":", "nbest", "}", "\n", "if", "desc", "is", "not", "None", ":", "self", ".", "serialize_params", "[", "\"desc\"", "]", "=", "desc", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.RecallScore.higher_is_better": [[328, 329], ["None"], "methods", ["None"], ["", "def", "higher_is_better", "(", "self", ")", ":", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.RecallScore.score_str": [[330, 332], ["metrics.RecallScore.value"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value"], ["def", "score_str", "(", "self", ")", ":", "\n", "    ", "return", "\"{:.2f}%\"", ".", "format", "(", "self", ".", "value", "(", ")", "*", "100.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.RecallScore.value": [[333, 335], ["None"], "methods", ["None"], ["", "def", "value", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "recall", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.RecallScore.metric_name": [[336, 338], ["str"], "methods", ["None"], ["", "def", "metric_name", "(", "self", ")", ":", "\n", "    ", "return", "\"Recall\"", "+", "str", "(", "self", ".", "nbest", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.RecallScore.aggregate": [[339, 342], ["metrics.RecallScore", "numpy.average", "len", "len"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "aggregate", "(", "scores", ":", "Sequence", "[", "'RecallScore'", "]", ",", "desc", ":", "Any", "=", "None", ")", "->", "'RecallScore'", ":", "\n", "    ", "return", "RecallScore", "(", "recall", "=", "np", ".", "average", "(", "s", ".", "recall", "for", "s", "in", "scores", ")", ",", "hyp_len", "=", "len", "(", "scores", ")", ",", "ref_len", "=", "len", "(", "scores", ")", ",", "nbest", "=", "scores", "[", "0", "]", ".", "nbest", ",", "desc", "=", "desc", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.ExternalScore.__init__": [[354, 361], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "value", ":", "numbers", ".", "Real", ",", "higher_is_better", ":", "bool", "=", "True", ",", "desc", ":", "Any", "=", "None", ")", "->", "None", ":", "\n", "    ", "self", ".", "value", "=", "value", "\n", "self", ".", "higher_is_better", "=", "higher_is_better", "\n", "self", ".", "desc", "=", "desc", "\n", "self", ".", "serialize_params", "=", "{", "\"value\"", ":", "value", ",", "\"higher_is_better\"", ":", "higher_is_better", "}", "\n", "if", "desc", "is", "not", "None", ":", "self", ".", "serialize_params", "[", "\"desc\"", "]", "=", "desc", "\n", "", "def", "value", "(", "self", ")", ":", "return", "self", ".", "value", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.ExternalScore.value": [[361, 362], ["None"], "methods", ["None"], ["", "def", "value", "(", "self", ")", ":", "return", "self", ".", "value", "\n", "def", "metric_name", "(", "self", ")", ":", "return", "\"External\"", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.ExternalScore.metric_name": [[362, 363], ["None"], "methods", ["None"], ["def", "metric_name", "(", "self", ")", ":", "return", "\"External\"", "\n", "def", "higher_is_better", "(", "self", ")", ":", "return", "self", ".", "higher_is_better", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.ExternalScore.higher_is_better": [[363, 364], ["None"], "methods", ["None"], ["def", "higher_is_better", "(", "self", ")", ":", "return", "self", ".", "higher_is_better", "\n", "def", "score_str", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.ExternalScore.score_str": [[364, 366], ["None"], "methods", ["None"], ["def", "score_str", "(", "self", ")", ":", "\n", "    ", "return", "\"{:.3f}\"", ".", "format", "(", "self", ".", "value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.SequenceAccuracyScore.__init__": [[378, 388], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "num_correct", ":", "numbers", ".", "Integral", ",", "\n", "num_total", ":", "numbers", ".", "Integral", ",", "\n", "desc", ":", "Any", "=", "None", ")", ":", "\n", "    ", "self", ".", "num_correct", "=", "num_correct", "\n", "self", ".", "num_total", "=", "num_total", "\n", "self", ".", "desc", "=", "desc", "\n", "self", ".", "serialize_params", "=", "{", "\"num_correct\"", ":", "num_correct", ",", "\"num_total\"", ":", "num_total", "}", "\n", "if", "desc", "is", "not", "None", ":", "self", ".", "serialize_params", "[", "\"desc\"", "]", "=", "desc", "\n", "", "def", "higher_is_better", "(", "self", ")", ":", "return", "True", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.SequenceAccuracyScore.higher_is_better": [[388, 389], ["None"], "methods", ["None"], ["", "def", "higher_is_better", "(", "self", ")", ":", "return", "True", "\n", "def", "value", "(", "self", ")", ":", "return", "self", ".", "num_correct", "/", "self", ".", "num_total", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.SequenceAccuracyScore.value": [[389, 390], ["None"], "methods", ["None"], ["def", "value", "(", "self", ")", ":", "return", "self", ".", "num_correct", "/", "self", ".", "num_total", "\n", "def", "metric_name", "(", "self", ")", ":", "return", "\"SequenceAccuracy\"", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.SequenceAccuracyScore.metric_name": [[390, 391], ["None"], "methods", ["None"], ["def", "metric_name", "(", "self", ")", ":", "return", "\"SequenceAccuracy\"", "\n", "def", "score_str", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.SequenceAccuracyScore.score_str": [[391, 393], ["metrics.SequenceAccuracyScore.value"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value"], ["def", "score_str", "(", "self", ")", ":", "\n", "    ", "return", "f\"{self.value()*100.0:.2f}%\"", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.SequenceAccuracyScore.aggregate": [[394, 399], ["metrics.SequenceAccuracyScore", "sum", "sum"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "aggregate", "(", "scores", ":", "Sequence", "[", "'SentenceLevelEvalScore'", "]", ",", "desc", ":", "Any", "=", "None", ")", ":", "\n", "    ", "return", "SequenceAccuracyScore", "(", "num_correct", "=", "sum", "(", "s", ".", "num_correct", "for", "s", "in", "scores", ")", ",", "\n", "num_total", "=", "sum", "(", "s", ".", "num_total", "for", "s", "in", "scores", ")", ",", "\n", "desc", "=", "desc", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.__init__": [[403, 414], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "true_pos", ":", "numbers", ".", "Integral", ",", "\n", "false_neg", ":", "numbers", ".", "Integral", ",", "\n", "false_pos", ":", "numbers", ".", "Integral", ",", "\n", "desc", ":", "Any", "=", "None", ")", ":", "\n", "    ", "self", ".", "true_pos", "=", "true_pos", "\n", "self", ".", "false_neg", "=", "false_neg", "\n", "self", ".", "false_pos", "=", "false_pos", "\n", "self", ".", "serialize_params", "=", "{", "\"true_pos\"", ":", "true_pos", ",", "\"false_neg\"", ":", "false_neg", ",", "\"false_pos\"", ":", "false_pos", "}", "\n", "if", "desc", "is", "not", "None", ":", "self", ".", "serialize_params", "[", "\"desc\"", "]", "=", "desc", "\n", "", "def", "higher_is_better", "(", "self", ")", ":", "return", "True", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.higher_is_better": [[414, 415], ["None"], "methods", ["None"], ["", "def", "higher_is_better", "(", "self", ")", ":", "return", "True", "\n", "def", "value", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value": [[415, 420], ["None"], "methods", ["None"], ["def", "value", "(", "self", ")", ":", "\n", "    ", "if", "self", ".", "true_pos", "+", "self", ".", "false_neg", "+", "self", ".", "false_pos", ">", "0", ":", "\n", "      ", "return", "2", "*", "self", ".", "true_pos", "/", "(", "2", "*", "self", ".", "true_pos", "+", "self", ".", "false_neg", "+", "self", ".", "false_pos", ")", "\n", "", "else", ":", "\n", "      ", "return", "\"n/a\"", "\n", "", "", "def", "metric_name", "(", "self", ")", ":", "return", "\"F1 Score\"", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.metric_name": [[420, 421], ["None"], "methods", ["None"], ["", "", "def", "metric_name", "(", "self", ")", ":", "return", "\"F1 Score\"", "\n", "def", "score_str", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.score_str": [[421, 429], ["metrics.FMeasure.value", "isinstance", "metrics.FMeasure.value"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value"], ["def", "score_str", "(", "self", ")", ":", "\n", "    ", "prec", "=", "0", "\n", "if", "self", ".", "true_pos", "+", "self", ".", "false_pos", ">", "0", ":", "prec", "=", "self", ".", "true_pos", "/", "(", "self", ".", "true_pos", "+", "self", ".", "false_pos", ")", "\n", "rec", "=", "0", "\n", "if", "self", ".", "true_pos", "+", "self", ".", "false_neg", ">", "0", ":", "rec", "=", "self", ".", "true_pos", "/", "(", "self", ".", "true_pos", "+", "self", ".", "false_neg", ")", "\n", "val", "=", "self", ".", "value", "(", ")", "\n", "if", "isinstance", "(", "val", ",", "float", ")", ":", "val", "=", "f\"{self.value()*100.0:.2f}%\"", "\n", "return", "f\"{val} \"", "f\"(prec: {prec}, \""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.aggregate": [[432, 438], ["metrics.FMeasure", "sum", "sum", "sum"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "aggregate", "(", "scores", ":", "Sequence", "[", "'SentenceLevelEvalScore'", "]", ",", "desc", ":", "Any", "=", "None", ")", ":", "\n", "    ", "return", "FMeasure", "(", "true_pos", "=", "sum", "(", "s", ".", "true_pos", "for", "s", "in", "scores", ")", ",", "\n", "false_neg", "=", "sum", "(", "s", ".", "false_neg", "for", "s", "in", "scores", ")", ",", "\n", "false_pos", "=", "sum", "(", "s", ".", "false_pos", "for", "s", "in", "scores", ")", ",", "\n", "desc", "=", "desc", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.Evaluator.evaluate": [[445, 456], ["NotImplementedError"], "methods", ["None"], ["def", "evaluate", "(", "self", ",", "ref", ":", "Sequence", ",", "hyp", ":", "Sequence", ",", "desc", ":", "Any", "=", "None", ")", "->", "EvalScore", ":", "\n", "    ", "\"\"\"\n  Calculate the quality of output given a reference.\n\n  Args:\n    ref: list of reference sents ( a sentence is a list of tokens )\n    hyp: list of hypothesis sents ( a sentence is a list of tokens )\n    desc: optional description that is passed on to score objects\n  Returns:\n  \"\"\"", "\n", "raise", "NotImplementedError", "(", "'evaluate must be implemented in Evaluator subclasses'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.Evaluator.evaluate_multi_ref": [[457, 467], ["NotImplementedError", "type"], "methods", ["None"], ["", "def", "evaluate_multi_ref", "(", "self", ",", "ref", ":", "Sequence", "[", "Sequence", "]", ",", "hyp", ":", "Sequence", ",", "desc", ":", "Any", "=", "None", ")", "->", "EvalScore", ":", "\n", "    ", "\"\"\"\n  Calculate the quality of output given multiple references.\n\n  Args:\n    ref: list of tuples of reference sentences ( a sentence is a list of tokens )\n    hyp: list of hypothesis sentences ( a sentence is a list of tokens )\n    desc: optional description that is passed on to score objects\n  \"\"\"", "\n", "raise", "NotImplementedError", "(", "f'evaluate_multi_ref() is not implemented for {type(self)}.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.SentenceLevelEvaluator.__init__": [[475, 477], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "write_sentence_scores", ":", "Optional", "[", "str", "]", "=", "None", ")", ":", "\n", "    ", "self", ".", "write_sentence_scores", "=", "write_sentence_scores", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.SentenceLevelEvaluator.evaluate": [[478, 485], ["sentence_scores[].__class__.aggregate", "len", "len", "metrics.SentenceLevelEvaluator.evaluate_one_sent", "zip", "open", "f_out.write", "yaml.dump"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.aggregate", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.bow.BowFMeasureEvaluator.evaluate_one_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.write"], ["", "def", "evaluate", "(", "self", ",", "ref", ":", "Sequence", ",", "hyp", ":", "Sequence", ",", "desc", ":", "Any", "=", "None", ")", "->", "SentenceLevelEvalScore", ":", "\n", "    ", "assert", "(", "len", "(", "ref", ")", "==", "len", "(", "hyp", ")", ")", ",", "\"Length of reference corpus and candidate corpus must be same\"", "\n", "sentence_scores", "=", "[", "self", ".", "evaluate_one_sent", "(", "ref_i", ",", "hyp_i", ")", "for", "(", "ref_i", ",", "hyp_i", ")", "in", "zip", "(", "ref", ",", "hyp", ")", "]", "\n", "if", "self", ".", "write_sentence_scores", ":", "\n", "      ", "with", "open", "(", "self", ".", "write_sentence_scores", ",", "\"w\"", ")", "as", "f_out", ":", "f_out", ".", "write", "(", "yaml", ".", "dump", "(", "sentence_scores", ")", ")", "\n", "", "return", "sentence_scores", "[", "0", "]", ".", "__class__", ".", "aggregate", "(", "sentence_scores", ",", "desc", "=", "desc", ")", "\n", "", "def", "evaluate_one_sent", "(", "self", ",", "ref", ":", "Any", ",", "hyp", ":", "Any", ")", "->", "SentenceLevelEvalScore", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.SentenceLevelEvaluator.evaluate_one_sent": [[485, 487], ["NotImplementedError"], "methods", ["None"], ["", "def", "evaluate_one_sent", "(", "self", ",", "ref", ":", "Any", ",", "hyp", ":", "Any", ")", "->", "SentenceLevelEvalScore", ":", "\n", "    ", "raise", "NotImplementedError", "(", "\"evaluate_one_sent must be implemented in SentenceLevelEvaluator subclasses\"", ")", "\n", "", "def", "evaluate_multi_ref", "(", "self", ",", "ref", ":", "Sequence", "[", "Sequence", "]", ",", "hyp", ":", "Sequence", ",", "desc", ":", "Any", "=", "None", ")", "->", "EvalScore", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.SentenceLevelEvaluator.evaluate_multi_ref": [[487, 499], ["zip", "sentence_scores[].__class__.aggregate", "sentence_scores.append", "metrics.SentenceLevelEvaluator.evaluate_one_sent", "open", "f_out.write", "metrics.SentenceLevelEvaluator.better_than", "yaml.dump"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.aggregate", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.bow.BowFMeasureEvaluator.evaluate_one_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.write", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.EvalScore.better_than"], ["", "def", "evaluate_multi_ref", "(", "self", ",", "ref", ":", "Sequence", "[", "Sequence", "]", ",", "hyp", ":", "Sequence", ",", "desc", ":", "Any", "=", "None", ")", "->", "EvalScore", ":", "\n", "    ", "sentence_scores", "=", "[", "]", "\n", "for", "ref_alternatives_i", ",", "hyp_i", "in", "zip", "(", "ref", ",", "hyp", ")", ":", "\n", "      ", "cur_best", "=", "None", "\n", "for", "ref_ij", "in", "ref_alternatives_i", ":", "\n", "        ", "cur_score", "=", "self", ".", "evaluate_one_sent", "(", "ref_ij", ",", "hyp_i", ")", "\n", "if", "cur_best", "is", "None", "or", "cur_score", ".", "better_than", "(", "cur_best", ")", ":", "\n", "          ", "cur_best", "=", "cur_score", "\n", "", "", "sentence_scores", ".", "append", "(", "cur_best", ")", "\n", "", "if", "self", ".", "write_sentence_scores", ":", "\n", "      ", "with", "open", "(", "self", ".", "write_sentence_scores", ",", "\"w\"", ")", "as", "f_out", ":", "f_out", ".", "write", "(", "yaml", ".", "dump", "(", "sentence_scores", ")", ")", "\n", "", "return", "sentence_scores", "[", "0", "]", ".", "__class__", ".", "aggregate", "(", "sentence_scores", ",", "desc", "=", "desc", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FastBLEUEvaluator.__init__": [[513, 520], ["numpy.ones"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "ngram", ":", "numbers", ".", "Integral", "=", "4", ",", "smooth", ":", "numbers", ".", "Real", "=", "1", ")", ":", "\n", "    ", "self", ".", "ngram", "=", "ngram", "\n", "self", ".", "weights", "=", "(", "1", "/", "ngram", ")", "*", "np", ".", "ones", "(", "ngram", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "self", ".", "smooth", "=", "smooth", "\n", "self", ".", "reference_corpus", "=", "None", "\n", "self", ".", "candidate_corpus", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FastBLEUEvaluator.evaluate_one_sent": [[521, 530], ["xnmt_cython.bleu_sentence", "xnmt.logger.error", "len", "len"], "methods", ["None"], ["", "def", "evaluate_one_sent", "(", "self", ",", "ref", ",", "hyp", ")", ":", "\n", "    ", "try", ":", "\n", "      ", "from", "xnmt", ".", "cython", "import", "xnmt_cython", "\n", "", "except", ":", "\n", "      ", "logger", ".", "error", "(", "\"BLEU evaluate fast requires xnmt cython installation step.\"", "\n", "\"please check the documentation.\"", ")", "\n", "raise", "\n", "", "if", "len", "(", "ref", ")", "==", "0", "or", "len", "(", "hyp", ")", "==", "0", ":", "return", "0", "\n", "return", "xnmt_cython", ".", "bleu_sentence", "(", "self", ".", "ngram", ",", "self", ".", "smooth", ",", "ref", ",", "hyp", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.BLEUEvaluator.__init__": [[543, 549], ["numpy.ones"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "ngram", ":", "numbers", ".", "Integral", "=", "4", ")", ":", "\n", "    ", "self", ".", "ngram", "=", "ngram", "\n", "self", ".", "weights", "=", "(", "1", "/", "ngram", ")", "*", "np", ".", "ones", "(", "ngram", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "self", ".", "reference_corpus", "=", "None", "\n", "self", ".", "candidate_corpus", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.BLEUEvaluator.evaluate": [[550, 560], ["metrics.BLEUEvaluator._eval"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.BLEUEvaluator._eval"], ["", "def", "evaluate", "(", "self", ",", "ref", ":", "Sequence", "[", "Sequence", "[", "str", "]", "]", ",", "hyp", ":", "Sequence", "[", "Sequence", "[", "str", "]", "]", ",", "desc", ":", "Any", "=", "None", ")", "->", "BLEUScore", ":", "\n", "    ", "\"\"\"\n    Args:\n      ref: reference sentences (single-reference case: sentence is list of strings;\n      hyp: list of hypothesis sentences ( a sentence is a list of tokens )\n      desc: description to pass on to returned score\n    Return:\n      Score, including intermediate results such as ngram ratio, sentence length, brevity penalty\n    \"\"\"", "\n", "return", "self", ".", "_eval", "(", "ref", ",", "hyp", ",", "is_multi_ref", "=", "False", ",", "desc", "=", "desc", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.BLEUEvaluator.evaluate_multi_ref": [[561, 572], ["metrics.BLEUEvaluator._eval"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.BLEUEvaluator._eval"], ["", "def", "evaluate_multi_ref", "(", "self", ",", "ref", ":", "Sequence", "[", "Sequence", "[", "Sequence", "[", "str", "]", "]", "]", ",", "hyp", ":", "Sequence", "[", "Sequence", "[", "str", "]", "]", ",", "\n", "desc", ":", "Any", "=", "None", ")", "->", "BLEUScore", ":", "\n", "    ", "\"\"\"\n    Args:\n      ref: list of tuples of reference sentences ( a sentence is a list of tokens )\n      hyp: list of hypothesis sentences ( a sentence is a list of tokens )\n      desc: optional description that is passed on to score objects\n    Return:\n      Score, including intermediate results such as ngram ratio, sentence length, brevity penalty\n    \"\"\"", "\n", "return", "self", ".", "_eval", "(", "ref", ",", "hyp", ",", "is_multi_ref", "=", "True", ",", "desc", "=", "desc", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.BLEUEvaluator._eval": [[573, 638], ["collections.Counter", "collections.Counter", "collections.Counter", "zip", "list", "range", "math.exp", "metrics.BLEUEvaluator._brevity_penalty", "metrics.BLEUScore", "len", "len", "len", "metrics.BLEUScore", "list.append", "len", "metrics.BLEUEvaluator._modified_precision", "sorted", "collections.defaultdict", "sum", "metrics.BLEUEvaluator._modified_precision", "range", "sum", "full_count_dict[].values", "math.log", "len", "clip_count_dict[].values", "len", "abs", "len", "len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.BLEUEvaluator._brevity_penalty", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.BLEUEvaluator._modified_precision", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.BLEUEvaluator._modified_precision"], ["", "def", "_eval", "(", "self", ",", "ref", ":", "Sequence", "[", "Union", "[", "Sequence", "[", "str", "]", ",", "Sequence", "[", "Sequence", "[", "str", "]", "]", "]", "]", ",", "hyp", ":", "Sequence", "[", "Sequence", "[", "str", "]", "]", ",", "\n", "is_multi_ref", ":", "bool", ",", "desc", ":", "Any", "=", "None", ")", "->", "BLEUScore", ":", "\n", "    ", "self", ".", "reference_corpus", "=", "ref", "\n", "self", ".", "candidate_corpus", "=", "hyp", "\n", "\n", "assert", "(", "len", "(", "self", ".", "reference_corpus", ")", "==", "len", "(", "self", ".", "candidate_corpus", ")", ")", ",", "\"Length of Reference Corpus and Candidate Corpus should be same\"", "\n", "\n", "# Modified Precision Score", "\n", "clipped_ngram_count", "=", "Counter", "(", ")", "\n", "candidate_ngram_count", "=", "Counter", "(", ")", "\n", "\n", "# Brevity Penalty variables", "\n", "word_counter", "=", "Counter", "(", ")", "\n", "\n", "for", "ref_sent", ",", "can_sent", "in", "zip", "(", "self", ".", "reference_corpus", ",", "self", ".", "candidate_corpus", ")", ":", "\n", "      ", "word_counter", "[", "'candidate'", "]", "+=", "len", "(", "can_sent", ")", "\n", "if", "not", "is_multi_ref", ":", "\n", "        ", "word_counter", "[", "'reference'", "]", "+=", "len", "(", "ref_sent", ")", "\n", "\n", "clip_count_dict", ",", "full_count_dict", "=", "self", ".", "_modified_precision", "(", "ref_sent", ",", "can_sent", ")", "\n", "\n", "", "else", ":", "\n", "        ", "ref_lens", "=", "sorted", "(", "[", "(", "len", "(", "ref_sent_i", ")", ",", "abs", "(", "len", "(", "ref_sent_i", ")", "-", "len", "(", "can_sent", ")", ")", ")", "for", "ref_sent_i", "in", "ref_sent", "]", ",", "\n", "key", "=", "lambda", "x", ":", "(", "x", "[", "1", "]", ",", "x", "[", "0", "]", ")", ")", "\n", "word_counter", "[", "'reference'", "]", "+=", "ref_lens", "[", "0", "]", "[", "0", "]", "\n", "counts", "=", "[", "self", ".", "_modified_precision", "(", "ref_sent_i", ",", "can_sent", ")", "for", "ref_sent_i", "in", "ref_sent", "]", "\n", "full_count_dict", "=", "counts", "[", "0", "]", "[", "1", "]", "\n", "clip_count_dict", "=", "defaultdict", "(", "Counter", ")", "\n", "for", "ngram_type", "in", "candidate_ngram_count", ":", "\n", "          ", "for", "i", "in", "range", "(", "len", "(", "counts", ")", ")", ":", "\n", "            ", "clip_count_dict", "[", "ngram_type", "]", "|=", "counts", "[", "i", "]", "[", "0", "]", "[", "ngram_type", "]", "\n", "\n", "", "", "", "for", "ngram_type", "in", "full_count_dict", ":", "\n", "        ", "if", "ngram_type", "in", "clip_count_dict", ":", "\n", "          ", "clipped_ngram_count", "[", "ngram_type", "]", "+=", "sum", "(", "clip_count_dict", "[", "ngram_type", "]", ".", "values", "(", ")", ")", "\n", "", "candidate_ngram_count", "[", "ngram_type", "]", "+=", "sum", "(", "full_count_dict", "[", "ngram_type", "]", ".", "values", "(", ")", ")", "\n", "\n", "# Edge case", "\n", "# Return 0 if there are no matching n-grams", "\n", "# If there are no unigrams, return BLEU score of 0", "\n", "# No need to check for higher order n-grams", "\n", "", "", "if", "clipped_ngram_count", "[", "1", "]", "==", "0", ":", "\n", "      ", "return", "BLEUScore", "(", "bleu", "=", "None", ",", "ngram", "=", "self", ".", "ngram", ",", "desc", "=", "desc", ")", "\n", "\n", "", "frac_score_list", "=", "list", "(", ")", "\n", "log_precision_score", "=", "0.", "\n", "# Precision Score Calculation", "\n", "for", "ngram_type", "in", "range", "(", "1", ",", "self", ".", "ngram", "+", "1", ")", ":", "\n", "      ", "frac_score", "=", "0", "\n", "if", "clipped_ngram_count", "[", "ngram_type", "]", "==", "0", ":", "\n", "        ", "log_precision_score", "+=", "-", "1e10", "\n", "", "else", ":", "\n", "        ", "frac_score", "=", "clipped_ngram_count", "[", "ngram_type", "]", "/", "candidate_ngram_count", "[", "ngram_type", "]", "\n", "log_precision_score", "+=", "self", ".", "weights", "[", "ngram_type", "-", "1", "]", "*", "math", ".", "log", "(", "frac_score", ")", "\n", "", "frac_score_list", ".", "append", "(", "\"%.6f\"", "%", "frac_score", ")", "\n", "\n", "", "precision_score", "=", "math", ".", "exp", "(", "log_precision_score", ")", "\n", "\n", "# Brevity Penalty Score", "\n", "brevity_penalty_score", "=", "self", ".", "_brevity_penalty", "(", "word_counter", "[", "'reference'", "]", ",", "word_counter", "[", "'candidate'", "]", ")", "\n", "\n", "# BLEU Score", "\n", "bleu_score", "=", "brevity_penalty_score", "*", "precision_score", "\n", "return", "BLEUScore", "(", "bleu_score", ",", "frac_score_list", ",", "brevity_penalty_score", ",", "word_counter", "[", "'candidate'", "]", ",", "word_counter", "[", "'reference'", "]", ",", "ngram", "=", "self", ".", "ngram", ",", "desc", "=", "desc", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.BLEUEvaluator._brevity_penalty": [[639, 656], ["numpy.exp"], "methods", ["None"], ["", "def", "_brevity_penalty", "(", "self", ",", "r", ":", "numbers", ".", "Integral", ",", "c", ":", "numbers", ".", "Integral", ")", "->", "float", ":", "\n", "    ", "\"\"\"\n    Args:\n      r: number of words in reference corpus\n      c: number of words in candidate corpus\n    Return:\n      brevity penalty score\n    \"\"\"", "\n", "\n", "penalty", "=", "1.", "\n", "\n", "# If candidate sent length is 0 (empty), return 0.", "\n", "if", "c", "==", "0", ":", "\n", "      ", "return", "0.", "\n", "", "elif", "c", "<=", "r", ":", "\n", "      ", "penalty", "=", "np", ".", "exp", "(", "1.", "-", "(", "r", "/", "c", ")", ")", "\n", "", "return", "penalty", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.BLEUEvaluator._extract_ngrams": [[657, 679], ["collections.defaultdict", "len", "enumerate", "range", "tuple"], "methods", ["None"], ["", "def", "_extract_ngrams", "(", "self", ",", "tokens", ":", "Sequence", "[", "str", "]", ")", "->", "Dict", "[", "int", ",", "Counter", "]", ":", "\n", "    ", "\"\"\"\n    Extracts ngram counts from the input string\n\n    Args:\n      tokens: tokens of string for which the ngram is to be computed\n    Return:\n      a Counter object containing ngram counts\n    \"\"\"", "\n", "\n", "ngram_count", "=", "defaultdict", "(", "Counter", ")", "\n", "num_words", "=", "len", "(", "tokens", ")", "\n", "\n", "for", "i", ",", "first_token", "in", "enumerate", "(", "tokens", "[", "0", ":", "num_words", "]", ")", ":", "\n", "      ", "for", "j", "in", "range", "(", "0", ",", "self", ".", "ngram", ")", ":", "\n", "        ", "outer_range", "=", "i", "+", "j", "+", "1", "\n", "ngram_type", "=", "j", "+", "1", "\n", "if", "outer_range", "<=", "num_words", ":", "\n", "          ", "ngram_tuple", "=", "tuple", "(", "tokens", "[", "i", ":", "outer_range", "]", ")", "\n", "ngram_count", "[", "ngram_type", "]", "[", "ngram_tuple", "]", "+=", "1", "\n", "\n", "", "", "", "return", "ngram_count", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.BLEUEvaluator._modified_precision": [[680, 700], ["collections.defaultdict", "metrics.BLEUEvaluator._extract_ngrams", "metrics.BLEUEvaluator._extract_ngrams"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.BLEUEvaluator._extract_ngrams", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.BLEUEvaluator._extract_ngrams"], ["", "def", "_modified_precision", "(", "self", ",", "reference_sent", ":", "List", "[", "str", "]", ",", "candidate_sent", ":", "List", "[", "str", "]", ")", "->", "Tuple", "[", "Dict", "[", "int", ",", "Counter", "]", ",", "Dict", "[", "int", ",", "Counter", "]", "]", ":", "\n", "    ", "\"\"\"\n    Computes counts useful in modified precision calculations\n\n    Args:\n      reference_sent: iterable of tokens\n      candidate_sent: iterable of tokens\n    Return: tuple of Counter objects\n    \"\"\"", "\n", "\n", "clipped_ngram_count", "=", "defaultdict", "(", "Counter", ")", "\n", "\n", "reference_ngram_count", "=", "self", ".", "_extract_ngrams", "(", "reference_sent", ")", "\n", "candidate_ngram_count", "=", "self", ".", "_extract_ngrams", "(", "candidate_sent", ")", "\n", "\n", "for", "ngram_type", "in", "candidate_ngram_count", ":", "\n", "      ", "clipped_ngram_count", "[", "ngram_type", "]", "=", "candidate_ngram_count", "[", "ngram_type", "]", "&", "reference_ngram_count", "[", "ngram_type", "]", "\n", "\n", "", "return", "clipped_ngram_count", ",", "candidate_ngram_count", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.GLEUEvaluator.__init__": [[729, 737], ["metrics.SentenceLevelEvaluator.__init__"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "min_length", ":", "numbers", ".", "Integral", "=", "1", ",", "\n", "max_length", ":", "numbers", ".", "Integral", "=", "4", ",", "\n", "write_sentence_scores", ":", "Optional", "[", "str", "]", "=", "None", ")", "->", "None", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "write_sentence_scores", "=", "write_sentence_scores", ")", "\n", "self", ".", "min", "=", "min_length", "\n", "self", ".", "max", "=", "max_length", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.GLEUEvaluator._extract_all_ngrams": [[738, 756], ["len", "collections.Counter", "enumerate", "range", "tuple"], "methods", ["None"], ["", "def", "_extract_all_ngrams", "(", "self", ",", "tokens", ")", ":", "\n", "    ", "\"\"\"\n    Extracts ngram counts from the input string\n\n    Args:\n      tokens: tokens of string for which the ngram is to be computed\n    Return:\n      a Counter object containing ngram counts for self.min <= n <= self.max\n    \"\"\"", "\n", "num_words", "=", "len", "(", "tokens", ")", "\n", "ngram_count", "=", "Counter", "(", ")", "\n", "for", "i", ",", "first_token", "in", "enumerate", "(", "tokens", "[", "0", ":", "num_words", "]", ")", ":", "\n", "      ", "for", "n", "in", "range", "(", "self", ".", "min", ",", "self", ".", "max", "+", "1", ")", ":", "\n", "        ", "outer_range", "=", "i", "+", "n", "\n", "if", "outer_range", "<=", "num_words", ":", "\n", "          ", "ngram_tuple", "=", "tuple", "(", "tokens", "[", "i", ":", "outer_range", "]", ")", "\n", "ngram_count", "[", "ngram_tuple", "]", "+=", "1", "\n", "", "", "", "return", "ngram_count", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.GLEUEvaluator.evaluate_one_sent": [[757, 775], ["metrics.GLEUEvaluator._extract_all_ngrams", "sum", "metrics.GLEUEvaluator._extract_all_ngrams", "sum", "sum", "max", "metrics.GLEUScore", "metrics.GLEUEvaluator.values", "metrics.GLEUEvaluator.values", "overlap_ngrams.values", "len", "len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.GLEUEvaluator._extract_all_ngrams", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.GLEUEvaluator._extract_all_ngrams"], ["", "def", "evaluate_one_sent", "(", "self", ",", "ref", ":", "Sequence", "[", "str", "]", ",", "hyp", ":", "Sequence", "[", "str", "]", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n      ref: reference sentence ( a sent is a list of tokens )\n      hyp: hypothesis sentence ( a sent is a list of tokens )\n    Return:\n      GLEU score object\n    \"\"\"", "\n", "hyp_ngrams", "=", "self", ".", "_extract_all_ngrams", "(", "hyp", ")", "\n", "tot_ngrams_hyp", "=", "sum", "(", "hyp_ngrams", ".", "values", "(", ")", ")", "\n", "ref_ngrams", "=", "self", ".", "_extract_all_ngrams", "(", "ref", ")", "\n", "tot_ngrams_ref", "=", "sum", "(", "ref_ngrams", ".", "values", "(", ")", ")", "\n", "\n", "overlap_ngrams", "=", "ref_ngrams", "&", "hyp_ngrams", "\n", "n_match", "=", "sum", "(", "overlap_ngrams", ".", "values", "(", ")", ")", "\n", "n_total", "=", "max", "(", "tot_ngrams_hyp", ",", "tot_ngrams_ref", ")", "\n", "\n", "return", "GLEUScore", "(", "n_match", ",", "n_total", ",", "hyp_len", "=", "len", "(", "hyp", ")", ",", "ref_len", "=", "len", "(", "ref", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.WEREvaluator.__init__": [[786, 791], ["metrics.SentenceLevelEvaluator.__init__", "xnmt.levenshtein.LevenshteinAligner"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "case_sensitive", ":", "bool", "=", "False", ",", "write_sentence_scores", ":", "Optional", "[", "str", "]", "=", "None", ")", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "write_sentence_scores", "=", "write_sentence_scores", ")", "\n", "self", ".", "case_sensitive", "=", "case_sensitive", "\n", "self", ".", "aligner", "=", "levenshtein", ".", "LevenshteinAligner", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.WEREvaluator.evaluate_one_sent": [[792, 805], ["metrics.WEREvaluator.aligner.align", "metrics.WERScore", "metrics.LevenshteinScore.ref_len", "len", "metrics.LevenshteinScore.hyp_len", "len", "w.lower", "w.lower", "len", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.levenshtein.LevenshteinAligner.align", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.LevenshteinScore.ref_len", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.LevenshteinScore.hyp_len"], ["", "def", "evaluate_one_sent", "(", "self", ",", "ref", ":", "Sequence", "[", "str", "]", ",", "hyp", ":", "Sequence", "[", "str", "]", ")", "->", "WERScore", ":", "\n", "    ", "if", "not", "self", ".", "case_sensitive", ":", "\n", "      ", "hyp", "=", "[", "w", ".", "lower", "(", ")", "for", "w", "in", "hyp", "]", "\n", "ref", "=", "[", "w", ".", "lower", "(", ")", "for", "w", "in", "ref", "]", "\n", "", "_", ",", "_", ",", "_", ",", "alignment", "=", "self", ".", "aligner", ".", "align", "(", "ref", ",", "hyp", ")", "\n", "\n", "score", "=", "WERScore", "(", "correct", "=", "len", "(", "[", "a", "for", "a", "in", "alignment", "if", "a", "==", "'c'", "]", ")", ",", "\n", "substitutions", "=", "len", "(", "[", "a", "for", "a", "in", "alignment", "if", "a", "==", "'s'", "]", ")", ",", "\n", "insertions", "=", "len", "(", "[", "a", "for", "a", "in", "alignment", "if", "a", "==", "'i'", "]", ")", ",", "\n", "deletions", "=", "len", "(", "[", "a", "for", "a", "in", "alignment", "if", "a", "==", "'d'", "]", ")", ")", "\n", "assert", "score", ".", "ref_len", "(", ")", "==", "len", "(", "ref", ")", "\n", "assert", "score", ".", "hyp_len", "(", ")", "==", "len", "(", "hyp", ")", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.CEREvaluator.__init__": [[816, 821], ["metrics.SentenceLevelEvaluator.__init__", "xnmt.levenshtein.LevenshteinAligner"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "case_sensitive", ":", "bool", "=", "False", ",", "write_sentence_scores", ":", "Optional", "[", "str", "]", "=", "None", ")", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "write_sentence_scores", "=", "write_sentence_scores", ")", "\n", "self", ".", "case_sensitive", "=", "case_sensitive", "\n", "self", ".", "aligner", "=", "levenshtein", ".", "LevenshteinAligner", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.CEREvaluator.evaluate_one_sent": [[822, 845], ["list", "list", "metrics.CEREvaluator.aligner.align", "metrics.CERScore", "metrics.LevenshteinScore.ref_len", "len", "metrics.LevenshteinScore.hyp_len", "len", "w.lower", "w.lower", "len", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.levenshtein.LevenshteinAligner.align", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.LevenshteinScore.ref_len", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.LevenshteinScore.hyp_len"], ["", "def", "evaluate_one_sent", "(", "self", ",", "ref", ":", "Sequence", "[", "str", "]", ",", "hyp", ":", "Sequence", "[", "str", "]", ")", "->", "CERScore", ":", "\n", "    ", "\"\"\"\n    Calculate the quality of output sentence given a reference.\n\n    Args:\n      ref: list of reference words\n      hyp: list of decoded words\n    Return:\n      character error rate: (ins+del+sub) / (ref_len)\n    \"\"\"", "\n", "ref_char", "=", "list", "(", "\"\"", ".", "join", "(", "ref", ")", ")", "\n", "hyp_char", "=", "list", "(", "\"\"", ".", "join", "(", "hyp", ")", ")", "\n", "if", "not", "self", ".", "case_sensitive", ":", "\n", "      ", "hyp_char", "=", "[", "w", ".", "lower", "(", ")", "for", "w", "in", "hyp_char", "]", "\n", "ref_char", "=", "[", "w", ".", "lower", "(", ")", "for", "w", "in", "ref_char", "]", "\n", "", "_", ",", "_", ",", "_", ",", "alignment", "=", "self", ".", "aligner", ".", "align", "(", "ref_char", ",", "hyp_char", ")", "\n", "score", "=", "CERScore", "(", "correct", "=", "len", "(", "[", "a", "for", "a", "in", "alignment", "if", "a", "==", "'c'", "]", ")", ",", "\n", "substitutions", "=", "len", "(", "[", "a", "for", "a", "in", "alignment", "if", "a", "==", "'s'", "]", ")", ",", "\n", "insertions", "=", "len", "(", "[", "a", "for", "a", "in", "alignment", "if", "a", "==", "'i'", "]", ")", ",", "\n", "deletions", "=", "len", "(", "[", "a", "for", "a", "in", "alignment", "if", "a", "==", "'d'", "]", ")", ")", "\n", "assert", "score", ".", "ref_len", "(", ")", "==", "len", "(", "ref_char", ")", "\n", "assert", "score", ".", "hyp_len", "(", ")", "==", "len", "(", "hyp_char", ")", "\n", "return", "score", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.ExternalEvaluator.__init__": [[858, 862], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "path", ":", "str", "=", "None", ",", "higher_better", ":", "bool", "=", "True", ")", ":", "\n", "    ", "self", ".", "path", "=", "path", "\n", "self", ".", "higher_better", "=", "higher_better", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.ExternalEvaluator.evaluate": [[863, 878], ["subprocess.Popen", "subprocess.Popen.communicate", "float", "metrics.ExternalScore"], "methods", ["None"], ["", "def", "evaluate", "(", "self", ",", "ref", ",", "hyp", ",", "desc", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Calculate the quality of output according to an external script.\n\n    Args:\n      ref: (ignored)\n      hyp: (ignored)\n      desc: description to pass on to returned score\n    Return:\n      external eval script score\n    \"\"\"", "\n", "proc", "=", "subprocess", ".", "Popen", "(", "[", "self", ".", "path", "]", ",", "stdout", "=", "subprocess", ".", "PIPE", ",", "shell", "=", "True", ")", "\n", "(", "out", ",", "_", ")", "=", "proc", ".", "communicate", "(", ")", "\n", "external_score", "=", "float", "(", "out", ")", "\n", "return", "ExternalScore", "(", "external_score", ",", "higher_is_better", "=", "self", ".", "higher_better", ",", "desc", "=", "desc", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.RecallEvaluator.__init__": [[888, 892], ["metrics.SentenceLevelEvaluator.__init__"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "nbest", ":", "numbers", ".", "Integral", "=", "5", ",", "write_sentence_scores", ":", "Optional", "[", "str", "]", "=", "None", ")", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "write_sentence_scores", "=", "write_sentence_scores", ")", "\n", "self", ".", "nbest", "=", "nbest", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.RecallEvaluator.evaluate": [[893, 900], ["zip", "metrics.RecallScore", "any", "float", "len", "len", "len"], "methods", ["None"], ["", "def", "evaluate", "(", "self", ",", "ref", ",", "hyp", ",", "desc", "=", "None", ")", ":", "\n", "    ", "true_positive", "=", "0", "\n", "for", "hyp_i", ",", "ref_i", "in", "zip", "(", "hyp", ",", "ref", ")", ":", "\n", "      ", "if", "any", "(", "ref_i", "==", "idx", "for", "idx", ",", "_", "in", "hyp_i", "[", ":", "self", ".", "nbest", "]", ")", ":", "\n", "        ", "true_positive", "+=", "1", "\n", "", "", "score", "=", "true_positive", "/", "float", "(", "len", "(", "ref", ")", ")", "\n", "return", "RecallScore", "(", "score", ",", "len", "(", "hyp", ")", ",", "len", "(", "ref", ")", ",", "nbest", "=", "self", ".", "nbest", ",", "desc", "=", "desc", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.RecallEvaluator.evaluate_one_sent": [[901, 904], ["metrics.RecallScore", "any"], "methods", ["None"], ["", "def", "evaluate_one_sent", "(", "self", ",", "ref", ":", "Any", ",", "hyp", ":", "Any", ")", ":", "\n", "    ", "score", "=", "1.0", "if", "any", "(", "ref", "==", "idx", "for", "idx", ",", "_", "in", "hyp", "[", ":", "self", ".", "nbest", "]", ")", "else", "0.0", "\n", "return", "RecallScore", "(", "score", ",", "hyp_len", "=", "1", ",", "ref_len", "=", "1", ",", "nbest", "=", "self", ".", "nbest", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.SequenceAccuracyEvaluator.__init__": [[934, 938], ["metrics.SentenceLevelEvaluator.__init__"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "case_sensitive", "=", "False", ",", "write_sentence_scores", ":", "Optional", "[", "str", "]", "=", "None", ")", "->", "None", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "write_sentence_scores", "=", "write_sentence_scores", ")", "\n", "self", ".", "case_sensitive", "=", "case_sensitive", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.SequenceAccuracyEvaluator._compare": [[939, 945], ["w.lower", "w.lower"], "methods", ["None"], ["", "def", "_compare", "(", "self", ",", "ref_sent", ",", "hyp_sent", ")", ":", "\n", "    ", "if", "not", "self", ".", "case_sensitive", ":", "\n", "      ", "hyp_sent", "=", "[", "w", ".", "lower", "(", ")", "for", "w", "in", "hyp_sent", "]", "\n", "", "if", "not", "self", ".", "case_sensitive", ":", "\n", "      ", "ref_sent", "=", "[", "w", ".", "lower", "(", ")", "for", "w", "in", "ref_sent", "]", "\n", "", "return", "ref_sent", "==", "hyp_sent", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.SequenceAccuracyEvaluator.evaluate_one_sent": [[946, 957], ["metrics.SequenceAccuracyScore", "metrics.SequenceAccuracyEvaluator._compare"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.SequenceAccuracyEvaluator._compare"], ["", "def", "evaluate_one_sent", "(", "self", ",", "ref", ":", "Sequence", "[", "str", "]", ",", "hyp", ":", "Sequence", "[", "str", "]", ")", ":", "\n", "    ", "\"\"\"\n    Calculate the accuracy of output given a references.\n\n    Args:\n      ref: list of list of reference words\n      hyp: list of list of decoded words\n    Return: formatted string\n    \"\"\"", "\n", "correct", "=", "1", "if", "self", ".", "_compare", "(", "ref", ",", "hyp", ")", "else", "0", "\n", "return", "SequenceAccuracyScore", "(", "num_correct", "=", "correct", ",", "num_total", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasureEvaluator.__init__": [[968, 972], ["metrics.SentenceLevelEvaluator.__init__"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "pos_token", ":", "str", "=", "\"1\"", ",", "write_sentence_scores", ":", "Optional", "[", "str", "]", "=", "None", ")", "->", "None", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "write_sentence_scores", "=", "write_sentence_scores", ")", "\n", "self", ".", "pos_token", "=", "pos_token", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasureEvaluator.evaluate_one_sent": [[973, 988], ["metrics.FMeasure", "ValueError", "len", "len"], "methods", ["None"], ["", "def", "evaluate_one_sent", "(", "self", ",", "ref", ":", "Sequence", "[", "str", "]", ",", "hyp", ":", "Sequence", "[", "str", "]", ")", ":", "\n", "    ", "\"\"\"\n    Calculate the accuracy of output given a references.\n\n    Args:\n      ref: list of list of reference words\n      hyp: list of list of decoded words\n    Return: formatted string\n    \"\"\"", "\n", "if", "len", "(", "ref", ")", "!=", "1", "or", "len", "(", "hyp", ")", "!=", "1", ":", "raise", "ValueError", "(", "\"FScore requires scalar ref and hyp\"", ")", "\n", "ref", "=", "ref", "[", "0", "]", "\n", "hyp", "=", "hyp", "[", "0", "]", "\n", "return", "FMeasure", "(", "true_pos", "=", "1", "if", "(", "ref", "==", "hyp", ")", "and", "(", "hyp", "==", "self", ".", "pos_token", ")", "else", "0", ",", "\n", "false_neg", "=", "1", "if", "(", "ref", "!=", "hyp", ")", "and", "(", "hyp", "!=", "self", ".", "pos_token", ")", "else", "0", ",", "\n", "false_pos", "=", "1", "if", "(", "ref", "!=", "hyp", ")", "and", "(", "hyp", "==", "self", ".", "pos_token", ")", "else", "0", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.base.TrainableModel.calc_nll": [[14, 24], ["None"], "methods", ["None"], ["\n", "def", "__init__", "(", "self", ",", "main_expr", ":", "dy", ".", "Expression", ",", "cell_expr", ":", "dy", ".", "Expression", "=", "None", ")", ":", "\n", "    ", "self", ".", "_main_expr", "=", "main_expr", "\n", "self", ".", "_cell_expr", "=", "cell_expr", "\n", "\n", "", "def", "main_expr", "(", "self", ")", "->", "dy", ".", "Expression", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.base.UnconditionedModel.__init__": [[33, 35], ["None"], "methods", ["None"], ["#       Instead just copy", "\n", "# self._cell_expr = 0.5 * dy.log( dy.cdiv(1.+self._main_expr, 1.-self._main_expr) )", "\n", "      ", "self", ".", "_cell_expr", "=", "self", ".", "_main_expr", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.base.UnconditionedModel.calc_nll": [[36, 47], ["None"], "methods", ["None"], ["", "return", "self", ".", "_cell_expr", "\n", "\n", "", "", "class", "SeqTransducer", "(", "object", ")", ":", "\n", "  ", "\"\"\"\n  A class that transforms one sequence of vectors into another, using :class:`expression_seqs.ExpressionSequence` objects as inputs and outputs.\n  \"\"\"", "\n", "\n", "def", "transduce", "(", "self", ",", "seq", ":", "'expression_seqs.ExpressionSequence'", ")", "->", "'expression_seqs.ExpressionSequence'", ":", "\n", "    "]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.base.ConditionedModel.__init__": [[58, 61], ["None"], "methods", ["None"], ["\n", "raise", "NotImplementedError", "(", "\"SeqTransducer.get_final_states() must be implemented by SeqTransducer sub-classes\"", ")", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.base.ConditionedModel.calc_nll": [[62, 75], ["None"], "methods", ["None"], ["########################################################", "\n", "\n", "", "", "class", "ModularSeqTransducer", "(", "SeqTransducer", ",", "Serializable", ")", ":", "\n", "  ", "\"\"\"\n  A sequence transducer that stacks several :class:`xnmt.transducer.SeqTransducer` objects, all of which must\n  accept exactly one argument (an :class:`expression_seqs.ExpressionSequence`) in their transduce method.\n  \n  Args:\n    input_dim: input dimension (not required)\n    modules: list of SeqTransducer modules\n  \"\"\"", "\n", "\n", "yaml_tag", "=", "'!ModularSeqTransducer'", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.base.GeneratorModel.__init__": [[85, 89], ["None"], "methods", ["None"], ["      ", "seq", "=", "module", ".", "transduce", "(", "seq", ")", "\n", "", "return", "seq", "\n", "\n", "", "def", "get_final_states", "(", "self", ")", "->", "List", "[", "FinalTransducerState", "]", ":", "\n", "    ", "final_states", "=", "[", "]", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.base.GeneratorModel.generate": [[90, 102], ["NotImplementedError"], "methods", ["None"], ["for", "mod", "in", "self", ".", "modules", ":", "\n", "      ", "final_states", "+=", "mod", ".", "get_final_states", "(", ")", "\n", "", "return", "final_states", "\n", "\n", "\n", "", "", "class", "IdentitySeqTransducer", "(", "SeqTransducer", ",", "Serializable", ")", ":", "\n", "  ", "\"\"\"\n  A transducer that simply returns the input.\n  \"\"\"", "\n", "\n", "yaml_tag", "=", "'!IdentitySeqTransducer'", "\n", "\n", "@", "serializable_init", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.base.CascadeGenerator.__init__": [[116, 120], ["base.GeneratorModel.__init__"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__"], ["\n", "yaml_tag", "=", "'!TransformSeqTransducer'", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.base.CascadeGenerator.generate": [[121, 123], ["ValueError"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "transform", ":", "transforms", ".", "Transform", ",", "downsample_by", ":", "numbers", ".", "Integral", "=", "1", ")", "->", "None", ":", "\n", "    ", "self", ".", "transform", "=", "transform", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.AutoRegressiveTranslator.calc_nll": [[37, 47], ["NotImplementedError"], "methods", ["None"], ["def", "calc_nll", "(", "self", ",", "src", ":", "Union", "[", "batchers", ".", "Batch", ",", "sent", ".", "Sentence", "]", ",", "trg", ":", "Union", "[", "batchers", ".", "Batch", ",", "sent", ".", "Sentence", "]", ")", "->", "dy", ".", "Expression", ":", "\n", "    ", "\"\"\"\n    Calculate the negative log likelihood, or similar value, of trg given src\n    Args:\n      src: The input\n      trg: The output\n    Return:\n      The likelihood\n    \"\"\"", "\n", "raise", "NotImplementedError", "(", "'must be implemented by subclasses'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.AutoRegressiveTranslator.generate": [[48, 50], ["NotImplementedError"], "methods", ["None"], ["", "def", "generate", "(", "self", ",", "src", ",", "search_strategy", ",", "forced_trg_ids", "=", "None", ")", "->", "Sequence", "[", "sent", ".", "Sentence", "]", ":", "\n", "    ", "raise", "NotImplementedError", "(", "\"must be implemented by subclasses\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.AutoRegressiveTranslator.generate_one_step": [[51, 53], ["NotImplementedError"], "methods", ["None"], ["", "def", "generate_one_step", "(", "self", ",", "current_word", ":", "Any", ",", "current_state", ":", "AutoRegressiveDecoderState", ")", "->", "TranslatorOutput", ":", "\n", "    ", "raise", "NotImplementedError", "(", "\"must be implemented by subclasses\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.AutoRegressiveTranslator.set_trg_vocab": [[54, 61], ["None"], "methods", ["None"], ["", "def", "set_trg_vocab", "(", "self", ",", "trg_vocab", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Set target vocab for generating outputs. If not specified, word IDs are generated instead.\n    Args:\n      trg_vocab (Vocab): target vocab, or None to generate word IDs\n    \"\"\"", "\n", "self", ".", "trg_vocab", "=", "trg_vocab", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.AutoRegressiveTranslator.get_nobp_state": [[62, 70], ["state.rnn_state.output", "type", "range", "dynet.nobackprop", "len", "dynet.nobackprop"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMState.output"], ["", "def", "get_nobp_state", "(", "self", ",", "state", ")", ":", "\n", "    ", "output_state", "=", "state", ".", "rnn_state", ".", "output", "(", ")", "\n", "if", "type", "(", "output_state", ")", "==", "EnsembleListDelegate", ":", "\n", "      ", "for", "i", "in", "range", "(", "len", "(", "output_state", ")", ")", ":", "\n", "        ", "output_state", "[", "i", "]", "=", "dy", ".", "nobackprop", "(", "output_state", "[", "i", "]", ")", "\n", "", "", "else", ":", "\n", "      ", "output_state", "=", "dy", ".", "nobackprop", "(", "output_state", ")", "\n", "", "return", "output_state", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.DefaultTranslator.__init__": [[87, 109], ["xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.persistence.Ref", "xnmt.models.base.ConditionedModel.__init__"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__"], ["@", "register_xnmt_handler", "\n", "@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "src_reader", ":", "input_readers", ".", "InputReader", ",", "\n", "trg_reader", ":", "input_readers", ".", "InputReader", ",", "\n", "src_embedder", ":", "Embedder", "=", "bare", "(", "SimpleWordEmbedder", ")", ",", "\n", "encoder", ":", "transducers_base", ".", "SeqTransducer", "=", "bare", "(", "BiLSTMSeqTransducer", ")", ",", "\n", "attender", ":", "Attender", "=", "bare", "(", "MlpAttender", ")", ",", "\n", "trg_embedder", ":", "Embedder", "=", "bare", "(", "SimpleWordEmbedder", ")", ",", "\n", "decoder", ":", "Decoder", "=", "bare", "(", "AutoRegressiveDecoder", ")", ",", "\n", "inference", ":", "inferences", ".", "AutoRegressiveInference", "=", "bare", "(", "inferences", ".", "AutoRegressiveInference", ")", ",", "\n", "truncate_dec_batches", ":", "bool", "=", "False", ",", "\n", "compute_report", ":", "bool", "=", "Ref", "(", "\"exp_global.compute_report\"", ",", "default", "=", "False", ")", ")", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "src_reader", "=", "src_reader", ",", "trg_reader", "=", "trg_reader", ")", "\n", "self", ".", "src_embedder", "=", "src_embedder", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "attender", "=", "attender", "\n", "self", ".", "trg_embedder", "=", "trg_embedder", "\n", "self", ".", "decoder", "=", "decoder", "\n", "self", ".", "inference", "=", "inference", "\n", "self", ".", "truncate_dec_batches", "=", "truncate_dec_batches", "\n", "self", ".", "compute_report", "=", "compute_report", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.DefaultTranslator.shared_params": [[110, 115], ["None"], "methods", ["None"], ["", "def", "shared_params", "(", "self", ")", ":", "\n", "    ", "return", "[", "{", "\".src_embedder.emb_dim\"", ",", "\".encoder.input_dim\"", "}", ",", "\n", "{", "\".encoder.hidden_dim\"", ",", "\".attender.input_dim\"", ",", "\".decoder.input_dim\"", "}", ",", "\n", "{", "\".attender.state_dim\"", ",", "\".decoder.rnn.hidden_dim\"", "}", ",", "\n", "{", "\".trg_embedder.emb_dim\"", ",", "\".decoder.trg_embed_dim\"", "}", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.DefaultTranslator._encode_src": [[117, 125], ["translators.DefaultTranslator.src_embedder.embed_sent", "translators.DefaultTranslator.encoder.transduce", "translators.DefaultTranslator.encoder.get_final_states", "translators.DefaultTranslator.attender.init_sent", "translators.DefaultTranslator.decoder.initial_state", "xnmt.batchers.is_batched", "xnmt.batchers.mark_as_batch", "translators.DefaultTranslator.trg_embedder.embed", "src.batch_size"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.embed_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.get_final_states", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.attenders.MlpLocationAttender.init_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.decoders.AutoRegressiveDecoder.initial_state", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.embed", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.batch_size"], ["", "def", "_encode_src", "(", "self", ",", "src", ":", "Union", "[", "batchers", ".", "Batch", ",", "sent", ".", "Sentence", "]", ")", ":", "\n", "    ", "embeddings", "=", "self", ".", "src_embedder", ".", "embed_sent", "(", "src", ")", "\n", "encoding", "=", "self", ".", "encoder", ".", "transduce", "(", "embeddings", ")", "\n", "final_state", "=", "self", ".", "encoder", ".", "get_final_states", "(", ")", "\n", "self", ".", "attender", ".", "init_sent", "(", "encoding", ")", "\n", "ss", "=", "batchers", ".", "mark_as_batch", "(", "[", "Vocab", ".", "SS", "]", "*", "src", ".", "batch_size", "(", ")", ")", "if", "batchers", ".", "is_batched", "(", "src", ")", "else", "Vocab", ".", "SS", "\n", "initial_state", "=", "self", ".", "decoder", ".", "initial_state", "(", "final_state", ",", "self", ".", "trg_embedder", ".", "embed", "(", "ss", ")", ")", "\n", "return", "initial_state", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.DefaultTranslator.calc_nll": [[126, 164], ["xnmt.event_trigger.start_sent", "isinstance", "translators.DefaultTranslator._encode_src", "trg.sent_len", "range", "xnmt.batchers.is_batched", "xnmt.batchers.is_batched", "enumerate", "translators.DefaultTranslator._select_ref_words", "translators.DefaultTranslator.rnn_state.output", "translators.DefaultTranslator.attender.calc_context", "translators.DefaultTranslator.decoder.calc_loss", "losses.append", "dynet.esum", "dynet.esum", "xnmt.batchers.is_batched", "xnmt.batchers.truncate_batches", "translators.DefaultTranslator.decoder.add_input", "xnmt.batchers.is_batched", "trg_mask.cmult_by_timestep_expr", "single_trg.sent_len", "len", "translators.DefaultTranslator.trg_embedder.embed", "dynet.sum_batches", "range"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.start_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator._encode_src", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.FactorTranslator._select_ref_words", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMState.output", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.attenders.MlpLocationAttender.calc_context", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_encoder.DualEncoderSimilarity.calc_loss", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.truncate_batches", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.decoders.AutoRegressiveDecoder.add_input", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.cmult_by_timestep_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.embed"], ["", "def", "calc_nll", "(", "self", ",", "src", ":", "Union", "[", "batchers", ".", "Batch", ",", "sent", ".", "Sentence", "]", ",", "trg", ":", "Union", "[", "batchers", ".", "Batch", ",", "sent", ".", "Sentence", "]", ")", "->", "dy", ".", "Expression", ":", "\n", "    ", "event_trigger", ".", "start_sent", "(", "src", ")", "\n", "if", "isinstance", "(", "src", ",", "batchers", ".", "CompoundBatch", ")", ":", "src", "=", "src", ".", "batches", "[", "0", "]", "\n", "# Encode the sentence", "\n", "initial_state", "=", "self", ".", "_encode_src", "(", "src", ")", "\n", "\n", "dec_state", "=", "initial_state", "\n", "trg_mask", "=", "trg", ".", "mask", "if", "batchers", ".", "is_batched", "(", "trg", ")", "else", "None", "\n", "losses", "=", "[", "]", "\n", "seq_len", "=", "trg", ".", "sent_len", "(", ")", "\n", "\n", "if", "settings", ".", "CHECK_VALIDITY", "and", "batchers", ".", "is_batched", "(", "src", ")", ":", "\n", "      ", "for", "j", ",", "single_trg", "in", "enumerate", "(", "trg", ")", ":", "\n", "        ", "assert", "single_trg", ".", "sent_len", "(", ")", "==", "seq_len", "# assert consistent length", "\n", "assert", "1", "==", "len", "(", "[", "i", "for", "i", "in", "range", "(", "seq_len", ")", "if", "(", "trg_mask", "is", "None", "or", "trg_mask", ".", "np_arr", "[", "j", ",", "i", "]", "==", "0", ")", "and", "single_trg", "[", "i", "]", "==", "Vocab", ".", "ES", "]", ")", "# assert exactly one unmasked ES token", "\n", "\n", "", "", "input_word", "=", "None", "\n", "for", "i", "in", "range", "(", "seq_len", ")", ":", "\n", "      ", "ref_word", "=", "DefaultTranslator", ".", "_select_ref_words", "(", "trg", ",", "i", ",", "truncate_masked", "=", "self", ".", "truncate_dec_batches", ")", "\n", "if", "self", ".", "truncate_dec_batches", "and", "batchers", ".", "is_batched", "(", "ref_word", ")", ":", "\n", "        ", "dec_state", ".", "rnn_state", ",", "ref_word", "=", "batchers", ".", "truncate_batches", "(", "dec_state", ".", "rnn_state", ",", "ref_word", ")", "\n", "\n", "", "if", "input_word", "is", "not", "None", ":", "\n", "        ", "dec_state", "=", "self", ".", "decoder", ".", "add_input", "(", "dec_state", ",", "self", ".", "trg_embedder", ".", "embed", "(", "input_word", ")", ")", "\n", "", "rnn_output", "=", "dec_state", ".", "rnn_state", ".", "output", "(", ")", "\n", "dec_state", ".", "context", "=", "self", ".", "attender", ".", "calc_context", "(", "rnn_output", ")", "\n", "word_loss", "=", "self", ".", "decoder", ".", "calc_loss", "(", "dec_state", ",", "ref_word", ")", "\n", "\n", "if", "not", "self", ".", "truncate_dec_batches", "and", "batchers", ".", "is_batched", "(", "src", ")", "and", "trg_mask", "is", "not", "None", ":", "\n", "        ", "word_loss", "=", "trg_mask", ".", "cmult_by_timestep_expr", "(", "word_loss", ",", "i", ",", "inverse", "=", "True", ")", "\n", "", "losses", ".", "append", "(", "word_loss", ")", "\n", "input_word", "=", "ref_word", "\n", "\n", "", "if", "self", ".", "truncate_dec_batches", ":", "\n", "      ", "loss_expr", "=", "dy", ".", "esum", "(", "[", "dy", ".", "sum_batches", "(", "wl", ")", "for", "wl", "in", "losses", "]", ")", "\n", "", "else", ":", "\n", "      ", "loss_expr", "=", "dy", ".", "esum", "(", "losses", ")", "\n", "", "return", "loss_expr", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.DefaultTranslator._select_ref_words": [[165, 184], ["xnmt.batchers.is_batched", "xnmt.batchers.is_batched", "enumerate", "xnmt.batchers.mark_as_batch", "xnmt.batchers.is_batched", "xnmt.batchers.mark_as_batch", "ret.append", "numpy.sum"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "@", "staticmethod", "\n", "def", "_select_ref_words", "(", "sent", ",", "index", ",", "truncate_masked", "=", "False", ")", ":", "\n", "    ", "if", "truncate_masked", ":", "\n", "      ", "mask", "=", "sent", ".", "mask", "if", "batchers", ".", "is_batched", "(", "sent", ")", "else", "None", "\n", "if", "not", "batchers", ".", "is_batched", "(", "sent", ")", ":", "\n", "        ", "return", "sent", "[", "index", "]", "\n", "", "else", ":", "\n", "        ", "ret", "=", "[", "]", "\n", "found_masked", "=", "False", "\n", "for", "(", "j", ",", "single_trg", ")", "in", "enumerate", "(", "sent", ")", ":", "\n", "          ", "if", "mask", "is", "None", "or", "mask", ".", "np_arr", "[", "j", ",", "index", "]", "==", "0", "or", "np", ".", "sum", "(", "mask", ".", "np_arr", "[", ":", ",", "index", "]", ")", "==", "mask", ".", "np_arr", ".", "shape", "[", "0", "]", ":", "\n", "            ", "assert", "not", "found_masked", ",", "\"sentences must be sorted by decreasing target length\"", "\n", "ret", ".", "append", "(", "single_trg", "[", "index", "]", ")", "\n", "", "else", ":", "\n", "            ", "found_masked", "=", "True", "\n", "", "", "return", "batchers", ".", "mark_as_batch", "(", "ret", ")", "\n", "", "", "else", ":", "\n", "      ", "if", "not", "batchers", ".", "is_batched", "(", "sent", ")", ":", "return", "sent", "[", "index", "]", "\n", "else", ":", "return", "batchers", ".", "mark_as_batch", "(", "[", "single_trg", "[", "index", "]", "for", "single_trg", "in", "sent", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.DefaultTranslator.generate_search_output": [[185, 218], ["xnmt.event_trigger.start_sent", "isinstance", "xnmt.batchers.mark_as_batch", "translators.DefaultTranslator._encode_src", "search_strategy.generate_output", "src.batch_size", "NotImplementedError", "xnmt.batchers.Mask", "src_sent.sent_len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.start_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator._encode_src", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.search_strategies.MctsSearch.generate_output", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.batch_size", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len"], ["", "", "def", "generate_search_output", "(", "self", ",", "\n", "src", ":", "batchers", ".", "Batch", ",", "\n", "search_strategy", ":", "search_strategies", ".", "SearchStrategy", ",", "\n", "forced_trg_ids", ":", "batchers", ".", "Batch", "=", "None", ")", "->", "List", "[", "search_strategies", ".", "SearchOutput", "]", ":", "\n", "    ", "\"\"\"\n    Takes in a batch of source sentences and outputs a list of search outputs.\n    Args:\n      src: The source sentences\n      search_strategy: The strategy with which to perform the search\n      forced_trg_ids: The target IDs to generate if performing forced decoding\n    Returns:\n      A list of search outputs including scores, etc.\n    \"\"\"", "\n", "if", "src", ".", "batch_size", "(", ")", "!=", "1", ":", "\n", "      ", "raise", "NotImplementedError", "(", "\"batched decoding not implemented for DefaultTranslator. \"", "\n", "\"Specify inference batcher with batch size 1.\"", ")", "\n", "", "event_trigger", ".", "start_sent", "(", "src", ")", "\n", "if", "isinstance", "(", "src", ",", "batchers", ".", "CompoundBatch", ")", ":", "src", "=", "src", ".", "batches", "[", "0", "]", "\n", "# Generating outputs", "\n", "cur_forced_trg", "=", "None", "\n", "src_sent", "=", "src", "[", "0", "]", "\n", "sent_mask", "=", "None", "\n", "if", "src", ".", "mask", ":", "sent_mask", "=", "batchers", ".", "Mask", "(", "np_arr", "=", "src", ".", "mask", ".", "np_arr", "[", "0", ":", "1", "]", ")", "\n", "sent_batch", "=", "batchers", ".", "mark_as_batch", "(", "[", "sent", "]", ",", "mask", "=", "sent_mask", ")", "\n", "\n", "# Encode the sentence", "\n", "initial_state", "=", "self", ".", "_encode_src", "(", "src", ")", "\n", "\n", "if", "forced_trg_ids", "is", "not", "None", ":", "cur_forced_trg", "=", "forced_trg_ids", "[", "0", "]", "\n", "search_outputs", "=", "search_strategy", ".", "generate_output", "(", "self", ",", "initial_state", ",", "\n", "src_length", "=", "[", "src_sent", ".", "sent_len", "(", ")", "]", ",", "\n", "forced_trg_ids", "=", "cur_forced_trg", ")", "\n", "return", "search_outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.DefaultTranslator.generate": [[219, 258], ["translators.DefaultTranslator.generate_search_output", "isinstance", "sorted", "src.batch_size", "len", "xnmt.sent.SimpleSentence", "numpy.concatenate", "translators.DefaultTranslator.report_sent_info", "len", "outputs.append", "outputs.append", "getattr", "xnmt.sent.NbestSentence", "x.npvalue"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.FactorTranslator.generate_search_output", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.batch_size", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.Reportable.report_sent_info", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "def", "generate", "(", "self", ",", "\n", "src", ":", "batchers", ".", "Batch", ",", "\n", "search_strategy", ":", "search_strategies", ".", "SearchStrategy", ",", "\n", "forced_trg_ids", ":", "batchers", ".", "Batch", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Takes in a batch of source sentences and outputs a list of search outputs.\n    Args:\n      src: The source sentences\n      search_strategy: The strategy with which to perform the search\n      forced_trg_ids: The target IDs to generate if performing forced decoding\n    Returns:\n      A list of search outputs including scores, etc.\n    \"\"\"", "\n", "assert", "src", ".", "batch_size", "(", ")", "==", "1", "\n", "search_outputs", "=", "self", ".", "generate_search_output", "(", "src", ",", "search_strategy", ",", "forced_trg_ids", ")", "\n", "if", "isinstance", "(", "src", ",", "batchers", ".", "CompoundBatch", ")", ":", "src", "=", "src", ".", "batches", "[", "0", "]", "\n", "sorted_outputs", "=", "sorted", "(", "search_outputs", ",", "key", "=", "lambda", "x", ":", "x", ".", "score", "[", "0", "]", ",", "reverse", "=", "True", ")", "\n", "assert", "len", "(", "sorted_outputs", ")", ">=", "1", "\n", "outputs", "=", "[", "]", "\n", "for", "curr_output", "in", "sorted_outputs", ":", "\n", "      ", "output_actions", "=", "[", "x", "for", "x", "in", "curr_output", ".", "word_ids", "[", "0", "]", "]", "\n", "attentions", "=", "[", "x", "for", "x", "in", "curr_output", ".", "attentions", "[", "0", "]", "]", "\n", "score", "=", "curr_output", ".", "score", "[", "0", "]", "\n", "out_sent", "=", "sent", ".", "SimpleSentence", "(", "idx", "=", "src", "[", "0", "]", ".", "idx", ",", "\n", "words", "=", "output_actions", ",", "\n", "vocab", "=", "getattr", "(", "self", ".", "trg_reader", ",", "\"vocab\"", ",", "None", ")", ",", "\n", "output_procs", "=", "self", ".", "trg_reader", ".", "output_procs", ",", "\n", "score", "=", "score", ")", "\n", "if", "len", "(", "sorted_outputs", ")", "==", "1", ":", "\n", "        ", "outputs", ".", "append", "(", "out_sent", ")", "\n", "", "else", ":", "\n", "        ", "outputs", ".", "append", "(", "sent", ".", "NbestSentence", "(", "base_sent", "=", "out_sent", ",", "nbest_id", "=", "src", "[", "0", "]", ".", "idx", ")", ")", "\n", "", "", "if", "self", ".", "compute_report", ":", "\n", "      ", "attentions", "=", "np", ".", "concatenate", "(", "[", "x", ".", "npvalue", "(", ")", "for", "x", "in", "attentions", "]", ",", "axis", "=", "1", ")", "\n", "self", ".", "report_sent_info", "(", "{", "\"attentions\"", ":", "attentions", ",", "\n", "\"src\"", ":", "src", "[", "0", "]", ",", "\n", "\"output\"", ":", "outputs", "[", "0", "]", "}", ")", "\n", "\n", "", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.DefaultTranslator.generate_one_step": [[259, 272], ["translators.DefaultTranslator.attender.calc_context", "translators.DefaultTranslator.decoder.calc_log_probs", "TranslatorOutput", "translators.DefaultTranslator.trg_embedder.embed", "translators.DefaultTranslator.decoder.add_input", "translators.DefaultTranslator.rnn_state.output", "translators.DefaultTranslator.attender.get_last_attention", "type", "xnmt.batchers.mark_as_batch", "type", "type"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.attenders.MlpLocationAttender.calc_context", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.EnsembleDecoder.calc_log_probs", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.embed", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.decoders.AutoRegressiveDecoder.add_input", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMState.output", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.attenders.Attender.get_last_attention", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch"], ["", "def", "generate_one_step", "(", "self", ",", "current_word", ":", "Any", ",", "current_state", ":", "AutoRegressiveDecoderState", ")", "->", "TranslatorOutput", ":", "\n", "    ", "if", "current_word", "is", "not", "None", ":", "\n", "      ", "if", "type", "(", "current_word", ")", "==", "int", ":", "\n", "        ", "current_word", "=", "[", "current_word", "]", "\n", "", "if", "type", "(", "current_word", ")", "==", "list", "or", "type", "(", "current_word", ")", "==", "np", ".", "ndarray", ":", "\n", "        ", "current_word", "=", "batchers", ".", "mark_as_batch", "(", "current_word", ")", "\n", "", "current_word_embed", "=", "self", ".", "trg_embedder", ".", "embed", "(", "current_word", ")", "\n", "next_state", "=", "self", ".", "decoder", ".", "add_input", "(", "current_state", ",", "current_word_embed", ")", "\n", "", "else", ":", "\n", "      ", "next_state", "=", "current_state", "\n", "", "next_state", ".", "context", "=", "self", ".", "attender", ".", "calc_context", "(", "next_state", ".", "rnn_state", ".", "output", "(", ")", ")", "\n", "next_logsoftmax", "=", "self", ".", "decoder", ".", "calc_log_probs", "(", "next_state", ")", "\n", "return", "TranslatorOutput", "(", "next_state", ",", "next_logsoftmax", ",", "self", ".", "attender", ".", "get_last_attention", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.TransformerTranslator.__init__": [[291, 304], ["xnmt.models.base.ConditionedModel.__init__", "translators.TransformerTranslator.initialize_position_encoding"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.TransformerTranslator.initialize_position_encoding"], ["@", "register_xnmt_handler", "\n", "@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "src_reader", ",", "src_embedder", ",", "encoder", ",", "trg_reader", ",", "trg_embedder", ",", "decoder", ",", "inference", "=", "None", ",", "input_dim", "=", "512", ")", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "src_reader", "=", "src_reader", ",", "trg_reader", "=", "trg_reader", ")", "\n", "self", ".", "src_embedder", "=", "src_embedder", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "trg_embedder", "=", "trg_embedder", "\n", "self", ".", "decoder", "=", "decoder", "\n", "self", ".", "input_dim", "=", "input_dim", "\n", "self", ".", "inference", "=", "inference", "\n", "self", ".", "scale_emb", "=", "self", ".", "input_dim", "**", "0.5", "\n", "self", ".", "max_input_len", "=", "500", "\n", "self", ".", "initialize_position_encoding", "(", "self", ".", "max_input_len", ",", "input_dim", ")", "# TODO: parametrize this", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.TransformerTranslator.initialize_training_strategy": [[305, 307], ["None"], "methods", ["None"], ["", "def", "initialize_training_strategy", "(", "self", ",", "training_strategy", ")", ":", "\n", "    ", "self", ".", "loss_calculator", "=", "training_strategy", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.TransformerTranslator.make_attention_mask": [[308, 312], ["None"], "methods", ["None"], ["", "def", "make_attention_mask", "(", "self", ",", "source_block", ",", "target_block", ")", ":", "\n", "    ", "mask", "=", "(", "target_block", "[", ":", ",", "None", ",", ":", "]", "<=", "0", ")", "*", "(", "source_block", "[", ":", ",", ":", ",", "None", "]", "<=", "0", ")", "\n", "# (batch, source_length, target_length)", "\n", "return", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.TransformerTranslator.make_history_mask": [[313, 319], ["numpy.arange", "numpy.broadcast_to"], "methods", ["None"], ["", "def", "make_history_mask", "(", "self", ",", "block", ")", ":", "\n", "    ", "batch", ",", "length", "=", "block", ".", "shape", "\n", "arange", "=", "np", ".", "arange", "(", "length", ")", "\n", "history_mask", "=", "(", "arange", "[", "None", ",", "]", "<=", "arange", "[", ":", ",", "None", "]", ")", "[", "None", ",", "]", "\n", "history_mask", "=", "np", ".", "broadcast_to", "(", "history_mask", ",", "(", "batch", ",", "length", ",", "length", ")", ")", "\n", "return", "history_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.TransformerTranslator.mask_embeddings": [[320, 329], ["dynet.cmult.dim", "numpy.repeat", "dynet.inputTensor", "dynet.cmult", "numpy.moveaxis"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["", "def", "mask_embeddings", "(", "self", ",", "embeddings", ",", "mask", ")", ":", "\n", "    ", "\"\"\"\n    We convert the embeddings of masked input sequence to zero vector\n    \"\"\"", "\n", "(", "embed_dim", ",", "_", ")", ",", "_", "=", "embeddings", ".", "dim", "(", ")", "\n", "temp_mask", "=", "np", ".", "repeat", "(", "1.", "-", "mask", "[", ":", ",", "None", ",", ":", "]", ",", "embed_dim", ",", "axis", "=", "1", ")", "\n", "temp_mask", "=", "dy", ".", "inputTensor", "(", "np", ".", "moveaxis", "(", "temp_mask", ",", "[", "1", ",", "0", ",", "2", "]", ",", "[", "0", ",", "2", ",", "1", "]", ")", ",", "batched", "=", "True", ")", "\n", "embeddings", "=", "dy", ".", "cmult", "(", "embeddings", ",", "temp_mask", ")", "\n", "return", "embeddings", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.TransformerTranslator.initialize_position_encoding": [[330, 341], ["numpy.arange", "numpy.concatenate", "numpy.reshape", "numpy.transpose", "numpy.log", "numpy.exp", "numpy.expand_dims", "numpy.expand_dims", "float", "numpy.sin", "numpy.cos", "numpy.arange().astype", "numpy.arange"], "methods", ["None"], ["", "def", "initialize_position_encoding", "(", "self", ",", "length", ",", "n_units", ")", ":", "\n", "# Implementation in the Google tensor2tensor repo", "\n", "    ", "channels", "=", "n_units", "\n", "position", "=", "np", ".", "arange", "(", "length", ",", "dtype", "=", "'f'", ")", "\n", "num_timescales", "=", "channels", "//", "2", "\n", "log_timescale_increment", "=", "(", "np", ".", "log", "(", "10000.", "/", "1.", ")", "/", "(", "float", "(", "num_timescales", ")", "-", "1", ")", ")", "\n", "inv_timescales", "=", "1.", "*", "np", ".", "exp", "(", "np", ".", "arange", "(", "num_timescales", ")", ".", "astype", "(", "'f'", ")", "*", "-", "log_timescale_increment", ")", "\n", "scaled_time", "=", "np", ".", "expand_dims", "(", "position", ",", "1", ")", "*", "np", ".", "expand_dims", "(", "inv_timescales", ",", "0", ")", "\n", "signal", "=", "np", ".", "concatenate", "(", "[", "np", ".", "sin", "(", "scaled_time", ")", ",", "np", ".", "cos", "(", "scaled_time", ")", "]", ",", "axis", "=", "1", ")", "\n", "signal", "=", "np", ".", "reshape", "(", "signal", ",", "[", "1", ",", "length", ",", "channels", "]", ")", "\n", "self", ".", "position_encoding_block", "=", "np", ".", "transpose", "(", "signal", ",", "(", "0", ",", "2", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.TransformerTranslator.make_input_embedding": [[342, 349], ["dynet.inputTensor", "translators.TransformerTranslator.initialize_position_encoding"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.TransformerTranslator.initialize_position_encoding"], ["", "def", "make_input_embedding", "(", "self", ",", "emb_block", ",", "length", ")", ":", "\n", "    ", "if", "length", ">", "self", ".", "max_input_len", ":", "\n", "      ", "self", ".", "initialize_position_encoding", "(", "2", "*", "length", ",", "self", ".", "input_dim", ")", "\n", "self", ".", "max_input_len", "=", "2", "*", "length", "\n", "", "emb_block", "=", "emb_block", "*", "self", ".", "scale_emb", "\n", "emb_block", "+=", "dy", ".", "inputTensor", "(", "self", ".", "position_encoding_block", "[", "0", ",", ":", ",", ":", "length", "]", ")", "\n", "return", "emb_block", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.TransformerTranslator.sentence_block_embed": [[350, 357], ["mask.reshape", "embed.shape", "dynet.concatenate_cols", "dynet.reshape", "dynet.zeros", "dynet.lookup", "enumerate", "x.reshape"], "methods", ["None"], ["", "def", "sentence_block_embed", "(", "self", ",", "embed", ",", "x", ",", "mask", ")", ":", "\n", "    ", "batch", ",", "length", "=", "x", ".", "shape", "\n", "x_mask", "=", "mask", ".", "reshape", "(", "(", "batch", "*", "length", ",", ")", ")", "\n", "_", ",", "units", "=", "embed", ".", "shape", "(", ")", "# According to updated Dynet", "\n", "e", "=", "dy", ".", "concatenate_cols", "(", "[", "dy", ".", "zeros", "(", "units", ")", "if", "x_mask", "[", "j", "]", "==", "1", "else", "dy", ".", "lookup", "(", "embed", ",", "id_", ")", "for", "j", ",", "id_", "in", "enumerate", "(", "x", ".", "reshape", "(", "(", "batch", "*", "length", ",", ")", ")", ")", "]", ")", "\n", "e", "=", "dy", ".", "reshape", "(", "e", ",", "(", "units", ",", "length", ")", ",", "batch_size", "=", "batch", ")", "\n", "return", "e", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.TransformerTranslator.calc_loss": [[358, 404], ["xnmt.event_trigger.start_sent", "numpy.array", "isinstance", "translators.TransformerTranslator.sentence_block_embed", "translators.TransformerTranslator.make_input_embedding", "numpy.array", "isinstance", "translators.TransformerTranslator.sentence_block_embed", "translators.TransformerTranslator.make_input_embedding", "translators.TransformerTranslator.make_attention_mask", "translators.TransformerTranslator.make_attention_mask", "translators.TransformerTranslator.make_attention_mask", "translators.TransformerTranslator.make_history_mask", "translators.TransformerTranslator.encoder.transduce", "translators.TransformerTranslator.decoder", "list", "translators.TransformerTranslator.decoder.output_and_loss", "xnmt.losses.FactoredLossExpr", "xnmt.batchers.is_batched", "xnmt.batchers.mark_as_batch", "xnmt.batchers.is_batched", "xnmt.batchers.mark_as_batch", "type", "numpy.zeros", "numpy.concatenate", "list", "type", "numpy.zeros", "xnmt.batchers.mark_as_batch.mask.np_arr.astype", "dynet.pick", "translators.TransformerTranslator.decoder.output", "itertools.chain.from_iterable", "numpy.array", "map", "map", "numpy.zeros", "xnmt.batchers.mark_as_batch.mask.np_arr.astype", "translators.TransformerTranslator.dim", "batchers.mark_as_batch.mask.np_arr.astype.ravel"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.start_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.TransformerTranslator.sentence_block_embed", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.TransformerTranslator.make_input_embedding", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.TransformerTranslator.sentence_block_embed", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.TransformerTranslator.make_input_embedding", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.TransformerTranslator.make_attention_mask", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.TransformerTranslator.make_attention_mask", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.TransformerTranslator.make_attention_mask", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.TransformerTranslator.make_history_mask", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.transformer.TransformerDecoder.output_and_loss", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMState.output", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["", "def", "calc_loss", "(", "self", ",", "src", ",", "trg", ",", "infer_prediction", "=", "False", ")", ":", "\n", "    ", "event_trigger", ".", "start_sent", "(", "src", ")", "\n", "if", "not", "batchers", ".", "is_batched", "(", "src", ")", ":", "\n", "      ", "src", "=", "batchers", ".", "mark_as_batch", "(", "[", "src", "]", ")", "\n", "", "if", "not", "batchers", ".", "is_batched", "(", "trg", ")", ":", "\n", "      ", "trg", "=", "batchers", ".", "mark_as_batch", "(", "[", "trg", "]", ")", "\n", "", "src_words", "=", "np", ".", "array", "(", "[", "[", "Vocab", ".", "SS", "]", "+", "x", ".", "words", "for", "x", "in", "src", "]", ")", "\n", "batch_size", ",", "src_len", "=", "src_words", ".", "shape", "\n", "\n", "if", "isinstance", "(", "src", ".", "mask", ",", "type", "(", "None", ")", ")", ":", "\n", "      ", "src_mask", "=", "np", ".", "zeros", "(", "(", "batch_size", ",", "src_len", ")", ",", "dtype", "=", "np", ".", "int", ")", "\n", "", "else", ":", "\n", "      ", "src_mask", "=", "np", ".", "concatenate", "(", "[", "np", ".", "zeros", "(", "(", "batch_size", ",", "1", ")", ",", "dtype", "=", "np", ".", "int", ")", ",", "src", ".", "mask", ".", "np_arr", ".", "astype", "(", "np", ".", "int", ")", "]", ",", "axis", "=", "1", ")", "\n", "\n", "", "src_embeddings", "=", "self", ".", "sentence_block_embed", "(", "self", ".", "src_embedder", ".", "embeddings", ",", "src_words", ",", "src_mask", ")", "\n", "src_embeddings", "=", "self", ".", "make_input_embedding", "(", "src_embeddings", ",", "src_len", ")", "\n", "\n", "trg_words", "=", "np", ".", "array", "(", "list", "(", "map", "(", "lambda", "x", ":", "[", "Vocab", ".", "SS", "]", "+", "x", ".", "words", "[", ":", "-", "1", "]", ",", "trg", ")", ")", ")", "\n", "batch_size", ",", "trg_len", "=", "trg_words", ".", "shape", "\n", "\n", "if", "isinstance", "(", "trg", ".", "mask", ",", "type", "(", "None", ")", ")", ":", "\n", "      ", "trg_mask", "=", "np", ".", "zeros", "(", "(", "batch_size", ",", "trg_len", ")", ",", "dtype", "=", "np", ".", "int", ")", "\n", "", "else", ":", "\n", "      ", "trg_mask", "=", "trg", ".", "mask", ".", "np_arr", ".", "astype", "(", "np", ".", "int", ")", "\n", "\n", "", "trg_embeddings", "=", "self", ".", "sentence_block_embed", "(", "self", ".", "trg_embedder", ".", "embeddings", ",", "trg_words", ",", "trg_mask", ")", "\n", "trg_embeddings", "=", "self", ".", "make_input_embedding", "(", "trg_embeddings", ",", "trg_len", ")", "\n", "\n", "xx_mask", "=", "self", ".", "make_attention_mask", "(", "src_mask", ",", "src_mask", ")", "\n", "xy_mask", "=", "self", ".", "make_attention_mask", "(", "trg_mask", ",", "src_mask", ")", "\n", "yy_mask", "=", "self", ".", "make_attention_mask", "(", "trg_mask", ",", "trg_mask", ")", "\n", "yy_mask", "*=", "self", ".", "make_history_mask", "(", "trg_mask", ")", "\n", "\n", "z_blocks", "=", "self", ".", "encoder", ".", "transduce", "(", "src_embeddings", ",", "xx_mask", ")", "\n", "h_block", "=", "self", ".", "decoder", "(", "trg_embeddings", ",", "z_blocks", ",", "xy_mask", ",", "yy_mask", ")", "\n", "\n", "if", "infer_prediction", ":", "\n", "      ", "y_len", "=", "h_block", ".", "dim", "(", ")", "[", "0", "]", "[", "1", "]", "\n", "last_col", "=", "dy", ".", "pick", "(", "h_block", ",", "dim", "=", "1", ",", "index", "=", "y_len", "-", "1", ")", "\n", "logits", "=", "self", ".", "decoder", ".", "output", "(", "last_col", ")", "\n", "return", "logits", "\n", "\n", "", "ref_list", "=", "list", "(", "itertools", ".", "chain", ".", "from_iterable", "(", "map", "(", "lambda", "x", ":", "x", ".", "words", ",", "trg", ")", ")", ")", "\n", "concat_t_block", "=", "(", "1", "-", "trg_mask", ".", "ravel", "(", ")", ")", ".", "reshape", "(", "-", "1", ")", "*", "np", ".", "array", "(", "ref_list", ")", "\n", "loss", "=", "self", ".", "decoder", ".", "output_and_loss", "(", "h_block", ",", "concat_t_block", ")", "\n", "return", "FactoredLossExpr", "(", "{", "\"mle\"", ":", "loss", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.TransformerTranslator.generate": [[405, 440], ["xnmt.event_trigger.start_sent", "xnmt.sent.SimpleSentence", "range", "xnmt.batchers.is_batched", "xnmt.batchers.mark_as_batch", "xnmt.batchers.is_batched", "xnmt.batchers.mark_as_batch", "dynet.renew_cg", "translators.TransformerTranslator.calc_loss", "numpy.argmax().astype", "output_actions.append", "xnmt.sent.SimpleSentence", "hasattr", "outputs.append", "outputs.append", "output_actions.append", "xnmt.batchers.is_batched", "xnmt.batchers.mark_as_batch", "xnmt.sent.SimpleSentence", "numpy.argmax", "translators.TransformerTranslator.npvalue"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.start_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_encoder.DualEncoderSimilarity.calc_loss", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch"], ["", "def", "generate", "(", "self", ",", "src", ",", "forced_trg_ids", "=", "None", ",", "search_strategy", "=", "None", ")", ":", "\n", "    ", "event_trigger", ".", "start_sent", "(", "src", ")", "\n", "if", "not", "batchers", ".", "is_batched", "(", "src", ")", ":", "\n", "      ", "src", "=", "batchers", ".", "mark_as_batch", "(", "[", "src", "]", ")", "\n", "", "outputs", "=", "[", "]", "\n", "\n", "trg", "=", "sent", ".", "SimpleSentence", "(", "[", "0", "]", ")", "\n", "\n", "if", "not", "batchers", ".", "is_batched", "(", "trg", ")", ":", "\n", "      ", "trg", "=", "batchers", ".", "mark_as_batch", "(", "[", "trg", "]", ")", "\n", "\n", "", "output_actions", "=", "[", "]", "\n", "score", "=", "0.", "\n", "\n", "# TODO Fix this with generate_one_step and use the appropriate search_strategy", "\n", "self", ".", "max_len", "=", "100", "# This is a temporary hack", "\n", "for", "_", "in", "range", "(", "self", ".", "max_len", ")", ":", "\n", "      ", "dy", ".", "renew_cg", "(", "immediate_compute", "=", "settings", ".", "IMMEDIATE_COMPUTE", ",", "check_validity", "=", "settings", ".", "CHECK_VALIDITY", ")", "\n", "log_prob_tail", "=", "self", ".", "calc_loss", "(", "src", ",", "trg", ",", "loss_cal", "=", "None", ",", "infer_prediction", "=", "True", ")", "\n", "ys", "=", "np", ".", "argmax", "(", "log_prob_tail", ".", "npvalue", "(", ")", ",", "axis", "=", "0", ")", ".", "astype", "(", "'i'", ")", "\n", "if", "ys", "==", "Vocab", ".", "ES", ":", "\n", "        ", "output_actions", ".", "append", "(", "ys", ")", "\n", "break", "\n", "", "output_actions", ".", "append", "(", "ys", ")", "\n", "trg", "=", "sent", ".", "SimpleSentence", "(", "words", "=", "output_actions", "+", "[", "0", "]", ")", "\n", "if", "not", "batchers", ".", "is_batched", "(", "trg", ")", ":", "\n", "        ", "trg", "=", "batchers", ".", "mark_as_batch", "(", "[", "trg", "]", ")", "\n", "\n", "# Append output to the outputs", "\n", "", "", "if", "hasattr", "(", "self", ",", "\"trg_vocab\"", ")", "and", "self", ".", "trg_vocab", "is", "not", "None", ":", "\n", "      ", "outputs", ".", "append", "(", "sent", ".", "SimpleSentence", "(", "words", "=", "output_actions", ",", "vocab", "=", "self", ".", "trg_vocab", ")", ")", "\n", "", "else", ":", "\n", "      ", "outputs", ".", "append", "(", "(", "output_actions", ",", "score", ")", ")", "\n", "\n", "", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.EnsembleTranslator.__init__": [[455, 479], ["xnmt.persistence.bare", "xnmt.models.base.ConditionedModel.__init__", "enumerate", "translators.DefaultTranslator", "translators.EnsembleTranslator.trg_reader.vocab.is_compatible", "translators.EnsembleListDelegate", "translators.EnsembleListDelegate", "translators.EnsembleListDelegate", "translators.EnsembleListDelegate", "translators.EnsembleDecoder", "hasattr", "hasattr", "translators.EnsembleTranslator.src_reader.vocab.is_compatible"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.vocabs.Vocab.is_compatible", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.vocabs.Vocab.is_compatible"], ["@", "register_xnmt_handler", "\n", "@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "models", ",", "src_reader", ",", "trg_reader", ",", "inference", "=", "bare", "(", "inferences", ".", "AutoRegressiveInference", ")", ")", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "src_reader", "=", "src_reader", ",", "trg_reader", "=", "trg_reader", ")", "\n", "self", ".", "models", "=", "models", "\n", "self", ".", "inference", "=", "inference", "\n", "\n", "# perform checks to verify the models can logically be ensembled", "\n", "for", "i", ",", "model", "in", "enumerate", "(", "self", ".", "models", ")", ":", "\n", "      ", "if", "hasattr", "(", "self", ".", "src_reader", ",", "\"vocab\"", ")", "or", "hasattr", "(", "model", ".", "src_reader", ",", "\"vocab\"", ")", ":", "\n", "        ", "assert", "self", ".", "src_reader", ".", "vocab", ".", "is_compatible", "(", "model", ".", "src_reader", ".", "vocab", ")", ",", "f\"src_reader.vocab is not compatible with model {i}\"", "\n", "", "assert", "self", ".", "trg_reader", ".", "vocab", ".", "is_compatible", "(", "model", ".", "trg_reader", ".", "vocab", ")", ",", "f\"trg_reader.vocab is not compatible with model {i}\"", "\n", "\n", "# proxy object used for generation, to avoid code duplication", "\n", "", "self", ".", "_proxy", "=", "DefaultTranslator", "(", "\n", "self", ".", "src_reader", ",", "\n", "self", ".", "trg_reader", ",", "\n", "EnsembleListDelegate", "(", "[", "model", ".", "src_embedder", "for", "model", "in", "self", ".", "models", "]", ")", ",", "\n", "EnsembleListDelegate", "(", "[", "model", ".", "encoder", "for", "model", "in", "self", ".", "models", "]", ")", ",", "\n", "EnsembleListDelegate", "(", "[", "model", ".", "attender", "for", "model", "in", "self", ".", "models", "]", ")", ",", "\n", "EnsembleListDelegate", "(", "[", "model", ".", "trg_embedder", "for", "model", "in", "self", ".", "models", "]", ")", ",", "\n", "EnsembleDecoder", "(", "[", "model", ".", "decoder", "for", "model", "in", "self", ".", "models", "]", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.EnsembleTranslator.shared_params": [[481, 484], ["model.shared_params"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.shared_params"], ["", "def", "shared_params", "(", "self", ")", ":", "\n", "    ", "shared", "=", "[", "params", "for", "model", "in", "self", ".", "models", "for", "params", "in", "model", ".", "shared_params", "(", ")", "]", "\n", "return", "shared", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.EnsembleTranslator.set_trg_vocab": [[485, 487], ["translators.EnsembleTranslator._proxy.set_trg_vocab"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.bow.BowPredictor.set_trg_vocab"], ["", "def", "set_trg_vocab", "(", "self", ",", "trg_vocab", "=", "None", ")", ":", "\n", "    ", "self", ".", "_proxy", ".", "set_trg_vocab", "(", "trg_vocab", "=", "trg_vocab", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.EnsembleTranslator.calc_nll": [[488, 499], ["collections.defaultdict", "xnmt.losses.FactoredLossExpr", "collections.defaultdict.items", "model.calc_nll().expr_factors.items", "xnmt.losses.FactoredLossExpr.add_loss", "sub_losses[].append", "dynet.average", "model.calc_nll"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossExpr.add_loss", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.calc_nll"], ["", "def", "calc_nll", "(", "self", ",", "src", ":", "Union", "[", "batchers", ".", "Batch", ",", "sent", ".", "Sentence", "]", ",", "trg", ":", "Union", "[", "batchers", ".", "Batch", ",", "sent", ".", "Sentence", "]", ")", "->", "dy", ".", "Expression", ":", "\n", "    ", "sub_losses", "=", "collections", ".", "defaultdict", "(", "list", ")", "\n", "for", "model", "in", "self", ".", "models", ":", "\n", "      ", "for", "loss_name", ",", "loss", "in", "model", ".", "calc_nll", "(", "src", ",", "trg", ")", ".", "expr_factors", ".", "items", "(", ")", ":", "\n", "        ", "sub_losses", "[", "loss_name", "]", ".", "append", "(", "loss", ")", "\n", "", "", "model_loss", "=", "FactoredLossExpr", "(", ")", "\n", "for", "loss_name", ",", "losslist", "in", "sub_losses", ".", "items", "(", ")", ":", "\n", "# TODO: dy.average(losslist)  _or_  dy.esum(losslist) / len(self.models) ?", "\n", "#       -- might not be the same if not all models return all losses", "\n", "      ", "model_loss", ".", "add_loss", "(", "loss_name", ",", "dy", ".", "average", "(", "losslist", ")", ")", "\n", "", "return", "model_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.EnsembleTranslator.generate": [[500, 502], ["translators.EnsembleTranslator._proxy.generate"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.generate"], ["", "def", "generate", "(", "self", ",", "src", ",", "search_strategy", ",", "forced_trg_ids", "=", "None", ")", ":", "\n", "    ", "return", "self", ".", "_proxy", ".", "generate", "(", "src", ",", "search_strategy", ",", "forced_trg_ids", "=", "forced_trg_ids", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.EnsembleListDelegate.__init__": [[516, 519], ["isinstance"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "objects", ")", ":", "\n", "    ", "assert", "isinstance", "(", "objects", ",", "(", "tuple", ",", "list", ")", ")", "\n", "self", ".", "_objects", "=", "objects", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.EnsembleListDelegate.__getitem__": [[520, 522], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "key", ")", ":", "\n", "    ", "return", "self", ".", "_objects", "[", "key", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.EnsembleListDelegate.__setitem__": [[523, 525], ["None"], "methods", ["None"], ["", "def", "__setitem__", "(", "self", ",", "key", ",", "value", ")", ":", "\n", "    ", "self", ".", "_objects", "[", "key", "]", "=", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.EnsembleListDelegate.__iter__": [[526, 528], ["translators.EnsembleListDelegate._objects.__iter__"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.EnsembleListDelegate.__iter__"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "_objects", ".", "__iter__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.EnsembleListDelegate.__call__": [[529, 531], ["translators.EnsembleListDelegate.__getattr__"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.EnsembleListDelegate.__getattr__"], ["", "def", "__call__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "return", "self", ".", "__getattr__", "(", "'__call__'", ")", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.EnsembleListDelegate.__len__": [[532, 534], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "    ", "return", "len", "(", "self", ".", "_objects", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.EnsembleListDelegate.__getattr__": [[535, 557], ["callable", "getattr", "translators.EnsembleListDelegate", "enumerate", "all", "kwargs.items", "translators.EnsembleListDelegate.__getattr__.unwrap"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items"], ["", "def", "__getattr__", "(", "self", ",", "attr", ")", ":", "\n", "    ", "def", "unwrap", "(", "list_idx", ",", "args", ",", "kwargs", ")", ":", "\n", "      ", "args", "=", "[", "arg", "if", "not", "isinstance", "(", "arg", ",", "EnsembleListDelegate", ")", "else", "arg", "[", "list_idx", "]", "for", "arg", "in", "args", "]", "\n", "kwargs", "=", "{", "key", ":", "val", "if", "not", "isinstance", "(", "val", ",", "EnsembleListDelegate", ")", "else", "val", "[", "list_idx", "]", "for", "key", ",", "val", "in", "kwargs", ".", "items", "(", ")", "}", "\n", "return", "args", ",", "kwargs", "\n", "\n", "", "attrs", "=", "[", "getattr", "(", "obj", ",", "attr", ")", "for", "obj", "in", "self", ".", "_objects", "]", "\n", "if", "callable", "(", "attrs", "[", "0", "]", ")", ":", "\n", "      ", "def", "wrapper_func", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "ret", "=", "[", "]", "\n", "for", "i", ",", "attr_", "in", "enumerate", "(", "attrs", ")", ":", "\n", "          ", "args_i", ",", "kwargs_i", "=", "unwrap", "(", "i", ",", "args", ",", "kwargs", ")", "\n", "ret", ".", "append", "(", "attr_", "(", "*", "args_i", ",", "**", "kwargs_i", ")", ")", "\n", "", "if", "all", "(", "val", "is", "None", "for", "val", "in", "ret", ")", ":", "\n", "          ", "return", "None", "\n", "", "else", ":", "\n", "          ", "return", "EnsembleListDelegate", "(", "ret", ")", "\n", "", "", "return", "wrapper_func", "\n", "", "else", ":", "\n", "      ", "return", "EnsembleListDelegate", "(", "attrs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.EnsembleListDelegate.__setattr__": [[558, 568], ["attr.startswith", "isinstance", "enumerate", "setattr", "setattr"], "methods", ["None"], ["", "", "def", "__setattr__", "(", "self", ",", "attr", ",", "value", ")", ":", "\n", "    ", "if", "not", "attr", ".", "startswith", "(", "'_'", ")", ":", "\n", "      ", "if", "isinstance", "(", "value", ",", "EnsembleListDelegate", ")", ":", "\n", "        ", "for", "i", ",", "obj", "in", "enumerate", "(", "self", ".", "_objects", ")", ":", "\n", "          ", "setattr", "(", "obj", ",", "attr", ",", "value", "[", "i", "]", ")", "\n", "", "", "else", ":", "\n", "        ", "for", "obj", "in", "self", ".", "_objects", ":", "\n", "          ", "setattr", "(", "obj", ",", "attr", ",", "value", ")", "\n", "", "", "", "else", ":", "\n", "      ", "self", ".", "__dict__", "[", "attr", "]", "=", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.EnsembleListDelegate.__repr__": [[569, 571], ["repr"], "methods", ["None"], ["", "", "def", "__repr__", "(", "self", ")", ":", "\n", "    ", "return", "\"EnsembleListDelegate([\"", "+", "', '", ".", "join", "(", "repr", "(", "elem", ")", "for", "elem", "in", "self", ".", "_objects", ")", "+", "\"])\"", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.EnsembleDecoder.calc_log_probs": [[580, 583], ["dynet.average", "obj.calc_log_probs", "zip"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.EnsembleDecoder.calc_log_probs"], ["def", "calc_log_probs", "(", "self", ",", "mlp_dec_states", ")", ":", "\n", "    ", "scores", "=", "[", "obj", ".", "calc_log_probs", "(", "dec_state", ")", "for", "obj", ",", "dec_state", "in", "zip", "(", "self", ".", "_objects", ",", "mlp_dec_states", ")", "]", "\n", "return", "dy", ".", "average", "(", "scores", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.FactorTranslator.__init__": [[602, 624], ["xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.persistence.Ref", "xnmt.models.base.ConditionedModel.__init__"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__"], ["@", "register_xnmt_handler", "\n", "@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "src_reader", ":", "input_readers", ".", "InputReader", ",", "\n", "trg_reader", ":", "input_readers", ".", "InputReader", ",", "\n", "src_embedder", ":", "Embedder", "=", "bare", "(", "SimpleWordEmbedder", ")", ",", "\n", "encoder", ":", "transducers_base", ".", "SeqTransducer", "=", "bare", "(", "BiLSTMSeqTransducer", ")", ",", "\n", "attender", ":", "Attender", "=", "bare", "(", "MlpAttender", ")", ",", "\n", "trg_embedder", ":", "Embedder", "=", "bare", "(", "SimpleWordEmbedder", ")", ",", "\n", "decoder", ":", "Decoder", "=", "bare", "(", "AutoRegressiveDecoder", ")", ",", "\n", "inference", ":", "inferences", ".", "AutoRegressiveInference", "=", "bare", "(", "inferences", ".", "AutoRegressiveInference", ")", ",", "\n", "truncate_dec_batches", ":", "bool", "=", "False", ",", "\n", "compute_report", ":", "bool", "=", "Ref", "(", "\"exp_global.compute_report\"", ",", "default", "=", "False", ")", ")", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "src_reader", "=", "src_reader", ",", "trg_reader", "=", "trg_reader", ")", "\n", "self", ".", "src_embedder", "=", "src_embedder", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "attender", "=", "attender", "\n", "self", ".", "trg_embedder", "=", "trg_embedder", "\n", "self", ".", "decoder", "=", "decoder", "\n", "self", ".", "inference", "=", "inference", "\n", "self", ".", "truncate_dec_batches", "=", "truncate_dec_batches", "\n", "self", ".", "compute_report", "=", "compute_report", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.FactorTranslator.shared_params": [[625, 630], ["None"], "methods", ["None"], ["", "def", "shared_params", "(", "self", ")", ":", "\n", "    ", "return", "[", "{", "\".src_embedder.emb_dim\"", ",", "\".encoder.input_dim\"", "}", ",", "\n", "{", "\".encoder.hidden_dim\"", ",", "\".attender.input_dim\"", ",", "\".decoder.input_dim\"", "}", ",", "\n", "{", "\".attender.state_dim\"", ",", "\".decoder.rnn.hidden_dim\"", "}", ",", "\n", "{", "\".trg_embedder.emb_dim\"", ",", "\".decoder.trg_embed_dim\"", "}", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.FactorTranslator._encode_src": [[632, 640], ["translators.FactorTranslator.src_embedder.embed_sent", "translators.FactorTranslator.encoder.transduce", "translators.FactorTranslator.encoder.get_final_states", "translators.FactorTranslator.attender.init_sent", "translators.FactorTranslator.decoder.initial_state", "xnmt.batchers.is_batched", "xnmt.batchers.mark_as_batch", "translators.FactorTranslator.trg_embedder.embed", "src.batch_size"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.embed_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.get_final_states", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.attenders.MlpLocationAttender.init_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.decoders.AutoRegressiveDecoder.initial_state", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.embed", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.batch_size"], ["", "def", "_encode_src", "(", "self", ",", "src", ":", "Union", "[", "batchers", ".", "Batch", ",", "sent", ".", "Sentence", "]", ")", ":", "\n", "    ", "embeddings", "=", "self", ".", "src_embedder", ".", "embed_sent", "(", "src", ")", "\n", "encoding", "=", "self", ".", "encoder", ".", "transduce", "(", "embeddings", ")", "\n", "final_state", "=", "self", ".", "encoder", ".", "get_final_states", "(", ")", "\n", "self", ".", "attender", ".", "init_sent", "(", "encoding", ")", "\n", "ss", "=", "batchers", ".", "mark_as_batch", "(", "[", "Vocab", ".", "SS", "]", "*", "src", ".", "batch_size", "(", ")", ")", "if", "batchers", ".", "is_batched", "(", "src", ")", "else", "Vocab", ".", "SS", "\n", "initial_state", "=", "self", ".", "decoder", ".", "initial_state", "(", "final_state", ",", "self", ".", "trg_embedder", ".", "embed", "(", "ss", ")", ")", "\n", "return", "initial_state", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.FactorTranslator.calc_nll": [[648, 686], ["xnmt.event_trigger.start_sent", "translators.FactorTranslator._encode_src", "trg.sent_len", "range", "xnmt.batchers.is_batched", "xnmt.batchers.is_batched", "enumerate", "translators.DefaultTranslator._select_ref_words", "translators.FactorTranslator.rnn_state.output", "translators.FactorTranslator.attender.calc_context", "translators.FactorTranslator.decoder.calc_loss", "losses.append", "dynet.esum", "dynet.esum", "xnmt.batchers.is_batched", "xnmt.batchers.truncate_batches", "translators.FactorTranslator.decoder.add_input", "xnmt.batchers.is_batched", "trg_mask.cmult_by_timestep_expr", "single_trg.sent_len", "len", "translators.FactorTranslator.trg_embedder.embed", "dynet.sum_batches", "range"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.start_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator._encode_src", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.FactorTranslator._select_ref_words", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMState.output", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.attenders.MlpLocationAttender.calc_context", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_encoder.DualEncoderSimilarity.calc_loss", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.truncate_batches", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.decoders.AutoRegressiveDecoder.add_input", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.cmult_by_timestep_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.embed"], ["", "def", "calc_nll", "(", "self", ",", "src", ":", "Union", "[", "batchers", ".", "Batch", ",", "sent", ".", "Sentence", "]", ",", "trg", ":", "Union", "[", "batchers", ".", "Batch", ",", "sent", ".", "Sentence", "]", ")", "->", "dy", ".", "Expression", ":", "\n", "    ", "event_trigger", ".", "start_sent", "(", "src", ")", "\n", "#    if isinstance(src, batchers.CompoundBatch): src = src.batches[0]", "\n", "# Encode the sentence", "\n", "initial_state", "=", "self", ".", "_encode_src", "(", "src", ")", "\n", "\n", "dec_state", "=", "initial_state", "\n", "trg_mask", "=", "trg", ".", "mask", "if", "batchers", ".", "is_batched", "(", "trg", ")", "else", "None", "\n", "losses", "=", "[", "]", "\n", "seq_len", "=", "trg", ".", "sent_len", "(", ")", "\n", "\n", "if", "settings", ".", "CHECK_VALIDITY", "and", "batchers", ".", "is_batched", "(", "src", ")", ":", "\n", "      ", "for", "j", ",", "single_trg", "in", "enumerate", "(", "trg", ")", ":", "\n", "        ", "assert", "single_trg", ".", "sent_len", "(", ")", "==", "seq_len", "# assert consistent length", "\n", "assert", "1", "==", "len", "(", "[", "i", "for", "i", "in", "range", "(", "seq_len", ")", "if", "(", "trg_mask", "is", "None", "or", "trg_mask", ".", "np_arr", "[", "j", ",", "i", "]", "==", "0", ")", "and", "single_trg", "[", "i", "]", "==", "Vocab", ".", "ES", "]", ")", "# assert exactly one unmasked ES token", "\n", "\n", "", "", "input_word", "=", "None", "\n", "for", "i", "in", "range", "(", "seq_len", ")", ":", "\n", "      ", "ref_word", "=", "DefaultTranslator", ".", "_select_ref_words", "(", "trg", ",", "i", ",", "truncate_masked", "=", "self", ".", "truncate_dec_batches", ")", "\n", "if", "self", ".", "truncate_dec_batches", "and", "batchers", ".", "is_batched", "(", "ref_word", ")", ":", "\n", "        ", "dec_state", ".", "rnn_state", ",", "ref_word", "=", "batchers", ".", "truncate_batches", "(", "dec_state", ".", "rnn_state", ",", "ref_word", ")", "\n", "\n", "", "if", "input_word", "is", "not", "None", ":", "\n", "        ", "dec_state", "=", "self", ".", "decoder", ".", "add_input", "(", "dec_state", ",", "self", ".", "trg_embedder", ".", "embed", "(", "input_word", ")", ")", "\n", "", "rnn_output", "=", "dec_state", ".", "rnn_state", ".", "output", "(", ")", "\n", "dec_state", ".", "context", "=", "self", ".", "attender", ".", "calc_context", "(", "rnn_output", ")", "\n", "word_loss", "=", "self", ".", "decoder", ".", "calc_loss", "(", "dec_state", ",", "ref_word", ")", "\n", "\n", "if", "not", "self", ".", "truncate_dec_batches", "and", "batchers", ".", "is_batched", "(", "src", ")", "and", "trg_mask", "is", "not", "None", ":", "\n", "        ", "word_loss", "=", "trg_mask", ".", "cmult_by_timestep_expr", "(", "word_loss", ",", "i", ",", "inverse", "=", "True", ")", "\n", "", "losses", ".", "append", "(", "word_loss", ")", "\n", "input_word", "=", "ref_word", "\n", "\n", "", "if", "self", ".", "truncate_dec_batches", ":", "\n", "      ", "loss_expr", "=", "dy", ".", "esum", "(", "[", "dy", ".", "sum_batches", "(", "wl", ")", "for", "wl", "in", "losses", "]", ")", "\n", "", "else", ":", "\n", "      ", "loss_expr", "=", "dy", ".", "esum", "(", "losses", ")", "\n", "", "return", "loss_expr", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.FactorTranslator._select_ref_words": [[687, 706], ["xnmt.batchers.is_batched", "xnmt.batchers.is_batched", "enumerate", "xnmt.batchers.mark_as_batch", "xnmt.batchers.is_batched", "xnmt.batchers.mark_as_batch", "ret.append", "numpy.sum"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "@", "staticmethod", "\n", "def", "_select_ref_words", "(", "sent", ",", "index", ",", "truncate_masked", "=", "False", ")", ":", "\n", "    ", "if", "truncate_masked", ":", "\n", "      ", "mask", "=", "sent", ".", "mask", "if", "batchers", ".", "is_batched", "(", "sent", ")", "else", "None", "\n", "if", "not", "batchers", ".", "is_batched", "(", "sent", ")", ":", "\n", "        ", "return", "sent", "[", "index", "]", "\n", "", "else", ":", "\n", "        ", "ret", "=", "[", "]", "\n", "found_masked", "=", "False", "\n", "for", "(", "j", ",", "single_trg", ")", "in", "enumerate", "(", "sent", ")", ":", "\n", "          ", "if", "mask", "is", "None", "or", "mask", ".", "np_arr", "[", "j", ",", "index", "]", "==", "0", "or", "np", ".", "sum", "(", "mask", ".", "np_arr", "[", ":", ",", "index", "]", ")", "==", "mask", ".", "np_arr", ".", "shape", "[", "0", "]", ":", "\n", "            ", "assert", "not", "found_masked", ",", "\"sentences must be sorted by decreasing target length\"", "\n", "ret", ".", "append", "(", "single_trg", "[", "index", "]", ")", "\n", "", "else", ":", "\n", "            ", "found_masked", "=", "True", "\n", "", "", "return", "batchers", ".", "mark_as_batch", "(", "ret", ")", "\n", "", "", "else", ":", "\n", "      ", "if", "not", "batchers", ".", "is_batched", "(", "sent", ")", ":", "return", "sent", "[", "index", "]", "\n", "else", ":", "return", "batchers", ".", "mark_as_batch", "(", "[", "single_trg", "[", "index", "]", "for", "single_trg", "in", "sent", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.FactorTranslator.generate_search_output": [[707, 741], ["xnmt.event_trigger.start_sent", "isinstance", "xnmt.batchers.mark_as_batch", "translators.FactorTranslator._encode_src", "search_strategy.generate_output", "src.batch_size", "NotImplementedError", "xnmt.batchers.Mask", "src_sent.sent_len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.start_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator._encode_src", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.search_strategies.MctsSearch.generate_output", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.batch_size", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len"], ["", "", "def", "generate_search_output", "(", "self", ",", "\n", "src", ":", "batchers", ".", "Batch", ",", "\n", "search_strategy", ":", "search_strategies", ".", "SearchStrategy", ",", "\n", "forced_trg_ids", ":", "batchers", ".", "Batch", "=", "None", ")", "->", "List", "[", "search_strategies", ".", "SearchOutput", "]", ":", "\n", "    ", "\"\"\"\n    Takes in a batch of source sentences and outputs a list of search outputs.\n    Args:\n      src: The source sentences\n      search_strategy: The strategy with which to perform the search\n      forced_trg_ids: The target IDs to generate if performing forced decoding\n    Returns:\n      A list of search outputs including scores, etc.\n    \"\"\"", "\n", "if", "src", ".", "batch_size", "(", ")", "!=", "1", ":", "\n", "      ", "raise", "NotImplementedError", "(", "\"batched decoding not implemented for DefaultTranslator. \"", "\n", "\"Specify inference batcher with batch size 1.\"", ")", "\n", "", "event_trigger", ".", "start_sent", "(", "src", ")", "\n", "all_src", "=", "src", "\n", "if", "isinstance", "(", "src", ",", "batchers", ".", "CompoundBatch", ")", ":", "src", "=", "src", ".", "batches", "[", "0", "]", "\n", "# Generating outputs", "\n", "cur_forced_trg", "=", "None", "\n", "src_sent", "=", "src", "[", "0", "]", "#checkme", "\n", "sent_mask", "=", "None", "\n", "if", "src", ".", "mask", ":", "sent_mask", "=", "batchers", ".", "Mask", "(", "np_arr", "=", "src", ".", "mask", ".", "np_arr", "[", "0", ":", "1", "]", ")", "\n", "sent_batch", "=", "batchers", ".", "mark_as_batch", "(", "[", "sent", "]", ",", "mask", "=", "sent_mask", ")", "\n", "\n", "# Encode the sentence", "\n", "initial_state", "=", "self", ".", "_encode_src", "(", "all_src", ")", "\n", "\n", "if", "forced_trg_ids", "is", "not", "None", ":", "cur_forced_trg", "=", "forced_trg_ids", "[", "0", "]", "\n", "search_outputs", "=", "search_strategy", ".", "generate_output", "(", "self", ",", "initial_state", ",", "\n", "src_length", "=", "[", "src_sent", ".", "sent_len", "(", ")", "]", ",", "\n", "forced_trg_ids", "=", "cur_forced_trg", ")", "\n", "return", "search_outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.FactorTranslator.generate": [[742, 781], ["translators.FactorTranslator.generate_search_output", "sorted", "src.batch_size", "len", "xnmt.sent.SimpleSentence", "numpy.concatenate", "translators.FactorTranslator.report_sent_info", "len", "outputs.append", "outputs.append", "getattr", "xnmt.sent.NbestSentence", "x.npvalue"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.FactorTranslator.generate_search_output", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.batch_size", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.Reportable.report_sent_info", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "def", "generate", "(", "self", ",", "\n", "src", ":", "batchers", ".", "Batch", ",", "\n", "search_strategy", ":", "search_strategies", ".", "SearchStrategy", ",", "\n", "forced_trg_ids", ":", "batchers", ".", "Batch", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Takes in a batch of source sentences and outputs a list of search outputs.\n    Args:\n      src: The source sentences\n      search_strategy: The strategy with which to perform the search\n      forced_trg_ids: The target IDs to generate if performing forced decoding\n    Returns:\n      A list of search outputs including scores, etc.\n    \"\"\"", "\n", "assert", "src", ".", "batch_size", "(", ")", "==", "1", "\n", "search_outputs", "=", "self", ".", "generate_search_output", "(", "src", ",", "search_strategy", ",", "forced_trg_ids", ")", "\n", "#    if isinstance(src, batchers.CompoundBatch): src = src.batches[0]", "\n", "sorted_outputs", "=", "sorted", "(", "search_outputs", ",", "key", "=", "lambda", "x", ":", "x", ".", "score", "[", "0", "]", ",", "reverse", "=", "True", ")", "\n", "assert", "len", "(", "sorted_outputs", ")", ">=", "1", "\n", "outputs", "=", "[", "]", "\n", "for", "curr_output", "in", "sorted_outputs", ":", "\n", "      ", "output_actions", "=", "[", "x", "for", "x", "in", "curr_output", ".", "word_ids", "[", "0", "]", "]", "\n", "attentions", "=", "[", "x", "for", "x", "in", "curr_output", ".", "attentions", "[", "0", "]", "]", "\n", "score", "=", "curr_output", ".", "score", "[", "0", "]", "\n", "out_sent", "=", "sent", ".", "SimpleSentence", "(", "idx", "=", "src", "[", "0", "]", ".", "idx", ",", "\n", "words", "=", "output_actions", ",", "\n", "vocab", "=", "getattr", "(", "self", ".", "trg_reader", ",", "\"vocab\"", ",", "None", ")", ",", "\n", "output_procs", "=", "self", ".", "trg_reader", ".", "output_procs", ",", "\n", "score", "=", "score", ")", "\n", "if", "len", "(", "sorted_outputs", ")", "==", "1", ":", "\n", "        ", "outputs", ".", "append", "(", "out_sent", ")", "\n", "", "else", ":", "\n", "        ", "outputs", ".", "append", "(", "sent", ".", "NbestSentence", "(", "base_sent", "=", "out_sent", ",", "nbest_id", "=", "src", "[", "0", "]", ".", "idx", ")", ")", "\n", "", "", "if", "self", ".", "compute_report", ":", "\n", "      ", "attentions", "=", "np", ".", "concatenate", "(", "[", "x", ".", "npvalue", "(", ")", "for", "x", "in", "attentions", "]", ",", "axis", "=", "1", ")", "\n", "self", ".", "report_sent_info", "(", "{", "\"attentions\"", ":", "attentions", ",", "\n", "\"src\"", ":", "src", "[", "0", "]", ",", "\n", "\"output\"", ":", "outputs", "[", "0", "]", "}", ")", "\n", "\n", "", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.FactorTranslator.generate_one_step": [[782, 795], ["translators.FactorTranslator.attender.calc_context", "translators.FactorTranslator.decoder.calc_log_probs", "TranslatorOutput", "translators.FactorTranslator.trg_embedder.embed", "translators.FactorTranslator.decoder.add_input", "translators.FactorTranslator.rnn_state.output", "translators.FactorTranslator.attender.get_last_attention", "type", "xnmt.batchers.mark_as_batch", "type", "type"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.attenders.MlpLocationAttender.calc_context", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.EnsembleDecoder.calc_log_probs", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.embed", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.decoders.AutoRegressiveDecoder.add_input", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMState.output", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.attenders.Attender.get_last_attention", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch"], ["", "def", "generate_one_step", "(", "self", ",", "current_word", ":", "Any", ",", "current_state", ":", "AutoRegressiveDecoderState", ")", "->", "TranslatorOutput", ":", "\n", "    ", "if", "current_word", "is", "not", "None", ":", "\n", "      ", "if", "type", "(", "current_word", ")", "==", "int", ":", "\n", "        ", "current_word", "=", "[", "current_word", "]", "\n", "", "if", "type", "(", "current_word", ")", "==", "list", "or", "type", "(", "current_word", ")", "==", "np", ".", "ndarray", ":", "\n", "        ", "current_word", "=", "batchers", ".", "mark_as_batch", "(", "current_word", ")", "\n", "", "current_word_embed", "=", "self", ".", "trg_embedder", ".", "embed", "(", "current_word", ")", "\n", "next_state", "=", "self", ".", "decoder", ".", "add_input", "(", "current_state", ",", "current_word_embed", ")", "\n", "", "else", ":", "\n", "      ", "next_state", "=", "current_state", "\n", "", "next_state", ".", "context", "=", "self", ".", "attender", ".", "calc_context", "(", "next_state", ".", "rnn_state", ".", "output", "(", ")", ")", "\n", "next_logsoftmax", "=", "self", ".", "decoder", ".", "calc_log_probs", "(", "next_state", ")", "\n", "return", "TranslatorOutput", "(", "next_state", ",", "next_logsoftmax", ",", "self", ".", "attender", ".", "get_last_attention", "(", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.language_models.LanguageModel.__init__": [[27, 40], ["xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.persistence.bare", "super().__init__"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__"], ["@", "events", ".", "register_xnmt_handler", "\n", "@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "src_reader", ":", "input_readers", ".", "InputReader", ",", "\n", "src_embedder", ":", "embedders", ".", "Embedder", "=", "bare", "(", "embedders", ".", "SimpleWordEmbedder", ")", ",", "\n", "rnn", ":", "transducers", ".", "SeqTransducer", "=", "bare", "(", "recurrent", ".", "UniLSTMSeqTransducer", ")", ",", "\n", "transform", ":", "transforms", ".", "Transform", "=", "bare", "(", "transforms", ".", "NonLinear", ")", ",", "\n", "scorer", ":", "scorers", ".", "Scorer", "=", "bare", "(", "scorers", ".", "Softmax", ")", ")", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "src_reader", "=", "src_reader", ",", "trg_reader", "=", "src_reader", ")", "\n", "self", ".", "src_embedder", "=", "src_embedder", "\n", "self", ".", "rnn", "=", "rnn", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "scorer", "=", "scorer", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.language_models.LanguageModel.shared_params": [[41, 43], ["None"], "methods", ["None"], ["", "def", "shared_params", "(", "self", ")", ":", "\n", "    ", "return", "[", "{", "\".src_embedder.emb_dim\"", ",", "\".encoder.input_dim\"", "}", ",", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.language_models.LanguageModel.calc_nll": [[44, 67], ["xnmt.batchers.ListBatch", "xnmt.batchers.ListBatch", "xnmt.event_trigger.start_sent", "language_models.LanguageModel.src_embedder.embed_sent", "language_models.LanguageModel.rnn.transduce", "language_models.LanguageModel.as_tensor", "language_models.LanguageModel.dim", "dynet.reshape", "language_models.LanguageModel.transform.transform", "numpy.asarray().reshape", "language_models.LanguageModel.scorer.calc_loss", "dynet.reshape", "dynet.sum_elems", "xnmt.batchers.is_batched", "xnmt.batchers.ListBatch", "xnmt.batchers.mark_as_batch", "dynet.cmult", "numpy.asarray", "dynet.inputTensor", "xnmt.batchers.Mask", "xnmt.batchers.Mask"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.start_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.embed_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.DenseWordEmbedder.transform", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_encoder.DualEncoderSimilarity.calc_loss", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch"], ["", "def", "calc_nll", "(", "self", ",", "src", ",", "trg", ")", ":", "\n", "    ", "if", "not", "batchers", ".", "is_batched", "(", "src", ")", ":", "\n", "      ", "src", "=", "batchers", ".", "ListBatch", "(", "[", "src", "]", ")", "\n", "\n", "", "src_inputs", "=", "batchers", ".", "ListBatch", "(", "[", "s", "[", ":", "-", "1", "]", "for", "s", "in", "src", "]", ",", "mask", "=", "batchers", ".", "Mask", "(", "src", ".", "mask", ".", "np_arr", "[", ":", ",", ":", "-", "1", "]", ")", "if", "src", ".", "mask", "else", "None", ")", "\n", "src_targets", "=", "batchers", ".", "ListBatch", "(", "[", "s", "[", "1", ":", "]", "for", "s", "in", "src", "]", ",", "mask", "=", "batchers", ".", "Mask", "(", "src", ".", "mask", ".", "np_arr", "[", ":", ",", "1", ":", "]", ")", "if", "src", ".", "mask", "else", "None", ")", "\n", "\n", "event_trigger", ".", "start_sent", "(", "src", ")", "\n", "embeddings", "=", "self", ".", "src_embedder", ".", "embed_sent", "(", "src_inputs", ")", "\n", "encodings", "=", "self", ".", "rnn", ".", "transduce", "(", "embeddings", ")", "\n", "encodings_tensor", "=", "encodings", ".", "as_tensor", "(", ")", "\n", "(", "(", "hidden_dim", ",", "seq_len", ")", ",", "batch_size", ")", "=", "encodings", ".", "dim", "(", ")", "\n", "encoding_reshaped", "=", "dy", ".", "reshape", "(", "encodings_tensor", ",", "(", "hidden_dim", ",", ")", ",", "batch_size", "=", "batch_size", "*", "seq_len", ")", "\n", "outputs", "=", "self", ".", "transform", ".", "transform", "(", "encoding_reshaped", ")", "\n", "\n", "ref_action", "=", "np", ".", "asarray", "(", "[", "sent", ".", "words", "for", "sent", "in", "src_targets", "]", ")", ".", "reshape", "(", "(", "seq_len", "*", "batch_size", ",", ")", ")", "\n", "loss_expr_perstep", "=", "self", ".", "scorer", ".", "calc_loss", "(", "outputs", ",", "batchers", ".", "mark_as_batch", "(", "ref_action", ")", ")", "\n", "loss_expr_perstep", "=", "dy", ".", "reshape", "(", "loss_expr_perstep", ",", "(", "seq_len", ",", ")", ",", "batch_size", "=", "batch_size", ")", "\n", "if", "src_targets", ".", "mask", ":", "\n", "      ", "loss_expr_perstep", "=", "dy", ".", "cmult", "(", "loss_expr_perstep", ",", "dy", ".", "inputTensor", "(", "1.0", "-", "src_targets", ".", "mask", ".", "np_arr", ".", "T", ",", "batched", "=", "True", ")", ")", "\n", "", "loss", "=", "dy", ".", "sum_elems", "(", "loss_expr_perstep", ")", "\n", "\n", "return", "loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.classifiers.SequenceClassifier.__init__": [[30, 45], ["xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.persistence.bare", "super().__init__"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "src_reader", ":", "input_readers", ".", "InputReader", ",", "\n", "trg_reader", ":", "input_readers", ".", "InputReader", ",", "\n", "src_embedder", ":", "embedders", ".", "Embedder", "=", "bare", "(", "embedders", ".", "SimpleWordEmbedder", ")", ",", "\n", "encoder", ":", "transducers", ".", "SeqTransducer", "=", "bare", "(", "recurrent", ".", "BiLSTMSeqTransducer", ")", ",", "\n", "inference", "=", "bare", "(", "inferences", ".", "IndependentOutputInference", ")", ",", "\n", "transform", ":", "transforms", ".", "Transform", "=", "bare", "(", "transforms", ".", "NonLinear", ")", ",", "\n", "scorer", ":", "scorers", ".", "Scorer", "=", "bare", "(", "scorers", ".", "Softmax", ")", ")", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "src_reader", "=", "src_reader", ",", "trg_reader", "=", "trg_reader", ")", "\n", "self", ".", "src_embedder", "=", "src_embedder", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "scorer", "=", "scorer", "\n", "self", ".", "inference", "=", "inference", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.classifiers.SequenceClassifier.shared_params": [[46, 50], ["None"], "methods", ["None"], ["", "def", "shared_params", "(", "self", ")", ":", "\n", "    ", "return", "[", "{", "\".src_embedder.emb_dim\"", ",", "\".encoder.input_dim\"", "}", ",", "\n", "{", "\".encoder.hidden_dim\"", ",", "\".transform.input_dim\"", "}", ",", "\n", "{", "\".transform.output_dim\"", ",", "\".scorer.input_dim\"", "}", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.classifiers.SequenceClassifier._encode_src": [[51, 57], ["xnmt.event_trigger.start_sent", "classifiers.SequenceClassifier.src_embedder.embed_sent", "classifiers.SequenceClassifier.encoder.transduce", "[].main_expr", "classifiers.SequenceClassifier.transform.transform", "classifiers.SequenceClassifier.encoder.get_final_states"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.start_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.embed_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.base.FinalTransducerState.main_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.DenseWordEmbedder.transform", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.get_final_states"], ["", "def", "_encode_src", "(", "self", ",", "src", ")", ":", "\n", "    ", "event_trigger", ".", "start_sent", "(", "src", ")", "\n", "embeddings", "=", "self", ".", "src_embedder", ".", "embed_sent", "(", "src", ")", "\n", "self", ".", "encoder", ".", "transduce", "(", "embeddings", ")", "\n", "h", "=", "self", ".", "encoder", ".", "get_final_states", "(", ")", "[", "-", "1", "]", ".", "main_expr", "(", ")", "\n", "return", "self", ".", "transform", ".", "transform", "(", "h", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.classifiers.SequenceClassifier.calc_nll": [[58, 63], ["classifiers.SequenceClassifier._encode_src", "classifiers.SequenceClassifier.scorer.calc_loss", "xnmt.batchers.ListBatch", "xnmt.batchers.is_batched"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator._encode_src", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_encoder.DualEncoderSimilarity.calc_loss", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched"], ["", "def", "calc_nll", "(", "self", ",", "src", ",", "trg", ")", ":", "\n", "    ", "h", "=", "self", ".", "_encode_src", "(", "src", ")", "\n", "ids", "=", "trg", ".", "value", "if", "not", "batchers", ".", "is_batched", "(", "trg", ")", "else", "batchers", ".", "ListBatch", "(", "[", "trg_i", ".", "value", "for", "trg_i", "in", "trg", "]", ")", "\n", "loss_expr", "=", "self", ".", "scorer", ".", "calc_loss", "(", "h", ",", "ids", ")", "\n", "return", "loss_expr", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.classifiers.SequenceClassifier.generate": [[64, 82], ["classifiers.SequenceClassifier._encode_src", "scores.npvalue", "range", "xnmt.batchers.is_batched", "xnmt.batchers.mark_as_batch", "classifiers.SequenceClassifier.scorer.calc_log_probs", "classifiers.SequenceClassifier.scorer.calc_scores", "numpy.argmax", "xnmt.batchers.mark_as_batch.batch_size", "outputs.append", "xnmt.batchers.mark_as_batch", "xnmt.sent.ScalarSentence"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator._encode_src", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.translators.EnsembleDecoder.calc_log_probs", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.scorers.Softmax.calc_scores", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.batch_size", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch"], ["", "def", "generate", "(", "self", ",", "src", ",", "forced_trg_ids", "=", "None", ",", "normalize_scores", "=", "False", ")", ":", "\n", "    ", "if", "not", "batchers", ".", "is_batched", "(", "src", ")", ":", "\n", "      ", "src", "=", "batchers", ".", "mark_as_batch", "(", "[", "src", "]", ")", "\n", "if", "forced_trg_ids", ":", "\n", "        ", "forced_trg_ids", "=", "batchers", ".", "mark_as_batch", "(", "[", "forced_trg_ids", "]", ")", "\n", "", "", "h", "=", "self", ".", "_encode_src", "(", "src", ")", "\n", "scores", "=", "self", ".", "scorer", ".", "calc_log_probs", "(", "h", ")", "if", "normalize_scores", "else", "self", ".", "scorer", ".", "calc_scores", "(", "h", ")", "\n", "np_scores", "=", "scores", ".", "npvalue", "(", ")", "\n", "if", "forced_trg_ids", ":", "\n", "      ", "output_action", "=", "forced_trg_ids", "\n", "", "else", ":", "\n", "      ", "output_action", "=", "np", ".", "argmax", "(", "np_scores", ",", "axis", "=", "0", ")", "\n", "", "outputs", "=", "[", "]", "\n", "for", "batch_i", "in", "range", "(", "src", ".", "batch_size", "(", ")", ")", ":", "\n", "      ", "score", "=", "np_scores", "[", ":", ",", "batch_i", "]", "[", "output_action", "[", "batch_i", "]", "]", "\n", "outputs", ".", "append", "(", "sent", ".", "ScalarSentence", "(", "value", "=", "output_action", "[", "batch_i", "]", ",", "\n", "score", "=", "score", ")", ")", "\n", "", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.classifiers.SequenceClassifier.get_nobp_state": [[83, 86], ["state.rnn_state.output"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMState.output"], ["", "def", "get_nobp_state", "(", "self", ",", "state", ")", ":", "\n", "    ", "output_state", "=", "state", ".", "rnn_state", ".", "output", "(", ")", "\n", "return", "output_state", "\n", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.retrievers.StandardRetrievalDatabase.__init__": [[20, 28], ["list", "reader.read_sents"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.read_sents"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "reader", ",", "database_file", ",", "dev_id_file", "=", "None", ",", "test_id_file", "=", "None", ")", ":", "\n", "    ", "self", ".", "reader", "=", "reader", "\n", "self", ".", "database_file", "=", "database_file", "\n", "self", ".", "data", "=", "list", "(", "reader", ".", "read_sents", "(", "database_file", ")", ")", "\n", "self", ".", "indexed", "=", "[", "]", "\n", "self", ".", "dev_id_file", "=", "dev_id_file", "\n", "self", ".", "test_id_file", "=", "test_id_file", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.retrievers.StandardRetrievalDatabase.__getitem__": [[29, 32], ["xnmt.batchers.pad", "xnmt.batchers.mark_as_batch"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.conv_encoder.StridedConvSeqTransducer.pad", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch"], ["", "def", "__getitem__", "(", "self", ",", "indices", ")", ":", "\n", "    ", "trg_examples", ",", "trg_masks", "=", "batchers", ".", "pad", "(", "[", "self", ".", "data", "[", "index", "]", "for", "index", "in", "indices", "]", ")", "\n", "return", "batchers", ".", "mark_as_batch", "(", "trg_examples", ")", ",", "trg_masks", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.retrievers.Retriever.calc_loss": [[39, 49], ["NotImplementedError"], "methods", ["None"], ["def", "calc_loss", "(", "self", ",", "src", ",", "db_idx", ")", ":", "\n", "    ", "\"\"\"Calculate loss based on a database index.\n\n    Args:\n      src: The source input.\n      db_idx: The correct index in the database to be retrieved.\n    Returns:\n      An expression representing the loss.\n    \"\"\"", "\n", "raise", "NotImplementedError", "(", "'calc_loss must be implemented for Retriever subclasses'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.retrievers.Retriever.index_database": [[50, 57], ["None"], "methods", ["None"], ["", "def", "index_database", "(", "self", ",", "indices", "=", "None", ")", ":", "\n", "    ", "\"\"\"A function that can be called before actually performing retrieval.\n\n    This will perform any necessary pre-processing to make retrieval more efficient.\n    If the model is updated, assume that the indexing result is stale and no longer applicable.\n    \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.retrievers.Retriever.generate": [[58, 68], ["NotImplementedError"], "methods", ["None"], ["", "def", "generate", "(", "self", ",", "src", ")", ":", "\n", "    ", "\"\"\"Perform retrieval, trying to get the sentence that most closely matches in the database.\n\n    Args:\n      src: The source.\n      i: Id of the input\n    Returns:\n      The ID of the example that most closely matches in the database.\n    \"\"\"", "\n", "raise", "NotImplementedError", "(", "'generate must be implemented for Retriever subclasses'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.retrievers.Retriever.initialize_generator": [[69, 75], ["retrievers.Retriever.index_database", "open", "sorted", "int"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.retrievers.DotProductRetriever.index_database"], ["", "def", "initialize_generator", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "    ", "candidates", "=", "None", "\n", "if", "kwargs", "[", "\"candidate_id_file\"", "]", "is", "not", "None", ":", "\n", "      ", "with", "open", "(", "kwargs", "[", "\"candidate_id_file\"", "]", ",", "\"r\"", ")", "as", "f", ":", "\n", "        ", "candidates", "=", "sorted", "(", "{", "int", "(", "x", ")", ":", "1", "for", "x", "in", "f", "}", ".", "keys", "(", ")", ")", "\n", "", "", "self", ".", "index_database", "(", "candidates", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.retrievers.DotProductRetriever.__init__": [[83, 100], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "src_embedder", ",", "src_encoder", ",", "trg_embedder", ",", "trg_encoder", ",", "database", ",", "loss_direction", "=", "\"forward\"", ")", ":", "\n", "    ", "\"\"\"Constructor.\n\n    Args:\n      src_embedder: A word embedder for the source language\n      src_encoder: An encoder for the source language\n      trg_embedder: A word embedder for the target language\n      trg_encoder: An encoder for the target language\n      database: A database of things to retrieve\n    \"\"\"", "\n", "self", ".", "src_embedder", "=", "src_embedder", "\n", "self", ".", "src_encoder", "=", "src_encoder", "\n", "self", ".", "trg_embedder", "=", "trg_embedder", "\n", "self", ".", "trg_encoder", "=", "trg_encoder", "\n", "self", ".", "database", "=", "database", "\n", "self", ".", "loss_direction", "=", "loss_direction", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.retrievers.DotProductRetriever.exprseq_pooling": [[101, 111], ["xnmt.expression_seqs.ExpressionSequence", "dynet.emax", "xnmt.expression_seqs.ExpressionSequence.mask.add_to_tensor_expr", "len", "dynet.max_dim", "xnmt.expression_seqs.ExpressionSequence.as_tensor", "xnmt.expression_seqs.ExpressionSequence.expr_tensor.dim"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.add_to_tensor_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["", "def", "exprseq_pooling", "(", "self", ",", "exprseq", ")", ":", "\n", "# Reduce to vector", "\n", "    ", "exprseq", "=", "ExpressionSequence", "(", "expr_tensor", "=", "exprseq", ".", "mask", ".", "add_to_tensor_expr", "(", "exprseq", ".", "as_tensor", "(", ")", ",", "-", "1e10", ")", ",", "mask", "=", "exprseq", ".", "mask", ")", "\n", "if", "exprseq", ".", "expr_tensor", "is", "not", "None", ":", "\n", "      ", "if", "len", "(", "exprseq", ".", "expr_tensor", ".", "dim", "(", ")", "[", "0", "]", ")", ">", "1", ":", "\n", "        ", "return", "dy", ".", "max_dim", "(", "exprseq", ".", "expr_tensor", ",", "d", "=", "1", ")", "\n", "", "else", ":", "\n", "        ", "return", "exprseq", ".", "expr_tensor", "\n", "", "", "else", ":", "\n", "      ", "return", "dy", ".", "emax", "(", "exprseq", ".", "expr_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.retrievers.DotProductRetriever.calc_loss": [[112, 145], ["retrievers.DotProductRetriever.src_embedder.embed_sent", "retrievers.DotProductRetriever.src_encoder.set_input", "retrievers.DotProductRetriever.exprseq_pooling", "retrievers.DotProductRetriever.encode_trg_example", "retrievers.DotProductRetriever.dim", "dynet.reshape", "list", "retrievers.DotProductRetriever.src_encoder.transduce", "dynet.transpose", "range", "dynet.transpose", "dynet.sum_batches", "len", "dynet.hinge_batch", "dynet.reshape", "dynet.sum_elems", "RuntimeError", "len", "len", "dynet.hinge_dim", "dynet.hinge_dim"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.embed_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.retrievers.DotProductRetriever.exprseq_pooling", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.retrievers.DotProductRetriever.encode_trg_example", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce"], ["", "", "def", "calc_loss", "(", "self", ",", "src", ",", "db_idx", ",", "src_mask", "=", "None", ",", "trg_mask", "=", "None", ")", ":", "\n", "    ", "src_embeddings", "=", "self", ".", "src_embedder", ".", "embed_sent", "(", "src", ",", "mask", "=", "src_mask", ")", "\n", "self", ".", "src_encoder", ".", "set_input", "(", "src", ")", "\n", "src_encodings", "=", "self", ".", "exprseq_pooling", "(", "self", ".", "src_encoder", ".", "transduce", "(", "src_embeddings", ")", ")", "\n", "trg_batch", ",", "trg_mask", "=", "self", ".", "database", "[", "db_idx", "]", "\n", "# print(\"trg_mask=\\n\",trg_mask)", "\n", "trg_encodings", "=", "self", ".", "encode_trg_example", "(", "trg_batch", ",", "mask", "=", "trg_mask", ")", "\n", "dim", "=", "trg_encodings", ".", "dim", "(", ")", "\n", "trg_reshaped", "=", "dy", ".", "reshape", "(", "trg_encodings", ",", "(", "dim", "[", "0", "]", "[", "0", "]", ",", "dim", "[", "1", "]", ")", ")", "\n", "# ### DEBUG", "\n", "# trg_npv = trg_reshaped.npvalue()", "\n", "# for i in range(dim[1]):", "\n", "#   print(\"--- trg_reshaped {}: {}\".format(i,list(trg_npv[:,i])))", "\n", "# ### DEBUG", "\n", "prod", "=", "dy", ".", "transpose", "(", "src_encodings", ")", "*", "trg_reshaped", "\n", "# ### DEBUG", "\n", "# prod_npv = prod.npvalue()", "\n", "# for i in range(dim[1]):", "\n", "#   print(\"--- prod {}: {}\".format(i,list(prod_npv[0].transpose()[i])))", "\n", "# ### DEBUG", "\n", "id_range", "=", "list", "(", "range", "(", "len", "(", "db_idx", ")", ")", ")", "\n", "# This is ugly:", "\n", "if", "self", ".", "loss_direction", "==", "\"forward\"", ":", "\n", "      ", "prod", "=", "dy", ".", "transpose", "(", "prod", ")", "\n", "loss", "=", "dy", ".", "sum_batches", "(", "dy", ".", "hinge_batch", "(", "prod", ",", "id_range", ")", ")", "\n", "", "elif", "self", ".", "loss_direction", "==", "\"bidirectional\"", ":", "\n", "      ", "prod", "=", "dy", ".", "reshape", "(", "prod", ",", "(", "len", "(", "db_idx", ")", ",", "len", "(", "db_idx", ")", ")", ")", "\n", "loss", "=", "dy", ".", "sum_elems", "(", "\n", "dy", ".", "hinge_dim", "(", "prod", ",", "id_range", ",", "d", "=", "0", ")", "+", "dy", ".", "hinge_dim", "(", "prod", ",", "id_range", ",", "d", "=", "1", ")", ")", "\n", "", "else", ":", "\n", "      ", "raise", "RuntimeError", "(", "\"Illegal loss direction {}\"", ".", "format", "(", "self", ".", "loss_direction", ")", ")", "\n", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.retrievers.DotProductRetriever.index_database": [[146, 164], ["numpy.stack", "range", "dynet.renew_cg", "retrievers.DotProductRetriever.database.indexed.append", "len", "retrievers.DotProductRetriever.encode_trg_example().npvalue", "int", "retrievers.DotProductRetriever.encode_trg_example"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.retrievers.DotProductRetriever.encode_trg_example"], ["", "def", "index_database", "(", "self", ",", "indices", "=", "None", ")", ":", "\n", "# Create the inverted index if necessary", "\n", "    ", "if", "indices", "is", "None", ":", "\n", "      ", "indices", "=", "range", "(", "len", "(", "self", ".", "database", ".", "data", ")", ")", "\n", "self", ".", "database", ".", "inverted_index", "=", "None", "\n", "", "else", ":", "\n", "      ", "self", ".", "database", ".", "inverted_index", "=", "indices", "\n", "# Actually index everything", "\n", "", "self", ".", "database", ".", "indexed", "=", "[", "]", "\n", "for", "index", "in", "indices", ":", "\n", "      ", "item", "=", "self", ".", "database", ".", "data", "[", "int", "(", "index", ")", "]", "\n", "dy", ".", "renew_cg", "(", "immediate_compute", "=", "settings", ".", "IMMEDIATE_COMPUTE", ",", "check_validity", "=", "settings", ".", "CHECK_VALIDITY", ")", "\n", "self", ".", "database", ".", "indexed", ".", "append", "(", "self", ".", "encode_trg_example", "(", "item", ")", ".", "npvalue", "(", ")", ")", "\n", "# ### DEBUG", "\n", "# for i, x in enumerate(self.database.indexed):", "\n", "#   print(\"--- database {}: {}\".format(i,list(x)))", "\n", "# ### DEBUG", "\n", "", "self", ".", "database", ".", "indexed", "=", "np", ".", "stack", "(", "self", ".", "database", ".", "indexed", ",", "axis", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.retrievers.DotProductRetriever.encode_trg_example": [[165, 170], ["retrievers.DotProductRetriever.trg_embedder.embed_sent", "retrievers.DotProductRetriever.trg_encoder.set_input", "retrievers.DotProductRetriever.exprseq_pooling", "retrievers.DotProductRetriever.trg_encoder.transduce"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.embed_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.retrievers.DotProductRetriever.exprseq_pooling", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce"], ["", "def", "encode_trg_example", "(", "self", ",", "example", ",", "mask", "=", "None", ")", ":", "\n", "    ", "embeddings", "=", "self", ".", "trg_embedder", ".", "embed_sent", "(", "example", ",", "mask", "=", "mask", ")", "\n", "self", ".", "trg_encoder", ".", "set_input", "(", "example", ")", "\n", "encodings", "=", "self", ".", "exprseq_pooling", "(", "self", ".", "trg_encoder", ".", "transduce", "(", "embeddings", ")", ")", "\n", "return", "encodings", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.retrievers.DotProductRetriever.generate": [[171, 190], ["retrievers.DotProductRetriever.src_embedder.embed_sent", "retrievers.DotProductRetriever.src_encoder.set_input", "dynet.transpose().npvalue", "numpy.dot", "NotImplementedError", "dynet.transpose", "numpy.argsort", "list", "retrievers.DotProductRetriever.exprseq_pooling", "zip", "RuntimeError", "retrievers.DotProductRetriever.src_encoder.transduce"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.embed_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.retrievers.DotProductRetriever.exprseq_pooling", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce"], ["", "def", "generate", "(", "self", ",", "src", ",", "return_type", "=", "\"idxscore\"", ",", "nbest", "=", "10", ",", "forced_trg_ids", "=", "None", ")", ":", "\n", "    ", "if", "forced_trg_ids", "is", "not", "None", ":", "raise", "NotImplementedError", "(", ")", "\n", "src_embedding", "=", "self", ".", "src_embedder", ".", "embed_sent", "(", "src", ")", "\n", "self", ".", "src_encoder", ".", "set_input", "(", "src", ")", "\n", "src_encoding", "=", "dy", ".", "transpose", "(", "self", ".", "exprseq_pooling", "(", "self", ".", "src_encoder", ".", "transduce", "(", "src_embedding", ")", ")", ")", ".", "npvalue", "(", ")", "\n", "scores", "=", "np", ".", "dot", "(", "src_encoding", ",", "self", ".", "database", ".", "indexed", ")", "\n", "# print(\"--- scores: {}\".format(list(scores[0])))", "\n", "kbest", "=", "np", ".", "argsort", "(", "scores", ",", "axis", "=", "1", ")", "[", "0", ",", "-", "nbest", ":", "]", "[", ":", ":", "-", "1", "]", "\n", "# print(\"--- kbest: {}\".format(kbest))", "\n", "ids", "=", "kbest", "if", "self", ".", "database", ".", "inverted_index", "is", "None", "else", "[", "self", ".", "database", ".", "inverted_index", "[", "x", "]", "for", "x", "in", "kbest", "]", "\n", "\n", "if", "return_type", "==", "\"idxscore\"", ":", "\n", "      ", "return", "[", "(", "i", ",", "scores", "[", "0", ",", "x", "]", ")", "for", "i", ",", "x", "in", "zip", "(", "ids", ",", "kbest", ")", "]", "\n", "", "elif", "return_type", "==", "\"idx\"", ":", "\n", "      ", "return", "list", "(", "ids", ")", "\n", "", "elif", "return_type", "==", "\"score\"", ":", "\n", "      ", "return", "[", "scores", "[", "0", ",", "x", "]", "for", "x", "in", "kbest", "]", "\n", "", "else", ":", "\n", "      ", "raise", "RuntimeError", "(", "\"Illegal return_type to retrieve: {}\"", ".", "format", "(", "return_type", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.sequence_labelers.SeqLabeler.__init__": [[31, 50], ["xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.persistence.bare", "super().__init__"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__"], ["@", "events", ".", "register_xnmt_handler", "\n", "@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "src_reader", ":", "input_readers", ".", "InputReader", ",", "\n", "trg_reader", ":", "input_readers", ".", "InputReader", ",", "\n", "src_embedder", ":", "embedders", ".", "Embedder", "=", "bare", "(", "embedders", ".", "SimpleWordEmbedder", ")", ",", "\n", "encoder", ":", "transducers", ".", "SeqTransducer", "=", "bare", "(", "recurrent", ".", "BiLSTMSeqTransducer", ")", ",", "\n", "transform", ":", "transforms", ".", "Transform", "=", "bare", "(", "transforms", ".", "NonLinear", ")", ",", "\n", "scorer", ":", "scorers", ".", "Scorer", "=", "bare", "(", "scorers", ".", "Softmax", ")", ",", "\n", "inference", ":", "inferences", ".", "Inference", "=", "bare", "(", "inferences", ".", "IndependentOutputInference", ")", ",", "\n", "auto_cut_pad", ":", "bool", "=", "False", ")", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "src_reader", "=", "src_reader", ",", "trg_reader", "=", "trg_reader", ")", "\n", "self", ".", "src_embedder", "=", "src_embedder", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "attender", "=", "attenders", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "scorer", "=", "scorer", "\n", "self", ".", "inference", "=", "inference", "\n", "self", ".", "auto_cut_pad", "=", "auto_cut_pad", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.sequence_labelers.SeqLabeler.shared_params": [[51, 53], ["None"], "methods", ["None"], ["", "def", "shared_params", "(", "self", ")", ":", "\n", "    ", "return", "[", "{", "\".src_embedder.emb_dim\"", ",", "\".encoder.input_dim\"", "}", ",", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.sequence_labelers.SeqLabeler._encode_src": [[54, 63], ["xnmt.event_trigger.start_sent", "sequence_labelers.SeqLabeler.src_embedder.embed_sent", "sequence_labelers.SeqLabeler.encoder.transduce", "sequence_labelers.SeqLabeler.as_tensor", "sequence_labelers.SeqLabeler.dim", "dynet.reshape", "sequence_labelers.SeqLabeler.transform.transform"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.start_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.embed_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.DenseWordEmbedder.transform"], ["", "def", "_encode_src", "(", "self", ",", "src", ")", ":", "\n", "    ", "event_trigger", ".", "start_sent", "(", "src", ")", "\n", "embeddings", "=", "self", ".", "src_embedder", ".", "embed_sent", "(", "src", ")", "\n", "encodings", "=", "self", ".", "encoder", ".", "transduce", "(", "embeddings", ")", "\n", "encodings_tensor", "=", "encodings", ".", "as_tensor", "(", ")", "\n", "(", "(", "hidden_dim", ",", "seq_len", ")", ",", "batch_size", ")", "=", "encodings", ".", "dim", "(", ")", "\n", "encoding_reshaped", "=", "dy", ".", "reshape", "(", "encodings_tensor", ",", "(", "hidden_dim", ",", ")", ",", "batch_size", "=", "batch_size", "*", "seq_len", ")", "\n", "outputs", "=", "self", ".", "transform", ".", "transform", "(", "encoding_reshaped", ")", "\n", "return", "batch_size", ",", "encodings", ",", "outputs", ",", "seq_len", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.sequence_labelers.SeqLabeler.calc_nll": [[64, 83], ["sequence_labelers.SeqLabeler._encode_src", "numpy.asarray().reshape", "sequence_labelers.SeqLabeler.scorer.calc_loss", "dynet.reshape", "dynet.sum_elems", "xnmt.batchers.is_batched", "xnmt.batchers.is_batched", "sequence_labelers.SeqLabeler.sent_len", "xnmt.batchers.mark_as_batch", "dynet.cmult", "sequence_labelers.SeqLabeler._cut_or_pad_targets", "ValueError", "numpy.asarray", "dynet.inputTensor", "len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator._encode_src", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_encoder.DualEncoderSimilarity.calc_loss", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.sequence_labelers.SeqLabeler._cut_or_pad_targets"], ["", "def", "calc_nll", "(", "self", ",", "src", ",", "trg", ")", ":", "\n", "    ", "assert", "batchers", ".", "is_batched", "(", "src", ")", "and", "batchers", ".", "is_batched", "(", "trg", ")", "\n", "batch_size", ",", "encodings", ",", "outputs", ",", "seq_len", "=", "self", ".", "_encode_src", "(", "src", ")", "\n", "\n", "if", "trg", ".", "sent_len", "(", ")", "!=", "seq_len", ":", "\n", "      ", "if", "self", ".", "auto_cut_pad", ":", "\n", "        ", "trg", "=", "self", ".", "_cut_or_pad_targets", "(", "seq_len", ",", "trg", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "f\"src/trg length do not match: {seq_len} != {len(trg[0])}\"", ")", "\n", "\n", "", "", "ref_action", "=", "np", ".", "asarray", "(", "[", "trg_sent", ".", "words", "for", "trg_sent", "in", "trg", "]", ")", ".", "reshape", "(", "(", "seq_len", "*", "batch_size", ",", ")", ")", "\n", "loss_expr_perstep", "=", "self", ".", "scorer", ".", "calc_loss", "(", "outputs", ",", "batchers", ".", "mark_as_batch", "(", "ref_action", ")", ")", "\n", "# loss_expr_perstep = dy.pickneglogsoftmax_batch(outputs, ref_action)", "\n", "loss_expr_perstep", "=", "dy", ".", "reshape", "(", "loss_expr_perstep", ",", "(", "seq_len", ",", ")", ",", "batch_size", "=", "batch_size", ")", "\n", "if", "trg", ".", "mask", ":", "\n", "      ", "loss_expr_perstep", "=", "dy", ".", "cmult", "(", "loss_expr_perstep", ",", "dy", ".", "inputTensor", "(", "1.0", "-", "trg", ".", "mask", ".", "np_arr", ".", "T", ",", "batched", "=", "True", ")", ")", "\n", "", "loss_expr", "=", "dy", ".", "sum_elems", "(", "loss_expr_perstep", ")", "\n", "\n", "return", "loss_expr", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.sequence_labelers.SeqLabeler._cut_or_pad_targets": [[84, 97], ["len", "xnmt.batchers.mark_as_batch", "xnmt.batchers.mark_as_batch", "len", "xnmt.batchers.Mask", "len", "numpy.pad", "trg_sent.get_truncated_sent", "trg_sent.create_padded_sent"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.conv_encoder.StridedConvSeqTransducer.pad", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.create_padded_sent"], ["", "def", "_cut_or_pad_targets", "(", "self", ",", "seq_len", ",", "trg", ")", ":", "\n", "    ", "old_mask", "=", "trg", ".", "mask", "\n", "if", "len", "(", "trg", "[", "0", "]", ")", ">", "seq_len", ":", "\n", "      ", "trunc_len", "=", "len", "(", "trg", "[", "0", "]", ")", "-", "seq_len", "\n", "trg", "=", "batchers", ".", "mark_as_batch", "(", "[", "trg_sent", ".", "get_truncated_sent", "(", "trunc_len", "=", "trunc_len", ")", "for", "trg_sent", "in", "trg", "]", ")", "\n", "if", "old_mask", ":", "\n", "        ", "trg", ".", "mask", "=", "batchers", ".", "Mask", "(", "np_arr", "=", "old_mask", ".", "np_arr", "[", ":", ",", ":", "-", "trunc_len", "]", ")", "\n", "", "", "else", ":", "\n", "      ", "pad_len", "=", "seq_len", "-", "len", "(", "trg", "[", "0", "]", ")", "\n", "trg", "=", "batchers", ".", "mark_as_batch", "(", "[", "trg_sent", ".", "create_padded_sent", "(", "pad_len", "=", "pad_len", ")", "for", "trg_sent", "in", "trg", "]", ")", "\n", "if", "old_mask", ":", "\n", "        ", "trg", ".", "mask", "=", "np", ".", "pad", "(", "old_mask", ".", "np_arr", ",", "pad_width", "=", "(", "(", "0", ",", "0", ")", ",", "(", "0", ",", "pad_len", ")", ")", ",", "mode", "=", "\"constant\"", ",", "constant_values", "=", "1", ")", "\n", "", "", "return", "trg", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.sequence_labelers.SeqLabeler.generate": [[98, 121], ["sequence_labelers.SeqLabeler._encode_src", "score_expr.npvalue", "numpy.sum", "xnmt.batchers.is_batched", "xnmt.batchers.mark_as_batch", "xnmt.batchers.mark_as_batch.batch_size", "sequence_labelers.SeqLabeler.scorer.calc_log_softmax", "sequence_labelers.SeqLabeler.scorer.calc_scores", "xnmt.sent.SimpleSentence", "xnmt.batchers.mark_as_batch", "numpy.argmax", "range", "range", "hasattr"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator._encode_src", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.batch_size", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.scorers.Softmax.calc_scores", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch"], ["", "def", "generate", "(", "self", ",", "src", ",", "forced_trg_ids", "=", "None", ",", "normalize_scores", "=", "False", ")", ":", "\n", "    ", "if", "not", "batchers", ".", "is_batched", "(", "src", ")", ":", "\n", "      ", "src", "=", "batchers", ".", "mark_as_batch", "(", "[", "src", "]", ")", "\n", "if", "forced_trg_ids", ":", "\n", "        ", "forced_trg_ids", "=", "batchers", ".", "mark_as_batch", "(", "[", "forced_trg_ids", "]", ")", "\n", "", "", "assert", "src", ".", "batch_size", "(", ")", "==", "1", ",", "\"batch size > 1 not properly tested\"", "\n", "\n", "batch_size", ",", "encodings", ",", "outputs", ",", "seq_len", "=", "self", ".", "_encode_src", "(", "src", ")", "\n", "score_expr", "=", "self", ".", "scorer", ".", "calc_log_softmax", "(", "outputs", ")", "if", "normalize_scores", "else", "self", ".", "scorer", ".", "calc_scores", "(", "outputs", ")", "\n", "scores", "=", "score_expr", ".", "npvalue", "(", ")", "# vocab_size x seq_len", "\n", "\n", "if", "forced_trg_ids", ":", "\n", "      ", "output_actions", "=", "forced_trg_ids", "\n", "", "else", ":", "\n", "      ", "output_actions", "=", "[", "np", ".", "argmax", "(", "scores", "[", ":", ",", "j", "]", ")", "for", "j", "in", "range", "(", "seq_len", ")", "]", "\n", "", "score", "=", "np", ".", "sum", "(", "[", "scores", "[", "output_actions", "[", "j", "]", ",", "j", "]", "for", "j", "in", "range", "(", "seq_len", ")", "]", ")", "\n", "\n", "outputs", "=", "[", "sent", ".", "SimpleSentence", "(", "words", "=", "output_actions", ",", "idx", "=", "src", "[", "0", "]", ".", "idx", ",", "\n", "vocab", "=", "self", ".", "trg_vocab", "if", "hasattr", "(", "self", ",", "\"trg_vocab\"", ")", "else", "None", ",", "\n", "output_procs", "=", "self", ".", "trg_reader", ".", "output_procs", ",", "\n", "score", "=", "score", ")", "]", "\n", "\n", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.models.sequence_labelers.SeqLabeler.set_trg_vocab": [[122, 130], ["None"], "methods", ["None"], ["", "def", "set_trg_vocab", "(", "self", ",", "trg_vocab", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Set target vocab for generating outputs. If not specified, word IDs are generated instead.\n\n    Args:\n      trg_vocab (vocabs.Vocab): target vocab, or None to generate word IDs\n    \"\"\"", "\n", "self", ".", "trg_vocab", "=", "trg_vocab", "\n", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.TrainingTask.__init__": [[24, 26], ["None"], "methods", ["None"], ["", "", "class", "LossEvalTask", "(", "EvalTask", ",", "Serializable", ")", ":", "\n", "  "]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.TrainingTask.should_stop_training": [[27, 33], ["NotImplementedError"], "methods", ["None"], []], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.TrainingTask.training_step": [[34, 44], ["NotImplementedError"], "methods", ["None"], ["\n", "yaml_tag", "=", "'!LossEvalTask'", "\n", "\n", "@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "src_file", ":", "Union", "[", "str", ",", "Sequence", "[", "str", "]", "]", ",", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.TrainingTask.next_minibatch": [[45, 52], ["None"], "methods", ["None"], ["ref_file", ":", "Optional", "[", "str", "]", "=", "None", ",", "\n", "model", ":", "'model_base.GeneratorModel'", "=", "Ref", "(", "\"model\"", ")", ",", "\n", "batcher", ":", "Batcher", "=", "Ref", "(", "\"train.batcher\"", ",", "default", "=", "bare", "(", "xnmt", ".", "batchers", ".", "SrcBatcher", ",", "batch_size", "=", "32", ")", ")", ",", "\n", "loss_calculator", ":", "LossCalculator", "=", "bare", "(", "MLELoss", ")", ",", "\n", "max_src_len", ":", "Optional", "[", "int", "]", "=", "None", ",", "\n", "max_trg_len", ":", "Optional", "[", "int", "]", "=", "None", ",", "\n", "max_num_sents", ":", "Optional", "[", "int", "]", "=", "None", ",", "\n", "loss_comb_method", ":", "str", "=", "Ref", "(", "\"exp_global.loss_comb_method\"", ",", "default", "=", "\"sum\"", ")", ",", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.TrainingTask.checkpoint_needed": [[53, 55], ["NotImplementedError"], "methods", ["None"], ["desc", ":", "Any", "=", "None", ")", ":", "\n", "    ", "self", ".", "model", "=", "model", "\n", "self", ".", "loss_calculator", "=", "loss_calculator", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.TrainingTask.checkpoint": [[56, 67], ["NotImplementedError"], "methods", ["None"], ["self", ".", "src_file", "=", "src_file", "\n", "self", ".", "ref_file", "=", "ref_file", "\n", "self", ".", "batcher", "=", "batcher", "\n", "self", ".", "src_data", "=", "None", "\n", "self", ".", "max_src_len", "=", "max_src_len", "\n", "self", ".", "max_trg_len", "=", "max_trg_len", "\n", "self", ".", "max_num_sents", "=", "max_num_sents", "\n", "self", ".", "loss_comb_method", "=", "loss_comb_method", "\n", "self", ".", "desc", "=", "desc", "\n", "\n", "", "def", "eval", "(", "self", ")", "->", "'EvalScore'", ":", "\n", "    "]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.TrainingTask.cur_num_minibatches": [[68, 73], ["NotImplementedError"], "methods", ["None"], ["\n", "event_trigger", ".", "set_train", "(", "False", ")", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.TrainingTask.cur_num_sentences": [[74, 79], ["NotImplementedError"], "methods", ["None"], ["if", "self", ".", "src_data", "is", "None", ":", "\n", "      ", "self", ".", "src_data", ",", "self", ".", "ref_data", ",", "self", ".", "src_batches", ",", "self", ".", "ref_batches", "=", "input_readers", ".", "read_parallel_corpus", "(", "src_reader", "=", "self", ".", "model", ".", "src_reader", ",", "\n", "trg_reader", "=", "self", ".", "model", ".", "trg_reader", ",", "\n", "src_file", "=", "self", ".", "src_file", ",", "\n", "trg_file", "=", "self", ".", "ref_file", ",", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.SimpleTrainingTask.__init__": [[113, 166], ["xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.eval.tasks.TrainingState", "xnmt.loss_trackers.DevLossTracker", "RuntimeError"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare"], ["\n", "\n", "yaml_tag", "=", "'!AccuracyEvalTask'", "\n", "\n", "@", "serializable_init", "\n", "@", "events", ".", "register_xnmt_handler", "\n", "def", "__init__", "(", "self", ",", "src_file", ":", "Union", "[", "str", ",", "Sequence", "[", "str", "]", "]", ",", "ref_file", ":", "Union", "[", "str", ",", "Sequence", "[", "str", "]", "]", ",", "hyp_file", ":", "str", ",", "\n", "model", ":", "'model_base.GeneratorModel'", "=", "Ref", "(", "\"model\"", ")", ",", "eval_metrics", ":", "Union", "[", "str", ",", "Evaluator", ",", "Sequence", "[", "Evaluator", "]", "]", "=", "\"bleu\"", ",", "\n", "inference", ":", "Optional", "[", "'inferences.Inference'", "]", "=", "None", ",", "desc", ":", "Any", "=", "None", ")", ":", "\n", "    ", "self", ".", "model", "=", "model", "\n", "if", "isinstance", "(", "eval_metrics", ",", "str", ")", ":", "\n", "      ", "eval_metrics", "=", "[", "xnmt", ".", "xnmt_evaluate", ".", "eval_shortcuts", "[", "shortcut", "]", "(", ")", "for", "shortcut", "in", "eval_metrics", ".", "split", "(", "\",\"", ")", "]", "\n", "", "elif", "not", "isinstance", "(", "eval_metrics", ",", "Sequence", ")", ":", "eval_metrics", "=", "[", "eval_metrics", "]", "\n", "self", ".", "eval_metrics", "=", "eval_metrics", "\n", "self", ".", "src_file", "=", "src_file", "\n", "self", ".", "ref_file", "=", "ref_file", "\n", "self", ".", "hyp_file", "=", "hyp_file", "\n", "self", ".", "inference", "=", "inference", "or", "self", ".", "model", ".", "inference", "\n", "self", ".", "desc", "=", "desc", "\n", "\n", "", "def", "eval", "(", "self", ")", ":", "\n", "    ", "event_trigger", ".", "set_train", "(", "False", ")", "\n", "self", ".", "report_corpus_info", "(", "{", "\"ref_file\"", ":", "self", ".", "ref_file", "}", ")", "\n", "self", ".", "inference", ".", "perform_inference", "(", "generator", "=", "self", ".", "model", ",", "\n", "src_file", "=", "self", ".", "src_file", ",", "\n", "trg_file", "=", "self", ".", "hyp_file", ")", "\n", "# Evaluate", "\n", "eval_scores", "=", "xnmt", ".", "xnmt_evaluate", ".", "xnmt_evaluate", "(", "hyp_file", "=", "self", ".", "hyp_file", ",", "ref_file", "=", "self", ".", "ref_file", ",", "desc", "=", "self", ".", "desc", ",", "\n", "evaluators", "=", "self", ".", "eval_metrics", ")", "\n", "\n", "return", "eval_scores", "\n", "\n", "", "", "class", "DecodingEvalTask", "(", "EvalTask", ",", "Serializable", ")", ":", "\n", "  ", "\"\"\"\n  A task that does performs decoding without comparing against a reference.\n\n  Args:\n    src_file: path(s) to read source file(s) from\n    hyp_file: path to write hypothesis file to\n    model: generator model to generate hypothesis with\n    inference: inference object\n  \"\"\"", "\n", "\n", "yaml_tag", "=", "'!DecodingEvalTask'", "\n", "\n", "@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "src_file", ":", "Union", "[", "str", ",", "Sequence", "[", "str", "]", "]", ",", "hyp_file", ":", "str", ",", "model", ":", "'model_base.GeneratorModel'", "=", "Ref", "(", "\"model\"", ")", ",", "\n", "inference", ":", "Optional", "[", "'inferences.Inference'", "]", "=", "None", ")", ":", "\n", "\n", "    ", "self", ".", "model", "=", "model", "\n", "self", ".", "src_file", "=", "src_file", "\n", "self", ".", "hyp_file", "=", "hyp_file", "\n", "self", ".", "inference", "=", "inference", "or", "self", ".", "model", ".", "inference", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.SimpleTrainingTask._augment_data_initial": [[167, 177], ["xnmt.logger.debug", "subprocess.Popen", "xnmt.eval.tasks.SimpleTrainingTask._augmentation_handle.wait"], "methods", ["None"], ["\n", "", "def", "eval", "(", "self", ")", ":", "\n", "    ", "event_trigger", ".", "set_train", "(", "False", ")", "\n", "self", ".", "inference", ".", "perform_inference", "(", "generator", "=", "self", ".", "model", ",", "\n", "src_file", "=", "self", ".", "src_file", ",", "\n", "trg_file", "=", "self", ".", "hyp_file", ")", "\n", "return", "None", "\n", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.SimpleTrainingTask._augment_data_next_epoch": [[178, 209], ["xnmt.eval.tasks.SimpleTrainingTask._augmentation_handle.poll", "subprocess.Popen", "xnmt.eval.tasks.SimpleTrainingTask._augmentation_handle.wait", "xnmt.input_readers.read_parallel_corpus", "subprocess.Popen", "xnmt.logger.info", "xnmt.logger.info"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.read_parallel_corpus"], []], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.SimpleTrainingTask.should_stop_training": [[210, 218], ["xnmt.eval.tasks.SimpleTrainingTask.cur_num_minibatches"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.SimpleTrainingTask.cur_num_minibatches"], []], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.SimpleTrainingTask.cur_num_minibatches": [[219, 224], ["len"], "methods", ["None"], []], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.SimpleTrainingTask.cur_num_sentences": [[225, 230], ["len"], "methods", ["None"], []], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.SimpleTrainingTask._advance_epoch": [[231, 262], ["random.randint", "random.seed", "numpy.random.seed", "xnmt.eval.tasks.SimpleTrainingTask.batcher.pack", "list", "numpy.random.shuffle", "xnmt.event_trigger.new_epoch", "xnmt.eval.tasks.SimpleTrainingTask.model.src_reader.needs_reload", "xnmt.eval.tasks.SimpleTrainingTask.model.trg_reader.needs_reload", "xnmt.event_trigger.set_train", "xnmt.input_readers.read_parallel_corpus", "range", "xnmt.eval.tasks.SimpleTrainingTask._augment_data_initial", "xnmt.eval.tasks.SimpleTrainingTask._augment_data_next_epoch", "xnmt.eval.tasks.SimpleTrainingTask.cur_num_minibatches", "xnmt.eval.tasks.SimpleTrainingTask.cur_num_sentences"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.SortBatcher.pack", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.new_epoch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.CompoundReader.needs_reload", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.CompoundReader.needs_reload", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.set_train", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.input_readers.read_parallel_corpus", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.SimpleTrainingTask._augment_data_initial", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.SimpleTrainingTask._augment_data_next_epoch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.SimpleTrainingTask.cur_num_minibatches", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.SimpleTrainingTask.cur_num_sentences"], []], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.SimpleTrainingTask.next_minibatch": [[263, 279], ["xnmt.eval.tasks.SimpleTrainingTask._advance_epoch", "src.batch_size", "src.batch_size"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.SimpleTrainingTask._advance_epoch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.batch_size", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.batch_size"], []], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.SimpleTrainingTask.training_step": [[280, 291], ["xnmt.eval.tasks.SimpleTrainingTask.loss_calculator.calc_loss"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_encoder.DualEncoderSimilarity.calc_loss"], []], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.SimpleTrainingTask.checkpoint_needed": [[292, 294], ["xnmt.eval.tasks.SimpleTrainingTask.dev_loss_tracker.should_report_dev"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_trackers.DevLossTracker.should_report_dev"], []], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.SimpleTrainingTask.checkpoint": [[295, 372], ["xnmt.eval.tasks.SimpleTrainingTask.dev_loss_tracker.report", "len", "xnmt.logger.info", "xnmt.eval.tasks.SimpleTrainingTask.dev_loss_tracker.set_dev_score", "dev_task.eval", "xnmt.eval.tasks.SimpleTrainingTask.dev_loss_tracker.add_aux_score", "asteval.Interpreter", "asteval.Interpreter.", "xnmt.logger.info", "dev_scores[].better_than", "xnmt.logger.info", "type", "dev_scores.extend", "dev_scores.append", "y.value", "xnmt.logger.info", "xnmt.logger.info", "xnmt.logger.info", "xnmt.eval.tasks.SimpleTrainingTask.trainer.restart", "xnmt.param_collections.ParamManager.param_col.revert_to_best_model"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_trackers.DevLossTracker.report", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_trackers.DevLossTracker.set_dev_score", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.tasks.DecodingEvalTask.eval", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_trackers.DevLossTracker.add_aux_score", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.EvalScore.better_than", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.eval.metrics.FMeasure.value", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.optimizers.DummyTrainer.restart", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamCollection.revert_to_best_model"], []], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.TrainingState.__init__": [[377, 387], ["random.randint"], "methods", ["None"], []], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.TrainingRegimen.run_training": [[24, 32], ["NotImplementedError"], "methods", ["None"], ["def", "run_training", "(", "self", ",", "save_fct", ")", ":", "\n", "    ", "\"\"\"\n    Run training steps in a loop until stopping criterion is reached.\n\n    Args:\n      save_fct: function to be invoked to save a model at dev checkpoints\n    \"\"\"", "\n", "raise", "NotImplementedError", "(", "\"\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.TrainingRegimen.backward": [[33, 44], ["loss.backward", "dynet.print_text_graphviz"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.TrainingRegimen.backward"], ["", "def", "backward", "(", "self", ",", "loss", ":", "dy", ".", "Expression", ",", "dynet_profiling", ":", "numbers", ".", "Integral", ")", "->", "None", ":", "\n", "    ", "\"\"\"\n    Perform backward pass to accumulate gradients.\n\n    Args:\n      loss: Result of self.training_step(...)\n      dynet_profiling: if > 0, print the computation graph\n    \"\"\"", "\n", "if", "dynet_profiling", "and", "dynet_profiling", ">", "0", ":", "\n", "      ", "dy", ".", "print_text_graphviz", "(", ")", "\n", "", "loss", ".", "backward", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.TrainingRegimen.update": [[45, 53], ["trainer.update"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.MultiTaskTrainingRegimen.update"], ["", "def", "update", "(", "self", ",", "trainer", ":", "optimizers", ".", "XnmtOptimizer", ")", "->", "None", ":", "\n", "    ", "\"\"\"\n    Update DyNet weights using the given optimizer.\n\n    Args:\n      trainer: DyNet trainer\n    \"\"\"", "\n", "trainer", ".", "update", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.SimpleTrainingRegimen.__init__": [[92, 147], ["xnmt.persistence.Ref", "xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "super().__init__", "xnmt.loss_trackers.TrainLossTracker", "xnmt.optimizers.SimpleSGDTrainer", "commandline_args.get"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.UninitializedYamlObject.get"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "model", ":", "ConditionedModel", "=", "Ref", "(", "\"model\"", ")", ",", "\n", "src_file", ":", "Union", "[", "None", ",", "str", ",", "Sequence", "[", "str", "]", "]", "=", "None", ",", "\n", "trg_file", ":", "Optional", "[", "str", "]", "=", "None", ",", "\n", "dev_every", ":", "numbers", ".", "Integral", "=", "0", ",", "\n", "dev_zero", ":", "bool", "=", "False", ",", "\n", "batcher", ":", "batchers", ".", "Batcher", "=", "bare", "(", "batchers", ".", "SrcBatcher", ",", "batch_size", "=", "32", ")", ",", "\n", "loss_calculator", ":", "LossCalculator", "=", "bare", "(", "MLELoss", ")", ",", "\n", "trainer", ":", "optimizers", ".", "XnmtOptimizer", "=", "bare", "(", "optimizers", ".", "SimpleSGDTrainer", ",", "e0", "=", "0.1", ")", ",", "\n", "run_for_epochs", ":", "Optional", "[", "numbers", ".", "Integral", "]", "=", "None", ",", "\n", "lr_decay", ":", "numbers", ".", "Real", "=", "1.0", ",", "\n", "lr_decay_times", ":", "numbers", ".", "Integral", "=", "3", ",", "\n", "patience", ":", "numbers", ".", "Integral", "=", "1", ",", "\n", "initial_patience", ":", "Optional", "[", "numbers", ".", "Integral", "]", "=", "None", ",", "\n", "dev_tasks", ":", "Sequence", "[", "eval_tasks", ".", "EvalTask", "]", "=", "None", ",", "\n", "dev_combinator", ":", "Optional", "[", "str", "]", "=", "None", ",", "\n", "restart_trainer", ":", "bool", "=", "False", ",", "\n", "reload_command", ":", "Optional", "[", "str", "]", "=", "None", ",", "\n", "name", ":", "str", "=", "\"{EXP}\"", ",", "\n", "sample_train_sents", ":", "Optional", "[", "numbers", ".", "Integral", "]", "=", "None", ",", "\n", "max_num_train_sents", ":", "Optional", "[", "numbers", ".", "Integral", "]", "=", "None", ",", "\n", "max_src_len", ":", "Optional", "[", "numbers", ".", "Integral", "]", "=", "None", ",", "\n", "max_trg_len", ":", "Optional", "[", "numbers", ".", "Integral", "]", "=", "None", ",", "\n", "loss_comb_method", ":", "str", "=", "Ref", "(", "\"exp_global.loss_comb_method\"", ",", "default", "=", "\"sum\"", ")", ",", "\n", "update_every", ":", "numbers", ".", "Integral", "=", "1", ",", "\n", "commandline_args", ":", "dict", "=", "Ref", "(", "\"exp_global.commandline_args\"", ",", "default", "=", "{", "}", ")", ")", "->", "None", ":", "\n", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "model", "=", "model", ",", "\n", "src_file", "=", "src_file", ",", "\n", "trg_file", "=", "trg_file", ",", "\n", "dev_every", "=", "dev_every", ",", "\n", "batcher", "=", "batcher", ",", "\n", "loss_calculator", "=", "loss_calculator", ",", "\n", "run_for_epochs", "=", "run_for_epochs", ",", "\n", "lr_decay", "=", "lr_decay", ",", "\n", "lr_decay_times", "=", "lr_decay_times", ",", "\n", "patience", "=", "patience", ",", "\n", "initial_patience", "=", "initial_patience", ",", "\n", "dev_tasks", "=", "dev_tasks", ",", "\n", "dev_combinator", "=", "dev_combinator", ",", "\n", "restart_trainer", "=", "restart_trainer", ",", "\n", "reload_command", "=", "reload_command", ",", "\n", "name", "=", "name", ",", "\n", "sample_train_sents", "=", "sample_train_sents", ",", "\n", "max_num_train_sents", "=", "max_num_train_sents", ",", "\n", "max_src_len", "=", "max_src_len", ",", "\n", "max_trg_len", "=", "max_trg_len", ")", "\n", "self", ".", "dev_zero", "=", "dev_zero", "\n", "self", ".", "trainer", "=", "trainer", "or", "optimizers", ".", "SimpleSGDTrainer", "(", "e0", "=", "0.1", ")", "\n", "self", ".", "dynet_profiling", "=", "commandline_args", ".", "get", "(", "\"dynet_profiling\"", ",", "0", ")", "if", "commandline_args", "else", "0", "\n", "self", ".", "train_loss_tracker", "=", "TrainLossTracker", "(", "self", ")", "\n", "self", ".", "loss_comb_method", "=", "loss_comb_method", "\n", "self", ".", "update_every", "=", "update_every", "\n", "self", ".", "num_updates_skipped", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.SimpleTrainingRegimen.run_training": [[148, 169], ["regimens.SimpleTrainingRegimen.next_minibatch", "regimens.SimpleTrainingRegimen.checkpoint_needed", "regimens.SimpleTrainingRegimen.should_stop_training", "regimens.SimpleTrainingRegimen.checkpoint_and_save", "xnmt.utils.ReportOnException", "dynet.renew_cg", "regimens.SimpleTrainingRegimen.train_loss_tracker.report", "regimens.SimpleTrainingRegimen.checkpoint_and_save", "xnmt.event_trigger.set_train", "regimens.SimpleTrainingRegimen.training_step", "regimens.SimpleTrainingRegimen.compute", "regimens.SimpleTrainingRegimen.backward", "regimens.SimpleTrainingRegimen.update", "regimens.SimpleTrainingRegimen.get_factored_loss_val"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.SimpleTrainingTask.next_minibatch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.SimpleTrainingTask.checkpoint_needed", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.SimpleTrainingTask.should_stop_training", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.SerialMultiTaskTrainingRegimen.checkpoint_and_save", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_trackers.DevLossTracker.report", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.SerialMultiTaskTrainingRegimen.checkpoint_and_save", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.set_train", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.SimpleTrainingTask.training_step", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossExpr.compute", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.TrainingRegimen.backward", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.MultiTaskTrainingRegimen.update", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossExpr.get_factored_loss_val"], ["", "def", "run_training", "(", "self", ",", "save_fct", ")", ":", "\n", "    ", "\"\"\"\n    Main training loop (overwrites TrainingRegimen.run_training())\n    \"\"\"", "\n", "if", "self", ".", "run_for_epochs", "is", "None", "or", "self", ".", "run_for_epochs", ">", "0", ":", "\n", "      ", "for", "src", ",", "trg", "in", "self", ".", "next_minibatch", "(", ")", ":", "\n", "        ", "if", "self", ".", "dev_zero", ":", "\n", "          ", "self", ".", "checkpoint_and_save", "(", "save_fct", ")", "\n", "self", ".", "dev_zero", "=", "False", "\n", "", "with", "utils", ".", "ReportOnException", "(", "{", "\"src\"", ":", "src", ",", "\"trg\"", ":", "trg", ",", "\"graph\"", ":", "utils", ".", "print_cg_conditional", "}", ")", ":", "\n", "          ", "dy", ".", "renew_cg", "(", "immediate_compute", "=", "settings", ".", "IMMEDIATE_COMPUTE", ",", "check_validity", "=", "settings", ".", "CHECK_VALIDITY", ")", "\n", "with", "self", ".", "train_loss_tracker", ".", "time_tracker", ":", "\n", "            ", "event_trigger", ".", "set_train", "(", "True", ")", "\n", "loss_builder", "=", "self", ".", "training_step", "(", "src", ",", "trg", ")", "\n", "loss", "=", "loss_builder", ".", "compute", "(", ")", "\n", "self", ".", "backward", "(", "loss", ",", "self", ".", "dynet_profiling", ")", "\n", "self", ".", "update", "(", "self", ".", "trainer", ")", "\n", "", "self", ".", "train_loss_tracker", ".", "report", "(", "trg", ",", "loss_builder", ".", "get_factored_loss_val", "(", "comb_method", "=", "self", ".", "loss_comb_method", ")", ")", "\n", "", "if", "self", ".", "checkpoint_needed", "(", ")", ":", "\n", "          ", "self", ".", "checkpoint_and_save", "(", "save_fct", ")", "\n", "", "if", "self", ".", "should_stop_training", "(", ")", ":", "break", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.SimpleTrainingRegimen.checkpoint_and_save": [[170, 174], ["regimens.SimpleTrainingRegimen.checkpoint", "save_fct"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.SimpleTrainingTask.checkpoint"], ["", "", "", "def", "checkpoint_and_save", "(", "self", ",", "save_fct", ")", ":", "\n", "    ", "should_save", "=", "self", ".", "checkpoint", "(", ")", "\n", "if", "should_save", ":", "\n", "      ", "save_fct", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.SimpleTrainingRegimen.update": [[175, 182], ["trainer.update"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.MultiTaskTrainingRegimen.update"], ["", "", "def", "update", "(", "self", ",", "trainer", ":", "optimizers", ".", "XnmtOptimizer", ")", "->", "None", ":", "\n", "    ", "self", ".", "num_updates_skipped", "+=", "1", "\n", "if", "self", ".", "num_updates_skipped", "==", "self", ".", "update_every", ":", "\n", "      ", "trainer", ".", "update", "(", ")", "\n", "self", ".", "num_updates_skipped", "=", "0", "\n", "", "else", ":", "\n", "      ", "assert", "0", "<", "self", ".", "num_updates_skipped", "<", "self", ".", "update_every", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.MultiTaskTrainingRegimen.__init__": [[199, 220], ["xnmt.persistence.bare", "xnmt.persistence.Ref", "object.__init__", "commandline_args.get", "len", "ValueError", "hasattr", "ValueError"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.UninitializedYamlObject.get"], ["def", "__init__", "(", "self", ",", "\n", "tasks", ":", "Sequence", "[", "train_tasks", ".", "TrainingTask", "]", ",", "\n", "trainer", ":", "optimizers", ".", "XnmtOptimizer", "=", "bare", "(", "optimizers", ".", "SimpleSGDTrainer", ",", "e0", "=", "0.1", ")", ",", "\n", "dev_zero", ":", "bool", "=", "False", ",", "\n", "update_every", ":", "numbers", ".", "Integral", "=", "1", ",", "\n", "commandline_args", ":", "dict", "=", "Ref", "(", "\"exp_global.commandline_args\"", ",", "default", "=", "None", ")", ")", "->", "None", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dynet_profiling", "=", "commandline_args", ".", "get", "(", "\"dynet_profiling\"", ",", "0", ")", "if", "commandline_args", "else", "0", "\n", "if", "len", "(", "tasks", ")", "==", "0", ":", "raise", "ValueError", "(", "\"Task list must be non-empty.\"", ")", "\n", "self", ".", "tasks", "=", "tasks", "\n", "self", ".", "trainer", "=", "trainer", "\n", "for", "task", "in", "tasks", "[", "1", ":", "]", ":", "\n", "      ", "if", "hasattr", "(", "task", ",", "\"trainer\"", ")", "and", "task", ".", "trainer", "is", "not", "None", ":", "\n", "        ", "raise", "ValueError", "(", "\"Can instantiate only one trainer object. Possibly, multiple training regimens were created when training tasks should have been used.\"", ")", "\n", "", "", "self", ".", "train", "=", "None", "\n", "self", ".", "model_file", "=", "ParamManager", ".", "param_col", ".", "model_file", "\n", "for", "task", "in", "tasks", ":", "\n", "      ", "task", ".", "trainer", "=", "trainer", "\n", "", "self", ".", "dev_zero", "=", "dev_zero", "\n", "self", ".", "update_every", "=", "update_every", "\n", "self", ".", "num_updates_skipped", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.MultiTaskTrainingRegimen.trigger_train_event": [[222, 236], ["xnmt.event_trigger.set_train", "xnmt.event_trigger.set_train"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.set_train", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.set_train"], ["", "def", "trigger_train_event", "(", "self", ",", "value", ")", ":", "\n", "    ", "\"\"\"\n    Trigger set_train event, but only if that would lead to a change of the value\n    of set_train.\n    Args:\n      value: True or False\n    \"\"\"", "\n", "if", "self", ".", "train", "is", "None", ":", "\n", "      ", "self", ".", "train", "=", "value", "\n", "event_trigger", ".", "set_train", "(", "value", ")", "\n", "", "else", ":", "\n", "      ", "if", "value", "!=", "self", ".", "train", ":", "\n", "        ", "self", ".", "train", "=", "value", "\n", "event_trigger", ".", "set_train", "(", "value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.MultiTaskTrainingRegimen.update": [[237, 244], ["trainer.update"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.MultiTaskTrainingRegimen.update"], ["", "", "", "def", "update", "(", "self", ",", "trainer", ":", "optimizers", ".", "XnmtOptimizer", ")", "->", "None", ":", "\n", "    ", "self", ".", "num_updates_skipped", "+=", "1", "\n", "if", "self", ".", "num_updates_skipped", "==", "self", ".", "update_every", ":", "\n", "      ", "trainer", ".", "update", "(", ")", "\n", "self", ".", "num_updates_skipped", "=", "0", "\n", "", "else", ":", "\n", "      ", "assert", "0", "<", "self", ".", "num_updates_skipped", "<", "self", ".", "update_every", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.SameBatchMultiTaskTrainingRegimen.__init__": [[269, 287], ["xnmt.persistence.bare", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "regimens.MultiTaskTrainingRegimen.__init__", "xnmt.loss_trackers.TrainLossTracker", "len", "len", "ValueError", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "tasks", ":", "Sequence", "[", "train_tasks", ".", "TrainingTask", "]", ",", "\n", "trainer", ":", "optimizers", ".", "XnmtOptimizer", "=", "bare", "(", "optimizers", ".", "SimpleSGDTrainer", ",", "e0", "=", "0.1", ")", ",", "\n", "dev_zero", ":", "bool", "=", "False", ",", "\n", "per_task_backward", ":", "bool", "=", "True", ",", "\n", "loss_comb_method", ":", "str", "=", "Ref", "(", "\"exp_global.loss_comb_method\"", ",", "default", "=", "\"sum\"", ")", ",", "\n", "update_every", ":", "numbers", ".", "Integral", "=", "1", ",", "\n", "n_task_steps", ":", "Optional", "[", "Sequence", "[", "numbers", ".", "Integral", "]", "]", "=", "None", ",", "\n", "commandline_args", ":", "dict", "=", "Ref", "(", "\"exp_global.commandline_args\"", ",", "default", "=", "None", ")", ")", "->", "None", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "tasks", "=", "tasks", ",", "trainer", "=", "trainer", ",", "dev_zero", "=", "dev_zero", ",", "update_every", "=", "update_every", ",", "\n", "commandline_args", "=", "commandline_args", ")", "\n", "self", ".", "train_loss_trackers", "=", "{", "task", ":", "TrainLossTracker", "(", "task", ")", "for", "task", "in", "tasks", "}", "\n", "self", ".", "per_task_backward", "=", "per_task_backward", "\n", "self", ".", "loss_comb_method", "=", "loss_comb_method", "\n", "self", ".", "n_task_steps", "=", "n_task_steps", "or", "[", "1", "]", "*", "len", "(", "tasks", ")", "\n", "if", "len", "(", "self", ".", "n_task_steps", ")", "!=", "len", "(", "tasks", ")", ":", "\n", "      ", "raise", "ValueError", "(", "f\"number of tasks and steps per task do not match: {len(tasks)} != {len(self.n_task_steps)}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.SameBatchMultiTaskTrainingRegimen.run_training": [[288, 326], ["collections.OrderedDict", "task.next_minibatch", "zip", "dynet.renew_cg", "task_trg_loss_stats.items", "regimens.SameBatchMultiTaskTrainingRegimen.checkpoint_and_save", "regimens.SameBatchMultiTaskTrainingRegimen.tasks[].should_stop_training", "collections.OrderedDict.items", "range", "regimens.SameBatchMultiTaskTrainingRegimen.checkpoint_and_save", "contextlib.ExitStack", "regimens.SameBatchMultiTaskTrainingRegimen.trigger_train_event", "regimens.SameBatchMultiTaskTrainingRegimen.update", "regimens.SameBatchMultiTaskTrainingRegimen.train_loss_trackers[].report", "next", "task_src_trg.append", "stack.enter_context", "regimens.SameBatchMultiTaskTrainingRegimen.backward", "contextlib.ExitStack", "task.training_step", "sum", "stack2.enter_context", "task.training_step.get_factored_loss_val", "regimens.SameBatchMultiTaskTrainingRegimen.backward", "dynet.renew_cg", "task_losses.append", "task.training_step.compute", "task.training_step.compute"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.SimpleTrainingTask.next_minibatch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.SerialMultiTaskTrainingRegimen.checkpoint_and_save", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.SimpleTrainingTask.should_stop_training", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossVal.items", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.SerialMultiTaskTrainingRegimen.checkpoint_and_save", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.MultiTaskTrainingRegimen.trigger_train_event", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.MultiTaskTrainingRegimen.update", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_trackers.DevLossTracker.report", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.TrainingRegimen.backward", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.SimpleTrainingTask.training_step", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossExpr.get_factored_loss_val", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.TrainingRegimen.backward", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossExpr.compute", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossExpr.compute"], ["", "", "def", "run_training", "(", "self", ",", "save_fct", ")", ":", "\n", "    ", "task_generators", "=", "OrderedDict", "(", ")", "\n", "for", "task", "in", "self", ".", "tasks", ":", "\n", "      ", "task_generators", "[", "task", "]", "=", "task", ".", "next_minibatch", "(", ")", "\n", "", "if", "self", ".", "tasks", "[", "0", "]", ".", "run_for_epochs", ">", "0", ":", "\n", "      ", "while", "True", ":", "\n", "        ", "task_losses", "=", "[", "]", "\n", "task_src_trg", "=", "[", "]", "\n", "for", "(", "task", ",", "task_gen", ")", ",", "task_n", "in", "zip", "(", "task_generators", ".", "items", "(", ")", ",", "self", ".", "n_task_steps", ")", ":", "\n", "          ", "for", "_", "in", "range", "(", "task_n", ")", ":", "\n", "            ", "src", ",", "trg", "=", "next", "(", "task_gen", ")", "\n", "task_src_trg", ".", "append", "(", "(", "task", ",", "src", ",", "trg", ")", ")", "\n", "", "", "if", "self", ".", "dev_zero", ":", "# True only in first iteration", "\n", "          ", "self", ".", "checkpoint_and_save", "(", "save_fct", ")", "\n", "", "dy", ".", "renew_cg", "(", "immediate_compute", "=", "settings", ".", "IMMEDIATE_COMPUTE", ",", "check_validity", "=", "settings", ".", "CHECK_VALIDITY", ")", "\n", "task_trg_loss_stats", "=", "{", "}", "\n", "with", "contextlib", ".", "ExitStack", "(", ")", "as", "stack", ":", "#use exit stack to control whether to use global or per-task time tracking", "\n", "          ", "if", "not", "self", ".", "per_task_backward", ":", "\n", "            ", "stack", ".", "enter_context", "(", "self", ".", "train_loss_trackers", "[", "self", ".", "tasks", "[", "0", "]", "]", ".", "time_tracker", ")", "\n", "", "self", ".", "trigger_train_event", "(", "True", ")", "\n", "for", "task", ",", "src", ",", "trg", "in", "task_src_trg", ":", "\n", "            ", "with", "contextlib", ".", "ExitStack", "(", ")", "as", "stack2", ":", "\n", "              ", "if", "self", ".", "per_task_backward", ":", "\n", "                ", "stack2", ".", "enter_context", "(", "self", ".", "train_loss_trackers", "[", "task", "]", ".", "time_tracker", ")", "\n", "", "loss_builder", "=", "task", ".", "training_step", "(", "src", ",", "trg", ")", "\n", "task_trg_loss_stats", "[", "task", "]", "=", "(", "trg", ",", "loss_builder", ".", "get_factored_loss_val", "(", "comb_method", "=", "self", ".", "loss_comb_method", ")", ")", "\n", "if", "self", ".", "per_task_backward", ":", "\n", "                ", "self", ".", "backward", "(", "loss_builder", ".", "compute", "(", ")", ",", "self", ".", "dynet_profiling", ")", "\n", "dy", ".", "renew_cg", "(", "immediate_compute", "=", "settings", ".", "IMMEDIATE_COMPUTE", ",", "check_validity", "=", "settings", ".", "CHECK_VALIDITY", ")", "\n", "", "else", ":", "\n", "                ", "task_losses", ".", "append", "(", "loss_builder", ".", "compute", "(", ")", ")", "\n", "", "", "", "if", "not", "self", ".", "per_task_backward", ":", "\n", "            ", "self", ".", "backward", "(", "sum", "(", "task_losses", ")", ",", "self", ".", "dynet_profiling", ")", "\n", "", "self", ".", "update", "(", "self", ".", "trainer", ")", "\n", "", "for", "task", ",", "(", "trg", ",", "stats", ")", "in", "task_trg_loss_stats", ".", "items", "(", ")", ":", "\n", "          ", "self", ".", "train_loss_trackers", "[", "task", "]", ".", "report", "(", "trg", ",", "stats", ")", "\n", "", "self", ".", "checkpoint_and_save", "(", "save_fct", ")", "\n", "if", "self", ".", "tasks", "[", "0", "]", ".", "should_stop_training", "(", ")", ":", "break", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.SameBatchMultiTaskTrainingRegimen.checkpoint_and_save": [[327, 334], ["enumerate", "task.checkpoint_needed", "task.checkpoint", "save_fct"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.SimpleTrainingTask.checkpoint_needed", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.SimpleTrainingTask.checkpoint"], ["", "", "", "def", "checkpoint_and_save", "(", "self", ",", "save_fct", ")", ":", "\n", "    ", "for", "task_i", ",", "task", "in", "enumerate", "(", "self", ".", "tasks", ")", ":", "\n", "      ", "if", "self", ".", "dev_zero", "or", "task", ".", "checkpoint_needed", "(", ")", ":", "\n", "        ", "should_save", "=", "task", ".", "checkpoint", "(", "control_learning_schedule", "=", "(", "task_i", "==", "0", ")", ")", "\n", "if", "should_save", ":", "\n", "          ", "save_fct", "(", ")", "\n", "", "", "", "self", ".", "dev_zero", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.AlternatingBatchMultiTaskTrainingRegimen.__init__": [[359, 380], ["xnmt.persistence.bare", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "regimens.MultiTaskTrainingRegimen.__init__", "ValueError", "len", "len", "ValueError", "xnmt.loss_trackers.TrainLossTracker", "len", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "tasks", ":", "Sequence", "[", "train_tasks", ".", "TrainingTask", "]", ",", "\n", "task_weights", ":", "Optional", "[", "Sequence", "[", "numbers", ".", "Real", "]", "]", "=", "None", ",", "\n", "trainer", ":", "optimizers", ".", "XnmtOptimizer", "=", "bare", "(", "optimizers", ".", "SimpleSGDTrainer", ",", "e0", "=", "0.1", ")", ",", "\n", "dev_zero", ":", "bool", "=", "False", ",", "\n", "loss_comb_method", ":", "str", "=", "Ref", "(", "\"exp_global.loss_comb_method\"", ",", "default", "=", "\"sum\"", ")", ",", "\n", "update_every_within", ":", "numbers", ".", "Integral", "=", "1", ",", "\n", "update_every_across", ":", "numbers", ".", "Integral", "=", "1", ",", "\n", "commandline_args", "=", "Ref", "(", "\"exp_global.commandline_args\"", ",", "default", "=", "None", ")", ")", "->", "None", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "tasks", "=", "tasks", ",", "trainer", "=", "trainer", ",", "dev_zero", "=", "dev_zero", ",", "update_every", "=", "update_every_across", ",", "\n", "commandline_args", "=", "commandline_args", ")", "\n", "if", "update_every_within", "!=", "1", "and", "update_every_across", "!=", "1", ":", "\n", "      ", "raise", "ValueError", "(", "\"update_every_within and update_every_across cannot be mixed.\"", ")", "\n", "", "self", ".", "update_every_within", "=", "update_every_within", "\n", "self", ".", "task_weights", "=", "task_weights", "or", "[", "1.", "/", "len", "(", "tasks", ")", "]", "*", "len", "(", "tasks", ")", "\n", "if", "len", "(", "self", ".", "task_weights", ")", "!=", "len", "(", "self", ".", "tasks", ")", ":", "\n", "      ", "raise", "ValueError", "(", "f\"number of tasks must match number of task weights; \"", "\n", "f\"found: {len(self.task_weights)} != {len(self.tasks)}\"", ")", "\n", "", "self", ".", "train_loss_trackers", "=", "{", "task", ":", "TrainLossTracker", "(", "task", ")", "for", "task", "in", "tasks", "}", "\n", "self", ".", "loss_comb_method", "=", "loss_comb_method", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.AlternatingBatchMultiTaskTrainingRegimen.run_training": [[381, 404], ["collections.OrderedDict", "task.next_minibatch", "range", "dynet.renew_cg", "numpy.random.choice", "cur_train_loss_tracker.report", "regimens.AlternatingBatchMultiTaskTrainingRegimen.checkpoint_and_save", "regimens.AlternatingBatchMultiTaskTrainingRegimen.tasks[].should_stop_training", "len", "range", "regimens.AlternatingBatchMultiTaskTrainingRegimen.checkpoint_and_save", "range", "regimens.AlternatingBatchMultiTaskTrainingRegimen.update", "cur_task.training_step.get_factored_loss_val", "len", "next", "regimens.AlternatingBatchMultiTaskTrainingRegimen.trigger_train_event", "cur_task.training_step", "regimens.AlternatingBatchMultiTaskTrainingRegimen.backward", "cur_task.training_step.compute"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.SimpleTrainingTask.next_minibatch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_trackers.DevLossTracker.report", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.SerialMultiTaskTrainingRegimen.checkpoint_and_save", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.SimpleTrainingTask.should_stop_training", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.SerialMultiTaskTrainingRegimen.checkpoint_and_save", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.MultiTaskTrainingRegimen.update", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossExpr.get_factored_loss_val", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.MultiTaskTrainingRegimen.trigger_train_event", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.SimpleTrainingTask.training_step", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.TrainingRegimen.backward", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossExpr.compute"], ["", "def", "run_training", "(", "self", ",", "save_fct", ")", ":", "\n", "    ", "task_generators", "=", "OrderedDict", "(", ")", "\n", "for", "task", "in", "self", ".", "tasks", ":", "\n", "      ", "task_generators", "[", "task", "]", "=", "task", ".", "next_minibatch", "(", ")", "\n", "", "dev_zero", "=", "{", "i", ":", "self", ".", "dev_zero", "for", "i", "in", "range", "(", "len", "(", "self", ".", "tasks", ")", ")", "}", "\n", "if", "self", ".", "tasks", "[", "0", "]", ".", "run_for_epochs", ">", "0", ":", "\n", "      ", "while", "True", ":", "\n", "        ", "dy", ".", "renew_cg", "(", "immediate_compute", "=", "settings", ".", "IMMEDIATE_COMPUTE", ",", "check_validity", "=", "settings", ".", "CHECK_VALIDITY", ")", "\n", "cur_task_i", "=", "np", ".", "random", ".", "choice", "(", "range", "(", "len", "(", "self", ".", "tasks", ")", ")", ",", "p", "=", "self", ".", "task_weights", ")", "\n", "cur_task", "=", "self", ".", "tasks", "[", "cur_task_i", "]", "\n", "task_gen", "=", "task_generators", "[", "cur_task", "]", "\n", "if", "dev_zero", "[", "cur_task_i", "]", ":", "self", ".", "checkpoint_and_save", "(", "cur_task", ",", "cur_task_i", ",", "save_fct", ",", "dev_zero", ")", "\n", "cur_train_loss_tracker", "=", "self", ".", "train_loss_trackers", "[", "cur_task", "]", "\n", "with", "cur_train_loss_tracker", ".", "time_tracker", ":", "\n", "          ", "for", "_", "in", "range", "(", "self", ".", "update_every_within", ")", ":", "\n", "            ", "src", ",", "trg", "=", "next", "(", "task_gen", ")", "\n", "self", ".", "trigger_train_event", "(", "True", ")", "\n", "loss_builder", "=", "cur_task", ".", "training_step", "(", "src", ",", "trg", ")", "\n", "self", ".", "backward", "(", "loss", "=", "loss_builder", ".", "compute", "(", ")", ",", "dynet_profiling", "=", "self", ".", "dynet_profiling", ")", "\n", "", "self", ".", "update", "(", "trainer", "=", "self", ".", "trainer", ")", "\n", "", "cur_train_loss_tracker", ".", "report", "(", "trg", ",", "loss_builder", ".", "get_factored_loss_val", "(", "comb_method", "=", "self", ".", "loss_comb_method", ")", ")", "\n", "self", ".", "checkpoint_and_save", "(", "cur_task", ",", "cur_task_i", ",", "save_fct", ",", "dev_zero", ")", "\n", "if", "self", ".", "tasks", "[", "0", "]", ".", "should_stop_training", "(", ")", ":", "break", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.AlternatingBatchMultiTaskTrainingRegimen.checkpoint_and_save": [[405, 411], ["cur_task.checkpoint_needed", "cur_task.checkpoint", "save_fct"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.SimpleTrainingTask.checkpoint_needed", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.SimpleTrainingTask.checkpoint"], ["", "", "", "def", "checkpoint_and_save", "(", "self", ",", "cur_task", ",", "cur_task_i", ",", "save_fct", ",", "dev_zero", ")", ":", "\n", "    ", "if", "dev_zero", "[", "cur_task_i", "]", "or", "cur_task", ".", "checkpoint_needed", "(", ")", ":", "\n", "      ", "dev_zero", "[", "cur_task_i", "]", "=", "False", "\n", "should_save", "=", "cur_task", ".", "checkpoint", "(", "control_learning_schedule", "=", "(", "cur_task_i", "==", "0", ")", ")", "\n", "if", "should_save", ":", "\n", "        ", "save_fct", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.SerialMultiTaskTrainingRegimen.__init__": [[429, 441], ["xnmt.persistence.bare", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "regimens.MultiTaskTrainingRegimen.__init__", "xnmt.loss_trackers.TrainLossTracker"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "tasks", ":", "Sequence", "[", "train_tasks", ".", "TrainingTask", "]", ",", "\n", "trainer", ":", "optimizers", ".", "XnmtOptimizer", "=", "bare", "(", "optimizers", ".", "SimpleSGDTrainer", ",", "e0", "=", "0.1", ")", ",", "\n", "dev_zero", ":", "bool", "=", "False", ",", "\n", "loss_comb_method", ":", "str", "=", "Ref", "(", "\"exp_global.loss_comb_method\"", ",", "default", "=", "\"sum\"", ")", ",", "\n", "update_every", ":", "numbers", ".", "Integral", "=", "1", ",", "\n", "commandline_args", ":", "dict", "=", "Ref", "(", "\"exp_global.commandline_args\"", ",", "default", "=", "None", ")", ")", "->", "None", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "tasks", "=", "tasks", ",", "trainer", "=", "trainer", ",", "dev_zero", "=", "dev_zero", ",", "commandline_args", "=", "commandline_args", ",", "\n", "update_every", "=", "update_every", ")", "\n", "self", ".", "train_loss_trackers", "=", "{", "task", ":", "TrainLossTracker", "(", "task", ")", "for", "task", "in", "tasks", "}", "\n", "self", ".", "loss_comb_method", "=", "loss_comb_method", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.SerialMultiTaskTrainingRegimen.run_training": [[442, 463], ["range", "len", "cur_task.next_minibatch", "range", "len", "dynet.renew_cg", "next", "cur_train_loss_tracker.report", "regimens.SerialMultiTaskTrainingRegimen.checkpoint_and_save", "cur_task.should_stop_training", "regimens.SerialMultiTaskTrainingRegimen.checkpoint_and_save", "regimens.SerialMultiTaskTrainingRegimen.trigger_train_event", "cur_task.training_step", "cur_task.training_step.compute", "regimens.SerialMultiTaskTrainingRegimen.backward", "regimens.SerialMultiTaskTrainingRegimen.update", "cur_task.training_step.get_factored_loss_val"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.SimpleTrainingTask.next_minibatch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.loss_trackers.DevLossTracker.report", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.SerialMultiTaskTrainingRegimen.checkpoint_and_save", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.SimpleTrainingTask.should_stop_training", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.SerialMultiTaskTrainingRegimen.checkpoint_and_save", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.MultiTaskTrainingRegimen.trigger_train_event", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.SimpleTrainingTask.training_step", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossExpr.compute", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.TrainingRegimen.backward", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.MultiTaskTrainingRegimen.update", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossExpr.get_factored_loss_val"], ["", "def", "run_training", "(", "self", ",", "save_fct", ")", ":", "\n", "    ", "dev_zero", "=", "{", "i", ":", "self", ".", "dev_zero", "for", "i", "in", "range", "(", "len", "(", "self", ".", "tasks", ")", ")", "}", "\n", "for", "cur_task_id", "in", "range", "(", "len", "(", "self", ".", "tasks", ")", ")", ":", "\n", "      ", "self", ".", "train", "=", "None", "\n", "cur_task", "=", "self", ".", "tasks", "[", "cur_task_id", "]", "\n", "cur_train_loss_tracker", "=", "self", ".", "train_loss_trackers", "[", "cur_task", "]", "\n", "task_gen", "=", "cur_task", ".", "next_minibatch", "(", ")", "\n", "if", "cur_task", ".", "run_for_epochs", ">", "0", ":", "\n", "        ", "while", "True", ":", "\n", "          ", "dy", ".", "renew_cg", "(", "immediate_compute", "=", "settings", ".", "IMMEDIATE_COMPUTE", ",", "check_validity", "=", "settings", ".", "CHECK_VALIDITY", ")", "\n", "src", ",", "trg", "=", "next", "(", "task_gen", ")", "\n", "if", "dev_zero", "[", "cur_task_id", "]", ":", "self", ".", "checkpoint_and_save", "(", "cur_task", ",", "cur_task_id", ",", "save_fct", ",", "dev_zero", ")", "\n", "with", "cur_train_loss_tracker", ".", "time_tracker", ":", "\n", "            ", "self", ".", "trigger_train_event", "(", "True", ")", "\n", "loss_builder", "=", "cur_task", ".", "training_step", "(", "src", ",", "trg", ")", "\n", "task_loss", "=", "loss_builder", ".", "compute", "(", ")", "\n", "self", ".", "backward", "(", "task_loss", ",", "self", ".", "dynet_profiling", ")", "\n", "self", ".", "update", "(", "self", ".", "trainer", ")", "\n", "", "cur_train_loss_tracker", ".", "report", "(", "trg", ",", "loss_builder", ".", "get_factored_loss_val", "(", "comb_method", "=", "self", ".", "loss_comb_method", ")", ")", "\n", "self", ".", "checkpoint_and_save", "(", "cur_task", ",", "cur_task_id", ",", "save_fct", ",", "dev_zero", ")", "\n", "if", "cur_task", ".", "should_stop_training", "(", ")", ":", "break", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.regimens.SerialMultiTaskTrainingRegimen.checkpoint_and_save": [[464, 470], ["cur_task.checkpoint_needed", "cur_task.checkpoint", "save_fct"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.SimpleTrainingTask.checkpoint_needed", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.train.tasks.SimpleTrainingTask.checkpoint"], ["", "", "", "", "def", "checkpoint_and_save", "(", "self", ",", "cur_task", ",", "cur_task_id", ",", "save_fct", ",", "dev_zero", ")", ":", "\n", "    ", "if", "dev_zero", "[", "cur_task_id", "]", "or", "cur_task", ".", "checkpoint_needed", "(", ")", ":", "\n", "      ", "dev_zero", "[", "cur_task_id", "]", "=", "False", "\n", "should_save", "=", "cur_task", ".", "checkpoint", "(", "control_learning_schedule", "=", "True", ")", "\n", "if", "should_save", ":", "\n", "        ", "save_fct", "(", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.rl.eps_greedy.EpsilonGreedy.__init__": [[19, 23], ["xnmt.persistence.bare"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "eps_prob", "=", "0", ",", "prior", "=", "bare", "(", "UniformPrior", ")", ")", ":", "\n", "    ", "self", ".", "eps_prob", "=", "eps_prob", "\n", "self", ".", "prior", "=", "prior", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.rl.eps_greedy.EpsilonGreedy.is_triggered": [[24, 25], ["numpy.random.random"], "methods", ["None"], ["", "def", "is_triggered", "(", "self", ")", ":", "return", "np", ".", "random", ".", "random", "(", ")", "<=", "self", ".", "eps_prob", "\n", "def", "get_prior", "(", "self", ")", ":", "return", "self", ".", "prior", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.rl.eps_greedy.EpsilonGreedy.get_prior": [[25, 26], ["None"], "methods", ["None"], ["def", "get_prior", "(", "self", ")", ":", "return", "self", ".", "prior", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.rl.confidence_penalty.ConfidencePenalty.__init__": [[18, 22], ["None"], "methods", ["None"], ["@", "serializable_init", "\n", "@", "register_xnmt_handler", "\n", "def", "__init__", "(", "self", ",", "weight", "=", "1.0", ")", ":", "\n", "    ", "self", ".", "weight", "=", "weight", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.rl.confidence_penalty.ConfidencePenalty.on_start_sent": [[23, 26], ["src.mask.get_valid_position"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.get_valid_position"], ["", "@", "handle_xnmt_event", "\n", "def", "on_start_sent", "(", "self", ",", "src", ")", ":", "\n", "    ", "self", ".", "valid_pos", "=", "src", ".", "mask", ".", "get_valid_position", "(", ")", "if", "src", ".", "mask", "is", "not", "None", "else", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.rl.confidence_penalty.ConfidencePenalty.calc_loss": [[27, 37], ["enumerate", "dynet.sum_batches", "neg_entropy.append", "dynet.esum", "dynet.pick_batch_elems", "dynet.sum_elems", "dynet.sum_batches", "dynet.cmult", "dynet.exp"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "def", "calc_loss", "(", "self", ",", "policy", ")", ":", "\n", "    ", "if", "self", ".", "weight", "<", "1e-8", ":", "\n", "      ", "return", "None", "\n", "", "neg_entropy", "=", "[", "]", "\n", "for", "i", ",", "ll", "in", "enumerate", "(", "policy", ")", ":", "\n", "      ", "if", "self", ".", "valid_pos", "is", "not", "None", ":", "\n", "        ", "ll", "=", "dy", ".", "pick_batch_elems", "(", "ll", ",", "self", ".", "valid_pos", "[", "i", "]", ")", "\n", "", "loss", "=", "dy", ".", "sum_batches", "(", "dy", ".", "sum_elems", "(", "dy", ".", "cmult", "(", "dy", ".", "exp", "(", "ll", ")", ",", "ll", ")", ")", ")", "\n", "neg_entropy", ".", "append", "(", "dy", ".", "sum_batches", "(", "loss", ")", ")", "\n", "", "return", "self", ".", "weight", "*", "dy", ".", "esum", "(", "neg_entropy", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.rl.policy_gradient.PolicyGradient.__init__": [[32, 59], ["xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "policy_gradient.PolicyGradient.add_serializable_component", "policy_gradient.PolicyGradient.add_serializable_component", "policy_gradient.PolicyGradient.add_serializable_component", "xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.modelparts.transforms.Linear", "xnmt.modelparts.transforms.Linear"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare"], ["@", "serializable_init", "\n", "@", "register_xnmt_handler", "\n", "def", "__init__", "(", "self", ",", "policy_network", "=", "None", ",", "\n", "baseline", "=", "None", ",", "\n", "z_normalization", "=", "True", ",", "\n", "conf_penalty", "=", "None", ",", "\n", "weight", "=", "1.0", ",", "\n", "use_baseline", "=", "True", ",", "\n", "input_dim", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "output_dim", "=", "2", ",", "\n", "param_init", "=", "Ref", "(", "\"exp_global.param_init\"", ",", "default", "=", "bare", "(", "GlorotInitializer", ")", ")", ",", "\n", "bias_init", "=", "Ref", "(", "\"exp_global.bias_init\"", ",", "default", "=", "bare", "(", "ZeroInitializer", ")", ")", ")", ":", "\n", "    ", "self", ".", "input_dim", "=", "input_dim", "\n", "self", ".", "policy_network", "=", "self", ".", "add_serializable_component", "(", "\"policy_network\"", ",", "\n", "policy_network", ",", "\n", "lambda", ":", "Linear", "(", "input_dim", "=", "self", ".", "input_dim", ",", "output_dim", "=", "output_dim", ",", "\n", "param_init", "=", "param_init", ",", "bias_init", "=", "bias_init", ")", ")", "\n", "if", "use_baseline", ":", "\n", "      ", "self", ".", "baseline", "=", "self", ".", "add_serializable_component", "(", "\"baseline\"", ",", "baseline", ",", "\n", "lambda", ":", "Linear", "(", "input_dim", "=", "self", ".", "input_dim", ",", "output_dim", "=", "1", ",", "\n", "param_init", "=", "param_init", ",", "bias_init", "=", "bias_init", ")", ")", "\n", "", "else", ":", "\n", "      ", "self", ".", "baseline", "=", "None", "\n", "\n", "", "self", ".", "confidence_penalty", "=", "self", ".", "add_serializable_component", "(", "\"conf_penalty\"", ",", "conf_penalty", ",", "lambda", ":", "conf_penalty", ")", "if", "conf_penalty", "is", "not", "None", "else", "None", "\n", "self", ".", "z_normalization", "=", "z_normalization", "\n", "self", ".", "weight", "=", "weight", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.rl.policy_gradient.PolicyGradient.sample_action": [[67, 85], ["dynet.log_softmax", "policy_gradient.PolicyGradient.policy_network.transform", "policy_gradient.PolicyGradient.sample_from_policy", "policy_gradient.PolicyGradient.policy_lls.append", "policy_gradient.PolicyGradient.actions.append", "policy_gradient.PolicyGradient.states.append", "sample_pp"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.DenseWordEmbedder.transform", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.rl.policy_gradient.PolicyGradient.sample_from_policy", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["def", "sample_action", "(", "self", ",", "state", ",", "argmax", "=", "False", ",", "sample_pp", "=", "None", ",", "predefined_actions", "=", "None", ")", ":", "\n", "    ", "policy", "=", "dy", ".", "log_softmax", "(", "self", ".", "policy_network", ".", "transform", "(", "state", ")", ")", "\n", "if", "predefined_actions", "is", "not", "None", ":", "\n", "# Use defined action value", "\n", "      ", "self", ".", "sampling_action", "=", "self", ".", "SamplingAction", ".", "PREDEFINED", "\n", "actions", "=", "predefined_actions", "\n", "", "else", ":", "\n", "# sample from policy", "\n", "      ", "sample", "=", "self", ".", "sample_from_policy", "(", "policy", ",", "argmax", "=", "argmax", ")", "\n", "if", "sample_pp", "is", "not", "None", ":", "\n", "        ", "sample", "=", "sample_pp", "(", "sample", ")", "\n", "", "actions", "=", "sample", "\n", "", "try", ":", "\n", "      ", "return", "actions", "\n", "", "finally", ":", "\n", "      ", "self", ".", "policy_lls", ".", "append", "(", "policy", ")", "\n", "self", ".", "actions", ".", "append", "(", "actions", ")", "\n", "self", ".", "states", ".", "append", "(", "state", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.rl.policy_gradient.PolicyGradient.calc_loss": [[89, 125], ["xnmt.losses.FactoredLossExpr", "enumerate", "xnmt.losses.FactoredLossExpr.add_loss", "dynet.mean_batches", "dynet.std_batches", "dynet.cdiv", "policy_gradient.PolicyGradient.calc_baseline_loss", "xnmt.losses.FactoredLossExpr.add_loss", "policy_gradient.PolicyGradient.confidence_penalty.calc_loss", "xnmt.losses.FactoredLossExpr.add_loss", "zip", "dynet.pick_batch", "reinf_loss.append", "dynet.pick_batch_elems", "dynet.pick_batch_elems", "dynet.sum_batches", "dynet.esum"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossExpr.add_loss", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.rl.policy_gradient.PolicyGradient.calc_baseline_loss", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossExpr.add_loss", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_encoder.DualEncoderSimilarity.calc_loss", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossExpr.add_loss", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["def", "calc_loss", "(", "self", ",", "reward", ")", ":", "\n", "    ", "loss", "=", "FactoredLossExpr", "(", ")", "\n", "## Z-Normalization", "\n", "if", "self", ".", "z_normalization", ":", "\n", "      ", "mean_batches", "=", "dy", ".", "mean_batches", "(", "reward", ")", "\n", "std_batches", "=", "dy", ".", "std_batches", "(", "reward", ")", "\n", "reward", "=", "dy", ".", "cdiv", "(", "reward", "-", "mean_batches", ",", "std_batches", ")", "\n", "## Calculate baseline   ", "\n", "", "if", "self", ".", "baseline", "is", "not", "None", ":", "\n", "      ", "pred_reward", ",", "baseline_loss", "=", "self", ".", "calc_baseline_loss", "(", "reward", ")", "\n", "loss", ".", "add_loss", "(", "\"rl_baseline\"", ",", "baseline_loss", ")", "\n", "## Calculate Confidence Penalty", "\n", "", "if", "self", ".", "confidence_penalty", ":", "\n", "      ", "cp_loss", "=", "self", ".", "confidence_penalty", ".", "calc_loss", "(", "self", ".", "policy_lls", ")", "\n", "loss", ".", "add_loss", "(", "\"rl_confpen\"", ",", "cp_loss", ")", "\n", "## Calculate Reinforce Loss", "\n", "", "reinf_loss", "=", "[", "]", "\n", "# Loop through all action in one sequence", "\n", "for", "i", ",", "(", "policy", ",", "action", ")", "in", "enumerate", "(", "zip", "(", "self", ".", "policy_lls", ",", "self", ".", "actions", ")", ")", ":", "\n", "# Discount the reward if we use baseline", "\n", "      ", "if", "self", ".", "baseline", "is", "not", "None", ":", "\n", "        ", "reward", "=", "reward", "-", "pred_reward", "[", "i", "]", "\n", "# Main Reinforce calculation", "\n", "", "ll", "=", "dy", ".", "pick_batch", "(", "policy", ",", "action", ")", "\n", "if", "self", ".", "valid_pos", "is", "not", "None", ":", "\n", "        ", "ll", "=", "dy", ".", "pick_batch_elems", "(", "ll", ",", "self", ".", "valid_pos", "[", "i", "]", ")", "\n", "reward_i", "=", "dy", ".", "pick_batch_elems", "(", "reward", ",", "self", ".", "valid_pos", "[", "i", "]", ")", "\n", "", "else", ":", "\n", "        ", "reward_i", "=", "reward", "\n", "", "reinf_loss", ".", "append", "(", "dy", ".", "sum_batches", "(", "-", "ll", "*", "reward_i", ")", ")", "\n", "", "loss", ".", "add_loss", "(", "\"rl_reinf\"", ",", "self", ".", "weight", "*", "dy", ".", "esum", "(", "reinf_loss", ")", ")", "\n", "## the composed losses", "\n", "try", ":", "\n", "      ", "return", "loss", "\n", "", "finally", ":", "\n", "      ", "self", ".", "reward", "=", "reward", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.rl.policy_gradient.PolicyGradient.shared_params": [[126, 129], ["None"], "methods", ["None"], ["", "", "def", "shared_params", "(", "self", ")", ":", "\n", "    ", "return", "[", "{", "\".input_dim\"", ",", "\".policy_network.input_dim\"", "}", ",", "\n", "{", "\".input_dim\"", ",", "\".baseline.input_dim\"", "}", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.rl.policy_gradient.PolicyGradient.on_start_sent": [[130, 138], ["src_sent.mask.get_valid_position"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.get_valid_position"], ["", "@", "handle_xnmt_event", "\n", "def", "on_start_sent", "(", "self", ",", "src_sent", ")", ":", "\n", "    ", "self", ".", "policy_lls", "=", "[", "]", "\n", "self", ".", "actions", "=", "[", "]", "\n", "self", ".", "states", "=", "[", "]", "\n", "self", ".", "baseline_input", "=", "None", "\n", "self", ".", "valid_pos", "=", "src_sent", ".", "mask", ".", "get_valid_position", "(", ")", "if", "src_sent", ".", "mask", "else", "None", "\n", "self", ".", "sampling_action", "=", "self", ".", "SamplingAction", ".", "NONE", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.rl.policy_gradient.PolicyGradient.sample_from_policy": [[139, 151], ["policy.dim", "policy.tensor_value().argmax().as_numpy", "policy.tensor_value().categorical_sample_log_prob().as_numpy", "policy.tensor_value().argmax", "policy.tensor_value().categorical_sample_log_prob", "policy.tensor_value", "policy.tensor_value"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["", "def", "sample_from_policy", "(", "self", ",", "policy", ",", "argmax", "=", "False", ")", ":", "\n", "    ", "batch_size", "=", "policy", ".", "dim", "(", ")", "[", "1", "]", "\n", "if", "argmax", ":", "\n", "      ", "action", "=", "policy", ".", "tensor_value", "(", ")", ".", "argmax", "(", ")", ".", "as_numpy", "(", ")", "[", "0", "]", "\n", "", "else", ":", "\n", "      ", "action", "=", "policy", ".", "tensor_value", "(", ")", ".", "categorical_sample_log_prob", "(", ")", ".", "as_numpy", "(", ")", "[", "0", "]", "\n", "", "if", "batch_size", "==", "1", ":", "\n", "      ", "action", "=", "[", "action", "]", "\n", "", "try", ":", "\n", "      ", "return", "action", "\n", "", "finally", ":", "\n", "      ", "self", ".", "sampling_action", "=", "self", ".", "SamplingAction", ".", "POLICY_CLP", "if", "not", "argmax", "else", "self", ".", "SamplingAction", ".", "POLICY_AMAX", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.rl.policy_gradient.PolicyGradient.calc_baseline_loss": [[152, 165], ["enumerate", "policy_gradient.PolicyGradient.baseline.transform", "pred_rewards.append", "losses.append", "dynet.esum", "dynet.nobackprop", "dynet.nobackprop", "dynet.pick_batch_elems", "dynet.pick_batch_elems", "dynet.sum_batches", "dynet.squared_distance", "dynet.nobackprop"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.DenseWordEmbedder.transform", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "", "def", "calc_baseline_loss", "(", "self", ",", "reward", ")", ":", "\n", "    ", "pred_rewards", "=", "[", "]", "\n", "losses", "=", "[", "]", "\n", "for", "i", ",", "state", "in", "enumerate", "(", "self", ".", "states", ")", ":", "\n", "      ", "pred_reward", "=", "self", ".", "baseline", ".", "transform", "(", "dy", ".", "nobackprop", "(", "state", ")", ")", "\n", "pred_rewards", ".", "append", "(", "dy", ".", "nobackprop", "(", "pred_reward", ")", ")", "\n", "if", "self", ".", "valid_pos", "is", "not", "None", ":", "\n", "        ", "pred_reward", "=", "dy", ".", "pick_batch_elems", "(", "pred_reward", ",", "self", ".", "valid_pos", "[", "i", "]", ")", "\n", "act_reward", "=", "dy", ".", "pick_batch_elems", "(", "reward", ",", "self", ".", "valid_pos", "[", "i", "]", ")", "\n", "", "else", ":", "\n", "        ", "act_reward", "=", "reward", "\n", "", "losses", ".", "append", "(", "dy", ".", "sum_batches", "(", "dy", ".", "squared_distance", "(", "pred_reward", ",", "dy", ".", "nobackprop", "(", "act_reward", ")", ")", ")", ")", "\n", "", "return", "pred_rewards", ",", "dy", ".", "esum", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.conv_lstm.ConvLSTMSeqTransducer.__init__": [[26, 59], ["xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.param_collections.ParamManager.my_params", "RuntimeError", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.persistence.bare", "xnmt.persistence.bare", "param_init.initializer", "param_init.initializer", "bias_init.initializer"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.my_params", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "input_dim", ":", "int", ",", "\n", "chn_dim", ":", "int", "=", "3", ",", "\n", "num_filters", ":", "int", "=", "32", ",", "\n", "param_init", ":", "param_initializers", ".", "ParamInitializer", "=", "Ref", "(", "\"exp_global.param_init\"", ",", "default", "=", "bare", "(", "param_initializers", ".", "GlorotInitializer", ")", ")", ",", "\n", "bias_init", ":", "param_initializers", ".", "ParamInitializer", "=", "Ref", "(", "\"exp_global.bias_init\"", ",", "default", "=", "bare", "(", "param_initializers", ".", "ZeroInitializer", ")", ")", ")", ":", "\n", "    ", "model", "=", "param_collections", ".", "ParamManager", ".", "my_params", "(", "self", ")", "\n", "if", "input_dim", "%", "chn_dim", "!=", "0", ":", "\n", "      ", "raise", "RuntimeError", "(", "\"input_dim must be divisible by chn_dim\"", ")", "\n", "", "self", ".", "input_dim", "=", "input_dim", "\n", "\n", "self", ".", "chn_dim", "=", "chn_dim", "\n", "self", ".", "freq_dim", "=", "input_dim", "/", "chn_dim", "\n", "self", ".", "num_filters", "=", "num_filters", "\n", "self", ".", "filter_size_time", "=", "1", "\n", "self", ".", "filter_size_freq", "=", "3", "\n", "\n", "self", ".", "params", "=", "{", "}", "\n", "for", "direction", "in", "[", "\"fwd\"", ",", "\"bwd\"", "]", ":", "\n", "      ", "dim_x", "=", "(", "self", ".", "filter_size_time", ",", "self", ".", "filter_size_freq", ",", "\n", "self", ".", "chn_dim", ",", "self", ".", "num_filters", "*", "4", ")", "\n", "self", ".", "params", "[", "\"x2all_\"", "+", "direction", "]", "=", "model", ".", "add_parameters", "(", "dim", "=", "dim_x", ",", "\n", "init", "=", "param_init", ".", "initializer", "(", "dim_x", ",", "num_shared", "=", "4", ")", ")", "\n", "dim_h", "=", "(", "self", ".", "filter_size_time", ",", "self", ".", "filter_size_freq", ",", "\n", "self", ".", "num_filters", ",", "self", ".", "num_filters", "*", "4", ")", "\n", "self", ".", "params", "[", "\"h2all_\"", "+", "direction", "]", "=", "model", ".", "add_parameters", "(", "dim", "=", "dim_h", ",", "\n", "init", "=", "param_init", ".", "initializer", "(", "dim_h", ",", "num_shared", "=", "4", ")", ")", "\n", "dim_b", "=", "(", "self", ".", "num_filters", "*", "4", ",", ")", "\n", "self", ".", "params", "[", "\"b_\"", "+", "direction", "]", "=", "model", ".", "add_parameters", "(", "dim", "=", "dim_b", ",", "init", "=", "bias_init", ".", "initializer", "(", "dim_b", ",", "num_shared", "=", "4", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.conv_lstm.ConvLSTMSeqTransducer.transduce": [[60, 115], ["len", "es.as_transposed_tensor", "dynet.reshape", "range", "xnmt.expression_seqs.ExpressionSequence", "es.as_transposed_tensor.dim", "dynet.conv2d_bias", "range", "len", "dynet.reshape", "dynet.reshape", "ret_expr.append", "dynet.parameter", "dynet.parameter", "dynet.pick_range", "dynet.reshape", "dynet.reshape", "dynet.vanilla_lstm_h", "dynet.reshape", "dynet.concatenate", "range", "dynet.conv2d", "len", "dynet.zeros", "dynet.vanilla_lstm_c", "numpy.isclose", "c.append", "h.append", "c.append", "h.append", "dynet.parameter", "numpy.sum", "mask.cmult_by_timestep_expr", "mask.cmult_by_timestep_expr", "mask.cmult_by_timestep_expr", "mask.cmult_by_timestep_expr", "state_fwd.dim", "state_fwd.dim"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.as_transposed_tensor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.cmult_by_timestep_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.cmult_by_timestep_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.cmult_by_timestep_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.cmult_by_timestep_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["", "", "def", "transduce", "(", "self", ",", "es", ":", "expression_seqs", ".", "ExpressionSequence", ")", "->", "expression_seqs", ".", "ExpressionSequence", ":", "\n", "    ", "mask", "=", "es", ".", "mask", "\n", "sent_len", "=", "len", "(", "es", ")", "\n", "es_expr", "=", "es", ".", "as_transposed_tensor", "(", ")", "\n", "batch_size", "=", "es_expr", ".", "dim", "(", ")", "[", "1", "]", "\n", "\n", "es_chn", "=", "dy", ".", "reshape", "(", "es_expr", ",", "(", "sent_len", ",", "self", ".", "freq_dim", ",", "self", ".", "chn_dim", ")", ",", "batch_size", "=", "batch_size", ")", "\n", "\n", "h_out", "=", "{", "}", "\n", "for", "direction", "in", "[", "\"fwd\"", ",", "\"bwd\"", "]", ":", "\n", "# input convolutions", "\n", "      ", "gates_xt_bias", "=", "dy", ".", "conv2d_bias", "(", "es_chn", ",", "dy", ".", "parameter", "(", "self", ".", "params", "[", "\"x2all_\"", "+", "direction", "]", ")", ",", "\n", "dy", ".", "parameter", "(", "self", ".", "params", "[", "\"b_\"", "+", "direction", "]", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "is_valid", "=", "False", ")", "\n", "gates_xt_bias_list", "=", "[", "dy", ".", "pick_range", "(", "gates_xt_bias", ",", "i", ",", "i", "+", "1", ")", "for", "i", "in", "range", "(", "sent_len", ")", "]", "\n", "\n", "h", "=", "[", "]", "\n", "c", "=", "[", "]", "\n", "for", "input_pos", "in", "range", "(", "sent_len", ")", ":", "\n", "        ", "directional_pos", "=", "input_pos", "if", "direction", "==", "\"fwd\"", "else", "sent_len", "-", "input_pos", "-", "1", "\n", "gates_t", "=", "gates_xt_bias_list", "[", "directional_pos", "]", "\n", "if", "input_pos", ">", "0", ":", "\n", "# recurrent convolutions", "\n", "          ", "gates_h_t", "=", "dy", ".", "conv2d", "(", "h", "[", "-", "1", "]", ",", "dy", ".", "parameter", "(", "self", ".", "params", "[", "\"h2all_\"", "+", "direction", "]", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "is_valid", "=", "False", ")", "\n", "gates_t", "+=", "gates_h_t", "\n", "\n", "# standard LSTM logic", "\n", "", "if", "len", "(", "c", ")", "==", "0", ":", "\n", "          ", "c_tm1", "=", "dy", ".", "zeros", "(", "(", "self", ".", "freq_dim", "*", "self", ".", "num_filters", ",", ")", ",", "batch_size", "=", "batch_size", ")", "\n", "", "else", ":", "\n", "          ", "c_tm1", "=", "c", "[", "-", "1", "]", "\n", "", "gates_t_reshaped", "=", "dy", ".", "reshape", "(", "gates_t", ",", "(", "4", "*", "self", ".", "freq_dim", "*", "self", ".", "num_filters", ",", ")", ",", "batch_size", "=", "batch_size", ")", "\n", "c_t", "=", "dy", ".", "reshape", "(", "dy", ".", "vanilla_lstm_c", "(", "c_tm1", ",", "gates_t_reshaped", ")", ",", "(", "self", ".", "freq_dim", "*", "self", ".", "num_filters", ",", ")", ",", "\n", "batch_size", "=", "batch_size", ")", "\n", "h_t", "=", "dy", ".", "vanilla_lstm_h", "(", "c_t", ",", "gates_t_reshaped", ")", "\n", "h_t", "=", "dy", ".", "reshape", "(", "h_t", ",", "(", "1", ",", "self", ".", "freq_dim", ",", "self", ".", "num_filters", ",", ")", ",", "batch_size", "=", "batch_size", ")", "\n", "\n", "if", "mask", "is", "None", "or", "np", ".", "isclose", "(", "np", ".", "sum", "(", "mask", ".", "np_arr", "[", ":", ",", "input_pos", ":", "input_pos", "+", "1", "]", ")", ",", "0.0", ")", ":", "\n", "          ", "c", ".", "append", "(", "c_t", ")", "\n", "h", ".", "append", "(", "h_t", ")", "\n", "", "else", ":", "\n", "          ", "c", ".", "append", "(", "\n", "mask", ".", "cmult_by_timestep_expr", "(", "c_t", ",", "input_pos", ",", "True", ")", "+", "mask", ".", "cmult_by_timestep_expr", "(", "c", "[", "-", "1", "]", ",", "input_pos", ",", "False", ")", ")", "\n", "h", ".", "append", "(", "\n", "mask", ".", "cmult_by_timestep_expr", "(", "h_t", ",", "input_pos", ",", "True", ")", "+", "mask", ".", "cmult_by_timestep_expr", "(", "h", "[", "-", "1", "]", ",", "input_pos", ",", "False", ")", ")", "\n", "\n", "", "", "h_out", "[", "direction", "]", "=", "h", "\n", "", "ret_expr", "=", "[", "]", "\n", "for", "state_i", "in", "range", "(", "len", "(", "h_out", "[", "\"fwd\"", "]", ")", ")", ":", "\n", "      ", "state_fwd", "=", "h_out", "[", "\"fwd\"", "]", "[", "state_i", "]", "\n", "state_bwd", "=", "h_out", "[", "\"bwd\"", "]", "[", "-", "1", "-", "state_i", "]", "\n", "output_dim", "=", "(", "state_fwd", ".", "dim", "(", ")", "[", "0", "]", "[", "1", "]", "*", "state_fwd", ".", "dim", "(", ")", "[", "0", "]", "[", "2", "]", ",", ")", "\n", "fwd_reshape", "=", "dy", ".", "reshape", "(", "state_fwd", ",", "output_dim", ",", "batch_size", "=", "batch_size", ")", "\n", "bwd_reshape", "=", "dy", ".", "reshape", "(", "state_bwd", ",", "output_dim", ",", "batch_size", "=", "batch_size", ")", "\n", "ret_expr", ".", "append", "(", "dy", ".", "concatenate", "(", "[", "fwd_reshape", ",", "bwd_reshape", "]", ",", "d", "=", "0", "if", "self", ".", "reshape_output", "else", "2", ")", ")", "\n", "", "return", "expression_seqs", ".", "ExpressionSequence", "(", "expr_list", "=", "ret_expr", ",", "mask", "=", "mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.nin_lstm.ZhangSeqTransducer.__init__": [[14, 32], ["xnmt.persistence.Ref", "nin_lstm.ZhangSeqTransducer.add_serializable_component", "nin_lstm.ZhangSeqTransducer.add_serializable_component", "nin_lstm.NinBiLSTMTransducer", "xnmt.transducers.recurrent.BiLSTMSeqTransducer"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "input_dim", ",", "hidden_dim", ",", "\n", "dropout", "=", "Ref", "(", "\"exp_global.dropout\"", ",", "default", "=", "0.0", ")", ",", "\n", "bottom_layer", "=", "None", ",", "top_layer", "=", "None", ",", "stride", "=", "2", ")", ":", "\n", "    ", "self", ".", "bottom_layer", "=", "self", ".", "add_serializable_component", "(", "\"bottom_layer\"", ",", "bottom_layer", ",", "\n", "lambda", ":", "NinBiLSTMTransducer", "(", "layers", "=", "2", ",", "\n", "input_dim", "=", "input_dim", ",", "\n", "hidden_dim", "=", "hidden_dim", ",", "\n", "stride", "=", "stride", ",", "\n", "dropout", "=", "dropout", ")", ")", "\n", "self", ".", "top_layer", "=", "self", ".", "add_serializable_component", "(", "\"top_layer\"", ",", "top_layer", ",", "\n", "lambda", ":", "recurrent", ".", "BiLSTMSeqTransducer", "(", "layers", "=", "1", ",", "\n", "input_dim", "=", "hidden_dim", ",", "\n", "hidden_dim", "=", "hidden_dim", ",", "\n", "dropout", "=", "dropout", ")", ")", "\n", "\n", "self", ".", "modules", "=", "[", "self", ".", "bottom_layer", ",", "self", ".", "top_layer", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.nin_lstm.NinBiLSTMTransducer.__init__": [[55, 86], ["xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "nin_lstm.NinBiLSTMTransducer.add_serializable_component", "nin_lstm.NinBiLSTMTransducer.add_serializable_component", "xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.persistence.bare", "nin_lstm.NinBiLSTMTransducer.init_lstm_layers", "nin_lstm.NinBiLSTMTransducer.init_nin_layers"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.nin_lstm.NinBiLSTMTransducer.init_lstm_layers", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.nin_lstm.NinBiLSTMTransducer.init_nin_layers"], ["@", "register_xnmt_handler", "\n", "@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "layers", ",", "\n", "input_dim", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "hidden_dim", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "stride", "=", "1", ",", "\n", "dropout", "=", "Ref", "(", "\"exp_global.dropout\"", ",", "default", "=", "0.0", ")", ",", "\n", "lstm_layers", "=", "None", ",", "\n", "nin_layers", "=", "None", ",", "\n", "param_init_lstm", "=", "Ref", "(", "\"exp_global.param_init\"", ",", "default", "=", "bare", "(", "param_initializers", ".", "GlorotInitializer", ")", ")", ",", "\n", "bias_init_lstm", "=", "Ref", "(", "\"exp_global.bias_init\"", ",", "default", "=", "bare", "(", "param_initializers", ".", "ZeroInitializer", ")", ")", ",", "\n", "param_init_nin", "=", "Ref", "(", "\"exp_global.param_init\"", ",", "default", "=", "bare", "(", "param_initializers", ".", "GlorotInitializer", ")", ")", ")", ":", "\n", "    ", "\"\"\"\n    \"\"\"", "\n", "assert", "layers", ">", "0", "\n", "assert", "hidden_dim", "%", "2", "==", "0", "\n", "\n", "self", ".", "lstm_layers", "=", "[", "]", "\n", "self", ".", "hidden_dim", "=", "hidden_dim", "\n", "self", ".", "stride", "=", "stride", "\n", "\n", "self", ".", "lstm_layers", "=", "self", ".", "add_serializable_component", "(", "\"lstm_layers\"", ",", "lstm_layers", ",", "\n", "lambda", ":", "self", ".", "init_lstm_layers", "(", "layers", ",", "input_dim", ",", "\n", "hidden_dim", ",", "dropout", ",", "\n", "param_init_lstm", ",", "\n", "bias_init_lstm", ")", ")", "\n", "\n", "self", ".", "nin_layers", "=", "self", ".", "add_serializable_component", "(", "\"nin_layers\"", ",", "nin_layers", ",", "\n", "lambda", ":", "self", ".", "init_nin_layers", "(", "layers", ",", "hidden_dim", ",", "\n", "param_init_nin", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.nin_lstm.NinBiLSTMTransducer.init_lstm_layers": [[87, 121], ["xnmt.transducers.recurrent.UniLSTMSeqTransducer", "xnmt.transducers.recurrent.UniLSTMSeqTransducer", "lstm_layers.append", "range", "xnmt.transducers.recurrent.UniLSTMSeqTransducer", "xnmt.transducers.recurrent.UniLSTMSeqTransducer", "lstm_layers.append", "isinstance", "isinstance", "isinstance", "isinstance", "isinstance", "isinstance", "isinstance", "isinstance"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "def", "init_lstm_layers", "(", "self", ",", "layers", ",", "input_dim", ",", "hidden_dim", ",", "dropout", ",", "param_init_lstm", ",", "bias_init_lstm", ")", ":", "\n", "    ", "lstm_layers", "=", "[", "]", "\n", "f", "=", "recurrent", ".", "UniLSTMSeqTransducer", "(", "input_dim", "=", "input_dim", ",", "\n", "hidden_dim", "=", "hidden_dim", "//", "2", ",", "\n", "dropout", "=", "dropout", ",", "\n", "param_init", "=", "param_init_lstm", "[", "0", "]", "if", "isinstance", "(", "param_init_lstm", ",", "\n", "Sequence", ")", "else", "param_init_lstm", ",", "\n", "bias_init", "=", "bias_init_lstm", "[", "0", "]", "if", "isinstance", "(", "bias_init_lstm", ",", "\n", "Sequence", ")", "else", "bias_init_lstm", ")", "\n", "b", "=", "recurrent", ".", "UniLSTMSeqTransducer", "(", "input_dim", "=", "input_dim", ",", "\n", "hidden_dim", "=", "hidden_dim", "//", "2", ",", "\n", "dropout", "=", "dropout", ",", "\n", "param_init", "=", "param_init_lstm", "[", "0", "]", "if", "isinstance", "(", "param_init_lstm", ",", "\n", "Sequence", ")", "else", "param_init_lstm", ",", "\n", "bias_init", "=", "bias_init_lstm", "[", "0", "]", "if", "isinstance", "(", "bias_init_lstm", ",", "\n", "Sequence", ")", "else", "bias_init_lstm", ")", "\n", "lstm_layers", ".", "append", "(", "[", "f", ",", "b", "]", ")", "\n", "for", "i", "in", "range", "(", "1", ",", "layers", ")", ":", "\n", "      ", "f", "=", "recurrent", ".", "UniLSTMSeqTransducer", "(", "input_dim", "=", "hidden_dim", ",", "\n", "hidden_dim", "=", "hidden_dim", "//", "2", ",", "\n", "dropout", "=", "dropout", ",", "\n", "param_init", "=", "param_init_lstm", "[", "i", "]", "if", "isinstance", "(", "param_init_lstm", ",", "\n", "Sequence", ")", "else", "param_init_lstm", ",", "\n", "bias_init", "=", "bias_init_lstm", "[", "i", "]", "if", "isinstance", "(", "bias_init_lstm", ",", "\n", "Sequence", ")", "else", "bias_init_lstm", ")", "\n", "b", "=", "recurrent", ".", "UniLSTMSeqTransducer", "(", "input_dim", "=", "hidden_dim", ",", "\n", "hidden_dim", "=", "hidden_dim", "//", "2", ",", "\n", "dropout", "=", "dropout", ",", "\n", "param_init", "=", "param_init_lstm", "[", "i", "]", "if", "isinstance", "(", "param_init_lstm", ",", "\n", "Sequence", ")", "else", "param_init_lstm", ",", "\n", "bias_init", "=", "bias_init_lstm", "[", "i", "]", "if", "isinstance", "(", "bias_init_lstm", ",", "\n", "Sequence", ")", "else", "bias_init_lstm", ")", "\n", "lstm_layers", ".", "append", "(", "[", "f", ",", "b", "]", ")", "\n", "", "return", "lstm_layers", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.nin_lstm.NinBiLSTMTransducer.init_nin_layers": [[122, 132], ["range", "xnmt.transducers.network_in_network.NinSeqTransducer", "nin_layers.append", "isinstance"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "def", "init_nin_layers", "(", "self", ",", "layers", ",", "hidden_dim", ",", "param_init_nin", ")", ":", "\n", "    ", "nin_layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "layers", ")", ":", "\n", "      ", "nin_layer", "=", "network_in_network", ".", "NinSeqTransducer", "(", "input_dim", "=", "hidden_dim", "//", "2", ",", "\n", "hidden_dim", "=", "hidden_dim", ",", "\n", "downsample_by", "=", "2", "*", "self", ".", "stride", ",", "\n", "param_init", "=", "param_init_nin", "[", "i", "]", "if", "isinstance", "(", "param_init_nin", ",", "\n", "Sequence", ")", "else", "param_init_nin", ")", "\n", "nin_layers", ".", "append", "(", "nin_layer", ")", "\n", "", "return", "nin_layers", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.nin_lstm.NinBiLSTMTransducer.on_start_sent": [[133, 136], ["None"], "methods", ["None"], ["", "@", "handle_xnmt_event", "\n", "def", "on_start_sent", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "self", ".", "_final_states", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.nin_lstm.NinBiLSTMTransducer.get_final_states": [[137, 140], ["None"], "methods", ["None"], ["", "def", "get_final_states", "(", "self", ")", ":", "\n", "    ", "assert", "self", ".", "_final_states", "is", "not", "None", ",", "\"transduce() must be invoked before get_final_states()\"", "\n", "return", "self", ".", "_final_states", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.nin_lstm.NinBiLSTMTransducer.transduce": [[141, 164], ["enumerate", "fb.transduce", "bb.transduce", "range", "xnmt.expression_seqs.ExpressionSequence", "nin_lstm.NinBiLSTMTransducer.nin_layers[].transduce", "xnmt.transducers.base.FinalTransducerState", "xnmt.expression_seqs.ReversedExpressionSequence", "es.mask.lin_subsampled", "len", "interleaved.append", "interleaved.append", "math.ceil", "len", "len", "len", "len", "float"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.lin_subsampled", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "def", "transduce", "(", "self", ",", "es", ":", "expression_seqs", ".", "ExpressionSequence", ")", "->", "expression_seqs", ".", "ExpressionSequence", ":", "\n", "\n", "    ", "for", "layer_i", ",", "(", "fb", ",", "bb", ")", "in", "enumerate", "(", "self", ".", "lstm_layers", ")", ":", "\n", "      ", "fs", "=", "fb", ".", "transduce", "(", "es", ")", "\n", "bs", "=", "bb", ".", "transduce", "(", "expression_seqs", ".", "ReversedExpressionSequence", "(", "es", ")", ")", "\n", "interleaved", "=", "[", "]", "\n", "\n", "if", "es", ".", "mask", "is", "None", ":", "mask", "=", "None", "\n", "else", ":", "\n", "        ", "mask", "=", "es", ".", "mask", ".", "lin_subsampled", "(", "0.5", ")", "# upsample the mask to encompass interleaved fwd / bwd expressions", "\n", "\n", "", "for", "pos", "in", "range", "(", "len", "(", "fs", ")", ")", ":", "\n", "        ", "interleaved", ".", "append", "(", "fs", "[", "pos", "]", ")", "\n", "interleaved", ".", "append", "(", "bs", "[", "-", "pos", "-", "1", "]", ")", "\n", "\n", "", "projected", "=", "expression_seqs", ".", "ExpressionSequence", "(", "expr_list", "=", "interleaved", ",", "mask", "=", "mask", ")", "\n", "projected", "=", "self", ".", "nin_layers", "[", "layer_i", "]", ".", "transduce", "(", "projected", ")", "\n", "assert", "math", ".", "ceil", "(", "len", "(", "es", ")", "/", "float", "(", "self", ".", "stride", ")", ")", "==", "len", "(", "projected", ")", ",", "f\"mismatched len(es)=={len(es)}, stride=={self.stride}, len(projected)=={len(projected)}\"", "\n", "es", "=", "projected", "\n", "\n", "", "self", ".", "_final_states", "=", "[", "transducers", ".", "FinalTransducerState", "(", "projected", "[", "-", "1", "]", ")", "]", "\n", "return", "projected", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.bow.BowPredictor.__init__": [[32, 53], ["xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.persistence.Ref", "super().__init__", "bow.BowPredictor.add_serializable_component", "xnmt.modelparts.transforms.Linear", "len"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "src_reader", ":", "input_readers", ".", "InputReader", ",", "\n", "trg_reader", ":", "input_readers", ".", "InputReader", ",", "\n", "src_embedder", ":", "embedders", ".", "Embedder", "=", "bare", "(", "embedders", ".", "SimpleWordEmbedder", ")", ",", "\n", "encoder", ":", "transducers", ".", "SeqTransducer", "=", "bare", "(", "recurrent", ".", "BiLSTMSeqTransducer", ")", ",", "\n", "inference", "=", "bare", "(", "inferences", ".", "IndependentOutputInference", ")", ",", "\n", "hidden_dim", ":", "int", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "output_layer", ":", "Optional", "[", "transforms", ".", "Linear", "]", "=", "None", ",", "\n", "generate_per_step", ":", "bool", "=", "False", ",", "\n", "mode", ":", "str", "=", "\"avg_mlp\"", ")", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "src_reader", "=", "src_reader", ",", "trg_reader", "=", "trg_reader", ")", "\n", "self", ".", "src_embedder", "=", "src_embedder", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "output_layer", "=", "self", ".", "add_serializable_component", "(", "\"output_layer\"", ",", "\n", "output_layer", ",", "\n", "lambda", ":", "transforms", ".", "Linear", "(", "input_dim", "=", "hidden_dim", ",", "\n", "output_dim", "=", "len", "(", "trg_reader", ".", "vocab", ")", ")", ")", "\n", "self", ".", "inference", "=", "inference", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "generate_per_step", "=", "generate_per_step", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.bow.BowPredictor.shared_params": [[54, 57], ["None"], "methods", ["None"], ["", "def", "shared_params", "(", "self", ")", ":", "\n", "    ", "return", "[", "{", "\".src_embedder.emb_dim\"", ",", "\".encoder.input_dim\"", "}", ",", "\n", "{", "\".encoder.hidden_dim\"", ",", "\".mlp_layer.input_dim\"", "}", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.bow.BowPredictor.calc_nll": [[58, 99], ["xnmt.event_trigger.start_sent", "bow.BowPredictor.src_embedder.embed_sent", "bow.BowPredictor.encoder.transduce", "range", "dynet.sparse_inputTensor", "dynet.binary_log_loss", "xnmt.batchers.is_batched", "xnmt.batchers.mark_as_batch", "dynet.logistic", "xnmt.batchers.mark_as_batch.batch_size", "set", "bow.BowPredictor.output_layer.transform", "enumerate", "dynet.logistic", "ValueError", "numpy.ones", "dynet.cdiv", "[].main_expr", "bow.BowPredictor.output_layer.transform", "enc_lin.append", "dynet.cdiv", "idxs[].append", "idxs[].append", "len", "dynet.sum_dim", "dynet.inputTensor", "dynet.sum_dim", "dynet.cmult", "dynet.esum", "dynet.inputTensor", "dynet.esum", "dynet.logistic.dim", "bow.BowPredictor.as_tensor", "numpy.sum", "bow.BowPredictor.as_tensor", "numpy.sum", "dynet.inputTensor", "numpy.sum", "dynet.logistic.dim", "bow.BowPredictor.dim", "bow.BowPredictor.encoder.get_final_states", "bow.BowPredictor.dim"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.start_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.embed_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.batch_size", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.DenseWordEmbedder.transform", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.base.FinalTransducerState.main_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.DenseWordEmbedder.transform", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.get_final_states", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["", "def", "calc_nll", "(", "self", ",", "src", ",", "trg", ")", ":", "\n", "    ", "event_trigger", ".", "start_sent", "(", "src", ")", "\n", "embeddings", "=", "self", ".", "src_embedder", ".", "embed_sent", "(", "src", ")", "\n", "encodings", "=", "self", ".", "encoder", ".", "transduce", "(", "embeddings", ")", "\n", "if", "not", "batchers", ".", "is_batched", "(", "trg", ")", ":", "trg", "=", "batchers", ".", "mark_as_batch", "(", "[", "trg", "]", ")", "\n", "\n", "if", "self", ".", "mode", "in", "[", "\"avg_mlp\"", ",", "\"final_mlp\"", "]", ":", "\n", "      ", "if", "self", ".", "mode", "==", "\"avg_mlp\"", ":", "\n", "        ", "if", "encodings", ".", "mask", ":", "\n", "          ", "encoding_fixed_size", "=", "dy", ".", "cdiv", "(", "dy", ".", "sum_dim", "(", "encodings", ".", "as_tensor", "(", ")", ",", "[", "1", "]", ")", ",", "\n", "dy", ".", "inputTensor", "(", "np", ".", "sum", "(", "1.0", "-", "encodings", ".", "mask", ".", "np_arr", ",", "axis", "=", "1", ")", ",", "batched", "=", "True", ")", ")", "\n", "", "else", ":", "\n", "          ", "encoding_fixed_size", "=", "dy", ".", "sum_dim", "(", "encodings", ".", "as_tensor", "(", ")", ",", "[", "1", "]", ")", "/", "encodings", ".", "dim", "(", ")", "[", "0", "]", "[", "1", "]", "\n", "", "", "elif", "self", ".", "mode", "==", "\"final_mlp\"", ":", "\n", "        ", "encoding_fixed_size", "=", "self", ".", "encoder", ".", "get_final_states", "(", ")", "[", "-", "1", "]", ".", "main_expr", "(", ")", "\n", "", "scores", "=", "dy", ".", "logistic", "(", "self", ".", "output_layer", ".", "transform", "(", "encoding_fixed_size", ")", ")", "\n", "", "elif", "self", ".", "mode", "==", "\"lin_sum_sig\"", ":", "\n", "      ", "enc_lin", "=", "[", "]", "\n", "for", "step_i", ",", "enc_i", "in", "enumerate", "(", "encodings", ")", ":", "\n", "        ", "step_linear", "=", "self", ".", "output_layer", ".", "transform", "(", "enc_i", ")", "\n", "if", "encodings", ".", "mask", "and", "np", ".", "sum", "(", "encodings", ".", "mask", ".", "np_arr", "[", ":", ",", "step_i", "]", ")", ">", "0", ":", "\n", "          ", "step_linear", "=", "dy", ".", "cmult", "(", "step_linear", ",", "dy", ".", "inputTensor", "(", "1.0", "-", "encodings", ".", "mask", ".", "np_arr", "[", ":", ",", "step_i", "]", ",", "batched", "=", "True", ")", ")", "\n", "", "enc_lin", ".", "append", "(", "step_linear", ")", "\n", "", "if", "encodings", ".", "mask", ":", "\n", "        ", "encoding_fixed_size", "=", "dy", ".", "cdiv", "(", "dy", ".", "esum", "(", "enc_lin", ")", ",", "\n", "dy", ".", "inputTensor", "(", "np", ".", "sum", "(", "1.0", "-", "encodings", ".", "mask", ".", "np_arr", ",", "axis", "=", "1", ")", ",", "batched", "=", "True", ")", ")", "\n", "", "else", ":", "\n", "        ", "encoding_fixed_size", "=", "dy", ".", "esum", "(", "enc_lin", ")", "/", "encodings", ".", "dim", "(", ")", "[", "0", "]", "[", "1", "]", "\n", "", "scores", "=", "dy", ".", "logistic", "(", "encoding_fixed_size", ")", "\n", "\n", "", "else", ":", "raise", "ValueError", "(", "f\"unknown mode '{self.mode}'\"", ")", "\n", "\n", "idxs", "=", "(", "[", "]", ",", "[", "]", ")", "\n", "for", "batch_i", "in", "range", "(", "trg", ".", "batch_size", "(", ")", ")", ":", "\n", "      ", "for", "word", "in", "set", "(", "trg", "[", "batch_i", "]", ")", ":", "\n", "        ", "if", "word", "not", "in", "{", "vocabs", ".", "Vocab", ".", "ES", ",", "vocabs", ".", "Vocab", ".", "SS", "}", ":", "\n", "          ", "idxs", "[", "0", "]", ".", "append", "(", "word", ")", "\n", "idxs", "[", "1", "]", ".", "append", "(", "batch_i", ")", "\n", "", "", "", "trg_scores", "=", "dy", ".", "sparse_inputTensor", "(", "idxs", ",", "values", "=", "np", ".", "ones", "(", "len", "(", "idxs", "[", "0", "]", ")", ")", ",", "shape", "=", "scores", ".", "dim", "(", ")", "[", "0", "]", "+", "(", "scores", ".", "dim", "(", ")", "[", "1", "]", ",", ")", ",", "batched", "=", "True", ",", ")", "\n", "loss_expr", "=", "dy", ".", "binary_log_loss", "(", "scores", ",", "trg_scores", ")", "\n", "return", "loss_expr", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.bow.BowPredictor.generate": [[100, 156], ["xnmt.event_trigger.start_sent", "bow.BowPredictor.src_embedder.embed_sent", "bow.BowPredictor.encoder.transduce", "xnmt.batchers.is_batched", "numpy.sum", "outputs.append", "dynet.logistic.npvalue", "list", "numpy.sum", "outputs.append", "src.batch_size", "dynet.logistic", "enumerate", "ValueError", "numpy.argmax", "xnmt.sent.SimpleSentence", "xnmt.sent.SimpleSentence", "dynet.logistic", "bow.BowPredictor.output_layer.transform", "bow.BowPredictor.output_layer.transform", "enc_lin.append", "dynet.logistic", "score_i.npvalue", "numpy.max", "numpy.nonzero", "bow.BowPredictor.output_layer.transform", "dynet.sum_dim", "[].main_expr", "dynet.cmult", "dynet.logistic", "dynet.cdiv", "score_i.npvalue", "getattr", "getattr", "bow.BowPredictor.as_tensor", "numpy.sum", "dynet.inputTensor", "dynet.esum", "dynet.inputTensor", "dynet.esum", "numpy.sum", "bow.BowPredictor.dim", "bow.BowPredictor.encoder.get_final_states", "bow.BowPredictor.dim"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.start_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.embed_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.batch_size", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.DenseWordEmbedder.transform", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.DenseWordEmbedder.transform", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.DenseWordEmbedder.transform", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.base.FinalTransducerState.main_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.get_final_states", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["", "def", "generate", "(", "self", ",", "src", ",", "forced_trg_ids", ")", ":", "\n", "    ", "assert", "not", "forced_trg_ids", "\n", "assert", "batchers", ".", "is_batched", "(", "src", ")", "and", "src", ".", "batch_size", "(", ")", "==", "1", ",", "\"batched generation not fully implemented\"", "\n", "src", "=", "src", "[", "0", "]", "\n", "# Generating outputs", "\n", "outputs", "=", "[", "]", "\n", "event_trigger", ".", "start_sent", "(", "src", ")", "\n", "embeddings", "=", "self", ".", "src_embedder", ".", "embed_sent", "(", "src", ")", "\n", "encodings", "=", "self", ".", "encoder", ".", "transduce", "(", "embeddings", ")", "\n", "if", "self", ".", "mode", "in", "[", "\"avg_mlp\"", ",", "\"final_mlp\"", "]", ":", "\n", "      ", "if", "self", ".", "generate_per_step", ":", "\n", "        ", "assert", "self", ".", "mode", "==", "\"avg_mlp\"", ",", "\"final_mlp not supported with generate_per_step=True\"", "\n", "scores", "=", "[", "dy", ".", "logistic", "(", "self", ".", "output_layer", ".", "transform", "(", "enc_i", ")", ")", "for", "enc_i", "in", "encodings", "]", "\n", "", "else", ":", "\n", "        ", "if", "self", ".", "mode", "==", "\"avg_mlp\"", ":", "\n", "          ", "encoding_fixed_size", "=", "dy", ".", "sum_dim", "(", "encodings", ".", "as_tensor", "(", ")", ",", "[", "1", "]", ")", "*", "(", "1.0", "/", "encodings", ".", "dim", "(", ")", "[", "0", "]", "[", "1", "]", ")", "\n", "", "elif", "self", ".", "mode", "==", "\"final_mlp\"", ":", "\n", "          ", "encoding_fixed_size", "=", "self", ".", "encoder", ".", "get_final_states", "(", ")", "[", "-", "1", "]", ".", "main_expr", "(", ")", "\n", "", "scores", "=", "dy", ".", "logistic", "(", "self", ".", "output_layer", ".", "transform", "(", "encoding_fixed_size", ")", ")", "\n", "", "", "elif", "self", ".", "mode", "==", "\"lin_sum_sig\"", ":", "\n", "      ", "enc_lin", "=", "[", "]", "\n", "for", "step_i", ",", "enc_i", "in", "enumerate", "(", "encodings", ")", ":", "\n", "        ", "step_linear", "=", "self", ".", "output_layer", ".", "transform", "(", "enc_i", ")", "\n", "if", "encodings", ".", "mask", "and", "np", ".", "sum", "(", "encodings", ".", "mask", ".", "np_arr", "[", ":", ",", "step_i", "]", ")", ">", "0", ":", "\n", "          ", "step_linear", "=", "dy", ".", "cmult", "(", "step_linear", ",", "dy", ".", "inputTensor", "(", "1.0", "-", "encodings", ".", "mask", ".", "np_arr", "[", ":", ",", "step_i", "]", ",", "batched", "=", "True", ")", ")", "\n", "", "enc_lin", ".", "append", "(", "step_linear", ")", "\n", "", "if", "self", ".", "generate_per_step", ":", "\n", "        ", "scores", "=", "[", "dy", ".", "logistic", "(", "enc_i", ")", "for", "enc_i", "in", "enc_lin", "]", "\n", "", "else", ":", "\n", "        ", "if", "encodings", ".", "mask", ":", "\n", "          ", "encoding_fixed_size", "=", "dy", ".", "cdiv", "(", "dy", ".", "esum", "(", "enc_lin", ")", ",", "\n", "dy", ".", "inputTensor", "(", "np", ".", "sum", "(", "1.0", "-", "encodings", ".", "mask", ".", "np_arr", ",", "axis", "=", "1", ")", ",", "batched", "=", "True", ")", ")", "\n", "", "else", ":", "\n", "          ", "encoding_fixed_size", "=", "dy", ".", "esum", "(", "enc_lin", ")", "/", "encodings", ".", "dim", "(", ")", "[", "0", "]", "[", "1", "]", "\n", "", "scores", "=", "dy", ".", "logistic", "(", "encoding_fixed_size", ")", "\n", "", "", "else", ":", "\n", "      ", "raise", "ValueError", "(", "f\"unknown mode '{self.mode}'\"", ")", "\n", "\n", "", "if", "self", ".", "generate_per_step", ":", "\n", "      ", "output_actions", "=", "[", "np", ".", "argmax", "(", "score_i", ".", "npvalue", "(", ")", ")", "for", "score_i", "in", "scores", "]", "\n", "score", "=", "np", ".", "sum", "(", "[", "np", ".", "max", "(", "score_i", ".", "npvalue", "(", ")", ")", "for", "score_i", "in", "scores", "]", ")", "\n", "outputs", ".", "append", "(", "sent", ".", "SimpleSentence", "(", "words", "=", "output_actions", ",", "\n", "idx", "=", "src", ".", "idx", ",", "\n", "vocab", "=", "getattr", "(", "self", ".", "trg_reader", ",", "\"vocab\"", ",", "None", ")", ",", "\n", "score", "=", "score", ",", "\n", "output_procs", "=", "self", ".", "trg_reader", ".", "output_procs", ")", ")", "\n", "", "else", ":", "\n", "      ", "scores_arr", "=", "scores", ".", "npvalue", "(", ")", "\n", "output_actions", "=", "list", "(", "np", ".", "nonzero", "(", "scores_arr", ">", "0.5", ")", "[", "0", "]", ")", "\n", "score", "=", "np", ".", "sum", "(", "scores_arr", "[", "scores_arr", ">", "0.5", "]", ")", "\n", "outputs", ".", "append", "(", "sent", ".", "SimpleSentence", "(", "words", "=", "output_actions", ",", "\n", "idx", "=", "src", ".", "idx", ",", "\n", "vocab", "=", "getattr", "(", "self", ".", "trg_reader", ",", "\"vocab\"", ",", "None", ")", ",", "\n", "score", "=", "score", ",", "\n", "output_procs", "=", "self", ".", "trg_reader", ".", "output_procs", ")", ")", "\n", "", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.bow.BowPredictor.set_trg_vocab": [[157, 165], ["None"], "methods", ["None"], ["", "def", "set_trg_vocab", "(", "self", ",", "trg_vocab", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Set target vocab for generating outputs. If not specified, word IDs are generated instead.\n\n    Args:\n      trg_vocab (Vocab): target vocab, or None to generate word IDs\n    \"\"\"", "\n", "self", ".", "trg_vocab", "=", "trg_vocab", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.bow.BowPredictor.get_nobp_state": [[166, 169], ["state.rnn_state.output"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMState.output"], ["", "def", "get_nobp_state", "(", "self", ",", "state", ")", ":", "\n", "    ", "output_state", "=", "state", ".", "rnn_state", ".", "output", "(", ")", "\n", "return", "output_state", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.bow.BowFMeasureEvaluator.__init__": [[173, 177], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "case_sensitive", "=", "False", ",", "write_sentence_scores", ":", "Optional", "[", "str", "]", "=", "None", ")", "->", "None", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "write_sentence_scores", "=", "write_sentence_scores", ")", "\n", "self", ".", "case_sensitive", "=", "case_sensitive", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.bow.BowFMeasureEvaluator.evaluate_one_sent": [[178, 185], ["set", "set", "xnmt.eval.metrics.FMeasure", "ref_i.lower", "hyp_i.lower", "len", "len", "len"], "methods", ["None"], ["", "def", "evaluate_one_sent", "(", "self", ",", "ref", ":", "Sequence", "[", "str", "]", ",", "hyp", ":", "Sequence", "[", "str", "]", ")", ":", "\n", "    ", "if", "not", "self", ".", "case_sensitive", ":", "\n", "      ", "ref", "=", "[", "ref_i", ".", "lower", "(", ")", "for", "ref_i", "in", "ref", "]", "\n", "hyp", "=", "[", "hyp_i", ".", "lower", "(", ")", "for", "hyp_i", "in", "hyp", "]", "\n", "", "ref_set", "=", "set", "(", "ref", ")", "\n", "hyp_set", "=", "set", "(", "hyp", ")", "\n", "return", "metrics", ".", "FMeasure", "(", "true_pos", "=", "len", "(", "hyp_set", "&", "ref_set", ")", ",", "false_neg", "=", "len", "(", "ref_set", "-", "hyp_set", ")", ",", "false_pos", "=", "len", "(", "hyp_set", "-", "ref_set", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.semi_disc.SemiDiscreteSeqTransducer.__init__": [[25, 60], ["xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.param_collections.ParamManager.my_params", "semi_disc.SemiDiscreteSeqTransducer.add_serializable_component", "xnmt.param_collections.ParamManager.my_params.add_parameters", "len", "xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.modelparts.transforms.Linear", "param_init.initializer"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.my_params", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer"], ["@", "events", ".", "register_xnmt_handler", "\n", "@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "input_dim", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "softmax_dim", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "output_dim", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "dropout", "=", "Ref", "(", "\"exp_global.dropout\"", ",", "default", "=", "0.0", ")", ",", "\n", "residual", "=", "False", ",", "\n", "linear_layer", "=", "None", ",", "\n", "vocab", "=", "None", ",", "\n", "gumbel", "=", "False", ",", "\n", "param_init", "=", "Ref", "(", "\"exp_global.param_init\"", ",", "default", "=", "bare", "(", "param_initializers", ".", "GlorotInitializer", ")", ")", ",", "\n", "bias_init", "=", "Ref", "(", "\"exp_global.bias_init\"", ",", "default", "=", "bare", "(", "param_initializers", ".", "ZeroInitializer", ")", ")", ")", ":", "\n", "    ", "param_col", "=", "param_collections", ".", "ParamManager", ".", "my_params", "(", "self", ")", "\n", "self", ".", "input_dim", "=", "input_dim", "\n", "if", "vocab", ":", "\n", "      ", "softmax_dim", "=", "len", "(", "vocab", ")", "\n", "", "self", ".", "softmax_dim", "=", "softmax_dim", "\n", "self", ".", "output_dim", "=", "output_dim", "\n", "self", ".", "dropout_rate", "=", "dropout", "\n", "self", ".", "residual", "=", "residual", "\n", "self", ".", "gumbel", "=", "gumbel", "\n", "if", "self", ".", "residual", ":", "assert", "self", ".", "input_dim", "==", "self", ".", "output_dim", "\n", "\n", "self", ".", "linear_layer", "=", "self", ".", "add_serializable_component", "(", "\"linear_layer\"", ",", "\n", "linear_layer", ",", "\n", "lambda", ":", "transforms", ".", "Linear", "(", "input_dim", "=", "self", ".", "softmax_dim", ",", "\n", "output_dim", "=", "self", ".", "output_dim", ",", "\n", "bias", "=", "False", ",", "\n", "param_init", "=", "param_init", ",", "\n", "bias_init", "=", "bias_init", ")", ")", "\n", "\n", "# self.p_W = param_col.add_parameters(dim=(softmax_dim, input_dim), init=param_init.initializer((softmax_dim, input_dim)))", "\n", "# self.p_b = param_col.add_parameters(dim=(softmax_dim), init=bias_init.initializer((softmax_dim,)))", "\n", "self", ".", "p_E", "=", "param_col", ".", "add_parameters", "(", "dim", "=", "(", "output_dim", ",", "softmax_dim", ")", ",", "init", "=", "param_init", ".", "initializer", "(", "(", "output_dim", ",", "softmax_dim", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.semi_disc.SemiDiscreteSeqTransducer.on_set_train": [[61, 64], ["None"], "methods", ["None"], ["", "@", "events", ".", "handle_xnmt_event", "\n", "def", "on_set_train", "(", "self", ",", "val", ")", ":", "\n", "    ", "self", ".", "train", "=", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.semi_disc.SemiDiscreteSeqTransducer.get_final_states": [[65, 67], ["None"], "methods", ["None"], ["", "def", "get_final_states", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "_final_states", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.semi_disc.SemiDiscreteSeqTransducer.transduce": [[68, 99], ["len", "range", "xnmt.expression_seqs.ExpressionSequence", "expr_seq[].dim", "semi_disc.SemiDiscreteSeqTransducer.linear_layer", "dynet.softmax", "output_exps.append", "xnmt.transducers.base.FinalTransducerState", "dynet.dropout", "dynet.parameter", "dynet.random_gumbel", "dynet.dropout.dim"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["", "def", "transduce", "(", "self", ",", "expr_seq", ":", "'expression_seqs.ExpressionSequence'", ")", ":", "\n", "    ", "\"\"\"\n    transduce the sequence\n\n    Args:\n      expr_seq: expression sequence\n    Returns:\n      expression sequence\n    \"\"\"", "\n", "batch_size", "=", "expr_seq", "[", "0", "]", ".", "dim", "(", ")", "[", "1", "]", "\n", "seq_len", "=", "len", "(", "expr_seq", ")", "\n", "\n", "output_exps", "=", "[", "]", "\n", "for", "pos_i", "in", "range", "(", "seq_len", ")", ":", "\n", "      ", "input_i", "=", "expr_seq", "[", "pos_i", "]", "\n", "affine", "=", "self", ".", "linear_layer", "(", "input_i", ")", "\n", "# affine = dy.affine_transform([dy.parameter(self.p_b), dy.parameter(self.p_W), input_i])", "\n", "if", "self", ".", "train", "and", "self", ".", "dropout_rate", ":", "\n", "        ", "affine", "=", "dy", ".", "dropout", "(", "affine", ",", "self", ".", "dropout_rate", ")", "\n", "", "if", "self", ".", "gumbel", ":", "\n", "        ", "affine", "=", "affine", "+", "dy", ".", "random_gumbel", "(", "dim", "=", "affine", ".", "dim", "(", ")", "[", "0", "]", ",", "batch_size", "=", "batch_size", ")", "\n", "", "softmax_out", "=", "dy", ".", "softmax", "(", "affine", ")", "\n", "# embedded = self.emb_layer(softmax_out)", "\n", "embedded", "=", "dy", ".", "parameter", "(", "self", ".", "p_E", ")", "*", "softmax_out", "\n", "if", "self", ".", "residual", ":", "\n", "        ", "embedded", "=", "embedded", "+", "input_i", "\n", "", "output_exps", ".", "append", "(", "embedded", ")", "\n", "\n", "", "self", ".", "_final_states", "=", "[", "transducers", ".", "FinalTransducerState", "(", "main_expr", "=", "embedded", ")", "]", "\n", "\n", "return", "expression_seqs", ".", "ExpressionSequence", "(", "expr_list", "=", "output_exps", ",", "mask", "=", "expr_seq", ".", "mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.semi_disc.EntropyLossSeqTransducer.__init__": [[118, 147], ["xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "semi_disc.EntropyLossSeqTransducer.add_serializable_component", "len", "xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.modelparts.transforms.Linear"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare"], ["@", "events", ".", "register_xnmt_handler", "\n", "@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "transducer", ":", "transducers", ".", "SeqTransducer", ",", "\n", "input_dim", ":", "int", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "softmax_dim", ":", "int", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "layer_dim", ":", "int", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "linear_layer", ":", "transforms", ".", "Linear", "=", "None", ",", "\n", "vocab", ":", "Optional", "[", "vocabs", ".", "Vocab", "]", "=", "None", ",", "\n", "scale", ":", "float", "=", "1.0", ",", "\n", "mode", ":", "str", "=", "\"entropy\"", ",", "\n", "param_init", ":", "param_initializers", ".", "ParamInitializer", "=", "Ref", "(", "\"exp_global.param_init\"", ",", "default", "=", "bare", "(", "param_initializers", ".", "GlorotInitializer", ")", ")", ",", "\n", "bias_init", ":", "param_initializers", ".", "ParamInitializer", "=", "Ref", "(", "\"exp_global.bias_init\"", ",", "default", "=", "bare", "(", "param_initializers", ".", "ZeroInitializer", ")", ")", ")", ":", "\n", "    ", "self", ".", "transducer", "=", "transducer", "\n", "self", ".", "input_dim", "=", "input_dim", "\n", "if", "vocab", ":", "\n", "      ", "softmax_dim", "=", "len", "(", "vocab", ")", "\n", "", "self", ".", "softmax_dim", "=", "softmax_dim", "\n", "self", ".", "layer_dim", "=", "layer_dim", "\n", "self", ".", "scale", "=", "scale", "\n", "self", ".", "mode", "=", "mode", "\n", "\n", "self", ".", "linear_layer", "=", "self", ".", "add_serializable_component", "(", "\"linear_layer\"", ",", "\n", "linear_layer", ",", "\n", "lambda", ":", "transforms", ".", "Linear", "(", "input_dim", "=", "self", ".", "softmax_dim", ",", "\n", "output_dim", "=", "self", ".", "layer_dim", ",", "\n", "bias", "=", "False", ",", "\n", "param_init", "=", "param_init", ",", "\n", "bias_init", "=", "bias_init", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.semi_disc.EntropyLossSeqTransducer.get_final_states": [[149, 151], ["semi_disc.EntropyLossSeqTransducer.transducer.get_final_states"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.get_final_states"], ["", "def", "get_final_states", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "transducer", ".", "get_final_states", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.semi_disc.EntropyLossSeqTransducer.transduce": [[152, 155], ["semi_disc.EntropyLossSeqTransducer.transducer.transduce"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce"], ["", "def", "transduce", "(", "self", ",", "expr_seq", ")", ":", "\n", "    ", "self", ".", "last_output", "=", "self", ".", "transducer", ".", "transduce", "(", "expr_seq", ")", "\n", "return", "self", ".", "last_output", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.semi_disc.EntropyLossSeqTransducer.on_calc_additional_loss": [[156, 177], ["len", "range", "xnmt.losses.FactoredLossExpr", "semi_disc.EntropyLossSeqTransducer.linear_layer", "dynet.softmax", "dynet.sum_dim", "ValueError", "dynet.cmult", "dynet.log", "dynet.log", "dynet.max_dim"], "methods", ["None"], ["", "@", "events", ".", "handle_xnmt_event", "\n", "def", "on_calc_additional_loss", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "seq_len", "=", "len", "(", "self", ".", "last_output", ")", "\n", "\n", "loss_expr", "=", "0", "\n", "for", "pos_i", "in", "range", "(", "seq_len", ")", ":", "\n", "      ", "input_i", "=", "self", ".", "last_output", "[", "pos_i", "]", "\n", "affine", "=", "self", ".", "linear_layer", "(", "input_i", ")", "\n", "softmax_out", "=", "dy", ".", "softmax", "(", "affine", ")", "\n", "if", "self", ".", "mode", "==", "\"entropy\"", ":", "\n", "        ", "loss_expr", "=", "loss_expr", "-", "dy", ".", "sum_dim", "(", "dy", ".", "cmult", "(", "dy", ".", "log", "(", "softmax_out", ")", ",", "\n", "softmax_out", ")", ",", "\n", "d", "=", "[", "0", "]", ")", "\n", "", "elif", "self", ".", "mode", "==", "\"max\"", ":", "\n", "        ", "loss_expr", "=", "loss_expr", "-", "dy", ".", "log", "(", "dy", ".", "max_dim", "(", "softmax_out", ")", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "f\"unknown mode {self.mode}\"", ")", "\n", "# loss_expr = loss_expr * (self.scale / seq_len)", "\n", "", "", "loss_expr", "=", "loss_expr", "*", "self", ".", "scale", "\n", "\n", "return", "losses", ".", "FactoredLossExpr", "(", "{", "\"enc_entropy\"", ":", "loss_expr", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_encoder.DualEncoderSimilarity.__init__": [[11, 18], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "src_reader", ",", "trg_reader", ",", "src_embedder", ",", "src_encoder", ",", "trg_embedder", ",", "trg_encoder", ")", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "src_reader", ",", "trg_reader", ")", "\n", "self", ".", "src_embedder", "=", "src_embedder", "\n", "self", ".", "src_encoder", "=", "src_encoder", "\n", "self", ".", "trg_embedder", "=", "trg_embedder", "\n", "self", ".", "trg_encoder", "=", "trg_encoder", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_encoder.DualEncoderSimilarity.calc_loss": [[19, 33], ["xnmt.event_trigger.start_sent", "dual_encoder.DualEncoderSimilarity.src_embedder.embed_sent", "dual_encoder.DualEncoderSimilarity.src_encoder", "dual_encoder.DualEncoderSimilarity.trg_embedder.embed_sent", "dual_encoder.DualEncoderSimilarity.trg_encoder", "xnmt.losses.FactoredLossExpr", "xnmt.losses.FactoredLossExpr.add_loss", "loss_calculator"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.start_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.embed_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.embed_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.losses.FactoredLossExpr.add_loss"], ["", "def", "calc_loss", "(", "self", ",", "src", ",", "trg", ",", "loss_calculator", ")", ":", "\n", "\n", "    ", "event_trigger", ".", "start_sent", "(", "src", ")", "\n", "\n", "src_embeddings", "=", "self", ".", "src_embedder", ".", "embed_sent", "(", "src", ")", "\n", "src_encodings", "=", "self", ".", "src_encoder", "(", "src_embeddings", ")", "\n", "\n", "trg_embeddings", "=", "self", ".", "trg_embedder", ".", "embed_sent", "(", "trg", ")", "\n", "trg_encodings", "=", "self", ".", "trg_encoder", "(", "trg_embeddings", ")", "\n", "\n", "model_loss", "=", "losses", ".", "FactoredLossExpr", "(", ")", "\n", "model_loss", ".", "add_loss", "(", "\"dist\"", ",", "loss_calculator", "(", "src_encodings", ",", "trg_encodings", ")", ")", "\n", "\n", "return", "model_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_encoder.DistLoss.__init__": [[38, 44], ["callable", "getattr"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "dist_op", "=", "\"squared_norm\"", ")", ":", "\n", "    ", "if", "callable", "(", "dist_op", ")", ":", "\n", "      ", "self", ".", "dist_op", "=", "dist_op", "\n", "", "else", ":", "\n", "      ", "self", ".", "dist_op", "=", "getattr", "(", "dy", ",", "dist_op", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_encoder.DistLoss.__call__": [[45, 49], ["dual_encoder.DistLoss.dist_op", "dynet.sum_dim", "dynet.sum_dim", "src_encodings.as_tensor", "trg_encodings.as_tensor", "src_encodings.as_tensor().dim", "trg_encodings.as_tensor().dim", "src_encodings.as_tensor", "trg_encodings.as_tensor"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor"], ["", "", "def", "__call__", "(", "self", ",", "src_encodings", ",", "trg_encodings", ")", ":", "\n", "    ", "src_avg", "=", "dy", ".", "sum_dim", "(", "src_encodings", ".", "as_tensor", "(", ")", ",", "[", "1", "]", ")", "/", "(", "src_encodings", ".", "as_tensor", "(", ")", ".", "dim", "(", ")", "[", "0", "]", "[", "1", "]", ")", "\n", "trg_avg", "=", "dy", ".", "sum_dim", "(", "trg_encodings", ".", "as_tensor", "(", ")", ",", "[", "1", "]", ")", "/", "(", "trg_encodings", ".", "as_tensor", "(", ")", ".", "dim", "(", ")", "[", "0", "]", "[", "1", "]", ")", "\n", "return", "self", ".", "dist_op", "(", "src_avg", "-", "trg_avg", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.quasi_lstm.QLSTMSeqTransducer.__init__": [[18, 38], ["xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.param_collections.ParamManager.my_params", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.param_collections.ParamManager.my_params.add_parameters", "xnmt.persistence.bare", "xnmt.persistence.bare", "param_init.initializer", "bias_init.initializer"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.my_params", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer"], ["@", "events", ".", "register_xnmt_handler", "\n", "@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "input_dim", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "hidden_dim", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "dropout", "=", "Ref", "(", "\"exp_global.dropout\"", ",", "default", "=", "0.0", ")", ",", "\n", "filter_width", "=", "2", ",", "\n", "stride", "=", "1", ",", "\n", "param_init", "=", "Ref", "(", "\"exp_global.param_init\"", ",", "default", "=", "bare", "(", "param_initializers", ".", "GlorotInitializer", ")", ")", ",", "\n", "bias_init", "=", "Ref", "(", "\"exp_global.bias_init\"", ",", "default", "=", "bare", "(", "param_initializers", ".", "ZeroInitializer", ")", ")", ")", ":", "\n", "    ", "model", "=", "param_collections", ".", "ParamManager", ".", "my_params", "(", "self", ")", "\n", "self", ".", "hidden_dim", "=", "hidden_dim", "\n", "self", ".", "dropout", "=", "dropout", "\n", "self", ".", "input_dim", "=", "input_dim", "\n", "self", ".", "stride", "=", "stride", "\n", "\n", "dim_f", "=", "(", "filter_width", ",", "1", ",", "input_dim", ",", "hidden_dim", "*", "3", ")", "\n", "self", ".", "p_f", "=", "model", ".", "add_parameters", "(", "dim", "=", "dim_f", ",", "init", "=", "param_init", ".", "initializer", "(", "dim_f", ",", "num_shared", "=", "3", ")", ")", "# f, o, z", "\n", "dim_b", "=", "(", "hidden_dim", "*", "3", ",", ")", "\n", "self", ".", "p_b", "=", "model", ".", "add_parameters", "(", "dim", "=", "dim_b", ",", "init", "=", "bias_init", ".", "initializer", "(", "dim_b", ",", "num_shared", "=", "3", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.quasi_lstm.QLSTMSeqTransducer.on_set_train": [[39, 42], ["None"], "methods", ["None"], ["", "@", "events", ".", "handle_xnmt_event", "\n", "def", "on_set_train", "(", "self", ",", "val", ")", ":", "\n", "    ", "self", ".", "train", "=", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.quasi_lstm.QLSTMSeqTransducer.on_start_sent": [[43, 46], ["None"], "methods", ["None"], ["", "@", "events", ".", "handle_xnmt_event", "\n", "def", "on_start_sent", "(", "self", ",", "src", ")", ":", "\n", "    ", "self", ".", "_final_states", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.quasi_lstm.QLSTMSeqTransducer.get_final_states": [[47, 49], ["None"], "methods", ["None"], ["", "def", "get_final_states", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "_final_states", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.quasi_lstm.QLSTMSeqTransducer.transduce": [[50, 113], ["isinstance", "dynet.conv2d_bias", "dynet.transpose", "range", "xnmt.expression_seqs.ExpressionSequence", "len", "dynet.reshape", "len", "dynet.reshape", "dynet.dropout", "dynet.parameter", "dynet.parameter", "dynet.reshape", "mask_out.lin_subsampled.lin_subsampled.lin_subsampled", "dynet.zeroes", "dynet.zeroes", "dynet.logistic", "dynet.logistic", "dynet.tanh", "dynet.cmult", "xnmt.transducers.base.FinalTransducerState", "expr_seq[].dim", "e.as_tensor", "dynet.concatenate", "expr_seq.dim", "dynet.transpose", "dynet.transpose.dim", "dynet.strided_select", "dynet.strided_select", "dynet.strided_select", "dynet.random_bernoulli", "dynet.cmult", "numpy.isclose", "c.append", "h.append", "c.append", "h.append", "dynet.reshape", "dynet.reshape", "expr_seq.as_tensor", "dynet.cmult", "dynet.cmult", "dynet.cmult", "numpy.sum", "mask_out.lin_subsampled.lin_subsampled.cmult_by_timestep_expr", "mask_out.lin_subsampled.lin_subsampled.cmult_by_timestep_expr", "mask_out.lin_subsampled.lin_subsampled.cmult_by_timestep_expr", "mask_out.lin_subsampled.lin_subsampled.cmult_by_timestep_expr"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.lin_subsampled", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.cmult_by_timestep_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.cmult_by_timestep_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.cmult_by_timestep_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.cmult_by_timestep_expr"], ["", "def", "transduce", "(", "self", ",", "expr_seq", ":", "expression_seqs", ".", "ExpressionSequence", ")", "->", "expression_seqs", ".", "ExpressionSequence", ":", "\n", "    ", "\"\"\"\n    transduce the sequence, applying masks if given (masked timesteps simply copy previous h / c)\n\n    Args:\n      expr_seq: expression sequence (will be accessed via tensor_expr)\n    Return:\n      expression sequence\n    \"\"\"", "\n", "\n", "if", "isinstance", "(", "expr_seq", ",", "list", ")", ":", "\n", "      ", "mask_out", "=", "expr_seq", "[", "0", "]", ".", "mask", "\n", "seq_len", "=", "len", "(", "expr_seq", "[", "0", "]", ")", "\n", "batch_size", "=", "expr_seq", "[", "0", "]", ".", "dim", "(", ")", "[", "1", "]", "\n", "tensors", "=", "[", "e", ".", "as_tensor", "(", ")", "for", "e", "in", "expr_seq", "]", "\n", "input_tensor", "=", "dy", ".", "reshape", "(", "dy", ".", "concatenate", "(", "tensors", ")", ",", "(", "seq_len", ",", "1", ",", "self", ".", "input_dim", ")", ",", "batch_size", "=", "batch_size", ")", "\n", "", "else", ":", "\n", "      ", "mask_out", "=", "expr_seq", ".", "mask", "\n", "seq_len", "=", "len", "(", "expr_seq", ")", "\n", "batch_size", "=", "expr_seq", ".", "dim", "(", ")", "[", "1", "]", "\n", "input_tensor", "=", "dy", ".", "reshape", "(", "dy", ".", "transpose", "(", "expr_seq", ".", "as_tensor", "(", ")", ")", ",", "(", "seq_len", ",", "1", ",", "self", ".", "input_dim", ")", ",", "batch_size", "=", "batch_size", ")", "\n", "\n", "", "if", "self", ".", "dropout", ">", "0.0", "and", "self", ".", "train", ":", "\n", "      ", "input_tensor", "=", "dy", ".", "dropout", "(", "input_tensor", ",", "self", ".", "dropout", ")", "\n", "\n", "", "proj_inp", "=", "dy", ".", "conv2d_bias", "(", "input_tensor", ",", "dy", ".", "parameter", "(", "self", ".", "p_f", ")", ",", "dy", ".", "parameter", "(", "self", ".", "p_b", ")", ",", "stride", "=", "(", "self", ".", "stride", ",", "1", ")", ",", "is_valid", "=", "False", ")", "\n", "reduced_seq_len", "=", "proj_inp", ".", "dim", "(", ")", "[", "0", "]", "[", "0", "]", "\n", "proj_inp", "=", "dy", ".", "transpose", "(", "dy", ".", "reshape", "(", "proj_inp", ",", "(", "reduced_seq_len", ",", "self", ".", "hidden_dim", "*", "3", ")", ",", "batch_size", "=", "batch_size", ")", ")", "\n", "# proj_inp dims: (hidden, 1, seq_len), batch_size", "\n", "if", "self", ".", "stride", ">", "1", "and", "mask_out", "is", "not", "None", ":", "\n", "      ", "mask_out", "=", "mask_out", ".", "lin_subsampled", "(", "trg_len", "=", "reduced_seq_len", ")", "\n", "\n", "", "h", "=", "[", "dy", ".", "zeroes", "(", "dim", "=", "(", "self", ".", "hidden_dim", ",", "1", ")", ",", "batch_size", "=", "batch_size", ")", "]", "\n", "c", "=", "[", "dy", ".", "zeroes", "(", "dim", "=", "(", "self", ".", "hidden_dim", ",", "1", ")", ",", "batch_size", "=", "batch_size", ")", "]", "\n", "for", "t", "in", "range", "(", "reduced_seq_len", ")", ":", "\n", "      ", "f_t", "=", "dy", ".", "logistic", "(", "dy", ".", "strided_select", "(", "proj_inp", ",", "[", "]", ",", "[", "0", ",", "t", "]", ",", "[", "self", ".", "hidden_dim", ",", "t", "+", "1", "]", ")", ")", "\n", "o_t", "=", "dy", ".", "logistic", "(", "dy", ".", "strided_select", "(", "proj_inp", ",", "[", "]", ",", "[", "self", ".", "hidden_dim", ",", "t", "]", ",", "[", "self", ".", "hidden_dim", "*", "2", ",", "t", "+", "1", "]", ")", ")", "\n", "z_t", "=", "dy", ".", "tanh", "(", "dy", ".", "strided_select", "(", "proj_inp", ",", "[", "]", ",", "[", "self", ".", "hidden_dim", "*", "2", ",", "t", "]", ",", "[", "self", ".", "hidden_dim", "*", "3", ",", "t", "+", "1", "]", ")", ")", "\n", "\n", "if", "self", ".", "dropout", ">", "0.0", "and", "self", ".", "train", ":", "\n", "        ", "retention_rate", "=", "1.0", "-", "self", ".", "dropout", "\n", "dropout_mask", "=", "dy", ".", "random_bernoulli", "(", "(", "self", ".", "hidden_dim", ",", "1", ")", ",", "retention_rate", ",", "batch_size", "=", "batch_size", ")", "\n", "f_t", "=", "1.0", "-", "dy", ".", "cmult", "(", "dropout_mask", ",", "\n", "1.0", "-", "f_t", ")", "# TODO: would be easy to make a zoneout dynet operation to save memory", "\n", "\n", "", "i_t", "=", "1.0", "-", "f_t", "\n", "\n", "if", "t", "==", "0", ":", "\n", "        ", "c_t", "=", "dy", ".", "cmult", "(", "i_t", ",", "z_t", ")", "\n", "", "else", ":", "\n", "        ", "c_t", "=", "dy", ".", "cmult", "(", "f_t", ",", "c", "[", "-", "1", "]", ")", "+", "dy", ".", "cmult", "(", "i_t", ",", "z_t", ")", "\n", "", "h_t", "=", "dy", ".", "cmult", "(", "o_t", ",", "c_t", ")", "# note: LSTM would use dy.tanh(c_t) instead of c_t", "\n", "if", "mask_out", "is", "None", "or", "np", ".", "isclose", "(", "np", ".", "sum", "(", "mask_out", ".", "np_arr", "[", ":", ",", "t", ":", "t", "+", "1", "]", ")", ",", "0.0", ")", ":", "\n", "        ", "c", ".", "append", "(", "c_t", ")", "\n", "h", ".", "append", "(", "h_t", ")", "\n", "", "else", ":", "\n", "        ", "c", ".", "append", "(", "mask_out", ".", "cmult_by_timestep_expr", "(", "c_t", ",", "t", ",", "True", ")", "+", "mask_out", ".", "cmult_by_timestep_expr", "(", "c", "[", "-", "1", "]", ",", "t", ",", "False", ")", ")", "\n", "h", ".", "append", "(", "mask_out", ".", "cmult_by_timestep_expr", "(", "h_t", ",", "t", ",", "True", ")", "+", "mask_out", ".", "cmult_by_timestep_expr", "(", "h", "[", "-", "1", "]", ",", "t", ",", "False", ")", ")", "\n", "\n", "", "", "self", ".", "_final_states", "=", "[", "transducers", ".", "FinalTransducerState", "(", "dy", ".", "reshape", "(", "h", "[", "-", "1", "]", ",", "(", "self", ".", "hidden_dim", ",", ")", ",", "batch_size", "=", "batch_size", ")", ",", "dy", ".", "reshape", "(", "c", "[", "-", "1", "]", ",", "(", "self", ".", "hidden_dim", ",", ")", ",", "\n", "batch_size", "=", "batch_size", ")", ")", "]", "\n", "return", "expression_seqs", ".", "ExpressionSequence", "(", "expr_list", "=", "h", "[", "1", ":", "]", ",", "mask", "=", "mask_out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.quasi_lstm.BiQLSTMSeqTransducer.__init__": [[118, 142], ["xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.persistence.Ref", "quasi_lstm.BiQLSTMSeqTransducer.add_serializable_component", "quasi_lstm.BiQLSTMSeqTransducer.add_serializable_component", "xnmt.persistence.bare", "xnmt.persistence.bare", "quasi_lstm.BiQLSTMSeqTransducer.init_layers", "quasi_lstm.BiQLSTMSeqTransducer.init_layers"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.quasi_lstm.BiQLSTMSeqTransducer.init_layers", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.quasi_lstm.BiQLSTMSeqTransducer.init_layers"], ["@", "events", ".", "register_xnmt_handler", "\n", "@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "layers", ",", "\n", "input_dim", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "hidden_dim", "=", "Ref", "(", "\"exp_global.default_layer_dim\"", ")", ",", "\n", "dropout", "=", "Ref", "(", "\"exp_global.dropout\"", ",", "default", "=", "0.0", ")", ",", "\n", "stride", "=", "1", ",", "\n", "filter_width", "=", "2", ",", "\n", "param_init", "=", "Ref", "(", "\"exp_global.param_init\"", ",", "default", "=", "bare", "(", "param_initializers", ".", "GlorotInitializer", ")", ")", ",", "\n", "bias_init", "=", "Ref", "(", "\"exp_global.bias_init\"", ",", "default", "=", "bare", "(", "param_initializers", ".", "ZeroInitializer", ")", ")", ",", "\n", "forward_layers", "=", "None", ",", "\n", "backward_layers", "=", "None", ")", ":", "\n", "    ", "self", ".", "num_layers", "=", "layers", "\n", "self", ".", "hidden_dim", "=", "hidden_dim", "\n", "assert", "hidden_dim", "%", "2", "==", "0", "\n", "self", ".", "forward_layers", "=", "self", ".", "add_serializable_component", "(", "\"forward_layers\"", ",", "forward_layers", ",", "\n", "lambda", ":", "self", ".", "init_layers", "(", "input_dim", ",", "hidden_dim", ",", "dropout", ",", "\n", "stride", ",", "filter_width", ",", "param_init", ",", "\n", "bias_init", ")", ")", "\n", "self", ".", "backward_layers", "=", "self", ".", "add_serializable_component", "(", "\"backward_layers\"", ",", "backward_layers", ",", "\n", "lambda", ":", "self", ".", "init_layers", "(", "input_dim", ",", "hidden_dim", ",", "dropout", ",", "\n", "stride", ",", "filter_width", ",", "param_init", ",", "\n", "bias_init", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.quasi_lstm.BiQLSTMSeqTransducer.init_layers": [[143, 154], ["quasi_lstm.QLSTMSeqTransducer", "quasi_lstm.QLSTMSeqTransducer", "range", "isinstance", "isinstance", "isinstance", "isinstance"], "methods", ["None"], ["", "def", "init_layers", "(", "self", ",", "input_dim", ",", "hidden_dim", ",", "dropout", ",", "stride", ",", "filter_width", ",", "param_init", ",", "bias_init", ")", ":", "\n", "    ", "layers", "=", "[", "QLSTMSeqTransducer", "(", "input_dim", "=", "input_dim", ",", "hidden_dim", "=", "hidden_dim", "/", "2", ",", "dropout", "=", "dropout", ",", "stride", "=", "stride", ",", "\n", "filter_width", "=", "filter_width", ",", "\n", "param_init", "=", "param_init", "[", "0", "]", "if", "isinstance", "(", "param_init", ",", "Sequence", ")", "else", "param_init", ",", "\n", "bias_init", "=", "bias_init", "[", "0", "]", "if", "isinstance", "(", "bias_init", ",", "Sequence", ")", "else", "bias_init", ")", "]", "\n", "layers", "+=", "[", "QLSTMSeqTransducer", "(", "input_dim", "=", "hidden_dim", ",", "hidden_dim", "=", "hidden_dim", "/", "2", ",", "dropout", "=", "dropout", ",", "stride", "=", "stride", ",", "\n", "filter_width", "=", "filter_width", ",", "\n", "param_init", "=", "param_init", "[", "i", "]", "if", "isinstance", "(", "param_init", ",", "Sequence", ")", "else", "param_init", ",", "\n", "bias_init", "=", "bias_init", "[", "i", "]", "if", "isinstance", "(", "bias_init", ",", "Sequence", ")", "else", "bias_init", ")", "for", "i", "in", "\n", "range", "(", "1", ",", "layers", ")", "]", "\n", "return", "layers", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.quasi_lstm.BiQLSTMSeqTransducer.on_start_sent": [[155, 158], ["None"], "methods", ["None"], ["", "@", "events", ".", "handle_xnmt_event", "\n", "def", "on_start_sent", "(", "self", ",", "src", ")", ":", "\n", "    ", "self", ".", "_final_states", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.quasi_lstm.BiQLSTMSeqTransducer.get_final_states": [[159, 161], ["None"], "methods", ["None"], ["", "def", "get_final_states", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "_final_states", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.quasi_lstm.BiQLSTMSeqTransducer.transduce": [[162, 192], ["quasi_lstm.BiQLSTMSeqTransducer.forward_layers[].transduce", "quasi_lstm.BiQLSTMSeqTransducer.backward_layers[].transduce", "range", "xnmt.expression_seqs.ExpressionSequence", "xnmt.expression_seqs.ReversedExpressionSequence", "len", "quasi_lstm.BiQLSTMSeqTransducer.forward_layers[].transduce", "xnmt.expression_seqs.ExpressionSequence", "xnmt.transducers.base.FinalTransducerState", "mask_out.lin_subsampled.lin_subsampled.lin_subsampled", "mask_out.lin_subsampled.lin_subsampled.lin_subsampled", "quasi_lstm.BiQLSTMSeqTransducer.backward_layers[].transduce().as_list", "dynet.concatenate", "dynet.concatenate", "range", "xnmt.expression_seqs.ReversedExpressionSequence", "len", "len", "dynet.concatenate", "len", "quasi_lstm.BiQLSTMSeqTransducer.backward_layers[].transduce", "[].main_expr", "[].main_expr", "[].cell_expr", "[].cell_expr", "range", "len", "xnmt.expression_seqs.ReversedExpressionSequence", "quasi_lstm.BiQLSTMSeqTransducer.forward_layers[].get_final_states", "quasi_lstm.BiQLSTMSeqTransducer.backward_layers[].get_final_states", "quasi_lstm.BiQLSTMSeqTransducer.forward_layers[].get_final_states", "quasi_lstm.BiQLSTMSeqTransducer.backward_layers[].get_final_states"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.lin_subsampled", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.lin_subsampled", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_list", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.base.FinalTransducerState.main_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.base.FinalTransducerState.main_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.base.FinalTransducerState.cell_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.base.FinalTransducerState.cell_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.get_final_states", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.get_final_states", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.get_final_states", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.get_final_states"], ["", "def", "transduce", "(", "self", ",", "es", ")", ":", "\n", "    ", "mask", "=", "es", ".", "mask", "\n", "# first layer", "\n", "forward_es", "=", "self", ".", "forward_layers", "[", "0", "]", ".", "transduce", "(", "es", ")", "\n", "rev_backward_es", "=", "self", ".", "backward_layers", "[", "0", "]", ".", "transduce", "(", "expression_seqs", ".", "ReversedExpressionSequence", "(", "es", ")", ")", "\n", "\n", "# TODO: concat input of each layer to its output; or, maybe just add standard residual connections", "\n", "for", "layer_i", "in", "range", "(", "1", ",", "len", "(", "self", ".", "forward_layers", ")", ")", ":", "\n", "      ", "new_forward_es", "=", "self", ".", "forward_layers", "[", "layer_i", "]", ".", "transduce", "(", "[", "forward_es", ",", "expression_seqs", ".", "ReversedExpressionSequence", "(", "rev_backward_es", ")", "]", ")", "\n", "mask_out", "=", "mask", "\n", "if", "mask_out", "is", "not", "None", "and", "new_forward_es", ".", "mask", ".", "np_arr", ".", "shape", "!=", "mask_out", ".", "np_arr", ".", "shape", ":", "\n", "        ", "mask_out", "=", "mask_out", ".", "lin_subsampled", "(", "trg_len", "=", "len", "(", "new_forward_es", ")", ")", "\n", "", "rev_backward_es", "=", "expression_seqs", ".", "ExpressionSequence", "(", "self", ".", "backward_layers", "[", "layer_i", "]", ".", "transduce", "(", "\n", "[", "expression_seqs", ".", "ReversedExpressionSequence", "(", "forward_es", ")", ",", "rev_backward_es", "]", ")", ".", "as_list", "(", ")", ",", "mask", "=", "mask_out", ")", "\n", "forward_es", "=", "new_forward_es", "\n", "\n", "", "self", ".", "_final_states", "=", "[", "\n", "transducers", ".", "FinalTransducerState", "(", "dy", ".", "concatenate", "(", "[", "self", ".", "forward_layers", "[", "layer_i", "]", ".", "get_final_states", "(", ")", "[", "0", "]", ".", "main_expr", "(", ")", ",", "\n", "self", ".", "backward_layers", "[", "layer_i", "]", ".", "get_final_states", "(", ")", "[", "\n", "0", "]", ".", "main_expr", "(", ")", "]", ")", ",", "\n", "dy", ".", "concatenate", "(", "[", "self", ".", "forward_layers", "[", "layer_i", "]", ".", "get_final_states", "(", ")", "[", "0", "]", ".", "cell_expr", "(", ")", ",", "\n", "self", ".", "backward_layers", "[", "layer_i", "]", ".", "get_final_states", "(", ")", "[", "\n", "0", "]", ".", "cell_expr", "(", ")", "]", ")", ")", "for", "layer_i", "in", "range", "(", "len", "(", "self", ".", "forward_layers", ")", ")", "]", "\n", "mask_out", "=", "mask", "\n", "if", "mask_out", "is", "not", "None", "and", "forward_es", ".", "mask", ".", "np_arr", ".", "shape", "!=", "mask_out", ".", "np_arr", ".", "shape", ":", "\n", "      ", "mask_out", "=", "mask_out", ".", "lin_subsampled", "(", "trg_len", "=", "len", "(", "forward_es", ")", ")", "\n", "", "return", "expression_seqs", ".", "ExpressionSequence", "(", "\n", "expr_list", "=", "[", "dy", ".", "concatenate", "(", "[", "forward_es", "[", "i", "]", ",", "rev_backward_es", "[", "-", "i", "-", "1", "]", "]", ")", "for", "i", "in", "range", "(", "len", "(", "forward_es", ")", ")", "]", ",", "\n", "mask", "=", "mask_out", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.__init__": [[6, 12], ["hasattr"], "methods", ["None"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "input_reader1", ",", "input_reader2", ")", ":", "\n", "# TODO: generalize to n input readers", "\n", "    ", "self", ".", "input_reader1", "=", "input_reader1", "\n", "self", ".", "input_reader2", "=", "input_reader2", "\n", "self", ".", "vocab", "=", "self", ".", "input_reader1", ".", "vocab", "if", "hasattr", "(", "self", ".", "input_reader1", ",", "\"vocab\"", ")", "else", "self", ".", "input_reader2", ".", "vocab", "# TODO: hack to make EnsembleTranslator happy", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.read_sents": [[13, 16], ["zip", "dual_translator.EnsembleInputReader.input_reader1.read_sents", "dual_translator.EnsembleInputReader.input_reader2.read_sents", "xnmt.translator.EnsembleListDelegate"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.read_sents", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.read_sents"], ["", "def", "read_sents", "(", "self", ",", "filename", ",", "filter_ids", "=", "None", ")", ":", "\n", "    ", "for", "s", "in", "zip", "(", "self", ".", "input_reader1", ".", "read_sents", "(", "filename", "[", "0", "]", ")", ",", "self", ".", "input_reader2", ".", "read_sents", "(", "filename", "[", "1", "]", ")", ")", ":", "\n", "      ", "yield", "translator", ".", "EnsembleListDelegate", "(", "[", "s", "[", "0", "]", ",", "s", "[", "1", "]", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.count_sents": [[17, 21], ["dual_translator.EnsembleInputReader.input_reader1.count_sents", "dual_translator.EnsembleInputReader.input_reader2.count_sents"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.count_sents", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_translator.EnsembleInputReader.count_sents"], ["", "", "def", "count_sents", "(", "self", ",", "filename", ")", ":", "\n", "    ", "cnt", "=", "self", ".", "input_reader1", ".", "count_sents", "(", ")", "\n", "assert", "cnt", "==", "self", ".", "input_reader2", ".", "count_sents", "(", ")", "\n", "return", "cnt", "\n", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricDecoderState.__init__": [[16, 20], ["None"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "rnn_state", ":", "dy", ".", "Expression", "=", "None", ",", "context", ":", "dy", ".", "Expression", "=", "None", ",", "out_prob", ":", "dy", ".", "Expression", "=", "None", ")", ":", "\n", "    ", "self", ".", "rnn_state", "=", "rnn_state", "\n", "self", ".", "context", "=", "context", "\n", "self", ".", "out_prob", "=", "out_prob", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.__init__": [[63, 126], ["xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.persistence.bare", "xnmt.persistence.Ref", "super().__init__", "symmetric_translator.SymmetricTranslator.add_serializable_component", "len", "max", "min", "xnmt.modelparts.transforms.Linear"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Serializable.add_serializable_component"], ["@", "events", ".", "register_xnmt_handler", "\n", "@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "trg_embedder", ":", "embedders", ".", "DenseWordEmbedder", ",", "\n", "src_reader", ":", "input_readers", ".", "InputReader", "=", "None", ",", "\n", "trg_reader", ":", "input_readers", ".", "InputReader", "=", "None", ",", "\n", "src_embedder", "=", "bare", "(", "embedders", ".", "SimpleWordEmbedder", ")", ",", "\n", "encoder", "=", "bare", "(", "recurrent", ".", "BiLSTMSeqTransducer", ")", ",", "\n", "attender", "=", "bare", "(", "attenders", ".", "MlpAttender", ")", ",", "\n", "dec_lstm", "=", "bare", "(", "recurrent", ".", "UniLSTMSeqTransducer", ")", ",", "\n", "bridge", ":", "bridges", ".", "Bridge", "=", "bare", "(", "bridges", ".", "CopyBridge", ")", ",", "\n", "transform", ":", "transforms", ".", "Transform", "=", "bare", "(", "transforms", ".", "AuxNonLinear", ")", ",", "\n", "scorer", ":", "scorers", ".", "Scorer", "=", "bare", "(", "scorers", ".", "Softmax", ")", ",", "\n", "inference", "=", "bare", "(", "inferences", ".", "IndependentOutputInference", ")", ",", "\n", "max_dec_len", ":", "int", "=", "350", ",", "\n", "mode", ":", "Optional", "[", "str", "]", "=", "None", ",", "\n", "mode_translate", ":", "Optional", "[", "str", "]", "=", "None", ",", "\n", "mode_transduce", ":", "Optional", "[", "str", "]", "=", "None", ",", "\n", "unfold_until", ":", "str", "=", "\"eos\"", ",", "\n", "transducer_loss", ":", "bool", "=", "False", ",", "\n", "split_regularizer", ":", "Union", "[", "bool", ",", "numbers", ".", "Real", "]", "=", "False", ",", "\n", "split_dual", ":", "Union", "[", "bool", ",", "Sequence", "[", "numbers", ".", "Real", "]", "]", "=", "False", ",", "\n", "dropout_dec_state", ":", "float", "=", "0.0", ",", "\n", "split_dual_proj", ":", "Optional", "[", "transforms", ".", "Linear", "]", "=", "None", ",", "\n", "split_context_transform", ":", "Optional", "[", "transforms", ".", "Transform", "]", "=", "None", ",", "\n", "sampling_prob", ":", "numbers", ".", "Number", "=", "0.0", ",", "\n", "compute_report", ":", "bool", "=", "Ref", "(", "\"exp_global.compute_report\"", ",", "default", "=", "False", ")", ")", ":", "\n", "    ", "super", "(", ")", ".", "__init__", "(", "src_reader", "=", "src_reader", ",", "trg_reader", "=", "trg_reader", ")", "\n", "assert", "mode", "is", "None", "or", "(", "mode_translate", "is", "None", "and", "mode_transduce", "is", "None", ")", ",", "f\"illegal combination: mode={mode}, mode_translate={mode_translate}, mode_transduce={mode_transduce}\"", "\n", "assert", "mode", "or", "mode_translate", "or", "mode_transduce", "\n", "if", "mode_translate", "or", "mode_transduce", ":", "assert", "mode_translate", "and", "mode_transduce", "\n", "assert", "mode_translate", "!=", "\"split\"", "\n", "self", ".", "src_embedder", "=", "src_embedder", "\n", "self", ".", "trg_embedder", "=", "trg_embedder", "\n", "self", ".", "encoder", "=", "encoder", "\n", "self", ".", "attender", "=", "attender", "\n", "self", ".", "dec_lstm", "=", "dec_lstm", "\n", "self", ".", "bridge", "=", "bridge", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "scorer", "=", "scorer", "\n", "self", ".", "inference", "=", "inference", "\n", "self", ".", "max_dec_len", "=", "max_dec_len", "\n", "self", ".", "mode_translate", "=", "mode_translate", "or", "mode", "\n", "self", ".", "mode_transduce", "=", "mode_transduce", "or", "mode", "\n", "if", "transducer_loss", ":", "\n", "      ", "assert", "self", ".", "mode_transduce", "in", "[", "\"teacher\"", ",", "\"split\"", "]", ",", "f\"mode_transduce='{self.mode_transduce}' not supported with transducer_loss option\"", "\n", "", "self", ".", "trg_embedder", "=", "trg_embedder", "\n", "self", ".", "unfold_until", "=", "unfold_until", "\n", "self", ".", "transducer_loss", "=", "transducer_loss", "\n", "if", "split_regularizer", ":", "assert", "self", ".", "mode_transduce", "==", "\"split\"", "\n", "self", ".", "split_regularizer", "=", "split_regularizer", "\n", "self", ".", "dropout_dec_state", "=", "dropout_dec_state", "\n", "self", ".", "split_dual", "=", "[", "0.0", ",", "0.0", "]", "if", "split_dual", "is", "True", "else", "split_dual", "\n", "self", ".", "split_context_transform", "=", "split_context_transform", "\n", "if", "self", ".", "split_dual", ":", "\n", "      ", "assert", "len", "(", "self", ".", "split_dual", ")", "==", "2", "and", "max", "(", "self", ".", "split_dual", ")", "<=", "1.0", "and", "min", "(", "self", ".", "split_dual", ")", ">=", "0.0", "\n", "self", ".", "split_dual_proj", "=", "self", ".", "add_serializable_component", "(", "\"split_dual_proj\"", ",", "split_dual_proj", ",", "\n", "lambda", ":", "transforms", ".", "Linear", "(", "input_dim", "=", "self", ".", "dec_lstm", ".", "input_dim", "*", "2", ",", "\n", "output_dim", "=", "self", ".", "dec_lstm", ".", "input_dim", ")", ")", "\n", "", "self", ".", "sampling_prob", "=", "sampling_prob", "\n", "self", ".", "compute_report", "=", "compute_report", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.shared_params": [[127, 131], ["None"], "methods", ["None"], ["", "def", "shared_params", "(", "self", ")", ":", "\n", "    ", "return", "[", "{", "\".src_embedder.emb_dim\"", ",", "\".encoder.input_dim\"", "}", ",", "\n", "{", "\".encoder.hidden_dim\"", ",", "\".attender.input_dim\"", ",", "\".dec_lstm.input_dim\"", "}", ",", "\n", "{", "\".attender.state_dim\"", ",", "\".dec_lstm.hidden_dim\"", ",", "\".transform.aux_input_dim\"", "}", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator._encode_src": [[132, 149], ["symmetric_translator.SymmetricTranslator.encoder.transduce", "symmetric_translator.SymmetricTranslator.attender.init_sent", "symmetric_translator.SymmetricTranslator.encoder.get_final_states", "symmetric_translator.SymmetricTranslator.dec_lstm.initial_state", "rnn_state.add_input.add_input.set_s", "dynet.zeros", "xnmt.batchers.mark_as_batch", "symmetric_translator.SymmetricTranslator.trg_embedder.embed", "symmetric_translator.SymmetricTranslator._chosen_rnn_inputs.append", "rnn_state.add_input.add_input.add_input", "symmetric_translator.SymmetricDecoderState", "symmetric_translator.SymmetricTranslator.src_embedder.embed_sent", "symmetric_translator.SymmetricTranslator.dim", "symmetric_translator.SymmetricTranslator.bridge.decoder_init"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.attenders.MlpLocationAttender.init_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.get_final_states", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.decoders.AutoRegressiveDecoder.initial_state", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMState.set_s", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.embed", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.decoders.AutoRegressiveDecoder.add_input", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.embed_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.bridges.LinearBridge.decoder_init"], ["", "def", "_encode_src", "(", "self", ",", "x", ",", "apply_emb", "=", "True", ")", ":", "\n", "    ", "if", "apply_emb", ":", "\n", "      ", "x", "=", "self", ".", "src_embedder", ".", "embed_sent", "(", "x", ")", "\n", "", "encodings", "=", "self", ".", "encoder", ".", "transduce", "(", "x", ")", "\n", "self", ".", "attender", ".", "init_sent", "(", "encodings", ")", "\n", "batch_size", "=", "encodings", ".", "dim", "(", ")", "[", "1", "]", "\n", "\n", "enc_final_states", "=", "self", ".", "encoder", ".", "get_final_states", "(", ")", "\n", "rnn_state", "=", "self", ".", "dec_lstm", ".", "initial_state", "(", ")", "\n", "rnn_state", "=", "rnn_state", ".", "set_s", "(", "self", ".", "bridge", ".", "decoder_init", "(", "enc_final_states", ")", ")", "\n", "zeros", "=", "dy", ".", "zeros", "(", "self", ".", "dec_lstm", ".", "input_dim", ",", "batch_size", "=", "batch_size", ")", "\n", "\n", "ss", "=", "batchers", ".", "mark_as_batch", "(", "[", "vocabs", ".", "Vocab", ".", "SS", "]", "*", "batch_size", ")", "\n", "first_input", "=", "self", ".", "trg_embedder", ".", "embed", "(", "ss", ")", "\n", "self", ".", "_chosen_rnn_inputs", ".", "append", "(", "first_input", ")", "\n", "rnn_state", "=", "rnn_state", ".", "add_input", "(", "first_input", ")", "\n", "return", "SymmetricDecoderState", "(", "rnn_state", "=", "rnn_state", ",", "context", "=", "zeros", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.on_start_sent": [[150, 156], ["None"], "methods", ["None"], ["", "@", "events", ".", "handle_xnmt_event", "\n", "def", "on_start_sent", "(", "self", ",", "src", ")", ":", "\n", "    ", "self", ".", "cur_src", "=", "src", "\n", "self", ".", "transducer_losses", "=", "[", "]", "\n", "self", ".", "_chosen_rnn_inputs", "=", "[", "]", "\n", "self", ".", "split_reg_penalty_expr", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.on_set_train": [[157, 160], ["None"], "methods", ["None"], ["", "@", "events", ".", "handle_xnmt_event", "\n", "def", "on_set_train", "(", "self", ",", "val", ")", ":", "\n", "    ", "self", ".", "train", "=", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.transduce": [[161, 262], ["symmetric_translator.SymmetricTranslator._encode_src", "xnmt.batchers.Mask", "range", "range", "xnmt.expression_seqs.ExpressionSequence", "symmetric_translator.SymmetricDecoderState", "x.dim", "symmetric_translator.SymmetricTranslator.cur_src.batches[].sent_len", "output_states.append", "atts_list.append", "enumerate", "symmetric_translator.SymmetricTranslator.report_sent_info", "len", "symmetric_translator.SymmetricTranslator._final_states.append", "numpy.zeros", "symmetric_translator.SymmetricTranslator.calc_loss_one_step", "symmetric_translator.SymmetricTranslator.transducer_losses.append", "symmetric_translator.SymmetricTranslator.generate_one_step", "numpy.argmax", "word_id.reshape.reshape.reshape", "generated_word_ids.append", "range", "symmetric_translator.SymmetricTranslator.attender.get_last_attention", "dynet.reshape", "split_rnn_state.add_input.add_input.add_input", "split_output_states.append", "len", "len", "numpy.asarray().reshape", "symmetric_translator.SymmetricTranslator.rnn_state.h", "xnmt.transducers.base.FinalTransducerState", "symmetric_translator.SymmetricTranslator._batch_ref_action", "symmetric_translator.SymmetricTranslator._batch_ref_action", "symmetric_translator.SymmetricTranslator._batch_max_action", "symmetric_translator.SymmetricTranslator.npvalue", "symmetric_translator.SymmetricTranslator._terminate_rnn", "all", "atts_list.append", "output_states.append", "symmetric_translator.SymmetricTranslator.rnn_state.h", "len", "len", "symmetric_translator.SymmetricTranslator.attender.curr_sent.as_tensor", "symmetric_translator.SymmetricTranslator.split_dual_proj.transform", "dynet.squared_norm", "len", "len", "xnmt.sent.SimpleSentence", "symmetric_translator.SymmetricTranslator.attender.get_last_attention", "len", "len", "dynet.dropout_batch", "dynet.dropout_batch", "symmetric_translator.SymmetricTranslator.split_context_transform.transform", "dynet.concatenate", "len", "split_rnn_state.add_input.add_input.h", "numpy.asarray", "isinstance", "symmetric_translator.SymmetricTranslator.rnn_state.h", "atts_list[].dim", "symmetric_translator.SymmetricTranslator.rnn_state.h", "symmetric_translator.SymmetricTranslator.dim", "att.npvalue"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator._encode_src", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.Reportable.report_sent_info", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.calc_loss_one_step", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.generate_one_step", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.attenders.Attender.get_last_attention", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.decoders.AutoRegressiveDecoder.add_input", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMState.h", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator._batch_ref_action", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator._batch_ref_action", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator._batch_max_action", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator._terminate_rnn", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMState.h", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.DenseWordEmbedder.transform", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.attenders.Attender.get_last_attention", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.DenseWordEmbedder.transform", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMState.h", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMState.h", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMState.h", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["", "def", "transduce", "(", "self", ",", "x", ")", ":", "\n", "# some preparations", "\n", "    ", "output_states", "=", "[", "]", "\n", "current_state", "=", "self", ".", "_encode_src", "(", "x", ",", "apply_emb", "=", "False", ")", "\n", "if", "self", ".", "mode_transduce", "==", "\"split\"", ":", "\n", "      ", "first_state", "=", "SymmetricDecoderState", "(", "rnn_state", "=", "current_state", ".", "rnn_state", ",", "context", "=", "current_state", ".", "context", ")", "\n", "", "batch_size", "=", "x", ".", "dim", "(", ")", "[", "1", "]", "\n", "done", "=", "[", "False", "]", "*", "batch_size", "\n", "out_mask", "=", "batchers", ".", "Mask", "(", "np_arr", "=", "np", ".", "zeros", "(", "(", "batch_size", ",", "self", ".", "max_dec_len", ")", ")", ")", "\n", "out_mask", ".", "np_arr", ".", "flags", ".", "writeable", "=", "True", "\n", "# teacher / split mode: unfold guided by reference targets", "\n", "#  -> feed everything up unto (except) the last token back into the LSTM", "\n", "# other modes: unfold until EOS is output or max len is reached", "\n", "max_dec_len", "=", "self", ".", "cur_src", ".", "batches", "[", "1", "]", ".", "sent_len", "(", ")", "if", "self", ".", "mode_transduce", "in", "[", "\"teacher\"", ",", "\"split\"", "]", "else", "self", ".", "max_dec_len", "\n", "atts_list", "=", "[", "]", "\n", "generated_word_ids", "=", "[", "]", "\n", "for", "pos", "in", "range", "(", "max_dec_len", ")", ":", "\n", "      ", "if", "self", ".", "train", "and", "self", ".", "mode_transduce", "in", "[", "\"teacher\"", ",", "\"split\"", "]", ":", "\n", "# unroll RNN guided by reference", "\n", "        ", "prev_ref_action", ",", "ref_action", "=", "None", ",", "None", "\n", "if", "pos", ">", "0", ":", "\n", "          ", "prev_ref_action", "=", "self", ".", "_batch_ref_action", "(", "pos", "-", "1", ")", "\n", "", "if", "self", ".", "transducer_loss", ":", "\n", "          ", "ref_action", "=", "self", ".", "_batch_ref_action", "(", "pos", ")", "\n", "", "step_loss", "=", "self", ".", "calc_loss_one_step", "(", "dec_state", "=", "current_state", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "mode", "=", "self", ".", "mode_transduce", ",", "\n", "ref_action", "=", "ref_action", ",", "\n", "prev_ref_action", "=", "prev_ref_action", ")", "\n", "self", ".", "transducer_losses", ".", "append", "(", "step_loss", ")", "\n", "", "else", ":", "# inference", "\n", "# unroll RNN guided by model predictions", "\n", "        ", "if", "self", ".", "mode_transduce", "in", "[", "\"teacher\"", ",", "\"split\"", "]", ":", "\n", "          ", "prev_ref_action", "=", "self", ".", "_batch_max_action", "(", "batch_size", ",", "current_state", ",", "pos", ")", "\n", "", "else", ":", "prev_ref_action", "=", "None", "\n", "out_scores", "=", "self", ".", "generate_one_step", "(", "dec_state", "=", "current_state", ",", "\n", "mask", "=", "out_mask", ",", "\n", "cur_step", "=", "pos", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "mode", "=", "self", ".", "mode_transduce", ",", "\n", "prev_ref_action", "=", "prev_ref_action", ")", "\n", "word_id", "=", "np", ".", "argmax", "(", "out_scores", ".", "npvalue", "(", ")", ",", "axis", "=", "0", ")", "\n", "word_id", "=", "word_id", ".", "reshape", "(", "(", "word_id", ".", "size", ",", ")", ")", "\n", "generated_word_ids", ".", "append", "(", "word_id", "[", "0", "]", ")", "\n", "for", "batch_i", "in", "range", "(", "batch_size", ")", ":", "\n", "          ", "if", "self", ".", "_terminate_rnn", "(", "batch_i", "=", "batch_i", ",", "pos", "=", "pos", ",", "batched_word_id", "=", "word_id", ")", ":", "\n", "            ", "done", "[", "batch_i", "]", "=", "True", "\n", "out_mask", ".", "np_arr", "[", "batch_i", ",", "pos", "+", "1", ":", "]", "=", "1.0", "\n", "", "", "if", "pos", ">", "0", "and", "all", "(", "done", ")", ":", "\n", "          ", "atts_list", ".", "append", "(", "self", ".", "attender", ".", "get_last_attention", "(", ")", ")", "\n", "output_states", ".", "append", "(", "current_state", ".", "rnn_state", ".", "h", "(", ")", "[", "-", "1", "]", ")", "\n", "break", "\n", "", "", "output_states", ".", "append", "(", "current_state", ".", "rnn_state", ".", "h", "(", ")", "[", "-", "1", "]", ")", "\n", "atts_list", ".", "append", "(", "self", ".", "attender", ".", "get_last_attention", "(", ")", ")", "\n", "", "if", "self", ".", "mode_transduce", "==", "\"split\"", ":", "\n", "# split mode: use attentions to compute context, then run RNNs over these context inputs", "\n", "      ", "if", "self", ".", "split_regularizer", ":", "\n", "        ", "assert", "len", "(", "atts_list", ")", "==", "len", "(", "self", ".", "_chosen_rnn_inputs", ")", ",", "f\"{len(atts_list)} != {len(self._chosen_rnn_inputs)}\"", "\n", "", "split_output_states", "=", "[", "]", "\n", "split_rnn_state", "=", "first_state", ".", "rnn_state", "\n", "for", "pos", ",", "att", "in", "enumerate", "(", "atts_list", ")", ":", "\n", "        ", "lstm_input_context", "=", "self", ".", "attender", ".", "curr_sent", ".", "as_tensor", "(", ")", "*", "att", "# TODO: better reuse the already computed context vecs", "\n", "lstm_input_context", "=", "dy", ".", "reshape", "(", "lstm_input_context", ",", "(", "lstm_input_context", ".", "dim", "(", ")", "[", "0", "]", "[", "0", "]", ",", ")", ",", "batch_size", "=", "batch_size", ")", "\n", "if", "self", ".", "split_dual", ":", "\n", "          ", "lstm_input_label", "=", "self", ".", "_chosen_rnn_inputs", "[", "pos", "]", "\n", "if", "self", ".", "split_dual", "[", "0", "]", ">", "0.0", "and", "self", ".", "train", ":", "\n", "            ", "lstm_input_context", "=", "dy", ".", "dropout_batch", "(", "lstm_input_context", ",", "self", ".", "split_dual", "[", "0", "]", ")", "\n", "", "if", "self", ".", "split_dual", "[", "1", "]", ">", "0.0", "and", "self", ".", "train", ":", "\n", "            ", "lstm_input_label", "=", "dy", ".", "dropout_batch", "(", "lstm_input_label", ",", "self", ".", "split_dual", "[", "1", "]", ")", "\n", "", "if", "self", ".", "split_context_transform", ":", "\n", "            ", "lstm_input_context", "=", "self", ".", "split_context_transform", ".", "transform", "(", "lstm_input_context", ")", "\n", "", "lstm_input_context", "=", "self", ".", "split_dual_proj", ".", "transform", "(", "dy", ".", "concatenate", "(", "[", "lstm_input_context", ",", "lstm_input_label", "]", ")", ")", "\n", "", "if", "self", ".", "split_regularizer", "and", "pos", "<", "len", "(", "self", ".", "_chosen_rnn_inputs", ")", ":", "\n", "# _chosen_rnn_inputs does not contain first (empty) input, so this is in fact like comparing to pos-1:", "\n", "          ", "penalty", "=", "dy", ".", "squared_norm", "(", "lstm_input_context", "-", "self", ".", "_chosen_rnn_inputs", "[", "pos", "]", ")", "\n", "if", "self", ".", "split_regularizer", "!=", "1", ":", "\n", "            ", "penalty", "=", "self", ".", "split_regularizer", "*", "penalty", "\n", "", "self", ".", "split_reg_penalty_expr", "=", "penalty", "\n", "", "split_rnn_state", "=", "split_rnn_state", ".", "add_input", "(", "lstm_input_context", ")", "\n", "split_output_states", ".", "append", "(", "split_rnn_state", ".", "h", "(", ")", "[", "-", "1", "]", ")", "\n", "", "assert", "len", "(", "output_states", ")", "==", "len", "(", "split_output_states", ")", "\n", "output_states", "=", "split_output_states", "\n", "", "out_mask", ".", "np_arr", "=", "out_mask", ".", "np_arr", "[", ":", ",", ":", "len", "(", "output_states", ")", "]", "\n", "self", ".", "_final_states", "=", "[", "]", "\n", "if", "self", ".", "compute_report", ":", "\n", "# for symmetric reporter (this can only be run at inference time)", "\n", "      ", "assert", "batch_size", "==", "1", "\n", "atts_matrix", "=", "np", ".", "asarray", "(", "[", "att", ".", "npvalue", "(", ")", "for", "att", "in", "atts_list", "]", ")", ".", "reshape", "(", "len", "(", "atts_list", ")", ",", "atts_list", "[", "0", "]", ".", "dim", "(", ")", "[", "0", "]", "[", "0", "]", ")", ".", "T", "\n", "self", ".", "report_sent_info", "(", "{", "\"symm_att\"", ":", "atts_matrix", ",", "\n", "\"symm_out\"", ":", "sent", ".", "SimpleSentence", "(", "words", "=", "generated_word_ids", ",", "\n", "idx", "=", "self", ".", "cur_src", ".", "batches", "[", "0", "]", "[", "0", "]", ".", "idx", ",", "\n", "vocab", "=", "self", ".", "cur_src", ".", "batches", "[", "1", "]", "[", "0", "]", ".", "vocab", ",", "\n", "output_procs", "=", "self", ".", "cur_src", ".", "batches", "[", "1", "]", "[", "0", "]", ".", "output_procs", ")", ",", "\n", "\"symm_ref\"", ":", "self", ".", "cur_src", ".", "batches", "[", "1", "]", "[", "0", "]", "if", "isinstance", "(", "self", ".", "cur_src", ",", "\n", "batchers", ".", "CompoundBatch", ")", "else", "None", "}", ")", "\n", "# prepare final outputs", "\n", "", "for", "layer_i", "in", "range", "(", "len", "(", "current_state", ".", "rnn_state", ".", "h", "(", ")", ")", ")", ":", "\n", "      ", "self", ".", "_final_states", ".", "append", "(", "transducers", ".", "FinalTransducerState", "(", "main_expr", "=", "current_state", ".", "rnn_state", ".", "h", "(", ")", "[", "layer_i", "]", ",", "\n", "cell_expr", "=", "current_state", ".", "rnn_state", ".", "_c", "[", "layer_i", "]", ")", ")", "\n", "", "out_mask", ".", "np_arr", ".", "flags", ".", "writeable", "=", "False", "\n", "return", "expression_seqs", ".", "ExpressionSequence", "(", "expr_list", "=", "output_states", ",", "mask", "=", "out_mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator._batch_max_action": [[263, 270], ["xnmt.batchers.mark_as_batch", "xnmt.batchers.mark_as_batch", "numpy.argmax", "current_state.out_prob.npvalue", "numpy.argmax", "current_state.out_prob.npvalue"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch"], ["", "def", "_batch_max_action", "(", "self", ",", "batch_size", ",", "current_state", ",", "pos", ")", ":", "\n", "    ", "if", "pos", "==", "0", ":", "\n", "      ", "return", "None", "\n", "", "elif", "batch_size", ">", "1", ":", "\n", "      ", "return", "batchers", ".", "mark_as_batch", "(", "np", ".", "argmax", "(", "current_state", ".", "out_prob", ".", "npvalue", "(", ")", ",", "axis", "=", "0", ")", ")", "\n", "", "else", ":", "\n", "      ", "return", "batchers", ".", "mark_as_batch", "(", "[", "np", ".", "argmax", "(", "current_state", ".", "out_prob", ".", "npvalue", "(", ")", ",", "axis", "=", "0", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator._batch_ref_action": [[271, 280], ["xnmt.batchers.mark_as_batch", "xnmt.batchers.mark_as_batch.append", "xnmt.batchers.mark_as_batch.append"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "", "def", "_batch_ref_action", "(", "self", ",", "pos", ")", ":", "\n", "    ", "ref_action", "=", "[", "]", "\n", "for", "src_sent", "in", "self", ".", "cur_src", ".", "batches", "[", "1", "]", ":", "\n", "      ", "if", "src_sent", "[", "pos", "]", "is", "None", ":", "\n", "        ", "ref_action", ".", "append", "(", "vocabs", ".", "Vocab", ".", "ES", ")", "\n", "", "else", ":", "\n", "        ", "ref_action", ".", "append", "(", "src_sent", "[", "pos", "]", ")", "\n", "", "", "ref_action", "=", "batchers", ".", "mark_as_batch", "(", "ref_action", ")", "\n", "return", "ref_action", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.get_final_states": [[281, 283], ["None"], "methods", ["None"], ["", "def", "get_final_states", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "_final_states", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.calc_nll": [[284, 316], ["xnmt.event_trigger.start_sent", "isinstance", "symmetric_translator.SymmetricTranslator._encode_src", "trg.sent_len", "xnmt.batchers.is_batched", "range", "dynet.esum", "xnmt.batchers.is_batched", "enumerate", "symmetric_translator.SymmetricTranslator.calc_loss_one_step", "xnmt.losses.append", "xnmt.batchers.is_batched", "xnmt.batchers.mark_as_batch", "xnmt.batchers.is_batched", "trg_mask.cmult_by_timestep_expr", "single_trg.sent_len", "len", "xnmt.batchers.mark_as_batch.batch_size", "range"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.start_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator._encode_src", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.calc_loss_one_step", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.is_batched", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.cmult_by_timestep_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.sent_len", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.batch_size"], ["", "def", "calc_nll", "(", "self", ",", "src", ",", "trg", ")", ":", "\n", "    ", "event_trigger", ".", "start_sent", "(", "src", ")", "\n", "if", "isinstance", "(", "src", ",", "batchers", ".", "CompoundBatch", ")", ":", "\n", "      ", "src", ",", "_", "=", "src", ".", "batches", "\n", "", "initial_state", "=", "self", ".", "_encode_src", "(", "src", ")", "\n", "\n", "dec_state", "=", "initial_state", "\n", "trg_mask", "=", "trg", ".", "mask", "if", "batchers", ".", "is_batched", "(", "trg", ")", "else", "None", "\n", "losses", "=", "[", "]", "\n", "seq_len", "=", "trg", ".", "sent_len", "(", ")", "\n", "if", "batchers", ".", "is_batched", "(", "src", ")", ":", "\n", "      ", "for", "j", ",", "single_trg", "in", "enumerate", "(", "trg", ")", ":", "\n", "        ", "assert", "single_trg", ".", "sent_len", "(", ")", "==", "seq_len", "# assert consistent length", "\n", "assert", "1", "==", "len", "(", "[", "i", "for", "i", "in", "range", "(", "seq_len", ")", "if", "(", "trg_mask", "is", "None", "or", "trg_mask", ".", "np_arr", "[", "j", ",", "i", "]", "==", "0", ")", "\n", "and", "single_trg", "[", "i", "]", "==", "vocabs", ".", "Vocab", ".", "ES", "]", ")", "# assert exactly one unmasked ES token", "\n", "", "", "prev_ref_word", "=", "None", "\n", "for", "i", "in", "range", "(", "seq_len", ")", ":", "\n", "      ", "if", "not", "batchers", ".", "is_batched", "(", "trg", ")", ":", "\n", "        ", "ref_word", "=", "trg", "[", "i", "]", "\n", "", "else", ":", "\n", "        ", "ref_word", "=", "batchers", ".", "mark_as_batch", "(", "[", "single_trg", "[", "i", "]", "for", "single_trg", "in", "trg", "]", ")", "\n", "", "word_loss", "=", "self", ".", "calc_loss_one_step", "(", "dec_state", "=", "dec_state", ",", "\n", "batch_size", "=", "ref_word", ".", "batch_size", "(", ")", ",", "\n", "ref_action", "=", "ref_word", ",", "\n", "prev_ref_action", "=", "prev_ref_word", ",", "\n", "mode", "=", "self", ".", "mode_translate", ")", "\n", "if", "batchers", ".", "is_batched", "(", "src", ")", "and", "trg_mask", "is", "not", "None", ":", "\n", "        ", "word_loss", "=", "trg_mask", ".", "cmult_by_timestep_expr", "(", "word_loss", ",", "i", ",", "inverse", "=", "True", ")", "\n", "", "losses", ".", "append", "(", "word_loss", ")", "\n", "prev_ref_word", "=", "ref_word", "\n", "\n", "", "return", "dy", ".", "esum", "(", "losses", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.generate": [[317, 387], ["xnmt.event_trigger.start_sent", "isinstance", "src.batch_size", "xnmt.batchers.ListBatch", "xnmt.batchers.ListBatch", "symmetric_translator.SymmetricTranslator._encode_src", "range", "range", "symmetric_translator.SymmetricTranslator.generate_one_step", "attentions.append", "logsoft.reshape.reshape.npvalue", "logsoft.reshape.reshape.reshape", "range", "all", "sum", "outputs.append", "symmetric_translator.SymmetricTranslator.attender.get_last_attention().npvalue", "numpy.argmax", "batched_word_id.reshape.reshape.reshape", "score[].append", "words[].append", "xnmt.sent.SimpleSentence", "numpy.concatenate", "symmetric_translator.SymmetricTranslator.report_sent_info", "range", "range", "xnmt.batchers.mark_as_batch", "symmetric_translator.SymmetricTranslator._terminate_rnn", "xnmt.batchers.mark_as_batch", "xnmt.batchers.mark_as_batch", "symmetric_translator.SymmetricTranslator.attender.get_last_attention", "getattr", "numpy.argmax", "range", "current_state.out_prob.npvalue", "numpy.argmax", "current_state.out_prob.npvalue"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.event_trigger.start_sent", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.batch_size", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator._encode_src", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.generate_one_step", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.reports.Reportable.report_sent_info", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator._terminate_rnn", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.attenders.Attender.get_last_attention"], ["", "def", "generate", "(", "self", ",", "src", ",", "forced_trg_ids", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "    ", "event_trigger", ".", "start_sent", "(", "src", ")", "\n", "if", "isinstance", "(", "src", ",", "batchers", ".", "CompoundBatch", ")", ":", "\n", "      ", "src", "=", "src", ".", "batches", "[", "0", "]", "\n", "\n", "", "outputs", "=", "[", "]", "\n", "\n", "batch_size", "=", "src", ".", "batch_size", "(", ")", "\n", "score", "=", "batchers", ".", "ListBatch", "(", "[", "[", "]", "for", "_", "in", "range", "(", "batch_size", ")", "]", ")", "\n", "words", "=", "batchers", ".", "ListBatch", "(", "[", "[", "]", "for", "_", "in", "range", "(", "batch_size", ")", "]", ")", "\n", "done", "=", "[", "False", "]", "*", "batch_size", "\n", "initial_state", "=", "self", ".", "_encode_src", "(", "src", ")", "\n", "current_state", "=", "initial_state", "\n", "attentions", "=", "[", "]", "\n", "for", "pos", "in", "range", "(", "self", ".", "max_dec_len", ")", ":", "\n", "      ", "prev_ref_action", "=", "None", "\n", "if", "pos", ">", "0", "and", "self", ".", "mode_translate", "!=", "\"context\"", ":", "\n", "        ", "if", "forced_trg_ids", "is", "not", "None", ":", "\n", "          ", "prev_ref_action", "=", "batchers", ".", "mark_as_batch", "(", "\n", "[", "forced_trg_ids", "[", "batch_i", "]", "[", "pos", "-", "1", "]", "for", "batch_i", "in", "range", "(", "batch_size", ")", "]", ")", "\n", "", "elif", "batch_size", ">", "1", ":", "\n", "          ", "prev_ref_action", "=", "batchers", ".", "mark_as_batch", "(", "np", ".", "argmax", "(", "current_state", ".", "out_prob", ".", "npvalue", "(", ")", ",", "axis", "=", "0", ")", ")", "\n", "", "else", ":", "\n", "          ", "prev_ref_action", "=", "batchers", ".", "mark_as_batch", "(", "[", "np", ".", "argmax", "(", "current_state", ".", "out_prob", ".", "npvalue", "(", ")", ",", "axis", "=", "0", ")", "]", ")", "\n", "\n", "", "", "logsoft", "=", "self", ".", "generate_one_step", "(", "dec_state", "=", "current_state", ",", "\n", "batch_size", "=", "batch_size", ",", "\n", "mode", "=", "self", ".", "mode_translate", ",", "\n", "cur_step", "=", "pos", ",", "\n", "prev_ref_action", "=", "prev_ref_action", ")", "\n", "attentions", ".", "append", "(", "self", ".", "attender", ".", "get_last_attention", "(", ")", ".", "npvalue", "(", ")", ")", "\n", "logsoft", "=", "logsoft", ".", "npvalue", "(", ")", "\n", "logsoft", "=", "logsoft", ".", "reshape", "(", "logsoft", ".", "shape", "[", "0", "]", ",", "batch_size", ")", "\n", "if", "forced_trg_ids", "is", "None", ":", "\n", "        ", "batched_word_id", "=", "np", ".", "argmax", "(", "logsoft", ",", "axis", "=", "0", ")", "\n", "batched_word_id", "=", "batched_word_id", ".", "reshape", "(", "(", "batched_word_id", ".", "size", ",", ")", ")", "\n", "", "else", ":", "\n", "        ", "batched_word_id", "=", "[", "forced_trg_batch_elem", "[", "pos", "]", "for", "forced_trg_batch_elem", "in", "forced_trg_ids", "]", "\n", "", "for", "batch_i", "in", "range", "(", "batch_size", ")", ":", "\n", "        ", "if", "done", "[", "batch_i", "]", ":", "\n", "          ", "batch_word", "=", "vocabs", ".", "Vocab", ".", "ES", "\n", "batch_score", "=", "0.0", "\n", "", "else", ":", "\n", "          ", "batch_word", "=", "batched_word_id", "[", "batch_i", "]", "\n", "batch_score", "=", "logsoft", "[", "batch_word", ",", "batch_i", "]", "\n", "if", "self", ".", "_terminate_rnn", "(", "batch_i", "=", "batch_i", ",", "pos", "=", "pos", ",", "batched_word_id", "=", "batched_word_id", ")", ":", "\n", "            ", "done", "[", "batch_i", "]", "=", "True", "\n", "", "", "score", "[", "batch_i", "]", ".", "append", "(", "batch_score", ")", "\n", "words", "[", "batch_i", "]", ".", "append", "(", "batch_word", ")", "\n", "", "if", "all", "(", "done", ")", ":", "\n", "        ", "break", "\n", "", "", "for", "batch_i", "in", "range", "(", "batch_size", ")", ":", "\n", "      ", "batch_elem_score", "=", "sum", "(", "score", "[", "batch_i", "]", ")", "\n", "outputs", ".", "append", "(", "sent", ".", "SimpleSentence", "(", "words", "=", "words", "[", "batch_i", "]", ",", "\n", "idx", "=", "src", "[", "batch_i", "]", ".", "idx", ",", "\n", "vocab", "=", "getattr", "(", "self", ".", "trg_reader", ",", "\"vocab\"", ",", "None", ")", ",", "\n", "score", "=", "batch_elem_score", ",", "\n", "output_procs", "=", "self", ".", "trg_reader", ".", "output_procs", ")", ")", "\n", "if", "self", ".", "compute_report", ":", "\n", "        ", "if", "batch_size", ">", "1", ":", "\n", "          ", "cur_attentions", "=", "[", "x", "[", ":", ",", ":", ",", "batch_i", "]", "for", "x", "in", "attentions", "]", "\n", "", "else", ":", "\n", "          ", "cur_attentions", "=", "attentions", "\n", "", "attention", "=", "np", ".", "concatenate", "(", "cur_attentions", ",", "axis", "=", "1", ")", "\n", "self", ".", "report_sent_info", "(", "{", "\"attentions\"", ":", "attention", ",", "\n", "\"src\"", ":", "src", "[", "batch_i", "]", ",", "\n", "\"output\"", ":", "outputs", "[", "-", "1", "]", "}", ")", "\n", "\n", "\n", "", "", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.calc_loss_one_step": [[388, 402], ["symmetric_translator.SymmetricTranslator._unfold_one_step", "symmetric_translator.SymmetricTranslator.scorer.calc_probs", "symmetric_translator.SymmetricTranslator.scorer.calc_loss", "xnmt.batchers.mark_as_batch"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator._unfold_one_step", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.scorers.Softmax.calc_probs", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.dual_encoder.DualEncoderSimilarity.calc_loss", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.mark_as_batch"], ["", "def", "calc_loss_one_step", "(", "self", ",", "\n", "dec_state", ":", "SymmetricDecoderState", ",", "\n", "batch_size", ":", "int", ",", "\n", "prev_ref_action", ":", "Optional", "[", "batchers", ".", "Batch", "]", ",", "\n", "mode", ":", "str", ",", "\n", "ref_action", ":", "Optional", "[", "batchers", ".", "Batch", "]", "=", "None", ")", "->", "Optional", "[", "dy", ".", "Expression", "]", ":", "\n", "    ", "outputs", "=", "self", ".", "_unfold_one_step", "(", "dec_state", "=", "dec_state", ",", "batch_size", "=", "batch_size", ",", "mode", "=", "mode", ",", "mask", "=", "None", ",", "cur_step", "=", "None", ",", "\n", "prev_ref_action", "=", "prev_ref_action", ")", "\n", "if", "mode", "not", "in", "[", "\"teacher\"", ",", "\"split\"", "]", ":", "\n", "      ", "dec_state", ".", "out_prob", "=", "self", ".", "scorer", ".", "calc_probs", "(", "outputs", ")", "\n", "", "if", "ref_action", ":", "\n", "      ", "word_loss", "=", "self", ".", "scorer", ".", "calc_loss", "(", "outputs", ",", "batchers", ".", "mark_as_batch", "(", "ref_action", ")", ")", "\n", "return", "word_loss", "\n", "", "else", ":", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.generate_one_step": [[403, 415], ["symmetric_translator.SymmetricTranslator._unfold_one_step", "symmetric_translator.SymmetricTranslator.scorer.calc_scores", "symmetric_translator.SymmetricTranslator.scorer.calc_probs"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator._unfold_one_step", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.scorers.Softmax.calc_scores", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.scorers.Softmax.calc_probs"], ["", "def", "generate_one_step", "(", "self", ",", "\n", "dec_state", ":", "SymmetricDecoderState", ",", "\n", "batch_size", ":", "int", ",", "\n", "mode", ":", "str", ",", "\n", "mask", ":", "Optional", "[", "batchers", ".", "Mask", "]", "=", "None", ",", "\n", "cur_step", ":", "Optional", "[", "int", "]", "=", "None", ",", "\n", "prev_ref_action", ":", "Optional", "[", "batchers", ".", "Batch", "]", "=", "None", ")", "->", "dy", ".", "Expression", ":", "\n", "    ", "outputs", "=", "self", ".", "_unfold_one_step", "(", "dec_state", "=", "dec_state", ",", "batch_size", "=", "batch_size", ",", "mode", "=", "mode", ",", "mask", "=", "mask", ",", "cur_step", "=", "cur_step", ",", "\n", "prev_ref_action", "=", "prev_ref_action", ")", "\n", "if", "mode", "in", "[", "\"expected\"", ",", "\"argmax\"", ",", "\"argmax_st\"", ",", "\"teacher\"", ",", "\"split\"", "]", ":", "\n", "      ", "dec_state", ".", "out_prob", "=", "self", ".", "scorer", ".", "calc_probs", "(", "outputs", ")", "\n", "", "return", "self", ".", "scorer", ".", "calc_scores", "(", "outputs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator._unfold_one_step": [[416, 437], ["symmetric_translator.SymmetricTranslator._choose_rnn_input", "dec_state.rnn_state.output", "symmetric_translator.SymmetricTranslator.attender.calc_context", "symmetric_translator.SymmetricTranslator.transform.transform", "dec_state.rnn_state.add_input", "list", "list", "range", "tuple", "tuple", "dynet.dropout_batch", "dynet.concatenate", "numpy.isclose", "len", "numpy.sum", "new_rnn_state.h", "mask.cmult_by_timestep_expr", "mask.cmult_by_timestep_expr", "mask.cmult_by_timestep_expr", "mask.cmult_by_timestep_expr", "new_rnn_state.h", "dec_state.rnn_state.h"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator._choose_rnn_input", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMState.output", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.attenders.MlpLocationAttender.calc_context", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.DenseWordEmbedder.transform", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.decoders.AutoRegressiveDecoder.add_input", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMState.h", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.cmult_by_timestep_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.cmult_by_timestep_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.cmult_by_timestep_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.cmult_by_timestep_expr", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMState.h", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.transducers.recurrent.UniLSTMState.h"], ["", "def", "_unfold_one_step", "(", "self", ",", "dec_state", ",", "batch_size", ",", "mode", ",", "mask", ",", "cur_step", ",", "prev_ref_action", ")", ":", "\n", "    ", "lstm_input", "=", "self", ".", "_choose_rnn_input", "(", "dec_state", "=", "dec_state", ",", "batch_size", "=", "batch_size", ",", "prev_ref_action", "=", "prev_ref_action", ",", "\n", "mode", "=", "mode", ")", "\n", "new_rnn_state", "=", "dec_state", ".", "rnn_state", ".", "add_input", "(", "lstm_input", ")", "if", "lstm_input", "else", "dec_state", ".", "rnn_state", "\n", "if", "not", "(", "mask", "is", "None", "or", "np", ".", "isclose", "(", "np", ".", "sum", "(", "mask", ".", "np_arr", "[", ":", ",", "cur_step", ":", "cur_step", "+", "1", "]", ")", ",", "0.0", ")", ")", ":", "\n", "      ", "new_rnn_state", ".", "_h", "=", "list", "(", "new_rnn_state", ".", "_h", ")", "\n", "new_rnn_state", ".", "_c", "=", "list", "(", "new_rnn_state", ".", "_c", ")", "\n", "for", "layer_i", "in", "range", "(", "len", "(", "new_rnn_state", ".", "h", "(", ")", ")", ")", ":", "\n", "        ", "new_rnn_state", ".", "_h", "[", "layer_i", "]", "=", "mask", ".", "cmult_by_timestep_expr", "(", "new_rnn_state", ".", "h", "(", ")", "[", "layer_i", "]", ",", "cur_step", ",", "True", ")", "+", "mask", ".", "cmult_by_timestep_expr", "(", "dec_state", ".", "rnn_state", ".", "h", "(", ")", "[", "layer_i", "]", ",", "cur_step", ",", "False", ")", "\n", "new_rnn_state", ".", "_c", "[", "layer_i", "]", "=", "mask", ".", "cmult_by_timestep_expr", "(", "new_rnn_state", ".", "_c", "[", "layer_i", "]", ",", "cur_step", ",", "True", ")", "+", "mask", ".", "cmult_by_timestep_expr", "(", "dec_state", ".", "rnn_state", ".", "_c", "[", "layer_i", "]", ",", "cur_step", ",", "False", ")", "\n", "", "new_rnn_state", ".", "_h", "=", "tuple", "(", "new_rnn_state", ".", "_h", ")", "\n", "new_rnn_state", ".", "_c", "=", "tuple", "(", "new_rnn_state", ".", "_c", ")", "\n", "", "dec_state", ".", "rnn_state", "=", "new_rnn_state", "\n", "rnn_output", "=", "dec_state", ".", "rnn_state", ".", "output", "(", ")", "\n", "dec_state", ".", "context", "=", "self", ".", "attender", ".", "calc_context", "(", "rnn_output", ")", "\n", "if", "self", ".", "dropout_dec_state", "and", "self", ".", "train", ":", "\n", "      ", "rnn_output", "=", "dy", ".", "dropout_batch", "(", "rnn_output", ",", "self", ".", "dropout_dec_state", ")", "\n", "", "outputs", "=", "self", ".", "transform", ".", "transform", "(", "dy", ".", "concatenate", "(", "[", "rnn_output", ",", "dec_state", ".", "context", "]", ")", ")", "\n", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator._terminate_rnn": [[438, 445], ["[].len_unpadded", "ValueError"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.sent.ArraySentence.len_unpadded"], ["", "def", "_terminate_rnn", "(", "self", ",", "batch_i", ",", "pos", ",", "batched_word_id", ")", ":", "\n", "    ", "if", "self", ".", "unfold_until", "==", "\"supervised\"", ":", "\n", "      ", "return", "pos", ">=", "self", ".", "cur_src", ".", "batches", "[", "1", "]", "[", "batch_i", "]", ".", "len_unpadded", "(", ")", "\n", "", "elif", "self", ".", "unfold_until", "==", "\"eos\"", ":", "\n", "      ", "return", "batched_word_id", "[", "batch_i", "]", "==", "vocabs", ".", "Vocab", ".", "ES", "\n", "", "else", ":", "\n", "      ", "raise", "ValueError", "(", "f\"unknown value '{self.unfold_until}' for unfold_until\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator._choose_rnn_input": [[446, 487], ["dynet.reshape", "symmetric_translator.SymmetricTranslator._chosen_rnn_inputs.append", "dec_state.context.dim", "dynet.reshape", "dynet.reshape", "dynet.parameter", "dynet.reshape", "dynet.reshape", "dynet.argmax", "dynet.parameter", "ValueError", "symmetric_translator.SymmetricTranslator.trg_embedder.embed", "dec_state.out_prob.npvalue", "range", "range", "dynet.sparse_inputTensor", "dynet.reshape", "dynet.reshape", "random.random", "sampled_vals.append", "idxs[].append", "idxs[].append", "dynet.parameter", "numpy.random.choice", "numpy.ones", "numpy.sum"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.modelparts.embedders.FactorEmbedder.embed", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "", "def", "_choose_rnn_input", "(", "self", ",", "dec_state", ",", "batch_size", ",", "prev_ref_action", ",", "mode", ")", ":", "\n", "    ", "hidden_size", "=", "dec_state", ".", "context", ".", "dim", "(", ")", "[", "0", "]", "[", "0", "]", "\n", "vocab_size", "=", "self", ".", "trg_embedder", ".", "vocab_size", "\n", "if", "mode", "==", "\"context\"", ":", "\n", "      ", "context_vec", "=", "dy", ".", "reshape", "(", "dec_state", ".", "context", ",", "(", "hidden_size", ",", ")", ",", "batch_size", "=", "batch_size", ")", "\n", "ret", "=", "context_vec", "\n", "", "elif", "dec_state", ".", "out_prob", "is", "None", "and", "prev_ref_action", "is", "None", ":", "\n", "      ", "ret", "=", "None", "\n", "", "elif", "mode", "==", "\"expected\"", ":", "\n", "      ", "ret", "=", "dy", ".", "reshape", "(", "dec_state", ".", "out_prob", ",", "(", "1", ",", "vocab_size", ")", ",", "batch_size", "=", "batch_size", ")", "*", "dy", ".", "parameter", "(", "self", ".", "trg_embedder", ".", "embeddings", ")", "\n", "ret", "=", "dy", ".", "reshape", "(", "ret", ",", "(", "hidden_size", ",", ")", ",", "batch_size", "=", "batch_size", ")", "\n", "", "elif", "mode", "in", "[", "\"argmax\"", ",", "\"argmax_st\"", "]", ":", "\n", "      ", "gradient_mode", "=", "\"zero_gradient\"", "if", "mode", "==", "\"argmax\"", "else", "\"straight_through_gradient\"", "\n", "argmax", "=", "dy", ".", "reshape", "(", "dy", ".", "argmax", "(", "dec_state", ".", "out_prob", ",", "gradient_mode", "=", "gradient_mode", ")", ",", "(", "1", ",", "vocab_size", ")", ",", "\n", "batch_size", "=", "batch_size", ")", "\n", "ret", "=", "argmax", "*", "dy", ".", "parameter", "(", "self", ".", "trg_embedder", ".", "embeddings", ")", "\n", "ret", "=", "dy", ".", "reshape", "(", "ret", ",", "(", "hidden_size", ",", ")", ",", "batch_size", "=", "batch_size", ")", "\n", "", "elif", "mode", "in", "[", "\"teacher\"", ",", "\"split\"", "]", ":", "\n", "      ", "do_sample", "=", "self", ".", "train", "and", "dec_state", ".", "out_prob", "and", "self", ".", "sampling_prob", ">", "0.0", "and", "random", ".", "random", "(", ")", "<", "self", ".", "sampling_prob", "\n", "if", "not", "do_sample", ":", "\n", "        ", "ret", "=", "self", ".", "trg_embedder", ".", "embed", "(", "prev_ref_action", ")", "\n", "", "else", ":", "# do sample", "\n", "        ", "sampled_vals", "=", "[", "]", "\n", "npval", "=", "dec_state", ".", "out_prob", ".", "npvalue", "(", ")", "\n", "for", "bi", "in", "range", "(", "batch_size", ")", ":", "\n", "          ", "npval_bi", "=", "npval", "[", ":", ",", "bi", "]", "if", "batch_size", ">", "1", "else", "npval", "\n", "sampled_vals", ".", "append", "(", "\n", "np", ".", "random", ".", "choice", "(", "vocab_size", ",", "\n", "p", "=", "npval_bi", "/", "np", ".", "sum", "(", "npval_bi", ")", ")", ")", "\n", "", "idxs", "=", "(", "[", "]", ",", "[", "]", ")", "\n", "for", "batch_i", "in", "range", "(", "batch_size", ")", ":", "\n", "          ", "idxs", "[", "0", "]", ".", "append", "(", "sampled_vals", "[", "batch_i", "]", ")", "\n", "idxs", "[", "1", "]", ".", "append", "(", "batch_i", ")", "\n", "", "argmax", "=", "dy", ".", "sparse_inputTensor", "(", "idxs", ",", "values", "=", "np", ".", "ones", "(", "batch_size", ")", ",", "shape", "=", "(", "vocab_size", ",", "batch_size", ")", ",", "batched", "=", "True", ",", ")", "\n", "argmax", "=", "dy", ".", "reshape", "(", "argmax", ",", "(", "1", ",", "vocab_size", ")", ",", "batch_size", "=", "batch_size", ")", "\n", "ret", "=", "argmax", "*", "dy", ".", "parameter", "(", "self", ".", "trg_embedder", ".", "embeddings", ")", "\n", "ret", "=", "dy", ".", "reshape", "(", "ret", ",", "(", "hidden_size", ",", ")", ",", "batch_size", "=", "batch_size", ")", "\n", "", "", "else", ":", "\n", "      ", "raise", "ValueError", "(", "f\"unknown value for mode: {mode}\"", ")", "\n", "", "if", "ret", "is", "not", "None", ":", "self", ".", "_chosen_rnn_inputs", ".", "append", "(", "ret", ")", "\n", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.symmetric_translator.SymmetricTranslator.on_calc_additional_loss": [[488, 498], ["dynet.esum", "len", "xnmt.losses.FactoredLossExpr"], "methods", ["None"], ["", "@", "events", ".", "handle_xnmt_event", "\n", "def", "on_calc_additional_loss", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "loss_dict", "=", "{", "}", "\n", "if", "self", ".", "transducer_loss", "and", "self", ".", "transducer_losses", ":", "\n", "      ", "loss_expr", "=", "dy", ".", "esum", "(", "self", ".", "transducer_losses", ")", "\n", "loss_dict", "[", "\"symm_transd_loss\"", "]", "=", "loss_expr", "\n", "", "if", "self", ".", "split_reg_penalty_expr", "is", "not", "None", ":", "\n", "      ", "loss_dict", "[", "\"symm_transd_reg_penalty\"", "]", "=", "self", ".", "split_reg_penalty_expr", "\n", "", "if", "len", "(", "loss_dict", ")", "==", "0", ":", "return", "None", "\n", "else", ":", "return", "losses", ".", "FactoredLossExpr", "(", "loss_dict", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.regularizers.WeightNoise.__init__": [[4, 6], ["None"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "std", ")", ":", "\n", "    ", "self", ".", "std", "=", "std", "\n", "", "def", "__call__", "(", "self", ",", "p", ",", "train", "=", "True", ")", ":", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.regularizers.WeightNoise.__call__": [[6, 18], ["dynet.parameter", "dynet.noise"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "p", ",", "train", "=", "True", ")", ":", "\n", "    ", "\"\"\"\n    Args:\n      DyNet parameter (not expression)\n      train: only apply noise if True\n    Return:\n      DyNet expression with weight noise applied if self.std > 0\n    \"\"\"", "\n", "p_expr", "=", "dy", ".", "parameter", "(", "p", ")", "\n", "if", "self", ".", "std", ">", "0.0", "and", "train", ":", "\n", "      ", "p_expr", "=", "dy", ".", "noise", "(", "p_expr", ",", "self", ".", "std", ")", "\n", "", "return", "p_expr", "\n", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.conv_encoder.StridedConvSeqTransducer.__init__": [[38, 90], ["xnmt.persistence.Ref", "xnmt.persistence.Ref", "xnmt.param_collections.ParamManager.my_params", "xnmt.custom.regularizers.WeightNoise", "range", "ValueError", "xnmt.param_collections.ParamManager.my_params.add_parameters", "conv_encoder.StridedConvSeqTransducer.filters_layers.append", "xnmt.persistence.bare", "conv_encoder.StridedConvSeqTransducer.bn_layers.append", "xnmt.norms.BatchNorm", "isinstance", "param_init[].initializer", "param_init.initializer"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamManager.my_params", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.bare", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer"], ["@", "events", ".", "register_xnmt_handler", "\n", "@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "\n", "weight_noise", ":", "float", "=", "Ref", "(", "\"exp_global.weight_noise\"", ",", "default", "=", "0.0", ")", ",", "\n", "layers", ":", "int", "=", "1", ",", "\n", "input_dim", ":", "int", "=", "120", ",", "\n", "chn_dim", ":", "int", "=", "3", ",", "\n", "num_filters", ":", "int", "=", "32", ",", "\n", "stride", ":", "Tuple", "[", "int", "]", "=", "(", "2", ",", "2", ")", ",", "\n", "batch_norm", ":", "bool", "=", "False", ",", "\n", "nonlinearity", ":", "str", "=", "\"rectify\"", ",", "\n", "pre_activation", ":", "bool", "=", "False", ",", "\n", "output_tensor", ":", "bool", "=", "False", ",", "\n", "transpose", ":", "bool", "=", "True", ",", "\n", "param_init", ":", "param_initializers", ".", "ParamInitializer", "=", "Ref", "(", "\"exp_global.param_init\"", ",", "\n", "default", "=", "bare", "(", "param_initializers", ".", "GlorotInitializer", ")", ")", ")", ":", "\n", "    ", "assert", "layers", ">", "0", "\n", "if", "input_dim", "%", "chn_dim", "!=", "0", ":", "\n", "      ", "raise", "ValueError", "(", "f\"StridedConvEncoder requires input_dim mod chn_dim == 0, got: {input_dim} and {chn_dim}\"", ")", "\n", "\n", "", "param_col", "=", "param_collections", ".", "ParamManager", ".", "my_params", "(", "self", ")", "\n", "self", ".", "layers", "=", "layers", "\n", "self", ".", "chn_dim", "=", "chn_dim", "\n", "self", ".", "freq_dim", "=", "input_dim", "/", "chn_dim", "\n", "self", ".", "num_filters", "=", "num_filters", "\n", "self", ".", "filter_size_time", "=", "3", "\n", "self", ".", "filter_size_freq", "=", "3", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "output_transposed_tensor", "=", "output_tensor", "\n", "self", ".", "nonlinearity", "=", "nonlinearity", "\n", "self", ".", "pre_activation", "=", "pre_activation", "\n", "\n", "self", ".", "use_bn", "=", "batch_norm", "\n", "self", ".", "train", "=", "True", "\n", "self", ".", "transpose", "=", "transpose", "\n", "self", ".", "weight_noise", "=", "regularizers", ".", "WeightNoise", "(", "weight_noise", ")", "\n", "\n", "self", ".", "bn_layers", "=", "[", "]", "\n", "self", ".", "filters_layers", "=", "[", "]", "\n", "for", "layer_i", "in", "range", "(", "layers", ")", ":", "\n", "      ", "filter_dim", "=", "(", "self", ".", "filter_size_time", ",", "\n", "self", ".", "filter_size_freq", ",", "\n", "self", ".", "chn_dim", "if", "layer_i", "==", "0", "else", "self", ".", "num_filters", ",", "\n", "self", ".", "num_filters", ")", "\n", "filters", "=", "param_col", ".", "add_parameters", "(", "dim", "=", "filter_dim", ",", "\n", "init", "=", "param_init", "[", "layer_i", "]", ".", "initializer", "(", "filter_dim", ")", "if", "isinstance", "(", "param_init", ",", "\n", "Sequence", ")", "else", "param_init", ".", "initializer", "(", "\n", "filter_dim", ")", ")", "\n", "if", "self", ".", "use_bn", ":", "\n", "        ", "self", ".", "bn_layers", ".", "append", "(", "\n", "norms", ".", "BatchNorm", "(", "param_col", ",", "(", "self", ".", "chn_dim", "if", "self", ".", "pre_activation", "else", "self", ".", "num_filters", ")", ",", "3", ")", ")", "\n", "", "self", ".", "filters_layers", ".", "append", "(", "filters", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.conv_encoder.StridedConvSeqTransducer.on_set_train": [[91, 94], ["None"], "methods", ["None"], ["", "", "@", "events", ".", "handle_xnmt_event", "\n", "def", "on_set_train", "(", "self", ",", "val", ")", ":", "\n", "    ", "self", ".", "train", "=", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.conv_encoder.StridedConvSeqTransducer.get_output_dim": [[95, 101], ["range", "int", "math.ceil", "float", "float", "conv_encoder.StridedConvSeqTransducer.get_stride_for_layer"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.conv_encoder.PoolingConvSeqTransducer.get_stride_for_layer"], ["", "def", "get_output_dim", "(", "self", ")", ":", "\n", "    ", "conv_dim", "=", "self", ".", "freq_dim", "\n", "for", "layer_i", "in", "range", "(", "self", ".", "layers", ")", ":", "\n", "      ", "conv_dim", "=", "int", "(", "\n", "math", ".", "ceil", "(", "float", "(", "conv_dim", "-", "self", ".", "filter_size_freq", "+", "1", ")", "/", "float", "(", "self", ".", "get_stride_for_layer", "(", "layer_i", ")", "[", "1", "]", ")", ")", ")", "\n", "", "return", "conv_dim", "*", "self", ".", "num_filters", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.conv_encoder.StridedConvSeqTransducer.get_stride_for_layer": [[102, 108], ["type", "type"], "methods", ["None"], ["", "def", "get_stride_for_layer", "(", "self", ",", "layer_i", ")", ":", "\n", "    ", "if", "type", "(", "self", ".", "stride", ")", "==", "tuple", ":", "\n", "      ", "return", "self", ".", "stride", "\n", "", "else", ":", "\n", "      ", "assert", "type", "(", "self", ".", "stride", ")", "==", "list", "\n", "return", "self", ".", "stride", "[", "layer_i", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.conv_encoder.StridedConvSeqTransducer.get_output_len": [[109, 115], ["range", "int", "math.ceil", "float", "float", "conv_encoder.StridedConvSeqTransducer.get_stride_for_layer"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.conv_encoder.PoolingConvSeqTransducer.get_stride_for_layer"], ["", "", "def", "get_output_len", "(", "self", ",", "input_len", ")", ":", "\n", "    ", "conv_dim", "=", "input_len", "\n", "for", "layer_i", "in", "range", "(", "self", ".", "layers", ")", ":", "\n", "      ", "conv_dim", "=", "int", "(", "\n", "math", ".", "ceil", "(", "float", "(", "conv_dim", "-", "self", ".", "filter_size_time", "+", "1", ")", "/", "float", "(", "self", ".", "get_stride_for_layer", "(", "layer_i", ")", "[", "0", "]", ")", ")", ")", "\n", "", "return", "conv_dim", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.conv_encoder.StridedConvSeqTransducer.pad": [[116, 122], ["dynet.concatenate", "dynet.zeroes", "expr.dim"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["", "def", "pad", "(", "self", ",", "expr", ",", "pad_size", ")", ":", "\n", "    ", "assert", "pad_size", ">=", "0", "\n", "if", "pad_size", "==", "0", ":", "\n", "      ", "return", "expr", "\n", "", "return", "dy", ".", "concatenate", "(", "[", "expr", ",", "dy", ".", "zeroes", "(", "(", "pad_size", ",", "self", ".", "freq_dim", "*", "self", ".", "chn_dim", ")", ",", "batch_size", "=", "expr", ".", "dim", "(", ")", "[", "\n", "1", "]", ")", "]", ")", "# TODO: replicate last frame instead of padding zeros", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.conv_encoder.StridedConvSeqTransducer.apply_nonlinearity": [[123, 131], ["dynet.rectify", "dynet.silu", "RuntimeError"], "methods", ["None"], ["", "def", "apply_nonlinearity", "(", "self", ",", "nonlinearity", ",", "expr", ")", ":", "\n", "    ", "if", "nonlinearity", "==", "\"rectify\"", ":", "\n", "      ", "return", "dy", ".", "rectify", "(", "expr", ")", "\n", "", "if", "nonlinearity", "==", "\"silu\"", ":", "\n", "      ", "return", "dy", ".", "silu", "(", "expr", ")", "\n", "", "elif", "nonlinearity", "is", "not", "None", ":", "\n", "      ", "raise", "RuntimeError", "(", "\"unknown nonlinearity: %s\"", "%", "nonlinearity", ")", "\n", "", "return", "expr", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.conv_encoder.StridedConvSeqTransducer.__call__": [[132, 176], ["es.as_tensor", "conv_encoder.StridedConvSeqTransducer.pad", "range", "conv_encoder.StridedConvSeqTransducer.dim", "conv_encoder.StridedConvSeqTransducer.get_output_len", "conv_encoder.StridedConvSeqTransducer.dim", "dynet.reshape", "len", "conv_encoder.StridedConvSeqTransducer.weight_noise", "conv_encoder.StridedConvSeqTransducer.apply_nonlinearity", "conv_encoder.StridedConvSeqTransducer.last_output.append", "es.mask.lin_subsampled", "xnmt.expression_seqs.ExpressionSequence", "dynet.reshape", "xnmt.expression_seqs.ExpressionSequence", "conv_encoder.StridedConvSeqTransducer.dim", "dynet.conv2d", "dynet.conv2d", "es.mask.lin_subsampled", "range", "conv_encoder.StridedConvSeqTransducer.get_stride_for_layer", "conv_encoder.StridedConvSeqTransducer.get_stride_for_layer", "dynet.conv2d.dim", "dynet.conv2d.dim", "dynet.conv2d.dim", "dynet.conv2d.dim", "dynet.reshape.dim", "dynet.conv2d.dim"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.conv_encoder.StridedConvSeqTransducer.pad", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.conv_encoder.PoolingConvSeqTransducer.get_output_len", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.conv_encoder.StridedConvSeqTransducer.apply_nonlinearity", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.lin_subsampled", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.lin_subsampled", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.conv_encoder.PoolingConvSeqTransducer.get_stride_for_layer", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.conv_encoder.PoolingConvSeqTransducer.get_stride_for_layer", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["", "def", "__call__", "(", "self", ",", "es", ")", ":", "\n", "    ", "es_expr", "=", "es", ".", "as_tensor", "(", ")", "\n", "\n", "sent_len", "=", "es_expr", ".", "dim", "(", ")", "[", "0", "]", "[", "0", "]", "\n", "batch_size", "=", "es_expr", ".", "dim", "(", ")", "[", "1", "]", "\n", "\n", "# convolutions won't work if sentence length is too short; pad if necessary", "\n", "pad_size", "=", "0", "\n", "while", "self", ".", "get_output_len", "(", "sent_len", "+", "pad_size", ")", "<", "self", ".", "filter_size_time", ":", "\n", "      ", "pad_size", "+=", "1", "\n", "", "es_expr", "=", "self", ".", "pad", "(", "es_expr", ",", "pad_size", ")", "\n", "sent_len", "+=", "pad_size", "\n", "\n", "# loop over layers", "\n", "if", "es_expr", ".", "dim", "(", ")", "==", "(", "(", "sent_len", ",", "self", ".", "freq_dim", ",", "self", ".", "chn_dim", ")", ",", "batch_size", ")", ":", "\n", "      ", "es_chn", "=", "es_expr", "\n", "", "else", ":", "\n", "      ", "es_chn", "=", "dy", ".", "reshape", "(", "es_expr", ",", "(", "sent_len", ",", "self", ".", "freq_dim", ",", "self", ".", "chn_dim", ")", ",", "batch_size", "=", "batch_size", ")", "\n", "", "cnn_layer", "=", "es_chn", "\n", "mask_out", "=", "None", "\n", "for", "layer_i", "in", "range", "(", "len", "(", "self", ".", "filters_layers", ")", ")", ":", "\n", "      ", "cnn_filter", "=", "self", ".", "weight_noise", "(", "self", ".", "filters_layers", "[", "layer_i", "]", ",", "self", ".", "train", ")", "\n", "\n", "if", "not", "self", ".", "pre_activation", ":", "\n", "        ", "cnn_layer", "=", "dy", ".", "conv2d", "(", "cnn_layer", ",", "cnn_filter", ",", "stride", "=", "self", ".", "get_stride_for_layer", "(", "layer_i", ")", ",", "is_valid", "=", "True", ")", "\n", "\n", "", "if", "self", ".", "use_bn", ":", "\n", "        ", "mask_out", "=", "None", "if", "es", ".", "mask", "is", "None", "else", "es", ".", "mask", ".", "lin_subsampled", "(", "trg_len", "=", "cnn_layer", ".", "dim", "(", ")", "[", "0", "]", "[", "0", "]", ")", "\n", "cnn_layer", "=", "self", ".", "bn_layers", "[", "layer_i", "]", "(", "cnn_layer", ",", "train", "=", "self", ".", "train", ",", "mask", "=", "mask_out", ")", "\n", "\n", "", "cnn_layer", "=", "self", ".", "apply_nonlinearity", "(", "self", ".", "nonlinearity", ",", "cnn_layer", ")", "\n", "self", ".", "last_output", ".", "append", "(", "cnn_layer", ")", "\n", "\n", "if", "self", ".", "pre_activation", ":", "\n", "        ", "cnn_layer", "=", "dy", ".", "conv2d", "(", "cnn_layer", ",", "cnn_filter", ",", "stride", "=", "self", ".", "get_stride_for_layer", "(", "layer_i", ")", ",", "is_valid", "=", "True", ")", "\n", "\n", "", "", "mask_out", "=", "None", "if", "es", ".", "mask", "is", "None", "else", "es", ".", "mask", ".", "lin_subsampled", "(", "trg_len", "=", "cnn_layer", ".", "dim", "(", ")", "[", "0", "]", "[", "0", "]", ")", "\n", "if", "self", ".", "output_transposed_tensor", ":", "\n", "      ", "return", "expression_seqs", ".", "ExpressionSequence", "(", "expr_transposed_tensor", "=", "cnn_layer", ",", "mask", "=", "mask_out", ")", "\n", "", "else", ":", "\n", "      ", "cnn_out", "=", "dy", ".", "reshape", "(", "cnn_layer", ",", "(", "cnn_layer", ".", "dim", "(", ")", "[", "0", "]", "[", "0", "]", ",", "cnn_layer", ".", "dim", "(", ")", "[", "0", "]", "[", "1", "]", "*", "cnn_layer", ".", "dim", "(", ")", "[", "0", "]", "[", "2", "]", ")", ",", "\n", "batch_size", "=", "batch_size", ")", "\n", "es_list", "=", "[", "cnn_out", "[", "i", "]", "for", "i", "in", "range", "(", "cnn_out", ".", "dim", "(", ")", "[", "0", "]", "[", "0", "]", ")", "]", "\n", "return", "expression_seqs", ".", "ExpressionSequence", "(", "expr_list", "=", "es_list", ",", "mask", "=", "mask_out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.conv_encoder.PoolingConvSeqTransducer.__init__": [[184, 227], ["Exception", "len", "range", "model.add_parameters", "conv_encoder.PoolingConvSeqTransducer.filters_layers.append", "isinstance", "param_init_i.initializer"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_initializers.LeCunUniformInitializer.initializer"], ["@", "serializable_init", "\n", "def", "__init__", "(", "self", ",", "input_dim", ",", "pooling", "=", "[", "None", ",", "(", "1", ",", "1", ")", "]", ",", "chn_dim", "=", "3", ",", "num_filters", "=", "32", ",", "\n", "output_tensor", "=", "False", ",", "nonlinearity", "=", "\"rectify\"", ",", "param_init", "=", "None", ",", "bias_init", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    :param layers: encoder depth\n    :param input_dim: size of the inputs, before factoring out the channels.\n                      We will end up with a convolutional layer of size num_steps X input_dim/chn_dim X chn_dim \n    :param model\n    :param chn_dim: channel dimension\n    :param num_filters\n    :param output_tensor: if set, the output is directly given as a 3d-tensor, rather than converted to a list of vector expressions\n    :param nonlinearity: \"rely\" / None\n    \"\"\"", "\n", "raise", "Exception", "(", "\"TODO: buggy, needs proper transposing\"", ")", "\n", "assert", "input_dim", "%", "chn_dim", "==", "0", "\n", "\n", "model", "=", "exp_global", ".", "dynet_param_collection", ".", "param_col", "\n", "self", ".", "layers", "=", "len", "(", "pooling", ")", "\n", "assert", "self", ".", "layers", ">", "0", "\n", "self", ".", "chn_dim", "=", "chn_dim", "\n", "self", ".", "freq_dim", "=", "input_dim", "/", "chn_dim", "\n", "self", ".", "num_filters", "=", "num_filters", "\n", "self", ".", "filter_size_time", "=", "3", "\n", "self", ".", "filter_size_freq", "=", "3", "\n", "self", ".", "pooling", "=", "pooling", "\n", "self", ".", "output_tensor", "=", "output_tensor", "\n", "self", ".", "nonlinearity", "=", "nonlinearity", "\n", "param_init", "=", "param_init", "or", "exp_global", ".", "param_init", "\n", "bias_init", "=", "bias_init", "or", "exp_global", ".", "bias_init", "\n", "\n", "self", ".", "bn_layers", "=", "[", "]", "\n", "self", ".", "filters_layers", "=", "[", "]", "\n", "self", ".", "bn_alt_layers", "=", "[", "]", "\n", "self", ".", "filters_alt_layers", "=", "[", "]", "\n", "for", "layer_i", "in", "range", "(", "self", ".", "layers", ")", ":", "\n", "      ", "dim_f", "=", "(", "self", ".", "filter_size_time", ",", "\n", "self", ".", "filter_size_freq", ",", "\n", "self", ".", "chn_dim", "if", "layer_i", "==", "0", "else", "self", ".", "num_filters", ",", "\n", "self", ".", "num_filters", ")", "\n", "param_init_i", "=", "param_init", "[", "i", "]", "if", "isinstance", "(", "param_init", ",", "Sequence", ")", "else", "param_init", "\n", "filters", "=", "model", ".", "add_parameters", "(", "dim", "=", "dim_f", ",", "\n", "init", "=", "param_init_i", ".", "initializer", "(", "dim_f", ")", ")", "\n", "self", ".", "filters_layers", ".", "append", "(", "filters", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.conv_encoder.PoolingConvSeqTransducer.get_output_dim": [[228, 234], ["range", "int", "math.ceil", "float", "float", "conv_encoder.PoolingConvSeqTransducer.get_stride_for_layer"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.conv_encoder.PoolingConvSeqTransducer.get_stride_for_layer"], ["", "", "def", "get_output_dim", "(", "self", ")", ":", "\n", "    ", "conv_dim", "=", "self", ".", "freq_dim", "\n", "for", "layer_i", "in", "range", "(", "self", ".", "layers", ")", ":", "\n", "      ", "conv_dim", "=", "int", "(", "\n", "math", ".", "ceil", "(", "float", "(", "conv_dim", "-", "self", ".", "filter_size_freq", "+", "1", ")", "/", "float", "(", "self", ".", "get_stride_for_layer", "(", "layer_i", ")", "[", "1", "]", ")", ")", ")", "\n", "", "return", "conv_dim", "*", "self", ".", "num_filters", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.conv_encoder.PoolingConvSeqTransducer.get_stride_for_layer": [[235, 240], ["None"], "methods", ["None"], ["", "def", "get_stride_for_layer", "(", "self", ",", "layer_i", ")", ":", "\n", "    ", "if", "self", ".", "pooling", "[", "layer_i", "]", ":", "\n", "      ", "return", "self", ".", "pooling", "[", "layer_i", "]", "\n", "", "else", ":", "\n", "      ", "return", "(", "1", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.conv_encoder.PoolingConvSeqTransducer.get_output_len": [[241, 247], ["range", "int", "math.ceil", "float", "float", "conv_encoder.PoolingConvSeqTransducer.get_stride_for_layer"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.conv_encoder.PoolingConvSeqTransducer.get_stride_for_layer"], ["", "", "def", "get_output_len", "(", "self", ",", "input_len", ")", ":", "\n", "    ", "conv_dim", "=", "input_len", "\n", "for", "layer_i", "in", "range", "(", "self", ".", "layers", ")", ":", "\n", "      ", "conv_dim", "=", "int", "(", "\n", "math", ".", "ceil", "(", "float", "(", "conv_dim", "-", "self", ".", "filter_size_time", "+", "1", ")", "/", "float", "(", "self", ".", "get_stride_for_layer", "(", "layer_i", ")", "[", "0", "]", ")", ")", ")", "\n", "", "return", "conv_dim", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.conv_encoder.PoolingConvSeqTransducer.__call__": [[248, 297], ["es.as_tensor", "range", "es.mask.lin_subsampled", "dynet.concatenate.dim", "conv_encoder.PoolingConvSeqTransducer.get_output_len", "dynet.concatenate", "dynet.concatenate.dim", "dynet.reshape", "len", "dynet.conv2d", "xnmt.expression_seqs.ExpressionSequence", "dynet.reshape", "xnmt.expression_seqs.ExpressionSequence", "dynet.concatenate.dim", "dynet.parameter", "dynet.rectify", "dynet.maxpooling2d", "dynet.zeroes", "dynet.silu", "range", "RuntimeError", "dynet.silu.dim", "dynet.silu.dim", "dynet.concatenate.dim", "dynet.silu.dim", "dynet.silu.dim", "dynet.reshape.dim"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ReversedExpressionSequence.as_tensor", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.batchers.Mask.lin_subsampled", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.conv_encoder.PoolingConvSeqTransducer.get_output_len", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["", "def", "__call__", "(", "self", ",", "es", ")", ":", "\n", "    ", "es_expr", "=", "es", ".", "as_tensor", "(", ")", "\n", "\n", "sent_len", "=", "es_expr", ".", "dim", "(", ")", "[", "0", "]", "[", "0", "]", "\n", "batch_size", "=", "es_expr", ".", "dim", "(", ")", "[", "1", "]", "\n", "\n", "# convolutions won't work if sentence length is too short; pad if necessary", "\n", "pad_size", "=", "0", "\n", "while", "self", ".", "get_output_len", "(", "sent_len", "+", "pad_size", ")", "<", "self", ".", "filter_size_time", ":", "\n", "      ", "pad_size", "+=", "1", "\n", "", "if", "pad_size", ">", "0", ":", "\n", "      ", "es_expr", "=", "dy", ".", "concatenate", "(", "\n", "[", "es_expr", ",", "dy", ".", "zeroes", "(", "(", "pad_size", ",", "self", ".", "freq_dim", "*", "self", ".", "chn_dim", ")", ",", "batch_size", "=", "es_expr", ".", "dim", "(", ")", "[", "1", "]", ")", "]", ")", "\n", "sent_len", "+=", "pad_size", "\n", "\n", "", "if", "es_expr", ".", "dim", "(", ")", "==", "(", "(", "sent_len", ",", "self", ".", "freq_dim", ",", "self", ".", "chn_dim", ")", ",", "batch_size", ")", ":", "\n", "      ", "es_chn", "=", "es_expr", "\n", "", "else", ":", "\n", "      ", "es_chn", "=", "dy", ".", "reshape", "(", "es_expr", ",", "(", "sent_len", ",", "self", ".", "freq_dim", ",", "self", ".", "chn_dim", ")", ",", "batch_size", "=", "batch_size", ")", "\n", "", "cnn_layer", "=", "es_chn", "\n", "\n", "# loop over layers", "\n", "for", "layer_i", "in", "range", "(", "len", "(", "self", ".", "filters_layers", ")", ")", ":", "\n", "      ", "cnn_layer_prev", "=", "cnn_layer", "\n", "filters", "=", "self", ".", "filters_layers", "[", "layer_i", "]", "\n", "\n", "# convolution", "\n", "cnn_layer", "=", "dy", ".", "conv2d", "(", "cnn_layer", ",", "dy", ".", "parameter", "(", "filters", ")", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "is_valid", "=", "True", ")", "\n", "\n", "# non-linearity", "\n", "if", "self", ".", "nonlinearity", "==", "\"rectify\"", ":", "\n", "        ", "cnn_layer", "=", "dy", ".", "rectify", "(", "cnn_layer", ")", "\n", "", "elif", "self", ".", "nonlinearity", "==", "\"silu\"", ":", "\n", "        ", "cnn_layer", "=", "dy", ".", "silu", "(", "cnn_layer", ")", "\n", "", "elif", "self", ".", "nonlinearity", "is", "not", "None", ":", "\n", "        ", "raise", "RuntimeError", "(", "\"unknown nonlinearity: %s\"", "%", "self", ".", "nonlinearity", ")", "\n", "\n", "# max pooling", "\n", "", "if", "self", ".", "pooling", "[", "layer_i", "]", ":", "\n", "        ", "cnn_layer", "=", "dy", ".", "maxpooling2d", "(", "cnn_layer", ",", "(", "3", ",", "3", ")", ",", "stride", "=", "self", ".", "pooling", "[", "layer_i", "]", ",", "is_valid", "=", "True", ")", "\n", "\n", "", "", "mask_out", "=", "es", ".", "mask", ".", "lin_subsampled", "(", "trg_len", "=", "cnn_layer", ".", "dim", "(", ")", "[", "0", "]", "[", "0", "]", ")", "\n", "if", "self", ".", "output_tensor", ":", "\n", "      ", "return", "expression_seqs", ".", "ExpressionSequence", "(", "tensor_expr", "=", "cnn_layer", ",", "mask", "=", "mask_out", ")", "\n", "", "else", ":", "\n", "      ", "cnn_out", "=", "dy", ".", "reshape", "(", "cnn_layer", ",", "(", "cnn_layer", ".", "dim", "(", ")", "[", "0", "]", "[", "0", "]", ",", "cnn_layer", ".", "dim", "(", ")", "[", "0", "]", "[", "1", "]", "*", "cnn_layer", ".", "dim", "(", ")", "[", "0", "]", "[", "2", "]", ")", ",", "\n", "batch_size", "=", "batch_size", ")", "\n", "es_list", "=", "[", "cnn_out", "[", "i", "]", "for", "i", "in", "range", "(", "cnn_out", ".", "dim", "(", ")", "[", "0", "]", "[", "0", "]", ")", "]", "\n", "return", "expression_seqs", ".", "ExpressionSequence", "(", "list_expr", "=", "es_list", ",", "mask", "=", "mask_out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.conv_encoder.ConvStrideTransducer.__init__": [[300, 304], ["None"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "chn_dim", ",", "stride", "=", "(", "1", ",", "1", ")", ",", "margin", "=", "(", "0", ",", "0", ")", ")", ":", "\n", "    ", "self", ".", "chn_dim", "=", "chn_dim", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "margin", "=", "margin", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.conv_encoder.ConvStrideTransducer.__call__": [[305, 310], ["dynet.strided_select", "expr.dim", "expr.dim", "expr.dim", "expr.dim"], "methods", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.expression_seqs.ExpressionSequence.dim"], ["", "def", "__call__", "(", "self", ",", "expr", ")", ":", "\n", "    ", "return", "dy", ".", "strided_select", "(", "expr", ",", "[", "self", ".", "margin", "[", "0", "]", ",", "expr", ".", "dim", "(", ")", "[", "0", "]", "[", "0", "]", "-", "self", ".", "margin", "[", "0", "]", ",", "self", ".", "stride", "[", "0", "]", ",", "\n", "self", ".", "margin", "[", "1", "]", ",", "expr", ".", "dim", "(", ")", "[", "0", "]", "[", "1", "]", "-", "self", ".", "margin", "[", "1", "]", ",", "self", ".", "stride", "[", "1", "]", ",", "\n", "0", ",", "expr", ".", "dim", "(", ")", "[", "0", "]", "[", "2", "]", ",", "1", ",", "\n", "0", ",", "expr", ".", "dim", "(", ")", "[", "1", "]", ",", "1", "]", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.custom.npz_to_h5.main": [[7, 25], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "numpy.load", "sorted", "np.load.close", "h5py.File", "enumerate", "key.startswith", "hf.create_dataset", "int", "str", "int", "x.split"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.reload_example.parse_args", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.close"], ["def", "main", "(", ")", ":", "\n", "  ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\"--input\"", ",", "help", "=", "\"Path to npz file to read from\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--output\"", ",", "help", "=", "\"Path to h5 to write out\"", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "\n", "npz_file", "=", "np", ".", "load", "(", "args", ".", "input", ",", "mmap_mode", "=", "\"r\"", ")", "\n", "npz_keys", "=", "sorted", "(", "npz_file", ".", "files", ",", "key", "=", "lambda", "x", ":", "int", "(", "x", ".", "split", "(", "'_'", ")", "[", "-", "1", "]", ")", ")", "\n", "\n", "with", "h5py", ".", "File", "(", "args", ".", "output", ",", "\"w\"", ")", "as", "hf", ":", "\n", "\n", "    ", "for", "sent_no", ",", "key", "in", "enumerate", "(", "npz_keys", ")", ":", "\n", "      ", "features", "=", "npz_file", "[", "key", "]", "\n", "assert", "key", ".", "startswith", "(", "\"arr_\"", ")", "\n", "hf", ".", "create_dataset", "(", "str", "(", "int", "(", "key", "[", "4", ":", "]", ")", ")", ",", "data", "=", "features", ")", "\n", "\n", "", "", "npz_file", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.conv_checkpoints_to_model.extract_components": [[27, 36], ["set", "open", "yaml_lines.append", "set.add", "line.strip().split", "line.strip"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["def", "extract_components", "(", "modfile", ")", ":", "\n", "  ", "components", "=", "set", "(", "[", "]", ")", "\n", "yaml_lines", "=", "[", "]", "\n", "with", "open", "(", "modfile", ",", "'r'", ",", "encoding", "=", "\"utf-8\"", ")", "as", "file_", ":", "\n", "    ", "for", "line", "in", "file_", ":", "\n", "      ", "yaml_lines", ".", "append", "(", "line", ")", "\n", "if", "SUBCOL_TAG", "in", "line", ":", "\n", "        ", "components", ".", "add", "(", "line", ".", "strip", "(", ")", ".", "split", "(", "SUBCOL_TAG", ")", "[", "-", "1", "]", ")", "\n", "", "", "", "return", "components", ",", "yaml_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.conv_checkpoints_to_model.get_checkpoints": [[37, 46], ["glob.glob", "checkpoints.append", "dirname.split", "os.path.exists"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "def", "get_checkpoints", "(", "modfile", ",", "components", ")", ":", "\n", "  ", "checkpoints", "=", "[", "]", "\n", "for", "dirname", "in", "glob", "(", "f\"{modfile}.data.*\"", ")", ":", "\n", "    ", "name", "=", "dirname", ".", "split", "(", "\".\"", ")", "[", "-", "1", "]", "\n", "for", "part", "in", "components", ":", "\n", "      ", "assert", "os", ".", "path", ".", "exists", "(", "\"/\"", ".", "join", "(", "(", "dirname", ",", "part", ")", ")", ")", ",", "f\"Model checkpoint {name} is missing {part}\"", "\n", "", "checkpoints", ".", "append", "(", "name", ")", "\n", "", "return", "checkpoints", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.conv_checkpoints_to_model.rewrite_components": [[47, 59], ["os.rename", "os.rename", "open", "file_.write", "line.replace.replace", "line.replace.strip().split", "line.replace.strip"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.write"], ["", "def", "rewrite_components", "(", "modfile", ",", "name", ",", "components", ",", "yaml_lines", ")", ":", "\n", "  ", "for", "part", "in", "components", ":", "\n", "    ", "os", ".", "rename", "(", "f\"{modfile}.data.{name}/{part}\"", ",", "\n", "f\"{modfile}.data.{name}/{part}{SEP}{name}\"", ")", "\n", "", "os", ".", "rename", "(", "f\"{modfile}.data.{name}\"", ",", "\n", "f\"{modfile}.{name}.data\"", ")", "\n", "with", "open", "(", "f\"{modfile}.{name}\"", ",", "'w'", ",", "encoding", "=", "\"utf-8\"", ")", "as", "file_", ":", "\n", "    ", "for", "line", "in", "yaml_lines", ":", "\n", "      ", "if", "SUBCOL_TAG", "in", "line", ":", "\n", "        ", "part", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "SUBCOL_TAG", ")", "[", "-", "1", "]", "\n", "line", "=", "line", ".", "replace", "(", "f\"{SUBCOL_TAG}{part}\"", ",", "f\"{SUBCOL_TAG}{part}{SEP}{name}\"", ")", "\n", "", "file_", ".", "write", "(", "line", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.conv_checkpoints_to_model.main": [[60, 72], ["conv_checkpoints_to_model.extract_components", "print", "conv_checkpoints_to_model.get_checkpoints", "print", "print", "print", "conv_checkpoints_to_model.rewrite_components", "len", "len"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.rehash_model.extract_components", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.conv_checkpoints_to_model.get_checkpoints", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.rehash_model.rewrite_components"], ["", "", "", "def", "main", "(", "modfile", ")", ":", "\n", "  ", "components", ",", "yaml_lines", "=", "extract_components", "(", "modfile", ")", "\n", "print", "(", "\"Found {:3d} model components.\"", ".", "format", "(", "len", "(", "components", ")", ")", ")", "\n", "\n", "checkpoints", "=", "get_checkpoints", "(", "modfile", ",", "components", ")", "\n", "print", "(", "\"Found {:3d} extra model checkpoints.\"", ".", "format", "(", "len", "(", "checkpoints", ")", ")", ")", "\n", "\n", "for", "name", "in", "checkpoints", ":", "\n", "    ", "print", "(", "\"Processing checkpoint: {:3s}\"", ".", "format", "(", "name", ")", ")", "\n", "rewrite_components", "(", "modfile", ",", "name", ",", "components", ",", "yaml_lines", ")", "\n", "\n", "", "print", "(", "\"All done.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.rehash_model.generate_hash": [[30, 34], ["subcol_rand.getrandbits"], "function", ["None"], ["def", "generate_hash", "(", ")", ":", "\n", "  ", "rand_bits", "=", "subcol_rand", ".", "getrandbits", "(", "32", ")", "\n", "rand_hex", "=", "\"%008x\"", "%", "rand_bits", "\n", "return", "rand_hex", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.rehash_model.extract_components": [[35, 45], ["set", "open", "yaml_lines.append", "[].split", "set.add", "line.strip().split", "line.strip"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "def", "extract_components", "(", "mod_infile", ")", ":", "\n", "  ", "components", "=", "set", "(", "[", "]", ")", "\n", "yaml_lines", "=", "[", "]", "\n", "with", "open", "(", "mod_infile", ",", "'r'", ",", "encoding", "=", "\"utf-8\"", ")", "as", "file_", ":", "\n", "    ", "for", "line", "in", "file_", ":", "\n", "      ", "yaml_lines", ".", "append", "(", "line", ")", "\n", "if", "SUBCOL_TAG", "in", "line", ":", "\n", "        ", "type_name", ",", "hash_name", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "SUBCOL_TAG", ")", "[", "-", "1", "]", ".", "split", "(", "'.'", ")", "\n", "components", ".", "add", "(", "(", "type_name", ",", "hash_name", ")", ")", "\n", "", "", "", "return", "components", ",", "yaml_lines", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.rehash_model.rewrite_components": [[46, 62], ["os.mkdir", "rehash_model.generate_hash", "shutil.copy", "open", "open", "file_out.write", "line.replace.strip().split", "line.replace.replace", "line.replace.strip"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.rehash_model.generate_hash", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.write"], ["", "def", "rewrite_components", "(", "mod_infile", ",", "mod_outfile", ",", "components", ",", "yaml_lines", ")", ":", "\n", "  ", "new_hashes", "=", "{", "}", "\n", "os", ".", "mkdir", "(", "f\"{mod_outfile}.data\"", ")", "\n", "for", "type_name", ",", "hash_name", "in", "components", ":", "\n", "    ", "new_hash", "=", "generate_hash", "(", ")", "\n", "new_hashes", "[", "hash_name", "]", "=", "new_hash", "\n", "shutil", ".", "copy", "(", "f\"{mod_infile}.data/{type_name}.{hash_name}\"", ",", "\n", "f\"{mod_outfile}.data/{type_name}.{new_hash}\"", ")", "\n", "", "with", "open", "(", "f\"{mod_infile}\"", ",", "'r'", ",", "encoding", "=", "\"utf-8\"", ")", "as", "file_in", ",", "open", "(", "f\"{mod_outfile}\"", ",", "'w'", ",", "encoding", "=", "\"utf-8\"", ")", "as", "file_out", ":", "\n", "    ", "for", "line", "in", "yaml_lines", ":", "\n", "      ", "if", "SUBCOL_TAG", "in", "line", ":", "\n", "        ", "part", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "'.'", ")", "\n", "if", "part", "[", "-", "1", "]", "in", "new_hashes", ":", "\n", "          ", "line", "=", "line", ".", "replace", "(", "part", "[", "-", "1", "]", ",", "new_hashes", "[", "part", "[", "-", "1", "]", "]", ")", "\n", "", "", "file_out", ".", "write", "(", "line", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.rehash_model.main": [[63, 70], ["rehash_model.extract_components", "print", "rehash_model.rewrite_components", "print", "len"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.rehash_model.extract_components", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.rehash_model.rewrite_components"], ["", "", "", "def", "main", "(", "mod_infile", ",", "mod_outfile", ")", ":", "\n", "  ", "components", ",", "yaml_lines", "=", "extract_components", "(", "mod_infile", ")", "\n", "print", "(", "\"Found {:3d} model components.\"", ".", "format", "(", "len", "(", "components", ")", ")", ")", "\n", "\n", "rewrite_components", "(", "mod_infile", ",", "mod_outfile", ",", "components", ",", "yaml_lines", ")", "\n", "\n", "print", "(", "\"All done.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.toy_word_tokenize.tokenize": [[13, 26], ["isinstance", "sys.stdout.write", "nltk.word_tokenize", "sys.stdout.write", "line.decode.decode", "tokenized_line.encode", "line.decode.decode().strip", "w.encode", "list", "line.decode.strip", "line.decode.decode"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.write", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.write"], ["def", "tokenize", "(", "stream", ",", "characters", "=", "False", ")", ":", "\n", "  ", "if", "characters", ":", "\n", "    ", "for", "line", "in", "stream", ":", "\n", "      ", "tokenized_line", "=", "u''", "\n", "if", "isinstance", "(", "line", ",", "str", ")", ":", "\n", "        ", "line", "=", "line", ".", "decode", "(", "'utf-8'", ")", "\n", "", "tokenized_line", "=", "u' '", ".", "join", "(", "list", "(", "line", ".", "strip", "(", ")", ")", ")", "+", "u'\\n'", "\n", "sys", ".", "stdout", ".", "write", "(", "tokenized_line", ".", "encode", "(", "'utf-8'", ")", ")", "\n", "", "", "else", ":", "\n", "    ", "for", "line", "in", "stream", ":", "\n", "      ", "words", "=", "word_tokenize", "(", "line", ".", "decode", "(", "'utf-8'", ")", ".", "strip", "(", ")", ")", "\n", "words", "=", "[", "w", ".", "encode", "(", "'utf-8'", ")", "for", "w", "in", "words", "]", "\n", "sys", ".", "stdout", ".", "write", "(", "' '", ".", "join", "(", "words", ")", "+", "'\\n'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.reload_example.parse_args": [[8, 17], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.reload_example.parse_args"], ["def", "parse_args", "(", ")", ":", "\n", "  ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "'--epoch'", ",", "type", "=", "int", ")", "\n", "parser", ".", "add_argument", "(", "'--initial-dir'", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "'--tmp-basedir'", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "'--target-dir'", ",", "type", "=", "str", ")", "\n", "parser", ".", "add_argument", "(", "'--break-features'", ",", "action", "=", "'store_true'", ",", "default", "=", "False", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.reload_example.mkdir_p": [[19, 27], ["os.makedirs", "os.path.isdir"], "function", ["None"], ["", "def", "mkdir_p", "(", "dirname", ")", ":", "\n", "  ", "try", ":", "\n", "    ", "os", ".", "makedirs", "(", "dirname", ")", "\n", "", "except", "OSError", "as", "e", ":", "\n", "    ", "if", "e", ".", "errno", "==", "errno", ".", "EEXIST", "and", "os", ".", "path", ".", "isdir", "(", "dirname", ")", ":", "\n", "      ", "pass", "\n", "", "else", ":", "\n", "      ", "raise", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.reload_example.modify_audio": [[28, 42], ["numpy.load", "range", "numpy.savez_compressed", "subprocess.call", "new_feats.append", "len", "numpy.load.keys"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "", "", "def", "modify_audio", "(", "npz_original", ",", "npz_new", ",", "char_original", ",", "char_new", ",", "num_epoch", ",", "break_feats", "=", "False", ")", ":", "\n", "  ", "feats", "=", "numpy", ".", "load", "(", "npz_original", ")", "\n", "new_feats", "=", "[", "]", "\n", "new_size", "=", "(", "num_epoch", "%", "(", "len", "(", "feats", ".", "keys", "(", ")", ")", "-", "1", ")", ")", "+", "1", "\n", "#print('epoch: %d size: %d' %(num_epoch, new_size))", "\n", "for", "i", "in", "range", "(", "0", ",", "new_size", ")", ":", "\n", "    ", "feat", "=", "feats", "[", "'arr_%d'", "%", "i", "]", "\n", "if", "break_feats", ":", "\n", "      ", "feat", "=", "feat", "[", ":", ",", ":", "20", "]", "\n", "\n", "", "new_feats", ".", "append", "(", "feat", ")", "\n", "\n", "", "numpy", ".", "savez_compressed", "(", "npz_new", ",", "*", "new_feats", ")", "\n", "subprocess", ".", "call", "(", "\"head -n %d %s > %s\"", "%", "(", "new_size", ",", "char_original", ",", "char_new", ")", ",", "shell", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.reload_example.select_and_clear_current_version_dir": [[44, 67], ["os.path.join", "os.path.join", "os.path.join", "os.path.exists", "reload_example.mkdir_p", "shutil.rmtree", "reload_example.mkdir_p", "os.remove", "open", "os.utime"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.reload_example.mkdir_p", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.reload_example.mkdir_p"], ["", "def", "select_and_clear_current_version_dir", "(", "basedir", ")", ":", "\n", "  ", "\"\"\"\n  Switch which is the current directory and remove all contents of that directory.\n\n  Return:\n    the name of the new current directory\n  \"\"\"", "\n", "version_dir_1", "=", "os", ".", "path", ".", "join", "(", "basedir", ",", "'version-1-augmentation'", ")", "\n", "version_dir_2", "=", "os", ".", "path", ".", "join", "(", "basedir", ",", "'version-2-augmentation'", ")", "\n", "current_2_flag", "=", "os", ".", "path", ".", "join", "(", "basedir", ",", "'current_2_flag'", ")", "\n", "current_version_dir", "=", "None", "\n", "if", "os", ".", "path", ".", "exists", "(", "current_2_flag", ")", ":", "\n", "    ", "current_version_dir", "=", "version_dir_1", "\n", "os", ".", "remove", "(", "current_2_flag", ")", "\n", "", "else", ":", "\n", "    ", "current_version_dir", "=", "version_dir_2", "\n", "with", "open", "(", "current_2_flag", ",", "'a'", ")", "as", "f", ":", "\n", "      ", "os", ".", "utime", "(", "current_2_flag", ",", "None", ")", "\n", "\n", "", "", "mkdir_p", "(", "current_version_dir", ")", "\n", "shutil", ".", "rmtree", "(", "current_version_dir", ")", "\n", "mkdir_p", "(", "current_version_dir", ")", "\n", "return", "current_version_dir", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.reload_example.safelink": [[69, 75], ["os.path.abspath", "os.path.abspath", "os.path.islink", "subprocess.call", "os.remove"], "function", ["None"], ["", "def", "safelink", "(", "src", ",", "dst", ")", ":", "\n", "  ", "src", "=", "os", ".", "path", ".", "abspath", "(", "src", ")", "\n", "dst", "=", "os", ".", "path", ".", "abspath", "(", "dst", ")", "\n", "if", "os", ".", "path", ".", "islink", "(", "dst", ")", ":", "\n", "    ", "os", ".", "remove", "(", "dst", ")", "\n", "", "subprocess", ".", "call", "(", "[", "\"ln\"", ",", "\"-s\"", ",", "src", ",", "dst", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.reload_example.main": [[78, 98], ["reload_example.parse_args", "reload_example.mkdir_p", "reload_example.select_and_clear_current_version_dir", "os.path.abspath", "os.path.abspath", "os.path.abspath", "os.path.abspath", "reload_example.modify_audio", "reload_example.safelink", "print", "reload_example.safelink", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.reload_example.parse_args", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.reload_example.mkdir_p", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.reload_example.select_and_clear_current_version_dir", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.reload_example.modify_audio", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.reload_example.safelink", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.reload_example.safelink"], ["", "def", "main", "(", ")", ":", "\n", "  ", "args", "=", "parse_args", "(", ")", "\n", "tmp_basedir", "=", "args", ".", "tmp_basedir", "\n", "mkdir_p", "(", "tmp_basedir", ")", "\n", "current_version_dir", "=", "select_and_clear_current_version_dir", "(", "tmp_basedir", ")", "\n", "\n", "if", "args", ".", "epoch", ">", "0", ":", "\n", "# do augmentation here", "\n", "    ", "data_name", "=", "'LDC94S13A.npz'", "\n", "txt_name", "=", "'LDC94S13A.char'", "\n", "npz_initial", "=", "os", ".", "path", ".", "abspath", "(", "os", ".", "path", ".", "join", "(", "args", ".", "initial_dir", ",", "data_name", ")", ")", "\n", "txt_initial", "=", "os", ".", "path", ".", "abspath", "(", "os", ".", "path", ".", "join", "(", "args", ".", "initial_dir", ",", "txt_name", ")", ")", "\n", "npz_new", "=", "os", ".", "path", ".", "abspath", "(", "os", ".", "path", ".", "join", "(", "current_version_dir", ",", "data_name", ")", ")", "\n", "txt_new", "=", "os", ".", "path", ".", "abspath", "(", "os", ".", "path", ".", "join", "(", "current_version_dir", ",", "txt_name", ")", ")", "\n", "\n", "modify_audio", "(", "npz_initial", ",", "npz_new", ",", "txt_initial", ",", "txt_new", ",", "args", ".", "epoch", ",", "break_feats", "=", "args", ".", "break_features", ")", "\n", "safelink", "(", "current_version_dir", ",", "args", ".", "target_dir", ")", "\n", "", "else", ":", "\n", "    ", "print", "(", "'first run'", ")", "\n", "safelink", "(", "args", ".", "initial_dir", ",", "args", ".", "target_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.avg_checkpoints.avg_subcol": [[6, 39], ["dynet.Model", "dynet.Model", "dy.Model.add_subcollection", "save_param_col.add_subcollection.save", "print", "len", "p.as_array", "save_param_col.add_subcollection.lookup_parameters_from_numpy", "save_param_col.add_subcollection.parameters_from_numpy", "dy.Model.load_param", "dy.Model.load_lookup_param"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamCollection.add_subcollection", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.param_collections.ParamCollection.save"], ["def", "avg_subcol", "(", "data_files", ",", "out_file", ",", "subcol_name", ")", ":", "\n", "  ", "load_param_col", "=", "dy", ".", "Model", "(", ")", "\n", "save_param_col", "=", "dy", ".", "Model", "(", ")", "\n", "save_param_subcol", "=", "save_param_col", ".", "add_subcollection", "(", "subcol_name", ")", "\n", "\n", "param_index", "=", "0", "\n", "while", "True", ":", "\n", "    ", "is_lookup", "=", "False", "\n", "try", ":", "\n", "      ", "loaded_params", "=", "[", "load_param_col", ".", "load_param", "(", "df", ",", "f\"/{subcol_name}/_{param_index}\"", ")", "for", "df", "in", "data_files", "]", "\n", "", "except", "RuntimeError", ":", "\n", "      ", "try", ":", "\n", "        ", "loaded_params", "=", "[", "load_param_col", ".", "load_lookup_param", "(", "df", ",", "f\"/{subcol_name}/_{param_index}\"", ")", "for", "df", "in", "data_files", "]", "\n", "is_lookup", "=", "True", "\n", "", "except", "RuntimeError", ":", "\n", "        ", "break", "\n", "", "", "print", "(", "f\"averaging /{subcol_name}/_{param_index}..\"", ")", "\n", "arrs", "=", "[", "p", ".", "as_array", "(", ")", "for", "p", "in", "loaded_params", "]", "\n", "\n", "avg_arr", "=", "None", "\n", "for", "arr", "in", "arrs", ":", "\n", "      ", "if", "avg_arr", "is", "not", "None", ":", "avg_arr", "+=", "arr", "\n", "else", ":", "avg_arr", "=", "arr", "\n", "", "avg_arr", "/=", "len", "(", "arrs", ")", "\n", "\n", "if", "is_lookup", ":", "\n", "      ", "save_param_subcol", ".", "lookup_parameters_from_numpy", "(", "avg_arr", ")", "\n", "", "else", ":", "\n", "      ", "save_param_subcol", ".", "parameters_from_numpy", "(", "avg_arr", ")", "\n", "\n", "", "param_index", "+=", "1", "\n", "\n", "", "save_param_subcol", ".", "save", "(", "out_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.avg_checkpoints.avg_checkpoints": [[40, 46], ["os.makedirs", "os.makedirs", "os.listdir", "os.listdir", "avg_checkpoints.avg_subcol", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.avg_checkpoints.avg_subcol"], ["", "def", "avg_checkpoints", "(", "data_dirs", ",", "out_dir", ")", ":", "\n", "  ", "os", ".", "makedirs", "(", "out_dir", ")", "\n", "for", "subcol_name", "in", "os", ".", "listdir", "(", "data_dirs", "[", "0", "]", ")", ":", "\n", "    ", "avg_subcol", "(", "[", "os", ".", "path", ".", "join", "(", "dd", ",", "subcol_name", ")", "for", "dd", "in", "data_dirs", "]", ",", "\n", "os", ".", "path", ".", "join", "(", "out_dir", ",", "subcol_name", ")", ",", "\n", "subcol_name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.avg_checkpoints.main": [[47, 75], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "os.path.isfile", "os.path.isfile", "print", "avg_checkpoints.avg_checkpoints", "print", "shutil.copyfile", "print", "os.path.isfile", "os.path.isfile", "ValueError", "ValueError", "os.path.isdir", "os.path.isdir", "ValueError", "data_files.append", "os.path.isdir", "os.path.isdir", "os.path.isdir", "os.path.isdir", "len"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.reload_example.parse_args", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.code.avg_checkpoints.avg_checkpoints", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append"], ["", "", "def", "main", "(", ")", ":", "\n", "  ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\"model_from\"", ",", "help", "=", "\"Path to read model file from\"", ")", "\n", "parser", ".", "add_argument", "(", "\"model_to\"", ",", "help", "=", "\"Path to write averaged model file to\"", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "isfile", "(", "args", ".", "model_from", ")", ":", "\n", "    ", "raise", "ValueError", "(", "f\"model_from does not exist: {args.model_from}\"", ")", "\n", "", "if", "os", ".", "path", ".", "isfile", "(", "args", ".", "model_to", ")", ":", "\n", "    ", "raise", "ValueError", "(", "f\"model_to already exists: {args.model_to}\"", ")", "\n", "", "elif", "not", "os", ".", "path", ".", "isdir", "(", "f\"{args.model_from}.data\"", ")", "or", "not", "os", ".", "path", ".", "isdir", "(", "f\"{args.model_from}.data.1\"", ")", ":", "\n", "    ", "raise", "ValueError", "(", "\"avg_checkpoints can only be applied to models saved with at least 2 checkpoints\"", ")", "\n", "\n", "", "data_files", "=", "[", "f\"{args.model_from}.data\"", "]", "\n", "i", "=", "1", "\n", "while", "True", ":", "\n", "    ", "data_path", "=", "f\"{args.model_from}.data.{i}\"", "\n", "if", "os", ".", "path", ".", "isdir", "(", "data_path", ")", ":", "\n", "      ", "data_files", ".", "append", "(", "data_path", ")", "\n", "i", "+=", "1", "\n", "", "else", ":", "\n", "      ", "break", "\n", "\n", "", "", "print", "(", "f\"found {len(data_files)} checkpoints.\"", ")", "\n", "avg_checkpoints", "(", "data_files", ",", "f\"{args.model_to}.data\"", ")", "\n", "print", "(", "\"copying model file..\"", ")", "\n", "shutil", ".", "copyfile", "(", "args", ".", "model_from", ",", "args", ".", "model_to", ")", "\n", "print", "(", "\"Done.\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.Usage.__init__": [[19, 21], ["None"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "msg", ")", ":", "\n", "    ", "self", ".", "msg", "=", "msg", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.ModuleTest.__init__": [[24, 26], ["None"], "methods", ["None"], ["  ", "def", "__init__", "(", "self", ",", "msg", ")", ":", "\n", "    ", "self", ".", "msg", "=", "msg", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.usage": [[6, 8], ["print"], "function", ["None"], ["def", "usage", "(", ")", ":", "\n", "  ", "print", "(", "\"usage: extract_db.py [options] tedlium-path data-path\"", "\n", "\" -h --help: print this Help message\"", ")", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.make_parent_dir": [[28, 35], ["os.path.exists", "os.path.dirname", "os.makedirs", "os.path.dirname"], "function", ["None"], ["", "", "def", "make_parent_dir", "(", "filename", ")", ":", "\n", "  ", "if", "not", "os", ".", "path", ".", "exists", "(", "os", ".", "path", ".", "dirname", "(", "filename", ")", ")", ":", "\n", "    ", "try", ":", "\n", "      ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "dirname", "(", "filename", ")", ")", "\n", "", "except", "OSError", "as", "exc", ":", "# Guard against race condition", "\n", "      ", "if", "exc", ".", "errno", "!=", "os", ".", "errno", ".", "EEXIST", ":", "\n", "        ", "raise", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.extract": [[37, 68], ["extract_db.make_parent_dir", "open", "open.close", "extract_db.make_parent_dir", "open", "open.write", "open.close", "str", "open", "open.close", "yaml.dump", "os.listdir", "os.path.isfile", "str().endswith", "os.path.join", "line.split", "float", "float", "out_data.append", "durations.append", "open.write", "str", "list", "text.strip"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.make_parent_dir", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.close", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.make_parent_dir", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.write", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.close", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.close", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.persistence.Path.append", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.xnmt.tee.Tee.write"], ["", "", "", "", "def", "extract", "(", "mypath", ",", "out_yaml", ",", "out_text", ",", "wavdir", "=", "\"{WAVDIR}/dev\"", ")", ":", "\n", "  ", "stm_files", "=", "[", "str", "(", "f", ")", "for", "f", "in", "os", ".", "listdir", "(", "mypath", ")", "if", "os", ".", "path", ".", "isfile", "(", "os", ".", "path", ".", "join", "(", "mypath", ",", "f", ")", ")", "if", "str", "(", "f", ")", ".", "endswith", "(", "\".stm\"", ")", "]", "\n", "out_data", "=", "[", "]", "\n", "durations", "=", "[", "]", "\n", "make_parent_dir", "(", "out_text", ")", "\n", "out_file_text", "=", "open", "(", "out_text", ",", "\"w\"", ",", "encoding", "=", "\"utf-8\"", ")", "\n", "for", "stm_file", "in", "stm_files", ":", "\n", "    ", "f", "=", "open", "(", "mypath", "+", "\"/\"", "+", "stm_file", ",", "encoding", "=", "\"utf-8\"", ")", "\n", "for", "line", "in", "f", ":", "\n", "      ", "if", "not", "\"ignore_time_segment_in_scoring\"", "in", "line", ":", "\n", "        ", "spl", "=", "line", ".", "split", "(", ")", "\n", "spk_id", "=", "spl", "[", "2", "]", "\n", "from_sec", "=", "float", "(", "spl", "[", "3", "]", ")", "\n", "to_sec", "=", "float", "(", "spl", "[", "4", "]", ")", "\n", "duration", "=", "to_sec", "-", "from_sec", "\n", "text", "=", "\" \"", ".", "join", "(", "spl", "[", "6", ":", "]", ")", "\n", "assert", "duration", ">", "0", "and", "from_sec", ">=", "0", "and", "to_sec", ">", "0", ",", "\"bad data: \"", "+", "line", "\n", "line_dict", "=", "{", "\"wav\"", ":", "wavdir", "+", "\"/\"", "+", "stm_file", "[", ":", "-", "4", "]", "+", "\".wav\"", ",", "\n", "\"offset\"", ":", "from_sec", ",", "\n", "\"duration\"", ":", "duration", ",", "\n", "\"speaker_id\"", ":", "spk_id", "}", "\n", "out_data", ".", "append", "(", "line_dict", ")", "\n", "durations", ".", "append", "(", "duration", ")", "\n", "char_str", "=", "\" \"", ".", "join", "(", "[", "s", "if", "s", "!=", "\" \"", "else", "\"__\"", "for", "s", "in", "list", "(", "text", ".", "strip", "(", ")", ")", "]", ")", "\n", "out_file_text", ".", "write", "(", "char_str", "+", "\"\\n\"", ")", "\n", "", "", "f", ".", "close", "(", ")", "\n", "", "out_file_text", ".", "close", "(", ")", "\n", "make_parent_dir", "(", "out_yaml", ")", "\n", "f_out", "=", "open", "(", "out_yaml", ",", "\"w\"", ",", "encoding", "=", "\"utf-8\"", ")", "\n", "f_out", ".", "write", "(", "yaml", ".", "dump", "(", "out_data", ")", ")", "\n", "f_out", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.main": [[70, 113], ["extract_db.extract", "extract_db.extract", "extract_db.extract", "getopt.getopt", "len", "extract_db.Usage", "print", "print", "extract_db.Usage", "extract_db.usage", "exit"], "function", ["home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.extract", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.extract", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.extract", "home.repos.pwc.inspect_result.esalesky_xnmt-devel.las-tedlium.extract_db.usage"], ["", "def", "main", "(", "argv", "=", "None", ")", ":", "\n", "  ", "if", "argv", "is", "None", ":", "\n", "    ", "argv", "=", "sys", ".", "argv", "\n", "", "try", ":", "\n", "    ", "try", ":", "\n", "      ", "optlist", ",", "args", "=", "getopt", ".", "getopt", "(", "argv", "[", "1", ":", "]", ",", "'h'", ",", "[", "'help'", "]", ")", "\n", "", "except", "getopt", ".", "GetoptError", "as", "msg", ":", "\n", "      ", "raise", "Usage", "(", "msg", ")", "\n", "", "for", "o", ",", "a", "in", "optlist", ":", "\n", "      ", "if", "o", "in", "[", "\"-h\"", ",", "\"--help\"", "]", ":", "\n", "        ", "usage", "(", ")", "\n", "exit", "(", "2", ")", "\n", "\n", "", "", "if", "len", "(", "args", ")", "!=", "2", ":", "\n", "      ", "raise", "Usage", "(", "\"must contain two non-optional parameters\"", ")", "\n", "", "tedlium_path", "=", "args", "[", "0", "]", "\n", "data_path", "=", "args", "[", "1", "]", "\n", "\n", "###########################", "\n", "## MAIN PROGRAM ###########", "\n", "###########################", "\n", "\n", "extract", "(", "mypath", "=", "tedlium_path", "+", "\"/dev/stm/\"", ",", "\n", "out_yaml", "=", "data_path", "+", "\"/db/dev.yaml\"", ",", "\n", "out_text", "=", "data_path", "+", "\"/transcript/dev.char\"", ",", "\n", "wavdir", "=", "data_path", "+", "\"/wav/dev\"", ")", "\n", "\n", "extract", "(", "mypath", "=", "tedlium_path", "+", "\"/test/stm/\"", ",", "\n", "out_yaml", "=", "data_path", "+", "\"/db/test.yaml\"", ",", "\n", "out_text", "=", "data_path", "+", "\"/transcript/test.char\"", ",", "\n", "wavdir", "=", "data_path", "+", "\"/wav/test\"", ")", "\n", "\n", "extract", "(", "mypath", "=", "tedlium_path", "+", "\"/train/stm/\"", ",", "\n", "out_yaml", "=", "data_path", "+", "\"/db/train.yaml\"", ",", "\n", "out_text", "=", "data_path", "+", "\"/transcript/train.char\"", ",", "\n", "wavdir", "=", "data_path", "+", "\"/wav/train\"", ")", "\n", "###########################", "\n", "###########################", "\n", "\n", "", "except", "Usage", "as", "err", ":", "\n", "    ", "print", "(", "err", ".", "msg", ")", "\n", "print", "(", "\"for help use --help\"", ")", "\n", "return", "2", "\n", "\n"]]}