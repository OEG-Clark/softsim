{"home.repos.pwc.inspect_result.google-research_adamatch.fully_supervised.baseline.Baseline.__init__": [[37, 80], ["fully_supervised.lib.train.TrainableFSLModule.__init__", "model", "objax.optimizer.ExponentialMovingAverageModule", "baseline.Baseline.model.vars", "objax.optimizer.Momentum", "shared.train.ScheduleCos", "objax.Function.with_vars", "objax.GradValues", "objax.Function.with_vars", "shared.util.MyParallel", "shared.util.MyParallel", "objax.functional.softmax", "baseline.Baseline.model_ema.vars", "jax.concatenate().reshape", "jax.concatenate().reshape", "baseline.Baseline.model", "jax.split", "jax.split", "baseline.Baseline.lr", "objax.GradValues.", "baseline.Baseline.opt", "baseline.Baseline.model_ema.update_ema", "baseline.Baseline.vars", "baseline.Baseline.model_ema", "sum", "baseline.Baseline.__init__.eval_op"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.baseline.Baseline.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nclass", ":", "int", ",", "model", ":", "Callable", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "nclass", ",", "kwargs", ")", "\n", "self", ".", "model", ":", "objax", ".", "Module", "=", "model", "(", "colors", "=", "3", ",", "nclass", "=", "nclass", ",", "**", "kwargs", ")", "\n", "self", ".", "model_ema", "=", "objax", ".", "optimizer", ".", "ExponentialMovingAverageModule", "(", "self", ".", "model", ",", "momentum", "=", "0.999", ")", "\n", "train_vars", "=", "self", ".", "model", ".", "vars", "(", ")", "\n", "self", ".", "opt", "=", "objax", ".", "optimizer", ".", "Momentum", "(", "train_vars", ")", "\n", "self", ".", "lr", "=", "ScheduleCos", "(", "self", ".", "params", ".", "lr", ",", "self", ".", "params", ".", "lr_decay", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "model_ema", ".", "vars", "(", ")", ")", "\n", "def", "eval_op", "(", "x", ":", "JaxArray", ")", "->", "JaxArray", ":", "\n", "            ", "return", "objax", ".", "functional", ".", "softmax", "(", "self", ".", "model_ema", "(", "x", ",", "training", "=", "False", ")", ")", "\n", "\n", "", "def", "loss_function", "(", "sx", ",", "sy", ",", "tx", ",", "ty", ")", ":", "\n", "            ", "c", ",", "h", ",", "w", "=", "sx", ".", "shape", "[", "-", "3", ":", "]", "\n", "xu", "=", "jn", ".", "concatenate", "(", "(", "sx", ",", "tx", ")", ")", ".", "reshape", "(", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", ")", "\n", "logit", "=", "self", ".", "model", "(", "xu", ",", "training", "=", "True", ")", "\n", "logit_sx", ",", "logit_tx", "=", "jn", ".", "split", "(", "logit", ",", "(", "2", "*", "sx", ".", "shape", "[", "0", "]", ",", ")", ")", "\n", "logit_sx_weak", ",", "logit_sx_strong", "=", "logit_sx", "[", ":", ":", "2", "]", ",", "logit_sx", "[", "1", ":", ":", "2", "]", "\n", "logit_tx_weak", ",", "logit_tx_strong", "=", "logit_tx", "[", ":", ":", "2", "]", ",", "logit_tx", "[", "1", ":", ":", "2", "]", "\n", "\n", "xe", "=", "0.25", "*", "(", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_sx_weak", ",", "sy", ")", ".", "mean", "(", ")", "+", "\n", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_sx_strong", ",", "sy", ")", ".", "mean", "(", ")", "+", "\n", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_tx_weak", ",", "ty", ")", ".", "mean", "(", ")", "+", "\n", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_tx_strong", ",", "ty", ")", ".", "mean", "(", ")", ")", "\n", "wd", "=", "0.5", "*", "sum", "(", "(", "v", ".", "value", "**", "2", ")", ".", "sum", "(", ")", "for", "k", ",", "v", "in", "train_vars", ".", "items", "(", ")", "if", "k", ".", "endswith", "(", "'.w'", ")", ")", "\n", "\n", "loss", "=", "xe", "+", "self", ".", "params", ".", "wd", "*", "wd", "\n", "return", "loss", ",", "{", "'losses/xe'", ":", "xe", ",", "'losses/wd'", ":", "wd", "}", "\n", "\n", "", "gv", "=", "objax", ".", "GradValues", "(", "loss_function", ",", "train_vars", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "vars", "(", ")", ")", "\n", "def", "train_op", "(", "step", ",", "sx", ",", "sy", ",", "tx", ",", "ty", ",", "probe", "=", "None", ")", ":", "\n", "            ", "y_probe", "=", "eval_op", "(", "probe", ")", "if", "probe", "is", "not", "None", "else", "None", "\n", "p", "=", "step", "/", "(", "FLAGS", ".", "train_mimg", "<<", "20", ")", "\n", "lr", "=", "self", ".", "lr", "(", "p", ")", "\n", "g", ",", "v", "=", "gv", "(", "sx", ",", "sy", ",", "tx", ",", "ty", ")", "\n", "self", ".", "opt", "(", "lr", ",", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "g", ")", ")", "\n", "self", ".", "model_ema", ".", "update_ema", "(", ")", "\n", "return", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "{", "'monitors/lr'", ":", "lr", ",", "**", "v", "[", "1", "]", "}", ")", ",", "y_probe", "\n", "\n", "", "self", ".", "train_op", "=", "MyParallel", "(", "train_op", ",", "reduce", "=", "lambda", "x", ":", "x", ")", "\n", "self", ".", "eval_op", "=", "MyParallel", "(", "eval_op", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.fully_supervised.baseline.main": [[82, 120], ["print", "print", "shared.util.setup_tf", "baseline.Baseline", "os.path.join", "absl.flags.FLAGS.augment.startswith", "Baseline.train", "fully_supervised.lib.data.CTAData.stop", "shared.zoo.models.network", "[].parse().batch().nchw().map().prefetch", "[].parse().batch().nchw().map().prefetch", "absl.flags.FLAGS.test_extra.split", "fully_supervised.lib.data.MixData", "absl.flags.FLAGS.augment.startswith", "shared.data.fsl.DATASETS", "shared.data.fsl.DATASETS", "sorted", "[].parse().batch().nchw().map().prefetch", "fully_supervised.lib.data.CTAData", "ValueError", "jax.host_id", "jax.host_id", "jax.host_count", "jax.host_count", "[].parse().batch().nchw().map", "[].parse().batch().nchw().map", "str", "shared.data.fsl.DATASETS", "[].parse().batch().nchw().map", "jax.devices", "jax.devices", "Baseline.params.items", "[].parse().batch().nchw", "[].parse().batch().nchw", "[].parse().batch().nchw", "[].parse().batch", "[].parse().batch", "[].parse().batch", "[].parse", "[].parse", "[].parse", "list", "list", "target.test.values", "source.test.values", "list", "ds.test.values"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.shared.util.setup_tf", "home.repos.pwc.inspect_result.google-research_adamatch.shared.train.TrainableModule.train", "home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.noisy_student.PseudoLabeler.stop", "home.repos.pwc.inspect_result.google-research_adamatch.zoo.models.network", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.nchw", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.nchw", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.nchw", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.parse", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.parse", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.parse"], ["", "", "def", "main", "(", "argv", ")", ":", "\n", "    ", "del", "argv", "\n", "print", "(", "'JAX host: %d / %d'", "%", "(", "jax", ".", "host_id", "(", ")", ",", "jax", ".", "host_count", "(", ")", ")", ")", "\n", "print", "(", "'JAX devices:\\n%s'", "%", "'\\n'", ".", "join", "(", "str", "(", "d", ")", "for", "d", "in", "jax", ".", "devices", "(", ")", ")", ",", "flush", "=", "True", ")", "\n", "setup_tf", "(", ")", "\n", "# In fully supervised, source and target are both labeled, we just kept the same names to reuse the code.", "\n", "if", "FLAGS", ".", "target", "==", "''", ":", "\n", "        ", "FLAGS", ".", "target", "=", "FLAGS", ".", "source", "\n", "", "source", "=", "FSL_DATASETS", "(", ")", "[", "f'{FLAGS.dataset}_{FLAGS.source}-0'", "]", "(", ")", "\n", "target", "=", "FSL_DATASETS", "(", ")", "[", "f'{FLAGS.dataset}_{FLAGS.target}-0'", "]", "(", ")", "\n", "module", "=", "Baseline", "(", "source", ".", "nclass", ",", "network", "(", "FLAGS", ".", "arch", ")", ",", "\n", "lr", "=", "FLAGS", ".", "lr", ",", "\n", "lr_decay", "=", "FLAGS", ".", "lr_decay", ",", "\n", "wd", "=", "FLAGS", ".", "wd", ",", "\n", "arch", "=", "FLAGS", ".", "arch", ",", "\n", "batch", "=", "FLAGS", ".", "batch", ")", "\n", "logdir", "=", "f'FSL/{FLAGS.dataset}/{FLAGS.source}/{FLAGS.target}/{FLAGS.augment}/{module.__class__.__name__}/%s'", "%", "(", "\n", "'_'", ".", "join", "(", "sorted", "(", "'%s%s'", "%", "k", "for", "k", "in", "module", ".", "params", ".", "items", "(", ")", ")", ")", ")", "\n", "logdir", "=", "os", ".", "path", ".", "join", "(", "FLAGS", ".", "logdir", ",", "logdir", ")", "\n", "test", "=", "{", "\n", "f'{FLAGS.source}_to_{FLAGS.target}'", ":", "(", "list", "(", "target", ".", "test", ".", "values", "(", ")", ")", "[", "0", "]", ".", "parse", "(", ")", ".", "batch", "(", "FLAGS", ".", "batch", ")", ".", "nchw", "(", ")", "\n", ".", "map", "(", "lambda", "d", ":", "{", "**", "d", ",", "'domain'", ":", "0", "}", ")", ".", "prefetch", "(", "16", ")", ")", ",", "\n", "f'{FLAGS.target}_to_{FLAGS.source}'", ":", "(", "list", "(", "source", ".", "test", ".", "values", "(", ")", ")", "[", "0", "]", ".", "parse", "(", ")", ".", "batch", "(", "FLAGS", ".", "batch", ")", ".", "nchw", "(", ")", "\n", ".", "map", "(", "lambda", "d", ":", "{", "**", "d", ",", "'domain'", ":", "1", "}", ")", ".", "prefetch", "(", "16", ")", ")", ",", "\n", "}", "\n", "if", "FLAGS", ".", "test_extra", ":", "\n", "        ", "for", "ds_name", "in", "FLAGS", ".", "test_extra", ".", "split", "(", "','", ")", ":", "\n", "            ", "ds", "=", "FSL_DATASETS", "(", ")", "[", "f'{FLAGS.dataset}_{ds_name}-0'", "]", "(", ")", "\n", "test", "[", "f'{FLAGS.target}_to_{ds_name}'", "]", "=", "(", "list", "(", "ds", ".", "test", ".", "values", "(", ")", ")", "[", "0", "]", ".", "parse", "(", ")", ".", "batch", "(", "FLAGS", ".", "batch", ")", ".", "nchw", "(", ")", "\n", ".", "map", "(", "lambda", "d", ":", "{", "**", "d", ",", "'domain'", ":", "1", "}", ")", ".", "prefetch", "(", "16", ")", ")", "\n", "", "", "if", "FLAGS", ".", "augment", ".", "startswith", "(", "'('", ")", ":", "\n", "        ", "train", "=", "MixData", "(", "source", ".", "train", ",", "target", ".", "train", ",", "source", ".", "nclass", ",", "FLAGS", ".", "batch", ")", "\n", "", "elif", "FLAGS", ".", "augment", ".", "startswith", "(", "'CTA('", ")", ":", "\n", "        ", "train", "=", "CTAData", "(", "source", ".", "train", ",", "target", ".", "train", ",", "source", ".", "nclass", ",", "FLAGS", ".", "batch", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "f'Augment flag value {FLAGS.augment} not supported.'", ")", "\n", "", "module", ".", "train", "(", "FLAGS", ".", "train_mimg", "<<", "10", ",", "FLAGS", ".", "report_kimg", ",", "train", ",", "test", ",", "logdir", ",", "FLAGS", ".", "keep_ckpts", ")", "\n", "train", ".", "stop", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.lib.train.TrainableFSLModule.eval": [[25, 45], ["sorted", "print", "tqdm.tqdm.tqdm", "train.TrainableFSLModule.eval.get_accuracy"], "methods", ["None"], ["    ", "def", "eval", "(", "self", ",", "summary", ":", "Summary", ",", "epoch", ":", "int", ",", "test", ":", "Dict", "[", "str", ",", "Iterable", "]", ",", "valid", ":", "Optional", "[", "Iterable", "]", "=", "None", ")", ":", "\n", "        ", "def", "get_accuracy", "(", "dataset", ":", "Iterable", ")", ":", "\n", "            ", "accuracy", ",", "total", ",", "batch", "=", "0", ",", "0", ",", "None", "\n", "for", "data", "in", "tqdm", "(", "dataset", ",", "leave", "=", "False", ",", "desc", "=", "'Evaluating'", ")", ":", "\n", "                ", "x", ",", "y", "=", "data", "[", "'image'", "]", ".", "_numpy", "(", ")", ",", "data", "[", "'label'", "]", ".", "_numpy", "(", ")", "\n", "total", "+=", "x", ".", "shape", "[", "0", "]", "\n", "batch", "=", "batch", "or", "x", ".", "shape", "[", "0", "]", "\n", "if", "x", ".", "shape", "[", "0", "]", "!=", "batch", ":", "\n", "# Pad the last batch if it's smaller than expected (must divide properly on GPUs).", "\n", "                    ", "x", "=", "np", ".", "concatenate", "(", "[", "x", "]", "+", "[", "x", "[", "-", "1", ":", "]", "]", "*", "(", "batch", "-", "x", ".", "shape", "[", "0", "]", ")", ")", "\n", "", "p", "=", "self", ".", "eval_op", "(", "x", ")", "[", ":", "y", ".", "shape", "[", "0", "]", "]", "\n", "accuracy", "+=", "(", "np", ".", "argmax", "(", "p", ",", "axis", "=", "1", ")", "==", "data", "[", "'label'", "]", ".", "numpy", "(", ")", ")", ".", "sum", "(", ")", "\n", "", "return", "accuracy", "/", "total", "if", "total", "else", "0", "\n", "\n", "", "test_accuracy", "=", "{", "key", ":", "get_accuracy", "(", "value", ")", "for", "key", ",", "value", "in", "test", ".", "items", "(", ")", "}", "\n", "to_print", "=", "[", "]", "\n", "for", "key", ",", "value", "in", "sorted", "(", "test_accuracy", ".", "items", "(", ")", ")", ":", "\n", "            ", "summary", ".", "scalar", "(", "'accuracy/%s'", "%", "key", ",", "100", "*", "value", ")", "\n", "to_print", ".", "append", "(", "'Acccuracy/%s %.2f'", "%", "(", "key", ",", "summary", "[", "'accuracy/%s'", "%", "key", "]", "(", ")", ")", ")", "\n", "", "print", "(", "'Epoch %-4d  Loss %.2f  %s'", "%", "(", "epoch", "+", "1", ",", "summary", "[", "'losses/xe'", "]", "(", ")", ",", "' '", ".", "join", "(", "to_print", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.lib.train.TrainableFSLModule.train_step": [[46, 57], ["train.TrainableFSLModule.train_op", "kv.items", "data.get", "jax.numpy.isnan", "summary.scalar", "jax.numpy.concatenate", "ValueError", "float"], "methods", ["None"], ["", "def", "train_step", "(", "self", ",", "summary", ",", "data", ",", "step", ")", ":", "\n", "        ", "kv", ",", "probe", "=", "self", ".", "train_op", "(", "step", ",", "\n", "data", "[", "'sx'", "]", "[", "'image'", "]", ",", "data", "[", "'sx'", "]", "[", "'label'", "]", ",", "\n", "data", "[", "'tx'", "]", "[", "'image'", "]", ",", "data", "[", "'tx'", "]", "[", "'label'", "]", ",", "data", ".", "get", "(", "'probe'", ")", ")", "\n", "if", "'probe_callback'", "in", "data", ":", "\n", "            ", "data", "[", "'probe_callback'", "]", "(", "jn", ".", "concatenate", "(", "probe", ")", ")", "\n", "", "for", "k", ",", "v", "in", "kv", ".", "items", "(", ")", ":", "\n", "            ", "v", "=", "v", "[", "0", "]", "\n", "if", "jn", ".", "isnan", "(", "v", ")", ":", "\n", "                ", "raise", "ValueError", "(", "'NaN'", ",", "k", ")", "\n", "", "summary", ".", "scalar", "(", "k", ",", "float", "(", "v", ")", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.google-research_adamatch.lib.data.MixData.__init__": [[36, 52], ["a[].split", "tuple", "shared.data.core.Numpyfier", "shared.data.core.Numpyfier", "shared.data.merger.DataMerger", "absl.flags.FLAGS.augment.split", "dict", "v.repeat().shuffle().parse().map().nchw", "shared.data.core.Numpyfier.batch().one_hot().prefetch", "shared.data.core.Numpyfier.batch().prefetch", "shared.data.augment.core.get_tf_augment", "tensorflow.stack", "v.repeat().shuffle().parse().map", "shared.data.core.Numpyfier.batch().one_hot", "shared.data.core.Numpyfier.batch", "v.repeat().shuffle().parse", "shared.data.core.Numpyfier.batch", "weak", "strong", "v.repeat().shuffle", "v.repeat"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.nchw", "home.repos.pwc.inspect_result.google-research_adamatch.augment.core.get_tf_augment", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.one_hot", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.parse"], ["    ", "def", "__init__", "(", "self", ",", "\n", "source", ":", "DataSet", ",", "\n", "target", ":", "DataSet", ",", "\n", "nclass", ":", "int", ",", "batch", ":", "int", ")", ":", "\n", "        ", "a", "=", "FLAGS", ".", "augment", ".", "split", "(", "'('", ")", "[", "-", "1", "]", "\n", "a", "=", "a", "[", ":", "-", "1", "]", ".", "split", "(", "','", ")", "\n", "weak", ",", "strong", "=", "tuple", "(", "get_tf_augment", "(", "ai", ",", "size", "=", "source", ".", "image_shape", "[", "0", "]", ")", "for", "ai", "in", "a", ")", "\n", "\n", "def", "bi_augment", "(", "d", ")", ":", "\n", "            ", "return", "dict", "(", "image", "=", "tf", ".", "stack", "(", "[", "weak", "(", "d", ")", "[", "'image'", "]", ",", "strong", "(", "d", ")", "[", "'image'", "]", "]", ")", ",", "index", "=", "d", "[", "'index'", "]", ",", "label", "=", "d", "[", "'label'", "]", ")", "\n", "\n", "", "sx", ",", "tx", "=", "(", "Numpyfier", "(", "v", ".", "repeat", "(", ")", ".", "shuffle", "(", "FLAGS", ".", "shuffle", ")", ".", "parse", "(", ")", "\n", ".", "map", "(", "bi_augment", ",", "FLAGS", ".", "para_augment", ")", ".", "nchw", "(", ")", "\n", ".", "batch", "(", "batch", ")", ".", "one_hot", "(", "nclass", ")", ".", "prefetch", "(", "16", ")", ")", "\n", "for", "v", "in", "(", "source", ",", "target", ")", ")", "\n", "self", ".", "train", "=", "DataMerger", "(", "(", "sx", ",", "tx", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.lib.data.MixData.__iter__": [[53, 56], ["dict"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", "->", "dict", ":", "\n", "        ", "for", "sx", ",", "tx", "in", "self", ".", "train", ":", "\n", "            ", "yield", "dict", "(", "sx", "=", "sx", ",", "tx", "=", "tx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.lib.data.CTAData.__init__": [[59, 95], ["a[].split", "data.CTAData.check_mem_requirements", "data.CTAData.get_np_arrays", "multiprocessing.Pool", "int", "shared.data.augment.ctaugment.CTAugment", "collections.deque", "collections.deque", "list", "shared.util.StoppableThread", "data.CTAData.thread.start", "tuple", "shared.data.core.Numpyfier", "shared.data.core.Numpyfier", "shared.data.merger.DataMerger", "absl.flags.FLAGS.augment.split", "kwargs.get", "int", "float", "float", "range", "dict", "v.repeat().shuffle().parse().map().nchw", "shared.data.core.Numpyfier.batch().one_hot().prefetch", "shared.data.core.Numpyfier.batch().prefetch", "kwargs.get", "kwargs.get", "kwargs.get", "shared.data.augment.core.get_tf_augment", "tensorflow.stack", "v.repeat().shuffle().parse().map", "shared.data.core.Numpyfier.batch().one_hot", "shared.data.core.Numpyfier.batch", "x.split", "v.repeat().shuffle().parse", "shared.data.core.Numpyfier.batch", "weak", "strong", "v.repeat().shuffle", "v.repeat"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.augment.augment.AugmentPoolBase.check_mem_requirements", "home.repos.pwc.inspect_result.google-research_adamatch.augment.augment.AugmentPoolBase.get_np_arrays", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.nchw", "home.repos.pwc.inspect_result.google-research_adamatch.augment.core.get_tf_augment", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.one_hot", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.parse"], ["    ", "def", "__init__", "(", "self", ",", "\n", "source", ":", "DataSet", ",", "\n", "target", ":", "DataSet", ",", "\n", "nclass", ":", "int", ",", "batch", ":", "int", ")", ":", "\n", "        ", "a", "=", "FLAGS", ".", "augment", ".", "split", "(", "'('", ")", "[", "-", "1", "]", "\n", "a", "=", "a", "[", ":", "-", "1", "]", ".", "split", "(", "','", ")", "\n", "a", ",", "kwargs", "=", "a", "[", ":", "2", "]", ",", "{", "k", ":", "v", "for", "k", ",", "v", "in", "(", "x", ".", "split", "(", "'='", ")", "for", "x", "in", "a", "[", "2", ":", "]", ")", "}", "\n", "h", ",", "w", ",", "c", "=", "source", ".", "image_shape", "\n", "para", "=", "FLAGS", ".", "para_augment", "\n", "probe_shape", "=", "(", "para", ",", "2", "*", "batch", ",", "c", ",", "h", ",", "w", ")", "\n", "sx_shape", "=", "(", "para", ",", "batch", ",", "2", ",", "c", ",", "h", ",", "w", ")", "\n", "tx_shape", "=", "(", "para", ",", "batch", ",", "2", ",", "c", ",", "h", ",", "w", ")", "\n", "del", "h", ",", "w", ",", "c", "\n", "self", ".", "shapes", "=", "probe_shape", ",", "sx_shape", ",", "tx_shape", "\n", "self", ".", "check_mem_requirements", "(", ")", "\n", "self", ".", "probe", ",", "self", ".", "sx", ",", "self", ".", "tx", "=", "self", ".", "get_np_arrays", "(", "self", ".", "shapes", ")", "\n", "self", ".", "pool", "=", "multiprocessing", ".", "Pool", "(", "para", ")", "\n", "self", ".", "probe_period", "=", "int", "(", "kwargs", ".", "get", "(", "'probe'", ",", "1", ")", ")", "\n", "self", ".", "cta", "=", "CTAugment", "(", "int", "(", "kwargs", ".", "get", "(", "'depth'", ",", "2", ")", ")", ",", "\n", "float", "(", "kwargs", ".", "get", "(", "'th'", ",", "0.8", ")", ")", ",", "\n", "float", "(", "kwargs", ".", "get", "(", "'decay'", ",", "0.99", ")", ")", ")", "\n", "self", ".", "to_schedule", "=", "collections", ".", "deque", "(", ")", "\n", "self", ".", "deque", "=", "collections", ".", "deque", "(", ")", "\n", "self", ".", "free", "=", "list", "(", "range", "(", "para", ")", ")", "\n", "self", ".", "thread", "=", "StoppableThread", "(", "target", "=", "self", ".", "scheduler", ")", "\n", "self", ".", "thread", ".", "start", "(", ")", "\n", "weak", ",", "strong", "=", "tuple", "(", "get_tf_augment", "(", "ai", ",", "size", "=", "source", ".", "image_shape", "[", "0", "]", ")", "for", "ai", "in", "a", ")", "\n", "\n", "def", "bi_augment", "(", "d", ")", ":", "\n", "            ", "return", "dict", "(", "image", "=", "tf", ".", "stack", "(", "[", "weak", "(", "d", ")", "[", "'image'", "]", ",", "strong", "(", "d", ")", "[", "'image'", "]", "]", ")", ",", "index", "=", "d", "[", "'index'", "]", ",", "label", "=", "d", "[", "'label'", "]", ")", "\n", "\n", "", "sx", ",", "tx", "=", "(", "Numpyfier", "(", "v", ".", "repeat", "(", ")", ".", "shuffle", "(", "FLAGS", ".", "shuffle", ")", ".", "parse", "(", ")", "\n", ".", "map", "(", "bi_augment", ",", "FLAGS", ".", "para_augment", ")", ".", "nchw", "(", ")", "\n", ".", "batch", "(", "batch", ")", ".", "one_hot", "(", "nclass", ")", ".", "prefetch", "(", "16", ")", ")", "\n", "for", "v", "in", "(", "source", ",", "target", ")", ")", "\n", "self", ".", "train", "=", "DataMerger", "(", "(", "sx", ",", "tx", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.lib.data.CTAData.stop": [[96, 98], ["data.CTAData.thread.stop"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.noisy_student.PseudoLabeler.stop"], ["", "def", "stop", "(", "self", ")", ":", "\n", "        ", "self", ".", "thread", ".", "stop", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.lib.data.CTAData.scheduler": [[99, 108], ["data.CTAData.thread.stopped", "time.sleep", "data.CTAData.to_schedule.popleft", "data.CTAData.deque.append", "data.CTAData.pool.apply_async"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.shared.util.StoppableThread.stopped"], ["", "def", "scheduler", "(", "self", ")", ":", "\n", "        ", "while", "not", "self", ".", "thread", ".", "stopped", "(", ")", ":", "\n", "            ", "sleep", "(", "0.0001", ")", "\n", "while", "self", ".", "to_schedule", ":", "\n", "                ", "d", ",", "idx", ",", "do_probe", "=", "self", ".", "to_schedule", ".", "popleft", "(", ")", "\n", "self", ".", "sx", "[", "idx", "]", "=", "d", "[", "'sx'", "]", "[", "'image'", "]", "\n", "self", ".", "tx", "[", "idx", "]", "=", "d", "[", "'tx'", "]", "[", "'image'", "]", "\n", "worker_args", "=", "(", "idx", ",", "self", ".", "shapes", ",", "do_probe", ",", "self", ".", "cta", ")", "\n", "self", ".", "deque", ".", "append", "(", "(", "d", ",", "idx", ",", "self", ".", "pool", ".", "apply_async", "(", "self", ".", "worker", ",", "worker_args", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.lib.data.CTAData.worker": [[109, 129], ["objax.util.image.nhwc", "objax.util.image.nhwc", "numpy.stack", "numpy.stack", "nchw", "nchw", "nchw", "numpy.stack", "numpy.stack", "cta.policy", "numpy.stack", "cta.policy", "CTAData.get_np_arrays", "shared.data.augment.ctaugment.apply", "shared.data.augment.ctaugment.apply", "range", "shared.data.augment.ctaugment.OP", "data.CTAData.worker.cutout_policy"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.nchw", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.nchw", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.nchw", "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.CTAugment.policy", "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.CTAugment.policy", "home.repos.pwc.inspect_result.google-research_adamatch.augment.augment.AugmentPoolBase.get_np_arrays", "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.apply", "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.apply"], ["", "", "", "@", "staticmethod", "\n", "def", "worker", "(", "idx", ":", "int", ",", "shapes", ":", "List", "[", "Tuple", "[", "int", ",", "...", "]", "]", ",", "do_probe", ":", "bool", ",", "cta", ":", "CTAugment", ")", ":", "\n", "        ", "def", "cutout_policy", "(", ")", ":", "\n", "            ", "return", "cta", ".", "policy", "(", "probe", "=", "False", ")", "+", "[", "ctaugment", ".", "OP", "(", "'cutout'", ",", "(", "1", ",", ")", ")", "]", "\n", "\n", "", "probe", ",", "sx_array", ",", "tx_array", "=", "(", "arr", "[", "idx", "]", "for", "arr", "in", "CTAData", ".", "get_np_arrays", "(", "shapes", ")", ")", "\n", "sx", "=", "objax", ".", "util", ".", "image", ".", "nhwc", "(", "sx_array", ")", "\n", "tx", "=", "objax", ".", "util", ".", "image", ".", "nhwc", "(", "tx_array", ")", "\n", "nchw", "=", "objax", ".", "util", ".", "image", ".", "nchw", "\n", "sx_strong", "=", "np", ".", "stack", "(", "[", "ctaugment", ".", "apply", "(", "sx", "[", "i", ",", "1", "]", ",", "cutout_policy", "(", ")", ")", "for", "i", "in", "range", "(", "sx", ".", "shape", "[", "0", "]", ")", "]", ")", "\n", "tu_strong", "=", "np", ".", "stack", "(", "[", "ctaugment", ".", "apply", "(", "tx", "[", "i", ",", "1", "]", ",", "cutout_policy", "(", ")", ")", "for", "i", "in", "range", "(", "tx", ".", "shape", "[", "0", "]", ")", "]", ")", "\n", "sx_array", "[", ":", "]", "=", "nchw", "(", "np", ".", "stack", "(", "[", "sx", "[", ":", ",", "0", "]", ",", "sx_strong", "]", ",", "axis", "=", "1", ")", ")", "\n", "tx_array", "[", ":", "]", "=", "nchw", "(", "np", ".", "stack", "(", "[", "tx", "[", ":", ",", "0", "]", ",", "tu_strong", "]", ",", "axis", "=", "1", ")", ")", "\n", "if", "not", "do_probe", ":", "\n", "            ", "return", "\n", "\n", "", "policy_list_s", "=", "[", "cta", ".", "policy", "(", "probe", "=", "True", ")", "for", "_", "in", "range", "(", "sx", ".", "shape", "[", "0", "]", ")", "]", "\n", "policy_list_t", "=", "[", "cta", ".", "policy", "(", "probe", "=", "True", ")", "for", "_", "in", "range", "(", "tx", ".", "shape", "[", "0", "]", ")", "]", "\n", "probe", "[", ":", "]", "=", "nchw", "(", "np", ".", "stack", "(", "[", "ctaugment", ".", "apply", "(", "sx", "[", "i", ",", "0", "]", ",", "policy", ")", "for", "i", ",", "policy", "in", "enumerate", "(", "policy_list_s", ")", "]", "+", "\n", "[", "ctaugment", ".", "apply", "(", "tx", "[", "i", ",", "0", "]", ",", "policy", ")", "for", "i", ",", "policy", "in", "enumerate", "(", "policy_list_t", ")", "]", ")", ")", "\n", "return", "policy_list_s", "+", "policy_list_t", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.lib.data.CTAData.update_rates": [[130, 134], ["range", "data.CTAData.cta.update_rates", "numpy.abs().sum", "numpy.abs"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.CTAugment.update_rates"], ["\n", "", "def", "update_rates", "(", "self", ",", "policy", ",", "label", ",", "y_probe", ")", ":", "\n", "        ", "w1", "=", "1", "-", "0.5", "*", "np", ".", "abs", "(", "y_probe", "-", "label", ")", ".", "sum", "(", "1", ")", "\n", "for", "p", "in", "range", "(", "w1", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "self", ".", "cta", ".", "update_rates", "(", "policy", "[", "p", "]", ",", "w1", "[", "p", "]", ")", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.lib.data.CTAData.__iter__": [[135, 153], ["enumerate", "data.CTAData.to_schedule.append", "data.CTAData.deque.popleft", "data.CTAData.free.append", "pd.get", "time.sleep", "numpy.copy", "functools.partial", "dict", "data.CTAData.free.pop"], "methods", ["None"], ["\n", "", "", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "for", "i", ",", "(", "sx", ",", "tx", ")", "in", "enumerate", "(", "self", ".", "train", ")", ":", "\n", "            ", "if", "not", "self", ".", "free", ":", "\n", "                ", "while", "not", "self", ".", "deque", ":", "\n", "                    ", "sleep", "(", "0.0001", ")", "\n", "", "d", ",", "idx", ",", "pd", "=", "self", ".", "deque", ".", "popleft", "(", ")", "\n", "self", ".", "free", ".", "append", "(", "idx", ")", "\n", "policy", "=", "pd", ".", "get", "(", ")", "\n", "if", "policy", ":", "\n", "                    ", "d", "[", "'probe'", "]", "=", "np", ".", "copy", "(", "self", ".", "probe", "[", "idx", "]", ")", "\n", "d", "[", "'policy'", "]", "=", "policy", "\n", "d", "[", "'probe_callback'", "]", "=", "functools", ".", "partial", "(", "self", ".", "update_rates", ",", "d", "[", "'policy'", "]", ",", "\n", "np", ".", "concatenate", "(", "(", "d", "[", "'sx'", "]", "[", "'label'", "]", ",", "d", "[", "'tx'", "]", "[", "'label'", "]", ")", ")", ")", "\n", "\n", "", "d", "[", "'sx'", "]", "[", "'image'", "]", "[", ":", "]", "=", "self", ".", "sx", "[", "idx", "]", "\n", "d", "[", "'tx'", "]", "[", "'image'", "]", "[", ":", "]", "=", "self", ".", "tx", "[", "idx", "]", "\n", "yield", "d", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.lib.train.TrainableSSLModule.eval": [[25, 45], ["sorted", "print", "tqdm.tqdm.tqdm", "train.TrainableSSLModule.eval.get_accuracy"], "methods", ["None"], ["    ", "def", "eval", "(", "self", ",", "summary", ":", "Summary", ",", "epoch", ":", "int", ",", "test", ":", "Dict", "[", "str", ",", "Iterable", "]", ",", "valid", ":", "Optional", "[", "Iterable", "]", "=", "None", ")", ":", "\n", "        ", "def", "get_accuracy", "(", "dataset", ":", "Iterable", ")", ":", "\n", "            ", "accuracy", ",", "total", ",", "batch", "=", "0", ",", "0", ",", "None", "\n", "for", "data", "in", "tqdm", "(", "dataset", ",", "leave", "=", "False", ",", "desc", "=", "'Evaluating'", ")", ":", "\n", "                ", "x", ",", "y", "=", "data", "[", "'image'", "]", ".", "_numpy", "(", ")", ",", "data", "[", "'label'", "]", ".", "_numpy", "(", ")", "\n", "total", "+=", "x", ".", "shape", "[", "0", "]", "\n", "batch", "=", "batch", "or", "x", ".", "shape", "[", "0", "]", "\n", "if", "x", ".", "shape", "[", "0", "]", "!=", "batch", ":", "\n", "# Pad the last batch if it's smaller than expected (must divide properly on GPUs).", "\n", "                    ", "x", "=", "np", ".", "concatenate", "(", "[", "x", "]", "+", "[", "x", "[", "-", "1", ":", "]", "]", "*", "(", "batch", "-", "x", ".", "shape", "[", "0", "]", ")", ")", "\n", "", "p", "=", "self", ".", "eval_op", "(", "x", ")", "[", ":", "y", ".", "shape", "[", "0", "]", "]", "\n", "accuracy", "+=", "(", "np", ".", "argmax", "(", "p", ",", "axis", "=", "1", ")", "==", "data", "[", "'label'", "]", ".", "numpy", "(", ")", ")", ".", "sum", "(", ")", "\n", "", "return", "accuracy", "/", "total", "if", "total", "else", "0", "\n", "\n", "", "test_accuracy", "=", "{", "key", ":", "get_accuracy", "(", "value", ")", "for", "key", ",", "value", "in", "test", ".", "items", "(", ")", "}", "\n", "to_print", "=", "[", "]", "\n", "for", "key", ",", "value", "in", "sorted", "(", "test_accuracy", ".", "items", "(", ")", ")", ":", "\n", "            ", "summary", ".", "scalar", "(", "'accuracy/%s'", "%", "key", ",", "100", "*", "value", ")", "\n", "to_print", ".", "append", "(", "'Acccuracy/%s %.2f'", "%", "(", "key", ",", "summary", "[", "'accuracy/%s'", "%", "key", "]", "(", ")", ")", ")", "\n", "", "print", "(", "'Epoch %-4d  Loss %.2f  %s'", "%", "(", "epoch", "+", "1", ",", "summary", "[", "'losses/xe'", "]", "(", ")", ",", "' '", ".", "join", "(", "to_print", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.lib.train.TrainableSSLModule.train_step": [[46, 57], ["train.TrainableSSLModule.train_op", "kv.items", "data.get", "jax.numpy.isnan", "summary.scalar", "jax.numpy.concatenate", "ValueError", "float"], "methods", ["None"], ["", "def", "train_step", "(", "self", ",", "summary", ",", "data", ",", "step", ")", ":", "\n", "        ", "kv", ",", "probe", "=", "self", ".", "train_op", "(", "step", ",", "\n", "data", "[", "'sx'", "]", "[", "'image'", "]", ",", "data", "[", "'sx'", "]", "[", "'label'", "]", ",", "\n", "data", "[", "'tx'", "]", "[", "'image'", "]", ",", "data", "[", "'tx'", "]", "[", "'label'", "]", ",", "data", ".", "get", "(", "'probe'", ")", ")", "\n", "if", "'probe_callback'", "in", "data", ":", "\n", "            ", "data", "[", "'probe_callback'", "]", "(", "jn", ".", "concatenate", "(", "probe", ")", ")", "\n", "", "for", "k", ",", "v", "in", "kv", ".", "items", "(", ")", ":", "\n", "            ", "v", "=", "v", "[", "0", "]", "\n", "if", "jn", ".", "isnan", "(", "v", ")", ":", "\n", "                ", "raise", "ValueError", "(", "'NaN'", ",", "k", ")", "\n", "", "summary", ".", "scalar", "(", "k", ",", "float", "(", "v", ")", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.google-research_adamatch.lib.train.TrainableSSDAModule.eval": [[25, 45], ["sorted", "print", "tqdm.tqdm.tqdm", "train.TrainableSSDAModule.eval.get_accuracy"], "methods", ["None"], ["    ", "def", "eval", "(", "self", ",", "summary", ":", "Summary", ",", "epoch", ":", "int", ",", "test", ":", "Dict", "[", "str", ",", "Iterable", "]", ",", "valid", ":", "Optional", "[", "Iterable", "]", "=", "None", ")", ":", "\n", "        ", "def", "get_accuracy", "(", "dataset", ":", "Iterable", ")", ":", "\n", "            ", "accuracy", ",", "total", ",", "batch", "=", "0", ",", "0", ",", "None", "\n", "for", "data", "in", "tqdm", "(", "dataset", ",", "leave", "=", "False", ",", "desc", "=", "'Evaluating'", ")", ":", "\n", "                ", "x", ",", "y", "=", "data", "[", "'image'", "]", ".", "_numpy", "(", ")", ",", "data", "[", "'label'", "]", ".", "_numpy", "(", ")", "\n", "total", "+=", "x", ".", "shape", "[", "0", "]", "\n", "batch", "=", "batch", "or", "x", ".", "shape", "[", "0", "]", "\n", "if", "x", ".", "shape", "[", "0", "]", "!=", "batch", ":", "\n", "# Pad the last batch if it's smaller than expected (must divide properly on GPUs).", "\n", "                    ", "x", "=", "np", ".", "concatenate", "(", "[", "x", "]", "+", "[", "x", "[", "-", "1", ":", "]", "]", "*", "(", "batch", "-", "x", ".", "shape", "[", "0", "]", ")", ")", "\n", "", "p", "=", "self", ".", "eval_op", "(", "x", ")", "[", ":", "y", ".", "shape", "[", "0", "]", "]", "\n", "accuracy", "+=", "(", "np", ".", "argmax", "(", "p", ",", "axis", "=", "1", ")", "==", "data", "[", "'label'", "]", ".", "numpy", "(", ")", ")", ".", "sum", "(", ")", "\n", "", "return", "accuracy", "/", "total", "if", "total", "else", "0", "\n", "\n", "", "test_accuracy", "=", "{", "key", ":", "get_accuracy", "(", "value", ")", "for", "key", ",", "value", "in", "test", ".", "items", "(", ")", "}", "\n", "to_print", "=", "[", "]", "\n", "for", "key", ",", "value", "in", "sorted", "(", "test_accuracy", ".", "items", "(", ")", ")", ":", "\n", "            ", "summary", ".", "scalar", "(", "'accuracy/%s'", "%", "key", ",", "100", "*", "value", ")", "\n", "to_print", ".", "append", "(", "'Acccuracy/%s %.2f'", "%", "(", "key", ",", "summary", "[", "'accuracy/%s'", "%", "key", "]", "(", ")", ")", ")", "\n", "", "print", "(", "'Epoch %-4d  Loss %.2f  %s'", "%", "(", "epoch", "+", "1", ",", "summary", "[", "'losses/xe'", "]", "(", ")", ",", "' '", ".", "join", "(", "to_print", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.lib.train.TrainableSSDAModule.train_step": [[46, 58], ["train.TrainableSSDAModule.train_op", "kv.items", "data.get", "jax.numpy.isnan", "summary.scalar", "jax.numpy.concatenate", "ValueError", "float"], "methods", ["None"], ["", "def", "train_step", "(", "self", ",", "summary", ",", "data", ",", "step", ")", ":", "\n", "        ", "kv", ",", "probe", "=", "self", ".", "train_op", "(", "step", ",", "\n", "data", "[", "'sx'", "]", "[", "'image'", "]", ",", "data", "[", "'sx'", "]", "[", "'label'", "]", ",", "\n", "data", "[", "'tx'", "]", "[", "'image'", "]", ",", "data", "[", "'tx'", "]", "[", "'label'", "]", ",", "data", ".", "get", "(", "'probe'", ")", ")", "\n", "if", "'probe_callback'", "in", "data", ":", "\n", "            ", "data", "[", "'probe_callback'", "]", "(", "jn", ".", "concatenate", "(", "probe", ")", ")", "\n", "", "for", "k", ",", "v", "in", "kv", ".", "items", "(", ")", ":", "\n", "            ", "v", "=", "v", "[", "0", "]", "\n", "if", "jn", ".", "isnan", "(", "v", ")", ":", "\n", "                ", "raise", "ValueError", "(", "'NaN'", ",", "k", ")", "\n", "", "summary", ".", "scalar", "(", "k", ",", "float", "(", "v", ")", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.google-research_adamatch.lib.train.TrainableDAModule.eval": [[25, 45], ["sorted", "print", "tqdm.tqdm.tqdm", "train.TrainableDAModule.eval.get_accuracy"], "methods", ["None"], ["    ", "def", "eval", "(", "self", ",", "summary", ":", "Summary", ",", "epoch", ":", "int", ",", "test", ":", "Dict", "[", "str", ",", "Iterable", "]", ",", "valid", ":", "Optional", "[", "Iterable", "]", "=", "None", ")", ":", "\n", "        ", "def", "get_accuracy", "(", "dataset", ":", "Iterable", ")", ":", "\n", "            ", "accuracy", ",", "total", ",", "batch", "=", "0", ",", "0", ",", "None", "\n", "for", "data", "in", "tqdm", "(", "dataset", ",", "leave", "=", "False", ",", "desc", "=", "'Evaluating'", ")", ":", "\n", "                ", "x", ",", "y", "=", "data", "[", "'image'", "]", ".", "_numpy", "(", ")", ",", "data", "[", "'label'", "]", ".", "_numpy", "(", ")", "\n", "total", "+=", "x", ".", "shape", "[", "0", "]", "\n", "batch", "=", "batch", "or", "x", ".", "shape", "[", "0", "]", "\n", "if", "x", ".", "shape", "[", "0", "]", "!=", "batch", ":", "\n", "# Pad the last batch if it's smaller than expected (must divide properly on GPUs).", "\n", "                    ", "x", "=", "np", ".", "concatenate", "(", "[", "x", "]", "+", "[", "x", "[", "-", "1", ":", "]", "]", "*", "(", "batch", "-", "x", ".", "shape", "[", "0", "]", ")", ")", "\n", "", "p", "=", "self", ".", "eval_op", "(", "x", ")", "[", ":", "y", ".", "shape", "[", "0", "]", "]", "\n", "accuracy", "+=", "(", "np", ".", "argmax", "(", "p", ",", "axis", "=", "1", ")", "==", "data", "[", "'label'", "]", ".", "numpy", "(", ")", ")", ".", "sum", "(", ")", "\n", "", "return", "accuracy", "/", "total", "if", "total", "else", "0", "\n", "\n", "", "test_accuracy", "=", "{", "key", ":", "get_accuracy", "(", "value", ")", "for", "key", ",", "value", "in", "test", ".", "items", "(", ")", "}", "\n", "to_print", "=", "[", "]", "\n", "for", "key", ",", "value", "in", "sorted", "(", "test_accuracy", ".", "items", "(", ")", ")", ":", "\n", "            ", "summary", ".", "scalar", "(", "'accuracy/%s'", "%", "key", ",", "100", "*", "value", ")", "\n", "to_print", ".", "append", "(", "'Acccuracy/%s %.2f'", "%", "(", "key", ",", "summary", "[", "'accuracy/%s'", "%", "key", "]", "(", ")", ")", ")", "\n", "", "print", "(", "'Epoch %-4d  Loss %.2f  %s'", "%", "(", "epoch", "+", "1", ",", "summary", "[", "'losses/xe'", "]", "(", ")", ",", "' '", ".", "join", "(", "to_print", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.lib.train.TrainableDAModule.train_step": [[46, 57], ["train.TrainableDAModule.train_op", "kv.items", "data.get", "jax.isnan", "summary.scalar", "jax.concatenate", "ValueError", "float"], "methods", ["None"], ["", "def", "train_step", "(", "self", ",", "summary", ",", "data", ",", "step", ")", ":", "\n", "        ", "kv", ",", "probe", "=", "self", ".", "train_op", "(", "step", ",", "\n", "data", "[", "'sx'", "]", "[", "'image'", "]", ",", "data", "[", "'sx'", "]", "[", "'label'", "]", ",", "\n", "data", "[", "'tx'", "]", "[", "'image'", "]", ",", "data", "[", "'tx'", "]", "[", "'label'", "]", ",", "data", ".", "get", "(", "'probe'", ")", ")", "\n", "if", "'probe_callback'", "in", "data", ":", "\n", "            ", "data", "[", "'probe_callback'", "]", "(", "jn", ".", "concatenate", "(", "probe", ")", ")", "\n", "", "for", "k", ",", "v", "in", "kv", ".", "items", "(", ")", ":", "\n", "            ", "v", "=", "v", "[", "0", "]", "\n", "if", "jn", ".", "isnan", "(", "v", ")", ":", "\n", "                ", "raise", "ValueError", "(", "'NaN'", ",", "k", ")", "\n", "", "summary", ".", "scalar", "(", "k", ",", "float", "(", "v", ")", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.google-research_adamatch.semi_supervised.noisy_student.NoisyStudent.__init__": [[40, 84], ["semi_supervised.lib.train.TrainableSSLModule.__init__", "model", "objax.optimizer.ExponentialMovingAverageModule", "absl.flags.FLAGS.arch.endswith", "noisy_student.NoisyStudent.model.vars", "objax.optimizer.Momentum", "shared.train.ScheduleCos", "objax.Function.with_vars", "objax.GradValues", "objax.Function.with_vars", "shared.util.MyParallel", "shared.util.MyParallel", "objax.Jit", "noisy_student.NoisyStudent.model_ema.update_ema", "objax.functional.softmax", "noisy_student.NoisyStudent.model_ema.vars", "noisy_student.NoisyStudent.model", "noisy_student.NoisyStudent.lr", "objax.GradValues.", "noisy_student.NoisyStudent.opt", "noisy_student.NoisyStudent.model_ema.update_ema", "noisy_student.NoisyStudent.vars", "noisy_student.NoisyStudent.model_ema", "x.reshape", "sum", "noisy_student.NoisyStudent.__init__.eval_op"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.baseline.Baseline.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nclass", ":", "int", ",", "model", ":", "Callable", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "nclass", ",", "kwargs", ")", "\n", "self", ".", "model", ":", "objax", ".", "Module", "=", "model", "(", "colors", "=", "3", ",", "nclass", "=", "nclass", ",", "**", "kwargs", ")", "\n", "self", ".", "model_ema", "=", "objax", ".", "optimizer", ".", "ExponentialMovingAverageModule", "(", "self", ".", "model", ",", "momentum", "=", "0.999", ")", "\n", "if", "FLAGS", ".", "arch", ".", "endswith", "(", "'pretrain'", ")", ":", "\n", "# Initialize weights of EMA with pretrained model's weights.", "\n", "            ", "self", ".", "model_ema", ".", "ema", ".", "momentum", "=", "0", "\n", "self", ".", "model_ema", ".", "update_ema", "(", ")", "\n", "self", ".", "model_ema", ".", "ema", ".", "momentum", "=", "0.999", "\n", "", "train_vars", "=", "self", ".", "model", ".", "vars", "(", ")", "\n", "self", ".", "opt", "=", "objax", ".", "optimizer", ".", "Momentum", "(", "train_vars", ")", "\n", "self", ".", "lr", "=", "ScheduleCos", "(", "self", ".", "params", ".", "lr", ",", "self", ".", "params", ".", "lr_decay", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "model_ema", ".", "vars", "(", ")", ")", "\n", "def", "eval_op", "(", "x", ":", "JaxArray", ")", "->", "JaxArray", ":", "\n", "            ", "return", "objax", ".", "functional", ".", "softmax", "(", "self", ".", "model_ema", "(", "x", ",", "training", "=", "False", ")", ")", "\n", "\n", "", "def", "loss_function", "(", "x", ",", "y", ")", ":", "\n", "            ", "c", ",", "h", ",", "w", "=", "x", ".", "shape", "[", "-", "3", ":", "]", "\n", "logit_x", "=", "self", ".", "model", "(", "x", ".", "reshape", "(", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", ")", ",", "training", "=", "True", ")", "\n", "logit_x_weak", ",", "logit_x_strong", "=", "logit_x", "[", ":", ":", "2", "]", ",", "logit_x", "[", "1", ":", ":", "2", "]", "\n", "xe", "=", "0.5", "*", "(", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_x_weak", ",", "y", ")", ".", "mean", "(", ")", "+", "\n", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_x_strong", ",", "y", ")", ".", "mean", "(", ")", ")", "\n", "wd", "=", "0.5", "*", "sum", "(", "(", "v", ".", "value", "**", "2", ")", ".", "sum", "(", ")", "for", "k", ",", "v", "in", "train_vars", ".", "items", "(", ")", "if", "k", ".", "endswith", "(", "'.w'", ")", ")", "\n", "\n", "loss", "=", "xe", "+", "self", ".", "params", ".", "wd", "*", "wd", "\n", "return", "loss", ",", "{", "'losses/xe'", ":", "xe", ",", "'losses/wd'", ":", "wd", "}", "\n", "\n", "", "gv", "=", "objax", ".", "GradValues", "(", "loss_function", ",", "train_vars", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "vars", "(", ")", ")", "\n", "def", "train_op", "(", "step", ",", "x", ",", "y", ",", "u", ",", "probe", "=", "None", ")", ":", "\n", "            ", "y_probe", "=", "eval_op", "(", "probe", ")", "if", "probe", "is", "not", "None", "else", "None", "\n", "p", "=", "step", "/", "(", "FLAGS", ".", "train_mimg", "<<", "20", ")", "\n", "lr", "=", "self", ".", "lr", "(", "p", ")", "\n", "g", ",", "v", "=", "gv", "(", "x", ",", "y", ")", "\n", "self", ".", "opt", "(", "lr", ",", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "g", ")", ")", "\n", "self", ".", "model_ema", ".", "update_ema", "(", ")", "\n", "return", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "{", "'monitors/lr'", ":", "lr", ",", "**", "v", "[", "1", "]", "}", ")", ",", "y_probe", "\n", "\n", "", "self", ".", "train_op", "=", "MyParallel", "(", "train_op", ",", "reduce", "=", "lambda", "x", ":", "x", ")", "\n", "self", ".", "eval_op", "=", "MyParallel", "(", "eval_op", ")", "\n", "# jit eval op used only for saving prediction files, avoids batch padding", "\n", "self", ".", "eval_op_jit", "=", "objax", ".", "Jit", "(", "eval_op", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.semi_supervised.noisy_student.PseudoLabeler.__init__": [[87, 93], ["open", "numpy.load", "noisy_student.PseudoLabeler.pseudo_label.max"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data", ":", "AugmentPoolBase", ",", "pseudo_label_file", ":", "str", ",", "threshold", ":", "float", ",", "uratio", ":", "float", "=", "1", ")", ":", "\n", "        ", "with", "open", "(", "pseudo_label_file", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "self", ".", "pseudo_label", "=", "np", ".", "load", "(", "f", ")", "\n", "", "self", ".", "has_pseudo_label", "=", "self", ".", "pseudo_label", ".", "max", "(", "axis", "=", "1", ")", ">", "threshold", "\n", "self", ".", "data", "=", "data", "\n", "self", ".", "uratio", "=", "uratio", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.semi_supervised.noisy_student.PseudoLabeler.stop": [[94, 96], ["noisy_student.PseudoLabeler.data.stop"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.noisy_student.PseudoLabeler.stop"], ["", "def", "stop", "(", "self", ")", ":", "\n", "        ", "self", ".", "data", ".", "stop", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.semi_supervised.noisy_student.PseudoLabeler.__iter__": [[97, 114], ["enumerate", "enumerate", "numpy.random.shuffle", "batch.append", "len", "dict", "dict", "batch.append", "dict", "numpy.stack", "numpy.stack", "numpy.stack"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", "->", "dict", ":", "\n", "        ", "batch", "=", "[", "]", "\n", "batch_size", "=", "None", "\n", "for", "d", "in", "self", ".", "data", ":", "\n", "            ", "batch_size", "=", "batch_size", "or", "d", "[", "'x'", "]", "[", "'image'", "]", ".", "shape", "[", "0", "]", "\n", "for", "p", ",", "index", "in", "enumerate", "(", "d", "[", "'x'", "]", "[", "'index'", "]", ")", ":", "\n", "                ", "batch", ".", "append", "(", "dict", "(", "index", "=", "index", ",", "label", "=", "d", "[", "'x'", "]", "[", "'label'", "]", "[", "p", "]", ",", "image", "=", "d", "[", "'x'", "]", "[", "'image'", "]", "[", "p", "]", ")", ")", "\n", "", "for", "p", ",", "index", "in", "enumerate", "(", "d", "[", "'u'", "]", "[", "'index'", "]", ")", ":", "\n", "                ", "if", "self", ".", "has_pseudo_label", "[", "index", "]", ":", "\n", "                    ", "batch", ".", "append", "(", "dict", "(", "index", "=", "index", ",", "label", "=", "self", ".", "pseudo_label", "[", "index", "]", ",", "image", "=", "d", "[", "'u'", "]", "[", "'image'", "]", "[", "p", "]", ")", ")", "\n", "", "", "np", ".", "random", ".", "shuffle", "(", "batch", ")", "\n", "while", "len", "(", "batch", ")", ">=", "batch_size", ":", "\n", "                ", "current_batch", ",", "batch", "=", "batch", "[", ":", "batch_size", "]", ",", "batch", "[", "batch_size", ":", "]", "\n", "d", "[", "'x'", "]", "=", "dict", "(", "image", "=", "np", ".", "stack", "(", "[", "x", "[", "'image'", "]", "for", "x", "in", "current_batch", "]", ")", ",", "\n", "label", "=", "np", ".", "stack", "(", "[", "x", "[", "'label'", "]", "for", "x", "in", "current_batch", "]", ")", ",", "\n", "index", "=", "np", ".", "stack", "(", "[", "x", "[", "'index'", "]", "for", "x", "in", "current_batch", "]", ")", ")", "\n", "yield", "d", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.semi_supervised.noisy_student.main": [[116, 170], ["print", "print", "shared.util.setup_tf", "shared.data.ssl.DataSetSSL.parse_name", "noisy_student.NoisyStudent", "os.path.join", "os.path.join", "enumerate", "absl.flags.FLAGS.augment.startswith", "NoisyStudent.train", "tqdm.tqdm", "numpy.concatenate", "print", "semi_supervised.lib.data.CTAData.stop", "objax.util.multi_host_barrier", "shared.zoo.models.network", "sorted", "os.path.join", "os.path.join", "print", "os.path.exists", "test.update", "semi_supervised.lib.data.MixData", "absl.flags.FLAGS.augment.startswith", "noisy_student.PseudoLabeler", "unlabeled.train.parse().batch().nchw", "np.concatenate.append", "open", "numpy.save", "shared.data.ssl.DATASETS", "shared.data.fsl.DATASETS", "semi_supervised.lib.data.CTAData", "ValueError", "NoisyStudent.eval_op_jit", "jax.host_id", "jax.host_count", "unlabeled.train.parse().batch", "batch[]._numpy", "str", "NoisyStudent.params.items", "v.parse().batch().nchw().map().prefetch", "testset.items", "jax.devices", "unlabeled.train.parse", "v.parse().batch().nchw().map", "v.parse().batch().nchw", "v.parse().batch", "v.parse"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.shared.util.setup_tf", "home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.DataSetSSL.parse_name", "home.repos.pwc.inspect_result.google-research_adamatch.shared.train.TrainableModule.train", "home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.noisy_student.PseudoLabeler.stop", "home.repos.pwc.inspect_result.google-research_adamatch.zoo.models.network", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.nchw", "home.repos.pwc.inspect_result.google-research_adamatch.debug.show_images.save", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.parse", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.nchw", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.parse"], ["", "", "", "", "def", "main", "(", "argv", ")", ":", "\n", "    ", "del", "argv", "\n", "assert", "FLAGS", ".", "id", ",", "f'You must specify a --id for the run'", "\n", "print", "(", "'JAX host: %d / %d'", "%", "(", "jax", ".", "host_id", "(", ")", ",", "jax", ".", "host_count", "(", ")", ")", ")", "\n", "print", "(", "'JAX devices:\\n%s'", "%", "'\\n'", ".", "join", "(", "str", "(", "d", ")", "for", "d", "in", "jax", ".", "devices", "(", ")", ")", ",", "flush", "=", "True", ")", "\n", "setup_tf", "(", ")", "\n", "dataset_name", ",", "samples_per_class", ",", "dataset_seed", "=", "DataSetSSL", ".", "parse_name", "(", "f'{FLAGS.dataset}'", ")", "\n", "labeled", "=", "SSL_DATASETS", "(", ")", "[", "dataset_name", "]", "(", "samples_per_class", ",", "dataset_seed", ")", "\n", "unlabeled", "=", "FSL_DATASETS", "(", ")", "[", "f'{dataset_name}-0'", "]", "(", ")", "\n", "testsets", "=", "[", "unlabeled", ".", "test", "]", "\n", "module", "=", "NoisyStudent", "(", "labeled", ".", "nclass", ",", "network", "(", "FLAGS", ".", "arch", ")", ",", "\n", "lr", "=", "FLAGS", ".", "lr", ",", "\n", "lr_decay", "=", "FLAGS", ".", "lr_decay", ",", "\n", "wd", "=", "FLAGS", ".", "wd", ",", "\n", "arch", "=", "FLAGS", ".", "arch", ",", "\n", "batch", "=", "FLAGS", ".", "batch", ",", "\n", "uratio", "=", "FLAGS", ".", "uratio", ")", "\n", "logdir", "=", "f'SSL/{FLAGS.dataset}/{FLAGS.augment}/{module.__class__.__name__}/'", "\n", "logdir", "+=", "'_'", ".", "join", "(", "sorted", "(", "'%s%s'", "%", "k", "for", "k", "in", "module", ".", "params", ".", "items", "(", ")", ")", ")", "\n", "if", "FLAGS", ".", "teacher_id", "!=", "''", ":", "\n", "      ", "pseudo_label_logdir", "=", "os", ".", "path", ".", "join", "(", "FLAGS", ".", "logdir", ",", "logdir", ",", "FLAGS", ".", "teacher_id", ")", "\n", "pseudo_label_file", "=", "os", ".", "path", ".", "join", "(", "pseudo_label_logdir", ",", "'predictions.npy'", ")", "\n", "print", "(", "'Using pseudo label file '", ",", "pseudo_label_file", ")", "\n", "", "else", ":", "\n", "      ", "pseudo_label_file", "=", "FLAGS", ".", "pseudo_label_file", "\n", "", "logdir", "=", "os", ".", "path", ".", "join", "(", "FLAGS", ".", "logdir", ",", "logdir", ",", "FLAGS", ".", "id", ")", "\n", "prediction_file", "=", "os", ".", "path", ".", "join", "(", "logdir", ",", "'predictions.npy'", ")", "\n", "assert", "not", "os", ".", "path", ".", "exists", "(", "prediction_file", ")", ",", "f'The prediction file \"{prediction_file}\" already exists, '", "f'remove it if you want to overwrite it.'", "\n", "\n", "test", "=", "{", "}", "\n", "for", "domain", ",", "testset", "in", "enumerate", "(", "testsets", ")", ":", "\n", "        ", "test", ".", "update", "(", "(", "k", ",", "v", ".", "parse", "(", ")", ".", "batch", "(", "FLAGS", ".", "batch", ")", ".", "nchw", "(", ")", ".", "map", "(", "\n", "lambda", "d", ":", "{", "**", "d", ",", "'domain'", ":", "domain", "}", ")", ".", "prefetch", "(", "16", ")", ")", "\n", "for", "k", ",", "v", "in", "testset", ".", "items", "(", ")", ")", "\n", "", "if", "FLAGS", ".", "augment", ".", "startswith", "(", "'('", ")", ":", "\n", "        ", "train", "=", "MixData", "(", "labeled", ".", "train", ",", "unlabeled", ".", "train", ",", "labeled", ".", "nclass", ",", "FLAGS", ".", "batch", ",", "FLAGS", ".", "uratio", ")", "\n", "", "elif", "FLAGS", ".", "augment", ".", "startswith", "(", "'CTA('", ")", ":", "\n", "        ", "train", "=", "CTAData", "(", "labeled", ".", "train", ",", "unlabeled", ".", "train", ",", "labeled", ".", "nclass", ",", "FLAGS", ".", "batch", ",", "FLAGS", ".", "uratio", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "f'Augment flag value {FLAGS.augment} not supported.'", ")", "\n", "", "if", "pseudo_label_file", "!=", "''", ":", "\n", "        ", "train", "=", "PseudoLabeler", "(", "train", ",", "pseudo_label_file", ",", "FLAGS", ".", "pseudo_label_th", ",", "FLAGS", ".", "uratio", ")", "\n", "", "module", ".", "train", "(", "FLAGS", ".", "train_mimg", "<<", "10", ",", "FLAGS", ".", "report_kimg", ",", "train", ",", "test", ",", "logdir", ",", "FLAGS", ".", "keep_ckpts", ")", "\n", "predictions", "=", "[", "]", "\n", "for", "batch", "in", "tqdm", "(", "unlabeled", ".", "train", ".", "parse", "(", ")", ".", "batch", "(", "FLAGS", ".", "batch", ")", ".", "nchw", "(", ")", ",", "\n", "desc", "=", "f'Evaluating unlabeled data'", ",", "leave", "=", "False", ")", ":", "\n", "        ", "predictions", ".", "append", "(", "module", ".", "eval_op_jit", "(", "batch", "[", "'image'", "]", ".", "_numpy", "(", ")", ")", ")", "\n", "", "predictions", "=", "np", ".", "concatenate", "(", "predictions", ")", "\n", "with", "open", "(", "prediction_file", ",", "'wb'", ")", "as", "f", ":", "\n", "        ", "np", ".", "save", "(", "f", ",", "predictions", ")", "\n", "", "print", "(", "'Saved target predictions to'", ",", "prediction_file", ")", "\n", "train", ".", "stop", "(", ")", "\n", "objax", ".", "util", ".", "multi_host_barrier", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.semi_supervised.fixmatch_da.FixMatchDA.__init__": [[37, 101], ["semi_supervised.lib.train.TrainableSSLModule.__init__", "model", "objax.optimizer.ExponentialMovingAverageModule", "absl.flags.FLAGS.arch.endswith", "objax.Module", "objax.nn.ExponentialMovingAverage", "objax.nn.MovingAverage", "objax.optimizer.Momentum", "shared.train.ScheduleCos", "objax.Function.with_vars", "objax.GradValues", "objax.Function.with_vars", "shared.util.MyParallel", "shared.util.MyParallel", "fixmatch_da.FixMatchDA.model_ema.update_ema", "fixmatch_da.FixMatchDA.model.vars", "fixmatch_da.FixMatchDA.stats.vars", "objax.functional.softmax", "fixmatch_da.FixMatchDA.model_ema.vars", "jax.concatenate().reshape", "jax.concatenate().reshape", "fixmatch_da.FixMatchDA.model", "objax.functional.softmax", "fixmatch_da.FixMatchDA.stats.p_data", "fixmatch_da.FixMatchDA.stats.p_model", "objax.functional.stop_gradient", "objax.functional.loss.cross_entropy_logits().mean", "objax.functional.loss.cross_entropy_logits_sparse", "fixmatch_da.FixMatchDA.lr", "objax.GradValues.", "fixmatch_da.FixMatchDA.opt", "fixmatch_da.FixMatchDA.model_ema.update_ema", "fixmatch_da.FixMatchDA.vars", "fixmatch_da.FixMatchDA.model_ema", "y.mean", "objax.functional.stop_gradient.mean", "objax.functional.stop_gradient.argmax", "sum", "fixmatch_da.FixMatchDA.__init__.eval_op"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.baseline.Baseline.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nclass", ":", "int", ",", "model", ":", "Callable", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "nclass", ",", "kwargs", ")", "\n", "self", ".", "model", ":", "objax", ".", "Module", "=", "model", "(", "colors", "=", "3", ",", "nclass", "=", "nclass", ",", "**", "kwargs", ")", "\n", "self", ".", "model_ema", "=", "objax", ".", "optimizer", ".", "ExponentialMovingAverageModule", "(", "self", ".", "model", ",", "momentum", "=", "0.999", ")", "\n", "if", "FLAGS", ".", "arch", ".", "endswith", "(", "'pretrain'", ")", ":", "\n", "# Initialize weights of EMA with pretrained model's weights.", "\n", "            ", "self", ".", "model_ema", ".", "ema", ".", "momentum", "=", "0", "\n", "self", ".", "model_ema", ".", "update_ema", "(", ")", "\n", "self", ".", "model_ema", ".", "ema", ".", "momentum", "=", "0.999", "\n", "", "self", ".", "stats", "=", "objax", ".", "Module", "(", ")", "\n", "self", ".", "stats", ".", "p_data", "=", "objax", ".", "nn", ".", "ExponentialMovingAverage", "(", "(", "nclass", ",", ")", ",", "init_value", "=", "1", "/", "nclass", ")", "\n", "self", ".", "stats", ".", "p_model", "=", "objax", ".", "nn", ".", "MovingAverage", "(", "(", "nclass", ",", ")", ",", "buffer_size", "=", "128", ",", "init_value", "=", "1", "/", "nclass", ")", "\n", "train_vars", "=", "self", ".", "model", ".", "vars", "(", ")", "+", "self", ".", "stats", ".", "vars", "(", ")", "\n", "self", ".", "opt", "=", "objax", ".", "optimizer", ".", "Momentum", "(", "train_vars", ")", "\n", "self", ".", "lr", "=", "ScheduleCos", "(", "self", ".", "params", ".", "lr", ",", "self", ".", "params", ".", "lr_decay", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "model_ema", ".", "vars", "(", ")", ")", "\n", "def", "eval_op", "(", "x", ":", "JaxArray", ")", "->", "JaxArray", ":", "\n", "            ", "return", "objax", ".", "functional", ".", "softmax", "(", "self", ".", "model_ema", "(", "x", ",", "training", "=", "False", ")", ")", "\n", "\n", "", "def", "loss_function", "(", "x", ",", "y", ",", "u", ")", ":", "\n", "            ", "c", ",", "h", ",", "w", "=", "x", ".", "shape", "[", "-", "3", ":", "]", "\n", "xu", "=", "jn", ".", "concatenate", "(", "(", "x", ",", "u", ")", ")", ".", "reshape", "(", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", ")", "\n", "logit", "=", "self", ".", "model", "(", "xu", ",", "training", "=", "True", ")", "\n", "logit_x_weak", "=", "logit", "[", ":", "2", "*", "x", ".", "shape", "[", "0", "]", ":", "2", "]", "\n", "logit_weak", ",", "logit_strong", "=", "logit", "[", ":", ":", "2", "]", ",", "logit", "[", "1", ":", ":", "2", "]", "\n", "\n", "\n", "confidence_ratio", "=", "self", ".", "params", ".", "confidence", "\n", "\n", "pseudo_labels", "=", "objax", ".", "functional", ".", "softmax", "(", "logit_weak", ")", "\n", "p_data", "=", "self", ".", "stats", ".", "p_data", "(", "y", ".", "mean", "(", "0", ")", ")", "\n", "p_model", "=", "self", ".", "stats", ".", "p_model", "(", "pseudo_labels", ".", "mean", "(", "0", ")", ")", "\n", "pseudo_labels", "*=", "(", "1e-6", "+", "p_data", ")", "/", "(", "1e-6", "+", "p_model", ")", "\n", "pseudo_labels", "=", "stop_gradient", "(", "pseudo_labels", "/", "pseudo_labels", ".", "sum", "(", "1", ",", "keepdims", "=", "True", ")", ")", "\n", "pseudo_mask", "=", "(", "pseudo_labels", ".", "max", "(", "axis", "=", "1", ")", ">=", "confidence_ratio", ")", ".", "astype", "(", "pseudo_labels", ".", "dtype", ")", "\n", "\n", "xe", "=", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_x_weak", ",", "y", ")", ".", "mean", "(", ")", "\n", "xeu", "=", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits_sparse", "(", "logit_strong", ",", "pseudo_labels", ".", "argmax", "(", "axis", "=", "1", ")", ")", "\n", "xeu", "=", "(", "xeu", "*", "pseudo_mask", ")", ".", "mean", "(", ")", "\n", "wd", "=", "0.5", "*", "sum", "(", "(", "v", ".", "value", "**", "2", ")", ".", "sum", "(", ")", "for", "k", ",", "v", "in", "train_vars", ".", "items", "(", ")", "if", "k", ".", "endswith", "(", "'.w'", ")", ")", "\n", "\n", "loss", "=", "xe", "+", "self", ".", "params", ".", "wu", "*", "xeu", "+", "self", ".", "params", ".", "wd", "*", "wd", "\n", "return", "loss", ",", "{", "'losses/xe'", ":", "xe", ",", "\n", "'losses/xeu'", ":", "xeu", ",", "\n", "'losses/wd'", ":", "wd", ",", "\n", "'monitors/confidence_ratio'", ":", "confidence_ratio", ",", "\n", "'monitors/mask'", ":", "pseudo_mask", ".", "mean", "(", ")", ",", "\n", "'monitors/klmodel'", ":", "objax", ".", "functional", ".", "divergence", ".", "kl", "(", "p_data", ",", "p_model", ")", "}", "\n", "\n", "", "gv", "=", "objax", ".", "GradValues", "(", "loss_function", ",", "train_vars", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "vars", "(", ")", ")", "\n", "def", "train_op", "(", "step", ",", "x", ",", "y", ",", "u", ",", "probe", "=", "None", ")", ":", "\n", "            ", "y_probe", "=", "eval_op", "(", "probe", ")", "if", "probe", "is", "not", "None", "else", "None", "\n", "p", "=", "step", "/", "(", "FLAGS", ".", "train_mimg", "<<", "20", ")", "\n", "lr", "=", "self", ".", "lr", "(", "p", ")", "\n", "g", ",", "v", "=", "gv", "(", "x", ",", "y", ",", "u", ")", "\n", "self", ".", "opt", "(", "lr", ",", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "g", ")", ")", "\n", "self", ".", "model_ema", ".", "update_ema", "(", ")", "\n", "return", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "{", "'monitors/lr'", ":", "lr", ",", "**", "v", "[", "1", "]", "}", ")", ",", "y_probe", "\n", "\n", "", "self", ".", "train_op", "=", "MyParallel", "(", "train_op", ",", "reduce", "=", "lambda", "x", ":", "x", ")", "\n", "self", ".", "eval_op", "=", "MyParallel", "(", "eval_op", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.semi_supervised.fixmatch_da.main": [[103, 137], ["print", "print", "shared.util.setup_tf", "shared.data.ssl.DataSetSSL.parse_name", "fixmatch_da.FixMatchDA", "os.path.join", "enumerate", "absl.flags.FLAGS.augment.startswith", "FixMatchDA.train", "semi_supervised.lib.data.CTAData.stop", "objax.util.multi_host_barrier", "shared.zoo.models.network", "test.update", "semi_supervised.lib.data.MixData", "absl.flags.FLAGS.augment.startswith", "shared.data.ssl.DATASETS", "shared.data.fsl.DATASETS", "sorted", "semi_supervised.lib.data.CTAData", "ValueError", "jax.host_id", "jax.host_id", "jax.host_count", "jax.host_count", "str", "v.parse().batch().nchw().map().prefetch", "testset.items", "jax.devices", "jax.devices", "FixMatchDA.params.items", "v.parse().batch().nchw().map", "v.parse().batch().nchw", "v.parse().batch", "v.parse"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.shared.util.setup_tf", "home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.DataSetSSL.parse_name", "home.repos.pwc.inspect_result.google-research_adamatch.shared.train.TrainableModule.train", "home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.noisy_student.PseudoLabeler.stop", "home.repos.pwc.inspect_result.google-research_adamatch.zoo.models.network", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.nchw", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.parse"], ["", "", "def", "main", "(", "argv", ")", ":", "\n", "    ", "del", "argv", "\n", "print", "(", "'JAX host: %d / %d'", "%", "(", "jax", ".", "host_id", "(", ")", ",", "jax", ".", "host_count", "(", ")", ")", ")", "\n", "print", "(", "'JAX devices:\\n%s'", "%", "'\\n'", ".", "join", "(", "str", "(", "d", ")", "for", "d", "in", "jax", ".", "devices", "(", ")", ")", ",", "flush", "=", "True", ")", "\n", "setup_tf", "(", ")", "\n", "dataset_name", ",", "samples_per_class", ",", "dataset_seed", "=", "DataSetSSL", ".", "parse_name", "(", "f'{FLAGS.dataset}'", ")", "\n", "labeled", "=", "SSL_DATASETS", "(", ")", "[", "dataset_name", "]", "(", "samples_per_class", ",", "dataset_seed", ")", "\n", "unlabeled", "=", "FSL_DATASETS", "(", ")", "[", "f'{dataset_name}-0'", "]", "(", ")", "\n", "testsets", "=", "[", "unlabeled", ".", "test", "]", "\n", "module", "=", "FixMatchDA", "(", "labeled", ".", "nclass", ",", "network", "(", "FLAGS", ".", "arch", ")", ",", "\n", "lr", "=", "FLAGS", ".", "lr", ",", "\n", "lr_decay", "=", "FLAGS", ".", "lr_decay", ",", "\n", "wd", "=", "FLAGS", ".", "wd", ",", "\n", "arch", "=", "FLAGS", ".", "arch", ",", "\n", "batch", "=", "FLAGS", ".", "batch", ",", "\n", "wu", "=", "FLAGS", ".", "wu", ",", "\n", "confidence", "=", "FLAGS", ".", "confidence", ",", "\n", "uratio", "=", "FLAGS", ".", "uratio", ")", "\n", "logdir", "=", "f'SSL/{FLAGS.dataset}/{FLAGS.augment}/{module.__class__.__name__}/%s'", "%", "(", "\n", "'_'", ".", "join", "(", "sorted", "(", "'%s%s'", "%", "k", "for", "k", "in", "module", ".", "params", ".", "items", "(", ")", ")", ")", ")", "\n", "logdir", "=", "os", ".", "path", ".", "join", "(", "FLAGS", ".", "logdir", ",", "logdir", ")", "\n", "test", "=", "{", "}", "\n", "for", "domain", ",", "testset", "in", "enumerate", "(", "testsets", ")", ":", "\n", "        ", "test", ".", "update", "(", "(", "k", ",", "v", ".", "parse", "(", ")", ".", "batch", "(", "FLAGS", ".", "batch", ")", ".", "nchw", "(", ")", ".", "map", "(", "lambda", "d", ":", "{", "**", "d", ",", "'domain'", ":", "domain", "}", ")", ".", "prefetch", "(", "16", ")", ")", "\n", "for", "k", ",", "v", "in", "testset", ".", "items", "(", ")", ")", "\n", "", "if", "FLAGS", ".", "augment", ".", "startswith", "(", "'('", ")", ":", "\n", "        ", "train", "=", "MixData", "(", "labeled", ".", "train", ",", "unlabeled", ".", "train", ",", "labeled", ".", "nclass", ",", "FLAGS", ".", "batch", ",", "FLAGS", ".", "uratio", ")", "\n", "", "elif", "FLAGS", ".", "augment", ".", "startswith", "(", "'CTA('", ")", ":", "\n", "        ", "train", "=", "CTAData", "(", "labeled", ".", "train", ",", "unlabeled", ".", "train", ",", "labeled", ".", "nclass", ",", "FLAGS", ".", "batch", ",", "FLAGS", ".", "uratio", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "f'Augment flag value {FLAGS.augment} not supported.'", ")", "\n", "", "module", ".", "train", "(", "FLAGS", ".", "train_mimg", "<<", "10", ",", "FLAGS", ".", "report_kimg", ",", "train", ",", "test", ",", "logdir", ",", "FLAGS", ".", "keep_ckpts", ")", "\n", "train", ".", "stop", "(", ")", "\n", "objax", ".", "util", ".", "multi_host_barrier", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.semi_supervised.adamatch.AdaMatch.__init__": [[37, 114], ["semi_supervised.lib.train.TrainableSSLModule.__init__", "model", "objax.optimizer.ExponentialMovingAverageModule", "absl.flags.FLAGS.arch.endswith", "objax.Module", "objax.nn.ExponentialMovingAverage", "objax.nn.MovingAverage", "objax.optimizer.Momentum", "shared.train.ScheduleCosPhases", "shared.train.ScheduleCos", "objax.Function.with_vars", "objax.GradValues", "objax.Function.with_vars", "shared.util.MyParallel", "shared.util.MyParallel", "adamatch.AdaMatch.model_ema.update_ema", "adamatch.AdaMatch.model.vars", "adamatch.AdaMatch.stats.vars", "objax.functional.softmax", "adamatch.AdaMatch.model_ema.vars", "adamatch.AdaMatch.model.vars().tensors", "adamatch.AdaMatch.model", "adamatch.AdaMatch.model.vars().assign", "jax.concatenate().reshape", "jax.concatenate().reshape", "adamatch.AdaMatch.model", "jax.split", "jax.split", "objax.functional.softmax", "adamatch.AdaMatch.stats.p_labeled", "adamatch.AdaMatch.stats.p_unlabeled", "objax.functional.stop_gradient", "objax.functional.loss.cross_entropy_logits_sparse", "adamatch.AdaMatch.lr", "objax.GradValues.", "adamatch.AdaMatch.opt", "adamatch.AdaMatch.model_ema.update_ema", "adamatch.AdaMatch.vars", "adamatch.AdaMatch.model_ema", "sx.reshape", "objax.random.uniform", "objax.functional.softmax", "objax.functional.softmax().mean", "objax.functional.stop_gradient.mean", "objax.functional.stop_gradient.argmax", "sum", "adamatch.AdaMatch.__init__.eval_op"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.baseline.Baseline.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nclass", ":", "int", ",", "model", ":", "Callable", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "nclass", ",", "kwargs", ")", "\n", "self", ".", "model", ":", "objax", ".", "Module", "=", "model", "(", "colors", "=", "3", ",", "nclass", "=", "nclass", ",", "**", "kwargs", ")", "\n", "self", ".", "model_ema", "=", "objax", ".", "optimizer", ".", "ExponentialMovingAverageModule", "(", "self", ".", "model", ",", "momentum", "=", "0.999", ")", "\n", "if", "FLAGS", ".", "arch", ".", "endswith", "(", "'pretrain'", ")", ":", "\n", "# Initialize weights of EMA with pretrained model's weights.", "\n", "            ", "self", ".", "model_ema", ".", "ema", ".", "momentum", "=", "0", "\n", "self", ".", "model_ema", ".", "update_ema", "(", ")", "\n", "self", ".", "model_ema", ".", "ema", ".", "momentum", "=", "0.999", "\n", "", "self", ".", "stats", "=", "objax", ".", "Module", "(", ")", "\n", "self", ".", "stats", ".", "keygen", "=", "objax", ".", "random", ".", "DEFAULT_GENERATOR", "\n", "self", ".", "stats", ".", "p_labeled", "=", "objax", ".", "nn", ".", "ExponentialMovingAverage", "(", "(", "nclass", ",", ")", ",", "init_value", "=", "1", "/", "nclass", ")", "\n", "self", ".", "stats", ".", "p_unlabeled", "=", "objax", ".", "nn", ".", "MovingAverage", "(", "(", "nclass", ",", ")", ",", "buffer_size", "=", "128", ",", "init_value", "=", "1", "/", "nclass", ")", "\n", "train_vars", "=", "self", ".", "model", ".", "vars", "(", ")", "+", "self", ".", "stats", ".", "vars", "(", ")", "\n", "self", ".", "opt", "=", "objax", ".", "optimizer", ".", "Momentum", "(", "train_vars", ")", "\n", "self", ".", "wu", "=", "ScheduleCosPhases", "(", "1", ",", "[", "(", "0.5", ",", "1", ")", ",", "(", "1", ",", "self", ".", "params", ".", "wu", ")", "]", ",", "start_value", "=", "0", ")", "\n", "self", ".", "lr", "=", "ScheduleCos", "(", "self", ".", "params", ".", "lr", ",", "self", ".", "params", ".", "lr_decay", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "model_ema", ".", "vars", "(", ")", ")", "\n", "def", "eval_op", "(", "x", ":", "JaxArray", ")", "->", "JaxArray", ":", "\n", "            ", "return", "objax", ".", "functional", ".", "softmax", "(", "self", ".", "model_ema", "(", "x", ",", "training", "=", "False", ")", ")", "\n", "\n", "", "def", "loss_function", "(", "sx", ",", "sy", ",", "tu", ",", "progress", ")", ":", "\n", "            ", "c", ",", "h", ",", "w", "=", "sx", ".", "shape", "[", "-", "3", ":", "]", "\n", "saved_vars", "=", "self", ".", "model", ".", "vars", "(", ")", ".", "tensors", "(", ")", "\n", "logit_bn_x", "=", "self", ".", "model", "(", "sx", ".", "reshape", "(", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", ")", ",", "training", "=", "True", ")", "\n", "self", ".", "model", ".", "vars", "(", ")", ".", "assign", "(", "saved_vars", ")", "\n", "xu", "=", "jn", ".", "concatenate", "(", "(", "sx", ",", "tu", ")", ")", ".", "reshape", "(", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", ")", "\n", "logit", "=", "self", ".", "model", "(", "xu", ",", "training", "=", "True", ")", "\n", "logit_sx", ",", "logit_tu", "=", "jn", ".", "split", "(", "logit", ",", "(", "2", "*", "sx", ".", "shape", "[", "0", "]", ",", ")", ")", "\n", "logit_sx", "+=", "(", "logit_bn_x", "-", "logit_sx", ")", "*", "objax", ".", "random", ".", "uniform", "(", "logit_sx", ".", "shape", ")", "\n", "logit_sx_weak", ",", "logit_sx_strong", "=", "logit_sx", "[", ":", ":", "2", "]", ",", "logit_sx", "[", "1", ":", ":", "2", "]", "\n", "logit_tu_weak", ",", "logit_tu_strong", "=", "logit_tu", "[", ":", ":", "2", "]", ",", "logit_tu", "[", "1", ":", ":", "2", "]", "\n", "\n", "if", "self", ".", "params", ".", "use_cr", ":", "\n", "                ", "real_confidence", "=", "objax", ".", "functional", ".", "softmax", "(", "stop_gradient", "(", "logit_sx_weak", ")", ")", "\n", "confidence_ratio", "=", "real_confidence", ".", "max", "(", "1", ")", ".", "mean", "(", "0", ")", "*", "self", ".", "params", ".", "confidence", "\n", "", "else", ":", "\n", "                ", "confidence_ratio", "=", "self", ".", "params", ".", "confidence", "\n", "\n", "", "pseudo_labels", "=", "objax", ".", "functional", ".", "softmax", "(", "logit_tu_weak", ")", "\n", "p_labeled", "=", "self", ".", "stats", ".", "p_labeled", "(", "objax", ".", "functional", ".", "softmax", "(", "logit_sx_weak", ")", ".", "mean", "(", "0", ")", ")", "\n", "p_unlabeled", "=", "self", ".", "stats", ".", "p_unlabeled", "(", "pseudo_labels", ".", "mean", "(", "0", ")", ")", "\n", "pseudo_labels", "*=", "(", "1e-6", "+", "p_labeled", ")", "/", "(", "1e-6", "+", "p_unlabeled", ")", "\n", "pseudo_labels", "=", "stop_gradient", "(", "pseudo_labels", "/", "pseudo_labels", ".", "sum", "(", "1", ",", "keepdims", "=", "True", ")", ")", "\n", "pseudo_mask", "=", "(", "pseudo_labels", ".", "max", "(", "axis", "=", "1", ")", ">=", "confidence_ratio", ")", ".", "astype", "(", "pseudo_labels", ".", "dtype", ")", "\n", "\n", "xe", "=", "0.5", "*", "(", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_sx_weak", ",", "sy", ")", ".", "mean", "(", ")", "+", "\n", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_sx_strong", ",", "sy", ")", ".", "mean", "(", ")", ")", "\n", "xeu", "=", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits_sparse", "(", "logit_tu_strong", ",", "pseudo_labels", ".", "argmax", "(", "axis", "=", "1", ")", ")", "\n", "xeu", "=", "(", "xeu", "*", "pseudo_mask", ")", ".", "mean", "(", ")", "\n", "wd", "=", "0.5", "*", "sum", "(", "(", "v", ".", "value", "**", "2", ")", ".", "sum", "(", ")", "for", "k", ",", "v", "in", "train_vars", ".", "items", "(", ")", "if", "k", ".", "endswith", "(", "'.w'", ")", ")", "\n", "\n", "loss", "=", "xe", "+", "self", ".", "wu", "(", "progress", ")", "*", "xeu", "+", "self", ".", "params", ".", "wd", "*", "wd", "\n", "return", "loss", ",", "{", "'losses/xe'", ":", "xe", ",", "\n", "'losses/xeu'", ":", "xeu", ",", "\n", "'losses/wd'", ":", "wd", ",", "\n", "'losses/hregbn'", ":", "jn", ".", "square", "(", "logit_sx", "-", "logit_bn_x", ")", ".", "mean", "(", ")", ",", "\n", "'monitors/confidence_ratio'", ":", "confidence_ratio", ",", "\n", "'monitors/wu'", ":", "self", ".", "wu", "(", "progress", ")", ",", "\n", "'monitors/mask'", ":", "pseudo_mask", ".", "mean", "(", ")", ",", "\n", "'monitors/klmodel'", ":", "objax", ".", "functional", ".", "divergence", ".", "kl", "(", "p_labeled", ",", "p_unlabeled", ")", "}", "\n", "\n", "", "gv", "=", "objax", ".", "GradValues", "(", "loss_function", ",", "train_vars", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "vars", "(", ")", ")", "\n", "def", "train_op", "(", "step", ",", "x", ",", "y", ",", "u", ",", "probe", "=", "None", ")", ":", "\n", "            ", "y_probe", "=", "eval_op", "(", "probe", ")", "if", "probe", "is", "not", "None", "else", "None", "\n", "p", "=", "step", "/", "(", "FLAGS", ".", "train_mimg", "<<", "20", ")", "\n", "lr", "=", "self", ".", "lr", "(", "p", ")", "\n", "g", ",", "v", "=", "gv", "(", "x", ",", "y", ",", "u", ",", "p", ")", "\n", "self", ".", "opt", "(", "lr", ",", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "g", ")", ")", "\n", "self", ".", "model_ema", ".", "update_ema", "(", ")", "\n", "return", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "{", "'monitors/lr'", ":", "lr", ",", "**", "v", "[", "1", "]", "}", ")", ",", "y_probe", "\n", "\n", "", "self", ".", "train_op", "=", "MyParallel", "(", "train_op", ",", "reduce", "=", "lambda", "x", ":", "x", ")", "\n", "self", ".", "eval_op", "=", "MyParallel", "(", "eval_op", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.semi_supervised.adamatch.main": [[116, 151], ["print", "print", "shared.util.setup_tf", "shared.data.ssl.DataSetSSL.parse_name", "adamatch.AdaMatch", "os.path.join", "enumerate", "absl.flags.FLAGS.augment.startswith", "AdaMatch.train", "semi_supervised.lib.data.CTAData.stop", "objax.util.multi_host_barrier", "shared.zoo.models.network", "test.update", "semi_supervised.lib.data.MixData", "absl.flags.FLAGS.augment.startswith", "shared.data.ssl.DATASETS", "shared.data.fsl.DATASETS", "sorted", "semi_supervised.lib.data.CTAData", "ValueError", "jax.host_id", "jax.host_id", "jax.host_count", "jax.host_count", "str", "v.parse().batch().nchw().map().prefetch", "testset.items", "jax.devices", "jax.devices", "AdaMatch.params.items", "v.parse().batch().nchw().map", "v.parse().batch().nchw", "v.parse().batch", "v.parse"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.shared.util.setup_tf", "home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.DataSetSSL.parse_name", "home.repos.pwc.inspect_result.google-research_adamatch.shared.train.TrainableModule.train", "home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.noisy_student.PseudoLabeler.stop", "home.repos.pwc.inspect_result.google-research_adamatch.zoo.models.network", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.nchw", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.parse"], ["", "", "def", "main", "(", "argv", ")", ":", "\n", "    ", "del", "argv", "\n", "print", "(", "'JAX host: %d / %d'", "%", "(", "jax", ".", "host_id", "(", ")", ",", "jax", ".", "host_count", "(", ")", ")", ")", "\n", "print", "(", "'JAX devices:\\n%s'", "%", "'\\n'", ".", "join", "(", "str", "(", "d", ")", "for", "d", "in", "jax", ".", "devices", "(", ")", ")", ",", "flush", "=", "True", ")", "\n", "setup_tf", "(", ")", "\n", "dataset_name", ",", "samples_per_class", ",", "dataset_seed", "=", "DataSetSSL", ".", "parse_name", "(", "f'{FLAGS.dataset}'", ")", "\n", "labeled", "=", "SSL_DATASETS", "(", ")", "[", "dataset_name", "]", "(", "samples_per_class", ",", "dataset_seed", ")", "\n", "unlabeled", "=", "FSL_DATASETS", "(", ")", "[", "f'{dataset_name}-0'", "]", "(", ")", "\n", "testsets", "=", "[", "unlabeled", ".", "test", "]", "\n", "module", "=", "AdaMatch", "(", "labeled", ".", "nclass", ",", "network", "(", "FLAGS", ".", "arch", ")", ",", "\n", "lr", "=", "FLAGS", ".", "lr", ",", "\n", "lr_decay", "=", "FLAGS", ".", "lr_decay", ",", "\n", "wd", "=", "FLAGS", ".", "wd", ",", "\n", "arch", "=", "FLAGS", ".", "arch", ",", "\n", "batch", "=", "FLAGS", ".", "batch", ",", "\n", "wu", "=", "FLAGS", ".", "wu", ",", "\n", "confidence", "=", "FLAGS", ".", "confidence", ",", "\n", "use_cr", "=", "FLAGS", ".", "use_cr", ",", "\n", "uratio", "=", "FLAGS", ".", "uratio", ")", "\n", "logdir", "=", "f'SSL/{FLAGS.dataset}/{FLAGS.augment}/{module.__class__.__name__}/%s'", "%", "(", "\n", "'_'", ".", "join", "(", "sorted", "(", "'%s%s'", "%", "k", "for", "k", "in", "module", ".", "params", ".", "items", "(", ")", ")", ")", ")", "\n", "logdir", "=", "os", ".", "path", ".", "join", "(", "FLAGS", ".", "logdir", ",", "logdir", ")", "\n", "test", "=", "{", "}", "\n", "for", "domain", ",", "testset", "in", "enumerate", "(", "testsets", ")", ":", "\n", "        ", "test", ".", "update", "(", "(", "k", ",", "v", ".", "parse", "(", ")", ".", "batch", "(", "FLAGS", ".", "batch", ")", ".", "nchw", "(", ")", ".", "map", "(", "lambda", "d", ":", "{", "**", "d", ",", "'domain'", ":", "domain", "}", ")", ".", "prefetch", "(", "16", ")", ")", "\n", "for", "k", ",", "v", "in", "testset", ".", "items", "(", ")", ")", "\n", "", "if", "FLAGS", ".", "augment", ".", "startswith", "(", "'('", ")", ":", "\n", "        ", "train", "=", "MixData", "(", "labeled", ".", "train", ",", "unlabeled", ".", "train", ",", "labeled", ".", "nclass", ",", "FLAGS", ".", "batch", ",", "FLAGS", ".", "uratio", ")", "\n", "", "elif", "FLAGS", ".", "augment", ".", "startswith", "(", "'CTA('", ")", ":", "\n", "        ", "train", "=", "CTAData", "(", "labeled", ".", "train", ",", "unlabeled", ".", "train", ",", "labeled", ".", "nclass", ",", "FLAGS", ".", "batch", ",", "FLAGS", ".", "uratio", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "f'Augment flag value {FLAGS.augment} not supported.'", ")", "\n", "", "module", ".", "train", "(", "FLAGS", ".", "train_mimg", "<<", "10", ",", "FLAGS", ".", "report_kimg", ",", "train", ",", "test", ",", "logdir", ",", "FLAGS", ".", "keep_ckpts", ")", "\n", "train", ".", "stop", "(", ")", "\n", "objax", ".", "util", ".", "multi_host_barrier", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.semi_supervised.mcd.MCD.__init__": [[39, 110], ["semi_supervised.lib.train.TrainableSSLModule.__init__", "model", "objax.optimizer.ExponentialMovingAverageModule", "absl.flags.FLAGS.arch.endswith", "objax.nn.Linear", "objax.optimizer.Momentum", "objax.optimizer.Momentum", "objax.optimizer.Momentum", "shared.train.ScheduleCos", "objax.Function.with_vars", "objax.GradValues", "objax.GradValues", "objax.GradValues", "objax.Function.with_vars", "shared.util.MyParallel", "shared.util.MyParallel", "mcd.MCD.model_ema.update_ema", "mcd.MCD.gen.vars", "objax.functional.softmax", "mcd.MCD.model_ema.vars", "mcd.MCD.gen", "mcd.MCD.__init__.get_two_outputs"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.baseline.Baseline.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nclass", ":", "int", ",", "model", ":", "Callable", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "nclass", ",", "kwargs", ")", "\n", "self", ".", "model", ":", "objax", ".", "Module", "=", "model", "(", "colors", "=", "3", ",", "nclass", "=", "nclass", ",", "**", "kwargs", ")", "\n", "self", ".", "model_ema", "=", "objax", ".", "optimizer", ".", "ExponentialMovingAverageModule", "(", "self", ".", "model", ",", "momentum", "=", "0.999", ")", "\n", "if", "FLAGS", ".", "arch", ".", "endswith", "(", "'pretrain'", ")", ":", "\n", "# Initialize weights of EMA with pretrained model's weights.", "\n", "            ", "self", ".", "model_ema", ".", "ema", ".", "momentum", "=", "0", "\n", "self", ".", "model_ema", ".", "update_ema", "(", ")", "\n", "self", ".", "model_ema", ".", "ema", ".", "momentum", "=", "0.999", "\n", "", "self", ".", "c1", ":", "objax", ".", "Module", "=", "self", ".", "model", "[", "-", "1", "]", "\n", "self", ".", "c2", ":", "objax", ".", "Module", "=", "objax", ".", "nn", ".", "Linear", "(", "self", ".", "c1", ".", "w", ".", "value", ".", "shape", "[", "0", "]", ",", "nclass", ")", "\n", "self", ".", "gen", ":", "objax", ".", "Module", "=", "self", ".", "model", "[", ":", "-", "1", "]", "\n", "self", ".", "opt1", "=", "objax", ".", "optimizer", ".", "Momentum", "(", "self", ".", "gen", ".", "vars", "(", ")", "+", "self", ".", "c1", ".", "vars", "(", "'c1'", ")", "+", "self", ".", "c2", ".", "vars", "(", "'c2'", ")", ")", "\n", "self", ".", "opt2", "=", "objax", ".", "optimizer", ".", "Momentum", "(", "self", ".", "c1", ".", "vars", "(", "'c1'", ")", "+", "self", ".", "c2", ".", "vars", "(", "'c2'", ")", ")", "\n", "self", ".", "opt3", "=", "objax", ".", "optimizer", ".", "Momentum", "(", "self", ".", "gen", ".", "vars", "(", ")", ")", "\n", "self", ".", "lr", "=", "ScheduleCos", "(", "self", ".", "params", ".", "lr", ",", "self", ".", "params", ".", "lr_decay", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "model_ema", ".", "vars", "(", ")", ")", "\n", "def", "eval_op", "(", "x", ":", "JaxArray", ")", "->", "JaxArray", ":", "\n", "            ", "return", "objax", ".", "functional", ".", "softmax", "(", "self", ".", "model_ema", "(", "x", ",", "training", "=", "False", ")", ")", "\n", "\n", "", "def", "get_two_outputs", "(", "v", ")", ":", "\n", "            ", "feat", "=", "self", ".", "gen", "(", "v", ",", "training", "=", "True", ")", "\n", "return", "self", ".", "c1", "(", "feat", ")", ",", "self", ".", "c2", "(", "feat", ")", "\n", "\n", "", "def", "loss_function_phase1", "(", "x", ",", "y", ")", ":", "\n", "            ", "x1", ",", "x2", "=", "get_two_outputs", "(", "x", "[", ":", ",", "0", "]", ")", "\n", "xes", "=", "(", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "x1", ",", "y", ")", ".", "mean", "(", ")", "+", "\n", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "x2", ",", "y", ")", ".", "mean", "(", ")", ")", "\n", "return", "xes", ",", "{", "'losses/xe'", ":", "xes", "}", "\n", "\n", "", "def", "loss_function_phase2", "(", "x", ",", "u", ",", "y", ")", ":", "\n", "            ", "saved", "=", "self", ".", "gen", ".", "vars", "(", ")", ".", "tensors", "(", ")", "\n", "x1", ",", "x2", "=", "get_two_outputs", "(", "x", "[", ":", ",", "0", "]", ")", "\n", "u1", ",", "u2", "=", "get_two_outputs", "(", "u", "[", ":", ",", "0", "]", ")", "\n", "self", ".", "gen", ".", "vars", "(", ")", ".", "assign", "(", "saved", ")", "\n", "\n", "xes", "=", "(", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "x1", ",", "y", ")", ".", "mean", "(", ")", "+", "\n", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "x2", ",", "y", ")", ".", "mean", "(", ")", ")", "\n", "dis", "=", "jn", ".", "abs", "(", "softmax", "(", "u1", ")", "-", "softmax", "(", "u2", ")", ")", ".", "mean", "(", ")", "\n", "return", "xes", "-", "dis", ",", "{", "'losses/xe2'", ":", "xes", ",", "'losses/dis2'", ":", "dis", "}", "\n", "\n", "", "def", "loss_function_phase3", "(", "u", ")", ":", "\n", "            ", "u1", ",", "u2", "=", "get_two_outputs", "(", "u", "[", ":", ",", "0", "]", ")", "\n", "dis", "=", "jn", ".", "abs", "(", "softmax", "(", "u1", ")", "-", "softmax", "(", "u2", ")", ")", ".", "mean", "(", ")", "\n", "return", "dis", ",", "{", "'losses/dis3'", ":", "dis", "}", "\n", "\n", "", "gv1", "=", "objax", ".", "GradValues", "(", "loss_function_phase1", ",", "self", ".", "gen", ".", "vars", "(", ")", "+", "self", ".", "c1", ".", "vars", "(", "'c1'", ")", "+", "self", ".", "c2", ".", "vars", "(", "'c2'", ")", ")", "\n", "gv2", "=", "objax", ".", "GradValues", "(", "loss_function_phase2", ",", "self", ".", "c1", ".", "vars", "(", "'c1'", ")", "+", "self", ".", "c2", ".", "vars", "(", "'c2'", ")", ")", "\n", "gv3", "=", "objax", ".", "GradValues", "(", "loss_function_phase3", ",", "self", ".", "gen", ".", "vars", "(", ")", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "vars", "(", ")", ")", "\n", "def", "train_op", "(", "step", ",", "x", ",", "y", ",", "u", ",", "probe", "=", "None", ")", ":", "\n", "            ", "y_probe", "=", "eval_op", "(", "probe", ")", "if", "probe", "is", "not", "None", "else", "None", "\n", "p", "=", "step", "/", "(", "FLAGS", ".", "train_mimg", "<<", "20", ")", "\n", "lr", "=", "self", ".", "lr", "(", "p", ")", "\n", "g", ",", "v1", "=", "gv1", "(", "x", ",", "y", ")", "\n", "self", ".", "opt1", "(", "lr", ",", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "g", ")", ")", "\n", "g", ",", "v2", "=", "gv2", "(", "x", ",", "u", ",", "y", ")", "\n", "self", ".", "opt2", "(", "lr", ",", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "g", ")", ")", "\n", "v3", "=", "{", "}", "\n", "for", "_", "in", "range", "(", "self", ".", "params", ".", "wu", ")", ":", "\n", "                ", "g", ",", "v", "=", "gv3", "(", "u", ")", "\n", "for", "k", ",", "val", "in", "v", "[", "1", "]", ".", "items", "(", ")", ":", "\n", "                    ", "v3", "[", "k", "]", "=", "v3", ".", "get", "(", "k", ",", "0", ")", "+", "val", "/", "self", ".", "params", ".", "wu", "\n", "", "self", ".", "opt3", "(", "lr", ",", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "g", ")", ")", "\n", "", "self", ".", "model_ema", ".", "update_ema", "(", ")", "\n", "return", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "{", "'monitors/lr'", ":", "lr", ",", "**", "v1", "[", "1", "]", ",", "**", "v2", "[", "1", "]", ",", "**", "v", "[", "1", "]", "}", ")", ",", "y_probe", "\n", "\n", "", "self", ".", "train_op", "=", "MyParallel", "(", "train_op", ",", "reduce", "=", "lambda", "x", ":", "x", ")", "\n", "self", ".", "eval_op", "=", "MyParallel", "(", "eval_op", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.semi_supervised.mcd.main": [[112, 145], ["print", "print", "shared.util.setup_tf", "shared.data.ssl.DataSetSSL.parse_name", "mcd.MCD", "os.path.join", "enumerate", "absl.flags.FLAGS.augment.startswith", "MCD.train", "semi_supervised.lib.data.CTAData.stop", "objax.util.multi_host_barrier", "shared.zoo.models.network", "test.update", "semi_supervised.lib.data.MixData", "absl.flags.FLAGS.augment.startswith", "shared.data.ssl.DATASETS", "shared.data.fsl.DATASETS", "sorted", "semi_supervised.lib.data.CTAData", "ValueError", "jax.host_id", "jax.host_id", "jax.host_count", "jax.host_count", "str", "v.parse().batch().nchw().map().prefetch", "testset.items", "jax.devices", "jax.devices", "MCD.params.items", "v.parse().batch().nchw().map", "v.parse().batch().nchw", "v.parse().batch", "v.parse"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.shared.util.setup_tf", "home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.DataSetSSL.parse_name", "home.repos.pwc.inspect_result.google-research_adamatch.shared.train.TrainableModule.train", "home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.noisy_student.PseudoLabeler.stop", "home.repos.pwc.inspect_result.google-research_adamatch.zoo.models.network", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.nchw", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.parse"], ["", "", "def", "main", "(", "argv", ")", ":", "\n", "    ", "del", "argv", "\n", "print", "(", "'JAX host: %d / %d'", "%", "(", "jax", ".", "host_id", "(", ")", ",", "jax", ".", "host_count", "(", ")", ")", ")", "\n", "print", "(", "'JAX devices:\\n%s'", "%", "'\\n'", ".", "join", "(", "str", "(", "d", ")", "for", "d", "in", "jax", ".", "devices", "(", ")", ")", ",", "flush", "=", "True", ")", "\n", "setup_tf", "(", ")", "\n", "dataset_name", ",", "samples_per_class", ",", "dataset_seed", "=", "DataSetSSL", ".", "parse_name", "(", "f'{FLAGS.dataset}'", ")", "\n", "labeled", "=", "SSL_DATASETS", "(", ")", "[", "dataset_name", "]", "(", "samples_per_class", ",", "dataset_seed", ")", "\n", "unlabeled", "=", "FSL_DATASETS", "(", ")", "[", "f'{dataset_name}-0'", "]", "(", ")", "\n", "testsets", "=", "[", "unlabeled", ".", "test", "]", "\n", "module", "=", "MCD", "(", "labeled", ".", "nclass", ",", "network", "(", "FLAGS", ".", "arch", ")", ",", "\n", "lr", "=", "FLAGS", ".", "lr", ",", "\n", "lr_decay", "=", "FLAGS", ".", "lr_decay", ",", "\n", "wd", "=", "FLAGS", ".", "wd", ",", "\n", "arch", "=", "FLAGS", ".", "arch", ",", "\n", "batch", "=", "FLAGS", ".", "batch", ",", "\n", "wu", "=", "FLAGS", ".", "wu", ",", "\n", "uratio", "=", "FLAGS", ".", "uratio", ")", "\n", "logdir", "=", "f'SSL/{FLAGS.dataset}/{FLAGS.augment}/{module.__class__.__name__}/%s'", "%", "(", "\n", "'_'", ".", "join", "(", "sorted", "(", "'%s%s'", "%", "k", "for", "k", "in", "module", ".", "params", ".", "items", "(", ")", ")", ")", ")", "\n", "logdir", "=", "os", ".", "path", ".", "join", "(", "FLAGS", ".", "logdir", ",", "logdir", ")", "\n", "test", "=", "{", "}", "\n", "for", "domain", ",", "testset", "in", "enumerate", "(", "testsets", ")", ":", "\n", "            ", "test", ".", "update", "(", "(", "k", ",", "v", ".", "parse", "(", ")", ".", "batch", "(", "FLAGS", ".", "batch", ")", ".", "nchw", "(", ")", ".", "map", "(", "lambda", "d", ":", "{", "**", "d", ",", "'domain'", ":", "domain", "}", ")", ".", "prefetch", "(", "16", ")", ")", "\n", "for", "k", ",", "v", "in", "testset", ".", "items", "(", ")", ")", "\n", "", "if", "FLAGS", ".", "augment", ".", "startswith", "(", "'('", ")", ":", "\n", "        ", "train", "=", "MixData", "(", "labeled", ".", "train", ",", "unlabeled", ".", "train", ",", "labeled", ".", "nclass", ",", "FLAGS", ".", "batch", ",", "FLAGS", ".", "uratio", ")", "\n", "", "elif", "FLAGS", ".", "augment", ".", "startswith", "(", "'CTA('", ")", ":", "\n", "        ", "train", "=", "CTAData", "(", "labeled", ".", "train", ",", "unlabeled", ".", "train", ",", "labeled", ".", "nclass", ",", "FLAGS", ".", "batch", ",", "FLAGS", ".", "uratio", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "f'Augment flag value {FLAGS.augment} not supported.'", ")", "\n", "", "module", ".", "train", "(", "FLAGS", ".", "train_mimg", "<<", "10", ",", "FLAGS", ".", "report_kimg", ",", "train", ",", "test", ",", "logdir", ",", "FLAGS", ".", "keep_ckpts", ")", "\n", "train", ".", "stop", "(", ")", "\n", "objax", ".", "util", ".", "multi_host_barrier", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.semi_supervised.baseline.Baseline.__init__": [[38, 87], ["semi_supervised.lib.train.TrainableSSLModule.__init__", "model", "objax.optimizer.ExponentialMovingAverageModule", "absl.flags.FLAGS.arch.endswith", "objax.Module", "objax.nn.ExponentialMovingAverage", "objax.nn.MovingAverage", "objax.optimizer.Momentum", "shared.train.ScheduleCos", "objax.Function.with_vars", "objax.GradValues", "objax.Function.with_vars", "shared.util.MyParallel", "shared.util.MyParallel", "baseline.Baseline.model_ema.update_ema", "baseline.Baseline.model.vars", "baseline.Baseline.stats.vars", "objax.functional.softmax", "baseline.Baseline.model_ema.vars", "jax.concatenate().reshape", "jax.concatenate().reshape", "baseline.Baseline.model", "baseline.Baseline.lr", "objax.GradValues.", "baseline.Baseline.opt", "baseline.Baseline.model_ema.update_ema", "baseline.Baseline.vars", "baseline.Baseline.model_ema", "jax.split", "jax.split", "sum", "baseline.Baseline.__init__.eval_op"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.baseline.Baseline.__init__"], ["        ", "super", "(", ")", ".", "__init__", "(", "nclass", ",", "kwargs", ")", "\n", "self", ".", "model", ":", "objax", ".", "Module", "=", "model", "(", "colors", "=", "3", ",", "nclass", "=", "nclass", ",", "**", "kwargs", ")", "\n", "self", ".", "model_ema", "=", "objax", ".", "optimizer", ".", "ExponentialMovingAverageModule", "(", "self", ".", "model", ",", "momentum", "=", "0.999", ")", "\n", "train_vars", "=", "self", ".", "model", ".", "vars", "(", ")", "\n", "self", ".", "opt", "=", "objax", ".", "optimizer", ".", "Momentum", "(", "train_vars", ")", "\n", "self", ".", "lr", "=", "ScheduleCos", "(", "self", ".", "params", ".", "lr", ",", "self", ".", "params", ".", "lr_decay", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "model_ema", ".", "vars", "(", ")", ")", "\n", "def", "eval_op", "(", "x", ":", "JaxArray", ")", "->", "JaxArray", ":", "\n", "            ", "return", "objax", ".", "functional", ".", "softmax", "(", "self", ".", "model_ema", "(", "x", ",", "training", "=", "False", ")", ")", "\n", "\n", "", "def", "loss_function", "(", "sx", ",", "sy", ",", "tx", ",", "ty", ")", ":", "\n", "            ", "c", ",", "h", ",", "w", "=", "sx", ".", "shape", "[", "-", "3", ":", "]", "\n", "xu", "=", "jn", ".", "concatenate", "(", "(", "sx", ",", "tx", ")", ")", ".", "reshape", "(", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", ")", "\n", "logit", "=", "self", ".", "model", "(", "xu", ",", "training", "=", "True", ")", "\n", "logit_sx", ",", "logit_tx", "=", "jn", ".", "split", "(", "logit", ",", "(", "2", "*", "sx", ".", "shape", "[", "0", "]", ",", ")", ")", "\n", "logit_sx_weak", ",", "logit_sx_strong", "=", "logit_sx", "[", ":", ":", "2", "]", ",", "logit_sx", "[", "1", ":", ":", "2", "]", "\n", "logit_tx_weak", ",", "logit_tx_strong", "=", "logit_tx", "[", ":", ":", "2", "]", ",", "logit_tx", "[", "1", ":", ":", "2", "]", "\n", "\n", "xe", "=", "0.25", "*", "(", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_sx_weak", ",", "sy", ")", ".", "mean", "(", ")", "+", "\n", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_sx_strong", ",", "sy", ")", ".", "mean", "(", ")", "+", "\n", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_tx_weak", ",", "ty", ")", ".", "mean", "(", ")", "+", "\n", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_tx_strong", ",", "ty", ")", ".", "mean", "(", ")", ")", "\n", "wd", "=", "0.5", "*", "sum", "(", "(", "v", ".", "value", "**", "2", ")", ".", "sum", "(", ")", "for", "k", ",", "v", "in", "train_vars", ".", "items", "(", ")", "if", "k", ".", "endswith", "(", "'.w'", ")", ")", "\n", "\n", "loss", "=", "xe", "+", "self", ".", "params", ".", "wd", "*", "wd", "\n", "return", "loss", ",", "{", "'losses/xe'", ":", "xe", ",", "'losses/wd'", ":", "wd", "}", "\n", "\n", "", "gv", "=", "objax", ".", "GradValues", "(", "loss_function", ",", "train_vars", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "vars", "(", ")", ")", "\n", "def", "train_op", "(", "step", ",", "sx", ",", "sy", ",", "tx", ",", "ty", ",", "probe", "=", "None", ")", ":", "\n", "            ", "y_probe", "=", "eval_op", "(", "probe", ")", "if", "probe", "is", "not", "None", "else", "None", "\n", "p", "=", "step", "/", "(", "FLAGS", ".", "train_mimg", "<<", "20", ")", "\n", "lr", "=", "self", ".", "lr", "(", "p", ")", "\n", "g", ",", "v", "=", "gv", "(", "sx", ",", "sy", ",", "tx", ",", "ty", ")", "\n", "self", ".", "opt", "(", "lr", ",", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "g", ")", ")", "\n", "self", ".", "model_ema", ".", "update_ema", "(", ")", "\n", "return", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "{", "'monitors/lr'", ":", "lr", ",", "**", "v", "[", "1", "]", "}", ")", ",", "y_probe", "\n", "\n", "", "self", ".", "train_op", "=", "MyParallel", "(", "train_op", ",", "reduce", "=", "lambda", "x", ":", "x", ")", "\n", "self", ".", "eval_op", "=", "MyParallel", "(", "eval_op", ")", "\n", "\n", "\n", "", "", "def", "main", "(", "argv", ")", ":", "\n", "    ", "del", "argv", "\n", "print", "(", "'JAX host: %d / %d'", "%", "(", "jax", ".", "host_id", "(", ")", ",", "jax", ".", "host_count", "(", ")", ")", ")", "\n", "print", "(", "'JAX devices:\\n%s'", "%", "'\\n'", ".", "join", "(", "str", "(", "d", ")", "for", "d", "in", "jax", ".", "devices", "(", ")", ")", ",", "flush", "=", "True", ")", "\n", "setup_tf", "(", ")", "\n", "# In fully supervised, source and target are both labeled, we just kept the same names to reuse the code.", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.semi_supervised.baseline.main": [[89, 121], ["print", "print", "shared.util.setup_tf", "shared.data.ssl.DataSetSSL.parse_name", "baseline.Baseline", "os.path.join", "enumerate", "absl.flags.FLAGS.augment.startswith", "Baseline.train", "semi_supervised.lib.data.CTAData.stop", "objax.util.multi_host_barrier", "shared.zoo.models.network", "test.update", "semi_supervised.lib.data.MixData", "absl.flags.FLAGS.augment.startswith", "shared.data.ssl.DATASETS", "shared.data.fsl.DATASETS", "sorted", "semi_supervised.lib.data.CTAData", "ValueError", "jax.host_id", "jax.host_id", "jax.host_count", "jax.host_count", "str", "v.parse().batch().nchw().map().prefetch", "testset.items", "jax.devices", "jax.devices", "Baseline.params.items", "v.parse().batch().nchw().map", "v.parse().batch().nchw", "v.parse().batch", "v.parse"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.shared.util.setup_tf", "home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.DataSetSSL.parse_name", "home.repos.pwc.inspect_result.google-research_adamatch.shared.train.TrainableModule.train", "home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.noisy_student.PseudoLabeler.stop", "home.repos.pwc.inspect_result.google-research_adamatch.zoo.models.network", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.nchw", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.parse"], ["        ", "FLAGS", ".", "target", "=", "FLAGS", ".", "source", "\n", "", "source", "=", "FSL_DATASETS", "(", ")", "[", "f'{FLAGS.dataset}_{FLAGS.source}-0'", "]", "(", ")", "\n", "target", "=", "FSL_DATASETS", "(", ")", "[", "f'{FLAGS.dataset}_{FLAGS.target}-0'", "]", "(", ")", "\n", "module", "=", "Baseline", "(", "source", ".", "nclass", ",", "network", "(", "FLAGS", ".", "arch", ")", ",", "\n", "lr", "=", "FLAGS", ".", "lr", ",", "\n", "lr_decay", "=", "FLAGS", ".", "lr_decay", ",", "\n", "wd", "=", "FLAGS", ".", "wd", ",", "\n", "arch", "=", "FLAGS", ".", "arch", ",", "\n", "batch", "=", "FLAGS", ".", "batch", ")", "\n", "logdir", "=", "f'FSL/{FLAGS.dataset}/{FLAGS.source}/{FLAGS.target}/{FLAGS.augment}/{module.__class__.__name__}/%s'", "%", "(", "\n", "'_'", ".", "join", "(", "sorted", "(", "'%s%s'", "%", "k", "for", "k", "in", "module", ".", "params", ".", "items", "(", ")", ")", ")", ")", "\n", "logdir", "=", "os", ".", "path", ".", "join", "(", "FLAGS", ".", "logdir", ",", "logdir", ")", "\n", "test", "=", "{", "\n", "f'{FLAGS.source}_to_{FLAGS.target}'", ":", "(", "list", "(", "target", ".", "test", ".", "values", "(", ")", ")", "[", "0", "]", ".", "parse", "(", ")", ".", "batch", "(", "FLAGS", ".", "batch", ")", ".", "nchw", "(", ")", "\n", ".", "map", "(", "lambda", "d", ":", "{", "**", "d", ",", "'domain'", ":", "0", "}", ")", ".", "prefetch", "(", "16", ")", ")", ",", "\n", "f'{FLAGS.target}_to_{FLAGS.source}'", ":", "(", "list", "(", "source", ".", "test", ".", "values", "(", ")", ")", "[", "0", "]", ".", "parse", "(", ")", ".", "batch", "(", "FLAGS", ".", "batch", ")", ".", "nchw", "(", ")", "\n", ".", "map", "(", "lambda", "d", ":", "{", "**", "d", ",", "'domain'", ":", "1", "}", ")", ".", "prefetch", "(", "16", ")", ")", ",", "\n", "}", "\n", "if", "FLAGS", ".", "test_extra", ":", "\n", "        ", "for", "ds_name", "in", "FLAGS", ".", "test_extra", ".", "split", "(", "','", ")", ":", "\n", "            ", "ds", "=", "FSL_DATASETS", "(", ")", "[", "f'{FLAGS.dataset}_{ds_name}-0'", "]", "(", ")", "\n", "test", "[", "f'{FLAGS.target}_to_{ds_name}'", "]", "=", "(", "list", "(", "ds", ".", "test", ".", "values", "(", ")", ")", "[", "0", "]", ".", "parse", "(", ")", ".", "batch", "(", "FLAGS", ".", "batch", ")", ".", "nchw", "(", ")", "\n", ".", "map", "(", "lambda", "d", ":", "{", "**", "d", ",", "'domain'", ":", "1", "}", ")", ".", "prefetch", "(", "16", ")", ")", "\n", "", "", "if", "FLAGS", ".", "augment", ".", "startswith", "(", "'('", ")", ":", "\n", "        ", "train", "=", "MixData", "(", "source", ".", "train", ",", "target", ".", "train", ",", "source", ".", "nclass", ",", "FLAGS", ".", "batch", ")", "\n", "", "elif", "FLAGS", ".", "augment", ".", "startswith", "(", "'CTA('", ")", ":", "\n", "        ", "train", "=", "CTAData", "(", "source", ".", "train", ",", "target", ".", "train", ",", "source", ".", "nclass", ",", "FLAGS", ".", "batch", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "f'Augment flag value {FLAGS.augment} not supported.'", ")", "\n", "", "module", ".", "train", "(", "FLAGS", ".", "train_mimg", "<<", "10", ",", "FLAGS", ".", "report_kimg", ",", "train", ",", "test", ",", "logdir", ",", "FLAGS", ".", "keep_ckpts", ")", "\n", "train", ".", "stop", "(", ")", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.semi_supervised_domain_adaptation.noisy_student.NoisyStudent.__init__": [[40, 84], ["semi_supervised_domain_adaptation.lib.train.TrainableSSDAModule.__init__", "model", "objax.optimizer.ExponentialMovingAverageModule", "absl.flags.FLAGS.arch.endswith", "noisy_student.NoisyStudent.model.vars", "objax.optimizer.Momentum", "shared.train.ScheduleCos", "objax.Function.with_vars", "objax.GradValues", "objax.Function.with_vars", "shared.util.MyParallel", "shared.util.MyParallel", "objax.Jit", "noisy_student.NoisyStudent.model_ema.update_ema", "objax.functional.softmax", "noisy_student.NoisyStudent.model_ema.vars", "noisy_student.NoisyStudent.model", "noisy_student.NoisyStudent.lr", "objax.GradValues.", "noisy_student.NoisyStudent.opt", "noisy_student.NoisyStudent.model_ema.update_ema", "noisy_student.NoisyStudent.vars", "noisy_student.NoisyStudent.model_ema", "sx.reshape", "sum", "noisy_student.NoisyStudent.__init__.eval_op"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.baseline.Baseline.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nclass", ":", "int", ",", "model", ":", "Callable", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "nclass", ",", "kwargs", ")", "\n", "self", ".", "model", ":", "objax", ".", "Module", "=", "model", "(", "colors", "=", "3", ",", "nclass", "=", "nclass", ",", "**", "kwargs", ")", "\n", "self", ".", "model_ema", "=", "objax", ".", "optimizer", ".", "ExponentialMovingAverageModule", "(", "self", ".", "model", ",", "momentum", "=", "0.999", ")", "\n", "if", "FLAGS", ".", "arch", ".", "endswith", "(", "'pretrain'", ")", ":", "\n", "# Initialize weights of EMA with pretrained model's weights.", "\n", "            ", "self", ".", "model_ema", ".", "ema", ".", "momentum", "=", "0", "\n", "self", ".", "model_ema", ".", "update_ema", "(", ")", "\n", "self", ".", "model_ema", ".", "ema", ".", "momentum", "=", "0.999", "\n", "", "train_vars", "=", "self", ".", "model", ".", "vars", "(", ")", "\n", "self", ".", "opt", "=", "objax", ".", "optimizer", ".", "Momentum", "(", "train_vars", ")", "\n", "self", ".", "lr", "=", "ScheduleCos", "(", "self", ".", "params", ".", "lr", ",", "self", ".", "params", ".", "lr_decay", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "model_ema", ".", "vars", "(", ")", ")", "\n", "def", "eval_op", "(", "x", ":", "JaxArray", ")", "->", "JaxArray", ":", "\n", "            ", "return", "objax", ".", "functional", ".", "softmax", "(", "self", ".", "model_ema", "(", "x", ",", "training", "=", "False", ")", ")", "\n", "\n", "", "def", "loss_function", "(", "x", ",", "y", ")", ":", "\n", "            ", "c", ",", "h", ",", "w", "=", "x", ".", "shape", "[", "-", "3", ":", "]", "\n", "logit_x", "=", "self", ".", "model", "(", "x", ".", "reshape", "(", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", ")", ",", "training", "=", "True", ")", "\n", "logit_x_weak", ",", "logit_x_strong", "=", "logit_x", "[", ":", ":", "2", "]", ",", "logit_x", "[", "1", ":", ":", "2", "]", "\n", "xe", "=", "0.5", "*", "(", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_x_weak", ",", "y", ")", ".", "mean", "(", ")", "+", "\n", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_x_strong", ",", "y", ")", ".", "mean", "(", ")", ")", "\n", "wd", "=", "0.5", "*", "sum", "(", "(", "v", ".", "value", "**", "2", ")", ".", "sum", "(", ")", "for", "k", ",", "v", "in", "train_vars", ".", "items", "(", ")", "if", "k", ".", "endswith", "(", "'.w'", ")", ")", "\n", "\n", "loss", "=", "xe", "+", "self", ".", "params", ".", "wd", "*", "wd", "\n", "return", "loss", ",", "{", "'losses/xe'", ":", "xe", ",", "'losses/wd'", ":", "wd", "}", "\n", "\n", "", "gv", "=", "objax", ".", "GradValues", "(", "loss_function", ",", "train_vars", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "vars", "(", ")", ")", "\n", "def", "train_op", "(", "step", ",", "x", ",", "y", ",", "u", ",", "probe", "=", "None", ")", ":", "\n", "            ", "y_probe", "=", "eval_op", "(", "probe", ")", "if", "probe", "is", "not", "None", "else", "None", "\n", "p", "=", "step", "/", "(", "FLAGS", ".", "train_mimg", "<<", "20", ")", "\n", "lr", "=", "self", ".", "lr", "(", "p", ")", "\n", "g", ",", "v", "=", "gv", "(", "x", ",", "y", ")", "\n", "self", ".", "opt", "(", "lr", ",", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "g", ")", ")", "\n", "self", ".", "model_ema", ".", "update_ema", "(", ")", "\n", "return", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "{", "'monitors/lr'", ":", "lr", ",", "**", "v", "[", "1", "]", "}", ")", ",", "y_probe", "\n", "\n", "", "self", ".", "train_op", "=", "MyParallel", "(", "train_op", ",", "reduce", "=", "lambda", "x", ":", "x", ")", "\n", "self", ".", "eval_op", "=", "MyParallel", "(", "eval_op", ")", "\n", "# jit eval op used only for saving prediction files, avoids batch padding", "\n", "self", ".", "eval_op_jit", "=", "objax", ".", "Jit", "(", "eval_op", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.semi_supervised_domain_adaptation.noisy_student.PseudoLabeler.__init__": [[87, 93], ["open", "numpy.load", "noisy_student.PseudoLabeler.pseudo_label.max"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data", ":", "AugmentPoolBase", ",", "pseudo_label_file", ":", "str", ",", "threshold", ":", "float", ",", "uratio", ":", "float", "=", "1", ")", ":", "\n", "        ", "with", "open", "(", "pseudo_label_file", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "self", ".", "pseudo_label", "=", "np", ".", "load", "(", "f", ")", "\n", "", "self", ".", "has_pseudo_label", "=", "self", ".", "pseudo_label", ".", "max", "(", "axis", "=", "1", ")", ">", "threshold", "\n", "self", ".", "data", "=", "data", "\n", "self", ".", "uratio", "=", "uratio", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.semi_supervised_domain_adaptation.noisy_student.PseudoLabeler.stop": [[94, 96], ["noisy_student.PseudoLabeler.data.stop"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.noisy_student.PseudoLabeler.stop"], ["", "def", "stop", "(", "self", ")", ":", "\n", "        ", "self", ".", "data", ".", "stop", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.semi_supervised_domain_adaptation.noisy_student.PseudoLabeler.__iter__": [[97, 116], ["enumerate", "enumerate", "enumerate", "numpy.random.shuffle", "batch.append", "batch.append", "len", "dict", "dict", "dict", "batch.append", "dict", "numpy.stack", "numpy.stack", "numpy.stack"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", "->", "dict", ":", "\n", "        ", "batch", "=", "[", "]", "\n", "batch_size", "=", "None", "\n", "for", "d", "in", "self", ".", "data", ":", "\n", "            ", "batch_size", "=", "batch_size", "or", "d", "[", "'x'", "]", "[", "'image'", "]", ".", "shape", "[", "0", "]", "\n", "for", "p", ",", "index", "in", "enumerate", "(", "d", "[", "'x'", "]", "[", "'index'", "]", ")", ":", "\n", "                ", "batch", ".", "append", "(", "dict", "(", "index", "=", "index", ",", "label", "=", "d", "[", "'x'", "]", "[", "'label'", "]", "[", "p", "]", ",", "image", "=", "d", "[", "'x'", "]", "[", "'image'", "]", "[", "p", "]", ")", ")", "\n", "", "for", "p", ",", "index", "in", "enumerate", "(", "d", "[", "'u'", "]", "[", "'index'", "]", ")", ":", "\n", "                ", "if", "self", ".", "has_pseudo_label", "[", "index", "]", ":", "\n", "                    ", "batch", ".", "append", "(", "dict", "(", "index", "=", "index", ",", "label", "=", "self", ".", "pseudo_label", "[", "index", "]", ",", "image", "=", "d", "[", "'u'", "]", "[", "'image'", "]", "[", "p", "]", ")", ")", "\n", "", "", "np", ".", "random", ".", "shuffle", "(", "batch", ")", "\n", "while", "len", "(", "batch", ")", ">=", "batch_size", ":", "\n", "                ", "current_batch", ",", "batch", "=", "batch", "[", ":", "batch_size", "]", ",", "batch", "[", "batch_size", ":", "]", "\n", "d", "[", "'x'", "]", "=", "dict", "(", "image", "=", "np", ".", "stack", "(", "[", "x", "[", "'image'", "]", "for", "x", "in", "current_batch", "]", ")", ",", "\n", "label", "=", "np", ".", "stack", "(", "[", "x", "[", "'label'", "]", "for", "x", "in", "current_batch", "]", ")", ",", "\n", "index", "=", "np", ".", "stack", "(", "[", "x", "[", "'index'", "]", "for", "x", "in", "current_batch", "]", ")", ")", "\n", "yield", "d", "\n", "\n", "\n", "", "", "", "", "def", "main", "(", "argv", ")", ":", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.semi_supervised_domain_adaptation.noisy_student.main": [[118, 173], ["print", "print", "shared.util.setup_tf", "shared.data.ssl.DataSetSSL.parse_name", "noisy_student.NoisyStudent", "os.path.join", "os.path.join", "enumerate", "absl.flags.FLAGS.augment.startswith", "NoisyStudent.train", "tqdm.tqdm", "numpy.concatenate", "print", "semi_supervised_domain_adaptation.lib.data.CTAData.stop", "shared.zoo.models.network", "sorted", "os.path.join", "os.path.join", "print", "os.path.exists", "test.update", "semi_supervised_domain_adaptation.lib.data.MixData", "absl.flags.FLAGS.augment.startswith", "noisy_student.PseudoLabeler", "target_unlabeled.train.parse().batch().nchw", "np.concatenate.append", "open", "numpy.save", "shared.data.fsl.DATASETS", "shared.data.ssl.DATASETS", "shared.data.fsl.DATASETS", "semi_supervised_domain_adaptation.lib.data.CTAData", "ValueError", "NoisyStudent.eval_op_jit", "jax.host_id", "jax.host_count", "target_unlabeled.train.parse().batch", "batch[]._numpy", "str", "NoisyStudent.params.items", "v.parse().batch().nchw().map().prefetch", "testset.items", "jax.devices", "target_unlabeled.train.parse", "v.parse().batch().nchw().map", "v.parse().batch().nchw", "v.parse().batch", "v.parse"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.shared.util.setup_tf", "home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.DataSetSSL.parse_name", "home.repos.pwc.inspect_result.google-research_adamatch.shared.train.TrainableModule.train", "home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.noisy_student.PseudoLabeler.stop", "home.repos.pwc.inspect_result.google-research_adamatch.zoo.models.network", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.nchw", "home.repos.pwc.inspect_result.google-research_adamatch.debug.show_images.save", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.parse", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.nchw", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.parse"], ["assert", "FLAGS", ".", "id", ",", "f'You must specify a --id for the run'", "\n", "print", "(", "'JAX host: %d / %d'", "%", "(", "jax", ".", "host_id", "(", ")", ",", "jax", ".", "host_count", "(", ")", ")", ")", "\n", "print", "(", "'JAX devices:\\n%s'", "%", "'\\n'", ".", "join", "(", "str", "(", "d", ")", "for", "d", "in", "jax", ".", "devices", "(", ")", ")", ",", "flush", "=", "True", ")", "\n", "setup_tf", "(", ")", "\n", "dataset_name", ",", "samples_per_class", ",", "dataset_seed", "=", "DataSetSSL", ".", "parse_name", "(", "f'{FLAGS.dataset}'", ")", "\n", "labeled", "=", "SSL_DATASETS", "(", ")", "[", "dataset_name", "]", "(", "samples_per_class", ",", "dataset_seed", ")", "\n", "unlabeled", "=", "FSL_DATASETS", "(", ")", "[", "f'{dataset_name}-0'", "]", "(", ")", "\n", "testsets", "=", "[", "unlabeled", ".", "test", "]", "\n", "module", "=", "NoisyStudent", "(", "labeled", ".", "nclass", ",", "network", "(", "FLAGS", ".", "arch", ")", ",", "\n", "lr", "=", "FLAGS", ".", "lr", ",", "\n", "lr_decay", "=", "FLAGS", ".", "lr_decay", ",", "\n", "wd", "=", "FLAGS", ".", "wd", ",", "\n", "arch", "=", "FLAGS", ".", "arch", ",", "\n", "batch", "=", "FLAGS", ".", "batch", ",", "\n", "uratio", "=", "FLAGS", ".", "uratio", ")", "\n", "logdir", "=", "f'SSL/{FLAGS.dataset}/{FLAGS.augment}/{module.__class__.__name__}/'", "\n", "logdir", "+=", "'_'", ".", "join", "(", "sorted", "(", "'%s%s'", "%", "k", "for", "k", "in", "module", ".", "params", ".", "items", "(", ")", ")", ")", "\n", "if", "FLAGS", ".", "teacher_id", "!=", "''", ":", "\n", "      ", "pseudo_label_logdir", "=", "os", ".", "path", ".", "join", "(", "FLAGS", ".", "logdir", ",", "logdir", ",", "FLAGS", ".", "teacher_id", ")", "\n", "pseudo_label_file", "=", "os", ".", "path", ".", "join", "(", "pseudo_label_logdir", ",", "'predictions.npy'", ")", "\n", "print", "(", "'Using pseudo label file '", ",", "pseudo_label_file", ")", "\n", "", "else", ":", "\n", "      ", "pseudo_label_file", "=", "FLAGS", ".", "pseudo_label_file", "\n", "", "logdir", "=", "os", ".", "path", ".", "join", "(", "FLAGS", ".", "logdir", ",", "logdir", ",", "FLAGS", ".", "id", ")", "\n", "prediction_file", "=", "os", ".", "path", ".", "join", "(", "logdir", ",", "'predictions.npy'", ")", "\n", "assert", "not", "os", ".", "path", ".", "exists", "(", "prediction_file", ")", ",", "f'The prediction file \"{prediction_file}\" already exists, '", "f'remove it if you want to overwrite it.'", "\n", "\n", "test", "=", "{", "}", "\n", "for", "domain", ",", "testset", "in", "enumerate", "(", "testsets", ")", ":", "\n", "        ", "test", ".", "update", "(", "(", "k", ",", "v", ".", "parse", "(", ")", ".", "batch", "(", "FLAGS", ".", "batch", ")", ".", "nchw", "(", ")", ".", "map", "(", "\n", "lambda", "d", ":", "{", "**", "d", ",", "'domain'", ":", "domain", "}", ")", ".", "prefetch", "(", "16", ")", ")", "\n", "for", "k", ",", "v", "in", "testset", ".", "items", "(", ")", ")", "\n", "", "if", "FLAGS", ".", "augment", ".", "startswith", "(", "'('", ")", ":", "\n", "        ", "train", "=", "MixData", "(", "labeled", ".", "train", ",", "unlabeled", ".", "train", ",", "labeled", ".", "nclass", ",", "FLAGS", ".", "batch", ",", "FLAGS", ".", "uratio", ")", "\n", "", "elif", "FLAGS", ".", "augment", ".", "startswith", "(", "'CTA('", ")", ":", "\n", "        ", "train", "=", "CTAData", "(", "labeled", ".", "train", ",", "unlabeled", ".", "train", ",", "labeled", ".", "nclass", ",", "FLAGS", ".", "batch", ",", "FLAGS", ".", "uratio", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "f'Augment flag value {FLAGS.augment} not supported.'", ")", "\n", "", "if", "pseudo_label_file", "!=", "''", ":", "\n", "        ", "train", "=", "PseudoLabeler", "(", "train", ",", "pseudo_label_file", ",", "FLAGS", ".", "pseudo_label_th", ",", "FLAGS", ".", "uratio", ")", "\n", "", "module", ".", "train", "(", "FLAGS", ".", "train_mimg", "<<", "10", ",", "FLAGS", ".", "report_kimg", ",", "train", ",", "test", ",", "logdir", ",", "FLAGS", ".", "keep_ckpts", ")", "\n", "predictions", "=", "[", "]", "\n", "for", "batch", "in", "tqdm", "(", "unlabeled", ".", "train", ".", "parse", "(", ")", ".", "batch", "(", "FLAGS", ".", "batch", ")", ".", "nchw", "(", ")", ",", "\n", "desc", "=", "f'Evaluating unlabeled data'", ",", "leave", "=", "False", ")", ":", "\n", "        ", "predictions", ".", "append", "(", "module", ".", "eval_op_jit", "(", "batch", "[", "'image'", "]", ".", "_numpy", "(", ")", ")", ")", "\n", "", "predictions", "=", "np", ".", "concatenate", "(", "predictions", ")", "\n", "with", "open", "(", "prediction_file", ",", "'wb'", ")", "as", "f", ":", "\n", "        ", "np", ".", "save", "(", "f", ",", "predictions", ")", "\n", "", "print", "(", "'Saved target predictions to'", ",", "prediction_file", ")", "\n", "train", ".", "stop", "(", ")", "\n", "objax", ".", "util", ".", "multi_host_barrier", "(", ")", "\n", "\n", "\n", "", "if", "__name__", "==", "'__main__'", ":", "\n", "    ", "flags", ".", "DEFINE_enum", "(", "'arch'", ",", "'wrn28-2'", ",", "ARCHS", ",", "'Model architecture.'", ")", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.semi_supervised_domain_adaptation.fixmatch_da.FixMatchDA.__init__": [[39, 102], ["semi_supervised_domain_adaptation.lib.train.TrainableSSDAModule.__init__", "model", "objax.optimizer.ExponentialMovingAverageModule", "absl.flags.FLAGS.arch.endswith", "objax.Module", "objax.nn.ExponentialMovingAverage", "objax.nn.MovingAverage", "objax.optimizer.Momentum", "shared.train.ScheduleCos", "objax.Function.with_vars", "objax.GradValues", "objax.Function.with_vars", "shared.util.MyParallel", "shared.util.MyParallel", "fixmatch_da.FixMatchDA.model_ema.update_ema", "fixmatch_da.FixMatchDA.model.vars", "fixmatch_da.FixMatchDA.stats.vars", "objax.functional.softmax", "fixmatch_da.FixMatchDA.model_ema.vars", "jax.concatenate().reshape", "jax.concatenate().reshape", "fixmatch_da.FixMatchDA.model", "objax.functional.softmax", "fixmatch_da.FixMatchDA.stats.p_data", "fixmatch_da.FixMatchDA.stats.p_model", "objax.functional.stop_gradient", "objax.functional.loss.cross_entropy_logits().mean", "objax.functional.loss.cross_entropy_logits_sparse", "fixmatch_da.FixMatchDA.lr", "objax.GradValues.", "fixmatch_da.FixMatchDA.opt", "fixmatch_da.FixMatchDA.model_ema.update_ema", "fixmatch_da.FixMatchDA.vars", "fixmatch_da.FixMatchDA.model_ema", "sy.mean", "objax.functional.stop_gradient.mean", "objax.functional.stop_gradient.argmax", "sum", "fixmatch_da.FixMatchDA.__init__.eval_op"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.baseline.Baseline.__init__"], ["self", ".", "model", ":", "objax", ".", "Module", "=", "model", "(", "colors", "=", "3", ",", "nclass", "=", "nclass", ",", "**", "kwargs", ")", "\n", "self", ".", "model_ema", "=", "objax", ".", "optimizer", ".", "ExponentialMovingAverageModule", "(", "self", ".", "model", ",", "momentum", "=", "0.999", ")", "\n", "if", "FLAGS", ".", "arch", ".", "endswith", "(", "'pretrain'", ")", ":", "\n", "# Initialize weights of EMA with pretrained model's weights.", "\n", "            ", "self", ".", "model_ema", ".", "ema", ".", "momentum", "=", "0", "\n", "self", ".", "model_ema", ".", "update_ema", "(", ")", "\n", "self", ".", "model_ema", ".", "ema", ".", "momentum", "=", "0.999", "\n", "", "self", ".", "stats", "=", "objax", ".", "Module", "(", ")", "\n", "self", ".", "stats", ".", "p_data", "=", "objax", ".", "nn", ".", "ExponentialMovingAverage", "(", "(", "nclass", ",", ")", ",", "init_value", "=", "1", "/", "nclass", ")", "\n", "self", ".", "stats", ".", "p_model", "=", "objax", ".", "nn", ".", "MovingAverage", "(", "(", "nclass", ",", ")", ",", "buffer_size", "=", "128", ",", "init_value", "=", "1", "/", "nclass", ")", "\n", "train_vars", "=", "self", ".", "model", ".", "vars", "(", ")", "+", "self", ".", "stats", ".", "vars", "(", ")", "\n", "self", ".", "opt", "=", "objax", ".", "optimizer", ".", "Momentum", "(", "train_vars", ")", "\n", "self", ".", "lr", "=", "ScheduleCos", "(", "self", ".", "params", ".", "lr", ",", "self", ".", "params", ".", "lr_decay", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "model_ema", ".", "vars", "(", ")", ")", "\n", "def", "eval_op", "(", "x", ":", "JaxArray", ")", "->", "JaxArray", ":", "\n", "            ", "return", "objax", ".", "functional", ".", "softmax", "(", "self", ".", "model_ema", "(", "x", ",", "training", "=", "False", ")", ")", "\n", "\n", "", "def", "loss_function", "(", "x", ",", "y", ",", "u", ")", ":", "\n", "            ", "c", ",", "h", ",", "w", "=", "x", ".", "shape", "[", "-", "3", ":", "]", "\n", "xu", "=", "jn", ".", "concatenate", "(", "(", "x", ",", "u", ")", ")", ".", "reshape", "(", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", ")", "\n", "logit", "=", "self", ".", "model", "(", "xu", ",", "training", "=", "True", ")", "\n", "logit_x_weak", "=", "logit", "[", ":", "2", "*", "x", ".", "shape", "[", "0", "]", ":", "2", "]", "\n", "logit_weak", ",", "logit_strong", "=", "logit", "[", ":", ":", "2", "]", ",", "logit", "[", "1", ":", ":", "2", "]", "\n", "\n", "\n", "confidence_ratio", "=", "self", ".", "params", ".", "confidence", "\n", "\n", "pseudo_labels", "=", "objax", ".", "functional", ".", "softmax", "(", "logit_weak", ")", "\n", "p_data", "=", "self", ".", "stats", ".", "p_data", "(", "y", ".", "mean", "(", "0", ")", ")", "\n", "p_model", "=", "self", ".", "stats", ".", "p_model", "(", "pseudo_labels", ".", "mean", "(", "0", ")", ")", "\n", "pseudo_labels", "*=", "(", "1e-6", "+", "p_data", ")", "/", "(", "1e-6", "+", "p_model", ")", "\n", "pseudo_labels", "=", "stop_gradient", "(", "pseudo_labels", "/", "pseudo_labels", ".", "sum", "(", "1", ",", "keepdims", "=", "True", ")", ")", "\n", "pseudo_mask", "=", "(", "pseudo_labels", ".", "max", "(", "axis", "=", "1", ")", ">=", "confidence_ratio", ")", ".", "astype", "(", "pseudo_labels", ".", "dtype", ")", "\n", "\n", "xe", "=", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_x_weak", ",", "y", ")", ".", "mean", "(", ")", "\n", "xeu", "=", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits_sparse", "(", "logit_strong", ",", "pseudo_labels", ".", "argmax", "(", "axis", "=", "1", ")", ")", "\n", "xeu", "=", "(", "xeu", "*", "pseudo_mask", ")", ".", "mean", "(", ")", "\n", "wd", "=", "0.5", "*", "sum", "(", "(", "v", ".", "value", "**", "2", ")", ".", "sum", "(", ")", "for", "k", ",", "v", "in", "train_vars", ".", "items", "(", ")", "if", "k", ".", "endswith", "(", "'.w'", ")", ")", "\n", "\n", "loss", "=", "xe", "+", "self", ".", "params", ".", "wu", "*", "xeu", "+", "self", ".", "params", ".", "wd", "*", "wd", "\n", "return", "loss", ",", "{", "'losses/xe'", ":", "xe", ",", "\n", "'losses/xeu'", ":", "xeu", ",", "\n", "'losses/wd'", ":", "wd", ",", "\n", "'monitors/confidence_ratio'", ":", "confidence_ratio", ",", "\n", "'monitors/mask'", ":", "pseudo_mask", ".", "mean", "(", ")", ",", "\n", "'monitors/klmodel'", ":", "objax", ".", "functional", ".", "divergence", ".", "kl", "(", "p_data", ",", "p_model", ")", "}", "\n", "\n", "", "gv", "=", "objax", ".", "GradValues", "(", "loss_function", ",", "train_vars", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "vars", "(", ")", ")", "\n", "def", "train_op", "(", "step", ",", "x", ",", "y", ",", "u", ",", "probe", "=", "None", ")", ":", "\n", "            ", "y_probe", "=", "eval_op", "(", "probe", ")", "if", "probe", "is", "not", "None", "else", "None", "\n", "p", "=", "step", "/", "(", "FLAGS", ".", "train_mimg", "<<", "20", ")", "\n", "lr", "=", "self", ".", "lr", "(", "p", ")", "\n", "g", ",", "v", "=", "gv", "(", "x", ",", "y", ",", "u", ")", "\n", "self", ".", "opt", "(", "lr", ",", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "g", ")", ")", "\n", "self", ".", "model_ema", ".", "update_ema", "(", ")", "\n", "return", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "{", "'monitors/lr'", ":", "lr", ",", "**", "v", "[", "1", "]", "}", ")", ",", "y_probe", "\n", "\n", "", "self", ".", "train_op", "=", "MyParallel", "(", "train_op", ",", "reduce", "=", "lambda", "x", ":", "x", ")", "\n", "self", ".", "eval_op", "=", "MyParallel", "(", "eval_op", ")", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.semi_supervised_domain_adaptation.fixmatch_da.main": [[104, 140], ["print", "print", "shared.util.setup_tf", "shared.data.ssl.DataSetSSL.parse_name", "fixmatch_da.FixMatchDA", "os.path.join", "enumerate", "absl.flags.FLAGS.augment.startswith", "FixMatchDA.train", "semi_supervised_domain_adaptation.lib.data.CTAData.stop", "shared.zoo.models.network", "sorted", "test.update", "semi_supervised_domain_adaptation.lib.data.MixData", "absl.flags.FLAGS.augment.startswith", "shared.data.fsl.DATASETS", "shared.data.ssl.DATASETS", "shared.data.fsl.DATASETS", "semi_supervised_domain_adaptation.lib.data.CTAData", "ValueError", "jax.host_id", "jax.host_id", "jax.host_count", "jax.host_count", "str", "FixMatchDA.params.items", "v.parse().batch().nchw().map().prefetch", "testset.items", "jax.devices", "jax.devices", "v.parse().batch().nchw().map", "v.parse().batch().nchw", "v.parse().batch", "v.parse"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.shared.util.setup_tf", "home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.DataSetSSL.parse_name", "home.repos.pwc.inspect_result.google-research_adamatch.shared.train.TrainableModule.train", "home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.noisy_student.PseudoLabeler.stop", "home.repos.pwc.inspect_result.google-research_adamatch.zoo.models.network", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.nchw", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.parse"], ["    ", "del", "argv", "\n", "print", "(", "'JAX host: %d / %d'", "%", "(", "jax", ".", "host_id", "(", ")", ",", "jax", ".", "host_count", "(", ")", ")", ")", "\n", "print", "(", "'JAX devices:\\n%s'", "%", "'\\n'", ".", "join", "(", "str", "(", "d", ")", "for", "d", "in", "jax", ".", "devices", "(", ")", ")", ",", "flush", "=", "True", ")", "\n", "setup_tf", "(", ")", "\n", "dataset_name", ",", "samples_per_class", ",", "dataset_seed", "=", "DataSetSSL", ".", "parse_name", "(", "f'{FLAGS.dataset}'", ")", "\n", "labeled", "=", "SSL_DATASETS", "(", ")", "[", "dataset_name", "]", "(", "samples_per_class", ",", "dataset_seed", ")", "\n", "unlabeled", "=", "FSL_DATASETS", "(", ")", "[", "f'{dataset_name}-0'", "]", "(", ")", "\n", "testsets", "=", "[", "unlabeled", ".", "test", "]", "\n", "module", "=", "FixMatchDA", "(", "labeled", ".", "nclass", ",", "network", "(", "FLAGS", ".", "arch", ")", ",", "\n", "lr", "=", "FLAGS", ".", "lr", ",", "\n", "lr_decay", "=", "FLAGS", ".", "lr_decay", ",", "\n", "wd", "=", "FLAGS", ".", "wd", ",", "\n", "arch", "=", "FLAGS", ".", "arch", ",", "\n", "batch", "=", "FLAGS", ".", "batch", ",", "\n", "wu", "=", "FLAGS", ".", "wu", ",", "\n", "confidence", "=", "FLAGS", ".", "confidence", ",", "\n", "uratio", "=", "FLAGS", ".", "uratio", ")", "\n", "logdir", "=", "f'SSL/{FLAGS.dataset}/{FLAGS.augment}/{module.__class__.__name__}/%s'", "%", "(", "\n", "'_'", ".", "join", "(", "sorted", "(", "'%s%s'", "%", "k", "for", "k", "in", "module", ".", "params", ".", "items", "(", ")", ")", ")", ")", "\n", "logdir", "=", "os", ".", "path", ".", "join", "(", "FLAGS", ".", "logdir", ",", "logdir", ")", "\n", "test", "=", "{", "}", "\n", "for", "domain", ",", "testset", "in", "enumerate", "(", "testsets", ")", ":", "\n", "        ", "test", ".", "update", "(", "(", "k", ",", "v", ".", "parse", "(", ")", ".", "batch", "(", "FLAGS", ".", "batch", ")", ".", "nchw", "(", ")", ".", "map", "(", "lambda", "d", ":", "{", "**", "d", ",", "'domain'", ":", "domain", "}", ")", ".", "prefetch", "(", "16", ")", ")", "\n", "for", "k", ",", "v", "in", "testset", ".", "items", "(", ")", ")", "\n", "", "if", "FLAGS", ".", "augment", ".", "startswith", "(", "'('", ")", ":", "\n", "        ", "train", "=", "MixData", "(", "labeled", ".", "train", ",", "unlabeled", ".", "train", ",", "labeled", ".", "nclass", ",", "FLAGS", ".", "batch", ",", "FLAGS", ".", "uratio", ")", "\n", "", "elif", "FLAGS", ".", "augment", ".", "startswith", "(", "'CTA('", ")", ":", "\n", "        ", "train", "=", "CTAData", "(", "labeled", ".", "train", ",", "unlabeled", ".", "train", ",", "labeled", ".", "nclass", ",", "FLAGS", ".", "batch", ",", "FLAGS", ".", "uratio", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "f'Augment flag value {FLAGS.augment} not supported.'", ")", "\n", "", "module", ".", "train", "(", "FLAGS", ".", "train_mimg", "<<", "10", ",", "FLAGS", ".", "report_kimg", ",", "train", ",", "test", ",", "logdir", ",", "FLAGS", ".", "keep_ckpts", ")", "\n", "train", ".", "stop", "(", ")", "\n", "objax", ".", "util", ".", "multi_host_barrier", "(", ")", "\n", "\n", "\n", "", "if", "__name__", "==", "'__main__'", ":", "\n", "    ", "flags", ".", "DEFINE_enum", "(", "'arch'", ",", "'wrn28-2'", ",", "ARCHS", ",", "'Model architecture.'", ")", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.semi_supervised_domain_adaptation.adamatch.AdaMatch.__init__": [[39, 127], ["semi_supervised_domain_adaptation.lib.train.TrainableSSDAModule.__init__", "model", "objax.optimizer.ExponentialMovingAverageModule", "absl.flags.FLAGS.arch.endswith", "objax.Module", "objax.nn.ExponentialMovingAverage", "objax.nn.MovingAverage", "objax.optimizer.Momentum", "shared.train.ScheduleCosPhases", "shared.train.ScheduleCos", "objax.Function.with_vars", "objax.GradValues", "objax.Function.with_vars", "shared.util.MyParallel", "shared.util.MyParallel", "adamatch.AdaMatch.model_ema.update_ema", "adamatch.AdaMatch.model.vars", "adamatch.AdaMatch.stats.vars", "objax.functional.softmax", "adamatch.AdaMatch.model_ema.vars", "jax.ones", "jax.ones", "jax.zeros", "jax.zeros", "jax.zeros", "jax.zeros", "adamatch.AdaMatch.model.vars().tensors", "adamatch.AdaMatch.model", "jax.split", "jax.split", "adamatch.AdaMatch.model.vars().assign", "jax.concatenate().reshape", "jax.concatenate().reshape", "adamatch.AdaMatch.model", "jax.split", "jax.split", "objax.functional.softmax", "adamatch.AdaMatch.stats.p_labeled", "adamatch.AdaMatch.stats.p_unlabeled", "objax.functional.stop_gradient", "objax.functional.loss.cross_entropy_logits_sparse", "adamatch.AdaMatch.lr", "objax.GradValues.", "adamatch.AdaMatch.opt", "adamatch.AdaMatch.model_ema.update_ema", "adamatch.AdaMatch.vars", "adamatch.AdaMatch.model_ema", "jax.concatenate().reshape", "jax.concatenate().reshape", "objax.random.uniform", "objax.random.uniform", "objax.functional.softmax", "objax.functional.softmax().mean", "objax.functional.stop_gradient.mean", "objax.functional.stop_gradient.argmax", "sum", "adamatch.AdaMatch.__init__.eval_op"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.baseline.Baseline.__init__"], ["self", ".", "model", ":", "objax", ".", "Module", "=", "model", "(", "colors", "=", "3", ",", "nclass", "=", "nclass", ",", "**", "kwargs", ")", "\n", "self", ".", "model_ema", "=", "objax", ".", "optimizer", ".", "ExponentialMovingAverageModule", "(", "self", ".", "model", ",", "momentum", "=", "0.999", ")", "\n", "if", "FLAGS", ".", "arch", ".", "endswith", "(", "'pretrain'", ")", ":", "\n", "# Initialize weights of EMA with pretrained model's weights.", "\n", "            ", "self", ".", "model_ema", ".", "ema", ".", "momentum", "=", "0", "\n", "self", ".", "model_ema", ".", "update_ema", "(", ")", "\n", "self", ".", "model_ema", ".", "ema", ".", "momentum", "=", "0.999", "\n", "", "self", ".", "stats", "=", "objax", ".", "Module", "(", ")", "\n", "self", ".", "stats", ".", "keygen", "=", "objax", ".", "random", ".", "DEFAULT_GENERATOR", "\n", "self", ".", "stats", ".", "p_labeled", "=", "objax", ".", "nn", ".", "ExponentialMovingAverage", "(", "(", "nclass", ",", ")", ",", "init_value", "=", "1", "/", "nclass", ")", "\n", "self", ".", "stats", ".", "p_unlabeled", "=", "objax", ".", "nn", ".", "MovingAverage", "(", "(", "nclass", ",", ")", ",", "buffer_size", "=", "128", ",", "init_value", "=", "1", "/", "nclass", ")", "\n", "train_vars", "=", "self", ".", "model", ".", "vars", "(", ")", "+", "self", ".", "stats", ".", "vars", "(", ")", "\n", "self", ".", "opt", "=", "objax", ".", "optimizer", ".", "Momentum", "(", "train_vars", ")", "\n", "self", ".", "wu", "=", "ScheduleCosPhases", "(", "1", ",", "[", "(", "0.5", ",", "1", ")", ",", "(", "1", ",", "self", ".", "params", ".", "wu", ")", "]", ",", "start_value", "=", "0", ")", "\n", "self", ".", "lr", "=", "ScheduleCos", "(", "self", ".", "params", ".", "lr", ",", "self", ".", "params", ".", "lr_decay", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "model_ema", ".", "vars", "(", ")", ")", "\n", "def", "eval_op", "(", "x", ":", "JaxArray", ")", "->", "JaxArray", ":", "\n", "            ", "return", "objax", ".", "functional", ".", "softmax", "(", "self", ".", "model_ema", "(", "x", ",", "training", "=", "False", ")", ")", "\n", "\n", "", "def", "loss_function", "(", "sx", ",", "sy", ",", "tu", ",", "progress", ")", ":", "\n", "            ", "c", ",", "h", ",", "w", "=", "sx", ".", "shape", "[", "-", "3", ":", "]", "\n", "saved_vars", "=", "self", ".", "model", ".", "vars", "(", ")", ".", "tensors", "(", ")", "\n", "logit_bn_x", "=", "self", ".", "model", "(", "sx", ".", "reshape", "(", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", ")", ",", "training", "=", "True", ")", "\n", "self", ".", "model", ".", "vars", "(", ")", ".", "assign", "(", "saved_vars", ")", "\n", "xu", "=", "jn", ".", "concatenate", "(", "(", "sx", ",", "tu", ")", ")", ".", "reshape", "(", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", ")", "\n", "logit", "=", "self", ".", "model", "(", "xu", ",", "training", "=", "True", ")", "\n", "logit_sx", ",", "logit_tu", "=", "jn", ".", "split", "(", "logit", ",", "(", "2", "*", "sx", ".", "shape", "[", "0", "]", ",", ")", ")", "\n", "logit_sx", "+=", "(", "logit_bn_x", "-", "logit_sx", ")", "*", "objax", ".", "random", ".", "uniform", "(", "logit_sx", ".", "shape", ")", "\n", "logit_sx_weak", ",", "logit_sx_strong", "=", "logit_sx", "[", ":", ":", "2", "]", ",", "logit_sx", "[", "1", ":", ":", "2", "]", "\n", "logit_tu_weak", ",", "logit_tu_strong", "=", "logit_tu", "[", ":", ":", "2", "]", ",", "logit_tu", "[", "1", ":", ":", "2", "]", "\n", "\n", "if", "self", ".", "params", ".", "use_cr", ":", "\n", "                ", "real_confidence", "=", "objax", ".", "functional", ".", "softmax", "(", "stop_gradient", "(", "logit_sx_weak", ")", ")", "\n", "confidence_ratio", "=", "real_confidence", ".", "max", "(", "1", ")", ".", "mean", "(", "0", ")", "*", "self", ".", "params", ".", "confidence", "\n", "", "else", ":", "\n", "                ", "confidence_ratio", "=", "self", ".", "params", ".", "confidence", "\n", "\n", "", "pseudo_labels", "=", "objax", ".", "functional", ".", "softmax", "(", "logit_tu_weak", ")", "\n", "p_labeled", "=", "self", ".", "stats", ".", "p_labeled", "(", "objax", ".", "functional", ".", "softmax", "(", "logit_sx_weak", ")", ".", "mean", "(", "0", ")", ")", "\n", "p_unlabeled", "=", "self", ".", "stats", ".", "p_unlabeled", "(", "pseudo_labels", ".", "mean", "(", "0", ")", ")", "\n", "pseudo_labels", "*=", "(", "1e-6", "+", "p_labeled", ")", "/", "(", "1e-6", "+", "p_unlabeled", ")", "\n", "pseudo_labels", "=", "stop_gradient", "(", "pseudo_labels", "/", "pseudo_labels", ".", "sum", "(", "1", ",", "keepdims", "=", "True", ")", ")", "\n", "pseudo_mask", "=", "(", "pseudo_labels", ".", "max", "(", "axis", "=", "1", ")", ">=", "confidence_ratio", ")", ".", "astype", "(", "pseudo_labels", ".", "dtype", ")", "\n", "\n", "xe", "=", "0.5", "*", "(", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_sx_weak", ",", "sy", ")", ".", "mean", "(", ")", "+", "\n", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_sx_strong", ",", "sy", ")", ".", "mean", "(", ")", ")", "\n", "xeu", "=", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits_sparse", "(", "logit_tu_strong", ",", "pseudo_labels", ".", "argmax", "(", "axis", "=", "1", ")", ")", "\n", "xeu", "=", "(", "xeu", "*", "pseudo_mask", ")", ".", "mean", "(", ")", "\n", "wd", "=", "0.5", "*", "sum", "(", "(", "v", ".", "value", "**", "2", ")", ".", "sum", "(", ")", "for", "k", ",", "v", "in", "train_vars", ".", "items", "(", ")", "if", "k", ".", "endswith", "(", "'.w'", ")", ")", "\n", "\n", "loss", "=", "xe", "+", "self", ".", "wu", "(", "progress", ")", "*", "xeu", "+", "self", ".", "params", ".", "wd", "*", "wd", "\n", "return", "loss", ",", "{", "'losses/xe'", ":", "xe", ",", "\n", "'losses/xeu'", ":", "xeu", ",", "\n", "'losses/wd'", ":", "wd", ",", "\n", "'losses/hregbn'", ":", "jn", ".", "square", "(", "logit_sx", "-", "logit_bn_x", ")", ".", "mean", "(", ")", ",", "\n", "'monitors/confidence_ratio'", ":", "confidence_ratio", ",", "\n", "'monitors/wu'", ":", "self", ".", "wu", "(", "progress", ")", ",", "\n", "'monitors/mask'", ":", "pseudo_mask", ".", "mean", "(", ")", ",", "\n", "'monitors/klmodel'", ":", "objax", ".", "functional", ".", "divergence", ".", "kl", "(", "p_labeled", ",", "p_unlabeled", ")", "}", "\n", "\n", "", "gv", "=", "objax", ".", "GradValues", "(", "loss_function", ",", "train_vars", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "vars", "(", ")", ")", "\n", "def", "train_op", "(", "step", ",", "x", ",", "y", ",", "u", ",", "probe", "=", "None", ")", ":", "\n", "            ", "y_probe", "=", "eval_op", "(", "probe", ")", "if", "probe", "is", "not", "None", "else", "None", "\n", "p", "=", "step", "/", "(", "FLAGS", ".", "train_mimg", "<<", "20", ")", "\n", "lr", "=", "self", ".", "lr", "(", "p", ")", "\n", "g", ",", "v", "=", "gv", "(", "x", ",", "y", ",", "u", ",", "p", ")", "\n", "self", ".", "opt", "(", "lr", ",", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "g", ")", ")", "\n", "self", ".", "model_ema", ".", "update_ema", "(", ")", "\n", "return", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "{", "'monitors/lr'", ":", "lr", ",", "**", "v", "[", "1", "]", "}", ")", ",", "y_probe", "\n", "\n", "", "self", ".", "train_op", "=", "MyParallel", "(", "train_op", ",", "reduce", "=", "lambda", "x", ":", "x", ")", "\n", "self", ".", "eval_op", "=", "MyParallel", "(", "eval_op", ")", "\n", "\n", "\n", "", "", "def", "main", "(", "argv", ")", ":", "\n", "    ", "del", "argv", "\n", "print", "(", "'JAX host: %d / %d'", "%", "(", "jax", ".", "host_id", "(", ")", ",", "jax", ".", "host_count", "(", ")", ")", ")", "\n", "print", "(", "'JAX devices:\\n%s'", "%", "'\\n'", ".", "join", "(", "str", "(", "d", ")", "for", "d", "in", "jax", ".", "devices", "(", ")", ")", ",", "flush", "=", "True", ")", "\n", "setup_tf", "(", ")", "\n", "dataset_name", ",", "samples_per_class", ",", "dataset_seed", "=", "DataSetSSL", ".", "parse_name", "(", "f'{FLAGS.dataset}'", ")", "\n", "labeled", "=", "SSL_DATASETS", "(", ")", "[", "dataset_name", "]", "(", "samples_per_class", ",", "dataset_seed", ")", "\n", "unlabeled", "=", "FSL_DATASETS", "(", ")", "[", "f'{dataset_name}-0'", "]", "(", ")", "\n", "testsets", "=", "[", "unlabeled", ".", "test", "]", "\n", "module", "=", "AdaMatch", "(", "labeled", ".", "nclass", ",", "network", "(", "FLAGS", ".", "arch", ")", ",", "\n", "lr", "=", "FLAGS", ".", "lr", ",", "\n", "lr_decay", "=", "FLAGS", ".", "lr_decay", ",", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.semi_supervised_domain_adaptation.adamatch.main": [[129, 167], ["print", "print", "shared.util.setup_tf", "shared.data.ssl.DataSetSSL.parse_name", "adamatch.AdaMatch", "os.path.join", "enumerate", "absl.flags.FLAGS.augment.startswith", "AdaMatch.train", "semi_supervised_domain_adaptation.lib.data.CTAData.stop", "shared.zoo.models.network", "sorted", "test.update", "semi_supervised_domain_adaptation.lib.data.MixData", "absl.flags.FLAGS.augment.startswith", "shared.data.fsl.DATASETS", "shared.data.ssl.DATASETS", "shared.data.fsl.DATASETS", "semi_supervised_domain_adaptation.lib.data.CTAData", "ValueError", "jax.host_id", "jax.host_id", "jax.host_count", "jax.host_count", "str", "AdaMatch.params.items", "v.parse().batch().nchw().map().prefetch", "testset.items", "jax.devices", "jax.devices", "v.parse().batch().nchw().map", "v.parse().batch().nchw", "v.parse().batch", "v.parse"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.shared.util.setup_tf", "home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.DataSetSSL.parse_name", "home.repos.pwc.inspect_result.google-research_adamatch.shared.train.TrainableModule.train", "home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.noisy_student.PseudoLabeler.stop", "home.repos.pwc.inspect_result.google-research_adamatch.zoo.models.network", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.nchw", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.parse"], ["arch", "=", "FLAGS", ".", "arch", ",", "\n", "batch", "=", "FLAGS", ".", "batch", ",", "\n", "wu", "=", "FLAGS", ".", "wu", ",", "\n", "confidence", "=", "FLAGS", ".", "confidence", ",", "\n", "use_cr", "=", "FLAGS", ".", "use_cr", ",", "\n", "uratio", "=", "FLAGS", ".", "uratio", ")", "\n", "logdir", "=", "f'SSL/{FLAGS.dataset}/{FLAGS.augment}/{module.__class__.__name__}/%s'", "%", "(", "\n", "'_'", ".", "join", "(", "sorted", "(", "'%s%s'", "%", "k", "for", "k", "in", "module", ".", "params", ".", "items", "(", ")", ")", ")", ")", "\n", "logdir", "=", "os", ".", "path", ".", "join", "(", "FLAGS", ".", "logdir", ",", "logdir", ")", "\n", "test", "=", "{", "}", "\n", "for", "domain", ",", "testset", "in", "enumerate", "(", "testsets", ")", ":", "\n", "        ", "test", ".", "update", "(", "(", "k", ",", "v", ".", "parse", "(", ")", ".", "batch", "(", "FLAGS", ".", "batch", ")", ".", "nchw", "(", ")", ".", "map", "(", "lambda", "d", ":", "{", "**", "d", ",", "'domain'", ":", "domain", "}", ")", ".", "prefetch", "(", "16", ")", ")", "\n", "for", "k", ",", "v", "in", "testset", ".", "items", "(", ")", ")", "\n", "", "if", "FLAGS", ".", "augment", ".", "startswith", "(", "'('", ")", ":", "\n", "        ", "train", "=", "MixData", "(", "labeled", ".", "train", ",", "unlabeled", ".", "train", ",", "labeled", ".", "nclass", ",", "FLAGS", ".", "batch", ",", "FLAGS", ".", "uratio", ")", "\n", "", "elif", "FLAGS", ".", "augment", ".", "startswith", "(", "'CTA('", ")", ":", "\n", "        ", "train", "=", "CTAData", "(", "labeled", ".", "train", ",", "unlabeled", ".", "train", ",", "labeled", ".", "nclass", ",", "FLAGS", ".", "batch", ",", "FLAGS", ".", "uratio", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "f'Augment flag value {FLAGS.augment} not supported.'", ")", "\n", "", "module", ".", "train", "(", "FLAGS", ".", "train_mimg", "<<", "10", ",", "FLAGS", ".", "report_kimg", ",", "train", ",", "test", ",", "logdir", ",", "FLAGS", ".", "keep_ckpts", ")", "\n", "train", ".", "stop", "(", ")", "\n", "objax", ".", "util", ".", "multi_host_barrier", "(", ")", "\n", "\n", "\n", "", "if", "__name__", "==", "'__main__'", ":", "\n", "    ", "flags", ".", "DEFINE_enum", "(", "'arch'", ",", "'wrn28-2'", ",", "ARCHS", ",", "'Model architecture.'", ")", "\n", "flags", ".", "DEFINE_bool", "(", "'use_cr'", ",", "True", ",", "'Make confidence threshold proportional to real data.'", ")", "\n", "flags", ".", "DEFINE_float", "(", "'confidence'", ",", "0.9", ",", "'Confidence threshold.'", ")", "\n", "flags", ".", "DEFINE_float", "(", "'lr'", ",", "0.03", ",", "'Learning rate.'", ")", "\n", "flags", ".", "DEFINE_float", "(", "'lr_decay'", ",", "0.25", ",", "'Learning rate decay.'", ")", "\n", "flags", ".", "DEFINE_float", "(", "'wd'", ",", "0.001", ",", "'Weight decay.'", ")", "\n", "flags", ".", "DEFINE_float", "(", "'wu'", ",", "1", ",", "'Unlabeled loss weight.'", ")", "\n", "flags", ".", "DEFINE_integer", "(", "'batch'", ",", "64", ",", "'Batch size'", ")", "\n", "flags", ".", "DEFINE_integer", "(", "'uratio'", ",", "3", ",", "'Unlabeled batch size ratio'", ")", "\n", "flags", ".", "DEFINE_integer", "(", "'report_kimg'", ",", "64", ",", "'Reporting period in kibi-images.'", ")", "\n", "flags", ".", "DEFINE_integer", "(", "'train_mimg'", ",", "8", ",", "'Training duration in mega-images.'", ")", "\n", "flags", ".", "DEFINE_integer", "(", "'keep_ckpts'", ",", "5", ",", "'Number of checkpoints to keep (0 for all).'", ")", "\n", "flags", ".", "DEFINE_string", "(", "'logdir'", ",", "'experiments'", ",", "'Directory where to save checkpoints and tensorboard data.'", ")", "\n", "flags", ".", "DEFINE_string", "(", "'dataset'", ",", "'domainnet32_infograph(10,seed=1)'", ",", "'Data to train on.'", ")", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.semi_supervised_domain_adaptation.mcd.MCD.__init__": [[39, 110], ["semi_supervised_domain_adaptation.lib.train.TrainableSSDAModule.__init__", "model", "objax.optimizer.ExponentialMovingAverageModule", "absl.flags.FLAGS.arch.endswith", "objax.nn.Linear", "objax.optimizer.Momentum", "objax.optimizer.Momentum", "objax.optimizer.Momentum", "shared.train.ScheduleCos", "objax.Function.with_vars", "objax.GradValues", "objax.GradValues", "objax.GradValues", "objax.Function.with_vars", "shared.util.MyParallel", "shared.util.MyParallel", "mcd.MCD.model_ema.update_ema", "mcd.MCD.gen.vars", "objax.functional.softmax", "mcd.MCD.model_ema.vars", "mcd.MCD.gen", "mcd.MCD.__init__.get_two_outputs"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.baseline.Baseline.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nclass", ":", "int", ",", "model", ":", "Callable", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "nclass", ",", "kwargs", ")", "\n", "self", ".", "model", ":", "objax", ".", "Module", "=", "model", "(", "colors", "=", "3", ",", "nclass", "=", "nclass", ",", "**", "kwargs", ")", "\n", "self", ".", "model_ema", "=", "objax", ".", "optimizer", ".", "ExponentialMovingAverageModule", "(", "self", ".", "model", ",", "momentum", "=", "0.999", ")", "\n", "if", "FLAGS", ".", "arch", ".", "endswith", "(", "'pretrain'", ")", ":", "\n", "# Initialize weights of EMA with pretrained model's weights.", "\n", "            ", "self", ".", "model_ema", ".", "ema", ".", "momentum", "=", "0", "\n", "self", ".", "model_ema", ".", "update_ema", "(", ")", "\n", "self", ".", "model_ema", ".", "ema", ".", "momentum", "=", "0.999", "\n", "", "self", ".", "c1", ":", "objax", ".", "Module", "=", "self", ".", "model", "[", "-", "1", "]", "\n", "self", ".", "c2", ":", "objax", ".", "Module", "=", "objax", ".", "nn", ".", "Linear", "(", "self", ".", "c1", ".", "w", ".", "value", ".", "shape", "[", "0", "]", ",", "nclass", ")", "\n", "self", ".", "gen", ":", "objax", ".", "Module", "=", "self", ".", "model", "[", ":", "-", "1", "]", "\n", "self", ".", "opt1", "=", "objax", ".", "optimizer", ".", "Momentum", "(", "self", ".", "gen", ".", "vars", "(", ")", "+", "self", ".", "c1", ".", "vars", "(", "'c1'", ")", "+", "self", ".", "c2", ".", "vars", "(", "'c2'", ")", ")", "\n", "self", ".", "opt2", "=", "objax", ".", "optimizer", ".", "Momentum", "(", "self", ".", "c1", ".", "vars", "(", "'c1'", ")", "+", "self", ".", "c2", ".", "vars", "(", "'c2'", ")", ")", "\n", "self", ".", "opt3", "=", "objax", ".", "optimizer", ".", "Momentum", "(", "self", ".", "gen", ".", "vars", "(", ")", ")", "\n", "self", ".", "lr", "=", "ScheduleCos", "(", "self", ".", "params", ".", "lr", ",", "self", ".", "params", ".", "lr_decay", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "model_ema", ".", "vars", "(", ")", ")", "\n", "def", "eval_op", "(", "x", ":", "JaxArray", ")", "->", "JaxArray", ":", "\n", "            ", "return", "objax", ".", "functional", ".", "softmax", "(", "self", ".", "model_ema", "(", "x", ",", "training", "=", "False", ")", ")", "\n", "\n", "", "def", "get_two_outputs", "(", "v", ")", ":", "\n", "            ", "feat", "=", "self", ".", "gen", "(", "v", ",", "training", "=", "True", ")", "\n", "return", "self", ".", "c1", "(", "feat", ")", ",", "self", ".", "c2", "(", "feat", ")", "\n", "\n", "", "def", "loss_function_phase1", "(", "x", ",", "y", ")", ":", "\n", "            ", "x1", ",", "x2", "=", "get_two_outputs", "(", "x", "[", ":", ",", "0", "]", ")", "\n", "xes", "=", "(", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "x1", ",", "y", ")", ".", "mean", "(", ")", "+", "\n", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "x2", ",", "y", ")", ".", "mean", "(", ")", ")", "\n", "return", "xes", ",", "{", "'losses/xe'", ":", "xes", "}", "\n", "\n", "", "def", "loss_function_phase2", "(", "x", ",", "u", ",", "y", ")", ":", "\n", "            ", "saved", "=", "self", ".", "gen", ".", "vars", "(", ")", ".", "tensors", "(", ")", "\n", "x1", ",", "x2", "=", "get_two_outputs", "(", "x", "[", ":", ",", "0", "]", ")", "\n", "u1", ",", "u2", "=", "get_two_outputs", "(", "u", "[", ":", ",", "0", "]", ")", "\n", "self", ".", "gen", ".", "vars", "(", ")", ".", "assign", "(", "saved", ")", "\n", "\n", "xes", "=", "(", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "x1", ",", "y", ")", ".", "mean", "(", ")", "+", "\n", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "x2", ",", "y", ")", ".", "mean", "(", ")", ")", "\n", "dis", "=", "jn", ".", "abs", "(", "softmax", "(", "u1", ")", "-", "softmax", "(", "u2", ")", ")", ".", "mean", "(", ")", "\n", "return", "xes", "-", "dis", ",", "{", "'losses/xe2'", ":", "xes", ",", "'losses/dis2'", ":", "dis", "}", "\n", "\n", "", "def", "loss_function_phase3", "(", "u", ")", ":", "\n", "            ", "u1", ",", "u2", "=", "get_two_outputs", "(", "u", "[", ":", ",", "0", "]", ")", "\n", "dis", "=", "jn", ".", "abs", "(", "softmax", "(", "u1", ")", "-", "softmax", "(", "u2", ")", ")", ".", "mean", "(", ")", "\n", "return", "dis", ",", "{", "'losses/dis3'", ":", "dis", "}", "\n", "\n", "", "gv1", "=", "objax", ".", "GradValues", "(", "loss_function_phase1", ",", "self", ".", "gen", ".", "vars", "(", ")", "+", "self", ".", "c1", ".", "vars", "(", "'c1'", ")", "+", "self", ".", "c2", ".", "vars", "(", "'c2'", ")", ")", "\n", "gv2", "=", "objax", ".", "GradValues", "(", "loss_function_phase2", ",", "self", ".", "c1", ".", "vars", "(", "'c1'", ")", "+", "self", ".", "c2", ".", "vars", "(", "'c2'", ")", ")", "\n", "gv3", "=", "objax", ".", "GradValues", "(", "loss_function_phase3", ",", "self", ".", "gen", ".", "vars", "(", ")", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "vars", "(", ")", ")", "\n", "def", "train_op", "(", "step", ",", "x", ",", "y", ",", "u", ",", "probe", "=", "None", ")", ":", "\n", "            ", "y_probe", "=", "eval_op", "(", "probe", ")", "if", "probe", "is", "not", "None", "else", "None", "\n", "p", "=", "step", "/", "(", "FLAGS", ".", "train_mimg", "<<", "20", ")", "\n", "lr", "=", "self", ".", "lr", "(", "p", ")", "\n", "g", ",", "v1", "=", "gv1", "(", "x", ",", "y", ")", "\n", "self", ".", "opt1", "(", "lr", ",", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "g", ")", ")", "\n", "g", ",", "v2", "=", "gv2", "(", "x", ",", "u", ",", "y", ")", "\n", "self", ".", "opt2", "(", "lr", ",", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "g", ")", ")", "\n", "v3", "=", "{", "}", "\n", "for", "_", "in", "range", "(", "self", ".", "params", ".", "wu", ")", ":", "\n", "                ", "g", ",", "v", "=", "gv3", "(", "u", ")", "\n", "for", "k", ",", "val", "in", "v", "[", "1", "]", ".", "items", "(", ")", ":", "\n", "                    ", "v3", "[", "k", "]", "=", "v3", ".", "get", "(", "k", ",", "0", ")", "+", "val", "/", "self", ".", "params", ".", "wu", "\n", "", "self", ".", "opt3", "(", "lr", ",", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "g", ")", ")", "\n", "", "self", ".", "model_ema", ".", "update_ema", "(", ")", "\n", "return", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "{", "'monitors/lr'", ":", "lr", ",", "**", "v1", "[", "1", "]", ",", "**", "v2", "[", "1", "]", ",", "**", "v", "[", "1", "]", "}", ")", ",", "y_probe", "\n", "\n", "", "self", ".", "train_op", "=", "MyParallel", "(", "train_op", ",", "reduce", "=", "lambda", "x", ":", "x", ")", "\n", "self", ".", "eval_op", "=", "MyParallel", "(", "eval_op", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.semi_supervised_domain_adaptation.mcd.main": [[112, 147], ["print", "print", "shared.util.setup_tf", "shared.data.ssl.DataSetSSL.parse_name", "mcd.MCD", "os.path.join", "enumerate", "absl.flags.FLAGS.augment.startswith", "MCD.train", "semi_supervised_domain_adaptation.lib.data.CTAData.stop", "shared.zoo.models.network", "sorted", "test.update", "semi_supervised_domain_adaptation.lib.data.MixData", "absl.flags.FLAGS.augment.startswith", "shared.data.fsl.DATASETS", "shared.data.ssl.DATASETS", "shared.data.fsl.DATASETS", "semi_supervised_domain_adaptation.lib.data.CTAData", "ValueError", "jax.host_id", "jax.host_id", "jax.host_count", "jax.host_count", "str", "MCD.params.items", "v.parse().batch().nchw().map().prefetch", "testset.items", "jax.devices", "jax.devices", "v.parse().batch().nchw().map", "v.parse().batch().nchw", "v.parse().batch", "v.parse"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.shared.util.setup_tf", "home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.DataSetSSL.parse_name", "home.repos.pwc.inspect_result.google-research_adamatch.shared.train.TrainableModule.train", "home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.noisy_student.PseudoLabeler.stop", "home.repos.pwc.inspect_result.google-research_adamatch.zoo.models.network", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.nchw", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.parse"], ["", "", "def", "main", "(", "argv", ")", ":", "\n", "    ", "del", "argv", "\n", "print", "(", "'JAX host: %d / %d'", "%", "(", "jax", ".", "host_id", "(", ")", ",", "jax", ".", "host_count", "(", ")", ")", ")", "\n", "print", "(", "'JAX devices:\\n%s'", "%", "'\\n'", ".", "join", "(", "str", "(", "d", ")", "for", "d", "in", "jax", ".", "devices", "(", ")", ")", ",", "flush", "=", "True", ")", "\n", "setup_tf", "(", ")", "\n", "dataset_name", ",", "samples_per_class", ",", "dataset_seed", "=", "DataSetSSL", ".", "parse_name", "(", "f'{FLAGS.dataset}'", ")", "\n", "labeled", "=", "SSL_DATASETS", "(", ")", "[", "dataset_name", "]", "(", "samples_per_class", ",", "dataset_seed", ")", "\n", "unlabeled", "=", "FSL_DATASETS", "(", ")", "[", "f'{dataset_name}-0'", "]", "(", ")", "\n", "testsets", "=", "[", "unlabeled", ".", "test", "]", "\n", "module", "=", "MCD", "(", "labeled", ".", "nclass", ",", "network", "(", "FLAGS", ".", "arch", ")", ",", "\n", "lr", "=", "FLAGS", ".", "lr", ",", "\n", "lr_decay", "=", "FLAGS", ".", "lr_decay", ",", "\n", "wd", "=", "FLAGS", ".", "wd", ",", "\n", "arch", "=", "FLAGS", ".", "arch", ",", "\n", "batch", "=", "FLAGS", ".", "batch", ",", "\n", "wu", "=", "FLAGS", ".", "wu", ",", "\n", "uratio", "=", "FLAGS", ".", "uratio", ")", "\n", "logdir", "=", "f'SSL/{FLAGS.dataset}/{FLAGS.augment}/{module.__class__.__name__}/%s'", "%", "(", "\n", "'_'", ".", "join", "(", "sorted", "(", "'%s%s'", "%", "k", "for", "k", "in", "module", ".", "params", ".", "items", "(", ")", ")", ")", ")", "\n", "logdir", "=", "os", ".", "path", ".", "join", "(", "FLAGS", ".", "logdir", ",", "logdir", ")", "\n", "test", "=", "{", "}", "\n", "for", "domain", ",", "testset", "in", "enumerate", "(", "testsets", ")", ":", "\n", "            ", "test", ".", "update", "(", "(", "k", ",", "v", ".", "parse", "(", ")", ".", "batch", "(", "FLAGS", ".", "batch", ")", ".", "nchw", "(", ")", ".", "map", "(", "lambda", "d", ":", "{", "**", "d", ",", "'domain'", ":", "domain", "}", ")", ".", "prefetch", "(", "16", ")", ")", "\n", "for", "k", ",", "v", "in", "testset", ".", "items", "(", ")", ")", "\n", "", "if", "FLAGS", ".", "augment", ".", "startswith", "(", "'('", ")", ":", "\n", "        ", "train", "=", "MixData", "(", "labeled", ".", "train", ",", "unlabeled", ".", "train", ",", "labeled", ".", "nclass", ",", "FLAGS", ".", "batch", ",", "FLAGS", ".", "uratio", ")", "\n", "", "elif", "FLAGS", ".", "augment", ".", "startswith", "(", "'CTA('", ")", ":", "\n", "        ", "train", "=", "CTAData", "(", "labeled", ".", "train", ",", "unlabeled", ".", "train", ",", "labeled", ".", "nclass", ",", "FLAGS", ".", "batch", ",", "FLAGS", ".", "uratio", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "f'Augment flag value {FLAGS.augment} not supported.'", ")", "\n", "", "module", ".", "train", "(", "FLAGS", ".", "train_mimg", "<<", "10", ",", "FLAGS", ".", "report_kimg", ",", "train", ",", "test", ",", "logdir", ",", "FLAGS", ".", "keep_ckpts", ")", "\n", "train", ".", "stop", "(", ")", "\n", "objax", ".", "util", ".", "multi_host_barrier", "(", ")", "\n", "\n", "\n", "", "if", "__name__", "==", "'__main__'", ":", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.semi_supervised_domain_adaptation.baseline.Baseline.__init__": [[38, 87], ["semi_supervised_domain_adaptation.lib.train.TrainableSSDAModule.__init__", "model", "objax.optimizer.ExponentialMovingAverageModule", "absl.flags.FLAGS.arch.endswith", "objax.Module", "objax.nn.ExponentialMovingAverage", "objax.nn.MovingAverage", "objax.optimizer.Momentum", "shared.train.ScheduleCos", "objax.Function.with_vars", "objax.GradValues", "objax.Function.with_vars", "shared.util.MyParallel", "shared.util.MyParallel", "baseline.Baseline.model_ema.update_ema", "baseline.Baseline.model.vars", "baseline.Baseline.stats.vars", "objax.functional.softmax", "baseline.Baseline.model_ema.vars", "jax.concatenate().reshape", "jax.concatenate().reshape", "baseline.Baseline.model", "baseline.Baseline.lr", "objax.GradValues.", "baseline.Baseline.opt", "baseline.Baseline.model_ema.update_ema", "baseline.Baseline.vars", "baseline.Baseline.model_ema", "jax.split", "jax.split", "sum", "baseline.Baseline.__init__.eval_op"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.baseline.Baseline.__init__"], ["        ", "super", "(", ")", ".", "__init__", "(", "nclass", ",", "kwargs", ")", "\n", "self", ".", "model", ":", "objax", ".", "Module", "=", "model", "(", "colors", "=", "3", ",", "nclass", "=", "nclass", ",", "**", "kwargs", ")", "\n", "self", ".", "model_ema", "=", "objax", ".", "optimizer", ".", "ExponentialMovingAverageModule", "(", "self", ".", "model", ",", "momentum", "=", "0.999", ")", "\n", "train_vars", "=", "self", ".", "model", ".", "vars", "(", ")", "\n", "self", ".", "opt", "=", "objax", ".", "optimizer", ".", "Momentum", "(", "train_vars", ")", "\n", "self", ".", "lr", "=", "ScheduleCos", "(", "self", ".", "params", ".", "lr", ",", "self", ".", "params", ".", "lr_decay", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "model_ema", ".", "vars", "(", ")", ")", "\n", "def", "eval_op", "(", "x", ":", "JaxArray", ")", "->", "JaxArray", ":", "\n", "            ", "return", "objax", ".", "functional", ".", "softmax", "(", "self", ".", "model_ema", "(", "x", ",", "training", "=", "False", ")", ")", "\n", "\n", "", "def", "loss_function", "(", "sx", ",", "sy", ",", "tx", ",", "ty", ")", ":", "\n", "            ", "c", ",", "h", ",", "w", "=", "sx", ".", "shape", "[", "-", "3", ":", "]", "\n", "xu", "=", "jn", ".", "concatenate", "(", "(", "sx", ",", "tx", ")", ")", ".", "reshape", "(", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", ")", "\n", "logit", "=", "self", ".", "model", "(", "xu", ",", "training", "=", "True", ")", "\n", "logit_sx", ",", "logit_tx", "=", "jn", ".", "split", "(", "logit", ",", "(", "2", "*", "sx", ".", "shape", "[", "0", "]", ",", ")", ")", "\n", "logit_sx_weak", ",", "logit_sx_strong", "=", "logit_sx", "[", ":", ":", "2", "]", ",", "logit_sx", "[", "1", ":", ":", "2", "]", "\n", "logit_tx_weak", ",", "logit_tx_strong", "=", "logit_tx", "[", ":", ":", "2", "]", ",", "logit_tx", "[", "1", ":", ":", "2", "]", "\n", "\n", "xe", "=", "0.25", "*", "(", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_sx_weak", ",", "sy", ")", ".", "mean", "(", ")", "+", "\n", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_sx_strong", ",", "sy", ")", ".", "mean", "(", ")", "+", "\n", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_tx_weak", ",", "ty", ")", ".", "mean", "(", ")", "+", "\n", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_tx_strong", ",", "ty", ")", ".", "mean", "(", ")", ")", "\n", "wd", "=", "0.5", "*", "sum", "(", "(", "v", ".", "value", "**", "2", ")", ".", "sum", "(", ")", "for", "k", ",", "v", "in", "train_vars", ".", "items", "(", ")", "if", "k", ".", "endswith", "(", "'.w'", ")", ")", "\n", "\n", "loss", "=", "xe", "+", "self", ".", "params", ".", "wd", "*", "wd", "\n", "return", "loss", ",", "{", "'losses/xe'", ":", "xe", ",", "'losses/wd'", ":", "wd", "}", "\n", "\n", "", "gv", "=", "objax", ".", "GradValues", "(", "loss_function", ",", "train_vars", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "vars", "(", ")", ")", "\n", "def", "train_op", "(", "step", ",", "sx", ",", "sy", ",", "tx", ",", "ty", ",", "probe", "=", "None", ")", ":", "\n", "            ", "y_probe", "=", "eval_op", "(", "probe", ")", "if", "probe", "is", "not", "None", "else", "None", "\n", "p", "=", "step", "/", "(", "FLAGS", ".", "train_mimg", "<<", "20", ")", "\n", "lr", "=", "self", ".", "lr", "(", "p", ")", "\n", "g", ",", "v", "=", "gv", "(", "sx", ",", "sy", ",", "tx", ",", "ty", ")", "\n", "self", ".", "opt", "(", "lr", ",", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "g", ")", ")", "\n", "self", ".", "model_ema", ".", "update_ema", "(", ")", "\n", "return", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "{", "'monitors/lr'", ":", "lr", ",", "**", "v", "[", "1", "]", "}", ")", ",", "y_probe", "\n", "\n", "", "self", ".", "train_op", "=", "MyParallel", "(", "train_op", ",", "reduce", "=", "lambda", "x", ":", "x", ")", "\n", "self", ".", "eval_op", "=", "MyParallel", "(", "eval_op", ")", "\n", "\n", "\n", "", "", "def", "main", "(", "argv", ")", ":", "\n", "    ", "del", "argv", "\n", "print", "(", "'JAX host: %d / %d'", "%", "(", "jax", ".", "host_id", "(", ")", ",", "jax", ".", "host_count", "(", ")", ")", ")", "\n", "print", "(", "'JAX devices:\\n%s'", "%", "'\\n'", ".", "join", "(", "str", "(", "d", ")", "for", "d", "in", "jax", ".", "devices", "(", ")", ")", ",", "flush", "=", "True", ")", "\n", "setup_tf", "(", ")", "\n", "# In fully supervised, source and target are both labeled, we just kept the same names to reuse the code.", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.semi_supervised_domain_adaptation.baseline.main": [[89, 123], ["print", "print", "shared.util.setup_tf", "shared.data.ssl.DataSetSSL.parse_name", "baseline.Baseline", "os.path.join", "enumerate", "absl.flags.FLAGS.augment.startswith", "Baseline.train", "semi_supervised_domain_adaptation.lib.data.CTAData.stop", "shared.zoo.models.network", "sorted", "test.update", "semi_supervised_domain_adaptation.lib.data.MixData", "absl.flags.FLAGS.augment.startswith", "shared.data.fsl.DATASETS", "shared.data.ssl.DATASETS", "shared.data.fsl.DATASETS", "semi_supervised_domain_adaptation.lib.data.CTAData", "ValueError", "jax.host_id", "jax.host_id", "jax.host_count", "jax.host_count", "str", "Baseline.params.items", "v.parse().batch().nchw().map().prefetch", "testset.items", "jax.devices", "jax.devices", "v.parse().batch().nchw().map", "v.parse().batch().nchw", "v.parse().batch", "v.parse"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.shared.util.setup_tf", "home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.DataSetSSL.parse_name", "home.repos.pwc.inspect_result.google-research_adamatch.shared.train.TrainableModule.train", "home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.noisy_student.PseudoLabeler.stop", "home.repos.pwc.inspect_result.google-research_adamatch.zoo.models.network", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.nchw", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.parse"], ["        ", "FLAGS", ".", "target", "=", "FLAGS", ".", "source", "\n", "", "source", "=", "FSL_DATASETS", "(", ")", "[", "f'{FLAGS.dataset}_{FLAGS.source}-0'", "]", "(", ")", "\n", "target", "=", "FSL_DATASETS", "(", ")", "[", "f'{FLAGS.dataset}_{FLAGS.target}-0'", "]", "(", ")", "\n", "module", "=", "Baseline", "(", "source", ".", "nclass", ",", "network", "(", "FLAGS", ".", "arch", ")", ",", "\n", "lr", "=", "FLAGS", ".", "lr", ",", "\n", "lr_decay", "=", "FLAGS", ".", "lr_decay", ",", "\n", "wd", "=", "FLAGS", ".", "wd", ",", "\n", "arch", "=", "FLAGS", ".", "arch", ",", "\n", "batch", "=", "FLAGS", ".", "batch", ")", "\n", "logdir", "=", "f'FSL/{FLAGS.dataset}/{FLAGS.source}/{FLAGS.target}/{FLAGS.augment}/{module.__class__.__name__}/%s'", "%", "(", "\n", "'_'", ".", "join", "(", "sorted", "(", "'%s%s'", "%", "k", "for", "k", "in", "module", ".", "params", ".", "items", "(", ")", ")", ")", ")", "\n", "logdir", "=", "os", ".", "path", ".", "join", "(", "FLAGS", ".", "logdir", ",", "logdir", ")", "\n", "test", "=", "{", "\n", "f'{FLAGS.source}_to_{FLAGS.target}'", ":", "(", "list", "(", "target", ".", "test", ".", "values", "(", ")", ")", "[", "0", "]", ".", "parse", "(", ")", ".", "batch", "(", "FLAGS", ".", "batch", ")", ".", "nchw", "(", ")", "\n", ".", "map", "(", "lambda", "d", ":", "{", "**", "d", ",", "'domain'", ":", "0", "}", ")", ".", "prefetch", "(", "16", ")", ")", ",", "\n", "f'{FLAGS.target}_to_{FLAGS.source}'", ":", "(", "list", "(", "source", ".", "test", ".", "values", "(", ")", ")", "[", "0", "]", ".", "parse", "(", ")", ".", "batch", "(", "FLAGS", ".", "batch", ")", ".", "nchw", "(", ")", "\n", ".", "map", "(", "lambda", "d", ":", "{", "**", "d", ",", "'domain'", ":", "1", "}", ")", ".", "prefetch", "(", "16", ")", ")", ",", "\n", "}", "\n", "if", "FLAGS", ".", "test_extra", ":", "\n", "        ", "for", "ds_name", "in", "FLAGS", ".", "test_extra", ".", "split", "(", "','", ")", ":", "\n", "            ", "ds", "=", "FSL_DATASETS", "(", ")", "[", "f'{FLAGS.dataset}_{ds_name}-0'", "]", "(", ")", "\n", "test", "[", "f'{FLAGS.target}_to_{ds_name}'", "]", "=", "(", "list", "(", "ds", ".", "test", ".", "values", "(", ")", ")", "[", "0", "]", ".", "parse", "(", ")", ".", "batch", "(", "FLAGS", ".", "batch", ")", ".", "nchw", "(", ")", "\n", ".", "map", "(", "lambda", "d", ":", "{", "**", "d", ",", "'domain'", ":", "1", "}", ")", ".", "prefetch", "(", "16", ")", ")", "\n", "", "", "if", "FLAGS", ".", "augment", ".", "startswith", "(", "'('", ")", ":", "\n", "        ", "train", "=", "MixData", "(", "source", ".", "train", ",", "target", ".", "train", ",", "source", ".", "nclass", ",", "FLAGS", ".", "batch", ")", "\n", "", "elif", "FLAGS", ".", "augment", ".", "startswith", "(", "'CTA('", ")", ":", "\n", "        ", "train", "=", "CTAData", "(", "source", ".", "train", ",", "target", ".", "train", ",", "source", ".", "nclass", ",", "FLAGS", ".", "batch", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "f'Augment flag value {FLAGS.augment} not supported.'", ")", "\n", "", "module", ".", "train", "(", "FLAGS", ".", "train_mimg", "<<", "10", ",", "FLAGS", ".", "report_kimg", ",", "train", ",", "test", ",", "logdir", ",", "FLAGS", ".", "keep_ckpts", ")", "\n", "train", ".", "stop", "(", ")", "\n", "\n", "\n", "", "if", "__name__", "==", "'__main__'", ":", "\n", "    ", "flags", ".", "DEFINE_enum", "(", "'arch'", ",", "'wrn28-2'", ",", "ARCHS", ",", "'Model architecture.'", ")", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.shared.train.TrainableModule.__init__": [[35, 38], ["objax.util.EasyDict"], "methods", ["None"], ["", "p", "=", "self", ".", "eval_op", "(", "x", ")", "[", ":", "y", ".", "shape", "[", "0", "]", "]", "\n", "accuracy", "+=", "(", "np", ".", "argmax", "(", "p", ",", "axis", "=", "1", ")", "==", "data", "[", "'label'", "]", ".", "numpy", "(", ")", ")", ".", "sum", "(", ")", "\n", "", "return", "accuracy", "/", "total", "if", "total", "else", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.shared.train.TrainableModule.__str__": [[39, 44], ["sorted", "str", "train.TrainableModule.params.items", "text.append", "train.TrainableModule.model.vars"], "methods", ["None"], ["", "test_accuracy", "=", "{", "key", ":", "get_accuracy", "(", "value", ")", "for", "key", ",", "value", "in", "test", ".", "items", "(", ")", "}", "\n", "to_print", "=", "[", "]", "\n", "for", "key", ",", "value", "in", "sorted", "(", "test_accuracy", ".", "items", "(", ")", ")", ":", "\n", "            ", "summary", ".", "scalar", "(", "'accuracy/%s'", "%", "key", ",", "100", "*", "value", ")", "\n", "to_print", ".", "append", "(", "'Acccuracy/%s %.2f'", "%", "(", "key", ",", "summary", "[", "'accuracy/%s'", "%", "key", "]", "(", ")", ")", ")", "\n", "", "print", "(", "'Epoch %-4d  Loss %.2f  %s'", "%", "(", "epoch", "+", "1", ",", "summary", "[", "'losses/xe'", "]", "(", ")", ",", "' '", ".", "join", "(", "to_print", ")", ")", ")", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.shared.train.TrainableModule.train_step": [[45, 51], ["train.TrainableModule.train_op", "train.TrainableModule.items", "jax.numpy.isnan", "summary.scalar", "ValueError", "float"], "methods", ["None"], ["\n", "", "def", "train_step", "(", "self", ",", "summary", ",", "data", ",", "step", ")", ":", "\n", "        ", "kv", ",", "probe", "=", "self", ".", "train_op", "(", "step", ",", "\n", "data", "[", "'sx'", "]", "[", "'image'", "]", ",", "data", "[", "'sx'", "]", "[", "'label'", "]", ",", "\n", "data", "[", "'tx'", "]", "[", "'image'", "]", ",", "data", "[", "'tx'", "]", "[", "'label'", "]", ",", "data", ".", "get", "(", "'probe'", ")", ")", "\n", "if", "'probe_callback'", "in", "data", ":", "\n", "            ", "data", "[", "'probe_callback'", "]", "(", "jn", ".", "concatenate", "(", "probe", ")", ")", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.shared.train.TrainableModule.eval": [[52, 77], ["sorted", "print", "tqdm.tqdm.tqdm", "train.TrainableModule.eval.get_accuracy"], "methods", ["None"], ["", "for", "k", ",", "v", "in", "kv", ".", "items", "(", ")", ":", "\n", "            ", "v", "=", "v", "[", "0", "]", "\n", "if", "jn", ".", "isnan", "(", "v", ")", ":", "\n", "                ", "raise", "ValueError", "(", "'NaN'", ",", "k", ")", "\n", "", "summary", ".", "scalar", "(", "k", ",", "float", "(", "v", ")", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.google-research_adamatch.shared.train.TrainableModule.auto_gpu": [[79, 83], ["isinstance", "objax.util.dummy_context_mgr", "train.TrainableModule.train_op.vars().replicate", "train.TrainableModule.train_op.vars"], "methods", ["None"], []], "home.repos.pwc.inspect_result.google-research_adamatch.shared.train.TrainableModule.train": [[84, 111], ["objax.io.Checkpoint", "objax.jaxboard.SummaryWriter", "iter", "range", "print", "print", "print", "print", "print", "print", "print", "objax.io.Checkpoint.restore", "os.path.join", "objax.jaxboard.Summary", "tqdm.tqdm.std.trange", "objax.jaxboard.SummaryWriter.write", "objax.io.Checkpoint.save", "train.TrainableModule.vars", "train.TrainableModule.auto_gpu", "train.TrainableModule.eval", "train.TrainableModule.vars", "train.TrainableModule.train_step", "os.path.basename", "test.keys", "next", "numpy.uint32", "jax.numpy.uint32"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.debug.show_images.save", "home.repos.pwc.inspect_result.google-research_adamatch.shared.train.TrainableModule.auto_gpu", "home.repos.pwc.inspect_result.google-research_adamatch.shared.train.TrainableModule.eval", "home.repos.pwc.inspect_result.google-research_adamatch.shared.train.TrainableModule.train_step"], []], "home.repos.pwc.inspect_result.google-research_adamatch.shared.train.ScheduleCosPhases.__init__": [[114, 118], ["float", "tuple", "tuple", "map"], "methods", ["None"], []], "home.repos.pwc.inspect_result.google-research_adamatch.shared.train.ScheduleCosPhases.__call__": [[119, 130], ["jax.lax.cond", "jax.numpy.logical_and", "jax.numpy.cos", "jax.numpy.greater_equal", "jax.numpy.less_equal"], "methods", ["None"], []], "home.repos.pwc.inspect_result.google-research_adamatch.shared.train.ScheduleCos.__init__": [[133, 136], ["float", "jax.numpy.arccos"], "methods", ["None"], []], "home.repos.pwc.inspect_result.google-research_adamatch.shared.train.ScheduleCos.__call__": [[137, 139], ["jax.numpy.cos"], "methods", ["None"], []], "home.repos.pwc.inspect_result.google-research_adamatch.shared.util.StoppableThread.__init__": [[23, 26], ["threading.Thread.__init__", "threading.Event"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.baseline.Baseline.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "StoppableThread", ",", "self", ")", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "self", ".", "_stop_event", "=", "threading", ".", "Event", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.shared.util.StoppableThread.stop": [[27, 29], ["util.StoppableThread._stop_event.set"], "methods", ["None"], ["", "def", "stop", "(", "self", ")", ":", "\n", "        ", "self", ".", "_stop_event", ".", "set", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.shared.util.StoppableThread.stopped": [[30, 32], ["util.StoppableThread._stop_event.is_set"], "methods", ["None"], ["", "def", "stopped", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_stop_event", ".", "is_set", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.shared.util.MyParallel.device_reshape": [[35, 44], ["hasattr", "x.reshape", "numpy.broadcast_to", "type"], "methods", ["None"], ["    ", "def", "device_reshape", "(", "self", ",", "x", ":", "JaxArray", ")", "->", "JaxArray", ":", "\n", "        ", "\"\"\"Utility to reshape an input array in order to broadcast to multiple devices.\"\"\"", "\n", "assert", "hasattr", "(", "x", ",", "'ndim'", ")", ",", "f'Expected JaxArray, got {type(x)}. If you are trying to pass a scalar to '", "f'parallel, first convert it to a JaxArray, for example np.float(0.5)'", "\n", "if", "x", ".", "ndim", "==", "0", ":", "\n", "            ", "return", "np", ".", "broadcast_to", "(", "x", ",", "[", "self", ".", "ndevices", "]", ")", "# Use np instead of jnp, 2x faster.", "\n", "", "assert", "x", ".", "shape", "[", "0", "]", "%", "self", ".", "ndevices", "==", "0", ",", "f'Must be able to equally divide batch {x.shape} among '", "f'{self.ndevices} devices, but does not go equally.'", "\n", "return", "x", ".", "reshape", "(", "(", "self", ".", "ndevices", ",", "x", ".", "shape", "[", "0", "]", "//", "self", ".", "ndevices", ")", "+", "x", ".", "shape", "[", "1", ":", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.shared.util.setup_tf": [[46, 48], ["tensorflow.config.experimental.set_visible_devices"], "function", ["None"], ["", "", "def", "setup_tf", "(", ")", ":", "\n", "    ", "tf", ".", "config", ".", "experimental", ".", "set_visible_devices", "(", "[", "]", ",", "\"GPU\"", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.google-research_adamatch.zoo.models.preprocess._swap_channel": [[27, 30], ["None"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "_swap_channel", "(", "x", ")", ":", "\n", "        ", "return", "x", "[", ":", ",", ":", ":", "-", "1", ",", ":", ",", ":", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.zoo.models.preprocess._scale_back": [[31, 34], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_scale_back", "(", "x", ")", ":", "\n", "        ", "return", "(", "x", "*", "128", ")", "+", "127.5", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.zoo.models.preprocess._subtract_mean": [[35, 37], ["jax.array"], "methods", ["None"], ["", "def", "_subtract_mean", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", "-", "jn", ".", "array", "(", "[", "103.939", ",", "116.779", ",", "123.68", "]", ")", "[", "None", ",", ":", ",", "None", ",", "None", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.zoo.models.preprocess.__init__": [[38, 41], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.baseline.Baseline.__init__"], ["", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "ops", "=", "[", "self", ".", "_swap_channel", ",", "self", ".", "_scale_back", ",", "self", ".", "_subtract_mean", "]", "\n", "super", "(", ")", ".", "__init__", "(", "ops", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.zoo.models.resnet": [[43, 45], ["cls", "objax.util.local_kwargs"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.zoo.wideresnet.local_kwargs"], ["", "", "def", "resnet", "(", "cls", ",", "colors", ",", "nclass", ",", "bn", "=", "objax", ".", "nn", ".", "BatchNorm2D", ",", "**", "kwargs", ")", ":", "\n", "    ", "return", "cls", "(", "colors", ",", "nclass", ",", "normalization_fn", "=", "bn", ",", "**", "objax", ".", "util", ".", "local_kwargs", "(", "kwargs", ",", "ResNet101", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.zoo.models.resnet_pretrained": [[46, 50], ["models.preprocess", "cls", "objax.nn.Sequential"], "function", ["None"], ["", "def", "resnet_pretrained", "(", "cls", ",", "colors", ",", "nclass", ",", "bn", "=", "objax", ".", "nn", ".", "BatchNorm2D", ",", "**", "kwargs", ")", ":", "\n", "    ", "preprocess_input", "=", "preprocess", "(", ")", "\n", "model", "=", "cls", "(", "include_top", "=", "False", ",", "num_classes", "=", "nclass", ")", "\n", "return", "objax", ".", "nn", ".", "Sequential", "(", "preprocess_input", "+", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.zoo.models.network": [[51, 66], ["ValueError", "functools.partial", "functools.partial", "functools.partial", "functools.partial", "functools.partial", "functools.partial", "functools.partial"], "function", ["None"], ["", "def", "network", "(", "arch", ":", "str", ")", ":", "\n", "    ", "if", "arch", "==", "'wrn28-2'", ":", "\n", "        ", "return", "functools", ".", "partial", "(", "WideResNet", ",", "scales", "=", "3", ",", "filters", "=", "32", ",", "repeat", "=", "4", ")", "\n", "", "elif", "arch", "==", "'wrn28-4'", ":", "\n", "        ", "return", "functools", ".", "partial", "(", "WideResNet", ",", "scales", "=", "3", ",", "filters", "=", "64", ",", "repeat", "=", "4", ")", "\n", "", "elif", "arch", "==", "'wrn34-2'", ":", "\n", "        ", "return", "functools", ".", "partial", "(", "WideResNet", ",", "scales", "=", "4", ",", "filters", "=", "32", ",", "repeat", "=", "4", ")", "\n", "", "elif", "arch", "==", "'wrn40-2'", ":", "\n", "        ", "return", "functools", ".", "partial", "(", "WideResNet", ",", "scales", "=", "5", ",", "filters", "=", "32", ",", "repeat", "=", "4", ")", "\n", "", "elif", "arch", "==", "'resnet101'", ":", "\n", "        ", "return", "functools", ".", "partial", "(", "resnet", ",", "cls", "=", "ResNet101", ")", "\n", "", "elif", "arch", "==", "'resnet101pretrain'", ":", "\n", "        ", "return", "functools", ".", "partial", "(", "resnet_pretrained", ",", "cls", "=", "functools", ".", "partial", "(", "load_pretrained_weights_from_keras", ",", "\n", "arch", "=", "'ResNet101'", ")", ")", "\n", "", "raise", "ValueError", "(", "'Architecture not recognized'", ",", "arch", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.google-research_adamatch.zoo.wideresnet.WideResNetBlock.__init__": [[43, 51], ["bn", "objax.nn.Sequential", "objax.nn.Conv2D", "objax.nn.Conv2D", "bn", "objax.nn.Conv2D", "wideresnet.conv_args", "wideresnet.conv_args", "wideresnet.conv_args"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.zoo.wideresnet.conv_args", "home.repos.pwc.inspect_result.google-research_adamatch.zoo.wideresnet.conv_args", "home.repos.pwc.inspect_result.google-research_adamatch.zoo.wideresnet.conv_args"], ["    ", "def", "__init__", "(", "self", ",", "nin", ":", "int", ",", "nout", ":", "int", ",", "stride", ":", "int", "=", "1", ",", "activate_before_residual", ":", "bool", "=", "False", ",", "\n", "bn", ":", "Callable", "=", "objax", ".", "nn", ".", "BatchNorm2D", ")", ":", "\n", "        ", "self", ".", "activate_before_residual", "=", "activate_before_residual", "\n", "self", ".", "bn", "=", "bn", "(", "nin", ",", "momentum", "=", "0.999", ")", "\n", "self", ".", "residual", "=", "objax", ".", "nn", ".", "Sequential", "(", "[", "objax", ".", "nn", ".", "Conv2D", "(", "nin", ",", "nout", ",", "3", ",", "strides", "=", "stride", ",", "**", "conv_args", "(", "3", ",", "nout", ")", ")", ",", "\n", "bn", "(", "nout", ",", "momentum", "=", "0.999", ")", ",", "leaky_relu", ",", "\n", "objax", ".", "nn", ".", "Conv2D", "(", "nout", ",", "nout", ",", "3", ",", "**", "conv_args", "(", "3", ",", "nout", ")", ")", "]", ")", "\n", "self", ".", "passthrough", "=", "objax", ".", "nn", ".", "Conv2D", "(", "nin", ",", "nout", ",", "1", ",", "strides", "=", "stride", ",", "**", "conv_args", "(", "1", ",", "nout", ")", ")", "if", "nin", "!=", "nout", "else", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.zoo.wideresnet.WideResNetBlock.__call__": [[52, 59], ["wideresnet.leaky_relu", "wideresnet.WideResNetBlock.bn", "wideresnet.WideResNetBlock.passthrough", "wideresnet.WideResNetBlock.residual", "wideresnet.local_kwargs"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.zoo.wideresnet.leaky_relu", "home.repos.pwc.inspect_result.google-research_adamatch.zoo.wideresnet.local_kwargs"], ["", "def", "__call__", "(", "self", ",", "x", ":", "JaxArray", ",", "**", "kwargs", ")", "->", "JaxArray", ":", "\n", "        ", "y", "=", "leaky_relu", "(", "self", ".", "bn", "(", "x", ",", "**", "local_kwargs", "(", "self", ".", "bn", ",", "**", "kwargs", ")", ")", ")", "\n", "if", "self", ".", "activate_before_residual", ":", "\n", "            ", "x", "=", "y", "\n", "", "if", "self", ".", "passthrough", ":", "\n", "            ", "x", "=", "self", ".", "passthrough", "(", "x", ")", "\n", "", "return", "x", "+", "self", ".", "residual", "(", "y", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.zoo.wideresnet.WideResNet.mean_reduce": [[62, 65], ["x.mean"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "mean_reduce", "(", "x", ":", "JaxArray", ")", "->", "JaxArray", ":", "\n", "        ", "return", "x", ".", "mean", "(", "(", "2", ",", "3", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.zoo.wideresnet.WideResNet.__init__": [[66, 79], ["range", "ops.extend", "super().__init__", "objax.nn.Conv2D", "ops.append", "ops.extend", "wideresnet.WideResNetBlock", "bn", "objax.nn.Dropout", "objax.nn.Linear", "wideresnet.conv_args", "wideresnet.WideResNetBlock", "range"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.baseline.Baseline.__init__", "home.repos.pwc.inspect_result.google-research_adamatch.zoo.wideresnet.conv_args"], ["", "def", "__init__", "(", "self", ",", "colors", ":", "int", ",", "nclass", ":", "int", ",", "scales", ":", "int", ",", "filters", ":", "int", ",", "repeat", ":", "int", ",", "dropout", ":", "int", "=", "0", ",", "\n", "bn", ":", "Callable", "=", "objax", ".", "nn", ".", "BatchNorm2D", ",", "**", "kwargs", ")", ":", "\n", "        ", "del", "kwargs", "\n", "n", "=", "16", "\n", "ops", "=", "[", "objax", ".", "nn", ".", "Conv2D", "(", "colors", ",", "n", ",", "3", ",", "**", "conv_args", "(", "3", ",", "n", ")", ")", "]", "\n", "for", "scale", "in", "range", "(", "scales", ")", ":", "\n", "            ", "last_n", ",", "n", "=", "n", ",", "filters", "<<", "scale", "\n", "ops", ".", "append", "(", "WideResNetBlock", "(", "last_n", ",", "n", ",", "stride", "=", "2", "if", "scale", "else", "1", ",", "activate_before_residual", "=", "scale", "==", "0", ",", "bn", "=", "bn", ")", ")", "\n", "ops", ".", "extend", "(", "[", "WideResNetBlock", "(", "n", ",", "n", ",", "bn", "=", "bn", ")", "for", "_", "in", "range", "(", "repeat", "-", "1", ")", "]", ")", "\n", "", "ops", ".", "extend", "(", "[", "bn", "(", "n", ",", "momentum", "=", "0.999", ")", ",", "leaky_relu", ",", "self", ".", "mean_reduce", ",", "\n", "objax", ".", "nn", ".", "Dropout", "(", "1", "-", "dropout", ")", ",", "\n", "objax", ".", "nn", ".", "Linear", "(", "n", ",", "nclass", ",", "w_init", "=", "objax", ".", "nn", ".", "init", ".", "xavier_truncated_normal", ")", "]", ")", "\n", "super", "(", ")", ".", "__init__", "(", "ops", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.google-research_adamatch.zoo.wideresnet.local_kwargs": [[24, 32], ["inspect.signature", "next", "reversed", "kwargs.items", "s.values"], "function", ["None"], ["def", "local_kwargs", "(", "f", ",", "**", "kwargs", ")", ":", "\n", "    ", "s", "=", "inspect", ".", "signature", "(", "f", ")", ".", "parameters", "\n", "if", "s", ":", "\n", "        ", "if", "next", "(", "reversed", "(", "s", ".", "values", "(", ")", ")", ")", ".", "kind", "==", "inspect", ".", "Parameter", ".", "VAR_KEYWORD", ":", "\n", "            ", "return", "kwargs", "\n", "", "else", ":", "\n", "            ", "return", "{", "k", ":", "v", "for", "k", ",", "v", "in", "kwargs", ".", "items", "(", ")", "if", "k", "in", "s", "}", "\n", "", "", "return", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.zoo.wideresnet.leaky_relu": [[34, 36], ["objax.functional.leaky_relu"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.zoo.wideresnet.leaky_relu"], ["", "def", "leaky_relu", "(", "x", ")", ":", "\n", "    ", "return", "objax", ".", "functional", ".", "leaky_relu", "(", "x", ",", "0.1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.zoo.wideresnet.conv_args": [[38, 40], ["dict", "jax.partial", "objax.functional.rsqrt"], "function", ["None"], ["", "def", "conv_args", "(", "k", ",", "f", ")", ":", "\n", "    ", "return", "dict", "(", "w_init", "=", "jax", ".", "partial", "(", "objax", ".", "random", ".", "normal", ",", "stddev", "=", "objax", ".", "functional", ".", "rsqrt", "(", "0.5", "*", "k", "*", "k", "*", "f", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.__init__": [[96, 102], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "data", ":", "tf", ".", "data", ".", "Dataset", ",", "\n", "image_shape", ":", "Tuple", "[", "int", ",", "int", ",", "int", "]", ",", "\n", "parse_fn", ":", "Optional", "[", "Callable", "]", "=", "record_parse", ")", ":", "\n", "        ", "self", ".", "data", "=", "data", "\n", "self", ".", "parse_fn", "=", "parse_fn", "\n", "self", ".", "image_shape", "=", "image_shape", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.from_arrays": [[103, 108], ["cls", "tensorflow.data.Dataset.from_tensor_slices", "dict", "numpy.arange"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "from_arrays", "(", "cls", ",", "images", ":", "np", ".", "ndarray", ",", "labels", ":", "np", ".", "ndarray", ")", ":", "\n", "        ", "return", "cls", "(", "tf", ".", "data", ".", "Dataset", ".", "from_tensor_slices", "(", "dict", "(", "image", "=", "images", ",", "label", "=", "labels", ",", "\n", "index", "=", "np", ".", "arange", "(", "images", ".", "shape", "[", "0", "]", ",", "dtype", "=", "np", ".", "int64", ")", ")", ")", ",", "\n", "images", ".", "shape", "[", "1", ":", "]", ",", "parse_fn", "=", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.from_files": [[109, 121], ["sorted", "tensorflow.data.TFRecordDataset", "cls", "sum", "ValueError", "tensorflow.data.TFRecordDataset.cache", "tensorflow.data.TFRecordDataset.enumerate", "len", "tensorflow.io.gfile.glob"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "from_files", "(", "cls", ",", "filenames", ":", "List", "[", "str", "]", ",", "\n", "image_shape", ":", "Tuple", "[", "int", ",", "int", ",", "int", "]", ",", "\n", "parse_fn", ":", "Optional", "[", "Callable", "]", "=", "record_parse", ",", "\n", "cache", ":", "bool", "=", "False", ")", ":", "\n", "        ", "filenames_in", "=", "filenames", "\n", "filenames", "=", "sorted", "(", "sum", "(", "[", "tf", ".", "io", ".", "gfile", ".", "glob", "(", "x", ")", "for", "x", "in", "filenames", "]", ",", "[", "]", ")", ")", "\n", "if", "not", "filenames", ":", "\n", "            ", "raise", "ValueError", "(", "'Empty dataset, files not found:'", ",", "filenames_in", ")", "\n", "", "d", "=", "tf", ".", "data", ".", "TFRecordDataset", "(", "filenames", ",", "num_parallel_reads", "=", "len", "(", "filenames", ")", ")", "\n", "d", "=", "d", ".", "cache", "(", ")", "if", "cache", "else", "d", "\n", "return", "cls", "(", "d", ".", "enumerate", "(", ")", ",", "image_shape", ",", "parse_fn", "=", "parse_fn", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.from_tfds": [[122, 128], ["d.map.map.enumerate", "d.map.map.map", "cls", "dataset.cache", "dataset.prefetch", "dict", "tensorflow.cast"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "from_tfds", "(", "cls", ",", "dataset", ":", "tf", ".", "data", ".", "Dataset", ",", "image_shape", ":", "Tuple", "[", "int", ",", "int", ",", "int", "]", ",", "cache", ":", "bool", "=", "False", ")", ":", "\n", "        ", "d", "=", "dataset", ".", "cache", "(", ")", "if", "cache", "else", "dataset", ".", "prefetch", "(", "16384", ")", "\n", "d", "=", "d", ".", "enumerate", "(", ")", "\n", "d", "=", "d", ".", "map", "(", "lambda", "index", ",", "x", ":", "dict", "(", "image", "=", "tf", ".", "cast", "(", "x", "[", "'image'", "]", ",", "tf", ".", "float32", ")", "/", "127.5", "-", "1", ",", "label", "=", "x", "[", "'label'", "]", ",", "index", "=", "x", ")", ")", "\n", "return", "cls", "(", "d", ",", "image_shape", ",", "parse_fn", "=", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.__iter__": [[129, 131], ["iter"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "iter", "(", "self", ".", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.__getattr__": [[132, 143], ["isinstance", "getattr", "core.DataSet.__class__"], "methods", ["None"], ["", "def", "__getattr__", "(", "self", ",", "item", ")", ":", "\n", "        ", "if", "item", "in", "self", ".", "__dict__", ":", "\n", "            ", "return", "self", ".", "__dict__", "[", "item", "]", "\n", "\n", "", "def", "call_and_update", "(", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "            ", "v", "=", "getattr", "(", "self", ".", "__dict__", "[", "'data'", "]", ",", "item", ")", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "if", "isinstance", "(", "v", ",", "tf", ".", "data", ".", "Dataset", ")", ":", "\n", "                ", "return", "self", ".", "__class__", "(", "v", ",", "self", ".", "image_shape", ",", "parse_fn", "=", "self", ".", "parse_fn", ")", "\n", "", "return", "v", "\n", "\n", "", "return", "call_and_update", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.dmap": [[144, 146], ["core.DataSet.map", "f"], "methods", ["None"], ["", "def", "dmap", "(", "self", ",", "f", ":", "Callable", ",", "para", ":", "int", "=", "0", ")", ":", "\n", "        ", "return", "self", ".", "map", "(", "lambda", "x", ":", "f", "(", "**", "x", ")", ",", "para", "or", "FLAGS", ".", "para_parse", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.nchw": [[147, 152], ["core.DataSet.map", "tensorflow.transpose"], "methods", ["None"], ["", "def", "nchw", "(", "self", ",", "key", ":", "str", "=", "'image'", ")", ":", "\n", "        ", "def", "apply", "(", "d_in", ")", ":", "\n", "            ", "return", "{", "**", "d_in", ",", "key", ":", "tf", ".", "transpose", "(", "d_in", "[", "key", "]", ",", "[", "0", ",", "3", ",", "1", ",", "2", "]", ")", "}", "\n", "\n", "", "return", "self", ".", "map", "(", "apply", ",", "FLAGS", ".", "para_parse", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.one_hot": [[153, 155], ["core.DataSet.dmap", "dict", "tensorflow.one_hot"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.dmap", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.one_hot"], ["", "def", "one_hot", "(", "self", ",", "nclass", ")", ":", "\n", "        ", "return", "self", ".", "dmap", "(", "lambda", "label", ",", "**", "kw", ":", "dict", "(", "label", "=", "tf", ".", "one_hot", "(", "label", ",", "nclass", ")", ",", "**", "kw", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.parse": [[156, 163], ["core.DataSet.map", "core.DataSet.map", "core.DataSet.parse_fn", "core.DataSet.parse_fn"], "methods", ["None"], ["", "def", "parse", "(", "self", ",", "para", ":", "int", "=", "0", ")", ":", "\n", "        ", "if", "not", "self", ".", "parse_fn", ":", "\n", "            ", "return", "self", "\n", "", "para", "=", "para", "or", "FLAGS", ".", "para_parse", "\n", "if", "self", ".", "image_shape", ":", "\n", "            ", "return", "self", ".", "map", "(", "lambda", "index", ",", "record", ":", "self", ".", "parse_fn", "(", "index", ",", "record", ",", "self", ".", "image_shape", ")", ",", "para", ")", "\n", "", "return", "self", ".", "map", "(", "lambda", "index", ",", "record", ":", "self", ".", "parse_fn", "(", "index", ",", "record", ")", ",", "para", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.__len__": [[164, 169], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "count", "=", "0", "\n", "for", "_", "in", "self", ".", "data", ":", "\n", "            ", "count", "+=", "1", "\n", "", "return", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.data.core.Numpyfier.__init__": [[172, 174], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dataset", ":", "Iterable", ")", ":", "\n", "        ", "self", ".", "dataset", "=", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.data.core.Numpyfier.__iter__": [[175, 178], ["v.numpy", "d.items"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "for", "d", "in", "self", ".", "dataset", ":", "\n", "            ", "yield", "{", "k", ":", "v", ".", "numpy", "(", ")", "for", "k", ",", "v", "in", "d", ".", "items", "(", ")", "}", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.google-research_adamatch.data.core._data_setup": [[49, 55], ["os.path.join"], "function", ["None"], ["def", "_data_setup", "(", ")", ":", "\n", "# set up data directory", "\n", "    ", "global", "DATA_DIR", "\n", "if", "FLAGS", ".", "data_dir", "!=", "''", ":", "\n", "        ", "DATA_DIR", "=", "os", ".", "path", ".", "join", "(", "FLAGS", ".", "data_dir", ",", "'NextMatch'", ")", "\n", "", "assert", "DATA_DIR", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.data.core.from_uint8": [[60, 62], ["tensorflow.cast"], "function", ["None"], ["def", "from_uint8", "(", "image", ")", ":", "\n", "    ", "return", "(", "tf", ".", "cast", "(", "image", ",", "tf", ".", "float32", ")", "-", "127.5", ")", "/", "128", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.data.core.to_uint8": [[64, 66], ["tensorflow.cast"], "function", ["None"], ["", "def", "to_uint8", "(", "image", ")", ":", "\n", "    ", "return", "tf", ".", "cast", "(", "128", "*", "image", "+", "127.5", ",", "tf", ".", "uint8", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.data.core.label_parse": [[68, 71], ["tensorflow.io.parse_single_example", "dict", "tensorflow.io.FixedLenFeature"], "function", ["None"], ["", "def", "label_parse", "(", "index", ":", "int", ",", "record", ":", "str", ",", "*", "args", ")", ":", "\n", "    ", "features", "=", "tf", ".", "io", ".", "parse_single_example", "(", "record", ",", "features", "=", "{", "'label'", ":", "tf", ".", "io", ".", "FixedLenFeature", "(", "[", "]", ",", "tf", ".", "int64", ")", "}", ")", "\n", "return", "dict", "(", "index", "=", "index", ",", "label", "=", "features", "[", "'label'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.data.core.record_parse": [[73, 80], ["tensorflow.io.parse_single_example", "tensorflow.image.decode_image", "from_uint8.set_shape", "core.from_uint8", "dict", "tensorflow.io.FixedLenFeature", "tensorflow.io.FixedLenFeature"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.data.core.from_uint8"], ["", "def", "record_parse", "(", "index", ":", "int", ",", "record", ":", "str", ",", "image_shape", ":", "Tuple", "[", "int", ",", "int", ",", "int", "]", ")", ":", "\n", "    ", "features", "=", "tf", ".", "io", ".", "parse_single_example", "(", "record", ",", "features", "=", "{", "'image'", ":", "tf", ".", "io", ".", "FixedLenFeature", "(", "[", "]", ",", "tf", ".", "string", ")", ",", "\n", "'label'", ":", "tf", ".", "io", ".", "FixedLenFeature", "(", "[", "]", ",", "tf", ".", "int64", ")", "}", ")", "\n", "image", "=", "tf", ".", "image", ".", "decode_image", "(", "features", "[", "'image'", "]", ")", "\n", "image", ".", "set_shape", "(", "image_shape", ")", "\n", "image", "=", "from_uint8", "(", "image", ")", "\n", "return", "dict", "(", "index", "=", "index", ",", "image", "=", "image", ",", "label", "=", "features", "[", "'label'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.data.core.record_parse_mnist": [[82, 91], ["tensorflow.io.parse_single_example", "tensorflow.image.decode_image", "tensorflow.pad", "from_uint8.set_shape", "core.from_uint8", "dict", "tensorflow.io.FixedLenFeature", "tensorflow.io.FixedLenFeature"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.data.core.from_uint8"], ["", "def", "record_parse_mnist", "(", "index", ":", "int", ",", "record", ":", "str", ",", "image_shape", ":", "Tuple", "[", "int", ",", "int", ",", "int", "]", ")", ":", "\n", "    ", "del", "image_shape", "\n", "features", "=", "tf", ".", "io", ".", "parse_single_example", "(", "record", ",", "features", "=", "{", "'image'", ":", "tf", ".", "io", ".", "FixedLenFeature", "(", "[", "]", ",", "tf", ".", "string", ")", ",", "\n", "'label'", ":", "tf", ".", "io", ".", "FixedLenFeature", "(", "[", "]", ",", "tf", ".", "int64", ")", "}", ")", "\n", "image", "=", "tf", ".", "image", ".", "decode_image", "(", "features", "[", "'image'", "]", ")", "\n", "image", "=", "tf", ".", "pad", "(", "image", ",", "[", "(", "2", ",", "2", ")", ",", "(", "2", ",", "2", ")", ",", "(", "0", ",", "0", ")", "]", ")", "\n", "image", ".", "set_shape", "(", "(", "32", ",", "32", ",", "3", ")", ")", "\n", "image", "=", "from_uint8", "(", "image", ")", "\n", "return", "dict", "(", "index", "=", "index", ",", "image", "=", "image", ",", "label", "=", "features", "[", "'label'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.data.merger.DataMerger.__init__": [[20, 22], ["list"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "datasets", ":", "Iterable", "[", "Iterable", "]", ")", ":", "\n", "        ", "self", ".", "datasets", "=", "list", "(", "datasets", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.data.merger.DataMerger.__iter__": [[23, 27], ["iter", "next"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "iterators", "=", "[", "iter", "(", "x", ")", "for", "x", "in", "self", ".", "datasets", "]", "\n", "while", "1", ":", "\n", "            ", "yield", "[", "next", "(", "x", ")", "for", "x", "in", "iterators", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.data.merger.MergeBalanced.__init__": [[30, 33], ["merger.DataMerger.__init__"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.baseline.Baseline.__init__"], ["    ", "def", "__init__", "(", "self", ",", "datasets", ":", "Iterable", "[", "Iterable", "]", ",", "sizes", ":", "Iterable", "[", "int", "]", ")", ":", "\n", "        ", "del", "sizes", "\n", "super", "(", ")", ".", "__init__", "(", "datasets", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.data.merger.MergeBalanced.__iter__": [[34, 45], ["len", "iter", "numpy.zeros", "numpy.zeros.ravel", "range", "next", "numpy.arange", "numpy.concatenate", "len", "mixed.items", "len"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "count", "=", "len", "(", "self", ".", "datasets", ")", "\n", "iterators", "=", "[", "iter", "(", "x", ")", "for", "x", "in", "self", ".", "datasets", "]", "\n", "while", "1", ":", "\n", "            ", "data", "=", "[", "next", "(", "x", ")", "for", "x", "in", "iterators", "]", "\n", "source", "=", "np", ".", "zeros", "(", "[", "count", ",", "data", "[", "0", "]", "[", "'index'", "]", ".", "shape", "[", "0", "]", "]", ",", "np", ".", "uint32", ")", "\n", "source", "+=", "np", ".", "arange", "(", "count", ",", "dtype", "=", "np", ".", "uint32", ")", "[", ":", ",", "None", "]", "\n", "mixed", "=", "{", "k", ":", "np", ".", "concatenate", "(", "[", "v", "[", "k", "]", "for", "v", "in", "data", "]", ")", "for", "k", "in", "(", "'index'", ",", "'label'", ",", "'image'", ")", "}", "\n", "mixed", "[", "'source'", "]", "=", "source", ".", "ravel", "(", ")", "\n", "for", "x", "in", "range", "(", "len", "(", "data", ")", ")", ":", "\n", "                ", "yield", "{", "k", ":", "v", "[", "x", ":", ":", "len", "(", "data", ")", "]", "for", "k", ",", "v", "in", "mixed", ".", "items", "(", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.data.merger.MergeProportional.__init__": [[48, 53], ["merger.DataMerger.__init__", "numpy.array", "merger.MergeProportional.ratios.sum", "list", "len", "len"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.baseline.Baseline.__init__"], ["    ", "def", "__init__", "(", "self", ",", "datasets", ":", "Iterable", "[", "Iterable", "]", ",", "sizes", ":", "Iterable", "[", "int", "]", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "datasets", ")", "\n", "self", ".", "ratios", "=", "np", ".", "array", "(", "list", "(", "sizes", ")", ",", "'f'", ")", "\n", "self", ".", "ratios", "/=", "self", ".", "ratios", ".", "sum", "(", ")", "\n", "assert", "len", "(", "self", ".", "datasets", ")", "==", "len", "(", "self", ".", "ratios", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.data.merger.MergeProportional.collect": [[54, 66], ["buffer.items", "next", "numpy.concatenate"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "collect", "(", "buffer", ",", "iterator", ",", "count", ")", ":", "\n", "        ", "available", "=", "buffer", "[", "'index'", "]", ".", "shape", "[", "0", "]", "\n", "if", "available", "<", "count", ":", "\n", "            ", "entry", "=", "next", "(", "iterator", ")", "\n", "for", "k", "in", "buffer", ":", "\n", "                ", "buffer", "[", "k", "]", "=", "np", ".", "concatenate", "(", "[", "buffer", "[", "k", "]", ",", "entry", "[", "k", "]", "]", ")", "\n", "", "", "vout", "=", "{", "}", "\n", "for", "k", ",", "v", "in", "buffer", ".", "items", "(", ")", ":", "\n", "            ", "vout", "[", "k", "]", "=", "v", "[", ":", "count", "]", "\n", "buffer", "[", "k", "]", "=", "v", "[", "count", ":", "]", "\n", "", "return", "vout", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.data.merger.MergeProportional.__iter__": [[67, 86], ["len", "numpy.zeros", "numpy.arange", "iter", "next", "fsizes.astype", "numpy.concatenate", "numpy.random.shuffle", "int", "merger.MergeProportional.collect", "numpy.concatenate", "fsizes.astype.sum", "numpy.argsort", "enumerate", "numpy.zeros.sum", "numpy.zeros", "enumerate", "data.items"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.data.merger.MergeProportional.collect"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "count", "=", "len", "(", "self", ".", "datasets", ")", "\n", "p", "=", "np", ".", "zeros", "(", "count", ",", "np", ".", "uint32", ")", "\n", "iterators", "=", "[", "iter", "(", "x", ")", "for", "x", "in", "self", ".", "datasets", "]", "\n", "buffers", "=", "[", "next", "(", "x", ")", "for", "x", "in", "iterators", "]", "\n", "batch", "=", "buffers", "[", "0", "]", "[", "'index'", "]", ".", "shape", "[", "0", "]", "\n", "order", "=", "np", ".", "arange", "(", "batch", ",", "dtype", "=", "np", ".", "uint32", ")", "\n", "while", "True", ":", "\n", "            ", "fsizes", "=", "self", ".", "ratios", "*", "(", "p", ".", "sum", "(", ")", "+", "batch", ")", "-", "p", "\n", "sizes", "=", "fsizes", ".", "astype", "(", "np", ".", "uint32", ")", "\n", "delta", "=", "batch", "-", "int", "(", "sizes", ".", "sum", "(", ")", ")", "\n", "if", "delta", ":", "\n", "                ", "high_p", "=", "np", ".", "argsort", "(", "fsizes", "-", "sizes", ")", "[", "-", "delta", ":", "]", "\n", "sizes", "[", "high_p", "]", "+=", "1", "\n", "", "data", "=", "[", "self", ".", "collect", "(", "buffers", "[", "i", "]", ",", "iterators", "[", "i", "]", ",", "n", ")", "for", "i", ",", "n", "in", "enumerate", "(", "sizes", ")", "]", "\n", "data", "=", "{", "k", ":", "np", ".", "concatenate", "(", "[", "d", "[", "k", "]", "for", "d", "in", "data", "]", ")", "for", "k", "in", "data", "[", "0", "]", "}", "\n", "data", "[", "'source'", "]", "=", "np", ".", "concatenate", "(", "[", "np", ".", "zeros", "(", "s", ",", "dtype", "=", "np", ".", "uint32", ")", "+", "i", "for", "i", ",", "s", "in", "enumerate", "(", "sizes", ")", "]", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "order", ")", "\n", "yield", "{", "k", ":", "v", "[", "order", "]", "for", "k", ",", "v", "in", "data", ".", "items", "(", ")", "}", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.google-research_adamatch.data.fsl.DataSetsFSL.__init__": [[25, 31], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "name", ":", "str", ",", "train", ":", "DataSet", ",", "test", ":", "Dict", "[", "str", ",", "DataSet", "]", ",", "valid", ":", "DataSet", ",", "nclass", ":", "int", "=", "10", ")", ":", "\n", "        ", "self", ".", "name", "=", "name", "\n", "self", ".", "train", "=", "train", "\n", "self", ".", "test", "=", "test", "\n", "self", ".", "valid", "=", "valid", "\n", "self", ".", "nclass", "=", "nclass", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.data.fsl.DataSetsFSL.image_shape": [[32, 35], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "image_shape", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "train", ".", "image_shape", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.data.fsl.DataSetsFSL.colors": [[36, 39], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "colors", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "image_shape", "[", "2", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.data.fsl.DataSetsFSL.height": [[40, 43], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "height", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "image_shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.data.fsl.DataSetsFSL.width": [[44, 47], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "width", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "image_shape", "[", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.data.fsl.DataSetsFSL.creator": [[48, 65], ["os.path.join", "dict", "dict", "cls", "os.path.join", "test_files.items", "str", "shared.data.core.DataSet.from_files().skip", "shared.data.core.DataSet.from_files().take", "str", "shared.data.core.DataSet.from_files", "shared.data.core.DataSet.from_files", "shared.data.core.DataSet.from_files", "test_files.items"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.from_files", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.from_files", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.from_files"], ["", "@", "classmethod", "\n", "def", "creator", "(", "cls", ",", "name", ":", "str", ",", "train_files", ":", "List", "[", "str", "]", ",", "test_files", ":", "Dict", "[", "str", ",", "List", "[", "str", "]", "]", ",", "valid", ":", "int", ",", "\n", "parse_fn", ":", "Callable", "=", "record_parse", ",", "\n", "nclass", ":", "int", "=", "10", ",", "height", ":", "int", "=", "32", ",", "width", ":", "int", "=", "32", ",", "colors", ":", "int", "=", "3", ",", "cache", ":", "bool", "=", "False", ")", ":", "\n", "        ", "train_files", "=", "[", "os", ".", "path", ".", "join", "(", "core", ".", "DATA_DIR", ",", "x", ")", "for", "x", "in", "train_files", "]", "\n", "test_files", "=", "{", "key", ":", "[", "os", ".", "path", ".", "join", "(", "core", ".", "DATA_DIR", ",", "x", ")", "for", "x", "in", "value", "]", "for", "key", ",", "value", "in", "test_files", ".", "items", "(", ")", "}", "\n", "\n", "def", "create", "(", ")", ":", "\n", "            ", "image_shape", "=", "height", ",", "width", ",", "colors", "\n", "kw", "=", "dict", "(", "parse_fn", "=", "parse_fn", ")", "\n", "datasets", "=", "dict", "(", "train", "=", "DataSet", ".", "from_files", "(", "train_files", ",", "image_shape", ",", "cache", "=", "cache", ",", "**", "kw", ")", ".", "skip", "(", "valid", ")", ",", "\n", "valid", "=", "DataSet", ".", "from_files", "(", "train_files", ",", "image_shape", ",", "cache", "=", "cache", ",", "**", "kw", ")", ".", "take", "(", "valid", ")", ",", "\n", "test", "=", "{", "key", ":", "DataSet", ".", "from_files", "(", "value", ",", "image_shape", ",", "cache", "=", "cache", ",", "**", "kw", ")", "\n", "for", "key", ",", "value", "in", "test_files", ".", "items", "(", ")", "}", ")", "\n", "return", "cls", "(", "name", "+", "'-'", "+", "str", "(", "valid", ")", ",", "nclass", "=", "nclass", ",", "**", "datasets", ")", "\n", "\n", "", "return", "name", "+", "'-'", "+", "str", "(", "valid", ")", ",", "create", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.data.fsl.create_datasets": [[67, 131], ["numpy.array", "d.update", "d.update", "d.update", "d.update", "d.update", "d.update", "d.update", "d.update", "d.update", "d.update", "d.update", "itertools.product", "itertools.product", "itertools.product", "d.update", "d.update", "d.update", "d.update", "fsl.DataSetsFSL.creator", "fsl.DataSetsFSL.creator", "fsl.DataSetsFSL.creator", "fsl.DataSetsFSL.creator", "fsl.DataSetsFSL.creator", "fsl.DataSetsFSL.creator", "fsl.DataSetsFSL.creator", "fsl.DataSetsFSL.creator", "fsl.DataSetsFSL.creator", "fsl.DataSetsFSL.creator", "fsl.DataSetsFSL.creator", "itertools.product", "itertools.product", "itertools.product", "itertools.product", "itertools.product", "fsl.DataSetsFSL.creator", "fsl.DataSetsFSL.creator", "fsl.DataSetsFSL.creator", "fsl.DataSetsFSL.creator", "range", "range", "range", "range", "range"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.DataSetSSL.creator", "home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.DataSetSSL.creator", "home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.DataSetSSL.creator", "home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.DataSetSSL.creator", "home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.DataSetSSL.creator", "home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.DataSetSSL.creator", "home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.DataSetSSL.creator", "home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.DataSetSSL.creator", "home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.DataSetSSL.creator", "home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.DataSetSSL.creator", "home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.DataSetSSL.creator", "home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.DataSetSSL.creator", "home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.DataSetSSL.creator", "home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.DataSetSSL.creator", "home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.DataSetSSL.creator"], ["", "", "def", "create_datasets", "(", "samples_per_class", "=", "(", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "10", ",", "25", ",", "100", ",", "400", ")", ")", ":", "\n", "    ", "samples_per_class", "=", "np", ".", "array", "(", "samples_per_class", ",", "np", ".", "uint32", ")", "\n", "d", "=", "{", "}", "\n", "d", ".", "update", "(", "[", "DataSetsFSL", ".", "creator", "(", "'mnist'", ",", "[", "'mnist-train.tfrecord'", "]", ",", "{", "'mnist'", ":", "[", "'mnist-test.tfrecord'", "]", "}", ",", "valid", ",", "\n", "cache", "=", "True", ",", "parse_fn", "=", "record_parse_mnist", ")", "for", "valid", "in", "[", "0", ",", "5000", "]", "]", ")", "\n", "d", ".", "update", "(", "[", "DataSetsFSL", ".", "creator", "(", "'cifar10'", ",", "[", "'cifar10-train.tfrecord'", "]", ",", "{", "'cifar10'", ":", "[", "'cifar10-test.tfrecord'", "]", "}", ",", "valid", ",", "\n", "cache", "=", "True", ")", "for", "valid", "in", "[", "0", ",", "5000", "]", "]", ")", "\n", "d", ".", "update", "(", "\n", "[", "DataSetsFSL", ".", "creator", "(", "'cifar100'", ",", "[", "'cifar100-train.tfrecord'", "]", ",", "{", "'cifar100'", ":", "[", "'cifar100-test.tfrecord'", "]", "}", ",", "valid", ",", "\n", "nclass", "=", "100", ",", "cache", "=", "True", ")", "for", "valid", "in", "[", "0", ",", "5000", "]", "]", ")", "\n", "d", ".", "update", "(", "[", "DataSetsFSL", ".", "creator", "(", "'svhn'", ",", "[", "'svhn-train.tfrecord'", "]", ",", "{", "'svhn'", ":", "[", "'svhn-test.tfrecord'", "]", "}", ",", "\n", "valid", ")", "for", "valid", "in", "[", "0", ",", "5000", "]", "]", ")", "\n", "d", ".", "update", "(", "[", "DataSetsFSL", ".", "creator", "(", "'svhnx'", ",", "[", "'svhn-train.tfrecord'", ",", "'svhn-extra.tfrecord'", "]", ",", "\n", "{", "'svhn'", ":", "[", "'svhn-test.tfrecord'", "]", "}", ",", "valid", ")", "for", "valid", "in", "[", "0", ",", "5000", "]", "]", ")", "\n", "d", ".", "update", "(", "[", "DataSetsFSL", ".", "creator", "(", "'cifar10_1'", ",", "[", "'cifar10-train.tfrecord'", "]", ",", "\n", "{", "'cifar10'", ":", "[", "'cifar10-test.tfrecord'", "]", ",", "'cifar10.1'", ":", "[", "'cifar10.1-test.tfrecord'", "]", "}", ",", "\n", "valid", ",", "cache", "=", "True", ")", "for", "valid", "in", "[", "0", ",", "5000", "]", "]", ")", "\n", "d", ".", "update", "(", "[", "DataSetsFSL", ".", "creator", "(", "'cifar10.%d@%d'", "%", "(", "seed", ",", "sz", ")", ",", "[", "'SSL/cifar10.%d@%d-label.tfrecord'", "%", "(", "seed", ",", "sz", ")", "]", ",", "\n", "{", "'cifar10'", ":", "[", "'cifar10-test.tfrecord'", "]", "}", ",", "valid", ",", "cache", "=", "True", ")", "\n", "for", "valid", ",", "seed", ",", "sz", "in", "itertools", ".", "product", "(", "[", "0", ",", "5000", "]", ",", "range", "(", "6", ")", ",", "10", "*", "samples_per_class", ")", "]", ")", "\n", "d", ".", "update", "(", "[", "DataSetsFSL", ".", "creator", "(", "'cifar100.%d@%d'", "%", "(", "seed", ",", "sz", ")", ",", "[", "'SSL/cifar100.%d@%d-label.tfrecord'", "%", "(", "seed", ",", "sz", ")", "]", ",", "\n", "{", "'cifar100'", ":", "[", "'cifar100-test.tfrecord'", "]", "}", ",", "valid", ",", "nclass", "=", "100", ")", "\n", "for", "valid", ",", "seed", ",", "sz", "in", "itertools", ".", "product", "(", "[", "0", ",", "5000", "]", ",", "range", "(", "6", ")", ",", "100", "*", "samples_per_class", ")", "]", ")", "\n", "d", ".", "update", "(", "[", "DataSetsFSL", ".", "creator", "(", "'svhn.%d@%d'", "%", "(", "seed", ",", "sz", ")", ",", "[", "'SSL/svhn.%d@%d-label.tfrecord'", "%", "(", "seed", ",", "sz", ")", "]", ",", "\n", "{", "'svhn'", ":", "[", "'svhn-test.tfrecord'", "]", "}", ",", "valid", ")", "\n", "for", "valid", ",", "seed", ",", "sz", "in", "itertools", ".", "product", "(", "[", "0", ",", "5000", "]", ",", "range", "(", "6", ")", ",", "10", "*", "samples_per_class", ")", "]", ")", "\n", "d", ".", "update", "(", "[", "DataSetsFSL", ".", "creator", "(", "'svhnx.%d@%d'", "%", "(", "seed", ",", "sz", ")", ",", "[", "'SSL/svhnx.%d@%d-label.tfrecord'", "%", "(", "seed", ",", "sz", ")", "]", ",", "\n", "{", "'svhn'", ":", "[", "'svhn-test.tfrecord'", "]", "}", ",", "valid", ")", "\n", "for", "valid", ",", "seed", ",", "sz", "in", "itertools", ".", "product", "(", "[", "0", ",", "5000", "]", ",", "range", "(", "6", ")", ",", "10", "*", "samples_per_class", ")", "]", ")", "\n", "d", ".", "update", "(", "[", "DataSetsFSL", ".", "creator", "(", "'stl10.%d@%d'", "%", "(", "seed", ",", "sz", ")", ",", "[", "'SSL/stl10.%d@%d-label.tfrecord'", "%", "(", "seed", ",", "sz", ")", "]", ",", "\n", "{", "'stl10'", ":", "[", "'stl10-test.tfrecord'", "]", "}", ",", "valid", ",", "height", "=", "96", ",", "width", "=", "96", ")", "\n", "for", "valid", ",", "seed", ",", "sz", "in", "itertools", ".", "product", "(", "[", "0", ",", "5000", "]", ",", "range", "(", "6", ")", ",", "10", "*", "samples_per_class", ")", "]", ")", "\n", "# DomainNet datasets", "\n", "categories", "=", "[", "'clipart'", ",", "'infograph'", ",", "'painting'", ",", "'quickdraw'", ",", "'real'", ",", "'sketch'", "]", "\n", "for", "category", ",", "size", "in", "itertools", ".", "product", "(", "categories", ",", "[", "32", ",", "64", ",", "128", ",", "224", "]", ")", ":", "\n", "        ", "d", ".", "update", "(", "[", "DataSetsFSL", ".", "creator", "(", "f'domainnet{size}_{category}'", ",", "\n", "[", "f'domainnet{size}_{category}-train.tfrecord'", "]", ",", "\n", "{", "category", ":", "[", "f'domainnet{size}_{category}-test.tfrecord'", "]", "}", ",", "\n", "valid", ",", "height", "=", "size", ",", "width", "=", "size", ",", "nclass", "=", "345", ",", "\n", "cache", "=", "size", "<=", "64", ")", "for", "valid", "in", "[", "0", ",", "5000", "]", "]", ")", "\n", "d", ".", "update", "(", "[", "DataSetsFSL", ".", "creator", "(", "\n", "f'domainnet{size}_no_{category}'", ",", "\n", "[", "f'domainnet{size}_{t}-train.tfrecord'", "for", "t", "in", "categories", "if", "t", "!=", "category", "]", ",", "\n", "{", "f'no_{category}'", ":", "[", "f'domainnet{size}_{t}-test.tfrecord'", "for", "t", "in", "categories", "if", "t", "!=", "category", "]", "}", ",", "\n", "valid", ",", "height", "=", "size", ",", "width", "=", "size", ",", "nclass", "=", "345", ",", "cache", "=", "size", "<=", "64", ")", "for", "valid", "in", "[", "0", ",", "5000", "]", "]", ")", "\n", "# Office31 datasets", "\n", "", "categories", "=", "[", "'webcam'", ",", "'dslr'", ",", "'amazon'", "]", "\n", "for", "category", ",", "size", "in", "itertools", ".", "product", "(", "categories", ",", "[", "32", ",", "64", ",", "128", ",", "224", "]", ")", ":", "\n", "        ", "d", ".", "update", "(", "[", "DataSetsFSL", ".", "creator", "(", "f'office31{size}_{category}'", ",", "\n", "[", "f'office31{size}_{category}-train.tfrecord'", "]", ",", "\n", "{", "category", ":", "[", "f'office31{size}_{category}-test.tfrecord'", "]", "}", ",", "\n", "valid", ",", "height", "=", "size", ",", "width", "=", "size", ",", "nclass", "=", "31", ",", "\n", "cache", "=", "size", "<=", "64", ")", "for", "valid", "in", "[", "0", ",", "5000", "]", "]", ")", "\n", "# DigitFive datasets", "\n", "", "categories", "=", "[", "'usps'", ",", "'mnist'", ",", "'mnistm'", ",", "'svhn'", ",", "'syndigit'", "]", "\n", "for", "category", ",", "size", "in", "itertools", ".", "product", "(", "categories", ",", "[", "32", "]", ")", ":", "\n", "        ", "d", ".", "update", "(", "[", "DataSetsFSL", ".", "creator", "(", "f'digitfive{size}_{category}'", ",", "\n", "[", "f'digitfive{size}_{category}-train.tfrecord'", "]", ",", "\n", "{", "category", ":", "[", "f'digitfive{size}_{category}-test.tfrecord'", "]", "}", ",", "\n", "valid", ",", "height", "=", "size", ",", "width", "=", "size", ",", "nclass", "=", "10", ",", "\n", "cache", "=", "size", "<=", "64", ")", "for", "valid", "in", "[", "0", ",", "5000", "]", "]", ")", "\n", "\n", "\n", "", "return", "d", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.DataSetSSL.__init__": [[28, 32], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "name", ":", "str", ",", "train", ":", "DataSet", ",", "nclass", ":", "int", "=", "10", ")", ":", "\n", "        ", "self", ".", "name", "=", "name", "\n", "self", ".", "train", "=", "train", "\n", "self", ".", "nclass", "=", "nclass", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.DataSetSSL.image_shape": [[33, 36], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "image_shape", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "train", ".", "image_shape", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.DataSetSSL.colors": [[37, 40], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "colors", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "image_shape", "[", "2", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.DataSetSSL.height": [[41, 44], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "height", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "image_shape", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.DataSetSSL.width": [[45, 48], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "width", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "image_shape", "[", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.DataSetSSL.creator": [[49, 63], ["os.path.join", "os.path.join", "shared.data.core.DataSet.from_files", "cls", "os.path.exists", "cls.materialize_subset"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.from_files", "home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.DataSetSSL.materialize_subset"], ["", "@", "classmethod", "\n", "def", "creator", "(", "cls", ",", "name", ":", "str", ",", "train_files", ":", "List", "[", "str", "]", ",", "parse_fn", ":", "Callable", "=", "record_parse", ",", "\n", "nclass", ":", "int", "=", "10", ",", "height", ":", "int", "=", "32", ",", "width", ":", "int", "=", "32", ",", "colors", ":", "int", "=", "3", ",", "cache", ":", "bool", "=", "False", ")", ":", "\n", "        ", "train_files", "=", "[", "os", ".", "path", ".", "join", "(", "core", ".", "DATA_DIR", ",", "x", ")", "for", "x", "in", "train_files", "]", "\n", "\n", "def", "create", "(", "samples_per_class", ":", "int", ",", "seed", ":", "int", ")", ":", "\n", "            ", "target_file", "=", "os", ".", "path", ".", "join", "(", "core", ".", "DATA_DIR", ",", "f'{name}({samples_per_class},seed={seed}).tfrecord'", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "target_file", ")", ":", "\n", "                ", "cls", ".", "materialize_subset", "(", "target_file", ",", "train_files", ",", "samples_per_class", ",", "seed", ",", "nclass", ")", "\n", "", "image_shape", "=", "height", ",", "width", ",", "colors", "\n", "train", "=", "DataSet", ".", "from_files", "(", "[", "target_file", "]", ",", "image_shape", ",", "cache", "=", "cache", ",", "parse_fn", "=", "parse_fn", ")", "\n", "return", "cls", "(", "name", ",", "nclass", "=", "nclass", ",", "train", "=", "train", ")", "\n", "\n", "", "return", "name", ",", "create", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.DataSetSSL.parse_name": [[64, 74], ["name.split", "params.split.split.split", "int", "int", "ValueError"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "parse_name", "(", "name", ":", "str", ")", "->", "Tuple", "[", "str", ",", "int", ",", "int", "]", ":", "\n", "        ", "try", ":", "\n", "            ", "name", ",", "params", "=", "name", ".", "split", "(", "'('", ")", "\n", "params", "=", "params", ".", "split", "(", "','", ")", "\n", "samples_per_class", "=", "int", "(", "params", "[", "0", "]", ")", "\n", "seed", "=", "int", "(", "params", "[", "1", "]", "[", "5", ":", "-", "1", "]", ")", "\n", "", "except", ":", "\n", "            ", "raise", "ValueError", "(", "f'Name \"{name}\" must be of the form name(int,seed=int).'", ")", "\n", "", "return", "name", ",", "samples_per_class", ",", "seed", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.DataSetSSL.materialize_subset": [[75, 101], ["print", "print", "print", "time.time", "shared.data.core.DataSet.from_files", "tqdm.tqdm.tqdm", "print", "numpy.random.seed", "set", "print", "os.rename", "print", "print", "shared.data.core.DataSet.from_files.parse().batch", "zip", "sum", "numpy.random.choice", "set", "sum", "tensorflow.io.TFRecordWriter", "tqdm.tqdm.tqdm", "os.path.getsize", "range", "batch[]._numpy", "batch[]._numpy", "class_to_idx[].append", "writer.write", "shared.data.core.DataSet.from_files.parse", "len", "len", "index._numpy", "record._numpy", "int", "time.time"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.from_files", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.parse"], ["", "@", "staticmethod", "\n", "def", "materialize_subset", "(", "target_file", ":", "str", ",", "train_files", ":", "List", "[", "str", "]", ",", "samples_per_class", ":", "int", ",", "seed", ":", "int", ",", "nclass", ":", "int", ")", ":", "\n", "        ", "print", "(", "f'Materializing subset {target_file}'", ")", "\n", "print", "(", "f'\\015    {\"Samples per class\":32s}'", ",", "samples_per_class", ")", "\n", "print", "(", "f'\\015    {\"Random seed\":32s}'", ",", "seed", ")", "\n", "t0", "=", "time", ".", "time", "(", ")", "\n", "train", "=", "DataSet", ".", "from_files", "(", "train_files", ",", "(", "0", ",", "0", ",", "0", ")", ",", "parse_fn", "=", "label_parse", ")", "\n", "class_to_idx", "=", "[", "[", "]", "for", "_", "in", "range", "(", "nclass", ")", "]", "\n", "for", "batch", "in", "tqdm", "(", "train", ".", "parse", "(", ")", ".", "batch", "(", "1024", ")", ",", "leave", "=", "False", ",", "desc", "=", "'Building class map'", ")", ":", "\n", "            ", "for", "idx", ",", "label", "in", "zip", "(", "batch", "[", "'index'", "]", ".", "_numpy", "(", ")", ",", "batch", "[", "'label'", "]", ".", "_numpy", "(", ")", ")", ":", "\n", "                ", "class_to_idx", "[", "label", "]", ".", "append", "(", "idx", ")", "\n", "", "", "print", "(", "f'\\015    {\"Number of source samples\":32s}'", ",", "sum", "(", "len", "(", "x", ")", "for", "x", "in", "class_to_idx", ")", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "class_to_idx", "=", "[", "np", ".", "random", ".", "choice", "(", "x", ",", "samples_per_class", ",", "replace", "=", "True", ")", "for", "x", "in", "class_to_idx", "]", "\n", "keep_idx", "=", "set", "(", ")", "\n", "for", "x", "in", "class_to_idx", ":", "\n", "            ", "keep_idx", "|=", "set", "(", "x", ")", "\n", "", "print", "(", "f'\\015    {\"Number of target samples\":32s}'", ",", "sum", "(", "len", "(", "x", ")", "for", "x", "in", "class_to_idx", ")", ")", "\n", "with", "tf", ".", "io", ".", "TFRecordWriter", "(", "target_file", "+", "'.tmp'", ")", "as", "writer", ":", "\n", "            ", "for", "index", ",", "record", "in", "tqdm", "(", "train", ",", "leave", "=", "False", ",", "desc", "=", "f'Saving dataset f{target_file}'", ")", ":", "\n", "                ", "if", "index", ".", "_numpy", "(", ")", "not", "in", "keep_idx", ":", "\n", "                    ", "continue", "\n", "", "writer", ".", "write", "(", "record", ".", "_numpy", "(", ")", ")", "\n", "", "", "os", ".", "rename", "(", "target_file", "+", "'.tmp'", ",", "target_file", ")", "\n", "print", "(", "f'\\015    {\"File size\":32s}'", ",", "os", ".", "path", ".", "getsize", "(", "target_file", ")", ")", "\n", "print", "(", "f'\\015    Completed in {int(time.time() - t0)}s'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.create_datasets": [[103, 126], ["d.update", "d.update", "d.update", "d.update", "itertools.product", "itertools.product", "itertools.product", "d.update", "d.update", "d.update", "ssl.DataSetSSL.creator", "ssl.DataSetSSL.creator", "ssl.DataSetSSL.creator", "ssl.DataSetSSL.creator", "ssl.DataSetSSL.creator", "ssl.DataSetSSL.creator", "ssl.DataSetSSL.creator"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.DataSetSSL.creator", "home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.DataSetSSL.creator", "home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.DataSetSSL.creator", "home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.DataSetSSL.creator", "home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.DataSetSSL.creator", "home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.DataSetSSL.creator", "home.repos.pwc.inspect_result.google-research_adamatch.data.ssl.DataSetSSL.creator"], ["", "", "def", "create_datasets", "(", ")", ":", "\n", "    ", "d", "=", "{", "}", "\n", "d", ".", "update", "(", "[", "DataSetSSL", ".", "creator", "(", "'cifar10'", ",", "[", "'cifar10-train.tfrecord'", "]", ",", "cache", "=", "True", ")", "]", ")", "\n", "d", ".", "update", "(", "[", "DataSetSSL", ".", "creator", "(", "'mnist'", ",", "[", "'mnist-train.tfrecord'", "]", ",", "cache", "=", "True", ",", "parse_fn", "=", "record_parse_mnist", ")", "]", ")", "\n", "d", ".", "update", "(", "[", "DataSetSSL", ".", "creator", "(", "'svhn'", ",", "[", "'svhn-train.tfrecord'", "]", ")", "]", ")", "\n", "d", ".", "update", "(", "[", "DataSetSSL", ".", "creator", "(", "'svhnx'", ",", "[", "'svhn-train.tfrecord'", ",", "'svhn-extra.tfrecord'", "]", ")", "]", ")", "\n", "# DomainNet datasets", "\n", "categories", "=", "[", "'clipart'", ",", "'infograph'", ",", "'painting'", ",", "'quickdraw'", ",", "'real'", ",", "'sketch'", "]", "\n", "for", "category", ",", "size", "in", "itertools", ".", "product", "(", "categories", ",", "[", "32", ",", "64", ",", "128", ",", "224", "]", ")", ":", "\n", "        ", "d", ".", "update", "(", "[", "DataSetSSL", ".", "creator", "(", "f'domainnet{size}_{category}'", ",", "[", "f'domainnet{size}_{category}-train.tfrecord'", "]", ",", "\n", "height", "=", "size", ",", "width", "=", "size", ",", "nclass", "=", "345", ",", "cache", "=", "size", "<=", "64", ")", "]", ")", "\n", "# Office31 datasets", "\n", "", "categories", "=", "[", "'webcam'", ",", "'dslr'", ",", "'amazon'", "]", "\n", "for", "category", ",", "size", "in", "itertools", ".", "product", "(", "categories", ",", "[", "32", ",", "64", ",", "128", ",", "224", "]", ")", ":", "\n", "        ", "d", ".", "update", "(", "[", "DataSetSSL", ".", "creator", "(", "f'office31{size}_{category}'", ",", "[", "f'office31{size}_{category}-train.tfrecord'", "]", ",", "\n", "height", "=", "size", ",", "width", "=", "size", ",", "nclass", "=", "31", ",", "cache", "=", "size", "<=", "64", ")", "]", ")", "\n", "# DigitFive datasets", "\n", "", "categories", "=", "[", "'usps'", ",", "'mnist'", ",", "'mnistm'", ",", "'svhn'", ",", "'syndigit'", "]", "\n", "for", "category", ",", "size", "in", "itertools", ".", "product", "(", "categories", ",", "[", "32", "]", ")", ":", "\n", "        ", "d", ".", "update", "(", "[", "DataSetSSL", ".", "creator", "(", "f'digitfive{size}_{category}'", ",", "[", "f'digitfive{size}_{category}-train.tfrecord'", "]", ",", "\n", "height", "=", "size", ",", "width", "=", "size", ",", "nclass", "=", "10", ",", "cache", "=", "size", "<=", "64", ")", "]", ")", "\n", "\n", "", "return", "d", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.augment.core.cutout": [[20, 28], ["tensorflow.random.uniform", "tensorflow.shape", "tensorflow.cast", "tensorflow.cast", "tensorflow.round", "tensorflow.round", "tensorflow.cast", "tensorflow.range", "tensorflow.range", "tensorflow.cast", "tensorflow.cast"], "function", ["None"], ["from", "absl", "import", "flags", "\n", "from", "absl", ".", "flags", "import", "FLAGS", "\n", "\n", "# Data directory. Value is initialized in _data_setup", "\n", "#", "\n", "# Note that if you need to use DATA_DIR outside of this module then", "\n", "# you should do following:", "\n", "#     from shared.data import core as shared_data", "\n", "#     ...", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.augment.core.mirror": [[30, 32], ["tensorflow.image.random_flip_left_right"], "function", ["None"], ["#", "\n", "# If you directly import DATA_DIR:", "\n", "#   from shared.data.core import DATA_DIR", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.augment.core.shift": [[34, 37], ["tensorflow.pad", "tensorflow.image.random_crop", "tensorflow.shape"], "function", ["None"], ["DATA_DIR", "=", "None", "\n", "\n", "_DATA_CACHE", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.augment.core.noise": [[39, 41], ["tensorflow.random.normal", "tensorflow.shape"], "function", ["None"], ["flags", ".", "DEFINE_integer", "(", "'para_augment'", ",", "8", ",", "'Parallel augmentation.'", ")", "\n", "flags", ".", "DEFINE_integer", "(", "'shuffle'", ",", "8192", ",", "'Size of dataset shuffling.'", ")", "\n", "flags", ".", "DEFINE_string", "(", "'data_dir'", ",", "''", ",", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.augment.core.get_tf_augment": [[43, 51], ["dict", "dict", "dict", "dict", "dict", "core.shift", "core.cutout", "core.mirror", "core.cutout", "core.shift", "core.shift", "core.mirror", "core.shift"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.augment.core.shift", "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.cutout", "home.repos.pwc.inspect_result.google-research_adamatch.augment.core.mirror", "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.cutout", "home.repos.pwc.inspect_result.google-research_adamatch.augment.core.shift", "home.repos.pwc.inspect_result.google-research_adamatch.augment.core.shift", "home.repos.pwc.inspect_result.google-research_adamatch.augment.core.mirror", "home.repos.pwc.inspect_result.google-research_adamatch.augment.core.shift"], ["'If None then environment variable ML_DATA '", "\n", "'will be used as a data directory.'", ")", "\n", "\n", "DATA_DIR", "=", "os", ".", "path", ".", "join", "(", "os", ".", "environ", "[", "'ML_DATA'", "]", ",", "'NextMatch'", ")", "if", "'ML_DATA'", "in", "os", ".", "environ", "else", "''", "\n", "\n", "\n", "def", "_data_setup", "(", ")", ":", "\n", "# set up data directory", "\n", "    ", "global", "DATA_DIR", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.augment.augment.AugmentPoolBase.round_mem": [[39, 42], ["None"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "round_mem", "(", "v", ":", "int", ",", "align", ":", "int", "=", "16", ")", ":", "\n", "        ", "return", "align", "*", "(", "(", "v", "+", "align", "-", "1", ")", "//", "align", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.augment.augment.AugmentPoolBase.get_np_arrays": [[43, 47], ["numpy.cumsum", "SHARED_MEMORY_NP[].reshape", "zip", "augment.AugmentPoolBase.round_mem", "numpy.prod", "numpy.prod"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.augment.augment.AugmentPoolBase.round_mem"], ["", "@", "staticmethod", "\n", "def", "get_np_arrays", "(", "shapes", ")", ":", "\n", "        ", "offsets", "=", "np", ".", "cumsum", "(", "[", "0", "]", "+", "[", "AugmentPoolBase", ".", "round_mem", "(", "np", ".", "prod", "(", "s", ")", ")", "for", "s", "in", "shapes", "[", ":", "-", "1", "]", "]", ")", "\n", "return", "[", "SHARED_MEMORY_NP", "[", "o", ":", "o", "+", "np", ".", "prod", "(", "s", ")", "]", ".", "reshape", "(", "s", ")", "for", "o", ",", "s", "in", "zip", "(", "offsets", ",", "shapes", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.augment.augment.AugmentPoolBase.check_mem_requirements": [[48, 51], ["sum", "augment.AugmentPoolBase.round_mem", "numpy.prod"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.augment.augment.AugmentPoolBase.round_mem"], ["", "def", "check_mem_requirements", "(", "self", ")", ":", "\n", "        ", "total", "=", "sum", "(", "self", ".", "round_mem", "(", "np", ".", "prod", "(", "v", ")", ")", "for", "v", "in", "self", ".", "shapes", ")", "\n", "assert", "total", "<=", "SHARED_MEMORY_SIZE", ",", "f'Too little shared memory, do: export SHARED_MEMORY_SIZE={total}'", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.augment.augment.AugmentPoolBase.stop": [[52, 54], ["None"], "methods", ["None"], ["", "def", "stop", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "", "", ""]], "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.CTAugment.__init__": [[45, 52], ["OPS.items", "tuple", "numpy.ones"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "depth", ":", "int", "=", "2", ",", "th", ":", "float", "=", "0.85", ",", "decay", ":", "float", "=", "0.99", ")", ":", "\n", "        ", "self", ".", "decay", "=", "decay", "\n", "self", ".", "depth", "=", "depth", "\n", "self", ".", "th", "=", "th", "\n", "self", ".", "rates", "=", "{", "}", "\n", "for", "k", ",", "op", "in", "OPS", ".", "items", "(", ")", ":", "\n", "            ", "self", ".", "rates", "[", "k", "]", "=", "tuple", "(", "[", "np", ".", "ones", "(", "x", ",", "'f'", ")", "for", "x", "in", "op", ".", "bins", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.CTAugment.rate_to_p": [[53, 58], ["p.max"], "methods", ["None"], ["", "", "def", "rate_to_p", "(", "self", ",", "rate", ")", ":", "\n", "        ", "p", "=", "rate", "+", "(", "1", "-", "self", ".", "decay", ")", "# Avoid to have all zero.", "\n", "p", "=", "p", "/", "p", ".", "max", "(", ")", "\n", "p", "[", "p", "<", "self", ".", "th", "]", "=", "0", "\n", "return", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.CTAugment.policy": [[59, 80], ["list", "range", "OPS.keys", "range", "random.choice", "numpy.random.uniform", "zip", "v.append", "random.choice", "numpy.random.uniform", "v.append", "len", "ctaugment.CTAugment.rate_to_p", "numpy.random.choice", "vt.append", "OP", "len", "OP", "numpy.random.uniform.tolist", "ctaugment.CTAugment.sum"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.CTAugment.rate_to_p"], ["", "def", "policy", "(", "self", ",", "probe", ")", ":", "\n", "        ", "kl", "=", "list", "(", "OPS", ".", "keys", "(", ")", ")", "\n", "v", "=", "[", "]", "\n", "if", "probe", ":", "\n", "            ", "for", "_", "in", "range", "(", "self", ".", "depth", ")", ":", "\n", "                ", "k", "=", "random", ".", "choice", "(", "kl", ")", "\n", "bins", "=", "self", ".", "rates", "[", "k", "]", "\n", "rnd", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "1", ",", "len", "(", "bins", ")", ")", "\n", "v", ".", "append", "(", "OP", "(", "k", ",", "rnd", ".", "tolist", "(", ")", ")", ")", "\n", "", "return", "v", "\n", "", "for", "_", "in", "range", "(", "self", ".", "depth", ")", ":", "\n", "            ", "vt", "=", "[", "]", "\n", "k", "=", "random", ".", "choice", "(", "kl", ")", "\n", "bins", "=", "self", ".", "rates", "[", "k", "]", "\n", "rnd", "=", "np", ".", "random", ".", "uniform", "(", "0", ",", "1", ",", "len", "(", "bins", ")", ")", "\n", "for", "r", ",", "bin", "in", "zip", "(", "rnd", ",", "bins", ")", ":", "\n", "                ", "p", "=", "self", ".", "rate_to_p", "(", "bin", ")", "\n", "value", "=", "np", ".", "random", ".", "choice", "(", "p", ".", "shape", "[", "0", "]", ",", "p", "=", "p", "/", "p", ".", "sum", "(", ")", ")", "\n", "vt", ".", "append", "(", "(", "value", "+", "r", ")", "/", "p", ".", "shape", "[", "0", "]", ")", "\n", "", "v", ".", "append", "(", "OP", "(", "k", ",", "vt", ")", ")", "\n", "", "return", "v", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.CTAugment.update_rates": [[81, 86], ["zip", "int", "len"], "methods", ["None"], ["", "def", "update_rates", "(", "self", ",", "policy", ",", "proximity", ")", ":", "\n", "        ", "for", "k", ",", "bins", "in", "policy", ":", "\n", "            ", "for", "p", ",", "rate", "in", "zip", "(", "bins", ",", "self", ".", "rates", "[", "k", "]", ")", ":", "\n", "                ", "p", "=", "int", "(", "p", "*", "len", "(", "rate", ")", "*", "0.999", ")", "\n", "rate", "[", "p", "]", "=", "rate", "[", "p", "]", "*", "self", ".", "decay", "+", "proximity", "*", "(", "1", "-", "self", ".", "decay", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.CTAugment.stats": [[87, 91], ["sorted", "OPS.keys", "ctaugment.CTAugment.rate_to_p"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.CTAugment.rate_to_p"], ["", "", "", "def", "stats", "(", "self", ")", ":", "\n", "        ", "return", "'\\n'", ".", "join", "(", "'%-16s    %s'", "%", "(", "k", ",", "' / '", ".", "join", "(", "' '", ".", "join", "(", "'%.2f'", "%", "x", "for", "x", "in", "self", ".", "rate_to_p", "(", "rate", ")", ")", "\n", "for", "rate", "in", "self", ".", "rates", "[", "k", "]", ")", ")", "\n", "for", "k", "in", "sorted", "(", "OPS", ".", "keys", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.register": [[27, 33], ["OP"], "function", ["None"], ["def", "register", "(", "*", "bins", ")", ":", "\n", "    ", "def", "wrap", "(", "f", ")", ":", "\n", "        ", "OPS", "[", "f", ".", "__name__", "]", "=", "OP", "(", "f", ",", "bins", ")", "\n", "return", "f", "\n", "\n", "", "return", "wrap", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.apply": [[35, 42], ["PIL.Image.fromarray", "numpy.round().clip().astype", "OPS[].f", "numpy.asarray().astype", "numpy.round().clip", "numpy.asarray", "numpy.round"], "function", ["None"], ["", "def", "apply", "(", "x", ",", "ops", ")", ":", "\n", "    ", "if", "ops", "is", "None", ":", "\n", "        ", "return", "x", "\n", "", "y", "=", "Image", ".", "fromarray", "(", "np", ".", "round", "(", "127.5", "+", "128", "*", "x", ")", ".", "clip", "(", "0", ",", "255", ")", ".", "astype", "(", "'uint8'", ")", ")", "\n", "for", "op", ",", "args", "in", "ops", ":", "\n", "        ", "y", "=", "OPS", "[", "op", "]", ".", "f", "(", "y", ",", "*", "args", ")", "\n", "", "return", "(", "np", ".", "asarray", "(", "y", ")", ".", "astype", "(", "'f'", ")", "-", "127.5", ")", "/", "128", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment._enhance": [[93, 95], ["op().enhance", "PIL.ImageEnhance.Brightness", "ctaugment.brightness", "PIL.ImageEnhance.Color", "ctaugment.color", "PIL.ImageEnhance.Contrast", "ctaugment.contrast", "PIL.ImageEnhance.Sharpness", "ctaugment.sharpness"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.brightness", "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.color", "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.contrast", "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.sharpness"], ["", "", "def", "_enhance", "(", "x", ",", "op", ",", "level", ")", ":", "\n", "    ", "return", "op", "(", "x", ")", ".", "enhance", "(", "0.1", "+", "1.9", "*", "level", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment._imageop": [[97, 99], ["PIL.Image.blend", "PIL.ImageOps.autocontrast", "PIL.ImageOps.equalize", "PIL.ImageOps.invert"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.autocontrast", "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.equalize", "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.invert"], ["", "def", "_imageop", "(", "x", ",", "op", ",", "level", ")", ":", "\n", "    ", "return", "Image", ".", "blend", "(", "x", ",", "op", "(", "x", ")", ",", "level", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment._filter": [[101, 103], ["PIL.Image.blend", "x.filter", "PIL.ImageFilter.BLUR", "PIL.ImageFilter.SMOOTH"], "function", ["None"], ["", "def", "_filter", "(", "x", ",", "op", ",", "level", ")", ":", "\n", "    ", "return", "Image", ".", "blend", "(", "x", ",", "x", ".", "filter", "(", "op", ")", ",", "level", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.autocontrast": [[105, 108], ["ctaugment.register", "ctaugment._imageop"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.register", "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment._imageop"], ["", "@", "register", "(", "17", ")", "\n", "def", "autocontrast", "(", "x", ",", "level", ")", ":", "\n", "    ", "return", "_imageop", "(", "x", ",", "ImageOps", ".", "autocontrast", ",", "level", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.blur": [[110, 113], ["ctaugment.register", "ctaugment._filter"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.register", "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment._filter"], ["", "@", "register", "(", "17", ")", "\n", "def", "blur", "(", "x", ",", "level", ")", ":", "\n", "    ", "return", "_filter", "(", "x", ",", "ImageFilter", ".", "BLUR", ",", "level", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.brightness": [[115, 118], ["ctaugment.register", "ctaugment._enhance"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.register", "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment._enhance"], ["", "@", "register", "(", "17", ")", "\n", "def", "brightness", "(", "x", ",", "brightness", ")", ":", "\n", "    ", "return", "_enhance", "(", "x", ",", "ImageEnhance", ".", "Brightness", ",", "brightness", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.color": [[120, 123], ["ctaugment.register", "ctaugment._enhance"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.register", "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment._enhance"], ["", "@", "register", "(", "17", ")", "\n", "def", "color", "(", "x", ",", "color", ")", ":", "\n", "    ", "return", "_enhance", "(", "x", ",", "ImageEnhance", ".", "Color", ",", "color", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.contrast": [[125, 128], ["ctaugment.register", "ctaugment._enhance"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.register", "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment._enhance"], ["", "@", "register", "(", "17", ")", "\n", "def", "contrast", "(", "x", ",", "contrast", ")", ":", "\n", "    ", "return", "_enhance", "(", "x", ",", "ImageEnhance", ".", "Contrast", ",", "contrast", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.cutout": [[130, 144], ["ctaugment.register", "numpy.random.randint", "numpy.random.randint", "x.load", "range", "int", "max", "max", "min", "min", "range", "min"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.register"], ["", "@", "register", "(", "17", ")", "\n", "def", "cutout", "(", "x", ",", "level", ")", ":", "\n", "    ", "\"\"\"Apply cutout to pil_img at the specified level.\"\"\"", "\n", "size", "=", "1", "+", "int", "(", "level", "*", "min", "(", "x", ".", "size", ")", "*", "0.499", ")", "\n", "img_height", ",", "img_width", "=", "x", ".", "size", "\n", "height_loc", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "img_height", ")", "\n", "width_loc", "=", "np", ".", "random", ".", "randint", "(", "low", "=", "0", ",", "high", "=", "img_width", ")", "\n", "upper_coord", "=", "(", "max", "(", "0", ",", "height_loc", "-", "size", "//", "2", ")", ",", "max", "(", "0", ",", "width_loc", "-", "size", "//", "2", ")", ")", "\n", "lower_coord", "=", "(", "min", "(", "img_height", ",", "height_loc", "+", "size", "//", "2", ")", ",", "min", "(", "img_width", ",", "width_loc", "+", "size", "//", "2", ")", ")", "\n", "pixels", "=", "x", ".", "load", "(", ")", "# create the pixel map", "\n", "for", "i", "in", "range", "(", "upper_coord", "[", "0", "]", ",", "lower_coord", "[", "0", "]", ")", ":", "# for every col:", "\n", "        ", "for", "j", "in", "range", "(", "upper_coord", "[", "1", "]", ",", "lower_coord", "[", "1", "]", ")", ":", "# For every row", "\n", "            ", "pixels", "[", "i", ",", "j", "]", "=", "(", "127", ",", "127", ",", "127", ")", "# set the color accordingly", "\n", "", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.equalize": [[146, 149], ["ctaugment.register", "ctaugment._imageop"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.register", "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment._imageop"], ["", "@", "register", "(", "17", ")", "\n", "def", "equalize", "(", "x", ",", "level", ")", ":", "\n", "    ", "return", "_imageop", "(", "x", ",", "ImageOps", ".", "equalize", ",", "level", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.invert": [[151, 154], ["ctaugment.register", "ctaugment._imageop"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.register", "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment._imageop"], ["", "@", "register", "(", "17", ")", "\n", "def", "invert", "(", "x", ",", "level", ")", ":", "\n", "    ", "return", "_imageop", "(", "x", ",", "ImageOps", ".", "invert", ",", "level", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.identity": [[156, 159], ["ctaugment.register"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.register"], ["", "@", "register", "(", ")", "\n", "def", "identity", "(", "x", ")", ":", "\n", "    ", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.posterize": [[161, 165], ["ctaugment.register", "PIL.ImageOps.posterize", "int"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.register", "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.posterize"], ["", "@", "register", "(", "8", ")", "\n", "def", "posterize", "(", "x", ",", "level", ")", ":", "\n", "    ", "level", "=", "1", "+", "int", "(", "level", "*", "7.999", ")", "\n", "return", "ImageOps", ".", "posterize", "(", "x", ",", "level", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.rescale": [[167, 175], ["ctaugment.register", "x.crop().resize", "int", "x.crop"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.register"], ["", "@", "register", "(", "17", ",", "6", ")", "\n", "def", "rescale", "(", "x", ",", "scale", ",", "method", ")", ":", "\n", "    ", "s", "=", "x", ".", "size", "\n", "scale", "*=", "0.25", "\n", "crop", "=", "(", "scale", "*", "s", "[", "0", "]", ",", "scale", "*", "s", "[", "1", "]", ",", "s", "[", "0", "]", "*", "(", "1", "-", "scale", ")", ",", "s", "[", "1", "]", "*", "(", "1", "-", "scale", ")", ")", "\n", "methods", "=", "(", "Image", ".", "ANTIALIAS", ",", "Image", ".", "BICUBIC", ",", "Image", ".", "BILINEAR", ",", "Image", ".", "BOX", ",", "Image", ".", "HAMMING", ",", "Image", ".", "NEAREST", ")", "\n", "method", "=", "methods", "[", "int", "(", "method", "*", "5.99", ")", "]", "\n", "return", "x", ".", "crop", "(", "crop", ")", ".", "resize", "(", "x", ".", "size", ",", "method", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.rotate": [[177, 181], ["ctaugment.register", "int", "x.rotate", "numpy.round"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.register", "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.rotate"], ["", "@", "register", "(", "17", ")", "\n", "def", "rotate", "(", "x", ",", "angle", ")", ":", "\n", "    ", "angle", "=", "int", "(", "np", ".", "round", "(", "(", "2", "*", "angle", "-", "1", ")", "*", "45", ")", ")", "\n", "return", "x", ".", "rotate", "(", "angle", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.sharpness": [[183, 186], ["ctaugment.register", "ctaugment._enhance"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.register", "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment._enhance"], ["", "@", "register", "(", "17", ")", "\n", "def", "sharpness", "(", "x", ",", "sharpness", ")", ":", "\n", "    ", "return", "_enhance", "(", "x", ",", "ImageEnhance", ".", "Sharpness", ",", "sharpness", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.shear_x": [[188, 192], ["ctaugment.register", "x.transform"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.register"], ["", "@", "register", "(", "17", ")", "\n", "def", "shear_x", "(", "x", ",", "shear", ")", ":", "\n", "    ", "shear", "=", "(", "2", "*", "shear", "-", "1", ")", "*", "0.3", "\n", "return", "x", ".", "transform", "(", "x", ".", "size", ",", "Image", ".", "AFFINE", ",", "(", "1", ",", "shear", ",", "0", ",", "0", ",", "1", ",", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.shear_y": [[194, 198], ["ctaugment.register", "x.transform"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.register"], ["", "@", "register", "(", "17", ")", "\n", "def", "shear_y", "(", "x", ",", "shear", ")", ":", "\n", "    ", "shear", "=", "(", "2", "*", "shear", "-", "1", ")", "*", "0.3", "\n", "return", "x", ".", "transform", "(", "x", ".", "size", ",", "Image", ".", "AFFINE", ",", "(", "1", ",", "0", ",", "0", ",", "shear", ",", "1", ",", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.smooth": [[200, 203], ["ctaugment.register", "ctaugment._filter"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.register", "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment._filter"], ["", "@", "register", "(", "17", ")", "\n", "def", "smooth", "(", "x", ",", "level", ")", ":", "\n", "    ", "return", "_filter", "(", "x", ",", "ImageFilter", ".", "SMOOTH", ",", "level", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.solarize": [[205, 209], ["ctaugment.register", "int", "PIL.ImageOps.solarize"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.register", "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.solarize"], ["", "@", "register", "(", "17", ")", "\n", "def", "solarize", "(", "x", ",", "th", ")", ":", "\n", "    ", "th", "=", "int", "(", "th", "*", "255.999", ")", "\n", "return", "ImageOps", ".", "solarize", "(", "x", ",", "th", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.translate_x": [[211, 215], ["ctaugment.register", "x.transform"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.register"], ["", "@", "register", "(", "17", ")", "\n", "def", "translate_x", "(", "x", ",", "delta", ")", ":", "\n", "    ", "delta", "=", "(", "2", "*", "delta", "-", "1", ")", "*", "0.3", "\n", "return", "x", ".", "transform", "(", "x", ".", "size", ",", "Image", ".", "AFFINE", ",", "(", "1", ",", "0", ",", "delta", ",", "0", ",", "1", ",", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.translate_y": [[217, 221], ["ctaugment.register", "x.transform"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.augment.ctaugment.register"], ["", "@", "register", "(", "17", ")", "\n", "def", "translate_y", "(", "x", ",", "delta", ")", ":", "\n", "    ", "delta", "=", "(", "2", "*", "delta", "-", "1", ")", "*", "0.3", "\n", "return", "x", ".", "transform", "(", "x", ".", "size", ",", "Image", ".", "AFFINE", ",", "(", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "delta", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.google-research_adamatch.ablation.adamatch_pretrain_fixed_wu.AdaMatchPretrainFixedWu.__init__": [[40, 116], ["google3.experimental.brain.red_team.nextmatch.domain_adaptation.lib.train.TrainableDAModule.__init__", "model", "objax.optimizer.ExponentialMovingAverageModule", "adamatch_pretrain_fixed_wu.AdaMatchPretrainFixedWu.model_ema.update_ema", "objax.Module", "objax.nn.ExponentialMovingAverage", "objax.nn.MovingAverage", "objax.optimizer.Momentum", "google3.experimental.brain.red_team.nextmatch.shared.train.ScheduleCos", "objax.Function.with_vars", "objax.GradValues", "objax.Function.with_vars", "google3.experimental.brain.red_team.nextmatch.shared.util.MyParallel", "google3.experimental.brain.red_team.nextmatch.shared.util.MyParallel", "adamatch_pretrain_fixed_wu.AdaMatchPretrainFixedWu.model.vars", "adamatch_pretrain_fixed_wu.AdaMatchPretrainFixedWu.stats.vars", "objax.functional.softmax", "adamatch_pretrain_fixed_wu.AdaMatchPretrainFixedWu.model_ema.vars", "adamatch_pretrain_fixed_wu.AdaMatchPretrainFixedWu.model.vars().tensors", "adamatch_pretrain_fixed_wu.AdaMatchPretrainFixedWu.model", "adamatch_pretrain_fixed_wu.AdaMatchPretrainFixedWu.model.vars().assign", "jax.concatenate().reshape", "jax.concatenate().reshape", "adamatch_pretrain_fixed_wu.AdaMatchPretrainFixedWu.model", "jax.split", "jax.split", "objax.functional.softmax", "adamatch_pretrain_fixed_wu.AdaMatchPretrainFixedWu.stats.p_labeled", "adamatch_pretrain_fixed_wu.AdaMatchPretrainFixedWu.stats.p_unlabeled", "objax.functional.stop_gradient", "objax.functional.loss.cross_entropy_logits_sparse", "adamatch_pretrain_fixed_wu.AdaMatchPretrainFixedWu.lr", "objax.GradValues.", "adamatch_pretrain_fixed_wu.AdaMatchPretrainFixedWu.opt", "adamatch_pretrain_fixed_wu.AdaMatchPretrainFixedWu.model_ema.update_ema", "adamatch_pretrain_fixed_wu.AdaMatchPretrainFixedWu.vars", "adamatch_pretrain_fixed_wu.AdaMatchPretrainFixedWu.model_ema", "sx.reshape", "objax.random.uniform", "objax.functional.softmax", "objax.functional.softmax().mean", "objax.functional.stop_gradient.mean", "objax.functional.stop_gradient.argmax", "sum", "adamatch_pretrain_fixed_wu.AdaMatchPretrainFixedWu.__init__.eval_op"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.baseline.Baseline.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nclass", ":", "int", ",", "model", ":", "Callable", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "nclass", ",", "kwargs", ")", "\n", "self", ".", "model", ":", "objax", ".", "Module", "=", "model", "(", "colors", "=", "3", ",", "nclass", "=", "nclass", ",", "**", "kwargs", ")", "\n", "self", ".", "model_ema", "=", "objax", ".", "optimizer", ".", "ExponentialMovingAverageModule", "(", "self", ".", "model", ",", "momentum", "=", "0.999", ")", "\n", "# Initialize weights of EMA with pretrained model's weights.", "\n", "self", ".", "model_ema", ".", "ema", ".", "momentum", "=", "0", "\n", "self", ".", "model_ema", ".", "update_ema", "(", ")", "\n", "self", ".", "model_ema", ".", "ema", ".", "momentum", "=", "0.999", "\n", "self", ".", "stats", "=", "objax", ".", "Module", "(", ")", "\n", "self", ".", "stats", ".", "keygen", "=", "objax", ".", "random", ".", "DEFAULT_GENERATOR", "\n", "self", ".", "stats", ".", "p_labeled", "=", "objax", ".", "nn", ".", "ExponentialMovingAverage", "(", "(", "nclass", ",", ")", ",", "init_value", "=", "1", "/", "nclass", ")", "\n", "self", ".", "stats", ".", "p_unlabeled", "=", "objax", ".", "nn", ".", "MovingAverage", "(", "(", "nclass", ",", ")", ",", "buffer_size", "=", "128", ",", "init_value", "=", "1", "/", "nclass", ")", "\n", "train_vars", "=", "self", ".", "model", ".", "vars", "(", ")", "+", "self", ".", "stats", ".", "vars", "(", ")", "\n", "self", ".", "opt", "=", "objax", ".", "optimizer", ".", "Momentum", "(", "train_vars", ")", "\n", "self", ".", "wu", "=", "self", ".", "params", ".", "wu", "\n", "self", ".", "lr", "=", "ScheduleCos", "(", "self", ".", "params", ".", "lr", ",", "self", ".", "params", ".", "lr_decay", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "model_ema", ".", "vars", "(", ")", ")", "\n", "def", "eval_op", "(", "x", ":", "JaxArray", ",", "domain", ":", "int", ")", "->", "JaxArray", ":", "\n", "            ", "return", "objax", ".", "functional", ".", "softmax", "(", "self", ".", "model_ema", "(", "x", ",", "training", "=", "False", ",", "domain", "=", "domain", ")", ")", "\n", "\n", "", "def", "loss_function", "(", "sx", ",", "sy", ",", "tu", ",", "progress", ")", ":", "\n", "            ", "c", ",", "h", ",", "w", "=", "sx", ".", "shape", "[", "-", "3", ":", "]", "\n", "saved_vars", "=", "self", ".", "model", ".", "vars", "(", ")", ".", "tensors", "(", ")", "\n", "logit_bn_x", "=", "self", ".", "model", "(", "sx", ".", "reshape", "(", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", ")", ",", "training", "=", "True", ")", "\n", "self", ".", "model", ".", "vars", "(", ")", ".", "assign", "(", "saved_vars", ")", "\n", "xu", "=", "jn", ".", "concatenate", "(", "(", "sx", ",", "tu", ")", ")", ".", "reshape", "(", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", ")", "\n", "logit", "=", "self", ".", "model", "(", "xu", ",", "training", "=", "True", ")", "\n", "logit_sx", ",", "logit_tu", "=", "jn", ".", "split", "(", "logit", ",", "(", "2", "*", "sx", ".", "shape", "[", "0", "]", ",", ")", ")", "\n", "logit_sx", "+=", "(", "logit_bn_x", "-", "logit_sx", ")", "*", "objax", ".", "random", ".", "uniform", "(", "logit_sx", ".", "shape", ")", "\n", "logit_sx_weak", ",", "logit_sx_strong", "=", "logit_sx", "[", ":", ":", "2", "]", ",", "logit_sx", "[", "1", ":", ":", "2", "]", "\n", "logit_tu_weak", ",", "logit_tu_strong", "=", "logit_tu", "[", ":", ":", "2", "]", ",", "logit_tu", "[", "1", ":", ":", "2", "]", "\n", "\n", "if", "self", ".", "params", ".", "use_cr", ":", "\n", "                ", "real_confidence", "=", "objax", ".", "functional", ".", "softmax", "(", "stop_gradient", "(", "logit_sx_weak", ")", ")", "\n", "confidence_ratio", "=", "real_confidence", ".", "max", "(", "1", ")", ".", "mean", "(", "0", ")", "*", "self", ".", "params", ".", "confidence", "\n", "", "else", ":", "\n", "                ", "confidence_ratio", "=", "self", ".", "params", ".", "confidence", "\n", "\n", "", "pseudo_labels", "=", "objax", ".", "functional", ".", "softmax", "(", "logit_tu_weak", ")", "\n", "p_labeled", "=", "self", ".", "stats", ".", "p_labeled", "(", "objax", ".", "functional", ".", "softmax", "(", "logit_sx_weak", ")", ".", "mean", "(", "0", ")", ")", "\n", "p_unlabeled", "=", "self", ".", "stats", ".", "p_unlabeled", "(", "pseudo_labels", ".", "mean", "(", "0", ")", ")", "\n", "pseudo_labels", "*=", "(", "1e-6", "+", "p_labeled", ")", "/", "(", "1e-6", "+", "p_unlabeled", ")", "\n", "pseudo_labels", "=", "stop_gradient", "(", "pseudo_labels", "/", "pseudo_labels", ".", "sum", "(", "1", ",", "keepdims", "=", "True", ")", ")", "\n", "pseudo_mask", "=", "(", "pseudo_labels", ".", "max", "(", "axis", "=", "1", ")", ">=", "confidence_ratio", ")", ".", "astype", "(", "pseudo_labels", ".", "dtype", ")", "\n", "\n", "xe", "=", "0.5", "*", "(", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_sx_weak", ",", "sy", ")", ".", "mean", "(", ")", "+", "\n", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_sx_strong", ",", "sy", ")", ".", "mean", "(", ")", ")", "\n", "xeu", "=", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits_sparse", "(", "logit_tu_strong", ",", "pseudo_labels", ".", "argmax", "(", "axis", "=", "1", ")", ")", "\n", "xeu", "=", "(", "xeu", "*", "pseudo_mask", ")", ".", "mean", "(", ")", "\n", "wd", "=", "0.5", "*", "sum", "(", "(", "v", ".", "value", "**", "2", ")", ".", "sum", "(", ")", "for", "k", ",", "v", "in", "train_vars", ".", "items", "(", ")", "if", "k", ".", "endswith", "(", "'.w'", ")", ")", "\n", "\n", "loss", "=", "xe", "+", "self", ".", "wu", "*", "xeu", "+", "self", ".", "params", ".", "wd", "*", "wd", "\n", "return", "loss", ",", "{", "'losses/xe'", ":", "xe", ",", "\n", "'losses/xeu'", ":", "xeu", ",", "\n", "'losses/wd'", ":", "wd", ",", "\n", "'losses/hregbn'", ":", "jn", ".", "square", "(", "logit_sx", "-", "logit_bn_x", ")", ".", "mean", "(", ")", ",", "\n", "'monitors/confidence_ratio'", ":", "confidence_ratio", ",", "\n", "'monitors/wu'", ":", "self", ".", "wu", ",", "\n", "'monitors/mask'", ":", "pseudo_mask", ".", "mean", "(", ")", ",", "\n", "'monitors/klmodel'", ":", "objax", ".", "functional", ".", "divergence", ".", "kl", "(", "p_labeled", ",", "p_unlabeled", ")", "}", "\n", "\n", "", "gv", "=", "objax", ".", "GradValues", "(", "loss_function", ",", "train_vars", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "vars", "(", ")", ")", "\n", "def", "train_op", "(", "step", ",", "sx", ",", "sy", ",", "tu", ",", "probe", "=", "None", ")", ":", "\n", "            ", "y_probe", "=", "eval_op", "(", "probe", ",", "1", ")", "if", "probe", "is", "not", "None", "else", "None", "\n", "p", "=", "step", "/", "(", "FLAGS", ".", "train_mimg", "<<", "20", ")", "\n", "lr", "=", "self", ".", "lr", "(", "p", ")", "\n", "g", ",", "v", "=", "gv", "(", "sx", ",", "sy", ",", "tu", ",", "p", ")", "\n", "self", ".", "opt", "(", "lr", ",", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "g", ")", ")", "\n", "self", ".", "model_ema", ".", "update_ema", "(", ")", "\n", "return", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "{", "'monitors/lr'", ":", "lr", ",", "**", "v", "[", "1", "]", "}", ")", ",", "y_probe", "\n", "\n", "", "self", ".", "train_op", "=", "MyParallel", "(", "train_op", ",", "reduce", "=", "lambda", "x", ":", "x", ")", "\n", "self", ".", "eval_op", "=", "MyParallel", "(", "eval_op", ",", "static_argnums", "=", "(", "1", ",", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.ablation.adamatch_pretrain_fixed_wu.main": [[118, 152], ["print", "print", "google3.experimental.brain.red_team.nextmatch.shared.util.setup_tf", "adamatch_pretrain_fixed_wu.AdaMatchPretrainFixedWu", "os.path.join", "enumerate", "absl.flags.FLAGS.augment.startswith", "AdaMatchPretrainFixedWu.train", "google3.experimental.brain.red_team.nextmatch.domain_adaptation.lib.data.CTAData.stop", "google3.experimental.brain.red_team.nextmatch.shared.zoo.models.network", "test.update", "google3.experimental.brain.red_team.nextmatch.domain_adaptation.lib.data.MixData", "absl.flags.FLAGS.augment.startswith", "google3.experimental.brain.red_team.nextmatch.shared.data.fsl.DATASETS", "google3.experimental.brain.red_team.nextmatch.shared.data.fsl.DATASETS", "sorted", "google3.experimental.brain.red_team.nextmatch.domain_adaptation.lib.data.CTAData", "ValueError", "jax.host_id", "jax.host_id", "jax.host_count", "jax.host_count", "str", "v.parse().batch().nchw().map().prefetch", "testset.items", "jax.devices", "jax.devices", "AdaMatchPretrainFixedWu.params.items", "v.parse().batch().nchw().map", "v.parse().batch().nchw", "v.parse().batch", "v.parse"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.shared.util.setup_tf", "home.repos.pwc.inspect_result.google-research_adamatch.shared.train.TrainableModule.train", "home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.noisy_student.PseudoLabeler.stop", "home.repos.pwc.inspect_result.google-research_adamatch.zoo.models.network", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.nchw", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.parse"], ["", "", "def", "main", "(", "argv", ")", ":", "\n", "    ", "del", "argv", "\n", "print", "(", "'JAX host: %d / %d'", "%", "(", "jax", ".", "host_id", "(", ")", ",", "jax", ".", "host_count", "(", ")", ")", ")", "\n", "print", "(", "'JAX devices:\\n%s'", "%", "'\\n'", ".", "join", "(", "str", "(", "d", ")", "for", "d", "in", "jax", ".", "devices", "(", ")", ")", ",", "flush", "=", "True", ")", "\n", "setup_tf", "(", ")", "\n", "source", "=", "FSL_DATASETS", "(", ")", "[", "f'{FLAGS.dataset}_{FLAGS.source}-0'", "]", "(", ")", "\n", "target", "=", "FSL_DATASETS", "(", ")", "[", "f'{FLAGS.dataset}_{FLAGS.target}-0'", "]", "(", ")", "\n", "testsets", "=", "[", "target", ".", "test", ",", "source", ".", "test", "]", "# Ordered by domain (target always first)", "\n", "module", "=", "AdaMatchPretrainFixedWu", "(", "source", ".", "nclass", ",", "network", "(", "FLAGS", ".", "arch", ")", ",", "\n", "lr", "=", "FLAGS", ".", "lr", ",", "\n", "lr_decay", "=", "FLAGS", ".", "lr_decay", ",", "\n", "wd", "=", "FLAGS", ".", "wd", ",", "\n", "arch", "=", "FLAGS", ".", "arch", ",", "\n", "batch", "=", "FLAGS", ".", "batch", ",", "\n", "wu", "=", "FLAGS", ".", "wu", ",", "\n", "confidence", "=", "FLAGS", ".", "confidence", ",", "\n", "use_cr", "=", "FLAGS", ".", "use_cr", ",", "\n", "uratio", "=", "FLAGS", ".", "uratio", ")", "\n", "logdir", "=", "f'DA/{FLAGS.dataset}/{FLAGS.source}/{FLAGS.target}/{FLAGS.augment}/{module.__class__.__name__}/%s'", "%", "(", "\n", "'_'", ".", "join", "(", "sorted", "(", "'%s%s'", "%", "k", "for", "k", "in", "module", ".", "params", ".", "items", "(", ")", ")", ")", ")", "\n", "logdir", "=", "os", ".", "path", ".", "join", "(", "FLAGS", ".", "logdir", ",", "logdir", ")", "\n", "test", "=", "{", "}", "\n", "for", "domain", ",", "testset", "in", "enumerate", "(", "testsets", ")", ":", "\n", "        ", "test", ".", "update", "(", "(", "f'{FLAGS.source}_to_{k}'", ",", "\n", "v", ".", "parse", "(", ")", ".", "batch", "(", "FLAGS", ".", "batch", ")", ".", "nchw", "(", ")", ".", "map", "(", "lambda", "d", ":", "{", "**", "d", ",", "'domain'", ":", "domain", "}", ")", ".", "prefetch", "(", "16", ")", ")", "\n", "for", "k", ",", "v", "in", "testset", ".", "items", "(", ")", ")", "\n", "", "if", "FLAGS", ".", "augment", ".", "startswith", "(", "'('", ")", ":", "\n", "        ", "train", "=", "MixData", "(", "source", ".", "train", ",", "target", ".", "train", ",", "source", ".", "nclass", ",", "FLAGS", ".", "batch", ",", "FLAGS", ".", "uratio", ")", "\n", "", "elif", "FLAGS", ".", "augment", ".", "startswith", "(", "'CTA('", ")", ":", "\n", "        ", "train", "=", "CTAData", "(", "source", ".", "train", ",", "target", ".", "train", ",", "source", ".", "nclass", ",", "FLAGS", ".", "batch", ",", "FLAGS", ".", "uratio", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "f'Augment flag value {FLAGS.augment} not supported.'", ")", "\n", "", "module", ".", "train", "(", "FLAGS", ".", "train_mimg", "<<", "10", ",", "FLAGS", ".", "report_kimg", ",", "train", ",", "test", ",", "logdir", ",", "FLAGS", ".", "keep_ckpts", ")", "\n", "train", ".", "stop", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.ablation.adamatch_source_align.AdaMatchSourceAlign.__init__": [[38, 110], ["domain_adaptation.lib.train.TrainableDAModule.__init__", "model", "objax.optimizer.ExponentialMovingAverageModule", "objax.Module", "objax.nn.ExponentialMovingAverage", "objax.nn.MovingAverage", "objax.optimizer.Momentum", "shared.train.ScheduleCosPhases", "shared.train.ScheduleCos", "objax.Function.with_vars", "objax.GradValues", "objax.Function.with_vars", "shared.util.MyParallel", "shared.util.MyParallel", "adamatch_source_align.AdaMatchSourceAlign.model.vars", "adamatch_source_align.AdaMatchSourceAlign.stats.vars", "objax.functional.softmax", "adamatch_source_align.AdaMatchSourceAlign.model_ema.vars", "adamatch_source_align.AdaMatchSourceAlign.model.vars().tensors", "adamatch_source_align.AdaMatchSourceAlign.model", "adamatch_source_align.AdaMatchSourceAlign.model.vars().assign", "jax.concatenate().reshape", "jax.concatenate().reshape", "adamatch_source_align.AdaMatchSourceAlign.model", "jax.split", "jax.split", "objax.functional.softmax", "adamatch_source_align.AdaMatchSourceAlign.stats.p_data", "adamatch_source_align.AdaMatchSourceAlign.stats.p_unlabeled", "objax.functional.stop_gradient", "objax.functional.loss.cross_entropy_logits_sparse", "adamatch_source_align.AdaMatchSourceAlign.lr", "objax.GradValues.", "adamatch_source_align.AdaMatchSourceAlign.opt", "adamatch_source_align.AdaMatchSourceAlign.model_ema.update_ema", "adamatch_source_align.AdaMatchSourceAlign.vars", "adamatch_source_align.AdaMatchSourceAlign.model_ema", "sx.reshape", "objax.random.uniform", "objax.functional.softmax", "sy.mean", "objax.functional.stop_gradient.mean", "objax.functional.stop_gradient.argmax", "sum", "adamatch_source_align.AdaMatchSourceAlign.__init__.eval_op"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.baseline.Baseline.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nclass", ":", "int", ",", "model", ":", "Callable", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "nclass", ",", "kwargs", ")", "\n", "self", ".", "model", ":", "objax", ".", "Module", "=", "model", "(", "colors", "=", "3", ",", "nclass", "=", "nclass", ",", "**", "kwargs", ")", "\n", "self", ".", "model_ema", "=", "objax", ".", "optimizer", ".", "ExponentialMovingAverageModule", "(", "self", ".", "model", ",", "momentum", "=", "0.999", ")", "\n", "self", ".", "stats", "=", "objax", ".", "Module", "(", ")", "\n", "self", ".", "stats", ".", "keygen", "=", "objax", ".", "random", ".", "DEFAULT_GENERATOR", "\n", "self", ".", "stats", ".", "p_data", "=", "objax", ".", "nn", ".", "ExponentialMovingAverage", "(", "(", "nclass", ",", ")", ",", "init_value", "=", "1", "/", "nclass", ")", "\n", "self", ".", "stats", ".", "p_unlabeled", "=", "objax", ".", "nn", ".", "MovingAverage", "(", "(", "nclass", ",", ")", ",", "buffer_size", "=", "128", ",", "init_value", "=", "1", "/", "nclass", ")", "\n", "train_vars", "=", "self", ".", "model", ".", "vars", "(", ")", "+", "self", ".", "stats", ".", "vars", "(", ")", "\n", "self", ".", "opt", "=", "objax", ".", "optimizer", ".", "Momentum", "(", "train_vars", ")", "\n", "self", ".", "wu", "=", "ScheduleCosPhases", "(", "1", ",", "[", "(", "0.5", ",", "1", ")", ",", "(", "1", ",", "self", ".", "params", ".", "wu", ")", "]", ",", "start_value", "=", "0", ")", "\n", "self", ".", "lr", "=", "ScheduleCos", "(", "self", ".", "params", ".", "lr", ",", "self", ".", "params", ".", "lr_decay", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "model_ema", ".", "vars", "(", ")", ")", "\n", "def", "eval_op", "(", "x", ":", "JaxArray", ",", "domain", ":", "int", ")", "->", "JaxArray", ":", "\n", "            ", "return", "objax", ".", "functional", ".", "softmax", "(", "self", ".", "model_ema", "(", "x", ",", "training", "=", "False", ",", "domain", "=", "domain", ")", ")", "\n", "\n", "", "def", "loss_function", "(", "sx", ",", "sy", ",", "tu", ",", "progress", ")", ":", "\n", "            ", "c", ",", "h", ",", "w", "=", "sx", ".", "shape", "[", "-", "3", ":", "]", "\n", "saved_vars", "=", "self", ".", "model", ".", "vars", "(", ")", ".", "tensors", "(", ")", "\n", "logit_bn_x", "=", "self", ".", "model", "(", "sx", ".", "reshape", "(", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", ")", ",", "training", "=", "True", ")", "\n", "self", ".", "model", ".", "vars", "(", ")", ".", "assign", "(", "saved_vars", ")", "\n", "xu", "=", "jn", ".", "concatenate", "(", "(", "sx", ",", "tu", ")", ")", ".", "reshape", "(", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", ")", "\n", "logit", "=", "self", ".", "model", "(", "xu", ",", "training", "=", "True", ")", "\n", "logit_sx", ",", "logit_tu", "=", "jn", ".", "split", "(", "logit", ",", "(", "2", "*", "sx", ".", "shape", "[", "0", "]", ",", ")", ")", "\n", "logit_sx", "+=", "(", "logit_bn_x", "-", "logit_sx", ")", "*", "objax", ".", "random", ".", "uniform", "(", "logit_sx", ".", "shape", ")", "\n", "logit_sx_weak", ",", "logit_sx_strong", "=", "logit_sx", "[", ":", ":", "2", "]", ",", "logit_sx", "[", "1", ":", ":", "2", "]", "\n", "logit_tu_weak", ",", "logit_tu_strong", "=", "logit_tu", "[", ":", ":", "2", "]", ",", "logit_tu", "[", "1", ":", ":", "2", "]", "\n", "\n", "if", "self", ".", "params", ".", "use_cr", ":", "\n", "                ", "real_confidence", "=", "objax", ".", "functional", ".", "softmax", "(", "stop_gradient", "(", "logit_sx_weak", ")", ")", "\n", "confidence_ratio", "=", "real_confidence", ".", "max", "(", "1", ")", ".", "mean", "(", "0", ")", "*", "self", ".", "params", ".", "confidence", "\n", "", "else", ":", "\n", "                ", "confidence_ratio", "=", "self", ".", "params", ".", "confidence", "\n", "\n", "", "pseudo_labels", "=", "objax", ".", "functional", ".", "softmax", "(", "logit_tu_weak", ")", "\n", "p_data", "=", "self", ".", "stats", ".", "p_data", "(", "sy", ".", "mean", "(", "0", ")", ")", "\n", "p_unlabeled", "=", "self", ".", "stats", ".", "p_unlabeled", "(", "pseudo_labels", ".", "mean", "(", "0", ")", ")", "\n", "pseudo_labels", "*=", "(", "1e-6", "+", "p_data", ")", "/", "(", "1e-6", "+", "p_unlabeled", ")", "\n", "pseudo_labels", "=", "stop_gradient", "(", "pseudo_labels", "/", "pseudo_labels", ".", "sum", "(", "1", ",", "keepdims", "=", "True", ")", ")", "\n", "pseudo_mask", "=", "(", "pseudo_labels", ".", "max", "(", "axis", "=", "1", ")", ">=", "confidence_ratio", ")", ".", "astype", "(", "pseudo_labels", ".", "dtype", ")", "\n", "\n", "xe", "=", "0.5", "*", "(", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_sx_weak", ",", "sy", ")", ".", "mean", "(", ")", "+", "\n", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_sx_strong", ",", "sy", ")", ".", "mean", "(", ")", ")", "\n", "xeu", "=", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits_sparse", "(", "logit_tu_strong", ",", "pseudo_labels", ".", "argmax", "(", "axis", "=", "1", ")", ")", "\n", "xeu", "=", "(", "xeu", "*", "pseudo_mask", ")", ".", "mean", "(", ")", "\n", "wd", "=", "0.5", "*", "sum", "(", "(", "v", ".", "value", "**", "2", ")", ".", "sum", "(", ")", "for", "k", ",", "v", "in", "train_vars", ".", "items", "(", ")", "if", "k", ".", "endswith", "(", "'.w'", ")", ")", "\n", "\n", "loss", "=", "xe", "+", "self", ".", "wu", "(", "progress", ")", "*", "xeu", "+", "self", ".", "params", ".", "wd", "*", "wd", "\n", "return", "loss", ",", "{", "'losses/xe'", ":", "xe", ",", "\n", "'losses/xeu'", ":", "xeu", ",", "\n", "'losses/wd'", ":", "wd", ",", "\n", "'losses/hregbn'", ":", "jn", ".", "square", "(", "logit_sx", "-", "logit_bn_x", ")", ".", "mean", "(", ")", ",", "\n", "'monitors/confidence_ratio'", ":", "confidence_ratio", ",", "\n", "'monitors/wu'", ":", "self", ".", "wu", "(", "progress", ")", ",", "\n", "'monitors/mask'", ":", "pseudo_mask", ".", "mean", "(", ")", ",", "\n", "'monitors/klmodel'", ":", "objax", ".", "functional", ".", "divergence", ".", "kl", "(", "p_data", ",", "p_unlabeled", ")", "}", "\n", "\n", "", "gv", "=", "objax", ".", "GradValues", "(", "loss_function", ",", "train_vars", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "vars", "(", ")", ")", "\n", "def", "train_op", "(", "step", ",", "sx", ",", "sy", ",", "tu", ",", "probe", "=", "None", ")", ":", "\n", "            ", "y_probe", "=", "eval_op", "(", "probe", ",", "1", ")", "if", "probe", "is", "not", "None", "else", "None", "\n", "p", "=", "step", "/", "(", "FLAGS", ".", "train_mimg", "<<", "20", ")", "\n", "lr", "=", "self", ".", "lr", "(", "p", ")", "\n", "g", ",", "v", "=", "gv", "(", "sx", ",", "sy", ",", "tu", ",", "p", ")", "\n", "self", ".", "opt", "(", "lr", ",", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "g", ")", ")", "\n", "self", ".", "model_ema", ".", "update_ema", "(", ")", "\n", "return", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "{", "'monitors/lr'", ":", "lr", ",", "**", "v", "[", "1", "]", "}", ")", ",", "y_probe", "\n", "\n", "", "self", ".", "train_op", "=", "MyParallel", "(", "train_op", ",", "reduce", "=", "lambda", "x", ":", "x", ")", "\n", "self", ".", "eval_op", "=", "MyParallel", "(", "eval_op", ",", "static_argnums", "=", "(", "1", ",", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.ablation.adamatch_source_align.main": [[112, 146], ["print", "print", "shared.util.setup_tf", "adamatch_source_align.AdaMatchSourceAlign", "os.path.join", "enumerate", "absl.flags.FLAGS.augment.startswith", "AdaMatchSourceAlign.train", "domain_adaptation.lib.data.CTAData.stop", "shared.zoo.models.network", "test.update", "domain_adaptation.lib.data.MixData", "absl.flags.FLAGS.augment.startswith", "shared.data.fsl.DATASETS", "shared.data.fsl.DATASETS", "sorted", "domain_adaptation.lib.data.CTAData", "ValueError", "jax.host_id", "jax.host_id", "jax.host_count", "jax.host_count", "str", "v.parse().batch().nchw().map().prefetch", "testset.items", "jax.devices", "jax.devices", "AdaMatchSourceAlign.params.items", "v.parse().batch().nchw().map", "v.parse().batch().nchw", "v.parse().batch", "v.parse"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.shared.util.setup_tf", "home.repos.pwc.inspect_result.google-research_adamatch.shared.train.TrainableModule.train", "home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.noisy_student.PseudoLabeler.stop", "home.repos.pwc.inspect_result.google-research_adamatch.zoo.models.network", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.nchw", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.parse"], ["", "", "def", "main", "(", "argv", ")", ":", "\n", "    ", "del", "argv", "\n", "print", "(", "'JAX host: %d / %d'", "%", "(", "jax", ".", "host_id", "(", ")", ",", "jax", ".", "host_count", "(", ")", ")", ")", "\n", "print", "(", "'JAX devices:\\n%s'", "%", "'\\n'", ".", "join", "(", "str", "(", "d", ")", "for", "d", "in", "jax", ".", "devices", "(", ")", ")", ",", "flush", "=", "True", ")", "\n", "setup_tf", "(", ")", "\n", "source", "=", "FSL_DATASETS", "(", ")", "[", "f'{FLAGS.dataset}_{FLAGS.source}-0'", "]", "(", ")", "\n", "target", "=", "FSL_DATASETS", "(", ")", "[", "f'{FLAGS.dataset}_{FLAGS.target}-0'", "]", "(", ")", "\n", "testsets", "=", "[", "target", ".", "test", ",", "source", ".", "test", "]", "# Ordered by domain (target always first)", "\n", "module", "=", "AdaMatchSourceAlign", "(", "source", ".", "nclass", ",", "network", "(", "FLAGS", ".", "arch", ")", ",", "\n", "lr", "=", "FLAGS", ".", "lr", ",", "\n", "lr_decay", "=", "FLAGS", ".", "lr_decay", ",", "\n", "wd", "=", "FLAGS", ".", "wd", ",", "\n", "arch", "=", "FLAGS", ".", "arch", ",", "\n", "batch", "=", "FLAGS", ".", "batch", ",", "\n", "wu", "=", "FLAGS", ".", "wu", ",", "\n", "confidence", "=", "FLAGS", ".", "confidence", ",", "\n", "use_cr", "=", "FLAGS", ".", "use_cr", ",", "\n", "uratio", "=", "FLAGS", ".", "uratio", ")", "\n", "logdir", "=", "f'DA/{FLAGS.dataset}/{FLAGS.source}/{FLAGS.target}/{FLAGS.augment}/{module.__class__.__name__}/%s'", "%", "(", "\n", "'_'", ".", "join", "(", "sorted", "(", "'%s%s'", "%", "k", "for", "k", "in", "module", ".", "params", ".", "items", "(", ")", ")", ")", ")", "\n", "logdir", "=", "os", ".", "path", ".", "join", "(", "FLAGS", ".", "logdir", ",", "logdir", ")", "\n", "test", "=", "{", "}", "\n", "for", "domain", ",", "testset", "in", "enumerate", "(", "testsets", ")", ":", "\n", "        ", "test", ".", "update", "(", "(", "f'{FLAGS.source}_to_{k}'", ",", "\n", "v", ".", "parse", "(", ")", ".", "batch", "(", "FLAGS", ".", "batch", ")", ".", "nchw", "(", ")", ".", "map", "(", "lambda", "d", ":", "{", "**", "d", ",", "'domain'", ":", "domain", "}", ")", ".", "prefetch", "(", "16", ")", ")", "\n", "for", "k", ",", "v", "in", "testset", ".", "items", "(", ")", ")", "\n", "", "if", "FLAGS", ".", "augment", ".", "startswith", "(", "'('", ")", ":", "\n", "        ", "train", "=", "MixData", "(", "source", ".", "train", ",", "target", ".", "train", ",", "source", ".", "nclass", ",", "FLAGS", ".", "batch", ",", "FLAGS", ".", "uratio", ")", "\n", "", "elif", "FLAGS", ".", "augment", ".", "startswith", "(", "'CTA('", ")", ":", "\n", "        ", "train", "=", "CTAData", "(", "source", ".", "train", ",", "target", ".", "train", ",", "source", ".", "nclass", ",", "FLAGS", ".", "batch", ",", "FLAGS", ".", "uratio", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "f'Augment flag value {FLAGS.augment} not supported.'", ")", "\n", "", "module", ".", "train", "(", "FLAGS", ".", "train_mimg", "<<", "10", ",", "FLAGS", ".", "report_kimg", ",", "train", ",", "test", ",", "logdir", ",", "FLAGS", ".", "keep_ckpts", ")", "\n", "train", ".", "stop", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.ablation.adamatch_no_logit_reg.AdaMatchNoLogitReg.__init__": [[38, 105], ["domain_adaptation.lib.train.TrainableDAModule.__init__", "model", "objax.optimizer.ExponentialMovingAverageModule", "objax.Module", "objax.nn.ExponentialMovingAverage", "objax.nn.MovingAverage", "objax.optimizer.Momentum", "shared.train.ScheduleCosPhases", "shared.train.ScheduleCos", "objax.Function.with_vars", "objax.GradValues", "objax.Function.with_vars", "shared.util.MyParallel", "shared.util.MyParallel", "adamatch_no_logit_reg.AdaMatchNoLogitReg.model.vars", "adamatch_no_logit_reg.AdaMatchNoLogitReg.stats.vars", "objax.functional.softmax", "adamatch_no_logit_reg.AdaMatchNoLogitReg.model_ema.vars", "jax.concatenate().reshape", "jax.concatenate().reshape", "adamatch_no_logit_reg.AdaMatchNoLogitReg.model", "jax.split", "jax.split", "objax.functional.softmax", "adamatch_no_logit_reg.AdaMatchNoLogitReg.stats.p_labeled", "adamatch_no_logit_reg.AdaMatchNoLogitReg.stats.p_unlabeled", "objax.functional.stop_gradient", "objax.functional.loss.cross_entropy_logits_sparse", "adamatch_no_logit_reg.AdaMatchNoLogitReg.lr", "objax.GradValues.", "adamatch_no_logit_reg.AdaMatchNoLogitReg.opt", "adamatch_no_logit_reg.AdaMatchNoLogitReg.model_ema.update_ema", "adamatch_no_logit_reg.AdaMatchNoLogitReg.vars", "adamatch_no_logit_reg.AdaMatchNoLogitReg.model_ema", "objax.functional.softmax", "objax.functional.softmax().mean", "objax.functional.stop_gradient.mean", "objax.functional.stop_gradient.argmax", "sum", "adamatch_no_logit_reg.AdaMatchNoLogitReg.__init__.eval_op"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.baseline.Baseline.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nclass", ":", "int", ",", "model", ":", "Callable", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "nclass", ",", "kwargs", ")", "\n", "self", ".", "model", ":", "objax", ".", "Module", "=", "model", "(", "colors", "=", "3", ",", "nclass", "=", "nclass", ",", "**", "kwargs", ")", "\n", "self", ".", "model_ema", "=", "objax", ".", "optimizer", ".", "ExponentialMovingAverageModule", "(", "self", ".", "model", ",", "momentum", "=", "0.999", ")", "\n", "self", ".", "stats", "=", "objax", ".", "Module", "(", ")", "\n", "self", ".", "stats", ".", "keygen", "=", "objax", ".", "random", ".", "DEFAULT_GENERATOR", "\n", "self", ".", "stats", ".", "p_labeled", "=", "objax", ".", "nn", ".", "ExponentialMovingAverage", "(", "(", "nclass", ",", ")", ",", "init_value", "=", "1", "/", "nclass", ")", "\n", "self", ".", "stats", ".", "p_unlabeled", "=", "objax", ".", "nn", ".", "MovingAverage", "(", "(", "nclass", ",", ")", ",", "buffer_size", "=", "128", ",", "init_value", "=", "1", "/", "nclass", ")", "\n", "train_vars", "=", "self", ".", "model", ".", "vars", "(", ")", "+", "self", ".", "stats", ".", "vars", "(", ")", "\n", "self", ".", "opt", "=", "objax", ".", "optimizer", ".", "Momentum", "(", "train_vars", ")", "\n", "self", ".", "wu", "=", "ScheduleCosPhases", "(", "1", ",", "[", "(", "0.5", ",", "1", ")", ",", "(", "1", ",", "self", ".", "params", ".", "wu", ")", "]", ",", "start_value", "=", "0", ")", "\n", "self", ".", "lr", "=", "ScheduleCos", "(", "self", ".", "params", ".", "lr", ",", "self", ".", "params", ".", "lr_decay", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "model_ema", ".", "vars", "(", ")", ")", "\n", "def", "eval_op", "(", "x", ":", "JaxArray", ",", "domain", ":", "int", ")", "->", "JaxArray", ":", "\n", "            ", "return", "objax", ".", "functional", ".", "softmax", "(", "self", ".", "model_ema", "(", "x", ",", "training", "=", "False", ",", "domain", "=", "domain", ")", ")", "\n", "\n", "", "def", "loss_function", "(", "sx", ",", "sy", ",", "tu", ",", "progress", ")", ":", "\n", "            ", "c", ",", "h", ",", "w", "=", "sx", ".", "shape", "[", "-", "3", ":", "]", "\n", "xu", "=", "jn", ".", "concatenate", "(", "(", "sx", ",", "tu", ")", ")", ".", "reshape", "(", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", ")", "\n", "logit", "=", "self", ".", "model", "(", "xu", ",", "training", "=", "True", ")", "\n", "logit_sx", ",", "logit_tu", "=", "jn", ".", "split", "(", "logit", ",", "(", "2", "*", "sx", ".", "shape", "[", "0", "]", ",", ")", ")", "\n", "logit_sx_weak", ",", "logit_sx_strong", "=", "logit_sx", "[", ":", ":", "2", "]", ",", "logit_sx", "[", "1", ":", ":", "2", "]", "\n", "logit_tu_weak", ",", "logit_tu_strong", "=", "logit_tu", "[", ":", ":", "2", "]", ",", "logit_tu", "[", "1", ":", ":", "2", "]", "\n", "\n", "if", "self", ".", "params", ".", "use_cr", ":", "\n", "                ", "real_confidence", "=", "objax", ".", "functional", ".", "softmax", "(", "stop_gradient", "(", "logit_sx_weak", ")", ")", "\n", "confidence_ratio", "=", "real_confidence", ".", "max", "(", "1", ")", ".", "mean", "(", "0", ")", "*", "self", ".", "params", ".", "confidence", "\n", "", "else", ":", "\n", "                ", "confidence_ratio", "=", "self", ".", "params", ".", "confidence", "\n", "\n", "", "pseudo_labels", "=", "objax", ".", "functional", ".", "softmax", "(", "logit_tu_weak", ")", "\n", "p_labeled", "=", "self", ".", "stats", ".", "p_labeled", "(", "objax", ".", "functional", ".", "softmax", "(", "logit_sx_weak", ")", ".", "mean", "(", "0", ")", ")", "\n", "p_unlabeled", "=", "self", ".", "stats", ".", "p_unlabeled", "(", "pseudo_labels", ".", "mean", "(", "0", ")", ")", "\n", "pseudo_labels", "*=", "(", "1e-6", "+", "p_labeled", ")", "/", "(", "1e-6", "+", "p_unlabeled", ")", "\n", "pseudo_labels", "=", "stop_gradient", "(", "pseudo_labels", "/", "pseudo_labels", ".", "sum", "(", "1", ",", "keepdims", "=", "True", ")", ")", "\n", "pseudo_mask", "=", "(", "pseudo_labels", ".", "max", "(", "axis", "=", "1", ")", ">=", "confidence_ratio", ")", ".", "astype", "(", "pseudo_labels", ".", "dtype", ")", "\n", "\n", "xe", "=", "0.5", "*", "(", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_sx_weak", ",", "sy", ")", ".", "mean", "(", ")", "+", "\n", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_sx_strong", ",", "sy", ")", ".", "mean", "(", ")", ")", "\n", "xeu", "=", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits_sparse", "(", "logit_tu_strong", ",", "pseudo_labels", ".", "argmax", "(", "axis", "=", "1", ")", ")", "\n", "xeu", "=", "(", "xeu", "*", "pseudo_mask", ")", ".", "mean", "(", ")", "\n", "wd", "=", "0.5", "*", "sum", "(", "(", "v", ".", "value", "**", "2", ")", ".", "sum", "(", ")", "for", "k", ",", "v", "in", "train_vars", ".", "items", "(", ")", "if", "k", ".", "endswith", "(", "'.w'", ")", ")", "\n", "\n", "loss", "=", "xe", "+", "self", ".", "wu", "(", "progress", ")", "*", "xeu", "+", "self", ".", "params", ".", "wd", "*", "wd", "\n", "return", "loss", ",", "{", "'losses/xe'", ":", "xe", ",", "\n", "'losses/xeu'", ":", "xeu", ",", "\n", "'losses/wd'", ":", "wd", ",", "\n", "'monitors/confidence_ratio'", ":", "confidence_ratio", ",", "\n", "'monitors/wu'", ":", "self", ".", "wu", "(", "progress", ")", ",", "\n", "'monitors/mask'", ":", "pseudo_mask", ".", "mean", "(", ")", ",", "\n", "'monitors/klmodel'", ":", "objax", ".", "functional", ".", "divergence", ".", "kl", "(", "p_labeled", ",", "p_unlabeled", ")", "}", "\n", "\n", "", "gv", "=", "objax", ".", "GradValues", "(", "loss_function", ",", "train_vars", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "vars", "(", ")", ")", "\n", "def", "train_op", "(", "step", ",", "sx", ",", "sy", ",", "tu", ",", "probe", "=", "None", ")", ":", "\n", "            ", "y_probe", "=", "eval_op", "(", "probe", ",", "1", ")", "if", "probe", "is", "not", "None", "else", "None", "\n", "p", "=", "step", "/", "(", "FLAGS", ".", "train_mimg", "<<", "20", ")", "\n", "lr", "=", "self", ".", "lr", "(", "p", ")", "\n", "g", ",", "v", "=", "gv", "(", "sx", ",", "sy", ",", "tu", ",", "p", ")", "\n", "self", ".", "opt", "(", "lr", ",", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "g", ")", ")", "\n", "self", ".", "model_ema", ".", "update_ema", "(", ")", "\n", "return", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "{", "'monitors/lr'", ":", "lr", ",", "**", "v", "[", "1", "]", "}", ")", ",", "y_probe", "\n", "\n", "", "self", ".", "train_op", "=", "MyParallel", "(", "train_op", ",", "reduce", "=", "lambda", "x", ":", "x", ")", "\n", "self", ".", "eval_op", "=", "MyParallel", "(", "eval_op", ",", "static_argnums", "=", "(", "1", ",", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.ablation.adamatch_no_logit_reg.main": [[107, 141], ["print", "print", "shared.util.setup_tf", "adamatch_no_logit_reg.AdaMatchNoLogitReg", "os.path.join", "enumerate", "absl.flags.FLAGS.augment.startswith", "AdaMatchNoLogitReg.train", "domain_adaptation.lib.data.CTAData.stop", "shared.zoo.models.network", "test.update", "domain_adaptation.lib.data.MixData", "absl.flags.FLAGS.augment.startswith", "shared.data.fsl.DATASETS", "shared.data.fsl.DATASETS", "sorted", "domain_adaptation.lib.data.CTAData", "ValueError", "jax.host_id", "jax.host_id", "jax.host_count", "jax.host_count", "str", "v.parse().batch().nchw().map().prefetch", "testset.items", "jax.devices", "jax.devices", "AdaMatchNoLogitReg.params.items", "v.parse().batch().nchw().map", "v.parse().batch().nchw", "v.parse().batch", "v.parse"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.shared.util.setup_tf", "home.repos.pwc.inspect_result.google-research_adamatch.shared.train.TrainableModule.train", "home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.noisy_student.PseudoLabeler.stop", "home.repos.pwc.inspect_result.google-research_adamatch.zoo.models.network", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.nchw", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.parse"], ["", "", "def", "main", "(", "argv", ")", ":", "\n", "    ", "del", "argv", "\n", "print", "(", "'JAX host: %d / %d'", "%", "(", "jax", ".", "host_id", "(", ")", ",", "jax", ".", "host_count", "(", ")", ")", ")", "\n", "print", "(", "'JAX devices:\\n%s'", "%", "'\\n'", ".", "join", "(", "str", "(", "d", ")", "for", "d", "in", "jax", ".", "devices", "(", ")", ")", ",", "flush", "=", "True", ")", "\n", "setup_tf", "(", ")", "\n", "source", "=", "FSL_DATASETS", "(", ")", "[", "f'{FLAGS.dataset}_{FLAGS.source}-0'", "]", "(", ")", "\n", "target", "=", "FSL_DATASETS", "(", ")", "[", "f'{FLAGS.dataset}_{FLAGS.target}-0'", "]", "(", ")", "\n", "testsets", "=", "[", "target", ".", "test", ",", "source", ".", "test", "]", "# Ordered by domain (target always first)", "\n", "module", "=", "AdaMatchNoLogitReg", "(", "source", ".", "nclass", ",", "network", "(", "FLAGS", ".", "arch", ")", ",", "\n", "lr", "=", "FLAGS", ".", "lr", ",", "\n", "lr_decay", "=", "FLAGS", ".", "lr_decay", ",", "\n", "wd", "=", "FLAGS", ".", "wd", ",", "\n", "arch", "=", "FLAGS", ".", "arch", ",", "\n", "batch", "=", "FLAGS", ".", "batch", ",", "\n", "wu", "=", "FLAGS", ".", "wu", ",", "\n", "confidence", "=", "FLAGS", ".", "confidence", ",", "\n", "use_cr", "=", "FLAGS", ".", "use_cr", ",", "\n", "uratio", "=", "FLAGS", ".", "uratio", ")", "\n", "logdir", "=", "f'DA/{FLAGS.dataset}/{FLAGS.source}/{FLAGS.target}/{FLAGS.augment}/{module.__class__.__name__}/%s'", "%", "(", "\n", "'_'", ".", "join", "(", "sorted", "(", "'%s%s'", "%", "k", "for", "k", "in", "module", ".", "params", ".", "items", "(", ")", ")", ")", ")", "\n", "logdir", "=", "os", ".", "path", ".", "join", "(", "FLAGS", ".", "logdir", ",", "logdir", ")", "\n", "test", "=", "{", "}", "\n", "for", "domain", ",", "testset", "in", "enumerate", "(", "testsets", ")", ":", "\n", "        ", "test", ".", "update", "(", "(", "f'{FLAGS.source}_to_{k}'", ",", "\n", "v", ".", "parse", "(", ")", ".", "batch", "(", "FLAGS", ".", "batch", ")", ".", "nchw", "(", ")", ".", "map", "(", "lambda", "d", ":", "{", "**", "d", ",", "'domain'", ":", "domain", "}", ")", ".", "prefetch", "(", "16", ")", ")", "\n", "for", "k", ",", "v", "in", "testset", ".", "items", "(", ")", ")", "\n", "", "if", "FLAGS", ".", "augment", ".", "startswith", "(", "'('", ")", ":", "\n", "        ", "train", "=", "MixData", "(", "source", ".", "train", ",", "target", ".", "train", ",", "source", ".", "nclass", ",", "FLAGS", ".", "batch", ",", "FLAGS", ".", "uratio", ")", "\n", "", "elif", "FLAGS", ".", "augment", ".", "startswith", "(", "'CTA('", ")", ":", "\n", "        ", "train", "=", "CTAData", "(", "source", ".", "train", ",", "target", ".", "train", ",", "source", ".", "nclass", ",", "FLAGS", ".", "batch", ",", "FLAGS", ".", "uratio", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "f'Augment flag value {FLAGS.augment} not supported.'", ")", "\n", "", "module", ".", "train", "(", "FLAGS", ".", "train_mimg", "<<", "10", ",", "FLAGS", ".", "report_kimg", ",", "train", ",", "test", ",", "logdir", ",", "FLAGS", ".", "keep_ckpts", ")", "\n", "train", ".", "stop", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.ablation.adamatch_pretrain_no_distalign.AdaMatchPretrainNoDistAlign.__init__": [[40, 115], ["google3.experimental.brain.red_team.nextmatch.domain_adaptation.lib.train.TrainableDAModule.__init__", "model", "objax.optimizer.ExponentialMovingAverageModule", "adamatch_pretrain_no_distalign.AdaMatchPretrainNoDistAlign.model_ema.update_ema", "objax.Module", "objax.nn.ExponentialMovingAverage", "objax.nn.MovingAverage", "objax.optimizer.Momentum", "google3.experimental.brain.red_team.nextmatch.shared.train.ScheduleCosPhases", "google3.experimental.brain.red_team.nextmatch.shared.train.ScheduleCos", "objax.Function.with_vars", "objax.GradValues", "objax.Function.with_vars", "google3.experimental.brain.red_team.nextmatch.shared.util.MyParallel", "google3.experimental.brain.red_team.nextmatch.shared.util.MyParallel", "adamatch_pretrain_no_distalign.AdaMatchPretrainNoDistAlign.model.vars", "adamatch_pretrain_no_distalign.AdaMatchPretrainNoDistAlign.stats.vars", "objax.functional.softmax", "adamatch_pretrain_no_distalign.AdaMatchPretrainNoDistAlign.model_ema.vars", "adamatch_pretrain_no_distalign.AdaMatchPretrainNoDistAlign.model.vars().tensors", "adamatch_pretrain_no_distalign.AdaMatchPretrainNoDistAlign.model", "adamatch_pretrain_no_distalign.AdaMatchPretrainNoDistAlign.model.vars().assign", "jax.concatenate().reshape", "jax.concatenate().reshape", "adamatch_pretrain_no_distalign.AdaMatchPretrainNoDistAlign.model", "jax.split", "jax.split", "objax.functional.softmax", "adamatch_pretrain_no_distalign.AdaMatchPretrainNoDistAlign.stats.p_labeled", "adamatch_pretrain_no_distalign.AdaMatchPretrainNoDistAlign.stats.p_unlabeled", "objax.functional.stop_gradient", "objax.functional.loss.cross_entropy_logits_sparse", "adamatch_pretrain_no_distalign.AdaMatchPretrainNoDistAlign.lr", "objax.GradValues.", "adamatch_pretrain_no_distalign.AdaMatchPretrainNoDistAlign.opt", "adamatch_pretrain_no_distalign.AdaMatchPretrainNoDistAlign.model_ema.update_ema", "adamatch_pretrain_no_distalign.AdaMatchPretrainNoDistAlign.vars", "adamatch_pretrain_no_distalign.AdaMatchPretrainNoDistAlign.model_ema", "sx.reshape", "objax.random.uniform", "objax.functional.softmax", "objax.functional.softmax().mean", "objax.functional.stop_gradient.mean", "objax.functional.stop_gradient.argmax", "sum", "adamatch_pretrain_no_distalign.AdaMatchPretrainNoDistAlign.__init__.eval_op"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.baseline.Baseline.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nclass", ":", "int", ",", "model", ":", "Callable", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "nclass", ",", "kwargs", ")", "\n", "self", ".", "model", ":", "objax", ".", "Module", "=", "model", "(", "colors", "=", "3", ",", "nclass", "=", "nclass", ",", "**", "kwargs", ")", "\n", "self", ".", "model_ema", "=", "objax", ".", "optimizer", ".", "ExponentialMovingAverageModule", "(", "self", ".", "model", ",", "momentum", "=", "0.999", ")", "\n", "# Initialize weights of EMA with pretrained model's weights.", "\n", "self", ".", "model_ema", ".", "ema", ".", "momentum", "=", "0", "\n", "self", ".", "model_ema", ".", "update_ema", "(", ")", "\n", "self", ".", "model_ema", ".", "ema", ".", "momentum", "=", "0.999", "\n", "self", ".", "stats", "=", "objax", ".", "Module", "(", ")", "\n", "self", ".", "stats", ".", "keygen", "=", "objax", ".", "random", ".", "DEFAULT_GENERATOR", "\n", "self", ".", "stats", ".", "p_labeled", "=", "objax", ".", "nn", ".", "ExponentialMovingAverage", "(", "(", "nclass", ",", ")", ",", "init_value", "=", "1", "/", "nclass", ")", "\n", "self", ".", "stats", ".", "p_unlabeled", "=", "objax", ".", "nn", ".", "MovingAverage", "(", "(", "nclass", ",", ")", ",", "buffer_size", "=", "128", ",", "init_value", "=", "1", "/", "nclass", ")", "\n", "train_vars", "=", "self", ".", "model", ".", "vars", "(", ")", "+", "self", ".", "stats", ".", "vars", "(", ")", "\n", "self", ".", "opt", "=", "objax", ".", "optimizer", ".", "Momentum", "(", "train_vars", ")", "\n", "self", ".", "wu", "=", "ScheduleCosPhases", "(", "1", ",", "[", "(", "0.5", ",", "1", ")", ",", "(", "1", ",", "self", ".", "params", ".", "wu", ")", "]", ",", "start_value", "=", "0", ")", "\n", "self", ".", "lr", "=", "ScheduleCos", "(", "self", ".", "params", ".", "lr", ",", "self", ".", "params", ".", "lr_decay", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "model_ema", ".", "vars", "(", ")", ")", "\n", "def", "eval_op", "(", "x", ":", "JaxArray", ",", "domain", ":", "int", ")", "->", "JaxArray", ":", "\n", "            ", "return", "objax", ".", "functional", ".", "softmax", "(", "self", ".", "model_ema", "(", "x", ",", "training", "=", "False", ",", "domain", "=", "domain", ")", ")", "\n", "\n", "", "def", "loss_function", "(", "sx", ",", "sy", ",", "tu", ",", "progress", ")", ":", "\n", "            ", "c", ",", "h", ",", "w", "=", "sx", ".", "shape", "[", "-", "3", ":", "]", "\n", "saved_vars", "=", "self", ".", "model", ".", "vars", "(", ")", ".", "tensors", "(", ")", "\n", "logit_bn_x", "=", "self", ".", "model", "(", "sx", ".", "reshape", "(", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", ")", ",", "training", "=", "True", ")", "\n", "self", ".", "model", ".", "vars", "(", ")", ".", "assign", "(", "saved_vars", ")", "\n", "xu", "=", "jn", ".", "concatenate", "(", "(", "sx", ",", "tu", ")", ")", ".", "reshape", "(", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", ")", "\n", "logit", "=", "self", ".", "model", "(", "xu", ",", "training", "=", "True", ")", "\n", "logit_sx", ",", "logit_tu", "=", "jn", ".", "split", "(", "logit", ",", "(", "2", "*", "sx", ".", "shape", "[", "0", "]", ",", ")", ")", "\n", "logit_sx", "+=", "(", "logit_bn_x", "-", "logit_sx", ")", "*", "objax", ".", "random", ".", "uniform", "(", "logit_sx", ".", "shape", ")", "\n", "logit_sx_weak", ",", "logit_sx_strong", "=", "logit_sx", "[", ":", ":", "2", "]", ",", "logit_sx", "[", "1", ":", ":", "2", "]", "\n", "logit_tu_weak", ",", "logit_tu_strong", "=", "logit_tu", "[", ":", ":", "2", "]", ",", "logit_tu", "[", "1", ":", ":", "2", "]", "\n", "\n", "if", "self", ".", "params", ".", "use_cr", ":", "\n", "                ", "real_confidence", "=", "objax", ".", "functional", ".", "softmax", "(", "stop_gradient", "(", "logit_sx_weak", ")", ")", "\n", "confidence_ratio", "=", "real_confidence", ".", "max", "(", "1", ")", ".", "mean", "(", "0", ")", "*", "self", ".", "params", ".", "confidence", "\n", "", "else", ":", "\n", "                ", "confidence_ratio", "=", "self", ".", "params", ".", "confidence", "\n", "\n", "", "pseudo_labels", "=", "objax", ".", "functional", ".", "softmax", "(", "logit_tu_weak", ")", "\n", "p_labeled", "=", "self", ".", "stats", ".", "p_labeled", "(", "objax", ".", "functional", ".", "softmax", "(", "logit_sx_weak", ")", ".", "mean", "(", "0", ")", ")", "\n", "p_unlabeled", "=", "self", ".", "stats", ".", "p_unlabeled", "(", "pseudo_labels", ".", "mean", "(", "0", ")", ")", "\n", "pseudo_labels", "=", "stop_gradient", "(", "pseudo_labels", ")", "\n", "pseudo_mask", "=", "(", "pseudo_labels", ".", "max", "(", "axis", "=", "1", ")", ">=", "confidence_ratio", ")", ".", "astype", "(", "pseudo_labels", ".", "dtype", ")", "\n", "\n", "xe", "=", "0.5", "*", "(", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_sx_weak", ",", "sy", ")", ".", "mean", "(", ")", "+", "\n", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_sx_strong", ",", "sy", ")", ".", "mean", "(", ")", ")", "\n", "xeu", "=", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits_sparse", "(", "logit_tu_strong", ",", "pseudo_labels", ".", "argmax", "(", "axis", "=", "1", ")", ")", "\n", "xeu", "=", "(", "xeu", "*", "pseudo_mask", ")", ".", "mean", "(", ")", "\n", "wd", "=", "0.5", "*", "sum", "(", "(", "v", ".", "value", "**", "2", ")", ".", "sum", "(", ")", "for", "k", ",", "v", "in", "train_vars", ".", "items", "(", ")", "if", "k", ".", "endswith", "(", "'.w'", ")", ")", "\n", "\n", "loss", "=", "xe", "+", "self", ".", "wu", "(", "progress", ")", "*", "xeu", "+", "self", ".", "params", ".", "wd", "*", "wd", "\n", "return", "loss", ",", "{", "'losses/xe'", ":", "xe", ",", "\n", "'losses/xeu'", ":", "xeu", ",", "\n", "'losses/wd'", ":", "wd", ",", "\n", "'losses/hregbn'", ":", "jn", ".", "square", "(", "logit_sx", "-", "logit_bn_x", ")", ".", "mean", "(", ")", ",", "\n", "'monitors/confidence_ratio'", ":", "confidence_ratio", ",", "\n", "'monitors/wu'", ":", "self", ".", "wu", "(", "progress", ")", ",", "\n", "'monitors/mask'", ":", "pseudo_mask", ".", "mean", "(", ")", ",", "\n", "'monitors/klmodel'", ":", "objax", ".", "functional", ".", "divergence", ".", "kl", "(", "p_labeled", ",", "p_unlabeled", ")", "}", "\n", "\n", "", "gv", "=", "objax", ".", "GradValues", "(", "loss_function", ",", "train_vars", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "vars", "(", ")", ")", "\n", "def", "train_op", "(", "step", ",", "sx", ",", "sy", ",", "tu", ",", "probe", "=", "None", ")", ":", "\n", "            ", "y_probe", "=", "eval_op", "(", "probe", ",", "1", ")", "if", "probe", "is", "not", "None", "else", "None", "\n", "p", "=", "step", "/", "(", "FLAGS", ".", "train_mimg", "<<", "20", ")", "\n", "lr", "=", "self", ".", "lr", "(", "p", ")", "\n", "g", ",", "v", "=", "gv", "(", "sx", ",", "sy", ",", "tu", ",", "p", ")", "\n", "self", ".", "opt", "(", "lr", ",", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "g", ")", ")", "\n", "self", ".", "model_ema", ".", "update_ema", "(", ")", "\n", "return", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "{", "'monitors/lr'", ":", "lr", ",", "**", "v", "[", "1", "]", "}", ")", ",", "y_probe", "\n", "\n", "", "self", ".", "train_op", "=", "MyParallel", "(", "train_op", ",", "reduce", "=", "lambda", "x", ":", "x", ")", "\n", "self", ".", "eval_op", "=", "MyParallel", "(", "eval_op", ",", "static_argnums", "=", "(", "1", ",", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.ablation.adamatch_pretrain_no_distalign.main": [[117, 151], ["print", "print", "google3.experimental.brain.red_team.nextmatch.shared.util.setup_tf", "adamatch_pretrain_no_distalign.AdaMatchPretrainNoDistAlign", "os.path.join", "enumerate", "absl.flags.FLAGS.augment.startswith", "AdaMatchPretrainNoDistAlign.train", "google3.experimental.brain.red_team.nextmatch.domain_adaptation.lib.data.CTAData.stop", "google3.experimental.brain.red_team.nextmatch.shared.zoo.models.network", "test.update", "google3.experimental.brain.red_team.nextmatch.domain_adaptation.lib.data.MixData", "absl.flags.FLAGS.augment.startswith", "google3.experimental.brain.red_team.nextmatch.shared.data.fsl.DATASETS", "google3.experimental.brain.red_team.nextmatch.shared.data.fsl.DATASETS", "sorted", "google3.experimental.brain.red_team.nextmatch.domain_adaptation.lib.data.CTAData", "ValueError", "jax.host_id", "jax.host_id", "jax.host_count", "jax.host_count", "str", "v.parse().batch().nchw().map().prefetch", "testset.items", "jax.devices", "jax.devices", "AdaMatchPretrainNoDistAlign.params.items", "v.parse().batch().nchw().map", "v.parse().batch().nchw", "v.parse().batch", "v.parse"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.shared.util.setup_tf", "home.repos.pwc.inspect_result.google-research_adamatch.shared.train.TrainableModule.train", "home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.noisy_student.PseudoLabeler.stop", "home.repos.pwc.inspect_result.google-research_adamatch.zoo.models.network", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.nchw", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.parse"], ["", "", "def", "main", "(", "argv", ")", ":", "\n", "    ", "del", "argv", "\n", "print", "(", "'JAX host: %d / %d'", "%", "(", "jax", ".", "host_id", "(", ")", ",", "jax", ".", "host_count", "(", ")", ")", ")", "\n", "print", "(", "'JAX devices:\\n%s'", "%", "'\\n'", ".", "join", "(", "str", "(", "d", ")", "for", "d", "in", "jax", ".", "devices", "(", ")", ")", ",", "flush", "=", "True", ")", "\n", "setup_tf", "(", ")", "\n", "source", "=", "FSL_DATASETS", "(", ")", "[", "f'{FLAGS.dataset}_{FLAGS.source}-0'", "]", "(", ")", "\n", "target", "=", "FSL_DATASETS", "(", ")", "[", "f'{FLAGS.dataset}_{FLAGS.target}-0'", "]", "(", ")", "\n", "testsets", "=", "[", "target", ".", "test", ",", "source", ".", "test", "]", "# Ordered by domain (target always first)", "\n", "module", "=", "AdaMatchPretrainNoDistAlign", "(", "source", ".", "nclass", ",", "network", "(", "FLAGS", ".", "arch", ")", ",", "\n", "lr", "=", "FLAGS", ".", "lr", ",", "\n", "lr_decay", "=", "FLAGS", ".", "lr_decay", ",", "\n", "wd", "=", "FLAGS", ".", "wd", ",", "\n", "arch", "=", "FLAGS", ".", "arch", ",", "\n", "batch", "=", "FLAGS", ".", "batch", ",", "\n", "wu", "=", "FLAGS", ".", "wu", ",", "\n", "confidence", "=", "FLAGS", ".", "confidence", ",", "\n", "use_cr", "=", "FLAGS", ".", "use_cr", ",", "\n", "uratio", "=", "FLAGS", ".", "uratio", ")", "\n", "logdir", "=", "f'DA/{FLAGS.dataset}/{FLAGS.source}/{FLAGS.target}/{FLAGS.augment}/{module.__class__.__name__}/%s'", "%", "(", "\n", "'_'", ".", "join", "(", "sorted", "(", "'%s%s'", "%", "k", "for", "k", "in", "module", ".", "params", ".", "items", "(", ")", ")", ")", ")", "\n", "logdir", "=", "os", ".", "path", ".", "join", "(", "FLAGS", ".", "logdir", ",", "logdir", ")", "\n", "test", "=", "{", "}", "\n", "for", "domain", ",", "testset", "in", "enumerate", "(", "testsets", ")", ":", "\n", "        ", "test", ".", "update", "(", "(", "f'{FLAGS.source}_to_{k}'", ",", "\n", "v", ".", "parse", "(", ")", ".", "batch", "(", "FLAGS", ".", "batch", ")", ".", "nchw", "(", ")", ".", "map", "(", "lambda", "d", ":", "{", "**", "d", ",", "'domain'", ":", "domain", "}", ")", ".", "prefetch", "(", "16", ")", ")", "\n", "for", "k", ",", "v", "in", "testset", ".", "items", "(", ")", ")", "\n", "", "if", "FLAGS", ".", "augment", ".", "startswith", "(", "'('", ")", ":", "\n", "        ", "train", "=", "MixData", "(", "source", ".", "train", ",", "target", ".", "train", ",", "source", ".", "nclass", ",", "FLAGS", ".", "batch", ",", "FLAGS", ".", "uratio", ")", "\n", "", "elif", "FLAGS", ".", "augment", ".", "startswith", "(", "'CTA('", ")", ":", "\n", "        ", "train", "=", "CTAData", "(", "source", ".", "train", ",", "target", ".", "train", ",", "source", ".", "nclass", ",", "FLAGS", ".", "batch", ",", "FLAGS", ".", "uratio", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "f'Augment flag value {FLAGS.augment} not supported.'", ")", "\n", "", "module", ".", "train", "(", "FLAGS", ".", "train_mimg", "<<", "10", ",", "FLAGS", ".", "report_kimg", ",", "train", ",", "test", ",", "logdir", ",", "FLAGS", ".", "keep_ckpts", ")", "\n", "train", ".", "stop", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.ablation.adamatch_pretrain.AdaMatchPretrain.__init__": [[38, 114], ["domain_adaptation.lib.train.TrainableDAModule.__init__", "model", "objax.optimizer.ExponentialMovingAverageModule", "adamatch_pretrain.AdaMatchPretrain.model_ema.update_ema", "objax.Module", "objax.nn.ExponentialMovingAverage", "objax.nn.MovingAverage", "objax.optimizer.Momentum", "shared.train.ScheduleCosPhases", "shared.train.ScheduleCos", "objax.Function.with_vars", "objax.GradValues", "objax.Function.with_vars", "shared.util.MyParallel", "shared.util.MyParallel", "adamatch_pretrain.AdaMatchPretrain.model.vars", "adamatch_pretrain.AdaMatchPretrain.stats.vars", "objax.functional.softmax", "adamatch_pretrain.AdaMatchPretrain.model_ema.vars", "adamatch_pretrain.AdaMatchPretrain.model.vars().tensors", "adamatch_pretrain.AdaMatchPretrain.model", "adamatch_pretrain.AdaMatchPretrain.model.vars().assign", "jax.concatenate().reshape", "jax.concatenate().reshape", "adamatch_pretrain.AdaMatchPretrain.model", "jax.split", "jax.split", "objax.functional.softmax", "adamatch_pretrain.AdaMatchPretrain.stats.p_labeled", "adamatch_pretrain.AdaMatchPretrain.stats.p_unlabeled", "objax.functional.stop_gradient", "objax.functional.loss.cross_entropy_logits_sparse", "adamatch_pretrain.AdaMatchPretrain.lr", "objax.GradValues.", "adamatch_pretrain.AdaMatchPretrain.opt", "adamatch_pretrain.AdaMatchPretrain.model_ema.update_ema", "adamatch_pretrain.AdaMatchPretrain.vars", "adamatch_pretrain.AdaMatchPretrain.model_ema", "sx.reshape", "objax.random.uniform", "objax.functional.softmax", "objax.functional.softmax().mean", "objax.functional.stop_gradient.mean", "objax.functional.stop_gradient.argmax", "sum", "adamatch_pretrain.AdaMatchPretrain.__init__.eval_op"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.baseline.Baseline.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nclass", ":", "int", ",", "model", ":", "Callable", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "nclass", ",", "kwargs", ")", "\n", "self", ".", "model", ":", "objax", ".", "Module", "=", "model", "(", "colors", "=", "3", ",", "nclass", "=", "nclass", ",", "**", "kwargs", ")", "\n", "self", ".", "model_ema", "=", "objax", ".", "optimizer", ".", "ExponentialMovingAverageModule", "(", "self", ".", "model", ",", "momentum", "=", "0.999", ")", "\n", "# Initialize weights of EMA with pretrained model's weights.", "\n", "self", ".", "model_ema", ".", "ema", ".", "momentum", "=", "0", "\n", "self", ".", "model_ema", ".", "update_ema", "(", ")", "\n", "self", ".", "model_ema", ".", "ema", ".", "momentum", "=", "0.999", "\n", "self", ".", "stats", "=", "objax", ".", "Module", "(", ")", "\n", "self", ".", "stats", ".", "keygen", "=", "objax", ".", "random", ".", "DEFAULT_GENERATOR", "\n", "self", ".", "stats", ".", "p_labeled", "=", "objax", ".", "nn", ".", "ExponentialMovingAverage", "(", "(", "nclass", ",", ")", ",", "init_value", "=", "1", "/", "nclass", ")", "\n", "self", ".", "stats", ".", "p_unlabeled", "=", "objax", ".", "nn", ".", "MovingAverage", "(", "(", "nclass", ",", ")", ",", "buffer_size", "=", "128", ",", "init_value", "=", "1", "/", "nclass", ")", "\n", "train_vars", "=", "self", ".", "model", ".", "vars", "(", ")", "+", "self", ".", "stats", ".", "vars", "(", ")", "\n", "self", ".", "opt", "=", "objax", ".", "optimizer", ".", "Momentum", "(", "train_vars", ")", "\n", "self", ".", "wu", "=", "ScheduleCosPhases", "(", "1", ",", "[", "(", "0.5", ",", "1", ")", ",", "(", "1", ",", "self", ".", "params", ".", "wu", ")", "]", ",", "start_value", "=", "0", ")", "\n", "self", ".", "lr", "=", "ScheduleCos", "(", "self", ".", "params", ".", "lr", ",", "self", ".", "params", ".", "lr_decay", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "model_ema", ".", "vars", "(", ")", ")", "\n", "def", "eval_op", "(", "x", ":", "JaxArray", ",", "domain", ":", "int", ")", "->", "JaxArray", ":", "\n", "            ", "return", "objax", ".", "functional", ".", "softmax", "(", "self", ".", "model_ema", "(", "x", ",", "training", "=", "False", ",", "domain", "=", "domain", ")", ")", "\n", "\n", "", "def", "loss_function", "(", "sx", ",", "sy", ",", "tu", ",", "progress", ")", ":", "\n", "            ", "c", ",", "h", ",", "w", "=", "sx", ".", "shape", "[", "-", "3", ":", "]", "\n", "saved_vars", "=", "self", ".", "model", ".", "vars", "(", ")", ".", "tensors", "(", ")", "\n", "logit_bn_x", "=", "self", ".", "model", "(", "sx", ".", "reshape", "(", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", ")", ",", "training", "=", "True", ")", "\n", "self", ".", "model", ".", "vars", "(", ")", ".", "assign", "(", "saved_vars", ")", "\n", "xu", "=", "jn", ".", "concatenate", "(", "(", "sx", ",", "tu", ")", ")", ".", "reshape", "(", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", ")", "\n", "logit", "=", "self", ".", "model", "(", "xu", ",", "training", "=", "True", ")", "\n", "logit_sx", ",", "logit_tu", "=", "jn", ".", "split", "(", "logit", ",", "(", "2", "*", "sx", ".", "shape", "[", "0", "]", ",", ")", ")", "\n", "logit_sx", "+=", "(", "logit_bn_x", "-", "logit_sx", ")", "*", "objax", ".", "random", ".", "uniform", "(", "logit_sx", ".", "shape", ")", "\n", "logit_sx_weak", ",", "logit_sx_strong", "=", "logit_sx", "[", ":", ":", "2", "]", ",", "logit_sx", "[", "1", ":", ":", "2", "]", "\n", "logit_tu_weak", ",", "logit_tu_strong", "=", "logit_tu", "[", ":", ":", "2", "]", ",", "logit_tu", "[", "1", ":", ":", "2", "]", "\n", "\n", "if", "self", ".", "params", ".", "use_cr", ":", "\n", "                ", "real_confidence", "=", "objax", ".", "functional", ".", "softmax", "(", "stop_gradient", "(", "logit_sx_weak", ")", ")", "\n", "confidence_ratio", "=", "real_confidence", ".", "max", "(", "1", ")", ".", "mean", "(", "0", ")", "*", "self", ".", "params", ".", "confidence", "\n", "", "else", ":", "\n", "                ", "confidence_ratio", "=", "self", ".", "params", ".", "confidence", "\n", "\n", "", "pseudo_labels", "=", "objax", ".", "functional", ".", "softmax", "(", "logit_tu_weak", ")", "\n", "p_labeled", "=", "self", ".", "stats", ".", "p_labeled", "(", "objax", ".", "functional", ".", "softmax", "(", "logit_sx_weak", ")", ".", "mean", "(", "0", ")", ")", "\n", "p_unlabeled", "=", "self", ".", "stats", ".", "p_unlabeled", "(", "pseudo_labels", ".", "mean", "(", "0", ")", ")", "\n", "pseudo_labels", "*=", "(", "1e-6", "+", "p_labeled", ")", "/", "(", "1e-6", "+", "p_unlabeled", ")", "\n", "pseudo_labels", "=", "stop_gradient", "(", "pseudo_labels", "/", "pseudo_labels", ".", "sum", "(", "1", ",", "keepdims", "=", "True", ")", ")", "\n", "pseudo_mask", "=", "(", "pseudo_labels", ".", "max", "(", "axis", "=", "1", ")", ">=", "confidence_ratio", ")", ".", "astype", "(", "pseudo_labels", ".", "dtype", ")", "\n", "\n", "xe", "=", "0.5", "*", "(", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_sx_weak", ",", "sy", ")", ".", "mean", "(", ")", "+", "\n", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_sx_strong", ",", "sy", ")", ".", "mean", "(", ")", ")", "\n", "xeu", "=", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits_sparse", "(", "logit_tu_strong", ",", "pseudo_labels", ".", "argmax", "(", "axis", "=", "1", ")", ")", "\n", "xeu", "=", "(", "xeu", "*", "pseudo_mask", ")", ".", "mean", "(", ")", "\n", "wd", "=", "0.5", "*", "sum", "(", "(", "v", ".", "value", "**", "2", ")", ".", "sum", "(", ")", "for", "k", ",", "v", "in", "train_vars", ".", "items", "(", ")", "if", "k", ".", "endswith", "(", "'.w'", ")", ")", "\n", "\n", "loss", "=", "xe", "+", "self", ".", "wu", "(", "progress", ")", "*", "xeu", "+", "self", ".", "params", ".", "wd", "*", "wd", "\n", "return", "loss", ",", "{", "'losses/xe'", ":", "xe", ",", "\n", "'losses/xeu'", ":", "xeu", ",", "\n", "'losses/wd'", ":", "wd", ",", "\n", "'losses/hregbn'", ":", "jn", ".", "square", "(", "logit_sx", "-", "logit_bn_x", ")", ".", "mean", "(", ")", ",", "\n", "'monitors/confidence_ratio'", ":", "confidence_ratio", ",", "\n", "'monitors/wu'", ":", "self", ".", "wu", "(", "progress", ")", ",", "\n", "'monitors/mask'", ":", "pseudo_mask", ".", "mean", "(", ")", ",", "\n", "'monitors/klmodel'", ":", "objax", ".", "functional", ".", "divergence", ".", "kl", "(", "p_labeled", ",", "p_unlabeled", ")", "}", "\n", "\n", "", "gv", "=", "objax", ".", "GradValues", "(", "loss_function", ",", "train_vars", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "vars", "(", ")", ")", "\n", "def", "train_op", "(", "step", ",", "sx", ",", "sy", ",", "tu", ",", "probe", "=", "None", ")", ":", "\n", "            ", "y_probe", "=", "eval_op", "(", "probe", ",", "1", ")", "if", "probe", "is", "not", "None", "else", "None", "\n", "p", "=", "step", "/", "(", "FLAGS", ".", "train_mimg", "<<", "20", ")", "\n", "lr", "=", "self", ".", "lr", "(", "p", ")", "\n", "g", ",", "v", "=", "gv", "(", "sx", ",", "sy", ",", "tu", ",", "p", ")", "\n", "self", ".", "opt", "(", "lr", ",", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "g", ")", ")", "\n", "self", ".", "model_ema", ".", "update_ema", "(", ")", "\n", "return", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "{", "'monitors/lr'", ":", "lr", ",", "**", "v", "[", "1", "]", "}", ")", ",", "y_probe", "\n", "\n", "", "self", ".", "train_op", "=", "MyParallel", "(", "train_op", ",", "reduce", "=", "lambda", "x", ":", "x", ")", "\n", "self", ".", "eval_op", "=", "MyParallel", "(", "eval_op", ",", "static_argnums", "=", "(", "1", ",", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.ablation.adamatch_pretrain.main": [[116, 150], ["print", "print", "shared.util.setup_tf", "adamatch_pretrain.AdaMatchPretrain", "os.path.join", "enumerate", "absl.flags.FLAGS.augment.startswith", "AdaMatchPretrain.train", "domain_adaptation.lib.data.CTAData.stop", "shared.zoo.models.network", "test.update", "domain_adaptation.lib.data.MixData", "absl.flags.FLAGS.augment.startswith", "shared.data.fsl.DATASETS", "shared.data.fsl.DATASETS", "sorted", "domain_adaptation.lib.data.CTAData", "ValueError", "jax.host_id", "jax.host_id", "jax.host_count", "jax.host_count", "str", "v.parse().batch().nchw().map().prefetch", "testset.items", "jax.devices", "jax.devices", "AdaMatchPretrain.params.items", "v.parse().batch().nchw().map", "v.parse().batch().nchw", "v.parse().batch", "v.parse"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.shared.util.setup_tf", "home.repos.pwc.inspect_result.google-research_adamatch.shared.train.TrainableModule.train", "home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.noisy_student.PseudoLabeler.stop", "home.repos.pwc.inspect_result.google-research_adamatch.zoo.models.network", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.nchw", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.parse"], ["", "", "def", "main", "(", "argv", ")", ":", "\n", "    ", "del", "argv", "\n", "print", "(", "'JAX host: %d / %d'", "%", "(", "jax", ".", "host_id", "(", ")", ",", "jax", ".", "host_count", "(", ")", ")", ")", "\n", "print", "(", "'JAX devices:\\n%s'", "%", "'\\n'", ".", "join", "(", "str", "(", "d", ")", "for", "d", "in", "jax", ".", "devices", "(", ")", ")", ",", "flush", "=", "True", ")", "\n", "setup_tf", "(", ")", "\n", "source", "=", "FSL_DATASETS", "(", ")", "[", "f'{FLAGS.dataset}_{FLAGS.source}-0'", "]", "(", ")", "\n", "target", "=", "FSL_DATASETS", "(", ")", "[", "f'{FLAGS.dataset}_{FLAGS.target}-0'", "]", "(", ")", "\n", "testsets", "=", "[", "target", ".", "test", ",", "source", ".", "test", "]", "# Ordered by domain (target always first)", "\n", "module", "=", "AdaMatchPretrain", "(", "source", ".", "nclass", ",", "network", "(", "FLAGS", ".", "arch", ")", ",", "\n", "lr", "=", "FLAGS", ".", "lr", ",", "\n", "lr_decay", "=", "FLAGS", ".", "lr_decay", ",", "\n", "wd", "=", "FLAGS", ".", "wd", ",", "\n", "arch", "=", "FLAGS", ".", "arch", ",", "\n", "batch", "=", "FLAGS", ".", "batch", ",", "\n", "wu", "=", "FLAGS", ".", "wu", ",", "\n", "confidence", "=", "FLAGS", ".", "confidence", ",", "\n", "use_cr", "=", "FLAGS", ".", "use_cr", ",", "\n", "uratio", "=", "FLAGS", ".", "uratio", ")", "\n", "logdir", "=", "f'DA/{FLAGS.dataset}/{FLAGS.source}/{FLAGS.target}/{FLAGS.augment}/{module.__class__.__name__}/%s'", "%", "(", "\n", "'_'", ".", "join", "(", "sorted", "(", "'%s%s'", "%", "k", "for", "k", "in", "module", ".", "params", ".", "items", "(", ")", ")", ")", ")", "\n", "logdir", "=", "os", ".", "path", ".", "join", "(", "FLAGS", ".", "logdir", ",", "logdir", ")", "\n", "test", "=", "{", "}", "\n", "for", "domain", ",", "testset", "in", "enumerate", "(", "testsets", ")", ":", "\n", "        ", "test", ".", "update", "(", "(", "f'{FLAGS.source}_to_{k}'", ",", "\n", "v", ".", "parse", "(", ")", ".", "batch", "(", "FLAGS", ".", "batch", ")", ".", "nchw", "(", ")", ".", "map", "(", "lambda", "d", ":", "{", "**", "d", ",", "'domain'", ":", "domain", "}", ")", ".", "prefetch", "(", "16", ")", ")", "\n", "for", "k", ",", "v", "in", "testset", ".", "items", "(", ")", ")", "\n", "", "if", "FLAGS", ".", "augment", ".", "startswith", "(", "'('", ")", ":", "\n", "        ", "train", "=", "MixData", "(", "source", ".", "train", ",", "target", ".", "train", ",", "source", ".", "nclass", ",", "FLAGS", ".", "batch", ",", "FLAGS", ".", "uratio", ")", "\n", "", "elif", "FLAGS", ".", "augment", ".", "startswith", "(", "'CTA('", ")", ":", "\n", "        ", "train", "=", "CTAData", "(", "source", ".", "train", ",", "target", ".", "train", ",", "source", ".", "nclass", ",", "FLAGS", ".", "batch", ",", "FLAGS", ".", "uratio", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "f'Augment flag value {FLAGS.augment} not supported.'", ")", "\n", "", "module", ".", "train", "(", "FLAGS", ".", "train_mimg", "<<", "10", ",", "FLAGS", ".", "report_kimg", ",", "train", ",", "test", ",", "logdir", ",", "FLAGS", ".", "keep_ckpts", ")", "\n", "train", ".", "stop", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.ablation.adamatch_fixed_confidence.AdaMatchFixedConfidence.__init__": [[38, 105], ["domain_adaptation.lib.train.TrainableDAModule.__init__", "model", "objax.optimizer.ExponentialMovingAverageModule", "objax.Module", "objax.nn.ExponentialMovingAverage", "objax.nn.MovingAverage", "objax.optimizer.Momentum", "shared.train.ScheduleCosPhases", "shared.train.ScheduleCos", "objax.Function.with_vars", "objax.GradValues", "objax.Function.with_vars", "shared.util.MyParallel", "shared.util.MyParallel", "adamatch_fixed_confidence.AdaMatchFixedConfidence.model.vars", "adamatch_fixed_confidence.AdaMatchFixedConfidence.stats.vars", "objax.functional.softmax", "adamatch_fixed_confidence.AdaMatchFixedConfidence.model_ema.vars", "adamatch_fixed_confidence.AdaMatchFixedConfidence.model.vars().tensors", "adamatch_fixed_confidence.AdaMatchFixedConfidence.model", "adamatch_fixed_confidence.AdaMatchFixedConfidence.model.vars().assign", "jax.concatenate().reshape", "jax.concatenate().reshape", "adamatch_fixed_confidence.AdaMatchFixedConfidence.model", "jax.split", "jax.split", "objax.functional.softmax", "adamatch_fixed_confidence.AdaMatchFixedConfidence.stats.p_labeled", "adamatch_fixed_confidence.AdaMatchFixedConfidence.stats.p_unlabeled", "objax.functional.stop_gradient", "objax.functional.loss.cross_entropy_logits_sparse", "adamatch_fixed_confidence.AdaMatchFixedConfidence.lr", "objax.GradValues.", "adamatch_fixed_confidence.AdaMatchFixedConfidence.opt", "adamatch_fixed_confidence.AdaMatchFixedConfidence.model_ema.update_ema", "adamatch_fixed_confidence.AdaMatchFixedConfidence.vars", "adamatch_fixed_confidence.AdaMatchFixedConfidence.model_ema", "sx.reshape", "objax.random.uniform", "objax.functional.softmax().mean", "objax.functional.stop_gradient.mean", "objax.functional.stop_gradient.argmax", "sum", "adamatch_fixed_confidence.AdaMatchFixedConfidence.__init__.eval_op"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.baseline.Baseline.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nclass", ":", "int", ",", "model", ":", "Callable", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "nclass", ",", "kwargs", ")", "\n", "self", ".", "model", ":", "objax", ".", "Module", "=", "model", "(", "colors", "=", "3", ",", "nclass", "=", "nclass", ",", "**", "kwargs", ")", "\n", "self", ".", "model_ema", "=", "objax", ".", "optimizer", ".", "ExponentialMovingAverageModule", "(", "self", ".", "model", ",", "momentum", "=", "0.999", ")", "\n", "self", ".", "stats", "=", "objax", ".", "Module", "(", ")", "\n", "self", ".", "stats", ".", "keygen", "=", "objax", ".", "random", ".", "DEFAULT_GENERATOR", "\n", "self", ".", "stats", ".", "p_labeled", "=", "objax", ".", "nn", ".", "ExponentialMovingAverage", "(", "(", "nclass", ",", ")", ",", "init_value", "=", "1", "/", "nclass", ")", "\n", "self", ".", "stats", ".", "p_unlabeled", "=", "objax", ".", "nn", ".", "MovingAverage", "(", "(", "nclass", ",", ")", ",", "buffer_size", "=", "128", ",", "init_value", "=", "1", "/", "nclass", ")", "\n", "train_vars", "=", "self", ".", "model", ".", "vars", "(", ")", "+", "self", ".", "stats", ".", "vars", "(", ")", "\n", "self", ".", "opt", "=", "objax", ".", "optimizer", ".", "Momentum", "(", "train_vars", ")", "\n", "self", ".", "wu", "=", "ScheduleCosPhases", "(", "1", ",", "[", "(", "0.5", ",", "1", ")", ",", "(", "1", ",", "self", ".", "params", ".", "wu", ")", "]", ",", "start_value", "=", "0", ")", "\n", "self", ".", "lr", "=", "ScheduleCos", "(", "self", ".", "params", ".", "lr", ",", "self", ".", "params", ".", "lr_decay", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "model_ema", ".", "vars", "(", ")", ")", "\n", "def", "eval_op", "(", "x", ":", "JaxArray", ",", "domain", ":", "int", ")", "->", "JaxArray", ":", "\n", "            ", "return", "objax", ".", "functional", ".", "softmax", "(", "self", ".", "model_ema", "(", "x", ",", "training", "=", "False", ",", "domain", "=", "domain", ")", ")", "\n", "\n", "", "def", "loss_function", "(", "sx", ",", "sy", ",", "tu", ",", "progress", ")", ":", "\n", "            ", "c", ",", "h", ",", "w", "=", "sx", ".", "shape", "[", "-", "3", ":", "]", "\n", "saved_vars", "=", "self", ".", "model", ".", "vars", "(", ")", ".", "tensors", "(", ")", "\n", "logit_bn_x", "=", "self", ".", "model", "(", "sx", ".", "reshape", "(", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", ")", ",", "training", "=", "True", ")", "\n", "self", ".", "model", ".", "vars", "(", ")", ".", "assign", "(", "saved_vars", ")", "\n", "xu", "=", "jn", ".", "concatenate", "(", "(", "sx", ",", "tu", ")", ")", ".", "reshape", "(", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", ")", "\n", "logit", "=", "self", ".", "model", "(", "xu", ",", "training", "=", "True", ")", "\n", "logit_sx", ",", "logit_tu", "=", "jn", ".", "split", "(", "logit", ",", "(", "2", "*", "sx", ".", "shape", "[", "0", "]", ",", ")", ")", "\n", "logit_sx", "+=", "(", "logit_bn_x", "-", "logit_sx", ")", "*", "objax", ".", "random", ".", "uniform", "(", "logit_sx", ".", "shape", ")", "\n", "logit_sx_weak", ",", "logit_sx_strong", "=", "logit_sx", "[", ":", ":", "2", "]", ",", "logit_sx", "[", "1", ":", ":", "2", "]", "\n", "logit_tu_weak", ",", "logit_tu_strong", "=", "logit_tu", "[", ":", ":", "2", "]", ",", "logit_tu", "[", "1", ":", ":", "2", "]", "\n", "\n", "confidence_ratio", "=", "self", ".", "params", ".", "confidence", "\n", "pseudo_labels", "=", "objax", ".", "functional", ".", "softmax", "(", "logit_tu_weak", ")", "\n", "p_labeled", "=", "self", ".", "stats", ".", "p_labeled", "(", "objax", ".", "functional", ".", "softmax", "(", "logit_sx_weak", ")", ".", "mean", "(", "0", ")", ")", "\n", "p_unlabeled", "=", "self", ".", "stats", ".", "p_unlabeled", "(", "pseudo_labels", ".", "mean", "(", "0", ")", ")", "\n", "pseudo_labels", "*=", "(", "1e-6", "+", "p_labeled", ")", "/", "(", "1e-6", "+", "p_unlabeled", ")", "\n", "pseudo_labels", "=", "stop_gradient", "(", "pseudo_labels", "/", "pseudo_labels", ".", "sum", "(", "1", ",", "keepdims", "=", "True", ")", ")", "\n", "pseudo_mask", "=", "(", "pseudo_labels", ".", "max", "(", "axis", "=", "1", ")", ">=", "confidence_ratio", ")", ".", "astype", "(", "pseudo_labels", ".", "dtype", ")", "\n", "\n", "xe", "=", "0.5", "*", "(", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_sx_weak", ",", "sy", ")", ".", "mean", "(", ")", "+", "\n", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_sx_strong", ",", "sy", ")", ".", "mean", "(", ")", ")", "\n", "xeu", "=", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits_sparse", "(", "logit_tu_strong", ",", "pseudo_labels", ".", "argmax", "(", "axis", "=", "1", ")", ")", "\n", "xeu", "=", "(", "xeu", "*", "pseudo_mask", ")", ".", "mean", "(", ")", "\n", "wd", "=", "0.5", "*", "sum", "(", "(", "v", ".", "value", "**", "2", ")", ".", "sum", "(", ")", "for", "k", ",", "v", "in", "train_vars", ".", "items", "(", ")", "if", "k", ".", "endswith", "(", "'.w'", ")", ")", "\n", "\n", "loss", "=", "xe", "+", "self", ".", "wu", "(", "progress", ")", "*", "xeu", "+", "self", ".", "params", ".", "wd", "*", "wd", "\n", "return", "loss", ",", "{", "'losses/xe'", ":", "xe", ",", "\n", "'losses/xeu'", ":", "xeu", ",", "\n", "'losses/wd'", ":", "wd", ",", "\n", "'losses/hregbn'", ":", "jn", ".", "square", "(", "logit_sx", "-", "logit_bn_x", ")", ".", "mean", "(", ")", ",", "\n", "'monitors/confidence_ratio'", ":", "confidence_ratio", ",", "\n", "'monitors/wu'", ":", "self", ".", "wu", "(", "progress", ")", ",", "\n", "'monitors/mask'", ":", "pseudo_mask", ".", "mean", "(", ")", ",", "\n", "'monitors/klmodel'", ":", "objax", ".", "functional", ".", "divergence", ".", "kl", "(", "p_labeled", ",", "p_unlabeled", ")", "}", "\n", "\n", "", "gv", "=", "objax", ".", "GradValues", "(", "loss_function", ",", "train_vars", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "vars", "(", ")", ")", "\n", "def", "train_op", "(", "step", ",", "sx", ",", "sy", ",", "tu", ",", "probe", "=", "None", ")", ":", "\n", "            ", "y_probe", "=", "eval_op", "(", "probe", ",", "1", ")", "if", "probe", "is", "not", "None", "else", "None", "\n", "p", "=", "step", "/", "(", "FLAGS", ".", "train_mimg", "<<", "20", ")", "\n", "lr", "=", "self", ".", "lr", "(", "p", ")", "\n", "g", ",", "v", "=", "gv", "(", "sx", ",", "sy", ",", "tu", ",", "p", ")", "\n", "self", ".", "opt", "(", "lr", ",", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "g", ")", ")", "\n", "self", ".", "model_ema", ".", "update_ema", "(", ")", "\n", "return", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "{", "'monitors/lr'", ":", "lr", ",", "**", "v", "[", "1", "]", "}", ")", ",", "y_probe", "\n", "\n", "", "self", ".", "train_op", "=", "MyParallel", "(", "train_op", ",", "reduce", "=", "lambda", "x", ":", "x", ")", "\n", "self", ".", "eval_op", "=", "MyParallel", "(", "eval_op", ",", "static_argnums", "=", "(", "1", ",", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.ablation.adamatch_fixed_confidence.main": [[107, 141], ["print", "print", "shared.util.setup_tf", "adamatch_fixed_confidence.AdaMatchFixedConfidence", "os.path.join", "enumerate", "absl.flags.FLAGS.augment.startswith", "AdaMatchFixedConfidence.train", "domain_adaptation.lib.data.CTAData.stop", "shared.zoo.models.network", "test.update", "domain_adaptation.lib.data.MixData", "absl.flags.FLAGS.augment.startswith", "shared.data.fsl.DATASETS", "shared.data.fsl.DATASETS", "sorted", "domain_adaptation.lib.data.CTAData", "ValueError", "jax.host_id", "jax.host_id", "jax.host_count", "jax.host_count", "str", "v.parse().batch().nchw().map().prefetch", "testset.items", "jax.devices", "jax.devices", "AdaMatchFixedConfidence.params.items", "v.parse().batch().nchw().map", "v.parse().batch().nchw", "v.parse().batch", "v.parse"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.shared.util.setup_tf", "home.repos.pwc.inspect_result.google-research_adamatch.shared.train.TrainableModule.train", "home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.noisy_student.PseudoLabeler.stop", "home.repos.pwc.inspect_result.google-research_adamatch.zoo.models.network", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.nchw", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.parse"], ["", "", "def", "main", "(", "argv", ")", ":", "\n", "    ", "del", "argv", "\n", "print", "(", "'JAX host: %d / %d'", "%", "(", "jax", ".", "host_id", "(", ")", ",", "jax", ".", "host_count", "(", ")", ")", ")", "\n", "print", "(", "'JAX devices:\\n%s'", "%", "'\\n'", ".", "join", "(", "str", "(", "d", ")", "for", "d", "in", "jax", ".", "devices", "(", ")", ")", ",", "flush", "=", "True", ")", "\n", "setup_tf", "(", ")", "\n", "source", "=", "FSL_DATASETS", "(", ")", "[", "f'{FLAGS.dataset}_{FLAGS.source}-0'", "]", "(", ")", "\n", "target", "=", "FSL_DATASETS", "(", ")", "[", "f'{FLAGS.dataset}_{FLAGS.target}-0'", "]", "(", ")", "\n", "testsets", "=", "[", "target", ".", "test", ",", "source", ".", "test", "]", "# Ordered by domain (target always first)", "\n", "module", "=", "AdaMatchFixedConfidence", "(", "source", ".", "nclass", ",", "network", "(", "FLAGS", ".", "arch", ")", ",", "\n", "lr", "=", "FLAGS", ".", "lr", ",", "\n", "lr_decay", "=", "FLAGS", ".", "lr_decay", ",", "\n", "wd", "=", "FLAGS", ".", "wd", ",", "\n", "arch", "=", "FLAGS", ".", "arch", ",", "\n", "batch", "=", "FLAGS", ".", "batch", ",", "\n", "wu", "=", "FLAGS", ".", "wu", ",", "\n", "confidence", "=", "FLAGS", ".", "confidence", ",", "\n", "use_cr", "=", "FLAGS", ".", "use_cr", ",", "\n", "uratio", "=", "FLAGS", ".", "uratio", ")", "\n", "logdir", "=", "f'DA/{FLAGS.dataset}/{FLAGS.source}/{FLAGS.target}/{FLAGS.augment}/{module.__class__.__name__}/%s'", "%", "(", "\n", "'_'", ".", "join", "(", "sorted", "(", "'%s%s'", "%", "k", "for", "k", "in", "module", ".", "params", ".", "items", "(", ")", ")", ")", ")", "\n", "logdir", "=", "os", ".", "path", ".", "join", "(", "FLAGS", ".", "logdir", ",", "logdir", ")", "\n", "test", "=", "{", "}", "\n", "for", "domain", ",", "testset", "in", "enumerate", "(", "testsets", ")", ":", "\n", "        ", "test", ".", "update", "(", "(", "f'{FLAGS.source}_to_{k}'", ",", "\n", "v", ".", "parse", "(", ")", ".", "batch", "(", "FLAGS", ".", "batch", ")", ".", "nchw", "(", ")", ".", "map", "(", "lambda", "d", ":", "{", "**", "d", ",", "'domain'", ":", "domain", "}", ")", ".", "prefetch", "(", "16", ")", ")", "\n", "for", "k", ",", "v", "in", "testset", ".", "items", "(", ")", ")", "\n", "", "if", "FLAGS", ".", "augment", ".", "startswith", "(", "'('", ")", ":", "\n", "        ", "train", "=", "MixData", "(", "source", ".", "train", ",", "target", ".", "train", ",", "source", ".", "nclass", ",", "FLAGS", ".", "batch", ",", "FLAGS", ".", "uratio", ")", "\n", "", "elif", "FLAGS", ".", "augment", ".", "startswith", "(", "'CTA('", ")", ":", "\n", "        ", "train", "=", "CTAData", "(", "source", ".", "train", ",", "target", ".", "train", ",", "source", ".", "nclass", ",", "FLAGS", ".", "batch", ",", "FLAGS", ".", "uratio", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "f'Augment flag value {FLAGS.augment} not supported.'", ")", "\n", "", "module", ".", "train", "(", "FLAGS", ".", "train_mimg", "<<", "10", ",", "FLAGS", ".", "report_kimg", ",", "train", ",", "test", ",", "logdir", ",", "FLAGS", ".", "keep_ckpts", ")", "\n", "train", ".", "stop", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.ablation.adamatch_no_distalign.AdaMatchNoDistAlign.__init__": [[38, 109], ["domain_adaptation.lib.train.TrainableDAModule.__init__", "model", "objax.optimizer.ExponentialMovingAverageModule", "objax.Module", "objax.nn.ExponentialMovingAverage", "objax.nn.MovingAverage", "objax.optimizer.Momentum", "shared.train.ScheduleCosPhases", "shared.train.ScheduleCos", "objax.Function.with_vars", "objax.GradValues", "objax.Function.with_vars", "shared.util.MyParallel", "shared.util.MyParallel", "adamatch_no_distalign.AdaMatchNoDistAlign.model.vars", "adamatch_no_distalign.AdaMatchNoDistAlign.stats.vars", "objax.functional.softmax", "adamatch_no_distalign.AdaMatchNoDistAlign.model_ema.vars", "adamatch_no_distalign.AdaMatchNoDistAlign.model.vars().tensors", "adamatch_no_distalign.AdaMatchNoDistAlign.model", "adamatch_no_distalign.AdaMatchNoDistAlign.model.vars().assign", "jax.concatenate().reshape", "jax.concatenate().reshape", "adamatch_no_distalign.AdaMatchNoDistAlign.model", "jax.split", "jax.split", "objax.functional.softmax", "adamatch_no_distalign.AdaMatchNoDistAlign.stats.p_labeled", "adamatch_no_distalign.AdaMatchNoDistAlign.stats.p_unlabeled", "objax.functional.stop_gradient", "objax.functional.loss.cross_entropy_logits_sparse", "adamatch_no_distalign.AdaMatchNoDistAlign.lr", "objax.GradValues.", "adamatch_no_distalign.AdaMatchNoDistAlign.opt", "adamatch_no_distalign.AdaMatchNoDistAlign.model_ema.update_ema", "adamatch_no_distalign.AdaMatchNoDistAlign.vars", "adamatch_no_distalign.AdaMatchNoDistAlign.model_ema", "sx.reshape", "objax.random.uniform", "objax.functional.softmax", "objax.functional.softmax().mean", "objax.functional.stop_gradient.mean", "objax.functional.stop_gradient.argmax", "sum", "adamatch_no_distalign.AdaMatchNoDistAlign.__init__.eval_op"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.baseline.Baseline.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nclass", ":", "int", ",", "model", ":", "Callable", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "nclass", ",", "kwargs", ")", "\n", "self", ".", "model", ":", "objax", ".", "Module", "=", "model", "(", "colors", "=", "3", ",", "nclass", "=", "nclass", ",", "**", "kwargs", ")", "\n", "self", ".", "model_ema", "=", "objax", ".", "optimizer", ".", "ExponentialMovingAverageModule", "(", "self", ".", "model", ",", "momentum", "=", "0.999", ")", "\n", "self", ".", "stats", "=", "objax", ".", "Module", "(", ")", "\n", "self", ".", "stats", ".", "keygen", "=", "objax", ".", "random", ".", "DEFAULT_GENERATOR", "\n", "self", ".", "stats", ".", "p_labeled", "=", "objax", ".", "nn", ".", "ExponentialMovingAverage", "(", "(", "nclass", ",", ")", ",", "init_value", "=", "1", "/", "nclass", ")", "\n", "self", ".", "stats", ".", "p_unlabeled", "=", "objax", ".", "nn", ".", "MovingAverage", "(", "(", "nclass", ",", ")", ",", "buffer_size", "=", "128", ",", "init_value", "=", "1", "/", "nclass", ")", "\n", "train_vars", "=", "self", ".", "model", ".", "vars", "(", ")", "+", "self", ".", "stats", ".", "vars", "(", ")", "\n", "self", ".", "opt", "=", "objax", ".", "optimizer", ".", "Momentum", "(", "train_vars", ")", "\n", "self", ".", "wu", "=", "ScheduleCosPhases", "(", "1", ",", "[", "(", "0.5", ",", "1", ")", ",", "(", "1", ",", "self", ".", "params", ".", "wu", ")", "]", ",", "start_value", "=", "0", ")", "\n", "self", ".", "lr", "=", "ScheduleCos", "(", "self", ".", "params", ".", "lr", ",", "self", ".", "params", ".", "lr_decay", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "model_ema", ".", "vars", "(", ")", ")", "\n", "def", "eval_op", "(", "x", ":", "JaxArray", ",", "domain", ":", "int", ")", "->", "JaxArray", ":", "\n", "            ", "return", "objax", ".", "functional", ".", "softmax", "(", "self", ".", "model_ema", "(", "x", ",", "training", "=", "False", ",", "domain", "=", "domain", ")", ")", "\n", "\n", "", "def", "loss_function", "(", "sx", ",", "sy", ",", "tu", ",", "progress", ")", ":", "\n", "            ", "c", ",", "h", ",", "w", "=", "sx", ".", "shape", "[", "-", "3", ":", "]", "\n", "saved_vars", "=", "self", ".", "model", ".", "vars", "(", ")", ".", "tensors", "(", ")", "\n", "logit_bn_x", "=", "self", ".", "model", "(", "sx", ".", "reshape", "(", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", ")", ",", "training", "=", "True", ")", "\n", "self", ".", "model", ".", "vars", "(", ")", ".", "assign", "(", "saved_vars", ")", "\n", "xu", "=", "jn", ".", "concatenate", "(", "(", "sx", ",", "tu", ")", ")", ".", "reshape", "(", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", ")", "\n", "logit", "=", "self", ".", "model", "(", "xu", ",", "training", "=", "True", ")", "\n", "logit_sx", ",", "logit_tu", "=", "jn", ".", "split", "(", "logit", ",", "(", "2", "*", "sx", ".", "shape", "[", "0", "]", ",", ")", ")", "\n", "logit_sx", "+=", "(", "logit_bn_x", "-", "logit_sx", ")", "*", "objax", ".", "random", ".", "uniform", "(", "logit_sx", ".", "shape", ")", "\n", "logit_sx_weak", ",", "logit_sx_strong", "=", "logit_sx", "[", ":", ":", "2", "]", ",", "logit_sx", "[", "1", ":", ":", "2", "]", "\n", "logit_tu_weak", ",", "logit_tu_strong", "=", "logit_tu", "[", ":", ":", "2", "]", ",", "logit_tu", "[", "1", ":", ":", "2", "]", "\n", "\n", "if", "self", ".", "params", ".", "use_cr", ":", "\n", "                ", "real_confidence", "=", "objax", ".", "functional", ".", "softmax", "(", "stop_gradient", "(", "logit_sx_weak", ")", ")", "\n", "confidence_ratio", "=", "real_confidence", ".", "max", "(", "1", ")", ".", "mean", "(", "0", ")", "*", "self", ".", "params", ".", "confidence", "\n", "", "else", ":", "\n", "                ", "confidence_ratio", "=", "self", ".", "params", ".", "confidence", "\n", "\n", "", "pseudo_labels", "=", "objax", ".", "functional", ".", "softmax", "(", "logit_tu_weak", ")", "\n", "p_labeled", "=", "self", ".", "stats", ".", "p_labeled", "(", "objax", ".", "functional", ".", "softmax", "(", "logit_sx_weak", ")", ".", "mean", "(", "0", ")", ")", "\n", "p_unlabeled", "=", "self", ".", "stats", ".", "p_unlabeled", "(", "pseudo_labels", ".", "mean", "(", "0", ")", ")", "\n", "pseudo_labels", "=", "stop_gradient", "(", "pseudo_labels", ")", "\n", "pseudo_mask", "=", "(", "pseudo_labels", ".", "max", "(", "axis", "=", "1", ")", ">=", "confidence_ratio", ")", ".", "astype", "(", "pseudo_labels", ".", "dtype", ")", "\n", "\n", "xe", "=", "0.5", "*", "(", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_sx_weak", ",", "sy", ")", ".", "mean", "(", ")", "+", "\n", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_sx_strong", ",", "sy", ")", ".", "mean", "(", ")", ")", "\n", "xeu", "=", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits_sparse", "(", "logit_tu_strong", ",", "pseudo_labels", ".", "argmax", "(", "axis", "=", "1", ")", ")", "\n", "xeu", "=", "(", "xeu", "*", "pseudo_mask", ")", ".", "mean", "(", ")", "\n", "wd", "=", "0.5", "*", "sum", "(", "(", "v", ".", "value", "**", "2", ")", ".", "sum", "(", ")", "for", "k", ",", "v", "in", "train_vars", ".", "items", "(", ")", "if", "k", ".", "endswith", "(", "'.w'", ")", ")", "\n", "\n", "loss", "=", "xe", "+", "self", ".", "wu", "(", "progress", ")", "*", "xeu", "+", "self", ".", "params", ".", "wd", "*", "wd", "\n", "return", "loss", ",", "{", "'losses/xe'", ":", "xe", ",", "\n", "'losses/xeu'", ":", "xeu", ",", "\n", "'losses/wd'", ":", "wd", ",", "\n", "'losses/hregbn'", ":", "jn", ".", "square", "(", "logit_sx", "-", "logit_bn_x", ")", ".", "mean", "(", ")", ",", "\n", "'monitors/confidence_ratio'", ":", "confidence_ratio", ",", "\n", "'monitors/wu'", ":", "self", ".", "wu", "(", "progress", ")", ",", "\n", "'monitors/mask'", ":", "pseudo_mask", ".", "mean", "(", ")", ",", "\n", "'monitors/klmodel'", ":", "objax", ".", "functional", ".", "divergence", ".", "kl", "(", "p_labeled", ",", "p_unlabeled", ")", "}", "\n", "\n", "", "gv", "=", "objax", ".", "GradValues", "(", "loss_function", ",", "train_vars", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "vars", "(", ")", ")", "\n", "def", "train_op", "(", "step", ",", "sx", ",", "sy", ",", "tu", ",", "probe", "=", "None", ")", ":", "\n", "            ", "y_probe", "=", "eval_op", "(", "probe", ",", "1", ")", "if", "probe", "is", "not", "None", "else", "None", "\n", "p", "=", "step", "/", "(", "FLAGS", ".", "train_mimg", "<<", "20", ")", "\n", "lr", "=", "self", ".", "lr", "(", "p", ")", "\n", "g", ",", "v", "=", "gv", "(", "sx", ",", "sy", ",", "tu", ",", "p", ")", "\n", "self", ".", "opt", "(", "lr", ",", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "g", ")", ")", "\n", "self", ".", "model_ema", ".", "update_ema", "(", ")", "\n", "return", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "{", "'monitors/lr'", ":", "lr", ",", "**", "v", "[", "1", "]", "}", ")", ",", "y_probe", "\n", "\n", "", "self", ".", "train_op", "=", "MyParallel", "(", "train_op", ",", "reduce", "=", "lambda", "x", ":", "x", ")", "\n", "self", ".", "eval_op", "=", "MyParallel", "(", "eval_op", ",", "static_argnums", "=", "(", "1", ",", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.ablation.adamatch_no_distalign.main": [[111, 145], ["print", "print", "shared.util.setup_tf", "adamatch_no_distalign.AdaMatchNoDistAlign", "os.path.join", "enumerate", "absl.flags.FLAGS.augment.startswith", "AdaMatchNoDistAlign.train", "domain_adaptation.lib.data.CTAData.stop", "shared.zoo.models.network", "test.update", "domain_adaptation.lib.data.MixData", "absl.flags.FLAGS.augment.startswith", "shared.data.fsl.DATASETS", "shared.data.fsl.DATASETS", "sorted", "domain_adaptation.lib.data.CTAData", "ValueError", "jax.host_id", "jax.host_id", "jax.host_count", "jax.host_count", "str", "v.parse().batch().nchw().map().prefetch", "testset.items", "jax.devices", "jax.devices", "AdaMatchNoDistAlign.params.items", "v.parse().batch().nchw().map", "v.parse().batch().nchw", "v.parse().batch", "v.parse"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.shared.util.setup_tf", "home.repos.pwc.inspect_result.google-research_adamatch.shared.train.TrainableModule.train", "home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.noisy_student.PseudoLabeler.stop", "home.repos.pwc.inspect_result.google-research_adamatch.zoo.models.network", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.nchw", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.parse"], ["", "", "def", "main", "(", "argv", ")", ":", "\n", "    ", "del", "argv", "\n", "print", "(", "'JAX host: %d / %d'", "%", "(", "jax", ".", "host_id", "(", ")", ",", "jax", ".", "host_count", "(", ")", ")", ")", "\n", "print", "(", "'JAX devices:\\n%s'", "%", "'\\n'", ".", "join", "(", "str", "(", "d", ")", "for", "d", "in", "jax", ".", "devices", "(", ")", ")", ",", "flush", "=", "True", ")", "\n", "setup_tf", "(", ")", "\n", "source", "=", "FSL_DATASETS", "(", ")", "[", "f'{FLAGS.dataset}_{FLAGS.source}-0'", "]", "(", ")", "\n", "target", "=", "FSL_DATASETS", "(", ")", "[", "f'{FLAGS.dataset}_{FLAGS.target}-0'", "]", "(", ")", "\n", "testsets", "=", "[", "target", ".", "test", ",", "source", ".", "test", "]", "# Ordered by domain (target always first)", "\n", "module", "=", "AdaMatchNoDistAlign", "(", "source", ".", "nclass", ",", "network", "(", "FLAGS", ".", "arch", ")", ",", "\n", "lr", "=", "FLAGS", ".", "lr", ",", "\n", "lr_decay", "=", "FLAGS", ".", "lr_decay", ",", "\n", "wd", "=", "FLAGS", ".", "wd", ",", "\n", "arch", "=", "FLAGS", ".", "arch", ",", "\n", "batch", "=", "FLAGS", ".", "batch", ",", "\n", "wu", "=", "FLAGS", ".", "wu", ",", "\n", "confidence", "=", "FLAGS", ".", "confidence", ",", "\n", "use_cr", "=", "FLAGS", ".", "use_cr", ",", "\n", "uratio", "=", "FLAGS", ".", "uratio", ")", "\n", "logdir", "=", "f'DA/{FLAGS.dataset}/{FLAGS.source}/{FLAGS.target}/{FLAGS.augment}/{module.__class__.__name__}/%s'", "%", "(", "\n", "'_'", ".", "join", "(", "sorted", "(", "'%s%s'", "%", "k", "for", "k", "in", "module", ".", "params", ".", "items", "(", ")", ")", ")", ")", "\n", "logdir", "=", "os", ".", "path", ".", "join", "(", "FLAGS", ".", "logdir", ",", "logdir", ")", "\n", "test", "=", "{", "}", "\n", "for", "domain", ",", "testset", "in", "enumerate", "(", "testsets", ")", ":", "\n", "        ", "test", ".", "update", "(", "(", "f'{FLAGS.source}_to_{k}'", ",", "\n", "v", ".", "parse", "(", ")", ".", "batch", "(", "FLAGS", ".", "batch", ")", ".", "nchw", "(", ")", ".", "map", "(", "lambda", "d", ":", "{", "**", "d", ",", "'domain'", ":", "domain", "}", ")", ".", "prefetch", "(", "16", ")", ")", "\n", "for", "k", ",", "v", "in", "testset", ".", "items", "(", ")", ")", "\n", "", "if", "FLAGS", ".", "augment", ".", "startswith", "(", "'('", ")", ":", "\n", "        ", "train", "=", "MixData", "(", "source", ".", "train", ",", "target", ".", "train", ",", "source", ".", "nclass", ",", "FLAGS", ".", "batch", ",", "FLAGS", ".", "uratio", ")", "\n", "", "elif", "FLAGS", ".", "augment", ".", "startswith", "(", "'CTA('", ")", ":", "\n", "        ", "train", "=", "CTAData", "(", "source", ".", "train", ",", "target", ".", "train", ",", "source", ".", "nclass", ",", "FLAGS", ".", "batch", ",", "FLAGS", ".", "uratio", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "f'Augment flag value {FLAGS.augment} not supported.'", ")", "\n", "", "module", ".", "train", "(", "FLAGS", ".", "train_mimg", "<<", "10", ",", "FLAGS", ".", "report_kimg", ",", "train", ",", "test", ",", "logdir", ",", "FLAGS", ".", "keep_ckpts", ")", "\n", "train", ".", "stop", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.ablation.adamatch_distalign_remixmatch.AdaMatchDistAlignRMM.__init__": [[38, 115], ["domain_adaptation.lib.train.TrainableDAModule.__init__", "model", "objax.optimizer.ExponentialMovingAverageModule", "absl.flags.FLAGS.arch.endswith", "objax.Module", "objax.nn.ExponentialMovingAverage", "objax.nn.MovingAverage", "objax.optimizer.Momentum", "shared.train.ScheduleCosPhases", "shared.train.ScheduleCos", "objax.Function.with_vars", "objax.GradValues", "objax.Function.with_vars", "shared.util.MyParallel", "shared.util.MyParallel", "adamatch_distalign_remixmatch.AdaMatchDistAlignRMM.model_ema.update_ema", "adamatch_distalign_remixmatch.AdaMatchDistAlignRMM.model.vars", "adamatch_distalign_remixmatch.AdaMatchDistAlignRMM.stats.vars", "objax.functional.softmax", "adamatch_distalign_remixmatch.AdaMatchDistAlignRMM.model_ema.vars", "adamatch_distalign_remixmatch.AdaMatchDistAlignRMM.model.vars().tensors", "adamatch_distalign_remixmatch.AdaMatchDistAlignRMM.model", "adamatch_distalign_remixmatch.AdaMatchDistAlignRMM.model.vars().assign", "jax.concatenate().reshape", "jax.concatenate().reshape", "adamatch_distalign_remixmatch.AdaMatchDistAlignRMM.model", "jax.split", "jax.split", "objax.functional.softmax", "adamatch_distalign_remixmatch.AdaMatchDistAlignRMM.stats.p_data", "adamatch_distalign_remixmatch.AdaMatchDistAlignRMM.stats.p_unlabeled", "objax.functional.stop_gradient", "objax.functional.loss.cross_entropy_logits_sparse", "adamatch_distalign_remixmatch.AdaMatchDistAlignRMM.lr", "objax.GradValues.", "adamatch_distalign_remixmatch.AdaMatchDistAlignRMM.opt", "adamatch_distalign_remixmatch.AdaMatchDistAlignRMM.model_ema.update_ema", "adamatch_distalign_remixmatch.AdaMatchDistAlignRMM.vars", "adamatch_distalign_remixmatch.AdaMatchDistAlignRMM.model_ema", "sx.reshape", "objax.random.uniform", "objax.functional.softmax", "sy.mean", "objax.functional.stop_gradient.mean", "objax.functional.stop_gradient.argmax", "sum", "adamatch_distalign_remixmatch.AdaMatchDistAlignRMM.__init__.eval_op"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.baseline.Baseline.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nclass", ":", "int", ",", "model", ":", "Callable", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "nclass", ",", "kwargs", ")", "\n", "self", ".", "model", ":", "objax", ".", "Module", "=", "model", "(", "colors", "=", "3", ",", "nclass", "=", "nclass", ",", "**", "kwargs", ")", "\n", "self", ".", "model_ema", "=", "objax", ".", "optimizer", ".", "ExponentialMovingAverageModule", "(", "self", ".", "model", ",", "momentum", "=", "0.999", ")", "\n", "if", "FLAGS", ".", "arch", ".", "endswith", "(", "'pretrain'", ")", ":", "\n", "# Initialize weights of EMA with pretrained model's weights.", "\n", "            ", "self", ".", "model_ema", ".", "ema", ".", "momentum", "=", "0", "\n", "self", ".", "model_ema", ".", "update_ema", "(", ")", "\n", "self", ".", "model_ema", ".", "ema", ".", "momentum", "=", "0.999", "\n", "", "self", ".", "stats", "=", "objax", ".", "Module", "(", ")", "\n", "self", ".", "stats", ".", "keygen", "=", "objax", ".", "random", ".", "DEFAULT_GENERATOR", "\n", "self", ".", "stats", ".", "p_data", "=", "objax", ".", "nn", ".", "ExponentialMovingAverage", "(", "(", "nclass", ",", ")", ",", "init_value", "=", "1", "/", "nclass", ")", "\n", "self", ".", "stats", ".", "p_unlabeled", "=", "objax", ".", "nn", ".", "MovingAverage", "(", "(", "nclass", ",", ")", ",", "buffer_size", "=", "128", ",", "init_value", "=", "1", "/", "nclass", ")", "\n", "train_vars", "=", "self", ".", "model", ".", "vars", "(", ")", "+", "self", ".", "stats", ".", "vars", "(", ")", "\n", "self", ".", "opt", "=", "objax", ".", "optimizer", ".", "Momentum", "(", "train_vars", ")", "\n", "self", ".", "wu", "=", "ScheduleCosPhases", "(", "1", ",", "[", "(", "0.5", ",", "1", ")", ",", "(", "1", ",", "self", ".", "params", ".", "wu", ")", "]", ",", "start_value", "=", "0", ")", "\n", "self", ".", "lr", "=", "ScheduleCos", "(", "self", ".", "params", ".", "lr", ",", "self", ".", "params", ".", "lr_decay", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "model_ema", ".", "vars", "(", ")", ")", "\n", "def", "eval_op", "(", "x", ":", "JaxArray", ",", "domain", ":", "int", ")", "->", "JaxArray", ":", "\n", "            ", "return", "objax", ".", "functional", ".", "softmax", "(", "self", ".", "model_ema", "(", "x", ",", "training", "=", "False", ",", "domain", "=", "domain", ")", ")", "\n", "\n", "", "def", "loss_function", "(", "sx", ",", "sy", ",", "tu", ",", "progress", ")", ":", "\n", "            ", "c", ",", "h", ",", "w", "=", "sx", ".", "shape", "[", "-", "3", ":", "]", "\n", "saved_vars", "=", "self", ".", "model", ".", "vars", "(", ")", ".", "tensors", "(", ")", "\n", "logit_bn_x", "=", "self", ".", "model", "(", "sx", ".", "reshape", "(", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", ")", ",", "training", "=", "True", ")", "\n", "self", ".", "model", ".", "vars", "(", ")", ".", "assign", "(", "saved_vars", ")", "\n", "xu", "=", "jn", ".", "concatenate", "(", "(", "sx", ",", "tu", ")", ")", ".", "reshape", "(", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", ")", "\n", "logit", "=", "self", ".", "model", "(", "xu", ",", "training", "=", "True", ")", "\n", "logit_sx", ",", "logit_tu", "=", "jn", ".", "split", "(", "logit", ",", "(", "2", "*", "sx", ".", "shape", "[", "0", "]", ",", ")", ")", "\n", "logit_sx", "+=", "(", "logit_bn_x", "-", "logit_sx", ")", "*", "objax", ".", "random", ".", "uniform", "(", "logit_sx", ".", "shape", ")", "\n", "logit_sx_weak", ",", "logit_sx_strong", "=", "logit_sx", "[", ":", ":", "2", "]", ",", "logit_sx", "[", "1", ":", ":", "2", "]", "\n", "logit_tu_weak", ",", "logit_tu_strong", "=", "logit_tu", "[", ":", ":", "2", "]", ",", "logit_tu", "[", "1", ":", ":", "2", "]", "\n", "\n", "if", "self", ".", "params", ".", "use_cr", ":", "\n", "                ", "real_confidence", "=", "objax", ".", "functional", ".", "softmax", "(", "stop_gradient", "(", "logit_sx_weak", ")", ")", "\n", "confidence_ratio", "=", "real_confidence", ".", "max", "(", "1", ")", ".", "mean", "(", "0", ")", "*", "self", ".", "params", ".", "confidence", "\n", "", "else", ":", "\n", "                ", "confidence_ratio", "=", "self", ".", "params", ".", "confidence", "\n", "\n", "", "pseudo_labels", "=", "objax", ".", "functional", ".", "softmax", "(", "logit_tu_weak", ")", "\n", "p_data", "=", "self", ".", "stats", ".", "p_data", "(", "sy", ".", "mean", "(", "0", ")", ")", "\n", "p_unlabeled", "=", "self", ".", "stats", ".", "p_unlabeled", "(", "pseudo_labels", ".", "mean", "(", "0", ")", ")", "\n", "pseudo_labels", "*=", "(", "1e-6", "+", "p_data", ")", "/", "(", "1e-6", "+", "p_unlabeled", ")", "\n", "pseudo_labels", "=", "stop_gradient", "(", "pseudo_labels", "/", "pseudo_labels", ".", "sum", "(", "1", ",", "keepdims", "=", "True", ")", ")", "\n", "pseudo_mask", "=", "(", "pseudo_labels", ".", "max", "(", "axis", "=", "1", ")", ">=", "confidence_ratio", ")", ".", "astype", "(", "pseudo_labels", ".", "dtype", ")", "\n", "\n", "xe", "=", "0.5", "*", "(", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_sx_weak", ",", "sy", ")", ".", "mean", "(", ")", "+", "\n", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_sx_strong", ",", "sy", ")", ".", "mean", "(", ")", ")", "\n", "xeu", "=", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits_sparse", "(", "logit_tu_strong", ",", "pseudo_labels", ".", "argmax", "(", "axis", "=", "1", ")", ")", "\n", "xeu", "=", "(", "xeu", "*", "pseudo_mask", ")", ".", "mean", "(", ")", "\n", "wd", "=", "0.5", "*", "sum", "(", "(", "v", ".", "value", "**", "2", ")", ".", "sum", "(", ")", "for", "k", ",", "v", "in", "train_vars", ".", "items", "(", ")", "if", "k", ".", "endswith", "(", "'.w'", ")", ")", "\n", "\n", "loss", "=", "xe", "+", "self", ".", "wu", "(", "progress", ")", "*", "xeu", "+", "self", ".", "params", ".", "wd", "*", "wd", "\n", "return", "loss", ",", "{", "'losses/xe'", ":", "xe", ",", "\n", "'losses/xeu'", ":", "xeu", ",", "\n", "'losses/wd'", ":", "wd", ",", "\n", "'losses/hregbn'", ":", "jn", ".", "square", "(", "logit_sx", "-", "logit_bn_x", ")", ".", "mean", "(", ")", ",", "\n", "'monitors/confidence_ratio'", ":", "confidence_ratio", ",", "\n", "'monitors/wu'", ":", "self", ".", "wu", "(", "progress", ")", ",", "\n", "'monitors/mask'", ":", "pseudo_mask", ".", "mean", "(", ")", ",", "\n", "'monitors/klmodel'", ":", "objax", ".", "functional", ".", "divergence", ".", "kl", "(", "p_data", ",", "p_unlabeled", ")", "}", "\n", "\n", "", "gv", "=", "objax", ".", "GradValues", "(", "loss_function", ",", "train_vars", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "vars", "(", ")", ")", "\n", "def", "train_op", "(", "step", ",", "sx", ",", "sy", ",", "tu", ",", "probe", "=", "None", ")", ":", "\n", "            ", "y_probe", "=", "eval_op", "(", "probe", ",", "1", ")", "if", "probe", "is", "not", "None", "else", "None", "\n", "p", "=", "step", "/", "(", "FLAGS", ".", "train_mimg", "<<", "20", ")", "\n", "lr", "=", "self", ".", "lr", "(", "p", ")", "\n", "g", ",", "v", "=", "gv", "(", "sx", ",", "sy", ",", "tu", ",", "p", ")", "\n", "self", ".", "opt", "(", "lr", ",", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "g", ")", ")", "\n", "self", ".", "model_ema", ".", "update_ema", "(", ")", "\n", "return", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "{", "'monitors/lr'", ":", "lr", ",", "**", "v", "[", "1", "]", "}", ")", ",", "y_probe", "\n", "\n", "", "self", ".", "train_op", "=", "MyParallel", "(", "train_op", ",", "reduce", "=", "lambda", "x", ":", "x", ")", "\n", "self", ".", "eval_op", "=", "MyParallel", "(", "eval_op", ",", "static_argnums", "=", "(", "1", ",", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.ablation.adamatch_distalign_remixmatch.main": [[117, 151], ["print", "print", "shared.util.setup_tf", "adamatch_distalign_remixmatch.AdaMatchDistAlignRMM", "os.path.join", "enumerate", "absl.flags.FLAGS.augment.startswith", "AdaMatchDistAlignRMM.train", "domain_adaptation.lib.data.CTAData.stop", "shared.zoo.models.network", "test.update", "domain_adaptation.lib.data.MixData", "absl.flags.FLAGS.augment.startswith", "shared.data.fsl.DATASETS", "shared.data.fsl.DATASETS", "sorted", "domain_adaptation.lib.data.CTAData", "ValueError", "jax.host_id", "jax.host_id", "jax.host_count", "jax.host_count", "str", "v.parse().batch().nchw().map().prefetch", "testset.items", "jax.devices", "jax.devices", "AdaMatchDistAlignRMM.params.items", "v.parse().batch().nchw().map", "v.parse().batch().nchw", "v.parse().batch", "v.parse"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.shared.util.setup_tf", "home.repos.pwc.inspect_result.google-research_adamatch.shared.train.TrainableModule.train", "home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.noisy_student.PseudoLabeler.stop", "home.repos.pwc.inspect_result.google-research_adamatch.zoo.models.network", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.nchw", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.parse"], ["", "", "def", "main", "(", "argv", ")", ":", "\n", "    ", "del", "argv", "\n", "print", "(", "'JAX host: %d / %d'", "%", "(", "jax", ".", "host_id", "(", ")", ",", "jax", ".", "host_count", "(", ")", ")", ")", "\n", "print", "(", "'JAX devices:\\n%s'", "%", "'\\n'", ".", "join", "(", "str", "(", "d", ")", "for", "d", "in", "jax", ".", "devices", "(", ")", ")", ",", "flush", "=", "True", ")", "\n", "setup_tf", "(", ")", "\n", "source", "=", "FSL_DATASETS", "(", ")", "[", "f'{FLAGS.dataset}_{FLAGS.source}-0'", "]", "(", ")", "\n", "target", "=", "FSL_DATASETS", "(", ")", "[", "f'{FLAGS.dataset}_{FLAGS.target}-0'", "]", "(", ")", "\n", "testsets", "=", "[", "target", ".", "test", ",", "source", ".", "test", "]", "# Ordered by domain (target always first)", "\n", "module", "=", "AdaMatchDistAlignRMM", "(", "source", ".", "nclass", ",", "network", "(", "FLAGS", ".", "arch", ")", ",", "\n", "lr", "=", "FLAGS", ".", "lr", ",", "\n", "lr_decay", "=", "FLAGS", ".", "lr_decay", ",", "\n", "wd", "=", "FLAGS", ".", "wd", ",", "\n", "arch", "=", "FLAGS", ".", "arch", ",", "\n", "batch", "=", "FLAGS", ".", "batch", ",", "\n", "wu", "=", "FLAGS", ".", "wu", ",", "\n", "confidence", "=", "FLAGS", ".", "confidence", ",", "\n", "use_cr", "=", "FLAGS", ".", "use_cr", ",", "\n", "uratio", "=", "FLAGS", ".", "uratio", ")", "\n", "logdir", "=", "f'DA/{FLAGS.dataset}/{FLAGS.source}/{FLAGS.target}/{FLAGS.augment}/{module.__class__.__name__}/%s'", "%", "(", "\n", "'_'", ".", "join", "(", "sorted", "(", "'%s%s'", "%", "k", "for", "k", "in", "module", ".", "params", ".", "items", "(", ")", ")", ")", ")", "\n", "logdir", "=", "os", ".", "path", ".", "join", "(", "FLAGS", ".", "logdir", ",", "logdir", ")", "\n", "test", "=", "{", "}", "\n", "for", "domain", ",", "testset", "in", "enumerate", "(", "testsets", ")", ":", "\n", "        ", "test", ".", "update", "(", "(", "f'{FLAGS.source}_to_{k}'", ",", "\n", "v", ".", "parse", "(", ")", ".", "batch", "(", "FLAGS", ".", "batch", ")", ".", "nchw", "(", ")", ".", "map", "(", "lambda", "d", ":", "{", "**", "d", ",", "'domain'", ":", "domain", "}", ")", ".", "prefetch", "(", "16", ")", ")", "\n", "for", "k", ",", "v", "in", "testset", ".", "items", "(", ")", ")", "\n", "", "if", "FLAGS", ".", "augment", ".", "startswith", "(", "'('", ")", ":", "\n", "        ", "train", "=", "MixData", "(", "source", ".", "train", ",", "target", ".", "train", ",", "source", ".", "nclass", ",", "FLAGS", ".", "batch", ",", "FLAGS", ".", "uratio", ")", "\n", "", "elif", "FLAGS", ".", "augment", ".", "startswith", "(", "'CTA('", ")", ":", "\n", "        ", "train", "=", "CTAData", "(", "source", ".", "train", ",", "target", ".", "train", ",", "source", ".", "nclass", ",", "FLAGS", ".", "batch", ",", "FLAGS", ".", "uratio", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "f'Augment flag value {FLAGS.augment} not supported.'", ")", "\n", "", "module", ".", "train", "(", "FLAGS", ".", "train_mimg", "<<", "10", ",", "FLAGS", ".", "report_kimg", ",", "train", ",", "test", ",", "logdir", ",", "FLAGS", ".", "keep_ckpts", ")", "\n", "train", ".", "stop", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.scripts.check_dataset.main": [[22, 31], ["dataset.train.parse", "print", "shared.data.fsl.DATASETS"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.parse"], ["def", "main", "(", "argv", ")", ":", "\n", "    ", "del", "argv", "# Unused.", "\n", "dataset", "=", "DATASETS", "(", ")", "[", "FLAGS", ".", "dataset", "]", "(", ")", "\n", "data", "=", "dataset", ".", "train", ".", "parse", "(", "1", ")", "\n", "\n", "# Iterate through data", "\n", "for", "it", "in", "data", ":", "\n", "        ", "print", "(", "it", "[", "'image'", "]", "[", "0", "]", ")", "\n", "break", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.scripts.check_augment.main": [[22, 29], ["dataset.labeled.repeat().shuffle().parse().augment().batch().prefetch", "print", "fully_supervised.libml.data.fsl.DATASETS", "dataset.labeled.repeat().shuffle().parse().augment().batch", "dataset.labeled.repeat().shuffle().parse().augment", "dataset.labeled.repeat().shuffle().parse", "dataset.labeled.repeat().shuffle", "dataset.labeled.repeat"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.parse"], ["def", "main", "(", "argv", ")", ":", "\n", "    ", "del", "argv", "# Unused.", "\n", "dataset", "=", "DATASETS", "(", ")", "[", "FLAGS", ".", "dataset", "]", "(", ")", "\n", "train", "=", "dataset", ".", "labeled", ".", "repeat", "(", ")", ".", "shuffle", "(", "FLAGS", ".", "shuffle", ")", ".", "parse", "(", ")", ".", "augment", "(", ")", ".", "batch", "(", "64", ")", ".", "prefetch", "(", "16", ")", "\n", "for", "it", "in", "train", ":", "\n", "        ", "print", "(", "it", ")", "\n", "break", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._encode_png": [[68, 70], ["objax.util.image.to_png", "tqdm.trange"], "function", ["None"], ["def", "_encode_png", "(", "images", ")", ":", "\n", "    ", "return", "[", "to_png", "(", "images", "[", "x", "]", ")", "for", "x", "in", "trange", "(", "images", ".", "shape", "[", "0", "]", ",", "desc", "=", "'PNG Encoding'", ",", "leave", "=", "False", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._image_resize": [[72, 85], ["max", "x.resize.resize", "x.resize.resize", "x.resize.resize", "x.resize.resize"], "function", ["None"], ["", "def", "_image_resize", "(", "x", ",", "size", ":", "int", ")", ":", "\n", "    ", "\"\"\"Resizing that tries to minimize artifacts.\"\"\"", "\n", "original", "=", "max", "(", "x", ".", "size", ")", "\n", "if", "original", "<", "size", ":", "\n", "        ", "return", "x", ".", "resize", "(", "(", "size", ",", "size", ")", ",", "Image", ".", "BICUBIC", ")", "\n", "", "nearest", "=", "original", "-", "(", "original", "%", "size", ")", "\n", "if", "nearest", "!=", "original", ":", "\n", "        ", "x", "=", "x", ".", "resize", "(", "(", "nearest", ",", "nearest", ")", ",", "Image", ".", "BILINEAR", ")", "\n", "", "if", "nearest", "!=", "size", ":", "\n", "        ", "x", "=", "x", ".", "resize", "(", "(", "size", ",", "size", ")", ",", "Image", ".", "BOX", ")", "\n", "", "if", "x", ".", "size", "[", "0", "]", "!=", "x", ".", "size", "[", "1", "]", ":", "\n", "        ", "x", "=", "x", ".", "resize", "(", "(", "size", ",", "size", ")", ",", "Image", ".", "BICUBIC", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._load_cifar10": [[87, 108], ["create_datasets._encode_png", "create_datasets._encode_png", "dict", "numpy.transpose", "tempfile.NamedTemporaryFile", "urllib.request.urlretrieve", "tarfile.open", "range", "scipy.io.loadmat", "create_datasets._load_cifar10.unflatten"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._encode_png", "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._encode_png"], ["", "def", "_load_cifar10", "(", ")", ":", "\n", "    ", "def", "unflatten", "(", "images", ")", ":", "\n", "        ", "return", "np", ".", "transpose", "(", "images", ".", "reshape", "(", "(", "images", ".", "shape", "[", "0", "]", ",", "3", ",", "32", ",", "32", ")", ")", ",", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "\n", "\n", "", "with", "tempfile", ".", "NamedTemporaryFile", "(", ")", "as", "f", ":", "\n", "        ", "request", ".", "urlretrieve", "(", "URLS", "[", "'cifar10'", "]", ",", "f", ".", "name", ")", "\n", "tar", "=", "tarfile", ".", "open", "(", "fileobj", "=", "f", ")", "\n", "train_data_batches", ",", "train_data_labels", "=", "[", "]", ",", "[", "]", "\n", "for", "batch", "in", "range", "(", "1", ",", "6", ")", ":", "\n", "            ", "data_dict", "=", "scipy", ".", "io", ".", "loadmat", "(", "tar", ".", "extractfile", "(", "'cifar-10-batches-mat/data_batch_{}.mat'", ".", "format", "(", "batch", ")", ")", ")", "\n", "train_data_batches", ".", "append", "(", "data_dict", "[", "'data'", "]", ")", "\n", "train_data_labels", ".", "append", "(", "data_dict", "[", "'labels'", "]", ".", "flatten", "(", ")", ")", "\n", "\n", "", "train_set", "=", "{", "'images'", ":", "np", ".", "concatenate", "(", "train_data_batches", ",", "axis", "=", "0", ")", ",", "\n", "'labels'", ":", "np", ".", "concatenate", "(", "train_data_labels", ",", "axis", "=", "0", ")", "}", "\n", "data_dict", "=", "scipy", ".", "io", ".", "loadmat", "(", "tar", ".", "extractfile", "(", "'cifar-10-batches-mat/test_batch.mat'", ")", ")", "\n", "test_set", "=", "{", "'images'", ":", "data_dict", "[", "'data'", "]", ",", "\n", "'labels'", ":", "data_dict", "[", "'labels'", "]", ".", "flatten", "(", ")", "}", "\n", "", "train_set", "[", "'images'", "]", "=", "_encode_png", "(", "unflatten", "(", "train_set", "[", "'images'", "]", ")", ")", "\n", "test_set", "[", "'images'", "]", "=", "_encode_png", "(", "unflatten", "(", "test_set", "[", "'images'", "]", ")", ")", "\n", "return", "dict", "(", "train", "=", "train_set", ",", "test", "=", "test_set", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._load_cifar100": [[110, 126], ["create_datasets._encode_png", "create_datasets._encode_png", "dict", "numpy.transpose", "tempfile.NamedTemporaryFile", "urllib.request.urlretrieve", "tarfile.open", "scipy.io.loadmat", "scipy.io.loadmat", "create_datasets._load_cifar10.unflatten"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._encode_png", "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._encode_png"], ["", "def", "_load_cifar100", "(", ")", ":", "\n", "    ", "def", "unflatten", "(", "images", ")", ":", "\n", "        ", "return", "np", ".", "transpose", "(", "images", ".", "reshape", "(", "(", "images", ".", "shape", "[", "0", "]", ",", "3", ",", "32", ",", "32", ")", ")", ",", "[", "0", ",", "2", ",", "3", ",", "1", "]", ")", "\n", "\n", "", "with", "tempfile", ".", "NamedTemporaryFile", "(", ")", "as", "f", ":", "\n", "        ", "request", ".", "urlretrieve", "(", "URLS", "[", "'cifar100'", "]", ",", "f", ".", "name", ")", "\n", "tar", "=", "tarfile", ".", "open", "(", "fileobj", "=", "f", ")", "\n", "data_dict", "=", "scipy", ".", "io", ".", "loadmat", "(", "tar", ".", "extractfile", "(", "'cifar-100-matlab/train.mat'", ")", ")", "\n", "train_set", "=", "{", "'images'", ":", "data_dict", "[", "'data'", "]", ",", "\n", "'labels'", ":", "data_dict", "[", "'fine_labels'", "]", ".", "flatten", "(", ")", "}", "\n", "data_dict", "=", "scipy", ".", "io", ".", "loadmat", "(", "tar", ".", "extractfile", "(", "'cifar-100-matlab/test.mat'", ")", ")", "\n", "test_set", "=", "{", "'images'", ":", "data_dict", "[", "'data'", "]", ",", "\n", "'labels'", ":", "data_dict", "[", "'fine_labels'", "]", ".", "flatten", "(", ")", "}", "\n", "", "train_set", "[", "'images'", "]", "=", "_encode_png", "(", "unflatten", "(", "train_set", "[", "'images'", "]", ")", ")", "\n", "test_set", "[", "'images'", "]", "=", "_encode_png", "(", "unflatten", "(", "test_set", "[", "'images'", "]", ")", ")", "\n", "return", "dict", "(", "train", "=", "train_set", ",", "test", "=", "test_set", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._load_domainnet": [[128, 156], ["os.path.join", "os.makedirs", "zip", "zipfile.ZipFile", "tqdm.tqdm", "numpy.random.seed", "numpy.random.shuffle", "dict", "os.path.join", "zipfile.ZipFile.infolist", "info.is_dir", "os.path.exists", "print", "urllib.request.urlretrieve", "int", "int", "zipfile.ZipFile.open", "numpy.array", "objax.util.image.to_png", "dict", "dict", "dict", "np.array.split", "np.array.split", "create_datasets._image_resize", "open().readlines", "open().readlines", "PIL.Image.open", "numpy.array", "numpy.array", "numpy.array", "open", "open"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._image_resize"], ["", "def", "_load_domainnet", "(", "domain", ":", "str", ",", "size", ":", "int", ")", "->", "dict", ":", "\n", "    ", "assert", "domain", "in", "(", "'clipart'", ",", "'infograph'", ",", "'painting'", ",", "'quickdraw'", ",", "'real'", ",", "'sketch'", ")", "\n", "path", "=", "os", ".", "path", ".", "join", "(", "DOWNLOAD_DIR", ",", "'DomainNet'", ")", "\n", "os", ".", "makedirs", "(", "path", ",", "exist_ok", "=", "True", ")", "\n", "prefixes", "=", "''", ",", "'txt/'", ",", "'txt/'", "\n", "suffixes", "=", "'.zip'", ",", "'_train.txt'", ",", "'_test.txt'", "\n", "files", "=", "[", "os", ".", "path", ".", "join", "(", "path", ",", "f'{domain}{suffix}'", ")", "for", "suffix", "in", "suffixes", "]", "\n", "for", "f", ",", "prefix", ",", "suffix", "in", "zip", "(", "files", ",", "prefixes", ",", "suffixes", ")", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "f", ")", ":", "\n", "            ", "print", "(", "f'Downloading {URLS[\"domainnet\"][domain] % (prefix, suffix)}'", ")", "\n", "request", ".", "urlretrieve", "(", "URLS", "[", "'domainnet'", "]", "[", "domain", "]", "%", "(", "prefix", ",", "suffix", ")", ",", "f", ")", "\n", "\n", "", "", "train", "=", "[", "(", "k", ",", "int", "(", "v", ")", ")", "for", "k", ",", "v", "in", "[", "x", ".", "split", "(", ")", "for", "x", "in", "open", "(", "files", "[", "1", "]", ",", "'r'", ")", ".", "readlines", "(", ")", "]", "]", "\n", "test", "=", "[", "(", "k", ",", "int", "(", "v", ")", ")", "for", "k", ",", "v", "in", "[", "x", ".", "split", "(", ")", "for", "x", "in", "open", "(", "files", "[", "2", "]", ",", "'r'", ")", ".", "readlines", "(", ")", "]", "]", "\n", "zipped", "=", "zipfile", ".", "ZipFile", "(", "files", "[", "0", "]", ")", "\n", "image", "=", "{", "}", "\n", "for", "info", "in", "tqdm", "(", "zipped", ".", "infolist", "(", ")", ",", "'Resizing images'", ",", "leave", "=", "False", ")", ":", "\n", "        ", "if", "info", ".", "is_dir", "(", ")", ":", "\n", "            ", "continue", "\n", "", "with", "zipped", ".", "open", "(", "info", ")", "as", "f", ":", "\n", "            ", "x", "=", "np", ".", "array", "(", "_image_resize", "(", "Image", ".", "open", "(", "f", ")", ",", "size", ")", ")", "\n", "image", "[", "info", ".", "filename", "]", "=", "to_png", "(", "x", ")", "\n", "\n", "", "", "np", ".", "random", ".", "seed", "(", "0", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "train", ")", "\n", "return", "dict", "(", "all", "=", "dict", "(", "images", "=", "[", "image", "[", "k", "]", "for", "k", ",", "_", "in", "train", "+", "test", "]", ",", "labels", "=", "np", ".", "array", "(", "[", "v", "for", "_", ",", "v", "in", "train", "+", "test", "]", ")", ")", ",", "\n", "test", "=", "dict", "(", "images", "=", "[", "image", "[", "k", "]", "for", "k", ",", "_", "in", "test", "]", ",", "labels", "=", "np", ".", "array", "(", "[", "v", "for", "_", ",", "v", "in", "test", "]", ")", ")", ",", "\n", "train", "=", "dict", "(", "images", "=", "[", "image", "[", "k", "]", "for", "k", ",", "_", "in", "train", "]", ",", "labels", "=", "np", ".", "array", "(", "[", "v", "for", "_", ",", "v", "in", "train", "]", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._load_mnist": [[158, 183], ["tempfile.NamedTemporaryFile", "URLS[].format", "print", "urllib.request.urlretrieve", "tempfile.NamedTemporaryFile", "urllib.request.urlretrieve", "create_datasets._encode_png", "image_filename.format", "gzip.GzipFile", "create_datasets._read32", "create_datasets._read32", "create_datasets._read32", "numpy.frombuffer", "images.reshape.reshape", "URLS[].format", "gzip.GzipFile", "create_datasets._read32", "numpy.frombuffer", "create_datasets._read32", "data.read", "label_filename.format", "create_datasets._read32", "data.read"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._encode_png", "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._read32", "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._read32", "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._read32", "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._read32", "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._read32", "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._read32"], ["", "def", "_load_mnist", "(", ")", ":", "\n", "    ", "image_filename", "=", "'{}-images-idx3-ubyte.gz'", "\n", "label_filename", "=", "'{}-labels-idx1-ubyte.gz'", "\n", "split_files", "=", "[", "(", "'train'", ",", "'train'", ")", ",", "(", "'test'", ",", "'t10k'", ")", "]", "\n", "splits", "=", "{", "}", "\n", "for", "split", ",", "split_file", "in", "split_files", ":", "\n", "        ", "with", "tempfile", ".", "NamedTemporaryFile", "(", ")", "as", "f", ":", "\n", "            ", "url", "=", "URLS", "[", "'mnist'", "]", ".", "format", "(", "image_filename", ".", "format", "(", "split_file", ")", ")", "\n", "print", "(", "url", ")", "\n", "request", ".", "urlretrieve", "(", "url", ",", "f", ".", "name", ")", "\n", "with", "gzip", ".", "GzipFile", "(", "fileobj", "=", "f", ",", "mode", "=", "'r'", ")", "as", "data", ":", "\n", "                ", "assert", "_read32", "(", "data", ")", "==", "2051", "\n", "n_images", "=", "_read32", "(", "data", ")", "\n", "row", "=", "_read32", "(", "data", ")", "\n", "col", "=", "_read32", "(", "data", ")", "\n", "images", "=", "np", ".", "frombuffer", "(", "data", ".", "read", "(", "n_images", "*", "row", "*", "col", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "images", "=", "images", ".", "reshape", "(", "(", "n_images", ",", "row", ",", "col", ",", "1", ")", ")", "\n", "", "", "with", "tempfile", ".", "NamedTemporaryFile", "(", ")", "as", "f", ":", "\n", "            ", "request", ".", "urlretrieve", "(", "URLS", "[", "'mnist'", "]", ".", "format", "(", "label_filename", ".", "format", "(", "split_file", ")", ")", ",", "f", ".", "name", ")", "\n", "with", "gzip", ".", "GzipFile", "(", "fileobj", "=", "f", ",", "mode", "=", "'r'", ")", "as", "data", ":", "\n", "                ", "assert", "_read32", "(", "data", ")", "==", "2049", "\n", "n_labels", "=", "_read32", "(", "data", ")", "\n", "labels", "=", "np", ".", "frombuffer", "(", "data", ".", "read", "(", "n_labels", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "", "", "splits", "[", "split", "]", "=", "{", "'images'", ":", "_encode_png", "(", "images", ")", ",", "'labels'", ":", "labels", "}", "\n", "", "return", "splits", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._load_mnist32": [[185, 216], ["tempfile.NamedTemporaryFile", "URLS[].format", "print", "urllib.request.urlretrieve", "tempfile.NamedTemporaryFile", "urllib.request.urlretrieve", "create_datasets._encode_png", "image_filename.format", "gzip.GzipFile", "create_datasets._read32", "create_datasets._read32", "create_datasets._read32", "numpy.frombuffer", "images.reshape.reshape", "numpy.zeros().astype", "URLS[].format", "gzip.GzipFile", "create_datasets._read32", "numpy.frombuffer", "create_datasets._read32", "data.read", "label_filename.format", "create_datasets._read32", "data.read", "numpy.zeros"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._encode_png", "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._read32", "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._read32", "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._read32", "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._read32", "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._read32", "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._read32"], ["", "def", "_load_mnist32", "(", ")", ":", "\n", "    ", "image_filename", "=", "'{}-images-idx3-ubyte.gz'", "\n", "label_filename", "=", "'{}-labels-idx1-ubyte.gz'", "\n", "split_files", "=", "[", "(", "'train'", ",", "'train'", ")", ",", "(", "'test'", ",", "'t10k'", ")", "]", "\n", "splits", "=", "{", "}", "\n", "for", "split", ",", "split_file", "in", "split_files", ":", "\n", "        ", "with", "tempfile", ".", "NamedTemporaryFile", "(", ")", "as", "f", ":", "\n", "            ", "url", "=", "URLS", "[", "'mnist'", "]", ".", "format", "(", "image_filename", ".", "format", "(", "split_file", ")", ")", "\n", "print", "(", "url", ")", "\n", "request", ".", "urlretrieve", "(", "url", ",", "f", ".", "name", ")", "\n", "with", "gzip", ".", "GzipFile", "(", "fileobj", "=", "f", ",", "mode", "=", "'r'", ")", "as", "data", ":", "\n", "                ", "assert", "_read32", "(", "data", ")", "==", "2051", "\n", "n_images", "=", "_read32", "(", "data", ")", "\n", "row", "=", "_read32", "(", "data", ")", "\n", "col", "=", "_read32", "(", "data", ")", "\n", "images", "=", "np", ".", "frombuffer", "(", "data", ".", "read", "(", "n_images", "*", "row", "*", "col", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "images", "=", "images", ".", "reshape", "(", "(", "n_images", ",", "row", ",", "col", ",", "1", ")", ")", "\n", "# Pad 2x2 so that it becomes 32x32", "\n", "images_pad", "=", "np", ".", "zeros", "(", "(", "images", ".", "shape", "[", "0", "]", ",", "\n", "images", ".", "shape", "[", "1", "]", "+", "4", ",", "\n", "images", ".", "shape", "[", "2", "]", "+", "4", ",", "\n", "images", ".", "shape", "[", "3", "]", ")", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "images_pad", "[", ":", ",", "2", ":", "-", "2", ",", "2", ":", "-", "2", ",", ":", "]", "=", "images", "\n", "", "", "with", "tempfile", ".", "NamedTemporaryFile", "(", ")", "as", "f", ":", "\n", "            ", "request", ".", "urlretrieve", "(", "URLS", "[", "'mnist'", "]", ".", "format", "(", "label_filename", ".", "format", "(", "split_file", ")", ")", ",", "f", ".", "name", ")", "\n", "with", "gzip", ".", "GzipFile", "(", "fileobj", "=", "f", ",", "mode", "=", "'r'", ")", "as", "data", ":", "\n", "                ", "assert", "_read32", "(", "data", ")", "==", "2049", "\n", "n_labels", "=", "_read32", "(", "data", ")", "\n", "labels", "=", "np", ".", "frombuffer", "(", "data", ".", "read", "(", "n_labels", ")", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "", "", "splits", "[", "split", "]", "=", "{", "'images'", ":", "_encode_png", "(", "images_pad", ")", ",", "'labels'", ":", "labels", "}", "\n", "", "return", "splits", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._load_mnistm": [[218, 235], ["tempfile.NamedTemporaryFile", "urllib.request.urlretrieve", "tarfile.open", "tarfile.open.extractfile().readlines", "tqdm.tqdm", "numpy.stack", "np.stack.append", "labels.append", "create_datasets._encode_png", "tarfile.open.extractfile", "numpy.array", "int", "PIL.Image.open", "[].decode", "tarfile.open.extractfile", "os.path.join", "[].decode", "img_path.split", "img_path.split"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._encode_png"], ["", "def", "_load_mnistm", "(", ")", ":", "\n", "    ", "with", "tempfile", ".", "NamedTemporaryFile", "(", ")", "as", "f", ":", "\n", "        ", "request", ".", "urlretrieve", "(", "URLS", "[", "'mnistm'", "]", ",", "f", ".", "name", ")", "\n", "tar", "=", "tarfile", ".", "open", "(", "fileobj", "=", "f", ")", "\n", "splits", "=", "{", "}", "\n", "for", "split", "in", "[", "'train'", ",", "'test'", "]", ":", "\n", "            ", "prefix", "=", "f'mnist_m/mnist_m_{split}'", "\n", "img_list", "=", "tar", ".", "extractfile", "(", "f'{prefix}_labels.txt'", ")", ".", "readlines", "(", ")", "\n", "images", "=", "[", "]", "\n", "labels", "=", "[", "]", "\n", "for", "img_path", "in", "tqdm", "(", "img_list", ",", "f'Loading mnistm {split} images and labels'", ",", "leave", "=", "False", ")", ":", "\n", "                ", "images", ".", "append", "(", "np", ".", "array", "(", "Image", ".", "open", "(", "tar", ".", "extractfile", "(", "os", ".", "path", ".", "join", "(", "\n", "prefix", ",", "img_path", ".", "split", "(", ")", "[", "0", "]", ".", "decode", "(", "'utf-8'", ")", ")", ")", ")", ")", ")", "\n", "labels", ".", "append", "(", "int", "(", "img_path", ".", "split", "(", ")", "[", "1", "]", ".", "decode", "(", "'utf-8'", ")", ")", ")", "\n", "", "images", "=", "np", ".", "stack", "(", "images", ",", "axis", "=", "0", ")", "\n", "splits", "[", "split", "]", "=", "{", "'images'", ":", "_encode_png", "(", "images", ")", ",", "'labels'", ":", "labels", "}", "\n", "", "", "return", "splits", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._load_syndigit": [[237, 248], ["scipy.io.loadmat", "numpy.transpose", "data_dict[].flatten", "os.path.exists", "wget.download", "create_datasets._encode_png", "URLS[].format"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._encode_png"], ["", "def", "_load_syndigit", "(", ")", ":", "\n", "    ", "splits", "=", "{", "}", "\n", "for", "split", "in", "[", "'train'", ",", "'test'", "]", ":", "\n", "        ", "filename", "=", "'synth_{}_32x32.mat'", ".", "format", "(", "split", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "filename", ")", ":", "\n", "            ", "wget", ".", "download", "(", "URLS", "[", "'syndigit'", "]", ".", "format", "(", "split", ")", ",", "out", "=", "filename", ")", "\n", "", "data_dict", "=", "scipy", ".", "io", ".", "loadmat", "(", "filename", ")", "\n", "images", "=", "np", ".", "transpose", "(", "data_dict", "[", "'X'", "]", ",", "(", "3", ",", "0", ",", "1", ",", "2", ")", ")", "\n", "labels", "=", "data_dict", "[", "'y'", "]", ".", "flatten", "(", ")", "\n", "splits", "[", "split", "]", "=", "{", "'images'", ":", "_encode_png", "(", "images", ")", ",", "'labels'", ":", "labels", "}", "\n", "", "return", "splits", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._load_usps": [[249, 281], ["create_datasets._load_usps._hdf5"], "function", ["None"], ["", "def", "_load_usps", "(", ")", ":", "\n", "    ", "def", "_hdf5", "(", "path", ",", "data_key", "=", "\"data\"", ",", "target_key", "=", "\"target\"", ",", "flatten", "=", "True", ")", ":", "\n", "        ", "\"\"\"\n            loads data from hdf5:\n            - hdf5 should have 'train' and 'test' groups\n            - each group should have 'data' and 'target' dataset or spcify the key\n            - flatten means to flatten images N * (C * H * W) as N * D array\n            code from: https://www.kaggle.com/bistaumanga/usps-getting-started?scriptVersionId=3215146&cellId=3\n        \"\"\"", "\n", "with", "h5py", ".", "File", "(", "path", ",", "'r'", ")", "as", "hf", ":", "\n", "            ", "train", "=", "hf", ".", "get", "(", "'train'", ")", "\n", "X_tr", "=", "train", ".", "get", "(", "data_key", ")", "[", ":", "]", "\n", "y_tr", "=", "train", ".", "get", "(", "target_key", ")", "[", ":", "]", "\n", "test", "=", "hf", ".", "get", "(", "'test'", ")", "\n", "X_te", "=", "test", ".", "get", "(", "data_key", ")", "[", ":", "]", "\n", "y_te", "=", "test", ".", "get", "(", "target_key", ")", "[", ":", "]", "\n", "if", "flatten", ":", "\n", "                ", "X_tr", "=", "X_tr", ".", "reshape", "(", "X_tr", ".", "shape", "[", "0", "]", ",", "reduce", "(", "lambda", "a", ",", "b", ":", "a", "*", "b", ",", "X_tr", ".", "shape", "[", "1", ":", "]", ")", ")", "\n", "X_te", "=", "X_te", ".", "reshape", "(", "X_te", ".", "shape", "[", "0", "]", ",", "reduce", "(", "lambda", "a", ",", "b", ":", "a", "*", "b", ",", "X_te", ".", "shape", "[", "1", ":", "]", ")", ")", "\n", "", "", "return", "X_tr", ",", "y_tr", ",", "X_te", ",", "y_te", "\n", "\n", "", "filename", "=", "'usps.h5'", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "filename", ")", ":", "\n", "        ", "wget", ".", "download", "(", "URLS", "[", "'usps'", "]", ",", "out", "=", "filename", ")", "\n", "", "X_tr", ",", "y_tr", ",", "X_te", ",", "y_te", "=", "_hdf5", "(", "filename", ")", "\n", "X_tr", "=", "np", ".", "concatenate", "(", "[", "(", "255.0", "*", "X_tr", ")", ".", "astype", "(", "np", ".", "uint8", ")", ".", "reshape", "(", "-", "1", ",", "16", ",", "16", ",", "1", ")", "]", "*", "3", ",", "axis", "=", "-", "1", ")", "\n", "X_tr", "=", "np", ".", "stack", "(", "[", "np", ".", "array", "(", "_image_resize", "(", "Image", ".", "fromarray", "(", "x", ")", ",", "32", ")", ")", "for", "x", "in", "X_tr", "]", ",", "axis", "=", "0", ")", "\n", "X_te", "=", "np", ".", "concatenate", "(", "[", "(", "255.0", "*", "X_te", ")", ".", "astype", "(", "np", ".", "uint8", ")", ".", "reshape", "(", "-", "1", ",", "16", ",", "16", ",", "1", ")", "]", "*", "3", ",", "axis", "=", "-", "1", ")", "\n", "X_te", "=", "np", ".", "stack", "(", "[", "np", ".", "array", "(", "_image_resize", "(", "Image", ".", "fromarray", "(", "x", ")", ",", "32", ")", ")", "for", "x", "in", "X_te", "]", ",", "axis", "=", "0", ")", "\n", "splits", "=", "{", "'train'", ":", "{", "'images'", ":", "_encode_png", "(", "X_tr", ")", ",", "'labels'", ":", "y_tr", "}", ",", "\n", "'test'", ":", "{", "'images'", ":", "_encode_png", "(", "X_te", ")", ",", "'labels'", ":", "y_te", "}", "}", "\n", "return", "splits", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._load_digitfive": [[283, 296], ["create_datasets._load_mnist32", "create_datasets._load_svhn", "create_datasets._load_usps", "create_datasets._load_mnistm", "create_datasets._load_syndigit"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._load_mnist32", "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._load_svhn", "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._load_usps", "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._load_mnistm", "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._load_syndigit"], ["", "def", "_load_digitfive", "(", "domain", ":", "str", ",", "size", ":", "int", ")", "->", "dict", ":", "\n", "    ", "assert", "size", "==", "32", "\n", "assert", "domain", "in", "'mnist svhn usps mnistm syndigit'", ".", "split", "(", ")", "\n", "if", "domain", "==", "'mnist'", ":", "\n", "        ", "return", "_load_mnist32", "(", ")", "\n", "", "elif", "domain", "==", "'svhn'", ":", "\n", "        ", "return", "_load_svhn", "(", ")", "\n", "", "elif", "domain", "==", "'usps'", ":", "\n", "        ", "return", "_load_usps", "(", ")", "\n", "", "elif", "domain", "==", "'mnistm'", ":", "\n", "        ", "return", "_load_mnistm", "(", ")", "\n", "", "elif", "domain", "==", "'syndigit'", ":", "\n", "        ", "return", "_load_syndigit", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._load_office31": [[298, 346], ["os.path.join", "collections.defaultdict", "dict", "os.path.exists", "google_drive_downloader.GoogleDriveDownloader.download_file_from_google_drive", "tarfile.open", "tar.getmembers", "numpy.random.seed", "collections.defaultdict.keys", "tqdm.tqdm", "tqdm.tqdm", "open().read", "os.remove", "FileNotFoundError", "entry.name.split", "numpy.random.shuffle", "len", "int", "set", "train_images.append", "train_labels.append", "train_label_set.add", "set", "test_images.append", "test_labels.append", "test_label_set.add", "dict", "dict", "data[].append", "numpy.array", "enumerate", "numpy.array", "enumerate", "open", "len", "len", "create_datasets._image_resize", "sorted", "create_datasets._image_resize", "sorted", "create_datasets._encode_png", "numpy.array", "create_datasets._encode_png", "numpy.array", "PIL.Image.open", "PIL.Image.open", "numpy.stack", "numpy.stack", "tar.extractfile", "tar.extractfile"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._image_resize", "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._image_resize", "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._encode_png", "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._encode_png"], ["", "", "def", "_load_office31", "(", "domain", ":", "str", ",", "size", ":", "int", ")", "->", "dict", ":", "\n", "    ", "assert", "domain", "in", "'amazon dslr webcam'", ".", "split", "(", ")", "\n", "path", "=", "os", ".", "path", ".", "join", "(", "DOWNLOAD_DIR", ",", "'office31_images.tgz'", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "\n", "        ", "gdd", ".", "download_file_from_google_drive", "(", "file_id", "=", "URLS", "[", "'office31'", "]", "[", "'images'", "]", ",", "dest_path", "=", "path", ",", "overwrite", "=", "True", ")", "\n", "if", "b'Quota exceeded'", "in", "open", "(", "path", ",", "'rb'", ")", ".", "read", "(", "1024", ")", ":", "\n", "            ", "os", ".", "remove", "(", "path", ")", "\n", "raise", "FileNotFoundError", "(", "'Quota exceeded: File office31_images.tgz for Office31 could not be downloaded from'", "\n", "' Google drive. Try again later.'", ")", "\n", "", "", "data", "=", "collections", ".", "defaultdict", "(", "list", ")", "\n", "with", "tarfile", ".", "open", "(", "name", "=", "path", ",", "mode", "=", "'r:gz'", ")", "as", "tar", ":", "\n", "        ", "for", "entry", "in", "tar", ".", "getmembers", "(", ")", ":", "\n", "            ", "domain_", ",", "_", ",", "class_", ",", "name", "=", "entry", ".", "name", ".", "split", "(", "'/'", ")", "\n", "if", "domain", "==", "domain_", ":", "\n", "                ", "data", "[", "class_", "]", ".", "append", "(", "(", "class_", ",", "name", ",", "entry", ")", ")", "\n", "\n", "", "", "np", ".", "random", ".", "seed", "(", "0", ")", "\n", "train", ",", "test", "=", "[", "]", ",", "[", "]", "\n", "for", "class_", "in", "data", ".", "keys", "(", ")", ":", "\n", "            ", "np", ".", "random", ".", "shuffle", "(", "data", "[", "class_", "]", ")", "\n", "total_num_frames", "=", "len", "(", "data", "[", "class_", "]", ")", "\n", "num_train_frames", "=", "int", "(", "0.8", "*", "total_num_frames", ")", "\n", "train_frames", "=", "data", "[", "class_", "]", "[", ":", "num_train_frames", "]", "\n", "test_frames", "=", "data", "[", "class_", "]", "[", "num_train_frames", ":", "]", "\n", "assert", "len", "(", "train_frames", ")", "+", "len", "(", "test_frames", ")", "==", "total_num_frames", "\n", "train", "+=", "train_frames", "\n", "test", "+=", "test_frames", "\n", "\n", "", "train_images", ",", "train_labels", ",", "train_label_set", "=", "[", "]", ",", "[", "]", ",", "set", "(", ")", "\n", "for", "class_", ",", "name", ",", "entry", "in", "tqdm", "(", "train", ",", "leave", "=", "False", ",", "desc", "=", "'Resizing train images'", ")", ":", "\n", "            ", "train_images", ".", "append", "(", "np", ".", "array", "(", "_image_resize", "(", "Image", ".", "open", "(", "tar", ".", "extractfile", "(", "entry", ")", ")", ",", "size", ")", ")", ")", "\n", "assert", "train_images", "[", "-", "1", "]", ".", "shape", "==", "(", "size", ",", "size", ",", "3", ")", "\n", "train_labels", ".", "append", "(", "class_", ")", "\n", "train_label_set", ".", "add", "(", "class_", ")", "\n", "", "train_label_id", "=", "{", "x", ":", "p", "for", "p", ",", "x", "in", "enumerate", "(", "sorted", "(", "train_label_set", ")", ")", "}", "\n", "\n", "test_images", ",", "test_labels", ",", "test_label_set", "=", "[", "]", ",", "[", "]", ",", "set", "(", ")", "\n", "for", "class_", ",", "name", ",", "entry", "in", "tqdm", "(", "test", ",", "leave", "=", "False", ",", "desc", "=", "'Resizing train images'", ")", ":", "\n", "            ", "test_images", ".", "append", "(", "np", ".", "array", "(", "_image_resize", "(", "Image", ".", "open", "(", "tar", ".", "extractfile", "(", "entry", ")", ")", ",", "size", ")", ")", ")", "\n", "assert", "test_images", "[", "-", "1", "]", ".", "shape", "==", "(", "size", ",", "size", ",", "3", ")", "\n", "test_labels", ".", "append", "(", "class_", ")", "\n", "test_label_set", ".", "add", "(", "class_", ")", "\n", "", "test_label_id", "=", "{", "x", ":", "p", "for", "p", ",", "x", "in", "enumerate", "(", "sorted", "(", "test_label_set", ")", ")", "}", "\n", "\n", "", "return", "dict", "(", "train", "=", "dict", "(", "images", "=", "_encode_png", "(", "np", ".", "stack", "(", "train_images", ")", ")", ",", "\n", "labels", "=", "np", ".", "array", "(", "[", "train_label_id", "[", "x", "]", "for", "x", "in", "train_labels", "]", ",", "'int32'", ")", ")", ",", "\n", "test", "=", "dict", "(", "images", "=", "_encode_png", "(", "np", ".", "stack", "(", "test_images", ")", ")", ",", "\n", "labels", "=", "np", ".", "array", "(", "[", "test_label_id", "[", "x", "]", "for", "x", "in", "test_labels", "]", ",", "'int32'", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._load_svhn": [[348, 362], ["collections.OrderedDict", "numpy.transpose", "create_datasets._encode_png", "data_dict[].reshape", "tempfile.NamedTemporaryFile", "urllib.request.urlretrieve", "scipy.io.loadmat", "URLS[].format"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._encode_png"], ["", "def", "_load_svhn", "(", ")", ":", "\n", "    ", "splits", "=", "collections", ".", "OrderedDict", "(", ")", "\n", "for", "split", "in", "[", "'train'", ",", "'test'", ",", "'extra'", "]", ":", "\n", "        ", "with", "tempfile", ".", "NamedTemporaryFile", "(", ")", "as", "f", ":", "\n", "            ", "request", ".", "urlretrieve", "(", "URLS", "[", "'svhn'", "]", ".", "format", "(", "split", ")", ",", "f", ".", "name", ")", "\n", "data_dict", "=", "scipy", ".", "io", ".", "loadmat", "(", "f", ".", "name", ")", "\n", "", "dataset", "=", "{", "}", "\n", "dataset", "[", "'images'", "]", "=", "np", ".", "transpose", "(", "data_dict", "[", "'X'", "]", ",", "[", "3", ",", "0", ",", "1", ",", "2", "]", ")", "\n", "dataset", "[", "'images'", "]", "=", "_encode_png", "(", "dataset", "[", "'images'", "]", ")", "\n", "dataset", "[", "'labels'", "]", "=", "data_dict", "[", "'y'", "]", ".", "reshape", "(", "(", "-", "1", ")", ")", "\n", "# SVHN raw data uses labels from 1 to 10; use 0 to 9 instead.", "\n", "dataset", "[", "'labels'", "]", "%=", "10", "# Label number 10 is for 0.", "\n", "splits", "[", "split", "]", "=", "dataset", "\n", "", "return", "splits", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._read32": [[364, 367], ["numpy.dtype().newbyteorder", "numpy.frombuffer", "numpy.dtype", "data.read"], "function", ["None"], ["", "def", "_read32", "(", "data", ")", ":", "\n", "    ", "dt", "=", "np", ".", "dtype", "(", "np", ".", "uint32", ")", ".", "newbyteorder", "(", "'>'", ")", "\n", "return", "np", ".", "frombuffer", "(", "data", ".", "read", "(", "4", ")", ",", "dtype", "=", "dt", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._int64_feature": [[369, 371], ["tensorflow.train.Feature", "tensorflow.train.Int64List"], "function", ["None"], ["", "def", "_int64_feature", "(", "value", ")", ":", "\n", "    ", "return", "tf", ".", "train", ".", "Feature", "(", "int64_list", "=", "tf", ".", "train", ".", "Int64List", "(", "value", "=", "[", "value", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._bytes_feature": [[373, 375], ["tensorflow.train.Feature", "tensorflow.train.BytesList"], "function", ["None"], ["", "def", "_bytes_feature", "(", "value", ")", ":", "\n", "    ", "return", "tf", ".", "train", ".", "Feature", "(", "bytes_list", "=", "tf", ".", "train", ".", "BytesList", "(", "value", "=", "[", "value", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._save_as_tfrecord": [[377, 388], ["os.path.join", "print", "print", "len", "len", "tensorflow.io.TFRecordWriter", "tqdm.trange", "len", "dict", "tensorflow.train.Example", "writer.write", "tf.train.Example.SerializeToString", "create_datasets._bytes_feature", "create_datasets._int64_feature", "tensorflow.train.Features"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._bytes_feature", "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._int64_feature"], ["", "def", "_save_as_tfrecord", "(", "data", ",", "filename", ")", ":", "\n", "    ", "assert", "len", "(", "data", "[", "'images'", "]", ")", "==", "len", "(", "data", "[", "'labels'", "]", ")", "\n", "filename", "=", "os", ".", "path", ".", "join", "(", "libml_data", ".", "DATA_DIR", ",", "filename", "+", "'.tfrecord'", ")", "\n", "print", "(", "'Saving dataset:'", ",", "filename", ")", "\n", "with", "tf", ".", "io", ".", "TFRecordWriter", "(", "filename", ")", "as", "writer", ":", "\n", "        ", "for", "x", "in", "trange", "(", "len", "(", "data", "[", "'images'", "]", ")", ",", "desc", "=", "'Building records'", ")", ":", "\n", "            ", "feat", "=", "dict", "(", "image", "=", "_bytes_feature", "(", "data", "[", "'images'", "]", "[", "x", "]", ")", ",", "\n", "label", "=", "_int64_feature", "(", "data", "[", "'labels'", "]", "[", "x", "]", ")", ")", "\n", "record", "=", "tf", ".", "train", ".", "Example", "(", "features", "=", "tf", ".", "train", ".", "Features", "(", "feature", "=", "feat", ")", ")", "\n", "writer", ".", "write", "(", "record", ".", "SerializeToString", "(", ")", ")", "\n", "", "", "print", "(", "'Saved:'", ",", "filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._is_installed": [[390, 396], ["checksums.items", "os.path.join", "tensorflow.io.gfile.exists"], "function", ["None"], ["", "def", "_is_installed", "(", "name", ",", "checksums", ")", ":", "\n", "    ", "for", "subset", ",", "checksum", "in", "checksums", ".", "items", "(", ")", ":", "\n", "        ", "filename", "=", "os", ".", "path", ".", "join", "(", "libml_data", ".", "DATA_DIR", ",", "'%s-%s.tfrecord'", "%", "(", "name", ",", "subset", ")", ")", "\n", "if", "not", "tf", ".", "io", ".", "gfile", ".", "exists", "(", "filename", ")", ":", "\n", "            ", "return", "False", "\n", "", "", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._save_files": [[398, 405], ["frozenset", "files.items", "tensorflow.io.gfile.makedirs", "os.path.dirname", "os.path.join", "tensorflow.io.gfile.GFile", "f.write", "os.path.join"], "function", ["None"], ["", "def", "_save_files", "(", "files", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "    ", "del", "args", ",", "kwargs", "\n", "for", "folder", "in", "frozenset", "(", "os", ".", "path", ".", "dirname", "(", "x", ")", "for", "x", "in", "files", ")", ":", "\n", "        ", "tf", ".", "io", ".", "gfile", ".", "makedirs", "(", "os", ".", "path", ".", "join", "(", "libml_data", ".", "DATA_DIR", ",", "folder", ")", ")", "\n", "", "for", "filename", ",", "contents", "in", "files", ".", "items", "(", ")", ":", "\n", "        ", "with", "tf", ".", "io", ".", "gfile", ".", "GFile", "(", "os", ".", "path", ".", "join", "(", "libml_data", ".", "DATA_DIR", ",", "filename", ")", ",", "'w'", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "contents", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._is_installed_folder": [[407, 409], ["tensorflow.io.gfile.exists", "os.path.join"], "function", ["None"], ["", "", "", "def", "_is_installed_folder", "(", "name", ",", "folder", ")", ":", "\n", "    ", "return", "tf", ".", "io", ".", "gfile", ".", "exists", "(", "os", ".", "path", ".", "join", "(", "libml_data", ".", "DATA_DIR", ",", "name", ",", "folder", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets.main": [[434, 467], ["len", "tensorflow.io.gfile.makedirs", "CONFIGS.items", "set", "set", "print", "config.get", "datas.items", "CONFIGS.keys", "create_datasets._is_installed", "print", "print", "os.path.join", "tensorflow.io.gfile.GFile", "f.write", "config.get.", "os.path.join", "tensorflow.io.gfile.GFile", "f.write"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.scripts.create_datasets._is_installed"], ["def", "main", "(", "argv", ")", ":", "\n", "    ", "if", "len", "(", "argv", "[", "1", ":", "]", ")", ":", "\n", "        ", "subset", "=", "set", "(", "argv", "[", "1", ":", "]", ")", "\n", "", "else", ":", "\n", "        ", "subset", "=", "set", "(", "CONFIGS", ".", "keys", "(", ")", ")", "\n", "", "tf", ".", "io", ".", "gfile", ".", "makedirs", "(", "libml_data", ".", "DATA_DIR", ")", "\n", "for", "name", "in", "subset", ":", "\n", "        ", "assert", "name", "in", "CONFIGS", ",", "f'Dataset not recognized {name}'", "\n", "", "for", "name", ",", "config", "in", "CONFIGS", ".", "items", "(", ")", ":", "\n", "        ", "if", "name", "not", "in", "subset", ":", "\n", "            ", "continue", "\n", "", "if", "'is_installed'", "in", "config", ":", "\n", "            ", "if", "config", "[", "'is_installed'", "]", "(", ")", ":", "\n", "                ", "print", "(", "'Skipping already installed:'", ",", "name", ")", "\n", "continue", "\n", "", "", "elif", "_is_installed", "(", "name", ",", "config", "[", "'checksums'", "]", ")", ":", "\n", "            ", "print", "(", "'Skipping already installed:'", ",", "name", ")", "\n", "continue", "\n", "", "print", "(", "'Preparing'", ",", "name", ")", "\n", "datas", "=", "config", "[", "'loader'", "]", "(", ")", "\n", "saver", "=", "config", ".", "get", "(", "'saver'", ",", "_save_as_tfrecord", ")", "\n", "for", "sub_name", ",", "data", "in", "datas", ".", "items", "(", ")", ":", "\n", "            ", "if", "sub_name", "==", "'readme'", ":", "\n", "                ", "filename", "=", "os", ".", "path", ".", "join", "(", "libml_data", ".", "DATA_DIR", ",", "'%s-%s.txt'", "%", "(", "name", ",", "sub_name", ")", ")", "\n", "with", "tf", ".", "io", ".", "gfile", ".", "GFile", "(", "filename", ",", "'w'", ")", "as", "f", ":", "\n", "                    ", "f", ".", "write", "(", "data", ")", "\n", "", "", "elif", "sub_name", "==", "'files'", ":", "\n", "                ", "for", "file_and_data", "in", "data", ":", "\n", "                    ", "path", "=", "os", ".", "path", ".", "join", "(", "libml_data", ".", "DATA_DIR", ",", "file_and_data", ".", "filename", ")", "\n", "with", "tf", ".", "io", ".", "gfile", ".", "GFile", "(", "path", ",", "\"wb\"", ")", "as", "f", ":", "\n", "                        ", "f", ".", "write", "(", "file_and_data", ".", "data", ")", "\n", "", "", "", "else", ":", "\n", "                ", "saver", "(", "data", ",", "'%s-%s'", "%", "(", "name", ",", "sub_name", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.scripts.extract_accuracy.summary_dict": [[32, 35], ["numpy.median"], "function", ["None"], ["def", "summary_dict", "(", "accuracies", ")", ":", "\n", "    ", "return", "{", "\n", "'last%02d'", "%", "x", ":", "np", ".", "median", "(", "accuracies", "[", "-", "x", ":", "]", ")", "for", "x", "in", "[", "1", ",", "10", ",", "20", ",", "50", "]", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.scripts.extract_accuracy.main": [[38, 65], ["sorted", "set", "os.path.join", "os.path.join", "tensorflow.io.gfile.makedirs", "print", "len", "absl.app.UsageError", "tensorflow.io.gfile.glob", "tensorflow.io.gfile.GFile", "json.dump", "os.path.join", "tensorflow.compat.v1.train.summary_iterator", "extract_accuracy.summary_dict", "accuracies.append", "set.add"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.scripts.extract_accuracy.summary_dict"], ["", "def", "main", "(", "argv", ")", ":", "\n", "    ", "if", "len", "(", "argv", ")", ">", "3", ":", "\n", "        ", "raise", "app", ".", "UsageError", "(", "'Too many command-line arguments.'", ")", "\n", "", "matches", "=", "sorted", "(", "tf", ".", "io", ".", "gfile", ".", "glob", "(", "os", ".", "path", ".", "join", "(", "FLAGS", ".", "folder", ",", "'tb/events.out.tfevents.*'", ")", ")", ")", "\n", "assert", "matches", ",", "'No events files found'", "\n", "tags", "=", "set", "(", ")", "\n", "accuracies", "=", "[", "]", "\n", "for", "event_file", "in", "matches", ":", "\n", "        ", "try", ":", "\n", "            ", "for", "e", "in", "tf", ".", "compat", ".", "v1", ".", "train", ".", "summary_iterator", "(", "event_file", ")", ":", "\n", "                ", "for", "v", "in", "e", ".", "summary", ".", "value", ":", "\n", "                    ", "if", "v", ".", "tag", "==", "f'accuracy/{FLAGS.test}'", ":", "\n", "                        ", "accuracies", ".", "append", "(", "v", ".", "simple_value", ")", "\n", "break", "\n", "", "elif", "not", "accuracies", ":", "\n", "                        ", "tags", ".", "add", "(", "v", ".", "tag", ")", "\n", "", "", "", "", "except", "tf", ".", "errors", ".", "DataLossError", ":", "\n", "            ", "continue", "\n", "\n", "", "", "assert", "accuracies", ",", "'No \"%s\" tag found. Found tags = %s'", "%", "(", "f'accuracy/{FLAGS.test}'", ",", "tags", ")", "\n", "target_dir", "=", "os", ".", "path", ".", "join", "(", "FLAGS", ".", "folder", ",", "'stats'", ")", "\n", "target_file", "=", "os", ".", "path", ".", "join", "(", "target_dir", ",", "'accuracy.json'", ")", "\n", "tf", ".", "io", ".", "gfile", ".", "makedirs", "(", "target_dir", ")", "\n", "\n", "with", "tf", ".", "io", ".", "gfile", ".", "GFile", "(", "target_file", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "json", ".", "dump", "(", "summary_dict", "(", "accuracies", ")", ",", "f", ",", "sort_keys", "=", "True", ",", "indent", "=", "4", ")", "\n", "", "print", "(", "'Saved: %s'", "%", "target_file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.debug.show_images.save": [[19, 23], ["next", "open().write", "d[].numpy", "objax.util.image.to_png", "open", "d[].numpy().transpose", "d[].numpy"], "function", ["None"], ["def", "save", "(", "it", ",", "fn", "=", "'/tmp/delme.png'", ")", ":", "\n", "    ", "d", "=", "next", "(", "it", ")", "\n", "open", "(", "fn", ",", "'wb'", ")", ".", "write", "(", "objax", ".", "util", ".", "image", ".", "to_png", "(", "d", "[", "'image'", "]", ".", "numpy", "(", ")", ".", "transpose", "(", "(", "2", ",", "0", ",", "1", ")", ")", ")", ")", "\n", "return", "d", "[", "'label'", "]", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.noisy_student.NoisyStudent.__init__": [[39, 83], ["domain_adaptation.lib.train.TrainableDAModule.__init__", "model", "objax.optimizer.ExponentialMovingAverageModule", "absl.flags.FLAGS.arch.endswith", "noisy_student.NoisyStudent.model.vars", "objax.optimizer.Momentum", "shared.train.ScheduleCos", "objax.Function.with_vars", "objax.GradValues", "objax.Function.with_vars", "shared.util.MyParallel", "shared.util.MyParallel", "objax.Jit", "noisy_student.NoisyStudent.model_ema.update_ema", "objax.functional.softmax", "noisy_student.NoisyStudent.model_ema.vars", "noisy_student.NoisyStudent.model", "noisy_student.NoisyStudent.lr", "objax.GradValues.", "noisy_student.NoisyStudent.opt", "noisy_student.NoisyStudent.model_ema.update_ema", "noisy_student.NoisyStudent.vars", "noisy_student.NoisyStudent.model_ema", "sx.reshape", "sum", "noisy_student.NoisyStudent.__init__.eval_op"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.baseline.Baseline.__init__"], ["class", "NoisyStudent", "(", "TrainableSSLModule", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "nclass", ":", "int", ",", "model", ":", "Callable", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "nclass", ",", "kwargs", ")", "\n", "self", ".", "model", ":", "objax", ".", "Module", "=", "model", "(", "colors", "=", "3", ",", "nclass", "=", "nclass", ",", "**", "kwargs", ")", "\n", "self", ".", "model_ema", "=", "objax", ".", "optimizer", ".", "ExponentialMovingAverageModule", "(", "self", ".", "model", ",", "momentum", "=", "0.999", ")", "\n", "if", "FLAGS", ".", "arch", ".", "endswith", "(", "'pretrain'", ")", ":", "\n", "# Initialize weights of EMA with pretrained model's weights.", "\n", "            ", "self", ".", "model_ema", ".", "ema", ".", "momentum", "=", "0", "\n", "self", ".", "model_ema", ".", "update_ema", "(", ")", "\n", "self", ".", "model_ema", ".", "ema", ".", "momentum", "=", "0.999", "\n", "", "train_vars", "=", "self", ".", "model", ".", "vars", "(", ")", "\n", "self", ".", "opt", "=", "objax", ".", "optimizer", ".", "Momentum", "(", "train_vars", ")", "\n", "self", ".", "lr", "=", "ScheduleCos", "(", "self", ".", "params", ".", "lr", ",", "self", ".", "params", ".", "lr_decay", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "model_ema", ".", "vars", "(", ")", ")", "\n", "def", "eval_op", "(", "x", ":", "JaxArray", ")", "->", "JaxArray", ":", "\n", "            ", "return", "objax", ".", "functional", ".", "softmax", "(", "self", ".", "model_ema", "(", "x", ",", "training", "=", "False", ")", ")", "\n", "\n", "", "def", "loss_function", "(", "x", ",", "y", ")", ":", "\n", "            ", "c", ",", "h", ",", "w", "=", "x", ".", "shape", "[", "-", "3", ":", "]", "\n", "logit_x", "=", "self", ".", "model", "(", "x", ".", "reshape", "(", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", ")", ",", "training", "=", "True", ")", "\n", "logit_x_weak", ",", "logit_x_strong", "=", "logit_x", "[", ":", ":", "2", "]", ",", "logit_x", "[", "1", ":", ":", "2", "]", "\n", "xe", "=", "0.5", "*", "(", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_x_weak", ",", "y", ")", ".", "mean", "(", ")", "+", "\n", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_x_strong", ",", "y", ")", ".", "mean", "(", ")", ")", "\n", "wd", "=", "0.5", "*", "sum", "(", "(", "v", ".", "value", "**", "2", ")", ".", "sum", "(", ")", "for", "k", ",", "v", "in", "train_vars", ".", "items", "(", ")", "if", "k", ".", "endswith", "(", "'.w'", ")", ")", "\n", "\n", "loss", "=", "xe", "+", "self", ".", "params", ".", "wd", "*", "wd", "\n", "return", "loss", ",", "{", "'losses/xe'", ":", "xe", ",", "'losses/wd'", ":", "wd", "}", "\n", "\n", "", "gv", "=", "objax", ".", "GradValues", "(", "loss_function", ",", "train_vars", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "vars", "(", ")", ")", "\n", "def", "train_op", "(", "step", ",", "x", ",", "y", ",", "u", ",", "probe", "=", "None", ")", ":", "\n", "            ", "y_probe", "=", "eval_op", "(", "probe", ")", "if", "probe", "is", "not", "None", "else", "None", "\n", "p", "=", "step", "/", "(", "FLAGS", ".", "train_mimg", "<<", "20", ")", "\n", "lr", "=", "self", ".", "lr", "(", "p", ")", "\n", "g", ",", "v", "=", "gv", "(", "x", ",", "y", ")", "\n", "self", ".", "opt", "(", "lr", ",", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "g", ")", ")", "\n", "self", ".", "model_ema", ".", "update_ema", "(", ")", "\n", "return", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "{", "'monitors/lr'", ":", "lr", ",", "**", "v", "[", "1", "]", "}", ")", ",", "y_probe", "\n", "\n", "", "self", ".", "train_op", "=", "MyParallel", "(", "train_op", ",", "reduce", "=", "lambda", "x", ":", "x", ")", "\n", "self", ".", "eval_op", "=", "MyParallel", "(", "eval_op", ")", "\n", "# jit eval op used only for saving prediction files, avoids batch padding", "\n", "self", ".", "eval_op_jit", "=", "objax", ".", "Jit", "(", "eval_op", ")", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.noisy_student.PseudoLabeler.__init__": [[86, 92], ["open", "numpy.load", "noisy_student.PseudoLabeler.pseudo_label.max"], "methods", ["None"], ["", "", "class", "PseudoLabeler", "(", "AugmentPoolBase", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "data", ":", "AugmentPoolBase", ",", "pseudo_label_file", ":", "str", ",", "threshold", ":", "float", ",", "uratio", ":", "float", "=", "1", ")", ":", "\n", "        ", "with", "open", "(", "pseudo_label_file", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "self", ".", "pseudo_label", "=", "np", ".", "load", "(", "f", ")", "\n", "", "self", ".", "has_pseudo_label", "=", "self", ".", "pseudo_label", ".", "max", "(", "axis", "=", "1", ")", ">", "threshold", "\n", "self", ".", "data", "=", "data", "\n", "self", ".", "uratio", "=", "uratio", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.noisy_student.PseudoLabeler.stop": [[94, 96], ["noisy_student.PseudoLabeler.data.stop"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.noisy_student.PseudoLabeler.stop"], ["", "def", "stop", "(", "self", ")", ":", "\n", "        ", "self", ".", "data", ".", "stop", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.noisy_student.PseudoLabeler.__iter__": [[97, 114], ["enumerate", "enumerate", "numpy.random.shuffle", "batch.append", "len", "dict", "dict", "batch.append", "dict", "numpy.stack", "numpy.stack", "numpy.stack"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", "->", "dict", ":", "\n", "        ", "batch", "=", "[", "]", "\n", "batch_size", "=", "None", "\n", "for", "d", "in", "self", ".", "data", ":", "\n", "            ", "batch_size", "=", "batch_size", "or", "d", "[", "'x'", "]", "[", "'image'", "]", ".", "shape", "[", "0", "]", "\n", "for", "p", ",", "index", "in", "enumerate", "(", "d", "[", "'x'", "]", "[", "'index'", "]", ")", ":", "\n", "                ", "batch", ".", "append", "(", "dict", "(", "index", "=", "index", ",", "label", "=", "d", "[", "'x'", "]", "[", "'label'", "]", "[", "p", "]", ",", "image", "=", "d", "[", "'x'", "]", "[", "'image'", "]", "[", "p", "]", ")", ")", "\n", "", "for", "p", ",", "index", "in", "enumerate", "(", "d", "[", "'u'", "]", "[", "'index'", "]", ")", ":", "\n", "                ", "if", "self", ".", "has_pseudo_label", "[", "index", "]", ":", "\n", "                    ", "batch", ".", "append", "(", "dict", "(", "index", "=", "index", ",", "label", "=", "self", ".", "pseudo_label", "[", "index", "]", ",", "image", "=", "d", "[", "'u'", "]", "[", "'image'", "]", "[", "p", "]", ")", ")", "\n", "", "", "np", ".", "random", ".", "shuffle", "(", "batch", ")", "\n", "while", "len", "(", "batch", ")", ">=", "batch_size", ":", "\n", "                ", "current_batch", ",", "batch", "=", "batch", "[", ":", "batch_size", "]", ",", "batch", "[", "batch_size", ":", "]", "\n", "d", "[", "'x'", "]", "=", "dict", "(", "image", "=", "np", ".", "stack", "(", "[", "x", "[", "'image'", "]", "for", "x", "in", "current_batch", "]", ")", ",", "\n", "label", "=", "np", ".", "stack", "(", "[", "x", "[", "'label'", "]", "for", "x", "in", "current_batch", "]", ")", ",", "\n", "index", "=", "np", ".", "stack", "(", "[", "x", "[", "'index'", "]", "for", "x", "in", "current_batch", "]", ")", ")", "\n", "yield", "d", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.noisy_student.main": [[116, 168], ["print", "print", "shared.util.setup_tf", "noisy_student.NoisyStudent", "os.path.join", "os.path.join", "enumerate", "absl.flags.FLAGS.augment.startswith", "NoisyStudent.train", "tqdm.tqdm", "numpy.concatenate", "print", "domain_adaptation.lib.data.CTAData.stop", "shared.zoo.models.network", "sorted", "os.path.join", "os.path.join", "print", "os.path.exists", "test.update", "domain_adaptation.lib.data.MixData", "absl.flags.FLAGS.augment.startswith", "noisy_student.PseudoLabeler", "target.train.parse().batch().nchw", "np.concatenate.append", "open", "numpy.save", "shared.data.fsl.DATASETS", "shared.data.fsl.DATASETS", "domain_adaptation.lib.data.CTAData", "ValueError", "NoisyStudent.eval_op_jit", "jax.host_id", "jax.host_count", "target.train.parse().batch", "batch[]._numpy", "str", "NoisyStudent.params.items", "v.parse().batch().nchw().map().prefetch", "testset.items", "jax.devices", "target.train.parse", "v.parse().batch().nchw().map", "v.parse().batch().nchw", "v.parse().batch", "v.parse"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.shared.util.setup_tf", "home.repos.pwc.inspect_result.google-research_adamatch.shared.train.TrainableModule.train", "home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.noisy_student.PseudoLabeler.stop", "home.repos.pwc.inspect_result.google-research_adamatch.zoo.models.network", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.nchw", "home.repos.pwc.inspect_result.google-research_adamatch.debug.show_images.save", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.parse", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.nchw", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.parse"], ["", "", "", "", "def", "main", "(", "argv", ")", ":", "\n", "    ", "del", "argv", "\n", "assert", "FLAGS", ".", "id", ",", "f'You must specify a --id for the run'", "\n", "print", "(", "'JAX host: %d / %d'", "%", "(", "jax", ".", "host_id", "(", ")", ",", "jax", ".", "host_count", "(", ")", ")", ")", "\n", "print", "(", "'JAX devices:\\n%s'", "%", "'\\n'", ".", "join", "(", "str", "(", "d", ")", "for", "d", "in", "jax", ".", "devices", "(", ")", ")", ",", "flush", "=", "True", ")", "\n", "setup_tf", "(", ")", "\n", "dataset_name", ",", "samples_per_class", ",", "dataset_seed", "=", "DataSetSSL", ".", "parse_name", "(", "f'{FLAGS.dataset}'", ")", "\n", "labeled", "=", "SSL_DATASETS", "(", ")", "[", "dataset_name", "]", "(", "samples_per_class", ",", "dataset_seed", ")", "\n", "unlabeled", "=", "FSL_DATASETS", "(", ")", "[", "f'{dataset_name}-0'", "]", "(", ")", "\n", "testsets", "=", "[", "unlabeled", ".", "test", "]", "\n", "module", "=", "NoisyStudent", "(", "labeled", ".", "nclass", ",", "network", "(", "FLAGS", ".", "arch", ")", ",", "\n", "lr", "=", "FLAGS", ".", "lr", ",", "\n", "lr_decay", "=", "FLAGS", ".", "lr_decay", ",", "\n", "wd", "=", "FLAGS", ".", "wd", ",", "\n", "arch", "=", "FLAGS", ".", "arch", ",", "\n", "batch", "=", "FLAGS", ".", "batch", ",", "\n", "uratio", "=", "FLAGS", ".", "uratio", ")", "\n", "logdir", "=", "f'SSL/{FLAGS.dataset}/{FLAGS.augment}/{module.__class__.__name__}/'", "\n", "logdir", "+=", "'_'", ".", "join", "(", "sorted", "(", "'%s%s'", "%", "k", "for", "k", "in", "module", ".", "params", ".", "items", "(", ")", ")", ")", "\n", "if", "FLAGS", ".", "teacher_id", "!=", "''", ":", "\n", "      ", "pseudo_label_logdir", "=", "os", ".", "path", ".", "join", "(", "FLAGS", ".", "logdir", ",", "logdir", ",", "FLAGS", ".", "teacher_id", ")", "\n", "pseudo_label_file", "=", "os", ".", "path", ".", "join", "(", "pseudo_label_logdir", ",", "'predictions.npy'", ")", "\n", "print", "(", "'Using pseudo label file '", ",", "pseudo_label_file", ")", "\n", "", "else", ":", "\n", "      ", "pseudo_label_file", "=", "FLAGS", ".", "pseudo_label_file", "\n", "", "logdir", "=", "os", ".", "path", ".", "join", "(", "FLAGS", ".", "logdir", ",", "logdir", ",", "FLAGS", ".", "id", ")", "\n", "prediction_file", "=", "os", ".", "path", ".", "join", "(", "logdir", ",", "'predictions.npy'", ")", "\n", "assert", "not", "os", ".", "path", ".", "exists", "(", "prediction_file", ")", ",", "f'The prediction file \"{prediction_file}\" already exists, '", "f'remove it if you want to overwrite it.'", "\n", "\n", "test", "=", "{", "}", "\n", "for", "domain", ",", "testset", "in", "enumerate", "(", "testsets", ")", ":", "\n", "        ", "test", ".", "update", "(", "(", "k", ",", "v", ".", "parse", "(", ")", ".", "batch", "(", "FLAGS", ".", "batch", ")", ".", "nchw", "(", ")", ".", "map", "(", "\n", "lambda", "d", ":", "{", "**", "d", ",", "'domain'", ":", "domain", "}", ")", ".", "prefetch", "(", "16", ")", ")", "\n", "for", "k", ",", "v", "in", "testset", ".", "items", "(", ")", ")", "\n", "", "if", "FLAGS", ".", "augment", ".", "startswith", "(", "'('", ")", ":", "\n", "        ", "train", "=", "MixData", "(", "labeled", ".", "train", ",", "unlabeled", ".", "train", ",", "labeled", ".", "nclass", ",", "FLAGS", ".", "batch", ",", "FLAGS", ".", "uratio", ")", "\n", "", "elif", "FLAGS", ".", "augment", ".", "startswith", "(", "'CTA('", ")", ":", "\n", "        ", "train", "=", "CTAData", "(", "labeled", ".", "train", ",", "unlabeled", ".", "train", ",", "labeled", ".", "nclass", ",", "FLAGS", ".", "batch", ",", "FLAGS", ".", "uratio", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "f'Augment flag value {FLAGS.augment} not supported.'", ")", "\n", "", "if", "pseudo_label_file", "!=", "''", ":", "\n", "        ", "train", "=", "PseudoLabeler", "(", "train", ",", "pseudo_label_file", ",", "FLAGS", ".", "pseudo_label_th", ",", "FLAGS", ".", "uratio", ")", "\n", "", "module", ".", "train", "(", "FLAGS", ".", "train_mimg", "<<", "10", ",", "FLAGS", ".", "report_kimg", ",", "train", ",", "test", ",", "logdir", ",", "FLAGS", ".", "keep_ckpts", ")", "\n", "predictions", "=", "[", "]", "\n", "for", "batch", "in", "tqdm", "(", "unlabeled", ".", "train", ".", "parse", "(", ")", ".", "batch", "(", "FLAGS", ".", "batch", ")", ".", "nchw", "(", ")", ",", "\n", "desc", "=", "f'Evaluating unlabeled data'", ",", "leave", "=", "False", ")", ":", "\n", "        ", "predictions", ".", "append", "(", "module", ".", "eval_op_jit", "(", "batch", "[", "'image'", "]", ".", "_numpy", "(", ")", ")", ")", "\n", "", "predictions", "=", "np", ".", "concatenate", "(", "predictions", ")", "\n", "with", "open", "(", "prediction_file", ",", "'wb'", ")", "as", "f", ":", "\n", "        ", "np", ".", "save", "(", "f", ",", "predictions", ")", "\n", "", "print", "(", "'Saved target predictions to'", ",", "prediction_file", ")", "\n", "train", ".", "stop", "(", ")", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.fixmatch_da.FixMatchDA.__init__": [[38, 101], ["domain_adaptation.lib.train.TrainableDAModule.__init__", "model", "objax.optimizer.ExponentialMovingAverageModule", "absl.flags.FLAGS.arch.endswith", "objax.Module", "objax.nn.ExponentialMovingAverage", "objax.nn.MovingAverage", "objax.optimizer.Momentum", "shared.train.ScheduleCos", "objax.Function.with_vars", "objax.GradValues", "objax.Function.with_vars", "shared.util.MyParallel", "shared.util.MyParallel", "fixmatch_da.FixMatchDA.model_ema.update_ema", "fixmatch_da.FixMatchDA.model.vars", "fixmatch_da.FixMatchDA.stats.vars", "objax.functional.softmax", "fixmatch_da.FixMatchDA.model_ema.vars", "jax.concatenate().reshape", "jax.concatenate().reshape", "fixmatch_da.FixMatchDA.model", "objax.functional.softmax", "fixmatch_da.FixMatchDA.stats.p_data", "fixmatch_da.FixMatchDA.stats.p_model", "objax.functional.stop_gradient", "objax.functional.loss.cross_entropy_logits().mean", "objax.functional.loss.cross_entropy_logits_sparse", "fixmatch_da.FixMatchDA.lr", "objax.GradValues.", "fixmatch_da.FixMatchDA.opt", "fixmatch_da.FixMatchDA.model_ema.update_ema", "fixmatch_da.FixMatchDA.vars", "fixmatch_da.FixMatchDA.model_ema", "sy.mean", "objax.functional.stop_gradient.mean", "objax.functional.stop_gradient.argmax", "sum", "fixmatch_da.FixMatchDA.__init__.eval_op"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.baseline.Baseline.__init__"], ["        ", "super", "(", ")", ".", "__init__", "(", "nclass", ",", "kwargs", ")", "\n", "self", ".", "model", ":", "objax", ".", "Module", "=", "model", "(", "colors", "=", "3", ",", "nclass", "=", "nclass", ",", "**", "kwargs", ")", "\n", "self", ".", "model_ema", "=", "objax", ".", "optimizer", ".", "ExponentialMovingAverageModule", "(", "self", ".", "model", ",", "momentum", "=", "0.999", ")", "\n", "if", "FLAGS", ".", "arch", ".", "endswith", "(", "'pretrain'", ")", ":", "\n", "# Initialize weights of EMA with pretrained model's weights.", "\n", "            ", "self", ".", "model_ema", ".", "ema", ".", "momentum", "=", "0", "\n", "self", ".", "model_ema", ".", "update_ema", "(", ")", "\n", "self", ".", "model_ema", ".", "ema", ".", "momentum", "=", "0.999", "\n", "", "self", ".", "stats", "=", "objax", ".", "Module", "(", ")", "\n", "self", ".", "stats", ".", "p_data", "=", "objax", ".", "nn", ".", "ExponentialMovingAverage", "(", "(", "nclass", ",", ")", ",", "init_value", "=", "1", "/", "nclass", ")", "\n", "self", ".", "stats", ".", "p_model", "=", "objax", ".", "nn", ".", "MovingAverage", "(", "(", "nclass", ",", ")", ",", "buffer_size", "=", "128", ",", "init_value", "=", "1", "/", "nclass", ")", "\n", "train_vars", "=", "self", ".", "model", ".", "vars", "(", ")", "+", "self", ".", "stats", ".", "vars", "(", ")", "\n", "self", ".", "opt", "=", "objax", ".", "optimizer", ".", "Momentum", "(", "train_vars", ")", "\n", "self", ".", "lr", "=", "ScheduleCos", "(", "self", ".", "params", ".", "lr", ",", "self", ".", "params", ".", "lr_decay", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "model_ema", ".", "vars", "(", ")", ")", "\n", "def", "eval_op", "(", "x", ":", "JaxArray", ")", "->", "JaxArray", ":", "\n", "            ", "return", "objax", ".", "functional", ".", "softmax", "(", "self", ".", "model_ema", "(", "x", ",", "training", "=", "False", ")", ")", "\n", "\n", "", "def", "loss_function", "(", "x", ",", "y", ",", "u", ")", ":", "\n", "            ", "c", ",", "h", ",", "w", "=", "x", ".", "shape", "[", "-", "3", ":", "]", "\n", "xu", "=", "jn", ".", "concatenate", "(", "(", "x", ",", "u", ")", ")", ".", "reshape", "(", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", ")", "\n", "logit", "=", "self", ".", "model", "(", "xu", ",", "training", "=", "True", ")", "\n", "logit_x_weak", "=", "logit", "[", ":", "2", "*", "x", ".", "shape", "[", "0", "]", ":", "2", "]", "\n", "logit_weak", ",", "logit_strong", "=", "logit", "[", ":", ":", "2", "]", ",", "logit", "[", "1", ":", ":", "2", "]", "\n", "\n", "\n", "confidence_ratio", "=", "self", ".", "params", ".", "confidence", "\n", "\n", "pseudo_labels", "=", "objax", ".", "functional", ".", "softmax", "(", "logit_weak", ")", "\n", "p_data", "=", "self", ".", "stats", ".", "p_data", "(", "y", ".", "mean", "(", "0", ")", ")", "\n", "p_model", "=", "self", ".", "stats", ".", "p_model", "(", "pseudo_labels", ".", "mean", "(", "0", ")", ")", "\n", "pseudo_labels", "*=", "(", "1e-6", "+", "p_data", ")", "/", "(", "1e-6", "+", "p_model", ")", "\n", "pseudo_labels", "=", "stop_gradient", "(", "pseudo_labels", "/", "pseudo_labels", ".", "sum", "(", "1", ",", "keepdims", "=", "True", ")", ")", "\n", "pseudo_mask", "=", "(", "pseudo_labels", ".", "max", "(", "axis", "=", "1", ")", ">=", "confidence_ratio", ")", ".", "astype", "(", "pseudo_labels", ".", "dtype", ")", "\n", "\n", "xe", "=", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_x_weak", ",", "y", ")", ".", "mean", "(", ")", "\n", "xeu", "=", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits_sparse", "(", "logit_strong", ",", "pseudo_labels", ".", "argmax", "(", "axis", "=", "1", ")", ")", "\n", "xeu", "=", "(", "xeu", "*", "pseudo_mask", ")", ".", "mean", "(", ")", "\n", "wd", "=", "0.5", "*", "sum", "(", "(", "v", ".", "value", "**", "2", ")", ".", "sum", "(", ")", "for", "k", ",", "v", "in", "train_vars", ".", "items", "(", ")", "if", "k", ".", "endswith", "(", "'.w'", ")", ")", "\n", "\n", "loss", "=", "xe", "+", "self", ".", "params", ".", "wu", "*", "xeu", "+", "self", ".", "params", ".", "wd", "*", "wd", "\n", "return", "loss", ",", "{", "'losses/xe'", ":", "xe", ",", "\n", "'losses/xeu'", ":", "xeu", ",", "\n", "'losses/wd'", ":", "wd", ",", "\n", "'monitors/confidence_ratio'", ":", "confidence_ratio", ",", "\n", "'monitors/mask'", ":", "pseudo_mask", ".", "mean", "(", ")", ",", "\n", "'monitors/klmodel'", ":", "objax", ".", "functional", ".", "divergence", ".", "kl", "(", "p_data", ",", "p_model", ")", "}", "\n", "\n", "", "gv", "=", "objax", ".", "GradValues", "(", "loss_function", ",", "train_vars", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "vars", "(", ")", ")", "\n", "def", "train_op", "(", "step", ",", "x", ",", "y", ",", "u", ",", "probe", "=", "None", ")", ":", "\n", "            ", "y_probe", "=", "eval_op", "(", "probe", ")", "if", "probe", "is", "not", "None", "else", "None", "\n", "p", "=", "step", "/", "(", "FLAGS", ".", "train_mimg", "<<", "20", ")", "\n", "lr", "=", "self", ".", "lr", "(", "p", ")", "\n", "g", ",", "v", "=", "gv", "(", "x", ",", "y", ",", "u", ")", "\n", "self", ".", "opt", "(", "lr", ",", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "g", ")", ")", "\n", "self", ".", "model_ema", ".", "update_ema", "(", ")", "\n", "return", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "{", "'monitors/lr'", ":", "lr", ",", "**", "v", "[", "1", "]", "}", ")", ",", "y_probe", "\n", "\n", "", "self", ".", "train_op", "=", "MyParallel", "(", "train_op", ",", "reduce", "=", "lambda", "x", ":", "x", ")", "\n", "self", ".", "eval_op", "=", "MyParallel", "(", "eval_op", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.fixmatch_da.main": [[103, 136], ["print", "print", "shared.util.setup_tf", "fixmatch_da.FixMatchDA", "os.path.join", "enumerate", "absl.flags.FLAGS.augment.startswith", "FixMatchDA.train", "domain_adaptation.lib.data.CTAData.stop", "shared.zoo.models.network", "test.update", "domain_adaptation.lib.data.MixData", "absl.flags.FLAGS.augment.startswith", "shared.data.fsl.DATASETS", "shared.data.fsl.DATASETS", "sorted", "domain_adaptation.lib.data.CTAData", "ValueError", "jax.host_id", "jax.host_id", "jax.host_count", "jax.host_count", "str", "v.parse().batch().nchw().map().prefetch", "testset.items", "jax.devices", "jax.devices", "FixMatchDA.params.items", "v.parse().batch().nchw().map", "v.parse().batch().nchw", "v.parse().batch", "v.parse"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.shared.util.setup_tf", "home.repos.pwc.inspect_result.google-research_adamatch.shared.train.TrainableModule.train", "home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.noisy_student.PseudoLabeler.stop", "home.repos.pwc.inspect_result.google-research_adamatch.zoo.models.network", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.nchw", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.parse"], ["", "", "def", "main", "(", "argv", ")", ":", "\n", "    ", "del", "argv", "\n", "print", "(", "'JAX host: %d / %d'", "%", "(", "jax", ".", "host_id", "(", ")", ",", "jax", ".", "host_count", "(", ")", ")", ")", "\n", "print", "(", "'JAX devices:\\n%s'", "%", "'\\n'", ".", "join", "(", "str", "(", "d", ")", "for", "d", "in", "jax", ".", "devices", "(", ")", ")", ",", "flush", "=", "True", ")", "\n", "setup_tf", "(", ")", "\n", "dataset_name", ",", "samples_per_class", ",", "dataset_seed", "=", "DataSetSSL", ".", "parse_name", "(", "f'{FLAGS.dataset}'", ")", "\n", "labeled", "=", "SSL_DATASETS", "(", ")", "[", "dataset_name", "]", "(", "samples_per_class", ",", "dataset_seed", ")", "\n", "unlabeled", "=", "FSL_DATASETS", "(", ")", "[", "f'{dataset_name}-0'", "]", "(", ")", "\n", "testsets", "=", "[", "unlabeled", ".", "test", "]", "\n", "module", "=", "FixMatchDA", "(", "labeled", ".", "nclass", ",", "network", "(", "FLAGS", ".", "arch", ")", ",", "\n", "lr", "=", "FLAGS", ".", "lr", ",", "\n", "lr_decay", "=", "FLAGS", ".", "lr_decay", ",", "\n", "wd", "=", "FLAGS", ".", "wd", ",", "\n", "arch", "=", "FLAGS", ".", "arch", ",", "\n", "batch", "=", "FLAGS", ".", "batch", ",", "\n", "wu", "=", "FLAGS", ".", "wu", ",", "\n", "confidence", "=", "FLAGS", ".", "confidence", ",", "\n", "uratio", "=", "FLAGS", ".", "uratio", ")", "\n", "logdir", "=", "f'SSL/{FLAGS.dataset}/{FLAGS.augment}/{module.__class__.__name__}/%s'", "%", "(", "\n", "'_'", ".", "join", "(", "sorted", "(", "'%s%s'", "%", "k", "for", "k", "in", "module", ".", "params", ".", "items", "(", ")", ")", ")", ")", "\n", "logdir", "=", "os", ".", "path", ".", "join", "(", "FLAGS", ".", "logdir", ",", "logdir", ")", "\n", "test", "=", "{", "}", "\n", "for", "domain", ",", "testset", "in", "enumerate", "(", "testsets", ")", ":", "\n", "        ", "test", ".", "update", "(", "(", "k", ",", "v", ".", "parse", "(", ")", ".", "batch", "(", "FLAGS", ".", "batch", ")", ".", "nchw", "(", ")", ".", "map", "(", "lambda", "d", ":", "{", "**", "d", ",", "'domain'", ":", "domain", "}", ")", ".", "prefetch", "(", "16", ")", ")", "\n", "for", "k", ",", "v", "in", "testset", ".", "items", "(", ")", ")", "\n", "", "if", "FLAGS", ".", "augment", ".", "startswith", "(", "'('", ")", ":", "\n", "        ", "train", "=", "MixData", "(", "labeled", ".", "train", ",", "unlabeled", ".", "train", ",", "labeled", ".", "nclass", ",", "FLAGS", ".", "batch", ",", "FLAGS", ".", "uratio", ")", "\n", "", "elif", "FLAGS", ".", "augment", ".", "startswith", "(", "'CTA('", ")", ":", "\n", "        ", "train", "=", "CTAData", "(", "labeled", ".", "train", ",", "unlabeled", ".", "train", ",", "labeled", ".", "nclass", ",", "FLAGS", ".", "batch", ",", "FLAGS", ".", "uratio", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "f'Augment flag value {FLAGS.augment} not supported.'", ")", "\n", "", "module", ".", "train", "(", "FLAGS", ".", "train_mimg", "<<", "10", ",", "FLAGS", ".", "report_kimg", ",", "train", ",", "test", ",", "logdir", ",", "FLAGS", ".", "keep_ckpts", ")", "\n", "train", ".", "stop", "(", ")", "\n", "objax", ".", "util", ".", "multi_host_barrier", "(", ")", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.adamatch.AdaMatch.__init__": [[38, 115], ["domain_adaptation.lib.train.TrainableDAModule.__init__", "model", "objax.optimizer.ExponentialMovingAverageModule", "absl.flags.FLAGS.arch.endswith", "objax.Module", "objax.nn.ExponentialMovingAverage", "objax.nn.MovingAverage", "objax.optimizer.Momentum", "shared.train.ScheduleCosPhases", "shared.train.ScheduleCos", "objax.Function.with_vars", "objax.GradValues", "objax.Function.with_vars", "shared.util.MyParallel", "shared.util.MyParallel", "adamatch.AdaMatch.model_ema.update_ema", "adamatch.AdaMatch.model.vars", "adamatch.AdaMatch.stats.vars", "objax.functional.softmax", "adamatch.AdaMatch.model_ema.vars", "adamatch.AdaMatch.model.vars().tensors", "adamatch.AdaMatch.model", "adamatch.AdaMatch.model.vars().assign", "jax.concatenate().reshape", "jax.concatenate().reshape", "adamatch.AdaMatch.model", "jax.split", "jax.split", "objax.functional.softmax", "adamatch.AdaMatch.stats.p_labeled", "adamatch.AdaMatch.stats.p_unlabeled", "objax.functional.stop_gradient", "objax.functional.loss.cross_entropy_logits_sparse", "adamatch.AdaMatch.lr", "objax.GradValues.", "adamatch.AdaMatch.opt", "adamatch.AdaMatch.model_ema.update_ema", "adamatch.AdaMatch.vars", "adamatch.AdaMatch.model_ema", "sx.reshape", "objax.random.uniform", "objax.functional.softmax", "objax.functional.softmax().mean", "objax.functional.stop_gradient.mean", "objax.functional.stop_gradient.argmax", "sum", "adamatch.AdaMatch.__init__.eval_op"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.baseline.Baseline.__init__"], ["        ", "super", "(", ")", ".", "__init__", "(", "nclass", ",", "kwargs", ")", "\n", "self", ".", "model", ":", "objax", ".", "Module", "=", "model", "(", "colors", "=", "3", ",", "nclass", "=", "nclass", ",", "**", "kwargs", ")", "\n", "self", ".", "model_ema", "=", "objax", ".", "optimizer", ".", "ExponentialMovingAverageModule", "(", "self", ".", "model", ",", "momentum", "=", "0.999", ")", "\n", "if", "FLAGS", ".", "arch", ".", "endswith", "(", "'pretrain'", ")", ":", "\n", "# Initialize weights of EMA with pretrained model's weights.", "\n", "            ", "self", ".", "model_ema", ".", "ema", ".", "momentum", "=", "0", "\n", "self", ".", "model_ema", ".", "update_ema", "(", ")", "\n", "self", ".", "model_ema", ".", "ema", ".", "momentum", "=", "0.999", "\n", "", "self", ".", "stats", "=", "objax", ".", "Module", "(", ")", "\n", "self", ".", "stats", ".", "keygen", "=", "objax", ".", "random", ".", "DEFAULT_GENERATOR", "\n", "self", ".", "stats", ".", "p_labeled", "=", "objax", ".", "nn", ".", "ExponentialMovingAverage", "(", "(", "nclass", ",", ")", ",", "init_value", "=", "1", "/", "nclass", ")", "\n", "self", ".", "stats", ".", "p_unlabeled", "=", "objax", ".", "nn", ".", "MovingAverage", "(", "(", "nclass", ",", ")", ",", "buffer_size", "=", "128", ",", "init_value", "=", "1", "/", "nclass", ")", "\n", "train_vars", "=", "self", ".", "model", ".", "vars", "(", ")", "+", "self", ".", "stats", ".", "vars", "(", ")", "\n", "self", ".", "opt", "=", "objax", ".", "optimizer", ".", "Momentum", "(", "train_vars", ")", "\n", "self", ".", "wu", "=", "ScheduleCosPhases", "(", "1", ",", "[", "(", "0.5", ",", "1", ")", ",", "(", "1", ",", "self", ".", "params", ".", "wu", ")", "]", ",", "start_value", "=", "0", ")", "\n", "self", ".", "lr", "=", "ScheduleCos", "(", "self", ".", "params", ".", "lr", ",", "self", ".", "params", ".", "lr_decay", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "model_ema", ".", "vars", "(", ")", ")", "\n", "def", "eval_op", "(", "x", ":", "JaxArray", ")", "->", "JaxArray", ":", "\n", "            ", "return", "objax", ".", "functional", ".", "softmax", "(", "self", ".", "model_ema", "(", "x", ",", "training", "=", "False", ")", ")", "\n", "\n", "", "def", "loss_function", "(", "sx", ",", "sy", ",", "tu", ",", "progress", ")", ":", "\n", "            ", "c", ",", "h", ",", "w", "=", "sx", ".", "shape", "[", "-", "3", ":", "]", "\n", "saved_vars", "=", "self", ".", "model", ".", "vars", "(", ")", ".", "tensors", "(", ")", "\n", "logit_bn_x", "=", "self", ".", "model", "(", "sx", ".", "reshape", "(", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", ")", ",", "training", "=", "True", ")", "\n", "self", ".", "model", ".", "vars", "(", ")", ".", "assign", "(", "saved_vars", ")", "\n", "xu", "=", "jn", ".", "concatenate", "(", "(", "sx", ",", "tu", ")", ")", ".", "reshape", "(", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", ")", "\n", "logit", "=", "self", ".", "model", "(", "xu", ",", "training", "=", "True", ")", "\n", "logit_sx", ",", "logit_tu", "=", "jn", ".", "split", "(", "logit", ",", "(", "2", "*", "sx", ".", "shape", "[", "0", "]", ",", ")", ")", "\n", "logit_sx", "+=", "(", "logit_bn_x", "-", "logit_sx", ")", "*", "objax", ".", "random", ".", "uniform", "(", "logit_sx", ".", "shape", ")", "\n", "logit_sx_weak", ",", "logit_sx_strong", "=", "logit_sx", "[", ":", ":", "2", "]", ",", "logit_sx", "[", "1", ":", ":", "2", "]", "\n", "logit_tu_weak", ",", "logit_tu_strong", "=", "logit_tu", "[", ":", ":", "2", "]", ",", "logit_tu", "[", "1", ":", ":", "2", "]", "\n", "\n", "if", "self", ".", "params", ".", "use_cr", ":", "\n", "                ", "real_confidence", "=", "objax", ".", "functional", ".", "softmax", "(", "stop_gradient", "(", "logit_sx_weak", ")", ")", "\n", "confidence_ratio", "=", "real_confidence", ".", "max", "(", "1", ")", ".", "mean", "(", "0", ")", "*", "self", ".", "params", ".", "confidence", "\n", "", "else", ":", "\n", "                ", "confidence_ratio", "=", "self", ".", "params", ".", "confidence", "\n", "\n", "", "pseudo_labels", "=", "objax", ".", "functional", ".", "softmax", "(", "logit_tu_weak", ")", "\n", "p_labeled", "=", "self", ".", "stats", ".", "p_labeled", "(", "objax", ".", "functional", ".", "softmax", "(", "logit_sx_weak", ")", ".", "mean", "(", "0", ")", ")", "\n", "p_unlabeled", "=", "self", ".", "stats", ".", "p_unlabeled", "(", "pseudo_labels", ".", "mean", "(", "0", ")", ")", "\n", "pseudo_labels", "*=", "(", "1e-6", "+", "p_labeled", ")", "/", "(", "1e-6", "+", "p_unlabeled", ")", "\n", "pseudo_labels", "=", "stop_gradient", "(", "pseudo_labels", "/", "pseudo_labels", ".", "sum", "(", "1", ",", "keepdims", "=", "True", ")", ")", "\n", "pseudo_mask", "=", "(", "pseudo_labels", ".", "max", "(", "axis", "=", "1", ")", ">=", "confidence_ratio", ")", ".", "astype", "(", "pseudo_labels", ".", "dtype", ")", "\n", "\n", "xe", "=", "0.5", "*", "(", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_sx_weak", ",", "sy", ")", ".", "mean", "(", ")", "+", "\n", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_sx_strong", ",", "sy", ")", ".", "mean", "(", ")", ")", "\n", "xeu", "=", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits_sparse", "(", "logit_tu_strong", ",", "pseudo_labels", ".", "argmax", "(", "axis", "=", "1", ")", ")", "\n", "xeu", "=", "(", "xeu", "*", "pseudo_mask", ")", ".", "mean", "(", ")", "\n", "wd", "=", "0.5", "*", "sum", "(", "(", "v", ".", "value", "**", "2", ")", ".", "sum", "(", ")", "for", "k", ",", "v", "in", "train_vars", ".", "items", "(", ")", "if", "k", ".", "endswith", "(", "'.w'", ")", ")", "\n", "\n", "loss", "=", "xe", "+", "self", ".", "wu", "(", "progress", ")", "*", "xeu", "+", "self", ".", "params", ".", "wd", "*", "wd", "\n", "return", "loss", ",", "{", "'losses/xe'", ":", "xe", ",", "\n", "'losses/xeu'", ":", "xeu", ",", "\n", "'losses/wd'", ":", "wd", ",", "\n", "'losses/hregbn'", ":", "jn", ".", "square", "(", "logit_sx", "-", "logit_bn_x", ")", ".", "mean", "(", ")", ",", "\n", "'monitors/confidence_ratio'", ":", "confidence_ratio", ",", "\n", "'monitors/wu'", ":", "self", ".", "wu", "(", "progress", ")", ",", "\n", "'monitors/mask'", ":", "pseudo_mask", ".", "mean", "(", ")", ",", "\n", "'monitors/klmodel'", ":", "objax", ".", "functional", ".", "divergence", ".", "kl", "(", "p_labeled", ",", "p_unlabeled", ")", "}", "\n", "\n", "", "gv", "=", "objax", ".", "GradValues", "(", "loss_function", ",", "train_vars", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "vars", "(", ")", ")", "\n", "def", "train_op", "(", "step", ",", "x", ",", "y", ",", "u", ",", "probe", "=", "None", ")", ":", "\n", "            ", "y_probe", "=", "eval_op", "(", "probe", ")", "if", "probe", "is", "not", "None", "else", "None", "\n", "p", "=", "step", "/", "(", "FLAGS", ".", "train_mimg", "<<", "20", ")", "\n", "lr", "=", "self", ".", "lr", "(", "p", ")", "\n", "g", ",", "v", "=", "gv", "(", "x", ",", "y", ",", "u", ",", "p", ")", "\n", "self", ".", "opt", "(", "lr", ",", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "g", ")", ")", "\n", "self", ".", "model_ema", ".", "update_ema", "(", ")", "\n", "return", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "{", "'monitors/lr'", ":", "lr", ",", "**", "v", "[", "1", "]", "}", ")", ",", "y_probe", "\n", "\n", "", "self", ".", "train_op", "=", "MyParallel", "(", "train_op", ",", "reduce", "=", "lambda", "x", ":", "x", ")", "\n", "self", ".", "eval_op", "=", "MyParallel", "(", "eval_op", ")", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.adamatch.main": [[117, 151], ["print", "print", "shared.util.setup_tf", "adamatch.AdaMatch", "os.path.join", "enumerate", "absl.flags.FLAGS.augment.startswith", "AdaMatch.train", "domain_adaptation.lib.data.CTAData.stop", "shared.zoo.models.network", "test.update", "domain_adaptation.lib.data.MixData", "absl.flags.FLAGS.augment.startswith", "shared.data.fsl.DATASETS", "shared.data.fsl.DATASETS", "sorted", "domain_adaptation.lib.data.CTAData", "ValueError", "jax.host_id", "jax.host_id", "jax.host_count", "jax.host_count", "str", "v.parse().batch().nchw().map().prefetch", "testset.items", "jax.devices", "jax.devices", "AdaMatch.params.items", "v.parse().batch().nchw().map", "v.parse().batch().nchw", "v.parse().batch", "v.parse"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.shared.util.setup_tf", "home.repos.pwc.inspect_result.google-research_adamatch.shared.train.TrainableModule.train", "home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.noisy_student.PseudoLabeler.stop", "home.repos.pwc.inspect_result.google-research_adamatch.zoo.models.network", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.nchw", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.parse"], ["    ", "del", "argv", "\n", "print", "(", "'JAX host: %d / %d'", "%", "(", "jax", ".", "host_id", "(", ")", ",", "jax", ".", "host_count", "(", ")", ")", ")", "\n", "print", "(", "'JAX devices:\\n%s'", "%", "'\\n'", ".", "join", "(", "str", "(", "d", ")", "for", "d", "in", "jax", ".", "devices", "(", ")", ")", ",", "flush", "=", "True", ")", "\n", "setup_tf", "(", ")", "\n", "dataset_name", ",", "samples_per_class", ",", "dataset_seed", "=", "DataSetSSL", ".", "parse_name", "(", "f'{FLAGS.dataset}'", ")", "\n", "labeled", "=", "SSL_DATASETS", "(", ")", "[", "dataset_name", "]", "(", "samples_per_class", ",", "dataset_seed", ")", "\n", "unlabeled", "=", "FSL_DATASETS", "(", ")", "[", "f'{dataset_name}-0'", "]", "(", ")", "\n", "testsets", "=", "[", "unlabeled", ".", "test", "]", "\n", "module", "=", "AdaMatch", "(", "labeled", ".", "nclass", ",", "network", "(", "FLAGS", ".", "arch", ")", ",", "\n", "lr", "=", "FLAGS", ".", "lr", ",", "\n", "lr_decay", "=", "FLAGS", ".", "lr_decay", ",", "\n", "wd", "=", "FLAGS", ".", "wd", ",", "\n", "arch", "=", "FLAGS", ".", "arch", ",", "\n", "batch", "=", "FLAGS", ".", "batch", ",", "\n", "wu", "=", "FLAGS", ".", "wu", ",", "\n", "confidence", "=", "FLAGS", ".", "confidence", ",", "\n", "use_cr", "=", "FLAGS", ".", "use_cr", ",", "\n", "uratio", "=", "FLAGS", ".", "uratio", ")", "\n", "logdir", "=", "f'SSL/{FLAGS.dataset}/{FLAGS.augment}/{module.__class__.__name__}/%s'", "%", "(", "\n", "'_'", ".", "join", "(", "sorted", "(", "'%s%s'", "%", "k", "for", "k", "in", "module", ".", "params", ".", "items", "(", ")", ")", ")", ")", "\n", "logdir", "=", "os", ".", "path", ".", "join", "(", "FLAGS", ".", "logdir", ",", "logdir", ")", "\n", "test", "=", "{", "}", "\n", "for", "domain", ",", "testset", "in", "enumerate", "(", "testsets", ")", ":", "\n", "        ", "test", ".", "update", "(", "(", "k", ",", "v", ".", "parse", "(", ")", ".", "batch", "(", "FLAGS", ".", "batch", ")", ".", "nchw", "(", ")", ".", "map", "(", "lambda", "d", ":", "{", "**", "d", ",", "'domain'", ":", "domain", "}", ")", ".", "prefetch", "(", "16", ")", ")", "\n", "for", "k", ",", "v", "in", "testset", ".", "items", "(", ")", ")", "\n", "", "if", "FLAGS", ".", "augment", ".", "startswith", "(", "'('", ")", ":", "\n", "        ", "train", "=", "MixData", "(", "labeled", ".", "train", ",", "unlabeled", ".", "train", ",", "labeled", ".", "nclass", ",", "FLAGS", ".", "batch", ",", "FLAGS", ".", "uratio", ")", "\n", "", "elif", "FLAGS", ".", "augment", ".", "startswith", "(", "'CTA('", ")", ":", "\n", "        ", "train", "=", "CTAData", "(", "labeled", ".", "train", ",", "unlabeled", ".", "train", ",", "labeled", ".", "nclass", ",", "FLAGS", ".", "batch", ",", "FLAGS", ".", "uratio", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "f'Augment flag value {FLAGS.augment} not supported.'", ")", "\n", "", "module", ".", "train", "(", "FLAGS", ".", "train_mimg", "<<", "10", ",", "FLAGS", ".", "report_kimg", ",", "train", ",", "test", ",", "logdir", ",", "FLAGS", ".", "keep_ckpts", ")", "\n", "train", ".", "stop", "(", ")", "\n", "objax", ".", "util", ".", "multi_host_barrier", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.mcd.MCD.__init__": [[38, 109], ["domain_adaptation.lib.train.TrainableDAModule.__init__", "model", "objax.optimizer.ExponentialMovingAverageModule", "absl.flags.FLAGS.arch.endswith", "objax.nn.Linear", "objax.optimizer.Momentum", "objax.optimizer.Momentum", "objax.optimizer.Momentum", "shared.train.ScheduleCos", "objax.Function.with_vars", "objax.GradValues", "objax.GradValues", "objax.GradValues", "objax.Function.with_vars", "shared.util.MyParallel", "shared.util.MyParallel", "mcd.MCD.model_ema.update_ema", "mcd.MCD.gen.vars", "objax.functional.softmax", "mcd.MCD.model_ema.vars", "mcd.MCD.gen", "mcd.MCD.__init__.get_two_outputs"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.baseline.Baseline.__init__"], ["class", "MCD", "(", "TrainableSSLModule", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "nclass", ":", "int", ",", "model", ":", "Callable", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "nclass", ",", "kwargs", ")", "\n", "self", ".", "model", ":", "objax", ".", "Module", "=", "model", "(", "colors", "=", "3", ",", "nclass", "=", "nclass", ",", "**", "kwargs", ")", "\n", "self", ".", "model_ema", "=", "objax", ".", "optimizer", ".", "ExponentialMovingAverageModule", "(", "self", ".", "model", ",", "momentum", "=", "0.999", ")", "\n", "if", "FLAGS", ".", "arch", ".", "endswith", "(", "'pretrain'", ")", ":", "\n", "# Initialize weights of EMA with pretrained model's weights.", "\n", "            ", "self", ".", "model_ema", ".", "ema", ".", "momentum", "=", "0", "\n", "self", ".", "model_ema", ".", "update_ema", "(", ")", "\n", "self", ".", "model_ema", ".", "ema", ".", "momentum", "=", "0.999", "\n", "", "self", ".", "c1", ":", "objax", ".", "Module", "=", "self", ".", "model", "[", "-", "1", "]", "\n", "self", ".", "c2", ":", "objax", ".", "Module", "=", "objax", ".", "nn", ".", "Linear", "(", "self", ".", "c1", ".", "w", ".", "value", ".", "shape", "[", "0", "]", ",", "nclass", ")", "\n", "self", ".", "gen", ":", "objax", ".", "Module", "=", "self", ".", "model", "[", ":", "-", "1", "]", "\n", "self", ".", "opt1", "=", "objax", ".", "optimizer", ".", "Momentum", "(", "self", ".", "gen", ".", "vars", "(", ")", "+", "self", ".", "c1", ".", "vars", "(", "'c1'", ")", "+", "self", ".", "c2", ".", "vars", "(", "'c2'", ")", ")", "\n", "self", ".", "opt2", "=", "objax", ".", "optimizer", ".", "Momentum", "(", "self", ".", "c1", ".", "vars", "(", "'c1'", ")", "+", "self", ".", "c2", ".", "vars", "(", "'c2'", ")", ")", "\n", "self", ".", "opt3", "=", "objax", ".", "optimizer", ".", "Momentum", "(", "self", ".", "gen", ".", "vars", "(", ")", ")", "\n", "self", ".", "lr", "=", "ScheduleCos", "(", "self", ".", "params", ".", "lr", ",", "self", ".", "params", ".", "lr_decay", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "model_ema", ".", "vars", "(", ")", ")", "\n", "def", "eval_op", "(", "x", ":", "JaxArray", ")", "->", "JaxArray", ":", "\n", "            ", "return", "objax", ".", "functional", ".", "softmax", "(", "self", ".", "model_ema", "(", "x", ",", "training", "=", "False", ")", ")", "\n", "\n", "", "def", "get_two_outputs", "(", "v", ")", ":", "\n", "            ", "feat", "=", "self", ".", "gen", "(", "v", ",", "training", "=", "True", ")", "\n", "return", "self", ".", "c1", "(", "feat", ")", ",", "self", ".", "c2", "(", "feat", ")", "\n", "\n", "", "def", "loss_function_phase1", "(", "x", ",", "y", ")", ":", "\n", "            ", "x1", ",", "x2", "=", "get_two_outputs", "(", "x", "[", ":", ",", "0", "]", ")", "\n", "xes", "=", "(", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "x1", ",", "y", ")", ".", "mean", "(", ")", "+", "\n", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "x2", ",", "y", ")", ".", "mean", "(", ")", ")", "\n", "return", "xes", ",", "{", "'losses/xe'", ":", "xes", "}", "\n", "\n", "", "def", "loss_function_phase2", "(", "x", ",", "u", ",", "y", ")", ":", "\n", "            ", "saved", "=", "self", ".", "gen", ".", "vars", "(", ")", ".", "tensors", "(", ")", "\n", "x1", ",", "x2", "=", "get_two_outputs", "(", "x", "[", ":", ",", "0", "]", ")", "\n", "u1", ",", "u2", "=", "get_two_outputs", "(", "u", "[", ":", ",", "0", "]", ")", "\n", "self", ".", "gen", ".", "vars", "(", ")", ".", "assign", "(", "saved", ")", "\n", "\n", "xes", "=", "(", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "x1", ",", "y", ")", ".", "mean", "(", ")", "+", "\n", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "x2", ",", "y", ")", ".", "mean", "(", ")", ")", "\n", "dis", "=", "jn", ".", "abs", "(", "softmax", "(", "u1", ")", "-", "softmax", "(", "u2", ")", ")", ".", "mean", "(", ")", "\n", "return", "xes", "-", "dis", ",", "{", "'losses/xe2'", ":", "xes", ",", "'losses/dis2'", ":", "dis", "}", "\n", "\n", "", "def", "loss_function_phase3", "(", "u", ")", ":", "\n", "            ", "u1", ",", "u2", "=", "get_two_outputs", "(", "u", "[", ":", ",", "0", "]", ")", "\n", "dis", "=", "jn", ".", "abs", "(", "softmax", "(", "u1", ")", "-", "softmax", "(", "u2", ")", ")", ".", "mean", "(", ")", "\n", "return", "dis", ",", "{", "'losses/dis3'", ":", "dis", "}", "\n", "\n", "", "gv1", "=", "objax", ".", "GradValues", "(", "loss_function_phase1", ",", "self", ".", "gen", ".", "vars", "(", ")", "+", "self", ".", "c1", ".", "vars", "(", "'c1'", ")", "+", "self", ".", "c2", ".", "vars", "(", "'c2'", ")", ")", "\n", "gv2", "=", "objax", ".", "GradValues", "(", "loss_function_phase2", ",", "self", ".", "c1", ".", "vars", "(", "'c1'", ")", "+", "self", ".", "c2", ".", "vars", "(", "'c2'", ")", ")", "\n", "gv3", "=", "objax", ".", "GradValues", "(", "loss_function_phase3", ",", "self", ".", "gen", ".", "vars", "(", ")", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "vars", "(", ")", ")", "\n", "def", "train_op", "(", "step", ",", "x", ",", "y", ",", "u", ",", "probe", "=", "None", ")", ":", "\n", "            ", "y_probe", "=", "eval_op", "(", "probe", ")", "if", "probe", "is", "not", "None", "else", "None", "\n", "p", "=", "step", "/", "(", "FLAGS", ".", "train_mimg", "<<", "20", ")", "\n", "lr", "=", "self", ".", "lr", "(", "p", ")", "\n", "g", ",", "v1", "=", "gv1", "(", "x", ",", "y", ")", "\n", "self", ".", "opt1", "(", "lr", ",", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "g", ")", ")", "\n", "g", ",", "v2", "=", "gv2", "(", "x", ",", "u", ",", "y", ")", "\n", "self", ".", "opt2", "(", "lr", ",", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "g", ")", ")", "\n", "v3", "=", "{", "}", "\n", "for", "_", "in", "range", "(", "self", ".", "params", ".", "wu", ")", ":", "\n", "                ", "g", ",", "v", "=", "gv3", "(", "u", ")", "\n", "for", "k", ",", "val", "in", "v", "[", "1", "]", ".", "items", "(", ")", ":", "\n", "                    ", "v3", "[", "k", "]", "=", "v3", ".", "get", "(", "k", ",", "0", ")", "+", "val", "/", "self", ".", "params", ".", "wu", "\n", "", "self", ".", "opt3", "(", "lr", ",", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "g", ")", ")", "\n", "", "self", ".", "model_ema", ".", "update_ema", "(", ")", "\n", "return", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "{", "'monitors/lr'", ":", "lr", ",", "**", "v1", "[", "1", "]", ",", "**", "v2", "[", "1", "]", ",", "**", "v", "[", "1", "]", "}", ")", ",", "y_probe", "\n", "\n", "", "self", ".", "train_op", "=", "MyParallel", "(", "train_op", ",", "reduce", "=", "lambda", "x", ":", "x", ")", "\n", "self", ".", "eval_op", "=", "MyParallel", "(", "eval_op", ")", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.mcd.main": [[111, 143], ["print", "print", "shared.util.setup_tf", "mcd.MCD", "os.path.join", "enumerate", "absl.flags.FLAGS.augment.startswith", "MCD.train", "domain_adaptation.lib.data.CTAData.stop", "shared.zoo.models.network", "test.update", "domain_adaptation.lib.data.MixData", "absl.flags.FLAGS.augment.startswith", "shared.data.fsl.DATASETS", "shared.data.fsl.DATASETS", "sorted", "domain_adaptation.lib.data.CTAData", "ValueError", "jax.host_id", "jax.host_id", "jax.host_count", "jax.host_count", "str", "v.parse().batch().nchw().map().prefetch", "testset.items", "jax.devices", "jax.devices", "MCD.params.items", "v.parse().batch().nchw().map", "v.parse().batch().nchw", "v.parse().batch", "v.parse"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.shared.util.setup_tf", "home.repos.pwc.inspect_result.google-research_adamatch.shared.train.TrainableModule.train", "home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.noisy_student.PseudoLabeler.stop", "home.repos.pwc.inspect_result.google-research_adamatch.zoo.models.network", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.nchw", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.parse"], ["\n", "", "", "def", "main", "(", "argv", ")", ":", "\n", "    ", "del", "argv", "\n", "print", "(", "'JAX host: %d / %d'", "%", "(", "jax", ".", "host_id", "(", ")", ",", "jax", ".", "host_count", "(", ")", ")", ")", "\n", "print", "(", "'JAX devices:\\n%s'", "%", "'\\n'", ".", "join", "(", "str", "(", "d", ")", "for", "d", "in", "jax", ".", "devices", "(", ")", ")", ",", "flush", "=", "True", ")", "\n", "setup_tf", "(", ")", "\n", "dataset_name", ",", "samples_per_class", ",", "dataset_seed", "=", "DataSetSSL", ".", "parse_name", "(", "f'{FLAGS.dataset}'", ")", "\n", "labeled", "=", "SSL_DATASETS", "(", ")", "[", "dataset_name", "]", "(", "samples_per_class", ",", "dataset_seed", ")", "\n", "unlabeled", "=", "FSL_DATASETS", "(", ")", "[", "f'{dataset_name}-0'", "]", "(", ")", "\n", "testsets", "=", "[", "unlabeled", ".", "test", "]", "\n", "module", "=", "MCD", "(", "labeled", ".", "nclass", ",", "network", "(", "FLAGS", ".", "arch", ")", ",", "\n", "lr", "=", "FLAGS", ".", "lr", ",", "\n", "lr_decay", "=", "FLAGS", ".", "lr_decay", ",", "\n", "wd", "=", "FLAGS", ".", "wd", ",", "\n", "arch", "=", "FLAGS", ".", "arch", ",", "\n", "batch", "=", "FLAGS", ".", "batch", ",", "\n", "wu", "=", "FLAGS", ".", "wu", ",", "\n", "uratio", "=", "FLAGS", ".", "uratio", ")", "\n", "logdir", "=", "f'SSL/{FLAGS.dataset}/{FLAGS.augment}/{module.__class__.__name__}/%s'", "%", "(", "\n", "'_'", ".", "join", "(", "sorted", "(", "'%s%s'", "%", "k", "for", "k", "in", "module", ".", "params", ".", "items", "(", ")", ")", ")", ")", "\n", "logdir", "=", "os", ".", "path", ".", "join", "(", "FLAGS", ".", "logdir", ",", "logdir", ")", "\n", "test", "=", "{", "}", "\n", "for", "domain", ",", "testset", "in", "enumerate", "(", "testsets", ")", ":", "\n", "            ", "test", ".", "update", "(", "(", "k", ",", "v", ".", "parse", "(", ")", ".", "batch", "(", "FLAGS", ".", "batch", ")", ".", "nchw", "(", ")", ".", "map", "(", "lambda", "d", ":", "{", "**", "d", ",", "'domain'", ":", "domain", "}", ")", ".", "prefetch", "(", "16", ")", ")", "\n", "for", "k", ",", "v", "in", "testset", ".", "items", "(", ")", ")", "\n", "", "if", "FLAGS", ".", "augment", ".", "startswith", "(", "'('", ")", ":", "\n", "        ", "train", "=", "MixData", "(", "labeled", ".", "train", ",", "unlabeled", ".", "train", ",", "labeled", ".", "nclass", ",", "FLAGS", ".", "batch", ",", "FLAGS", ".", "uratio", ")", "\n", "", "elif", "FLAGS", ".", "augment", ".", "startswith", "(", "'CTA('", ")", ":", "\n", "        ", "train", "=", "CTAData", "(", "labeled", ".", "train", ",", "unlabeled", ".", "train", ",", "labeled", ".", "nclass", ",", "FLAGS", ".", "batch", ",", "FLAGS", ".", "uratio", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "f'Augment flag value {FLAGS.augment} not supported.'", ")", "\n", "", "module", ".", "train", "(", "FLAGS", ".", "train_mimg", "<<", "10", ",", "FLAGS", ".", "report_kimg", ",", "train", ",", "test", ",", "logdir", ",", "FLAGS", ".", "keep_ckpts", ")", "\n", "train", ".", "stop", "(", ")", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.baseline.Baseline.__init__": [[37, 86], ["domain_adaptation.lib.train.TrainableDAModule.__init__", "model", "objax.optimizer.ExponentialMovingAverageModule", "absl.flags.FLAGS.arch.endswith", "objax.Module", "objax.nn.ExponentialMovingAverage", "objax.nn.MovingAverage", "objax.optimizer.Momentum", "shared.train.ScheduleCos", "objax.Function.with_vars", "objax.GradValues", "objax.Function.with_vars", "shared.util.MyParallel", "shared.util.MyParallel", "baseline.Baseline.model_ema.update_ema", "baseline.Baseline.model.vars", "baseline.Baseline.stats.vars", "objax.functional.softmax", "baseline.Baseline.model_ema.vars", "jax.concatenate().reshape", "jax.concatenate().reshape", "baseline.Baseline.model", "baseline.Baseline.lr", "objax.GradValues.", "baseline.Baseline.opt", "baseline.Baseline.model_ema.update_ema", "baseline.Baseline.vars", "baseline.Baseline.model_ema", "jax.split", "jax.split", "sum", "baseline.Baseline.__init__.eval_op"], "methods", ["home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.baseline.Baseline.__init__"], ["    ", "def", "__init__", "(", "self", ",", "nclass", ":", "int", ",", "model", ":", "Callable", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "nclass", ",", "kwargs", ")", "\n", "self", ".", "model", ":", "objax", ".", "Module", "=", "model", "(", "colors", "=", "3", ",", "nclass", "=", "nclass", ",", "**", "kwargs", ")", "\n", "self", ".", "model_ema", "=", "objax", ".", "optimizer", ".", "ExponentialMovingAverageModule", "(", "self", ".", "model", ",", "momentum", "=", "0.999", ")", "\n", "train_vars", "=", "self", ".", "model", ".", "vars", "(", ")", "\n", "self", ".", "opt", "=", "objax", ".", "optimizer", ".", "Momentum", "(", "train_vars", ")", "\n", "self", ".", "lr", "=", "ScheduleCos", "(", "self", ".", "params", ".", "lr", ",", "self", ".", "params", ".", "lr_decay", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "model_ema", ".", "vars", "(", ")", ")", "\n", "def", "eval_op", "(", "x", ":", "JaxArray", ")", "->", "JaxArray", ":", "\n", "            ", "return", "objax", ".", "functional", ".", "softmax", "(", "self", ".", "model_ema", "(", "x", ",", "training", "=", "False", ")", ")", "\n", "\n", "", "def", "loss_function", "(", "sx", ",", "sy", ",", "tx", ",", "ty", ")", ":", "\n", "            ", "c", ",", "h", ",", "w", "=", "sx", ".", "shape", "[", "-", "3", ":", "]", "\n", "xu", "=", "jn", ".", "concatenate", "(", "(", "sx", ",", "tx", ")", ")", ".", "reshape", "(", "(", "-", "1", ",", "c", ",", "h", ",", "w", ")", ")", "\n", "logit", "=", "self", ".", "model", "(", "xu", ",", "training", "=", "True", ")", "\n", "logit_sx", ",", "logit_tx", "=", "jn", ".", "split", "(", "logit", ",", "(", "2", "*", "sx", ".", "shape", "[", "0", "]", ",", ")", ")", "\n", "logit_sx_weak", ",", "logit_sx_strong", "=", "logit_sx", "[", ":", ":", "2", "]", ",", "logit_sx", "[", "1", ":", ":", "2", "]", "\n", "logit_tx_weak", ",", "logit_tx_strong", "=", "logit_tx", "[", ":", ":", "2", "]", ",", "logit_tx", "[", "1", ":", ":", "2", "]", "\n", "\n", "xe", "=", "0.25", "*", "(", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_sx_weak", ",", "sy", ")", ".", "mean", "(", ")", "+", "\n", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_sx_strong", ",", "sy", ")", ".", "mean", "(", ")", "+", "\n", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_tx_weak", ",", "ty", ")", ".", "mean", "(", ")", "+", "\n", "objax", ".", "functional", ".", "loss", ".", "cross_entropy_logits", "(", "logit_tx_strong", ",", "ty", ")", ".", "mean", "(", ")", ")", "\n", "wd", "=", "0.5", "*", "sum", "(", "(", "v", ".", "value", "**", "2", ")", ".", "sum", "(", ")", "for", "k", ",", "v", "in", "train_vars", ".", "items", "(", ")", "if", "k", ".", "endswith", "(", "'.w'", ")", ")", "\n", "\n", "loss", "=", "xe", "+", "self", ".", "params", ".", "wd", "*", "wd", "\n", "return", "loss", ",", "{", "'losses/xe'", ":", "xe", ",", "'losses/wd'", ":", "wd", "}", "\n", "\n", "", "gv", "=", "objax", ".", "GradValues", "(", "loss_function", ",", "train_vars", ")", "\n", "\n", "@", "objax", ".", "Function", ".", "with_vars", "(", "self", ".", "vars", "(", ")", ")", "\n", "def", "train_op", "(", "step", ",", "sx", ",", "sy", ",", "tx", ",", "ty", ",", "probe", "=", "None", ")", ":", "\n", "            ", "y_probe", "=", "eval_op", "(", "probe", ")", "if", "probe", "is", "not", "None", "else", "None", "\n", "p", "=", "step", "/", "(", "FLAGS", ".", "train_mimg", "<<", "20", ")", "\n", "lr", "=", "self", ".", "lr", "(", "p", ")", "\n", "g", ",", "v", "=", "gv", "(", "sx", ",", "sy", ",", "tx", ",", "ty", ")", "\n", "self", ".", "opt", "(", "lr", ",", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "g", ")", ")", "\n", "self", ".", "model_ema", ".", "update_ema", "(", ")", "\n", "return", "objax", ".", "functional", ".", "parallel", ".", "pmean", "(", "{", "'monitors/lr'", ":", "lr", ",", "**", "v", "[", "1", "]", "}", ")", ",", "y_probe", "\n", "\n", "", "self", ".", "train_op", "=", "MyParallel", "(", "train_op", ",", "reduce", "=", "lambda", "x", ":", "x", ")", "\n", "self", ".", "eval_op", "=", "MyParallel", "(", "eval_op", ")", "\n", "\n", "\n", "", "", "def", "main", "(", "argv", ")", ":", "\n", "    ", "del", "argv", "\n", "print", "(", "'JAX host: %d / %d'", "%", "(", "jax", ".", "host_id", "(", ")", ",", "jax", ".", "host_count", "(", ")", ")", ")", "\n", "print", "(", "'JAX devices:\\n%s'", "%", "'\\n'", ".", "join", "(", "str", "(", "d", ")", "for", "d", "in", "jax", ".", "devices", "(", ")", ")", ",", "flush", "=", "True", ")", "\n", "setup_tf", "(", ")", "\n"]], "home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.baseline.main": [[88, 119], ["print", "print", "shared.util.setup_tf", "baseline.Baseline", "os.path.join", "enumerate", "absl.flags.FLAGS.augment.startswith", "Baseline.train", "domain_adaptation.lib.data.CTAData.stop", "shared.zoo.models.network", "test.update", "domain_adaptation.lib.data.MixData", "absl.flags.FLAGS.augment.startswith", "shared.data.fsl.DATASETS", "shared.data.fsl.DATASETS", "sorted", "domain_adaptation.lib.data.CTAData", "ValueError", "jax.host_id", "jax.host_id", "jax.host_count", "jax.host_count", "str", "v.parse().batch().nchw().map().prefetch", "testset.items", "jax.devices", "jax.devices", "Baseline.params.items", "v.parse().batch().nchw().map", "v.parse().batch().nchw", "v.parse().batch", "v.parse"], "function", ["home.repos.pwc.inspect_result.google-research_adamatch.shared.util.setup_tf", "home.repos.pwc.inspect_result.google-research_adamatch.shared.train.TrainableModule.train", "home.repos.pwc.inspect_result.google-research_adamatch.domain_adaptation.noisy_student.PseudoLabeler.stop", "home.repos.pwc.inspect_result.google-research_adamatch.zoo.models.network", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.nchw", "home.repos.pwc.inspect_result.google-research_adamatch.data.core.DataSet.parse"], ["if", "FLAGS", ".", "target", "==", "''", ":", "\n", "        ", "FLAGS", ".", "target", "=", "FLAGS", ".", "source", "\n", "", "source", "=", "FSL_DATASETS", "(", ")", "[", "f'{FLAGS.dataset}_{FLAGS.source}-0'", "]", "(", ")", "\n", "target", "=", "FSL_DATASETS", "(", ")", "[", "f'{FLAGS.dataset}_{FLAGS.target}-0'", "]", "(", ")", "\n", "module", "=", "Baseline", "(", "source", ".", "nclass", ",", "network", "(", "FLAGS", ".", "arch", ")", ",", "\n", "lr", "=", "FLAGS", ".", "lr", ",", "\n", "lr_decay", "=", "FLAGS", ".", "lr_decay", ",", "\n", "wd", "=", "FLAGS", ".", "wd", ",", "\n", "arch", "=", "FLAGS", ".", "arch", ",", "\n", "batch", "=", "FLAGS", ".", "batch", ")", "\n", "logdir", "=", "f'FSL/{FLAGS.dataset}/{FLAGS.source}/{FLAGS.target}/{FLAGS.augment}/{module.__class__.__name__}/%s'", "%", "(", "\n", "'_'", ".", "join", "(", "sorted", "(", "'%s%s'", "%", "k", "for", "k", "in", "module", ".", "params", ".", "items", "(", ")", ")", ")", ")", "\n", "logdir", "=", "os", ".", "path", ".", "join", "(", "FLAGS", ".", "logdir", ",", "logdir", ")", "\n", "test", "=", "{", "\n", "f'{FLAGS.source}_to_{FLAGS.target}'", ":", "(", "list", "(", "target", ".", "test", ".", "values", "(", ")", ")", "[", "0", "]", ".", "parse", "(", ")", ".", "batch", "(", "FLAGS", ".", "batch", ")", ".", "nchw", "(", ")", "\n", ".", "map", "(", "lambda", "d", ":", "{", "**", "d", ",", "'domain'", ":", "0", "}", ")", ".", "prefetch", "(", "16", ")", ")", ",", "\n", "f'{FLAGS.target}_to_{FLAGS.source}'", ":", "(", "list", "(", "source", ".", "test", ".", "values", "(", ")", ")", "[", "0", "]", ".", "parse", "(", ")", ".", "batch", "(", "FLAGS", ".", "batch", ")", ".", "nchw", "(", ")", "\n", ".", "map", "(", "lambda", "d", ":", "{", "**", "d", ",", "'domain'", ":", "1", "}", ")", ".", "prefetch", "(", "16", ")", ")", ",", "\n", "}", "\n", "if", "FLAGS", ".", "test_extra", ":", "\n", "        ", "for", "ds_name", "in", "FLAGS", ".", "test_extra", ".", "split", "(", "','", ")", ":", "\n", "            ", "ds", "=", "FSL_DATASETS", "(", ")", "[", "f'{FLAGS.dataset}_{ds_name}-0'", "]", "(", ")", "\n", "test", "[", "f'{FLAGS.target}_to_{ds_name}'", "]", "=", "(", "list", "(", "ds", ".", "test", ".", "values", "(", ")", ")", "[", "0", "]", ".", "parse", "(", ")", ".", "batch", "(", "FLAGS", ".", "batch", ")", ".", "nchw", "(", ")", "\n", ".", "map", "(", "lambda", "d", ":", "{", "**", "d", ",", "'domain'", ":", "1", "}", ")", ".", "prefetch", "(", "16", ")", ")", "\n", "", "", "if", "FLAGS", ".", "augment", ".", "startswith", "(", "'('", ")", ":", "\n", "        ", "train", "=", "MixData", "(", "source", ".", "train", ",", "target", ".", "train", ",", "source", ".", "nclass", ",", "FLAGS", ".", "batch", ")", "\n", "", "elif", "FLAGS", ".", "augment", ".", "startswith", "(", "'CTA('", ")", ":", "\n", "        ", "train", "=", "CTAData", "(", "source", ".", "train", ",", "target", ".", "train", ",", "source", ".", "nclass", ",", "FLAGS", ".", "batch", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "f'Augment flag value {FLAGS.augment} not supported.'", ")", "\n", "", "module", ".", "train", "(", "FLAGS", ".", "train_mimg", "<<", "10", ",", "FLAGS", ".", "report_kimg", ",", "train", ",", "test", ",", "logdir", ",", "FLAGS", ".", "keep_ckpts", ")", "\n", "train", ".", "stop", "(", ")", "\n"]]}