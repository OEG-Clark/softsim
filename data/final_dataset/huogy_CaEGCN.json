{"home.repos.pwc.inspect_result.huogy_CaEGCN.None.CaEGCN.GraphAttentionLayer.__init__": [[27, 41], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.init.xavier_uniform_", "torch.LeakyReLU", "torch.LeakyReLU", "torch.LeakyReLU", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.huogy_CaEGCN.None.GNN.GNNLayer.__init__"], ["def", "__init__", "(", "self", ",", "in_features", ",", "out_features", ",", "dropout", ",", "alpha", ",", "concat", "=", "True", ")", ":", "\n", "        ", "super", "(", "GraphAttentionLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dropout", "=", "dropout", "\n", "self", ".", "in_features", "=", "in_features", "\n", "self", ".", "out_features", "=", "out_features", "\n", "self", ".", "alpha", "=", "alpha", "\n", "self", ".", "concat", "=", "concat", "\n", "\n", "self", ".", "W", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "size", "=", "(", "in_features", ",", "out_features", ")", ")", ")", "\n", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "W", ".", "data", ",", "gain", "=", "1.414", ")", "\n", "self", ".", "a", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "size", "=", "(", "2", "*", "out_features", ",", "1", ")", ")", ")", "\n", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "a", ".", "data", ",", "gain", "=", "1.414", ")", "\n", "\n", "self", ".", "leakyrelu", "=", "nn", ".", "LeakyReLU", "(", "self", ".", "alpha", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.huogy_CaEGCN.None.CaEGCN.GraphAttentionLayer.forward": [[42, 59], ["torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "torch.cat().view", "CaEGCN.GraphAttentionLayer.leakyrelu", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.where", "torch.softmax", "torch.softmax", "torch.softmax", "torch.dropout", "torch.dropout", "torch.dropout", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.mm.size", "torch.mm.size", "torch.mm.size", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.elu", "torch.elu", "torch.elu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.mm.repeat().view", "torch.mm.repeat().view", "torch.mm.repeat().view", "torch.mm.repeat", "torch.mm.repeat", "torch.mm.repeat", "torch.mm.repeat", "torch.mm.repeat", "torch.mm.repeat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ",", "adj", ")", ":", "\n", "        ", "h", "=", "torch", ".", "mm", "(", "input", ",", "self", ".", "W", ")", "\n", "N", "=", "h", ".", "size", "(", ")", "[", "0", "]", "\n", "\n", "a_input", "=", "torch", ".", "cat", "(", "[", "h", ".", "repeat", "(", "1", ",", "N", ")", ".", "view", "(", "N", "*", "N", ",", "-", "1", ")", ",", "h", ".", "repeat", "(", "N", ",", "1", ")", "]", ",", "dim", "=", "1", ")", ".", "view", "(", "N", ",", "-", "1", ",", "2", "*", "self", ".", "out_features", ")", "\n", "e", "=", "self", ".", "leakyrelu", "(", "torch", ".", "matmul", "(", "a_input", ",", "self", ".", "a", ")", ".", "squeeze", "(", "2", ")", ")", "\n", "\n", "zero_vec", "=", "-", "9e15", "*", "torch", ".", "ones_like", "(", "e", ")", "\n", "attention", "=", "torch", ".", "where", "(", "adj", ">", "0", ",", "e", ",", "zero_vec", ")", "\n", "attention", "=", "F", ".", "softmax", "(", "attention", ",", "dim", "=", "1", ")", "\n", "attention", "=", "F", ".", "dropout", "(", "attention", ",", "self", ".", "dropout", ",", "training", "=", "self", ".", "training", ")", "\n", "h_prime", "=", "torch", ".", "matmul", "(", "attention", ",", "h", ")", "\n", "\n", "if", "self", ".", "concat", ":", "\n", "            ", "return", "F", ".", "elu", "(", "h_prime", ")", "\n", "", "else", ":", "\n", "            ", "return", "h_prime", "\n", "\n"]], "home.repos.pwc.inspect_result.huogy_CaEGCN.None.CaEGCN.GraphAttentionLayer.__repr__": [[60, 62], ["str", "str"], "methods", ["None"], ["", "", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__class__", ".", "__name__", "+", "' ('", "+", "str", "(", "self", ".", "in_features", ")", "+", "' -> '", "+", "str", "(", "self", ".", "out_features", ")", "+", "')'", "\n", "\n"]], "home.repos.pwc.inspect_result.huogy_CaEGCN.None.CaEGCN.SelfAttentionWide.__init__": [[66, 78], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.huogy_CaEGCN.None.GNN.GNNLayer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "emb", ",", "heads", "=", "8", ",", "mask", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "emb", "=", "emb", "\n", "self", ".", "heads", "=", "heads", "\n", "# self.mask = mask", "\n", "\n", "self", ".", "tokeys", "=", "nn", ".", "Linear", "(", "emb", ",", "emb", "*", "heads", ",", "bias", "=", "False", ")", "\n", "self", ".", "toqueries", "=", "nn", ".", "Linear", "(", "emb", ",", "emb", "*", "heads", ",", "bias", "=", "False", ")", "\n", "self", ".", "tovalues", "=", "nn", ".", "Linear", "(", "emb", ",", "emb", "*", "heads", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "unifyheads", "=", "nn", ".", "Linear", "(", "heads", "*", "emb", ",", "emb", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.huogy_CaEGCN.None.CaEGCN.SelfAttentionWide.forward": [[79, 115], ["x.size", "CaEGCN.SelfAttentionWide.tokeys().view", "CaEGCN.SelfAttentionWide.toqueries().view", "CaEGCN.SelfAttentionWide.tovalues().view", "keys.transpose().contiguous().view.transpose().contiguous().view.transpose().contiguous().view", "queries.transpose().contiguous().view.transpose().contiguous().view.transpose().contiguous().view", "values.transpose().contiguous().view.transpose().contiguous().view.transpose().contiguous().view", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.softmax", "torch.softmax", "torch.softmax", "torch.bmm().view", "torch.bmm().view", "torch.bmm().view", "torch.bmm().view", "torch.bmm().view", "torch.bmm().view", "torch.bmm().view", "torch.bmm().view", "torch.bmm().view", "out.transpose().contiguous().view.transpose().contiguous().view.transpose().contiguous().view", "CaEGCN.SelfAttentionWide.unifyheads", "keys.transpose().contiguous().view.transpose().contiguous().view.transpose", "torch.softmax.size", "CaEGCN.SelfAttentionWide.tokeys", "CaEGCN.SelfAttentionWide.toqueries", "CaEGCN.SelfAttentionWide.tovalues", "keys.transpose().contiguous().view.transpose().contiguous().view.transpose().contiguous", "queries.transpose().contiguous().view.transpose().contiguous().view.transpose().contiguous", "values.transpose().contiguous().view.transpose().contiguous().view.transpose().contiguous", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "out.transpose().contiguous().view.transpose().contiguous().view.transpose().contiguous", "keys.transpose().contiguous().view.transpose().contiguous().view.transpose", "queries.transpose().contiguous().view.transpose().contiguous().view.transpose", "values.transpose().contiguous().view.transpose().contiguous().view.transpose", "out.transpose().contiguous().view.transpose().contiguous().view.transpose"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "b", "=", "1", "\n", "t", ",", "e", "=", "x", ".", "size", "(", ")", "\n", "h", "=", "self", ".", "heads", "\n", "assert", "e", "==", "self", ".", "emb", ",", "f'Input embedding dimension {{e}} should match layer embedding dim {{self.emb}}'", "\n", "\n", "keys", "=", "self", ".", "tokeys", "(", "x", ")", ".", "view", "(", "b", ",", "t", ",", "h", ",", "e", ")", "\n", "queries", "=", "self", ".", "toqueries", "(", "x", ")", ".", "view", "(", "b", ",", "t", ",", "h", ",", "e", ")", "\n", "values", "=", "self", ".", "tovalues", "(", "x", ")", ".", "view", "(", "b", ",", "t", ",", "h", ",", "e", ")", "\n", "\n", "# dot-product attention", "\n", "\n", "# folding heads to batch dimensions", "\n", "\n", "keys", "=", "keys", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", ".", "view", "(", "b", "*", "h", ",", "t", ",", "e", ")", "\n", "queries", "=", "queries", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", ".", "view", "(", "b", "*", "h", ",", "t", ",", "e", ")", "\n", "values", "=", "values", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", ".", "view", "(", "b", "*", "h", ",", "t", ",", "e", ")", "\n", "\n", "queries", "=", "queries", "/", "(", "e", "**", "(", "1", "/", "4", ")", ")", "\n", "keys", "=", "keys", "/", "(", "e", "**", "(", "1", "/", "4", ")", ")", "\n", "\n", "dot", "=", "torch", ".", "bmm", "(", "queries", ",", "keys", ".", "transpose", "(", "1", ",", "2", ")", ")", "\n", "\n", "assert", "dot", ".", "size", "(", ")", "==", "(", "b", "*", "h", ",", "t", ",", "t", ")", "\n", "\n", "# if self.mask:", "\n", "#     mask_(dot, maskval=float('-inf'), mask_diagonal=False)", "\n", "\n", "# row wise self attention probabilities", "\n", "dot", "=", "F", ".", "softmax", "(", "dot", ",", "dim", "=", "2", ")", "\n", "\n", "out", "=", "torch", ".", "bmm", "(", "dot", ",", "values", ")", ".", "view", "(", "b", ",", "h", ",", "t", ",", "e", ")", "\n", "\n", "out", "=", "out", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", ".", "view", "(", "b", ",", "t", ",", "h", "*", "e", ")", "\n", "\n", "return", "self", ".", "unifyheads", "(", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.huogy_CaEGCN.None.CaEGCN.AE.__init__": [[125, 137], ["torch.Module.__init__", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.huogy_CaEGCN.None.GNN.GNNLayer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_enc_1", ",", "n_enc_2", ",", "n_enc_3", ",", "n_dec_1", ",", "n_dec_2", ",", "n_dec_3", ",", "\n", "n_input", ",", "n_z", ")", ":", "\n", "        ", "super", "(", "AE", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "enc_1", "=", "Linear", "(", "n_input", ",", "n_enc_1", ")", "\n", "self", ".", "enc_2", "=", "Linear", "(", "n_enc_1", ",", "n_enc_2", ")", "\n", "self", ".", "enc_3", "=", "Linear", "(", "n_enc_2", ",", "n_enc_3", ")", "\n", "self", ".", "z_layer", "=", "Linear", "(", "n_enc_3", ",", "n_z", ")", "\n", "\n", "self", ".", "dec_1", "=", "Linear", "(", "n_z", ",", "n_dec_1", ")", "\n", "self", ".", "dec_2", "=", "Linear", "(", "n_dec_1", ",", "n_dec_2", ")", "\n", "self", ".", "dec_3", "=", "Linear", "(", "n_dec_2", ",", "n_dec_3", ")", "\n", "self", ".", "x_bar_layer", "=", "Linear", "(", "n_dec_3", ",", "n_input", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.huogy_CaEGCN.None.CaEGCN.AE.forward": [[138, 150], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "CaEGCN.AE.z_layer", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "CaEGCN.AE.x_bar_layer", "CaEGCN.AE.enc_1", "CaEGCN.AE.enc_2", "CaEGCN.AE.enc_3", "CaEGCN.AE.dec_1", "CaEGCN.AE.dec_2", "CaEGCN.AE.dec_3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "enc_h1", "=", "F", ".", "relu", "(", "self", ".", "enc_1", "(", "x", ")", ")", "\n", "enc_h2", "=", "F", ".", "relu", "(", "self", ".", "enc_2", "(", "enc_h1", ")", ")", "\n", "enc_h3", "=", "F", ".", "relu", "(", "self", ".", "enc_3", "(", "enc_h2", ")", ")", "\n", "z", "=", "self", ".", "z_layer", "(", "enc_h3", ")", "\n", "\n", "dec_h1", "=", "F", ".", "relu", "(", "self", ".", "dec_1", "(", "z", ")", ")", "\n", "dec_h2", "=", "F", ".", "relu", "(", "self", ".", "dec_2", "(", "dec_h1", ")", ")", "\n", "dec_h3", "=", "F", ".", "relu", "(", "self", ".", "dec_3", "(", "dec_h2", ")", ")", "\n", "x_bar", "=", "self", ".", "x_bar_layer", "(", "dec_h3", ")", "\n", "\n", "return", "x_bar", ",", "enc_h1", ",", "enc_h2", ",", "enc_h3", ",", "z", ",", "dec_h1", ",", "dec_h2", ",", "dec_h3", "# \u5c06encoder\u548cdecoder\u90fd\u8fd4\u56de", "\n", "\n"]], "home.repos.pwc.inspect_result.huogy_CaEGCN.None.CaEGCN.SDCN.__init__": [[154, 198], ["torch.Module.__init__", "CaEGCN.AE", "CaEGCN.SDCN.ae.load_state_dict", "GNN.GNNLayer", "GNN.GNNLayer", "GNN.GNNLayer", "GNN.GNNLayer", "GNN.GNNLayer", "GNN.GNNLayer", "CaEGCN.SelfAttentionWide", "CaEGCN.SelfAttentionWide", "CaEGCN.SelfAttentionWide", "CaEGCN.SelfAttentionWide", "CaEGCN.SelfAttentionWide", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.nn.init.xavier_normal_", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.huogy_CaEGCN.None.GNN.GNNLayer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_enc_1", ",", "n_enc_2", ",", "n_enc_3", ",", "n_dec_1", ",", "n_dec_2", ",", "n_dec_3", ",", "\n", "n_input", ",", "n_z", ",", "n_clusters", ",", "v", "=", "1", ")", ":", "\n", "        ", "super", "(", "SDCN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# autoencoder for intra information", "\n", "self", ".", "ae", "=", "AE", "(", "\n", "n_enc_1", "=", "n_enc_1", ",", "\n", "n_enc_2", "=", "n_enc_2", ",", "\n", "n_enc_3", "=", "n_enc_3", ",", "\n", "n_dec_1", "=", "n_dec_1", ",", "\n", "n_dec_2", "=", "n_dec_2", ",", "\n", "n_dec_3", "=", "n_dec_3", ",", "\n", "n_input", "=", "n_input", ",", "\n", "n_z", "=", "n_z", ")", "\n", "self", ".", "ae", ".", "load_state_dict", "(", "torch", ".", "load", "(", "args", ".", "pretrain_path", ",", "map_location", "=", "'cpu'", ")", ")", "\n", "\n", "# # GCN for inter information", "\n", "# self.gnn_1 = GNNLayer(n_input, n_enc_1)", "\n", "# self.gnn_2 = GNNLayer(n_enc_1, n_enc_2)", "\n", "# self.gnn_3 = GNNLayer(n_enc_2, n_enc_3)", "\n", "# self.gnn_4 = GNNLayer(n_enc_3, n_z)", "\n", "# self.gnn_5 = GNNLayer(n_z, n_clusters)", "\n", "\n", "self", ".", "gnn_1", "=", "GNNLayer", "(", "n_input", ",", "n_enc_1", ")", "\n", "# self.gnn_2 = GNNLayer(n_enc_1, n_enc_2)#", "\n", "self", ".", "gnn_3", "=", "GNNLayer", "(", "n_enc_1", ",", "n_z", ")", "#", "\n", "# self.gnn_4 = GNNLayer(n_enc_3, n_z)#", "\n", "self", ".", "gnn_5", "=", "GNNLayer", "(", "n_z", ",", "n_clusters", ")", "\n", "self", ".", "gnn_6", "=", "GNNLayer", "(", "n_clusters", ",", "n_dec_1", ")", "\n", "self", ".", "gnn_7", "=", "GNNLayer", "(", "n_dec_1", ",", "n_dec_2", ")", "\n", "# self.gnn_8 = GNNLayer(n_dec_2, n_dec_3)", "\n", "self", ".", "gnn_9", "=", "GNNLayer", "(", "n_dec_2", ",", "n_input", ")", "\n", "self", ".", "attn1", "=", "SelfAttentionWide", "(", "n_enc_1", ")", "\n", "self", ".", "attn2", "=", "SelfAttentionWide", "(", "n_enc_2", ")", "\n", "self", ".", "attn3", "=", "SelfAttentionWide", "(", "n_enc_1", ")", "\n", "self", ".", "attn4", "=", "SelfAttentionWide", "(", "n_z", ")", "\n", "self", ".", "attn5", "=", "SelfAttentionWide", "(", "n_z", ")", "\n", "\n", "# cluster layer", "\n", "self", ".", "cluster_layer", "=", "Parameter", "(", "torch", ".", "Tensor", "(", "n_clusters", ",", "n_z", ")", ")", "\n", "torch", ".", "nn", ".", "init", ".", "xavier_normal_", "(", "self", ".", "cluster_layer", ".", "data", ")", "\n", "\n", "# degree", "\n", "self", ".", "v", "=", "v", "\n", "\n"]], "home.repos.pwc.inspect_result.huogy_CaEGCN.None.CaEGCN.SDCN.forward": [[199, 233], ["CaEGCN.SDCN.ae", "CaEGCN.SDCN.gnn_1", "CaEGCN.SDCN.attn3", "CaEGCN.SDCN.squeeze", "CaEGCN.SDCN.gnn_3", "CaEGCN.SDCN.attn5", "CaEGCN.SDCN.squeeze", "CaEGCN.SDCN.gnn_5", "torch.softmax", "torch.softmax", "torch.softmax", "CaEGCN.SDCN.gnn_6", "CaEGCN.SDCN.gnn_7", "CaEGCN.SDCN.gnn_9", "CaEGCN.dot_product_decode", "q.pow.pow.pow", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "q.pow.pow.t", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "torch.pow", "z.unsqueeze"], "methods", ["home.repos.pwc.inspect_result.huogy_CaEGCN.None.CaEGCN.dot_product_decode"], ["", "def", "forward", "(", "self", ",", "x", ",", "adj", ")", ":", "\n", "# DNN Module", "\n", "        ", "x_bar", ",", "tra1", ",", "tra2", ",", "tra3", ",", "z", ",", "dec_1", ",", "dec_2", ",", "dec_3", "=", "self", ".", "ae", "(", "x", ")", "# \u589e\u52a0\u4e86decoder\u7684\u8f93\u51fa", "\n", "# print(x.shape)", "\n", "\n", "# GCN Module", "\n", "h", "=", "self", ".", "gnn_1", "(", "x", ",", "adj", ")", "# \u76f8\u52a0", "\n", "\n", "h", "=", "self", ".", "attn3", "(", "(", "h", "+", "tra2", ")", ")", "\n", "h", "=", "h", ".", "squeeze", "(", "0", ")", "\n", "h", "=", "self", ".", "gnn_3", "(", "h", ",", "adj", ")", "\n", "\n", "# print(h.shape)", "\n", "h1", "=", "self", ".", "attn5", "(", "(", "h", "+", "z", ")", ")", "\n", "h1", "=", "h1", ".", "squeeze", "(", "0", ")", "\n", "h1", "=", "self", ".", "gnn_5", "(", "h1", ",", "adj", ",", "active", "=", "False", ")", "\n", "# h1.unsqueeze(0)", "\n", "# print(h1.shape)", "\n", "# h1 = self.attn5(h1)", "\n", "# h1 = h1.squeeze(0)", "\n", "# print(h1.shape)", "\n", "predict", "=", "F", ".", "softmax", "(", "h1", ",", "dim", "=", "1", ")", "\n", "h", "=", "self", ".", "gnn_6", "(", "h1", ",", "adj", ")", "\n", "h", "=", "self", ".", "gnn_7", "(", "h", "+", "dec_1", ",", "adj", ")", "\n", "# h = self.gnn_8(h + dec_2, adj)", "\n", "h", "=", "self", ".", "gnn_9", "(", "h", "+", "dec_3", ",", "adj", ")", "\n", "A_pred", "=", "dot_product_decode", "(", "h", ")", "\n", "\n", "# Dual Self-supervised Module", "\n", "q", "=", "1.0", "/", "(", "1.0", "+", "torch", ".", "sum", "(", "torch", ".", "pow", "(", "z", ".", "unsqueeze", "(", "1", ")", "-", "self", ".", "cluster_layer", ",", "2", ")", ",", "2", ")", "/", "self", ".", "v", ")", "\n", "q", "=", "q", ".", "pow", "(", "(", "self", ".", "v", "+", "1.0", ")", "/", "2.0", ")", "\n", "q", "=", "(", "q", ".", "t", "(", ")", "/", "torch", ".", "sum", "(", "q", ",", "1", ")", ")", ".", "t", "(", ")", "\n", "\n", "return", "x_bar", ",", "q", ",", "predict", ",", "z", ",", "h", ",", "A_pred", ",", "h1", "\n", "\n"]], "home.repos.pwc.inspect_result.huogy_CaEGCN.None.CaEGCN.dot_product_decode": [[119, 122], ["torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.matmul", "torch.matmul", "torch.matmul", "Z.t"], "function", ["None"], ["", "", "def", "dot_product_decode", "(", "Z", ")", ":", "\n", "\t", "A_pred", "=", "torch", ".", "sigmoid", "(", "torch", ".", "matmul", "(", "Z", ",", "Z", ".", "t", "(", ")", ")", ")", "\n", "return", "A_pred", "\n", "\n"]], "home.repos.pwc.inspect_result.huogy_CaEGCN.None.CaEGCN.target_distribution": [[235, 238], ["q.sum", "weight.t", "weight.sum"], "function", ["None"], ["", "", "def", "target_distribution", "(", "q", ")", ":", "\n", "    ", "weight", "=", "q", "**", "2", "/", "q", ".", "sum", "(", "0", ")", "\n", "return", "(", "weight", ".", "t", "(", ")", "/", "weight", ".", "sum", "(", "1", ")", ")", ".", "t", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.huogy_CaEGCN.None.CaEGCN.train_sdcn": [[240, 302], ["SDCN().to", "print", "torch.optim.Adam", "utils.load_graph", "adj.to.to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "sklearn.cluster.KMeans", "sklearn.cluster.KMeans.fit_predict", "torch.tensor().to", "torch.tensor().to", "torch.tensor().to", "evaluation.eva", "range", "SDCN().to.parameters", "torch.no_grad", "torch.no_grad", "torch.no_grad", "SDCN().to.ae", "z.data.cpu().numpy", "SDCN().to.", "torch.kl_div", "torch.kl_div", "torch.mse_loss", "torch.mse_loss", "torch.binary_cross_entropy", "torch.optim.Adam.zero_grad", "loss.backward", "torch.optim.Adam.step", "CaEGCN.SDCN", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.tensor", "torch.tensor", "torch.tensor", "SDCN().to.", "CaEGCN.target_distribution", "tmp_q.cpu().numpy().argmax", "pred.data.cpu().numpy().argmax", "target_distribution.data.cpu().numpy().argmax", "evaluation.eva", "evaluation.eva", "evaluation.eva", "q.log", "pred.log", "A_pred.view", "adj.to.to_dense().view", "z.data.cpu", "tmp_q.cpu().numpy", "pred.data.cpu().numpy", "target_distribution.data.cpu().numpy", "str", "str", "str", "adj.to.to_dense", "tmp_q.cpu", "pred.data.cpu", "target_distribution.data.cpu"], "function", ["home.repos.pwc.inspect_result.huogy_CaEGCN.None.evaluation.eva", "home.repos.pwc.inspect_result.huogy_CaEGCN.None.CaEGCN.target_distribution", "home.repos.pwc.inspect_result.huogy_CaEGCN.None.evaluation.eva", "home.repos.pwc.inspect_result.huogy_CaEGCN.None.evaluation.eva", "home.repos.pwc.inspect_result.huogy_CaEGCN.None.evaluation.eva"], ["", "def", "train_sdcn", "(", "dataset", ")", ":", "\n", "    ", "model", "=", "SDCN", "(", "500", ",", "500", ",", "2000", ",", "2000", ",", "500", ",", "500", ",", "\n", "n_input", "=", "args", ".", "n_input", ",", "\n", "n_z", "=", "args", ".", "n_z", ",", "\n", "n_clusters", "=", "args", ".", "n_clusters", ",", "\n", "v", "=", "1.0", ")", ".", "to", "(", "device", ")", "\n", "print", "(", "model", ")", "\n", "\n", "optimizer", "=", "Adam", "(", "model", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ")", "\n", "\n", "# KNN Graph", "\n", "adj", "=", "load_graph", "(", "args", ".", "name", ",", "args", ".", "k", ")", "\n", "# adj = adj", "\n", "# adj = adj", "\n", "adj", "=", "adj", ".", "to", "(", "device", ")", "\n", "# pos_weight = float(adj.shape[0] * adj.shape[0] - adj.sum()) / adj.sum()", "\n", "# norm = adj.shape[0] * adj.shape[0] / float((adj.shape[0] * adj.shape[0] - adj.sum()) * 2)", "\n", "# weight_mask = adj.to_dense().view(-1) == 1", "\n", "# weight_tensor = torch.ones(weight_mask.size(0))", "\n", "# weight_tensor[weight_mask] = pos_weight", "\n", "# cluster parameter initiate", "\n", "data", "=", "torch", ".", "Tensor", "(", "dataset", ".", "x", ")", ".", "to", "(", "device", ")", "\n", "y", "=", "dataset", ".", "y", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "_", ",", "_", ",", "_", ",", "_", ",", "z", ",", "_", ",", "_", ",", "_", "=", "model", ".", "ae", "(", "data", ")", "\n", "\n", "", "kmeans", "=", "KMeans", "(", "n_clusters", "=", "args", ".", "n_clusters", ",", "n_init", "=", "20", ",", "max_iter", "=", "1000", ")", "\n", "y_pred", "=", "kmeans", ".", "fit_predict", "(", "z", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "y_pred_last", "=", "y_pred", "\n", "model", ".", "cluster_layer", ".", "data", "=", "torch", ".", "tensor", "(", "kmeans", ".", "cluster_centers_", ")", ".", "to", "(", "device", ")", "\n", "eva", "(", "y", ",", "y_pred", ",", "'pae'", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "700", ")", ":", "\n", "        ", "if", "epoch", "%", "1", "==", "0", ":", "\n", "# update_interval", "\n", "            ", "_", ",", "tmp_q", ",", "pred", ",", "_", ",", "h", ",", "A_pred", ",", "h1", "=", "model", "(", "data", ",", "adj", ")", "\n", "tmp_q", "=", "tmp_q", ".", "data", "\n", "p", "=", "target_distribution", "(", "tmp_q", ")", "# \u8ba1\u7b97p\u662f\u4e00\u79cd\u81ea\u589e\u5f3a", "\n", "\n", "res1", "=", "tmp_q", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "argmax", "(", "1", ")", "# Q", "\n", "# print(type(res1))", "\n", "res2", "=", "pred", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "argmax", "(", "1", ")", "# Z", "\n", "# print(type(res2))", "\n", "res3", "=", "p", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "argmax", "(", "1", ")", "# P", "\n", "eva", "(", "y", ",", "res1", ",", "str", "(", "epoch", ")", "+", "'Q'", ")", "\n", "eva", "(", "y", ",", "res2", ",", "str", "(", "epoch", ")", "+", "'Z'", ")", "\n", "eva", "(", "y", ",", "res3", ",", "str", "(", "epoch", ")", "+", "'P'", ")", "\n", "\n", "", "x_bar", ",", "q", ",", "pred", ",", "_", ",", "h", ",", "A_pred", ",", "h1", "=", "model", "(", "data", ",", "adj", ")", "\n", "\n", "kl_loss", "=", "F", ".", "kl_div", "(", "q", ".", "log", "(", ")", ",", "p", ",", "reduction", "=", "'batchmean'", ")", "\n", "ce_loss", "=", "F", ".", "kl_div", "(", "pred", ".", "log", "(", ")", ",", "p", ",", "reduction", "=", "'batchmean'", ")", "# \u4e0e\u6982\u7387p\u6bd4\uff1f", "\n", "re_loss", "=", "F", ".", "mse_loss", "(", "x_bar", ",", "data", ")", "\n", "graph_loss", "=", "F", ".", "mse_loss", "(", "h", ",", "data", ")", "\n", "re_graphloss", "=", "F", ".", "binary_cross_entropy", "(", "A_pred", ".", "view", "(", "-", "1", ")", ",", "adj", ".", "to_dense", "(", ")", ".", "view", "(", "-", "1", ")", ")", "\n", "# , weight = weight_tensor", "\n", "\n", "loss", "=", "0.1", "*", "kl_loss", "+", "0.01", "*", "ce_loss", "+", "re_loss", "+", "0.01", "*", "re_graphloss", "+", "0.01", "*", "graph_loss", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.huogy_CaEGCN.None.GNN.GNNLayer.__init__": [[9, 15], ["torch.nn.modules.module.Module.__init__", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor"], "methods", ["home.repos.pwc.inspect_result.huogy_CaEGCN.None.GNN.GNNLayer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_features", ",", "out_features", ")", ":", "\n", "        ", "super", "(", "GNNLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_features", "=", "in_features", "\n", "self", ".", "out_features", "=", "out_features", "\n", "self", ".", "weight", "=", "Parameter", "(", "torch", ".", "FloatTensor", "(", "in_features", ",", "out_features", ")", ")", "\n", "torch", ".", "nn", ".", "init", ".", "xavier_uniform_", "(", "self", ".", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.huogy_CaEGCN.None.GNN.GNNLayer.forward": [[16, 22], ["torch.mm", "torch.mm", "torch.mm", "torch.mm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.spmm", "torch.relu", "torch.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "features", ",", "adj", ",", "active", "=", "True", ")", ":", "\n", "        ", "support", "=", "torch", ".", "mm", "(", "features", ",", "self", ".", "weight", ")", "\n", "output", "=", "torch", ".", "spmm", "(", "adj", ",", "support", ")", "\n", "if", "active", ":", "\n", "            ", "output", "=", "F", ".", "relu", "(", "output", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.huogy_CaEGCN.None.evaluation.cluster_acc": [[9, 64], ["list", "len", "list", "len", "list", "len", "numpy.zeros", "enumerate", "munkres.Munkres", "cost.__neg__().tolist.__neg__().tolist", "munkres.Munkres.compute", "numpy.zeros", "enumerate", "sklearn.metrics.accuracy_score", "sklearn.metrics.f1_score", "sklearn.metrics.precision_score", "sklearn.metrics.recall_score", "sklearn.metrics.f1_score", "sklearn.metrics.precision_score", "sklearn.metrics.recall_score", "numpy.min", "set", "set", "set", "print", "enumerate", "len", "len", "cost.__neg__().tolist.__neg__", "enumerate", "enumerate"], "function", ["None"], ["def", "cluster_acc", "(", "y_true", ",", "y_pred", ")", ":", "\n", "    ", "y_true", "=", "y_true", "-", "np", ".", "min", "(", "y_true", ")", "\n", "\n", "l1", "=", "list", "(", "set", "(", "y_true", ")", ")", "\n", "numclass1", "=", "len", "(", "l1", ")", "\n", "\n", "l2", "=", "list", "(", "set", "(", "y_pred", ")", ")", "\n", "numclass2", "=", "len", "(", "l2", ")", "\n", "\n", "ind", "=", "0", "\n", "if", "numclass1", "!=", "numclass2", ":", "\n", "        ", "for", "i", "in", "l1", ":", "\n", "            ", "if", "i", "in", "l2", ":", "\n", "                ", "pass", "\n", "", "else", ":", "\n", "                ", "y_pred", "[", "ind", "]", "=", "i", "\n", "ind", "+=", "1", "\n", "\n", "", "", "", "l2", "=", "list", "(", "set", "(", "y_pred", ")", ")", "\n", "numclass2", "=", "len", "(", "l2", ")", "\n", "\n", "if", "numclass1", "!=", "numclass2", ":", "\n", "        ", "print", "(", "'error'", ")", "\n", "return", "\n", "\n", "", "cost", "=", "np", ".", "zeros", "(", "(", "numclass1", ",", "numclass2", ")", ",", "dtype", "=", "int", ")", "\n", "for", "i", ",", "c1", "in", "enumerate", "(", "l1", ")", ":", "\n", "        ", "mps", "=", "[", "i1", "for", "i1", ",", "e1", "in", "enumerate", "(", "y_true", ")", "if", "e1", "==", "c1", "]", "\n", "for", "j", ",", "c2", "in", "enumerate", "(", "l2", ")", ":", "\n", "            ", "mps_d", "=", "[", "i1", "for", "i1", "in", "mps", "if", "y_pred", "[", "i1", "]", "==", "c2", "]", "\n", "cost", "[", "i", "]", "[", "j", "]", "=", "len", "(", "mps_d", ")", "\n", "\n", "# match two clustering results by Munkres algorithm", "\n", "", "", "m", "=", "Munkres", "(", ")", "\n", "cost", "=", "cost", ".", "__neg__", "(", ")", ".", "tolist", "(", ")", "\n", "indexes", "=", "m", ".", "compute", "(", "cost", ")", "\n", "\n", "# get the match results", "\n", "new_predict", "=", "np", ".", "zeros", "(", "len", "(", "y_pred", ")", ")", "\n", "for", "i", ",", "c", "in", "enumerate", "(", "l1", ")", ":", "\n", "# correponding label in l2:", "\n", "        ", "c2", "=", "l2", "[", "indexes", "[", "i", "]", "[", "1", "]", "]", "\n", "\n", "# ai is the index with label==c2 in the pred_label list", "\n", "ai", "=", "[", "ind", "for", "ind", ",", "elm", "in", "enumerate", "(", "y_pred", ")", "if", "elm", "==", "c2", "]", "\n", "new_predict", "[", "ai", "]", "=", "c", "\n", "\n", "", "acc", "=", "metrics", ".", "accuracy_score", "(", "y_true", ",", "new_predict", ")", "\n", "f1_macro", "=", "metrics", ".", "f1_score", "(", "y_true", ",", "new_predict", ",", "average", "=", "'macro'", ")", "\n", "precision_macro", "=", "metrics", ".", "precision_score", "(", "y_true", ",", "new_predict", ",", "average", "=", "'macro'", ")", "\n", "recall_macro", "=", "metrics", ".", "recall_score", "(", "y_true", ",", "new_predict", ",", "average", "=", "'macro'", ")", "\n", "f1_micro", "=", "metrics", ".", "f1_score", "(", "y_true", ",", "new_predict", ",", "average", "=", "'micro'", ")", "\n", "precision_micro", "=", "metrics", ".", "precision_score", "(", "y_true", ",", "new_predict", ",", "average", "=", "'micro'", ")", "\n", "recall_micro", "=", "metrics", ".", "recall_score", "(", "y_true", ",", "new_predict", ",", "average", "=", "'micro'", ")", "\n", "return", "acc", ",", "f1_macro", "\n", "\n"]], "home.repos.pwc.inspect_result.huogy_CaEGCN.None.evaluation.eva": [[66, 73], ["evaluation.cluster_acc", "sklearn.metrics.cluster.normalized_mutual_info_score", "sklearn.metrics.adjusted_rand_score", "print"], "function", ["home.repos.pwc.inspect_result.huogy_CaEGCN.None.evaluation.cluster_acc"], ["", "def", "eva", "(", "y_true", ",", "y_pred", ",", "epoch", "=", "0", ")", ":", "\n", "    ", "acc", ",", "f1", "=", "cluster_acc", "(", "y_true", ",", "y_pred", ")", "\n", "nmi", "=", "nmi_score", "(", "y_true", ",", "y_pred", ")", "\n", "# nmi = nmi_score(y_true, y_pred, average_method='arithmetic')", "\n", "ari", "=", "ari_score", "(", "y_true", ",", "y_pred", ")", "\n", "print", "(", "epoch", ",", "':acc {:.4f}'", ".", "format", "(", "acc", ")", ",", "', nmi {:.4f}'", ".", "format", "(", "nmi", ")", ",", "', ari {:.4f}'", ".", "format", "(", "ari", ")", ",", "\n", "', f1 {:.4f}'", ".", "format", "(", "f1", ")", ")", "\n", "\n"]]}