{"home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.None.config.Config.__init__": [[50, 62], ["tensorflow.GPUOptions", "tensorflow.ConfigProto", "config.Config.compile"], "methods", ["home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.config.Config.compile"], ["def", "__init__", "(", "self", ",", "gpu", ",", "root_dir", ",", "root_dir_val", ",", "mode", ")", ":", "\n", "        ", "\"\"\"Set values of computed attributes.\"\"\"", "\n", "self", ".", "MODE", "=", "mode", "\n", "self", ".", "GPU_USAGE", "=", "gpu", "\n", "self", ".", "GPU_OPTIONS", "=", "tf", ".", "GPUOptions", "(", "per_process_gpu_memory_fraction", "=", "1", ",", "visible_device_list", "=", "self", ".", "GPU_USAGE", ",", "allow_growth", "=", "True", ")", "\n", "self", ".", "GPU_CONFIG", "=", "tf", ".", "ConfigProto", "(", "log_device_placement", "=", "self", ".", "LOG_DEVICE_PLACEMENT", ",", "gpu_options", "=", "self", ".", "GPU_OPTIONS", ")", "\n", "self", ".", "LI_DATA_DIR", "=", "[", "root_dir", "+", "'live/*'", "]", "\n", "self", ".", "SP_DATA_DIR", "=", "[", "root_dir", "+", "'spoof/*'", "]", "\n", "if", "root_dir_val", ":", "\n", "            ", "self", ".", "LI_DATA_DIR_VAL", "=", "[", "root_dir_val", "+", "'live/*'", "]", "\n", "self", ".", "SP_DATA_DIR_VAL", "=", "[", "root_dir_val", "+", "'spoof/*'", "]", "\n", "", "self", ".", "compile", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.None.config.Config.compile": [[63, 74], ["print", "dir", "print", "os.path.isdir", "os.mkdir", "os.path.isdir", "os.mkdir", "a[].isupper", "print", "a.startswith", "callable", "getattr", "getattr"], "methods", ["None"], ["", "def", "compile", "(", "self", ")", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "isdir", "(", "self", ".", "LOG_DIR", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "self", ".", "LOG_DIR", ")", "\n", "", "if", "not", "os", ".", "path", ".", "isdir", "(", "self", ".", "LOG_DIR", "+", "'/test'", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "self", ".", "LOG_DIR", "+", "'/test'", ")", "\n", "", "\"\"\"Display Configuration values.\"\"\"", "\n", "print", "(", "\"\\nConfigurations:\"", ")", "\n", "for", "a", "in", "dir", "(", "self", ")", ":", "\n", "            ", "if", "not", "a", ".", "startswith", "(", "\"__\"", ")", "and", "not", "callable", "(", "getattr", "(", "self", ",", "a", ")", ")", "and", "a", "[", "0", "]", ".", "isupper", "(", ")", ":", "\n", "                ", "print", "(", "\"{:30} {}\"", ".", "format", "(", "a", ",", "getattr", "(", "self", ",", "a", ")", ")", ")", "\n", "", "", "print", "(", "\"\\n\"", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.None.train._step": [[29, 126], ["tensorflow.train.get_or_create_global_step", "tensorflow.transpose", "tensorflow.reshape", "tensorflow.image.resize_images", "tensorflow.image.resize_images", "tensorflow.reshape", "model.model.Gen", "model.warp.warping", "tensorflow.concat", "model.model.Disc_s", "tensorflow.image.resize_images", "tensorflow.image.resize_images", "tensorflow.concat", "model.model.Disc_s", "tensorflow.image.resize_images", "tensorflow.image.resize_images", "tensorflow.concat", "model.model.Disc_s", "tensorflow.cond", "tensorflow.cond", "tensorflow.cond", "tensorflow.stop_gradient", "tensorflow.stop_gradient", "tensorflow.greater", "tensorflow.cond", "model.model.Gen", "tensorflow.split", "tensorflow.split", "tensorflow.split", "tensorflow.split", "tensorflow.split", "tensorflow.split", "tensorflow.split", "model.loss.l1_loss", "tensorflow.cond", "model.utils.plotResults", "tensorflow.random.uniform", "tensorflow.random.uniform", "tensorflow.random.uniform", "tensorflow.random.uniform", "tensorflow.greater", "tensorflow.greater", "tensorflow.greater", "tensorflow.concat", "tensorflow.concat", "model.loss.l1_loss", "model.loss.l1_loss", "model.loss.l2_loss", "model.loss.l2_loss", "model.loss.l2_loss", "model.loss.l1_loss", "model.loss.l1_loss", "tensorflow.stop_gradient", "model.model.get_train_op", "model.model.get_train_op", "tensorflow.image.resize_images", "tensorflow.image.resize_images", "tensorflow.image.resize_images", "tensorflow.image.resize_images", "tensorflow.image.resize_images", "tensorflow.random.uniform", "tensorflow.image.resize_images", "model.loss.l2_loss", "model.loss.l2_loss", "model.loss.l2_loss", "model.loss.l2_loss", "tensorflow.random.uniform", "tensorflow.random.uniform", "tensorflow.random.uniform", "model.loss.l2_loss", "model.loss.l2_loss", "model.loss.l2_loss", "model.loss.l2_loss", "model.loss.l2_loss", "model.loss.l2_loss", "model.loss.l2_loss", "model.loss.l2_loss", "model.loss.l2_loss", "model.loss.l2_loss", "model.loss.l2_loss", "model.loss.l2_loss", "model.loss.l2_loss", "model.loss.l2_loss", "model.loss.l2_loss", "model.loss.l2_loss", "model.loss.l2_loss", "model.loss.l2_loss", "model.loss.l2_loss"], "function", ["home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.model.Gen", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.warp.warping", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.model.Disc_s", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.model.Disc_s", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.model.Disc_s", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.model.Gen", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.loss.l1_loss", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.plotResults", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.loss.l1_loss", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.loss.l1_loss", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.loss.l2_loss", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.loss.l2_loss", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.loss.l2_loss", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.loss.l1_loss", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.loss.l1_loss", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.model.get_train_op", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.model.get_train_op", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.loss.l2_loss", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.loss.l2_loss", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.loss.l2_loss", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.loss.l2_loss", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.loss.l2_loss", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.loss.l2_loss", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.loss.l2_loss", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.loss.l2_loss", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.loss.l2_loss", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.loss.l2_loss", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.loss.l2_loss", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.loss.l2_loss", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.loss.l2_loss", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.loss.l2_loss", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.loss.l2_loss", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.loss.l2_loss", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.loss.l2_loss", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.loss.l2_loss", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.loss.l2_loss", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.loss.l2_loss", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.loss.l2_loss", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.loss.l2_loss", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.loss.l2_loss"], ["def", "_step", "(", "config", ",", "data_batch", ",", "training_nn", ")", ":", "\n", "  ", "global_step", "=", "tf", ".", "train", ".", "get_or_create_global_step", "(", ")", "\n", "bsize", "=", "config", ".", "BATCH_SIZE", "\n", "imsize", "=", "config", ".", "IMAGE_SIZE", "\n", "im2size", "=", "160", "\n", "im3size", "=", "40", "\n", "# Get images and labels.", "\n", "img", ",", "reg", "=", "data_batch", ".", "nextit", "\n", "img", "=", "tf", ".", "transpose", "(", "img", ",", "perm", "=", "[", "1", ",", "0", ",", "2", ",", "3", ",", "4", "]", ")", "\n", "img", "=", "tf", ".", "reshape", "(", "img", ",", "[", "bsize", "*", "2", ",", "imsize", ",", "imsize", ",", "3", "]", ")", "\n", "img2", "=", "tf", ".", "image", ".", "resize_images", "(", "img", ",", "[", "im2size", ",", "im2size", "]", ")", "\n", "img3", "=", "tf", ".", "image", ".", "resize_images", "(", "img", ",", "[", "im3size", ",", "im3size", "]", ")", "\n", "reg", "=", "tf", ".", "reshape", "(", "reg", ",", "[", "bsize", ",", "imsize", ",", "imsize", ",", "3", "]", ")", "\n", "\n", "################################### STEP 1 ##################################################################", "\n", "M", ",", "s", ",", "b", ",", "C", ",", "T", "=", "Gen", "(", "img", ",", "training_nn", "=", "training_nn", ",", "scope", "=", "'STDN'", ")", "\n", "\n", "################################### STEP 2 ##################################################################", "\n", "recon1", "=", "(", "1", "-", "s", ")", "*", "img", "-", "b", "-", "tf", ".", "image", ".", "resize_images", "(", "C", ",", "[", "imsize", ",", "imsize", "]", ")", "-", "T", "\n", "trace", "=", "img", "-", "recon1", "\n", "trace_warp", "=", "warping", "(", "trace", "[", "bsize", ":", ",", "...", "]", ",", "reg", ",", "imsize", ")", "\n", "synth1", "=", "img", "[", ":", "bsize", ",", "...", "]", "+", "trace_warp", "\n", "img_d1", "=", "tf", ".", "concat", "(", "[", "img", ",", "recon1", "[", "bsize", ":", ",", "...", "]", ",", "synth1", "]", ",", "0", ")", "\n", "d1l", ",", "d1s", "=", "Disc_s", "(", "img_d1", ",", "training_nn", "=", "training_nn", ",", "scope", "=", "'Disc/d1'", ")", "\n", "\n", "recon2", "=", "tf", ".", "image", ".", "resize_images", "(", "recon1", ",", "[", "im2size", ",", "im2size", "]", ")", "\n", "synth2", "=", "tf", ".", "image", ".", "resize_images", "(", "synth1", ",", "[", "im2size", ",", "im2size", "]", ")", "\n", "img_d2", "=", "tf", ".", "concat", "(", "[", "img2", ",", "recon2", "[", "bsize", ":", ",", "...", "]", ",", "synth2", "]", ",", "0", ")", "\n", "d2l", ",", "d2s", "=", "Disc_s", "(", "img_d2", ",", "training_nn", "=", "training_nn", ",", "scope", "=", "'Disc/d2'", ")", "\n", "\n", "recon3", "=", "tf", ".", "image", ".", "resize_images", "(", "recon1", ",", "[", "im3size", ",", "im3size", "]", ")", "\n", "synth3", "=", "tf", ".", "image", ".", "resize_images", "(", "synth1", ",", "[", "im3size", ",", "im3size", "]", ")", "\n", "img_d3", "=", "tf", ".", "concat", "(", "[", "img3", ",", "recon3", "[", "bsize", ":", ",", "...", "]", ",", "synth3", "]", ",", "0", ")", "\n", "d3l", ",", "d3s", "=", "Disc_s", "(", "img_d3", ",", "training_nn", "=", "training_nn", ",", "scope", "=", "'Disc/d3'", ")", "\n", "\n", "################################### STEP 3 ##################################################################", "\n", "s_hard", "=", "s", "*", "tf", ".", "random", ".", "uniform", "(", "[", "bsize", "*", "2", ",", "1", ",", "1", ",", "1", "]", ",", "minval", "=", "0.1", ",", "maxval", "=", "0.8", ")", "\n", "b_hard", "=", "b", "*", "tf", ".", "random", ".", "uniform", "(", "[", "bsize", "*", "2", ",", "1", ",", "1", ",", "1", "]", ",", "minval", "=", "0.1", ",", "maxval", "=", "0.8", ")", "\n", "C_hard", "=", "C", "*", "tf", ".", "random", ".", "uniform", "(", "[", "bsize", "*", "2", ",", "1", ",", "1", ",", "1", "]", ",", "minval", "=", "0.1", ",", "maxval", "=", "0.8", ")", "\n", "T_hard", "=", "T", "*", "tf", ".", "random", ".", "uniform", "(", "[", "bsize", "*", "2", ",", "1", ",", "1", ",", "1", "]", ",", "minval", "=", "0.1", ",", "maxval", "=", "0.8", ")", "\n", "recon_hard1", "=", "(", "1", "-", "s_hard", ")", "*", "img", "-", "b", "-", "tf", ".", "image", ".", "resize_images", "(", "C", ",", "[", "imsize", ",", "imsize", "]", ")", "-", "T", "\n", "recon_hard2", "=", "(", "1", "-", "s", ")", "*", "img", "-", "b_hard", "-", "tf", ".", "image", ".", "resize_images", "(", "C", ",", "[", "imsize", ",", "imsize", "]", ")", "-", "T", "\n", "recon_hard3", "=", "(", "1", "-", "s", ")", "*", "img", "-", "b", "-", "tf", ".", "image", ".", "resize_images", "(", "C_hard", ",", "[", "imsize", ",", "imsize", "]", ")", "-", "T", "\n", "recon_hard4", "=", "(", "1", "-", "s", ")", "*", "img", "-", "b", "-", "tf", ".", "image", ".", "resize_images", "(", "C", ",", "[", "imsize", ",", "imsize", "]", ")", "-", "T_hard", "\n", "recon_hard_s1", "=", "tf", ".", "cond", "(", "tf", ".", "greater", "(", "tf", ".", "random", ".", "uniform", "(", "[", "1", "]", ",", "0", ",", "1", ")", "[", "0", "]", ",", "0.5", ")", ",", "lambda", ":", "recon_hard1", ",", "lambda", ":", "recon_hard2", ")", "\n", "recon_hard_s2", "=", "tf", ".", "cond", "(", "tf", ".", "greater", "(", "tf", ".", "random", ".", "uniform", "(", "[", "1", "]", ",", "0", ",", "1", ")", "[", "0", "]", ",", "0.5", ")", ",", "lambda", ":", "recon_hard3", ",", "lambda", ":", "recon_hard4", ")", "\n", "recon_hard", "=", "tf", ".", "cond", "(", "tf", ".", "greater", "(", "tf", ".", "random", ".", "uniform", "(", "[", "1", "]", ",", "0", ",", "1", ")", "[", "0", "]", ",", "0.5", ")", ",", "lambda", ":", "recon_hard_s1", ",", "lambda", ":", "recon_hard_s2", ")", "\n", "img_a1", "=", "tf", ".", "stop_gradient", "(", "tf", ".", "concat", "(", "[", "img", "[", ":", "bsize", ",", "...", "]", ",", "recon_hard", "[", "bsize", ":", ",", "...", "]", "]", ",", "axis", "=", "0", ")", ")", "\n", "img_a2", "=", "tf", ".", "stop_gradient", "(", "tf", ".", "concat", "(", "[", "img", "[", ":", "bsize", ",", "...", "]", ",", "synth1", "]", ",", "axis", "=", "0", ")", ")", "\n", "dec", "=", "tf", ".", "greater", "(", "tf", ".", "random", ".", "uniform", "(", "[", "1", "]", ",", "0", ",", "1", ")", "[", "0", "]", ",", "0.5", ")", "\n", "img_a", "=", "tf", ".", "cond", "(", "dec", ",", "lambda", ":", "img_a1", ",", "lambda", ":", "img_a2", ")", "\n", "M_a", ",", "s_a", ",", "b_a", ",", "C_a", ",", "T_a", "=", "Gen", "(", "img_a", ",", "training_nn", "=", "training_nn", ",", "scope", "=", "'STDN'", ")", "\n", "traces_a", "=", "s_a", "*", "img", "+", "b_a", "+", "tf", ".", "image", ".", "resize_images", "(", "C_a", ",", "[", "imsize", ",", "imsize", "]", ")", "+", "T_a", "\n", "\n", "################################### Losses ##################################################################", "\n", "d1_rl", ",", "_", ",", "d1_sl", ",", "_", "=", "tf", ".", "split", "(", "d1l", ",", "4", ")", "\n", "d2_rl", ",", "_", ",", "d2_sl", ",", "_", "=", "tf", ".", "split", "(", "d2l", ",", "4", ")", "\n", "d3_rl", ",", "_", ",", "d3_sl", ",", "_", "=", "tf", ".", "split", "(", "d3l", ",", "4", ")", "\n", "_", ",", "d1_rs", ",", "_", ",", "d1_ss", "=", "tf", ".", "split", "(", "d1s", ",", "4", ")", "\n", "_", ",", "d2_rs", ",", "_", ",", "d2_ss", "=", "tf", ".", "split", "(", "d2s", ",", "4", ")", "\n", "_", ",", "d3_rs", ",", "_", ",", "d3_ss", "=", "tf", ".", "split", "(", "d3s", ",", "4", ")", "\n", "# loss for step 1.", "\n", "M_li", ",", "M_sp", "=", "tf", ".", "split", "(", "M", ",", "2", ",", "0", ")", "\n", "esr_loss", "=", "l1_loss", "(", "M_li", ",", "-", "1", ")", "+", "l1_loss", "(", "M_sp", ",", "1", ")", "\n", "gan_loss", "=", "l2_loss", "(", "d1_sl", ",", "1", ")", "+", "l2_loss", "(", "d2_sl", ",", "1", ")", "+", "l2_loss", "(", "d3_sl", ",", "1", ")", "+", "l2_loss", "(", "d1_ss", ",", "1", ")", "+", "l2_loss", "(", "d2_ss", ",", "1", ")", "+", "l2_loss", "(", "d3_ss", ",", "1", ")", "\n", "reg_loss_li", "=", "l2_loss", "(", "s", "[", ":", "bsize", ",", "...", "]", ",", "0", ")", "+", "l2_loss", "(", "b", "[", ":", "bsize", ",", "...", "]", ",", "0", ")", "+", "l2_loss", "(", "C", "[", ":", "bsize", ",", "...", "]", ",", "0", ")", "+", "l2_loss", "(", "T", "[", ":", "bsize", ",", "...", "]", ",", "0", ")", "\n", "reg_loss_sp", "=", "l2_loss", "(", "s", "[", "bsize", ":", ",", "...", "]", ",", "0", ")", "+", "l2_loss", "(", "b", "[", "bsize", ":", ",", "...", "]", ",", "0", ")", "+", "l2_loss", "(", "C", "[", "bsize", ":", ",", "...", "]", ",", "0", ")", "+", "l2_loss", "(", "T", "[", "bsize", ":", ",", "...", "]", ",", "0", ")", "\n", "reg_loss", "=", "reg_loss_li", "*", "10", "+", "reg_loss_sp", "*", "1e-4", "\n", "g_loss", "=", "esr_loss", "*", "50", "+", "gan_loss", "+", "reg_loss", "\n", "\n", "# loss for step2", "\n", "d_loss", "=", "(", "l2_loss", "(", "d1_rl", ",", "1", ")", "+", "l2_loss", "(", "d2_rl", ",", "1", ")", "+", "l2_loss", "(", "d3_rl", ",", "1", ")", "+", "l2_loss", "(", "d1_rs", ",", "1", ")", "+", "l2_loss", "(", "d2_rs", ",", "1", ")", "+", "l2_loss", "(", "d3_rs", ",", "1", ")", "+", "l2_loss", "(", "d1_sl", ",", "0", ")", "+", "l2_loss", "(", "d2_sl", ",", "0", ")", "+", "l2_loss", "(", "d3_sl", ",", "0", ")", "+", "l2_loss", "(", "d1_ss", ",", "0", ")", "+", "l2_loss", "(", "d2_ss", ",", "0", ")", "+", "l2_loss", "(", "d3_ss", ",", "0", ")", ")", "/", "4", "\n", "\n", "# loss for step3.", "\n", "esr_loss_a", "=", "l1_loss", "(", "M_a", "[", ":", "bsize", ",", "...", "]", ",", "-", "1", ")", "+", "l1_loss", "(", "M_a", "[", "bsize", ":", ",", "...", "]", ",", "1", ")", "\n", "pixel_loss", "=", "l1_loss", "(", "traces_a", "[", ":", "bsize", ",", "...", "]", ",", "tf", ".", "stop_gradient", "(", "trace_warp", ")", ")", "\n", "a_loss_1", "=", "esr_loss_a", "*", "5", "+", "pixel_loss", "*", "0.0", "#  #", "\n", "a_loss_2", "=", "esr_loss_a", "*", "5", "+", "pixel_loss", "*", "0.1", "#  #", "\n", "a_loss", "=", "tf", ".", "cond", "(", "dec", ",", "lambda", ":", "a_loss_1", ",", "lambda", ":", "a_loss_2", ")", "\n", "\n", "if", "training_nn", ":", "\n", "    ", "g_op", "=", "get_train_op", "(", "g_loss", "+", "a_loss", ",", "global_step", ",", "config", ",", "\"STDN\"", ")", "\n", "d_op", "=", "get_train_op", "(", "d_loss", ",", "global_step", ",", "config", ",", "\"Disc\"", ")", "\n", "", "else", ":", "\n", "    ", "g_op", "=", "None", "\n", "d_op", "=", "None", "\n", "\n", "# log info", "\n", "", "losses", "=", "[", "g_loss", ",", "d_loss", ",", "a_loss", "]", "\n", "fig", "=", "[", "img", ",", "(", "M", "+", "1", ")", "/", "2", ",", "s", "*", "5", ",", "b", "*", "5", ",", "C", "*", "5", ",", "T", "*", "5", ",", "recon1", ",", "img_a", "]", "\n", "fig", "=", "plotResults", "(", "fig", ")", "\n", "\n", "return", "losses", ",", "g_op", ",", "d_op", ",", "fig", "\n", "\n"]], "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.None.train.main": [[128, 208], ["model.config.Config", "model.dataset.Dataset", "model.dataset.Dataset", "train._step", "train._step", "tensorflow.train.Saver", "tensorflow.Session", "tensorflow.train.get_checkpoint_state", "model.utils.Error", "range", "tf.train.Saver.restore", "print", "print", "print", "tensorflow.initializers.global_variables", "sess.run", "print", "print", "print", "int", "time.time", "range", "tf.train.Saver.save", "print", "range", "print", "model.utils.Error.reset", "[].split", "print", "sess.run", "print", "str", "sess.run", "sess.run", "cv2.imwrite", "cv2.imwrite", "model.utils.Error.", "model.utils.Error.", "time.time", "tf.train.get_checkpoint_state.model_checkpoint_path.split", "print_list.items", "str", "print_list.items", "str", "str", "str", "str", "str", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.None.test._step", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.None.test._step", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Error.reset"], ["", "def", "main", "(", "argv", "=", "None", ")", ":", "\n", "# Configurations", "\n", "  ", "config", "=", "Config", "(", "gpu", "=", "'1'", ",", "\n", "root_dir", "=", "'./data/train/'", ",", "\n", "root_dir_val", "=", "'./data/val/'", ",", "\n", "mode", "=", "'training'", ")", "\n", "\n", "# Create data feeding pipeline.", "\n", "dataset_train", "=", "Dataset", "(", "config", ",", "'train'", ")", "\n", "dataset_val", "=", "Dataset", "(", "config", ",", "'val'", ")", "\n", "\n", "# Train Graph", "\n", "losses", ",", "g_op", ",", "d_op", ",", "fig", "=", "_step", "(", "config", ",", "dataset_train", ",", "training_nn", "=", "True", ")", "\n", "losses_val", ",", "_", ",", "_", ",", "fig_val", "=", "_step", "(", "config", ",", "dataset_val", ",", "training_nn", "=", "False", ")", "\n", "\n", "# Add ops to save and restore all the variables.", "\n", "saver", "=", "tf", ".", "train", ".", "Saver", "(", "max_to_keep", "=", "50", ",", ")", "\n", "with", "tf", ".", "Session", "(", "config", "=", "config", ".", "GPU_CONFIG", ")", "as", "sess", ":", "\n", "# Restore the model", "\n", "    ", "ckpt", "=", "tf", ".", "train", ".", "get_checkpoint_state", "(", "config", ".", "LOG_DIR", ")", "\n", "if", "ckpt", "and", "ckpt", ".", "model_checkpoint_path", ":", "\n", "      ", "saver", ".", "restore", "(", "sess", ",", "ckpt", ".", "model_checkpoint_path", ")", "\n", "last_epoch", "=", "ckpt", ".", "model_checkpoint_path", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ".", "split", "(", "'-'", ")", "[", "-", "1", "]", "\n", "print", "(", "'**********************************************************'", ")", "\n", "print", "(", "'Restore from Epoch '", "+", "str", "(", "last_epoch", ")", ")", "\n", "print", "(", "'**********************************************************'", ")", "\n", "", "else", ":", "\n", "      ", "init", "=", "tf", ".", "initializers", ".", "global_variables", "(", ")", "\n", "last_epoch", "=", "0", "\n", "sess", ".", "run", "(", "init", ")", "\n", "print", "(", "'**********************************************************'", ")", "\n", "print", "(", "'Train from scratch.'", ")", "\n", "print", "(", "'**********************************************************'", ")", "\n", "\n", "", "avg_loss", "=", "Error", "(", ")", "\n", "print_list", "=", "{", "}", "\n", "for", "epoch", "in", "range", "(", "int", "(", "last_epoch", ")", ",", "config", ".", "MAX_EPOCH", ")", ":", "\n", "      ", "start", "=", "time", ".", "time", "(", ")", "\n", "# Train one epoch", "\n", "for", "step", "in", "range", "(", "config", ".", "STEPS_PER_EPOCH", ")", ":", "\n", "        ", "if", "step", "%", "config", ".", "G_D_RATIO", "==", "0", ":", "\n", "          ", "_losses", "=", "sess", ".", "run", "(", "losses", "+", "[", "g_op", ",", "d_op", ",", "fig", "]", ")", "\n", "", "else", ":", "\n", "          ", "_losses", "=", "sess", ".", "run", "(", "losses", "+", "[", "g_op", ",", "fig", "]", ")", "\n", "\n", "# Logging", "\n", "", "print_list", "[", "'g_loss'", "]", "=", "_losses", "[", "0", "]", "\n", "print_list", "[", "'d_loss'", "]", "=", "_losses", "[", "1", "]", "\n", "print_list", "[", "'a_loss'", "]", "=", "_losses", "[", "2", "]", "\n", "display_list", "=", "[", "'Epoch '", "+", "str", "(", "epoch", "+", "1", ")", "+", "'-'", "+", "str", "(", "step", "+", "1", ")", "+", "'/'", "+", "str", "(", "config", ".", "STEPS_PER_EPOCH", ")", "+", "':'", "]", "+", "[", "avg_loss", "(", "x", ")", "for", "x", "in", "print_list", ".", "items", "(", ")", "]", "\n", "print", "(", "*", "display_list", "+", "[", "'          '", "]", ",", "end", "=", "'\\r'", ")", "\n", "# Visualization", "\n", "if", "step", "%", "config", ".", "LOG_FR_TRAIN", "==", "0", ":", "\n", "          ", "fname", "=", "config", ".", "LOG_DIR", "+", "'/Epoch-'", "+", "str", "(", "epoch", "+", "1", ")", "+", "'-'", "+", "str", "(", "step", "+", "1", ")", "+", "'.png'", "\n", "cv2", ".", "imwrite", "(", "fname", ",", "_losses", "[", "-", "1", "]", ")", "\n", "\n", "# Model saving", "\n", "", "", "saver", ".", "save", "(", "sess", ",", "config", ".", "LOG_DIR", "+", "'/ckpt'", ",", "global_step", "=", "epoch", "+", "1", ")", "\n", "print", "(", "'\\n'", ",", "end", "=", "'\\r'", ")", "\n", "\n", "# Validate one epoch", "\n", "for", "step", "in", "range", "(", "config", ".", "STEPS_PER_EPOCH_VAL", ")", ":", "\n", "        ", "_losses", "=", "sess", ".", "run", "(", "losses_val", "+", "[", "fig_val", "]", ")", "\n", "\n", "# Logging", "\n", "print_list", "[", "'g_loss'", "]", "=", "_losses", "[", "0", "]", "\n", "print_list", "[", "'d_loss'", "]", "=", "_losses", "[", "1", "]", "\n", "print_list", "[", "'a_loss'", "]", "=", "_losses", "[", "2", "]", "\n", "display_list", "=", "[", "'Epoch '", "+", "str", "(", "epoch", "+", "1", ")", "+", "'-Val-'", "+", "str", "(", "step", "+", "1", ")", "+", "'/'", "+", "str", "(", "config", ".", "STEPS_PER_EPOCH_VAL", ")", "+", "':'", "]", "+", "[", "avg_loss", "(", "x", ",", "val", "=", "1", ")", "for", "x", "in", "print_list", ".", "items", "(", ")", "]", "\n", "print", "(", "*", "display_list", "+", "[", "'          '", "]", ",", "end", "=", "'\\r'", ")", "\n", "# Visualization", "\n", "if", "step", "%", "config", ".", "LOG_FR_TEST", "==", "0", ":", "\n", "            ", "fname", "=", "config", ".", "LOG_DIR", "+", "'/Epoch-'", "+", "str", "(", "epoch", "+", "1", ")", "+", "'-Val-'", "+", "str", "(", "step", "+", "1", ")", "+", "'.png'", "\n", "cv2", ".", "imwrite", "(", "fname", ",", "_losses", "[", "-", "1", "]", ")", "\n", "\n", "# time of one epoch", "\n", "", "", "print", "(", "'\\n    Time taken for epoch {} is {:3g} sec'", ".", "format", "(", "epoch", "+", "1", ",", "time", ".", "time", "(", ")", "-", "start", ")", ")", "\n", "avg_loss", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.None.test._step": [[24, 42], ["tensorflow.train.get_or_create_global_step", "tensorflow.reshape", "model.model.Gen", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.reduce_mean"], "function", ["home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.model.Gen"], ["def", "_step", "(", "config", ",", "data_batch", ",", "training_nn", ")", ":", "\n", "  ", "global_step", "=", "tf", ".", "train", ".", "get_or_create_global_step", "(", ")", "\n", "bsize", "=", "config", ".", "BATCH_SIZE", "\n", "imsize", "=", "config", ".", "IMAGE_SIZE", "\n", "\n", "# Get images and labels for CNN.", "\n", "img", ",", "im_name", "=", "data_batch", ".", "nextit", "\n", "img", "=", "tf", ".", "reshape", "(", "img", ",", "[", "bsize", ",", "imsize", ",", "imsize", ",", "3", "]", ")", "\n", "\n", "# Forward the Generator", "\n", "M", ",", "s", ",", "b", ",", "C", ",", "T", "=", "Gen", "(", "img", ",", "training_nn", "=", "training_nn", ",", "scope", "=", "'STDN'", ")", "\n", "M", "=", "tf", ".", "reduce_mean", "(", "M", ",", "axis", "=", "[", "1", ",", "2", ",", "3", "]", ")", "\n", "s", "=", "tf", ".", "reduce_mean", "(", "s", ",", "axis", "=", "[", "1", ",", "2", ",", "3", "]", ")", "\n", "b", "=", "tf", ".", "reduce_mean", "(", "b", ",", "axis", "=", "[", "1", ",", "2", ",", "3", "]", ")", "\n", "C", "=", "tf", ".", "reduce_mean", "(", "C", ",", "axis", "=", "[", "1", ",", "2", ",", "3", "]", ")", "\n", "T", "=", "tf", ".", "reduce_mean", "(", "T", ",", "axis", "=", "[", "1", ",", "2", ",", "3", "]", ")", "\n", "\n", "return", "M", ",", "s", ",", "b", ",", "C", ",", "T", ",", "im_name", "\n", "\n"]], "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.None.test.main": [[43, 91], ["model.config.Config", "model.dataset.Dataset", "test._step", "tensorflow.train.Saver", "tensorflow.Session", "tensorflow.train.get_checkpoint_state", "int", "print", "tf.train.Saver.restore", "print", "print", "print", "tensorflow.initializers.global_variables", "sess.run", "print", "print", "print", "open", "range", "[].split", "len", "sess.run", "range", "str", "imname[].decode", "f.write", "print", "str", "tf.train.get_checkpoint_state.model_checkpoint_path.split", "str", "str", "str", "str", "str", "str"], "function", ["home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.None.test._step"], ["", "def", "main", "(", "argv", "=", "None", ")", ":", "\n", "# Configurations", "\n", "  ", "config", "=", "Config", "(", "gpu", "=", "'1'", ",", "\n", "root_dir", "=", "'./data/test/'", ",", "\n", "root_dir_val", "=", "None", ",", "\n", "mode", "=", "'testing'", ")", "\n", "config", ".", "BATCH_SIZE", "=", "1", "\n", "\n", "# Get images and labels.", "\n", "dataset_test", "=", "Dataset", "(", "config", ",", "'test'", ")", "\n", "\n", "# Train", "\n", "_M", ",", "_s", ",", "_b", ",", "_C", ",", "_T", ",", "_imname", "=", "_step", "(", "config", ",", "dataset_test", ",", "False", ")", "\n", "\n", "# Add ops to save and restore all the variables.", "\n", "saver", "=", "tf", ".", "train", ".", "Saver", "(", "max_to_keep", "=", "50", ",", ")", "\n", "with", "tf", ".", "Session", "(", "config", "=", "config", ".", "GPU_CONFIG", ")", "as", "sess", ":", "\n", "# Restore the model", "\n", "    ", "ckpt", "=", "tf", ".", "train", ".", "get_checkpoint_state", "(", "config", ".", "LOG_DIR", ")", "\n", "if", "ckpt", "and", "ckpt", ".", "model_checkpoint_path", ":", "\n", "      ", "saver", ".", "restore", "(", "sess", ",", "ckpt", ".", "model_checkpoint_path", ")", "\n", "last_epoch", "=", "ckpt", ".", "model_checkpoint_path", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", ".", "split", "(", "'-'", ")", "[", "-", "1", "]", "\n", "print", "(", "'**********************************************************'", ")", "\n", "print", "(", "'Restore from Epoch '", "+", "str", "(", "last_epoch", ")", ")", "\n", "print", "(", "'**********************************************************'", ")", "\n", "", "else", ":", "\n", "      ", "init", "=", "tf", ".", "initializers", ".", "global_variables", "(", ")", "\n", "last_epoch", "=", "0", "\n", "sess", ".", "run", "(", "init", ")", "\n", "print", "(", "'**********************************************************'", ")", "\n", "print", "(", "'Train from scratch.'", ")", "\n", "print", "(", "'**********************************************************'", ")", "\n", "\n", "", "step_per_epoch", "=", "int", "(", "len", "(", "dataset_test", ".", "name_list", ")", "/", "config", ".", "BATCH_SIZE", ")", "\n", "with", "open", "(", "config", ".", "LOG_DIR", "+", "'/test/score.txt'", ",", "'w'", ")", "as", "f", ":", "\n", "      ", "for", "step", "in", "range", "(", "step_per_epoch", ")", ":", "\n", "        ", "M", ",", "s", ",", "b", ",", "C", ",", "T", ",", "imname", "=", "sess", ".", "run", "(", "[", "_M", ",", "_s", ",", "_b", ",", "_C", ",", "_T", ",", "_imname", "]", ")", "\n", "# save the score", "\n", "for", "i", "in", "range", "(", "config", ".", "BATCH_SIZE", ")", ":", "\n", "            ", "_name", "=", "imname", "[", "i", "]", ".", "decode", "(", "'UTF-8'", ")", "\n", "_line", "=", "_name", "+", "','", "+", "str", "(", "\"{0:.3f}\"", ".", "format", "(", "M", "[", "i", "]", ")", ")", "+", "','", "+", "str", "(", "\"{0:.3f}\"", ".", "format", "(", "s", "[", "i", "]", ")", ")", "+", "','", "+", "str", "(", "\"{0:.3f}\"", ".", "format", "(", "b", "[", "i", "]", ")", ")", "+", "','", "+", "str", "(", "\"{0:.3f}\"", ".", "format", "(", "C", "[", "i", "]", ")", ")", "+", "','", "+", "str", "(", "\"{0:.3f}\"", ".", "format", "(", "T", "[", "i", "]", ")", ")", "\n", "f", ".", "write", "(", "_line", "+", "'\\n'", ")", "\n", "print", "(", "str", "(", "step", "+", "1", ")", "+", "'/'", "+", "str", "(", "step_per_epoch", ")", "+", "':'", "+", "_line", ",", "end", "=", "'\\r'", ")", "\n", "", "", "", "print", "(", "\"\\n\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.config.Config.__init__": [[50, 62], ["tensorflow.GPUOptions", "tensorflow.ConfigProto", "config.Config.compile"], "methods", ["home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.config.Config.compile"], ["def", "__init__", "(", "self", ",", "gpu", ",", "root_dir", ",", "root_dir_val", ",", "mode", ")", ":", "\n", "        ", "\"\"\"Set values of computed attributes.\"\"\"", "\n", "self", ".", "MODE", "=", "mode", "\n", "self", ".", "GPU_USAGE", "=", "gpu", "\n", "self", ".", "GPU_OPTIONS", "=", "tf", ".", "GPUOptions", "(", "per_process_gpu_memory_fraction", "=", "1", ",", "visible_device_list", "=", "self", ".", "GPU_USAGE", ",", "allow_growth", "=", "True", ")", "\n", "self", ".", "GPU_CONFIG", "=", "tf", ".", "ConfigProto", "(", "log_device_placement", "=", "self", ".", "LOG_DEVICE_PLACEMENT", ",", "gpu_options", "=", "self", ".", "GPU_OPTIONS", ")", "\n", "self", ".", "LI_DATA_DIR", "=", "[", "root_dir", "+", "'live/*'", "]", "\n", "self", ".", "SP_DATA_DIR", "=", "[", "root_dir", "+", "'spoof/*'", "]", "\n", "if", "root_dir_val", ":", "\n", "            ", "self", ".", "LI_DATA_DIR_VAL", "=", "[", "root_dir_val", "+", "'live/*'", "]", "\n", "self", ".", "SP_DATA_DIR_VAL", "=", "[", "root_dir_val", "+", "'spoof/*'", "]", "\n", "", "self", ".", "compile", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.config.Config.compile": [[63, 74], ["print", "dir", "print", "os.path.isdir", "os.mkdir", "os.path.isdir", "os.mkdir", "a[].isupper", "print", "a.startswith", "callable", "getattr", "getattr"], "methods", ["None"], ["", "def", "compile", "(", "self", ")", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "isdir", "(", "self", ".", "LOG_DIR", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "self", ".", "LOG_DIR", ")", "\n", "", "if", "not", "os", ".", "path", ".", "isdir", "(", "self", ".", "LOG_DIR", "+", "'/test'", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "self", ".", "LOG_DIR", "+", "'/test'", ")", "\n", "", "\"\"\"Display Configuration values.\"\"\"", "\n", "print", "(", "\"\\nConfigurations:\"", ")", "\n", "for", "a", "in", "dir", "(", "self", ")", ":", "\n", "            ", "if", "not", "a", ".", "startswith", "(", "\"__\"", ")", "and", "not", "callable", "(", "getattr", "(", "self", ",", "a", ")", ")", "and", "a", "[", "0", "]", ".", "isupper", "(", ")", ":", "\n", "                ", "print", "(", "\"{:30} {}\"", ".", "format", "(", "a", ",", "getattr", "(", "self", ",", "a", ")", ")", ")", "\n", "", "", "print", "(", "\"\\n\"", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.dataset.Dataset.__init__": [[26, 33], ["dataset.Dataset.input_tensors.make_one_shot_iterator().get_next", "dataset.Dataset.inputs_for_training", "dataset.Dataset.inputs_for_testing", "dataset.Dataset.input_tensors.make_one_shot_iterator"], "methods", ["home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.dataset.Dataset.inputs_for_training", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.dataset.Dataset.inputs_for_testing"], ["    ", "def", "__init__", "(", "self", ",", "config", ",", "train_mode", ")", ":", "\n", "        ", "self", ".", "config", "=", "config", "\n", "if", "self", ".", "config", ".", "MODE", "==", "'training'", ":", "\n", "            ", "self", ".", "input_tensors", "=", "self", ".", "inputs_for_training", "(", "train_mode", ")", "\n", "", "elif", "self", ".", "config", ".", "MODE", "==", "'testing'", ":", "\n", "            ", "self", ".", "input_tensors", ",", "self", ".", "name_list", "=", "self", ".", "inputs_for_testing", "(", ")", "\n", "", "self", ".", "nextit", "=", "self", ".", "input_tensors", ".", "make_one_shot_iterator", "(", ")", ".", "get_next", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.dataset.Dataset.inputs_for_training": [[34, 73], ["len", "len", "len", "tensorflow.data.Dataset.from_tensor_slices", "dataset.batch().prefetch.batch().prefetch.shuffle().repeat", "glob.glob", "glob.glob", "dataset.batch().prefetch.batch().prefetch.map", "dataset.batch().prefetch.batch().prefetch.batch().prefetch", "dataset.batch().prefetch.batch().prefetch.map", "dataset.batch().prefetch.batch().prefetch.batch().prefetch", "len", "random.sample", "dataset.batch().prefetch.batch().prefetch.shuffle", "len", "len", "random.sample", "dataset.batch().prefetch.batch().prefetch.batch", "dataset.batch().prefetch.batch().prefetch.batch", "len"], "methods", ["None"], ["", "def", "inputs_for_training", "(", "self", ",", "train_mode", ")", ":", "\n", "        ", "if", "train_mode", "==", "'train'", ":", "\n", "            ", "data_dir_li", "=", "self", ".", "config", ".", "LI_DATA_DIR", "\n", "data_dir_sp", "=", "self", ".", "config", ".", "SP_DATA_DIR", "\n", "", "elif", "train_mode", "==", "'val'", ":", "\n", "            ", "data_dir_li", "=", "self", ".", "config", ".", "LI_DATA_DIR_VAL", "\n", "data_dir_sp", "=", "self", ".", "config", ".", "SP_DATA_DIR_VAL", "\n", "\n", "", "li_data_samples", "=", "[", "]", "\n", "for", "_dir", "in", "data_dir_li", ":", "\n", "            ", "_list", "=", "glob", ".", "glob", "(", "_dir", ")", "\n", "li_data_samples", "+=", "_list", "\n", "", "sp_data_samples", "=", "[", "]", "\n", "for", "_dir", "in", "data_dir_sp", ":", "\n", "            ", "_list", "=", "glob", ".", "glob", "(", "_dir", ")", "\n", "sp_data_samples", "+=", "_list", "\n", "\n", "# make live/spoof sample lists equal", "\n", "", "li_len", "=", "len", "(", "li_data_samples", ")", "\n", "sp_len", "=", "len", "(", "sp_data_samples", ")", "\n", "if", "li_len", "<", "sp_len", ":", "\n", "            ", "while", "len", "(", "li_data_samples", ")", "<", "sp_len", ":", "\n", "                ", "li_data_samples", "+=", "random", ".", "sample", "(", "li_data_samples", ",", "len", "(", "li_data_samples", ")", ")", "\n", "", "li_data_samples", "=", "li_data_samples", "[", ":", "sp_len", "]", "\n", "", "elif", "li_len", ">", "sp_len", ":", "\n", "            ", "while", "len", "(", "sp_data_samples", ")", "<", "li_len", ":", "\n", "                ", "sp_data_samples", "+=", "random", ".", "sample", "(", "sp_data_samples", ",", "len", "(", "sp_data_samples", ")", ")", "\n", "", "sp_data_samples", "=", "sp_data_samples", "[", ":", "li_len", "]", "\n", "", "shuffle_buffer_size", "=", "len", "(", "li_data_samples", ")", "\n", "\n", "dataset", "=", "tf", ".", "data", ".", "Dataset", ".", "from_tensor_slices", "(", "(", "li_data_samples", ",", "sp_data_samples", ")", ")", "\n", "dataset", "=", "dataset", ".", "shuffle", "(", "shuffle_buffer_size", ")", ".", "repeat", "(", "-", "1", ")", "\n", "if", "train_mode", "==", "'train'", ":", "\n", "            ", "dataset", "=", "dataset", ".", "map", "(", "map_func", "=", "self", ".", "parse_fn", ",", "num_parallel_calls", "=", "autotune", ")", "\n", "dataset", "=", "dataset", ".", "batch", "(", "batch_size", "=", "self", ".", "config", ".", "BATCH_SIZE", ")", ".", "prefetch", "(", "buffer_size", "=", "autotune", ")", "\n", "", "else", ":", "\n", "            ", "dataset", "=", "dataset", ".", "map", "(", "map_func", "=", "self", ".", "parse_fn_val", ",", "num_parallel_calls", "=", "autotune", ")", "\n", "dataset", "=", "dataset", ".", "batch", "(", "batch_size", "=", "self", ".", "config", ".", "BATCH_SIZE", ")", ".", "prefetch", "(", "buffer_size", "=", "autotune", ")", "\n", "", "return", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.dataset.Dataset.inputs_for_testing": [[74, 92], ["dataset.batch().prefetch.Dataset.inputs_for_testing.list_extend"], "methods", ["None"], ["", "def", "inputs_for_testing", "(", "self", ")", ":", "\n", "        ", "data_dir", "=", "self", ".", "config", ".", "LI_DATA_DIR", "+", "self", ".", "config", ".", "SP_DATA_DIR", "\n", "data_samples", "=", "[", "]", "\n", "for", "_dir", "in", "data_dir", ":", "\n", "            ", "_list", "=", "sorted", "(", "glob", ".", "glob", "(", "_dir", ")", ")", "\n", "data_samples", "+=", "_list", "\n", "\n", "", "def", "list_extend", "(", "vd_list", ")", ":", "\n", "            ", "new_list", "=", "[", "]", "\n", "for", "_file", "in", "vd_list", ":", "\n", "                ", "meta", "=", "glob", ".", "glob", "(", "_file", "+", "'/*.png'", ")", "\n", "new_list", "+=", "meta", "\n", "", "return", "new_list", "\n", "", "data_samples", "=", "list_extend", "(", "data_samples", ")", "\n", "dataset", "=", "tf", ".", "data", ".", "Dataset", ".", "from_tensor_slices", "(", "(", "data_samples", ")", ")", "\n", "dataset", "=", "dataset", ".", "map", "(", "map_func", "=", "self", ".", "parse_fn_test", ",", "num_parallel_calls", "=", "autotune", ")", "\n", "dataset", "=", "dataset", ".", "batch", "(", "batch_size", "=", "self", ".", "config", ".", "BATCH_SIZE", ")", ".", "prefetch", "(", "buffer_size", "=", "autotune", ")", "\n", "return", "dataset", ",", "data_samples", "\n", "\n"]], "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.dataset.Dataset.parse_fn": [[93, 153], ["tensorflow.py_func", "tensorflow.ensure_shape", "tensorflow.ensure_shape", "tensorflow.ensure_shape", "tensorflow.stack", "numpy.array", "_file1.decode.decode.decode", "glob.glob", "PIL.Image.open", "PIL.Image.open.resize", "numpy.array", "_file2.decode.decode.decode", "glob.glob", "PIL.Image.open", "PIL.Image.open.resize", "numpy.array", "model.warp.generate_offset_map", "numpy.load", "numpy.random.rand", "cv2.flip", "numpy.load", "numpy.random.rand", "cv2.flip", "model.warp.generate_offset_map.astype", "tensorflow.image.random_brightness", "tensorflow.image.random_brightness", "print", "print", "numpy.array", "numpy.array", "random.randint", "len", "random.randint", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.warp.generate_offset_map"], ["", "def", "parse_fn", "(", "self", ",", "file1", ",", "file2", ")", ":", "\n", "        ", "config", "=", "self", ".", "config", "\n", "imsize", "=", "config", ".", "IMAGE_SIZE", "\n", "lm_reverse_list", "=", "np", ".", "array", "(", "[", "17", ",", "16", ",", "15", ",", "14", ",", "13", ",", "12", ",", "11", ",", "10", ",", "9", ",", "8", ",", "7", ",", "6", ",", "5", ",", "4", ",", "3", ",", "2", ",", "1", ",", "\n", "27", ",", "26", ",", "25", ",", "24", ",", "23", ",", "22", ",", "21", ",", "20", ",", "19", ",", "18", ",", "\n", "28", ",", "29", ",", "30", ",", "31", ",", "36", ",", "35", ",", "34", ",", "33", ",", "32", ",", "\n", "46", ",", "45", ",", "44", ",", "43", ",", "48", ",", "47", ",", "40", ",", "39", ",", "38", ",", "37", ",", "42", ",", "41", ",", "\n", "55", ",", "54", ",", "53", ",", "52", ",", "51", ",", "50", ",", "49", ",", "60", ",", "59", ",", "58", ",", "57", ",", "56", ",", "65", ",", "64", ",", "63", ",", "62", ",", "61", ",", "68", ",", "67", ",", "66", "]", ",", "np", ".", "int32", ")", "-", "1", "\n", "\n", "def", "_parse_function", "(", "_file1", ",", "_file2", ")", ":", "\n", "# live", "\n", "            ", "_file1", "=", "_file1", ".", "decode", "(", "'UTF-8'", ")", "\n", "meta", "=", "glob", ".", "glob", "(", "_file1", "+", "'/*.png'", ")", "\n", "try", ":", "\n", "                ", "fr", "=", "meta", "[", "random", ".", "randint", "(", "0", ",", "len", "(", "meta", ")", "-", "1", ")", "]", "\n", "", "except", ":", "\n", "                ", "print", "(", "_file1", ",", "len", "(", "meta", ")", ")", "\n", "", "im_name", "=", "fr", "\n", "lm_name", "=", "fr", "[", ":", "-", "3", "]", "+", "'npy'", "\n", "image", "=", "Image", ".", "open", "(", "im_name", ")", "\n", "width", ",", "height", "=", "image", ".", "size", "\n", "image_li", "=", "image", ".", "resize", "(", "(", "imsize", ",", "imsize", ")", ")", "\n", "image_li", "=", "np", ".", "array", "(", "image_li", ",", "np", ".", "float32", ")", "\n", "lm_li", "=", "np", ".", "load", "(", "lm_name", ")", "/", "width", "\n", "if", "np", ".", "random", ".", "rand", "(", ")", ">", "0.5", ":", "\n", "                ", "image_li", "=", "cv2", ".", "flip", "(", "image_li", ",", "1", ")", "\n", "lm_li", "[", ":", ",", "0", "]", "=", "1", "-", "lm_li", "[", ":", ",", "0", "]", "\n", "lm_li", "=", "lm_li", "[", "lm_reverse_list", ",", ":", "]", "\n", "\n", "# spoof", "\n", "", "_file2", "=", "_file2", ".", "decode", "(", "'UTF-8'", ")", "\n", "meta", "=", "glob", ".", "glob", "(", "_file2", "+", "'/*.png'", ")", "\n", "try", ":", "\n", "                ", "fr", "=", "meta", "[", "random", ".", "randint", "(", "0", ",", "len", "(", "meta", ")", "-", "1", ")", "]", "\n", "", "except", ":", "\n", "                ", "print", "(", "_file2", ",", "len", "(", "meta", ")", ")", "\n", "", "im_name", "=", "fr", "\n", "lm_name", "=", "fr", "[", ":", "-", "3", "]", "+", "'npy'", "\n", "image", "=", "Image", ".", "open", "(", "im_name", ")", "\n", "width", ",", "height", "=", "image", ".", "size", "\n", "image_sp", "=", "image", ".", "resize", "(", "(", "imsize", ",", "imsize", ")", ")", "\n", "image_sp", "=", "np", ".", "array", "(", "image_sp", ",", "np", ".", "float32", ")", "\n", "lm_sp", "=", "np", ".", "load", "(", "lm_name", ")", "/", "width", "\n", "if", "np", ".", "random", ".", "rand", "(", ")", ">", "0.5", ":", "\n", "                ", "image_sp", "=", "cv2", ".", "flip", "(", "image_sp", ",", "1", ")", "\n", "lm_sp", "[", ":", ",", "0", "]", "=", "1", "-", "lm_sp", "[", ":", ",", "0", "]", "\n", "lm_sp", "=", "lm_sp", "[", "lm_reverse_list", ",", ":", "]", "\n", "\n", "# offset map", "\n", "", "reg_map_sp", "=", "generate_offset_map", "(", "lm_sp", ",", "lm_li", ")", "\n", "\n", "return", "np", ".", "array", "(", "image_li", ",", "np", ".", "float32", ")", "/", "255", ",", "np", ".", "array", "(", "image_sp", ",", "np", ".", "float32", ")", "/", "255", ",", "reg_map_sp", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "", "image_li", ",", "image_sp", ",", "reg_map_sp", "=", "tf", ".", "py_func", "(", "_parse_function", ",", "[", "file1", ",", "file2", "]", ",", "[", "tf", ".", "float32", ",", "tf", ".", "float32", ",", "tf", ".", "float32", "]", ")", "\n", "image_li", "=", "tf", ".", "ensure_shape", "(", "image_li", ",", "[", "imsize", ",", "imsize", ",", "3", "]", ")", "\n", "image_sp", "=", "tf", ".", "ensure_shape", "(", "image_sp", ",", "[", "imsize", ",", "imsize", ",", "3", "]", ")", "\n", "reg_map_sp", "=", "tf", ".", "ensure_shape", "(", "reg_map_sp", ",", "[", "imsize", ",", "imsize", ",", "3", "]", ")", "\n", "# data augmentation", "\n", "image", "=", "tf", ".", "stack", "(", "[", "tf", ".", "image", ".", "random_brightness", "(", "image_li", ",", "0.25", ")", ",", "tf", ".", "image", ".", "random_brightness", "(", "image_sp", ",", "0.25", ")", "]", ",", "axis", "=", "0", ")", "\n", "return", "image", ",", "reg_map_sp", "\n", "\n"]], "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.dataset.Dataset.parse_fn_val": [[155, 217], ["tensorflow.py_func", "tensorflow.ensure_shape", "tensorflow.ensure_shape", "tensorflow.ensure_shape", "tensorflow.stack", "numpy.array", "_file1.decode.decode.decode", "glob.glob", "PIL.Image.open", "PIL.Image.open.resize", "numpy.array", "_file2.decode.decode.decode", "glob.glob", "PIL.Image.open", "PIL.Image.open.resize", "numpy.array", "model.warp.generate_offset_map", "numpy.load", "numpy.random.rand", "cv2.flip", "numpy.load", "numpy.random.rand", "cv2.flip", "model.warp.generate_offset_map.astype", "print", "input", "print", "input", "numpy.array", "numpy.array", "random.randint", "len", "random.randint", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.warp.generate_offset_map"], ["", "def", "parse_fn_val", "(", "self", ",", "file1", ",", "file2", ")", ":", "\n", "        ", "config", "=", "self", ".", "config", "\n", "imsize", "=", "config", ".", "IMAGE_SIZE", "\n", "lm_reverse_list", "=", "np", ".", "array", "(", "[", "17", ",", "16", ",", "15", ",", "14", ",", "13", ",", "12", ",", "11", ",", "10", ",", "9", ",", "8", ",", "7", ",", "6", ",", "5", ",", "4", ",", "3", ",", "2", ",", "1", ",", "\n", "27", ",", "26", ",", "25", ",", "24", ",", "23", ",", "22", ",", "21", ",", "20", ",", "19", ",", "18", ",", "\n", "28", ",", "29", ",", "30", ",", "31", ",", "36", ",", "35", ",", "34", ",", "33", ",", "32", ",", "\n", "46", ",", "45", ",", "44", ",", "43", ",", "48", ",", "47", ",", "40", ",", "39", ",", "38", ",", "37", ",", "42", ",", "41", ",", "\n", "55", ",", "54", ",", "53", ",", "52", ",", "51", ",", "50", ",", "49", ",", "60", ",", "59", ",", "58", ",", "57", ",", "56", ",", "65", ",", "64", ",", "63", ",", "62", ",", "61", ",", "68", ",", "67", ",", "66", "]", ",", "np", ".", "int32", ")", "-", "1", "\n", "\n", "def", "_parse_function", "(", "_file1", ",", "_file2", ")", ":", "\n", "# live", "\n", "            ", "_file1", "=", "_file1", ".", "decode", "(", "'UTF-8'", ")", "\n", "meta", "=", "glob", ".", "glob", "(", "_file1", "+", "'/*.png'", ")", "\n", "try", ":", "\n", "                ", "fr", "=", "meta", "[", "random", ".", "randint", "(", "0", ",", "len", "(", "meta", ")", "-", "1", ")", "]", "\n", "", "except", ":", "\n", "                ", "print", "(", "_file1", ",", "len", "(", "meta", ")", ")", "\n", "input", "(", ")", "\n", "", "im_name", "=", "fr", "\n", "lm_name", "=", "fr", "[", ":", "-", "3", "]", "+", "'npy'", "\n", "image", "=", "Image", ".", "open", "(", "im_name", ")", "\n", "width", ",", "height", "=", "image", ".", "size", "\n", "image_li", "=", "image", ".", "resize", "(", "(", "imsize", ",", "imsize", ")", ")", "\n", "image_li", "=", "np", ".", "array", "(", "image_li", ",", "np", ".", "float32", ")", "\n", "lm_li", "=", "np", ".", "load", "(", "lm_name", ")", "/", "width", "\n", "if", "np", ".", "random", ".", "rand", "(", ")", ">", "0.5", ":", "\n", "                ", "image_li", "=", "cv2", ".", "flip", "(", "image_li", ",", "1", ")", "\n", "lm_li", "[", ":", ",", "0", "]", "=", "1", "-", "lm_li", "[", ":", ",", "0", "]", "\n", "lm_li", "=", "lm_li", "[", "lm_reverse_list", ",", ":", "]", "\n", "\n", "# spoof", "\n", "", "_file2", "=", "_file2", ".", "decode", "(", "'UTF-8'", ")", "\n", "meta", "=", "glob", ".", "glob", "(", "_file2", "+", "'/*.png'", ")", "\n", "try", ":", "\n", "                ", "fr", "=", "meta", "[", "random", ".", "randint", "(", "0", ",", "len", "(", "meta", ")", "-", "1", ")", "]", "\n", "", "except", ":", "\n", "                ", "print", "(", "_file2", ",", "len", "(", "meta", ")", ")", "\n", "input", "(", ")", "\n", "", "im_name", "=", "fr", "\n", "lm_name", "=", "fr", "[", ":", "-", "3", "]", "+", "'npy'", "\n", "image", "=", "Image", ".", "open", "(", "im_name", ")", "\n", "width", ",", "height", "=", "image", ".", "size", "\n", "image_sp", "=", "image", ".", "resize", "(", "(", "imsize", ",", "imsize", ")", ")", "\n", "image_sp", "=", "np", ".", "array", "(", "image_sp", ",", "np", ".", "float32", ")", "\n", "lm_sp", "=", "np", ".", "load", "(", "lm_name", ")", "/", "width", "\n", "if", "np", ".", "random", ".", "rand", "(", ")", ">", "0.5", ":", "\n", "                ", "image_sp", "=", "cv2", ".", "flip", "(", "image_sp", ",", "1", ")", "\n", "lm_sp", "[", ":", ",", "0", "]", "=", "1", "-", "lm_sp", "[", ":", ",", "0", "]", "\n", "lm_sp", "=", "lm_sp", "[", "lm_reverse_list", ",", ":", "]", "\n", "\n", "# offset map", "\n", "", "reg_map_sp", "=", "generate_offset_map", "(", "lm_sp", ",", "lm_li", ")", "\n", "\n", "return", "np", ".", "array", "(", "image_li", ",", "np", ".", "float32", ")", "/", "255", ",", "np", ".", "array", "(", "image_sp", ",", "np", ".", "float32", ")", "/", "255", ",", "reg_map_sp", ".", "astype", "(", "np", ".", "float32", ")", "\n", "\n", "", "image_li", ",", "image_sp", ",", "reg_map_sp", "=", "tf", ".", "py_func", "(", "_parse_function", ",", "[", "file1", ",", "file2", "]", ",", "[", "tf", ".", "float32", ",", "tf", ".", "float32", ",", "tf", ".", "float32", "]", ")", "\n", "image_li", "=", "tf", ".", "ensure_shape", "(", "image_li", ",", "[", "imsize", ",", "imsize", ",", "3", "]", ")", "\n", "image_sp", "=", "tf", ".", "ensure_shape", "(", "image_sp", ",", "[", "imsize", ",", "imsize", ",", "3", "]", ")", "\n", "reg_map_sp", "=", "tf", ".", "ensure_shape", "(", "reg_map_sp", ",", "[", "imsize", ",", "imsize", ",", "3", "]", ")", "\n", "# data augmentation", "\n", "image", "=", "tf", ".", "stack", "(", "[", "image_li", ",", "image_sp", "]", ",", "axis", "=", "0", ")", "\n", "return", "image", ",", "reg_map_sp", "\n", "\n"]], "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.dataset.Dataset.parse_fn_test": [[218, 233], ["tensorflow.py_func", "tensorflow.ensure_shape", "_file.decode.decode.decode", "PIL.Image.open", "image.resize.resize.resize", "numpy.array"], "methods", ["None"], ["", "def", "parse_fn_test", "(", "self", ",", "file", ")", ":", "\n", "        ", "config", "=", "self", ".", "config", "\n", "imsize", "=", "config", ".", "IMAGE_SIZE", "\n", "\n", "def", "_parse_function", "(", "_file", ")", ":", "\n", "            ", "_file", "=", "_file", ".", "decode", "(", "'UTF-8'", ")", "\n", "image_list", "=", "[", "]", "\n", "im_name", "=", "_file", "\n", "image", "=", "Image", ".", "open", "(", "im_name", ")", "\n", "image", "=", "image", ".", "resize", "(", "(", "imsize", ",", "imsize", ")", ")", "\n", "return", "np", ".", "array", "(", "image", ",", "np", ".", "float32", ")", "/", "255", ",", "im_name", "\n", "\n", "", "image", ",", "im_name", "=", "tf", ".", "py_func", "(", "_parse_function", ",", "[", "file", "]", ",", "[", "tf", ".", "float32", ",", "tf", ".", "string", "]", ")", "\n", "image", "=", "tf", ".", "ensure_shape", "(", "image", ",", "[", "config", ".", "IMAGE_SIZE", ",", "config", ".", "IMAGE_SIZE", ",", "3", "]", ")", "\n", "return", "image", ",", "im_name", "\n", "", "", ""]], "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.loss.l1_loss": [[18, 26], ["tensorflow.math.reduce_mean", "tensorflow.math.reduce_mean", "tensorflow.reshape", "tensorflow.math.reduce_sum", "tensorflow.abs", "tensorflow.abs", "tensorflow.reduce_sum"], "function", ["None"], ["def", "l1_loss", "(", "x", ",", "y", ",", "mask", "=", "None", ")", ":", "\n", "    ", "xshape", "=", "x", ".", "shape", "\n", "if", "mask", "is", "not", "None", ":", "\n", "        ", "loss", "=", "tf", ".", "math", ".", "reduce_mean", "(", "tf", ".", "reshape", "(", "tf", ".", "abs", "(", "x", "-", "y", ")", ",", "[", "xshape", "[", "0", "]", ",", "-", "1", "]", ")", ",", "axis", "=", "1", ",", "keepdims", "=", "True", ")", "\n", "loss", "=", "tf", ".", "math", ".", "reduce_sum", "(", "loss", "*", "mask", ")", "/", "(", "tf", ".", "reduce_sum", "(", "mask", ")", "+", "1e-8", ")", "\n", "", "else", ":", "\n", "        ", "loss", "=", "tf", ".", "math", ".", "reduce_mean", "(", "tf", ".", "abs", "(", "x", "-", "y", ")", ")", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.loss.l2_loss": [[27, 35], ["tensorflow.math.reduce_mean", "tensorflow.math.reduce_mean", "tensorflow.reshape", "tensorflow.math.reduce_sum", "tensorflow.square", "tensorflow.square", "tensorflow.reduce_sum"], "function", ["None"], ["", "def", "l2_loss", "(", "x", ",", "y", ",", "mask", "=", "None", ")", ":", "\n", "    ", "xshape", "=", "x", ".", "shape", "\n", "if", "mask", "is", "not", "None", ":", "\n", "        ", "loss", "=", "tf", ".", "math", ".", "reduce_mean", "(", "tf", ".", "reshape", "(", "tf", ".", "square", "(", "x", "-", "y", ")", ",", "[", "xshape", "[", "0", "]", ",", "-", "1", "]", ")", ",", "axis", "=", "1", ",", "keepdims", "=", "True", ")", "\n", "loss", "=", "tf", ".", "math", ".", "reduce_sum", "(", "loss", "*", "mask", ")", "/", "(", "tf", ".", "reduce_sum", "(", "mask", ")", "+", "1e-8", ")", "\n", "", "else", ":", "\n", "        ", "loss", "=", "tf", ".", "math", ".", "reduce_mean", "(", "tf", ".", "square", "(", "x", "-", "y", ")", ")", "\n", "", "return", "loss", "", "", ""]], "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.model.Gen": [[20, 60], ["tensorflow.concat", "model.utils.Conv", "model.utils.Conv", "model.utils.Conv", "model.utils.Downsample", "model.utils.Conv", "model.utils.Conv", "model.utils.Downsample", "model.utils.Conv", "model.utils.Conv", "model.utils.Downsample", "model.utils.Upsample", "model.utils.Upsample", "model.utils.Upsample", "tensorflow.nn.tanh", "tensorflow.nn.tanh", "tensorflow.nn.tanh", "tensorflow.reduce_mean", "tensorflow.reduce_mean", "tensorflow.nn.avg_pool", "tensorflow.image.resize_images", "tensorflow.image.resize_images", "tensorflow.image.resize_images", "tensorflow.concat", "model.utils.Conv", "model.utils.Conv", "model.utils.Conv", "tensorflow.concat", "tensorflow.concat", "model.utils.Conv", "model.utils.Conv", "model.utils.Conv", "tensorflow.image.rgb_to_yuv", "model.utils.Conv", "model.utils.Conv", "model.utils.Conv"], "function", ["home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Conv", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Conv", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Conv", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Downsample", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Conv", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Conv", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Downsample", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Conv", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Conv", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Downsample", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Upsample", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Upsample", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Upsample", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Conv", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Conv", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Conv", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Conv", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Conv", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Conv", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Conv", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Conv", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Conv"], ["def", "Gen", "(", "x", ",", "training_nn", ",", "scope", ")", ":", "\n", "  ", "nlayers", "=", "[", "16", ",", "64", ",", "64", ",", "96", ",", "]", "\n", "\n", "x", "=", "tf", ".", "concat", "(", "[", "x", ",", "tf", ".", "image", ".", "rgb_to_yuv", "(", "x", ")", "]", ",", "axis", "=", "3", ")", "\n", "x0", "=", "Conv", "(", "x", ",", "nlayers", "[", "1", "]", ",", "scope", "+", "'/conv0'", ",", "training_nn", ")", "\n", "# Block 1", "\n", "x1", "=", "Conv", "(", "x0", ",", "nlayers", "[", "2", "]", ",", "scope", "+", "'/conv1'", ",", "training_nn", ")", "\n", "x1", "=", "Conv", "(", "x1", ",", "nlayers", "[", "3", "]", ",", "scope", "+", "'/conv2'", ",", "training_nn", ")", "\n", "x1", "=", "Downsample", "(", "x1", ",", "nlayers", "[", "2", "]", ",", "scope", "+", "'/conv3'", ",", "training_nn", ")", "\n", "# Block 2", "\n", "x2", "=", "Conv", "(", "x1", ",", "nlayers", "[", "2", "]", ",", "scope", "+", "'/conv4'", ",", "training_nn", ")", "\n", "x2", "=", "Conv", "(", "x2", ",", "nlayers", "[", "3", "]", ",", "scope", "+", "'/conv5'", ",", "training_nn", ")", "\n", "x2", "=", "Downsample", "(", "x2", ",", "nlayers", "[", "2", "]", ",", "scope", "+", "'/conv6'", ",", "training_nn", ")", "\n", "# Block 3", "\n", "x3", "=", "Conv", "(", "x2", ",", "nlayers", "[", "2", "]", ",", "scope", "+", "'/conv7'", ",", "training_nn", ")", "\n", "x3", "=", "Conv", "(", "x3", ",", "nlayers", "[", "3", "]", ",", "scope", "+", "'/conv8'", ",", "training_nn", ")", "\n", "x3", "=", "Downsample", "(", "x3", ",", "nlayers", "[", "2", "]", ",", "scope", "+", "'/conv9'", ",", "training_nn", ")", "\n", "# Decoder", "\n", "u1", "=", "Upsample", "(", "x3", ",", "nlayers", "[", "1", "]", ",", "scope", "+", "'/up1'", ",", "training_nn", ")", "\n", "u2", "=", "Upsample", "(", "tf", ".", "concat", "(", "[", "u1", ",", "x2", "]", ",", "3", ")", ",", "nlayers", "[", "1", "]", ",", "scope", "+", "'/up2'", ",", "training_nn", ")", "\n", "u3", "=", "Upsample", "(", "tf", ".", "concat", "(", "[", "u2", ",", "x1", "]", ",", "3", ")", ",", "nlayers", "[", "1", "]", ",", "scope", "+", "'/up3'", ",", "training_nn", ")", "\n", "n1", "=", "tf", ".", "nn", ".", "tanh", "(", "Conv", "(", "Conv", "(", "u1", ",", "nlayers", "[", "0", "]", ",", "scope", "+", "'/n1'", ",", "training_nn", ")", ",", "6", ",", "scope", "+", "'/nn1'", ",", "training_nn", ",", "act", "=", "False", ",", "norm", "=", "False", ")", ")", "\n", "n2", "=", "tf", ".", "nn", ".", "tanh", "(", "Conv", "(", "Conv", "(", "u2", ",", "nlayers", "[", "0", "]", ",", "scope", "+", "'/n2'", ",", "training_nn", ")", ",", "3", ",", "scope", "+", "'/nn2'", ",", "training_nn", ",", "act", "=", "False", ",", "norm", "=", "False", ")", ")", "\n", "n3", "=", "tf", ".", "nn", ".", "tanh", "(", "Conv", "(", "Conv", "(", "u3", ",", "nlayers", "[", "0", "]", ",", "scope", "+", "'/n3'", ",", "training_nn", ")", ",", "3", ",", "scope", "+", "'/nn3'", ",", "training_nn", ",", "act", "=", "False", ",", "norm", "=", "False", ")", ")", "\n", "\n", "s", "=", "tf", ".", "reduce_mean", "(", "n1", "[", ":", ",", ":", ",", ":", ",", "3", ":", "6", "]", ",", "axis", "=", "[", "1", ",", "2", "]", ",", "keepdims", "=", "True", ")", "\n", "b", "=", "tf", ".", "reduce_mean", "(", "n1", "[", ":", ",", ":", ",", ":", ",", ":", "3", "]", ",", "axis", "=", "[", "1", ",", "2", "]", ",", "keepdims", "=", "True", ")", "\n", "C", "=", "tf", ".", "nn", ".", "avg_pool", "(", "n2", ",", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "padding", "=", "'SAME'", ")", "\n", "T", "=", "n3", "\n", "\n", "# ESR", "\n", "map1", "=", "tf", ".", "image", ".", "resize_images", "(", "x1", ",", "[", "32", ",", "32", "]", ")", "\n", "map2", "=", "tf", ".", "image", ".", "resize_images", "(", "x2", ",", "[", "32", ",", "32", "]", ")", "\n", "map3", "=", "tf", ".", "image", ".", "resize_images", "(", "x3", ",", "[", "32", ",", "32", "]", ")", "\n", "maps", "=", "tf", ".", "concat", "(", "[", "map1", ",", "map2", ",", "map3", "]", ",", "3", ")", "\n", "x4", "=", "Conv", "(", "maps", ",", "nlayers", "[", "2", "]", ",", "scope", "+", "'/conv10'", ",", "training_nn", ",", "apply_dropout", "=", "True", ")", "\n", "x4", "=", "Conv", "(", "x4", ",", "nlayers", "[", "1", "]", ",", "scope", "+", "'/conv11'", ",", "training_nn", ",", "apply_dropout", "=", "True", ")", "\n", "x5", "=", "Conv", "(", "x4", ",", "1", ",", "scope", "+", "'/conv12'", ",", "training_nn", ",", "act", "=", "False", ",", "norm", "=", "False", ")", "\n", "\n", "return", "x5", ",", "s", ",", "b", ",", "C", ",", "T", "\n", "\n"]], "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.model.Disc_s": [[61, 79], ["tensorflow.concat", "model.utils.Downsample", "model.utils.Downsample", "model.utils.Downsample", "model.utils.Conv", "model.utils.Conv", "model.utils.Conv", "tensorflow.image.rgb_to_yuv"], "function", ["home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Downsample", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Downsample", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Downsample", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Conv", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Conv", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Conv"], ["", "def", "Disc_s", "(", "x", ",", "training_nn", ",", "scope", ")", ":", "\n", "  ", "nlayers", "=", "[", "16", ",", "32", ",", "64", ",", "96", ",", "]", "\n", "x", "=", "tf", ".", "concat", "(", "[", "x", ",", "tf", ".", "image", ".", "rgb_to_yuv", "(", "x", ")", "]", ",", "axis", "=", "3", ")", "\n", "# Block 1", "\n", "#x1 = Conv(x, nlayers[1], scope+'/conv1', training_nn)", "\n", "x1", "=", "Downsample", "(", "x", ",", "nlayers", "[", "1", "]", ",", "scope", "+", "'/conv2'", ",", "training_nn", ")", "\n", "# Block 2", "\n", "#x2 = Conv(x1, nlayers[2], scope+'/conv3', training_nn)", "\n", "x2", "=", "Downsample", "(", "x1", ",", "nlayers", "[", "2", "]", ",", "scope", "+", "'/conv4'", ",", "training_nn", ")", "\n", "# Block 3", "\n", "#x3 = Conv(x2, nlayers[2], scope+'/conv5', training_nn)", "\n", "x3", "=", "Downsample", "(", "x2", ",", "nlayers", "[", "3", "]", ",", "scope", "+", "'/conv6'", ",", "training_nn", ")", "\n", "# Block 4", "\n", "x4", "=", "Conv", "(", "x3", ",", "nlayers", "[", "3", "]", ",", "scope", "+", "'/conv7'", ",", "training_nn", ")", "\n", "x4l", "=", "Conv", "(", "x4", ",", "1", ",", "scope", "+", "'/conv8'", ",", "training_nn", ",", "act", "=", "False", ",", "norm", "=", "False", ")", "\n", "x4s", "=", "Conv", "(", "x4", ",", "1", ",", "scope", "+", "'/conv9'", ",", "training_nn", ",", "act", "=", "False", ",", "norm", "=", "False", ")", "\n", "\n", "return", "x4l", ",", "x4s", "\n", "\n"]], "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.model.Disc": [[80, 98], ["tensorflow.concat", "model.utils.Conv", "model.utils.Downsample", "model.utils.Conv", "model.utils.Downsample", "model.utils.Conv", "model.utils.Downsample", "model.utils.Conv", "model.utils.Conv", "model.utils.Conv", "tensorflow.image.rgb_to_yuv"], "function", ["home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Conv", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Downsample", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Conv", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Downsample", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Conv", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Downsample", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Conv", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Conv", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Conv"], ["", "def", "Disc", "(", "x", ",", "training_nn", ",", "scope", ")", ":", "\n", "  ", "nlayers", "=", "[", "16", ",", "32", ",", "64", ",", "96", ",", "]", "\n", "x", "=", "tf", ".", "concat", "(", "[", "x", ",", "tf", ".", "image", ".", "rgb_to_yuv", "(", "x", ")", "]", ",", "axis", "=", "3", ")", "\n", "# Block 1", "\n", "x1", "=", "Conv", "(", "x", ",", "nlayers", "[", "1", "]", ",", "scope", "+", "'/conv1'", ",", "training_nn", ")", "\n", "x1", "=", "Downsample", "(", "x1", ",", "nlayers", "[", "1", "]", ",", "scope", "+", "'/conv2'", ",", "training_nn", ")", "\n", "# Block 2", "\n", "x2", "=", "Conv", "(", "x1", ",", "nlayers", "[", "2", "]", ",", "scope", "+", "'/conv3'", ",", "training_nn", ")", "\n", "x2", "=", "Downsample", "(", "x2", ",", "nlayers", "[", "2", "]", ",", "scope", "+", "'/conv4'", ",", "training_nn", ")", "\n", "# Block 3", "\n", "x3", "=", "Conv", "(", "x2", ",", "nlayers", "[", "2", "]", ",", "scope", "+", "'/conv5'", ",", "training_nn", ")", "\n", "x3", "=", "Downsample", "(", "x3", ",", "nlayers", "[", "3", "]", ",", "scope", "+", "'/conv6'", ",", "training_nn", ")", "\n", "# Block 4", "\n", "x4", "=", "Conv", "(", "x3", ",", "nlayers", "[", "3", "]", ",", "scope", "+", "'/conv7'", ",", "training_nn", ")", "\n", "x4l", "=", "Conv", "(", "x4", ",", "1", ",", "scope", "+", "'/conv8'", ",", "training_nn", ",", "act", "=", "False", ",", "norm", "=", "False", ")", "\n", "x4s", "=", "Conv", "(", "x4", ",", "1", ",", "scope", "+", "'/conv9'", ",", "training_nn", ",", "act", "=", "False", ",", "norm", "=", "False", ")", "\n", "\n", "return", "x4l", ",", "x4s", "\n", "\n"]], "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.model.get_train_op": [[99, 129], ["tensorflow.train.exponential_decay", "tensorflow.train.ExponentialMovingAverage", "tf.train.ExponentialMovingAverage.apply", "tf.train.AdamOptimizer.apply_gradients", "tensorflow.control_dependencies", "tensorflow.train.AdamOptimizer", "tf.train.AdamOptimizer.compute_gradients", "tensorflow.name_scope", "tensorflow.train.ExponentialMovingAverage", "tf.train.ExponentialMovingAverage.apply", "tensorflow.control_dependencies", "tensorflow.no_op", "tensorflow.trainable_variables", "tensorflow.trainable_variables"], "function", ["None"], ["", "def", "get_train_op", "(", "sum_loss", ",", "global_step", ",", "config", ",", "scope_name", ")", ":", "\n", "# Variables that affect learning rate.", "\n", "  ", "decay_steps", "=", "config", ".", "NUM_EPOCHS_PER_DECAY", "*", "config", ".", "STEPS_PER_EPOCH", "\n", "\n", "# Decay the learning rate exponentially based on the number of steps.", "\n", "lr", "=", "tf", ".", "train", ".", "exponential_decay", "(", "config", ".", "LEARNING_RATE", ",", "\n", "global_step", ",", "\n", "decay_steps", ",", "\n", "config", ".", "LEARNING_RATE_DECAY_FACTOR", ",", "\n", "staircase", "=", "True", ")", "\n", "\n", "# Generate moving averages of all losses and associated summaries.", "\n", "loss_averages", "=", "tf", ".", "train", ".", "ExponentialMovingAverage", "(", "0.9", ",", "name", "=", "'avg'", ")", "\n", "loss_averages_op", "=", "loss_averages", ".", "apply", "(", "[", "sum_loss", "]", ")", "\n", "# Compute gradients.", "\n", "with", "tf", ".", "control_dependencies", "(", "[", "loss_averages_op", "]", ")", ":", "\n", "    ", "opt", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "lr", ")", "\n", "grads", "=", "opt", ".", "compute_gradients", "(", "sum_loss", ",", "var_list", "=", "tf", ".", "trainable_variables", "(", "scope", "=", "scope_name", ")", ")", "\n", "# Apply gradients.", "\n", "", "apply_gradient_op", "=", "opt", ".", "apply_gradients", "(", "grads", ",", "global_step", "=", "global_step", ")", "\n", "\n", "# Track the moving averages of all trainable variables.", "\n", "with", "tf", ".", "name_scope", "(", "'TRAIN-'", "+", "scope_name", ")", "as", "scope", ":", "\n", "    ", "variable_averages", "=", "tf", ".", "train", ".", "ExponentialMovingAverage", "(", "config", ".", "MOVING_AVERAGE_DECAY", ",", "global_step", ")", "\n", "variables_averages_op", "=", "variable_averages", ".", "apply", "(", "tf", ".", "trainable_variables", "(", "scope", "=", "scope_name", ")", ")", "\n", "\n", "", "with", "tf", ".", "control_dependencies", "(", "[", "apply_gradient_op", ",", "variables_averages_op", "]", ")", ":", "\n", "    ", "train_op", "=", "tf", ".", "no_op", "(", "name", "=", "'train-'", "+", "scope_name", ")", "\n", "\n", "", "return", "train_op", "\n", "", ""]], "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.warp.tf_flatten": [[20, 23], ["tensorflow.reshape"], "function", ["None"], ["def", "tf_flatten", "(", "a", ")", ":", "\n", "    ", "\"\"\"Flatten tensor\"\"\"", "\n", "return", "tf", ".", "reshape", "(", "a", ",", "[", "-", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.warp.tf_repeat": [[24, 29], ["tensorflow.expand_dims", "tensorflow.tile", "tensorflow.reshape", "len", "tf.tile.get_shape"], "function", ["None"], ["", "def", "tf_repeat", "(", "a", ",", "repeats", ",", "axis", "=", "0", ")", ":", "\n", "    ", "assert", "len", "(", "a", ".", "get_shape", "(", ")", ")", "==", "1", "\n", "a", "=", "tf", ".", "expand_dims", "(", "a", ",", "-", "1", ")", "\n", "a", "=", "tf", ".", "tile", "(", "a", ",", "[", "1", ",", "repeats", "]", ")", "\n", "return", "tf", ".", "reshape", "(", "a", ",", "[", "-", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.warp.tf_repeat_2d": [[30, 35], ["tensorflow.expand_dims", "tensorflow.tile", "len", "tf.tile.get_shape"], "function", ["None"], ["", "def", "tf_repeat_2d", "(", "a", ",", "repeats", ")", ":", "\n", "    ", "assert", "len", "(", "a", ".", "get_shape", "(", ")", ")", "==", "2", "\n", "a", "=", "tf", ".", "expand_dims", "(", "a", ",", "0", ")", "\n", "a", "=", "tf", ".", "tile", "(", "a", ",", "[", "repeats", ",", "1", ",", "1", "]", ")", "\n", "return", "a", "\n", "\n"]], "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.warp.warping": [[36, 87], ["tensorflow.reshape", "tensorflow.meshgrid", "tensorflow.stack", "tensorflow.cast", "tensorflow.reshape", "warp.tf_repeat_2d", "tensorflow.clip_by_value", "warp.tf_repeat", "tensorflow.floor", "tensorflow.ceil", "tensorflow.stack", "tensorflow.stack", "warp.warping._gather_pixel"], "function", ["home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.warp.tf_repeat_2d", "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.warp.tf_repeat"], ["", "def", "warping", "(", "x", ",", "offsets", ",", "imsize", ")", ":", "\n", "    ", "bsize", "=", "x", ".", "shape", "[", "0", "]", "\n", "xsize", "=", "x", ".", "shape", "[", "1", "]", "\n", "offsets", "=", "offsets", "*", "imsize", "\n", "offsets", "=", "tf", ".", "reshape", "(", "offsets", "[", ":", ",", ":", ",", ":", ",", "0", ":", "2", "]", ",", "(", "bsize", ",", "-", "1", ",", "2", ")", ")", "# do not need z information", "\n", "\n", "# first build the grid for target face coordinates", "\n", "t_coords", "=", "tf", ".", "meshgrid", "(", "tf", ".", "range", "(", "xsize", ")", ",", "tf", ".", "range", "(", "xsize", ")", ",", "indexing", "=", "'ij'", ")", "\n", "t_coords", "=", "tf", ".", "stack", "(", "t_coords", ",", "axis", "=", "-", "1", ")", "\n", "t_coords", "=", "tf", ".", "cast", "(", "t_coords", ",", "tf", ".", "float32", ")", "\n", "t_coords", "=", "tf", ".", "reshape", "(", "t_coords", ",", "(", "-", "1", ",", "2", ")", ")", "\n", "t_coords", "=", "tf_repeat_2d", "(", "t_coords", ",", "bsize", ")", "\n", "# find the coordinates in the source image to copy pixels", "\n", "s_coords", "=", "t_coords", "+", "offsets", "\n", "s_coords", "=", "tf", ".", "clip_by_value", "(", "s_coords", ",", "0", ",", "tf", ".", "cast", "(", "xsize", "-", "1", ",", "tf", ".", "float32", ")", ")", "\n", "\n", "n_coords", "=", "s_coords", ".", "shape", "[", "1", "]", "\n", "idx", "=", "tf_repeat", "(", "tf", ".", "range", "(", "bsize", ")", ",", "n_coords", ")", "\n", "\n", "def", "_gather_pixel", "(", "_x", ",", "coords", ")", ":", "\n", "        ", "coords", "=", "tf", ".", "cast", "(", "coords", ",", "tf", ".", "int32", ")", "\n", "xcoords", "=", "tf", ".", "reshape", "(", "coords", "[", "...", ",", "0", "]", ",", "[", "-", "1", "]", ")", "\n", "ycoords", "=", "tf", ".", "reshape", "(", "coords", "[", "...", ",", "1", "]", ",", "[", "-", "1", "]", ")", "\n", "ind", "=", "tf", ".", "stack", "(", "[", "idx", ",", "xcoords", ",", "ycoords", "]", ",", "axis", "=", "-", "1", ")", "\n", "\n", "_y", "=", "tf", ".", "gather_nd", "(", "_x", ",", "ind", ")", "\n", "_y", "=", "tf", ".", "reshape", "(", "_y", ",", "(", "bsize", ",", "n_coords", ",", "_x", ".", "shape", "[", "3", "]", ")", ")", "\n", "return", "_y", "\n", "\n", "# solve fractional coordinates via bilinear interpolation", "\n", "", "s_coords_lu", "=", "tf", ".", "floor", "(", "s_coords", ")", "\n", "s_coords_rb", "=", "tf", ".", "ceil", "(", "s_coords", ")", "\n", "s_coords_lb", "=", "tf", ".", "stack", "(", "[", "s_coords_lu", "[", "...", ",", "0", "]", ",", "s_coords_rb", "[", "...", ",", "1", "]", "]", ",", "axis", "=", "-", "1", ")", "\n", "s_coords_ru", "=", "tf", ".", "stack", "(", "[", "s_coords_rb", "[", "...", ",", "0", "]", ",", "s_coords_lu", "[", "...", ",", "1", "]", "]", ",", "axis", "=", "-", "1", ")", "\n", "_x_lu", "=", "_gather_pixel", "(", "x", ",", "s_coords_lu", ")", "\n", "_x_rb", "=", "_gather_pixel", "(", "x", ",", "s_coords_rb", ")", "\n", "_x_lb", "=", "_gather_pixel", "(", "x", ",", "s_coords_lb", ")", "\n", "_x_ru", "=", "_gather_pixel", "(", "x", ",", "s_coords_ru", ")", "\n", "# bilinear interpolation", "\n", "s_coords_fraction", "=", "s_coords", "-", "tf", ".", "cast", "(", "s_coords_lu", ",", "tf", ".", "float32", ")", "\n", "s_coords_fraction_x", "=", "s_coords_fraction", "[", "...", ",", "0", "]", "\n", "s_coords_fraction_y", "=", "s_coords_fraction", "[", "...", ",", "1", "]", "\n", "_xs", ",", "_ys", "=", "s_coords_fraction_x", ".", "shape", "\n", "s_coords_fraction_x", "=", "tf", ".", "reshape", "(", "s_coords_fraction_x", ",", "[", "_xs", ",", "_ys", ",", "1", "]", ")", "\n", "s_coords_fraction_y", "=", "tf", ".", "reshape", "(", "s_coords_fraction_y", ",", "[", "_xs", ",", "_ys", ",", "1", "]", ")", "\n", "_x_u", "=", "_x_lu", "+", "(", "_x_ru", "-", "_x_lu", ")", "*", "s_coords_fraction_x", "\n", "_x_b", "=", "_x_lb", "+", "(", "_x_rb", "-", "_x_lb", ")", "*", "s_coords_fraction_x", "\n", "warped_x", "=", "_x_u", "+", "(", "_x_b", "-", "_x_u", ")", "*", "s_coords_fraction_y", "\n", "warped_x", "=", "tf", ".", "reshape", "(", "warped_x", ",", "(", "bsize", ",", "xsize", ",", "xsize", ",", "-", "1", ")", ")", "\n", "\n", "return", "warped_x", "\n", "\n"]], "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.warp.generate_offset_map": [[88, 108], ["numpy.meshgrid", "numpy.concatenate().astype", "numpy.concatenate().astype", "matplotlib.Triangulation", "matplotlib.LinearTriInterpolator", "matplotlib.LinearTriInterpolator", "mtri.LinearTriInterpolator.", "mtri.LinearTriInterpolator.", "numpy.stack", "numpy.asarray", "numpy.linspace", "numpy.linspace", "numpy.concatenate", "numpy.concatenate"], "function", ["None"], ["", "def", "generate_offset_map", "(", "source", ",", "target", ")", ":", "\n", "    ", "anchor_pts", "=", "[", "[", "0", ",", "0", "]", ",", "[", "0", ",", "256", "]", ",", "[", "256", ",", "0", "]", ",", "[", "256", ",", "256", "]", ",", "\n", "[", "0", ",", "128", "]", ",", "[", "128", ",", "0", "]", ",", "[", "256", ",", "128", "]", ",", "[", "128", ",", "256", "]", ",", "\n", "[", "0", ",", "64", "]", ",", "[", "0", ",", "192", "]", ",", "[", "256", ",", "64", "]", ",", "[", "256", ",", "192", "]", ",", "\n", "[", "64", ",", "0", "]", ",", "[", "192", ",", "0", "]", ",", "[", "64", ",", "256", "]", ",", "[", "192", ",", "256", "]", "]", "\n", "anchor_pts", "=", "np", ".", "asarray", "(", "anchor_pts", ")", "/", "256", "\n", "xi", ",", "yi", "=", "np", ".", "meshgrid", "(", "np", ".", "linspace", "(", "0", ",", "1", ",", "256", ")", ",", "np", ".", "linspace", "(", "0", ",", "1", ",", "256", ")", ")", "\n", "_source", "=", "np", ".", "concatenate", "(", "[", "source", ",", "anchor_pts", "]", ",", "axis", "=", "0", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "_target", "=", "np", ".", "concatenate", "(", "[", "target", ",", "anchor_pts", "]", ",", "axis", "=", "0", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "_offset", "=", "_source", "-", "_target", "\n", "\n", "# interp2d", "\n", "_triang", "=", "mtri", ".", "Triangulation", "(", "_target", "[", ":", ",", "0", "]", ",", "_target", "[", ":", ",", "1", "]", ")", "\n", "_interpx", "=", "mtri", ".", "LinearTriInterpolator", "(", "_triang", ",", "_offset", "[", ":", ",", "0", "]", ")", "\n", "_interpy", "=", "mtri", ".", "LinearTriInterpolator", "(", "_triang", ",", "_offset", "[", ":", ",", "1", "]", ")", "\n", "_offsetmapx", "=", "_interpx", "(", "xi", ",", "yi", ")", "\n", "_offsetmapy", "=", "_interpy", "(", "xi", ",", "yi", ")", "\n", "\n", "offsetmap", "=", "np", ".", "stack", "(", "[", "_offsetmapy", ",", "_offsetmapx", ",", "_offsetmapx", "*", "0", "]", ",", "axis", "=", "2", ")", "\n", "return", "offsetmap", "\n", "", ""]], "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Error.__init__": [[41, 43], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "losses", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Error.__call__": [[44, 63], ["utils.Error.losses.keys", "str", "str", "round", "round"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "update", ",", "val", "=", "0", ")", ":", "\n", "        ", "loss_name", "=", "update", "[", "0", "]", "\n", "loss_update", "=", "update", "[", "1", "]", "\n", "if", "loss_name", "not", "in", "self", ".", "losses", ".", "keys", "(", ")", ":", "\n", "            ", "self", ".", "losses", "[", "loss_name", "]", "=", "{", "'value'", ":", "0", ",", "'step'", ":", "0", ",", "'value_val'", ":", "0", ",", "'step_val'", ":", "0", "}", "\n", "", "if", "val", "==", "1", ":", "\n", "            ", "if", "loss_update", "is", "not", "None", ":", "\n", "                ", "self", ".", "losses", "[", "loss_name", "]", "[", "'value_val'", "]", "+=", "loss_update", "\n", "self", ".", "losses", "[", "loss_name", "]", "[", "'step_val'", "]", "+=", "1", "\n", "", "smooth_loss", "=", "str", "(", "round", "(", "self", ".", "losses", "[", "loss_name", "]", "[", "'value_val'", "]", "/", "(", "self", ".", "losses", "[", "loss_name", "]", "[", "'step_val'", "]", "+", "1e-5", ")", ",", "3", ")", ")", "\n", "return", "loss_name", "+", "':'", "+", "smooth_loss", "+", "','", "\n", "", "else", ":", "\n", "            ", "if", "loss_update", "is", "not", "None", ":", "\n", "                ", "self", ".", "losses", "[", "loss_name", "]", "[", "'value'", "]", "=", "self", ".", "losses", "[", "loss_name", "]", "[", "'value'", "]", "*", "0.9", "+", "loss_update", "*", "0.1", "\n", "self", ".", "losses", "[", "loss_name", "]", "[", "'step'", "]", "+=", "1", "\n", "", "if", "self", ".", "losses", "[", "loss_name", "]", "[", "'step'", "]", "==", "1", ":", "\n", "                ", "self", ".", "losses", "[", "loss_name", "]", "[", "'value'", "]", "=", "loss_update", "\n", "", "smooth_loss", "=", "str", "(", "round", "(", "self", ".", "losses", "[", "loss_name", "]", "[", "'value'", "]", ",", "3", ")", ")", "\n", "return", "loss_name", "+", "':'", "+", "smooth_loss", "+", "','", "\n", "\n"]], "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Error.reset": [[64, 66], ["None"], "methods", ["None"], ["", "", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "losses", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.plotResults": [[20, 39], ["tensorflow.concat", "tensorflow.cast", "tensorflow.clip_by_value", "tensorflow.image.resize_images", "tensorflow.split", "tensorflow.concat", "tf.concat.append", "tensorflow.concat", "tensorflow.split", "tensorflow.concat"], "function", ["None"], ["def", "plotResults", "(", "result_list", ")", ":", "\n", "    ", "column", "=", "[", "]", "\n", "for", "fig", "in", "result_list", ":", "\n", "        ", "shape", "=", "fig", ".", "shape", "\n", "fig", "=", "tf", ".", "clip_by_value", "(", "fig", ",", "0.0", ",", "1.0", ")", "\n", "row", "=", "[", "]", "\n", "if", "fig", ".", "shape", "[", "3", "]", "==", "1", ":", "\n", "            ", "fig", "=", "tf", ".", "concat", "(", "[", "fig", ",", "fig", ",", "fig", "]", ",", "axis", "=", "3", ")", "\n", "", "else", ":", "\n", "            ", "r", ",", "g", ",", "b", "=", "tf", ".", "split", "(", "fig", ",", "3", ",", "3", ")", "\n", "fig", "=", "tf", ".", "concat", "(", "[", "b", ",", "g", ",", "r", "]", ",", "3", ")", "\n", "", "fig", "=", "tf", ".", "image", ".", "resize_images", "(", "fig", ",", "[", "256", ",", "256", "]", ")", "\n", "row", "=", "tf", ".", "split", "(", "fig", ",", "shape", "[", "0", "]", ")", "\n", "row", "=", "tf", ".", "concat", "(", "row", ",", "axis", "=", "2", ")", "\n", "column", ".", "append", "(", "row", "[", "0", ",", ":", ",", ":", ",", ":", "]", ")", "\n", "\n", "", "column", "=", "tf", ".", "concat", "(", "column", ",", "axis", "=", "0", ")", "\n", "img", "=", "tf", ".", "cast", "(", "column", "*", "255", ",", "tf", ".", "uint8", ")", "\n", "return", "img", "\n", "\n"]], "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.PRelu": [[67, 74], ["tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.nn.relu", "x.get_shape", "tensorflow.constant_initializer", "abs"], "function", ["None"], ["", "", "def", "PRelu", "(", "x", ",", "scope", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "scope", "+", "'/PRelu'", ",", "reuse", "=", "tf", ".", "AUTO_REUSE", ")", ":", "\n", "        ", "alphas", "=", "tf", ".", "get_variable", "(", "'alpha'", ",", "x", ".", "get_shape", "(", ")", "[", "-", "1", "]", ",", "\n", "initializer", "=", "tf", ".", "constant_initializer", "(", "0.0", ")", ",", "\n", "dtype", "=", "tf", ".", "float32", ")", "\n", "x", "=", "tf", ".", "nn", ".", "relu", "(", "x", ")", "+", "alphas", "*", "(", "x", "-", "abs", "(", "x", ")", ")", "*", "0.5", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.FC": [[75, 97], ["arg_scope", "tensorflow.fully_connected", "tensorflow.batch_norm", "utils.PRelu", "tensorflow.dropout", "tensorflow.random_normal_initializer", "tensorflow.constant_initializer"], "function", ["home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.PRelu"], ["", "def", "FC", "(", "x", ",", "num", ",", "scope", ",", "training_nn", ",", "act", "=", "True", ",", "norm", "=", "True", ",", "apply_dropout", "=", "False", ")", ":", "\n", "    ", "with", "arg_scope", "(", "[", "layers", ".", "fully_connected", "]", ",", "\n", "weights_initializer", "=", "tf", ".", "random_normal_initializer", "(", "stddev", "=", "0.02", ")", ",", "\n", "biases_initializer", "=", "tf", ".", "constant_initializer", "(", "0.0", ")", ",", "\n", "activation_fn", "=", "None", ",", "\n", "normalizer_fn", "=", "None", ",", "\n", "trainable", "=", "training_nn", ",", "\n", "reuse", "=", "tf", ".", "AUTO_REUSE", ")", ":", "\n", "        ", "x", "=", "layers", ".", "fully_connected", "(", "x", ",", "num_outputs", "=", "num", ",", "scope", "=", "scope", ")", "\n", "if", "norm", ":", "\n", "            ", "x", "=", "layers", ".", "batch_norm", "(", "x", ",", "decay", "=", "0.99", ",", "\n", "scale", "=", "True", ",", "\n", "epsilon", "=", "1e-5", ",", "\n", "is_training", "=", "training_nn", ",", "\n", "updates_collections", "=", "None", ",", "\n", "reuse", "=", "tf", ".", "AUTO_REUSE", ",", "\n", "scope", "=", "scope", "+", "'/BN'", ")", "\n", "", "if", "act", ":", "\n", "            ", "x", "=", "PRelu", "(", "x", ",", "scope", ")", "\n", "", "if", "apply_dropout", ":", "\n", "            ", "x", "=", "layers", ".", "dropout", "(", "x", ",", "keep_prob", "=", "0.7", ",", "is_training", "=", "training_nn", ",", "scope", "=", "scope", "+", "'/dropout'", ")", "\n", "", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Conv": [[98, 123], ["arg_scope", "tensorflow.conv2d", "tensorflow.batch_norm", "utils.PRelu", "tensorflow.dropout", "tensorflow.random_normal_initializer", "tensorflow.constant_initializer"], "function", ["home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.PRelu"], ["", "def", "Conv", "(", "x", ",", "num", ",", "scope", ",", "training_nn", ",", "act", "=", "True", ",", "norm", "=", "True", ",", "apply_dropout", "=", "False", ",", "padding", "=", "'SAME'", ",", "stride", "=", "1", ")", ":", "\n", "    ", "with", "arg_scope", "(", "[", "layers", ".", "conv2d", "]", ",", "\n", "kernel_size", "=", "3", ",", "\n", "weights_initializer", "=", "tf", ".", "random_normal_initializer", "(", "stddev", "=", "0.02", ")", ",", "\n", "biases_initializer", "=", "tf", ".", "constant_initializer", "(", "0.0", ")", ",", "\n", "activation_fn", "=", "None", ",", "\n", "normalizer_fn", "=", "None", ",", "\n", "trainable", "=", "training_nn", ",", "\n", "padding", "=", "padding", ",", "\n", "reuse", "=", "tf", ".", "AUTO_REUSE", ",", "\n", "stride", "=", "stride", ")", ":", "\n", "        ", "x", "=", "layers", ".", "conv2d", "(", "x", ",", "num_outputs", "=", "num", ",", "scope", "=", "scope", ")", "\n", "if", "norm", ":", "\n", "            ", "x", "=", "layers", ".", "batch_norm", "(", "x", ",", "decay", "=", "0.99", ",", "\n", "scale", "=", "True", ",", "\n", "epsilon", "=", "1e-5", ",", "\n", "is_training", "=", "training_nn", ",", "\n", "updates_collections", "=", "None", ",", "\n", "reuse", "=", "tf", ".", "AUTO_REUSE", ",", "\n", "scope", "=", "scope", "+", "'/BN'", ")", "\n", "", "if", "act", ":", "\n", "            ", "x", "=", "PRelu", "(", "x", ",", "scope", ")", "\n", "", "if", "apply_dropout", ":", "\n", "            ", "x", "=", "layers", ".", "dropout", "(", "x", ",", "keep_prob", "=", "0.7", ",", "is_training", "=", "training_nn", ",", "scope", "=", "scope", "+", "'/dropout'", ")", "\n", "", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Downsample": [[124, 149], ["arg_scope", "tensorflow.conv2d", "tensorflow.batch_norm", "utils.PRelu", "tensorflow.dropout", "tensorflow.random_normal_initializer", "tensorflow.constant_initializer"], "function", ["home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.PRelu"], ["", "def", "Downsample", "(", "x", ",", "num", ",", "scope", ",", "training_nn", ",", "padding", "=", "'SAME'", ",", "act", "=", "True", ",", "norm", "=", "True", ",", "apply_dropout", "=", "False", ")", ":", "\n", "    ", "with", "arg_scope", "(", "[", "layers", ".", "conv2d", "]", ",", "\n", "kernel_size", "=", "3", ",", "\n", "weights_initializer", "=", "tf", ".", "random_normal_initializer", "(", "stddev", "=", "0.02", ")", ",", "\n", "biases_initializer", "=", "tf", ".", "constant_initializer", "(", "0.0", ")", ",", "\n", "activation_fn", "=", "None", ",", "\n", "normalizer_fn", "=", "None", ",", "\n", "trainable", "=", "training_nn", ",", "\n", "padding", "=", "padding", ",", "\n", "reuse", "=", "tf", ".", "AUTO_REUSE", ",", "\n", "stride", "=", "2", ")", ":", "\n", "        ", "x", "=", "layers", ".", "conv2d", "(", "x", ",", "num_outputs", "=", "num", ",", "scope", "=", "scope", ")", "\n", "if", "norm", ":", "\n", "            ", "x", "=", "layers", ".", "batch_norm", "(", "x", ",", "decay", "=", "0.99", ",", "\n", "scale", "=", "True", ",", "\n", "epsilon", "=", "1e-5", ",", "\n", "is_training", "=", "training_nn", ",", "\n", "updates_collections", "=", "None", ",", "\n", "reuse", "=", "tf", ".", "AUTO_REUSE", ",", "\n", "scope", "=", "scope", "+", "'/BN'", ")", "\n", "", "if", "act", ":", "\n", "            ", "x", "=", "PRelu", "(", "x", ",", "scope", ")", "\n", "", "if", "apply_dropout", ":", "\n", "            ", "x", "=", "layers", ".", "dropout", "(", "x", ",", "keep_prob", "=", "0.7", ",", "is_training", "=", "training_nn", ",", "scope", "=", "scope", "+", "'/dropout'", ")", "\n", "", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.Upsample": [[150, 173], ["arg_scope", "tensorflow.conv2d_transpose", "tensorflow.batch_norm", "utils.PRelu", "tensorflow.random_normal_initializer", "tensorflow.constant_initializer"], "function", ["home.repos.pwc.inspect_result.yaojieliu_ECCV20-STDN.model.utils.PRelu"], ["", "def", "Upsample", "(", "x", ",", "num", ",", "scope", ",", "training_nn", ",", "padding", "=", "'SAME'", ",", "act", "=", "True", ",", "norm", "=", "True", ")", ":", "\n", "    ", "with", "arg_scope", "(", "[", "layers", ".", "conv2d_transpose", "]", ",", "\n", "kernel_size", "=", "3", ",", "\n", "weights_initializer", "=", "tf", ".", "random_normal_initializer", "(", "stddev", "=", "0.02", ")", ",", "\n", "biases_initializer", "=", "tf", ".", "constant_initializer", "(", "0.0", ")", ",", "\n", "activation_fn", "=", "None", ",", "\n", "normalizer_fn", "=", "None", ",", "\n", "trainable", "=", "training_nn", ",", "\n", "padding", "=", "padding", ",", "\n", "reuse", "=", "tf", ".", "AUTO_REUSE", ",", "\n", "stride", "=", "2", ")", ":", "\n", "        ", "x", "=", "layers", ".", "conv2d_transpose", "(", "x", ",", "num_outputs", "=", "num", ",", "scope", "=", "scope", ")", "\n", "if", "norm", ":", "\n", "            ", "x", "=", "layers", ".", "batch_norm", "(", "x", ",", "decay", "=", "0.99", ",", "\n", "scale", "=", "True", ",", "\n", "epsilon", "=", "1e-5", ",", "\n", "is_training", "=", "training_nn", ",", "\n", "updates_collections", "=", "None", ",", "\n", "reuse", "=", "tf", ".", "AUTO_REUSE", ",", "\n", "scope", "=", "scope", "+", "'/BN'", ")", "\n", "", "if", "act", ":", "\n", "            ", "x", "=", "PRelu", "(", "x", ",", "scope", ")", "\n", "", "", "return", "x", "\n", "", ""]]}