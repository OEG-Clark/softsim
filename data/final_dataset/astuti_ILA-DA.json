{"home.repos.pwc.inspect_result.astuti_ILA-DA.None.model_factory.Resnet50Fc.__init__": [[5, 18], ["torch.Module.__init__", "torchvision.models.resnet50"], "methods", ["home.repos.pwc.inspect_result.astuti_ILA-DA.None.pre_process.PlaceCrop.__init__"], ["  ", "def", "__init__", "(", "self", ")", ":", "\n", "    ", "super", "(", "Resnet50Fc", ",", "self", ")", ".", "__init__", "(", ")", "\n", "model_resnet50", "=", "models", ".", "resnet50", "(", "pretrained", "=", "True", ")", "\n", "self", ".", "conv1", "=", "model_resnet50", ".", "conv1", "\n", "self", ".", "bn1", "=", "model_resnet50", ".", "bn1", "\n", "self", ".", "relu", "=", "model_resnet50", ".", "relu", "\n", "self", ".", "maxpool", "=", "model_resnet50", ".", "maxpool", "\n", "self", ".", "layer1", "=", "model_resnet50", ".", "layer1", "\n", "self", ".", "layer2", "=", "model_resnet50", ".", "layer2", "\n", "self", ".", "layer3", "=", "model_resnet50", ".", "layer3", "\n", "self", ".", "layer4", "=", "model_resnet50", ".", "layer4", "\n", "self", ".", "avgpool", "=", "model_resnet50", ".", "avgpool", "\n", "self", ".", "__in_features", "=", "model_resnet50", ".", "fc", ".", "in_features", "\n", "\n"]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.model_factory.Resnet50Fc.forward": [[19, 31], ["model_factory.Resnet50Fc.conv1", "model_factory.Resnet50Fc.bn1", "model_factory.Resnet50Fc.relu", "model_factory.Resnet50Fc.maxpool", "model_factory.Resnet50Fc.layer1", "model_factory.Resnet50Fc.layer2", "model_factory.Resnet50Fc.layer3", "model_factory.Resnet50Fc.layer4", "model_factory.Resnet50Fc.avgpool", "x.view.view.view", "x.view.view.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.model_factory.Resnet50Fc.output_num": [[32, 34], ["None"], "methods", ["None"], ["", "def", "output_num", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "__in_features", "\n", "\n"]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.model_factory.Resnet101Fc.__init__": [[36, 49], ["torch.Module.__init__", "torchvision.models.resnet101"], "methods", ["home.repos.pwc.inspect_result.astuti_ILA-DA.None.pre_process.PlaceCrop.__init__"], ["  ", "def", "__init__", "(", "self", ")", ":", "\n", "    ", "super", "(", "Resnet101Fc", ",", "self", ")", ".", "__init__", "(", ")", "\n", "model_resnet101", "=", "models", ".", "resnet101", "(", "pretrained", "=", "True", ")", "\n", "self", ".", "conv1", "=", "model_resnet101", ".", "conv1", "\n", "self", ".", "bn1", "=", "model_resnet101", ".", "bn1", "\n", "self", ".", "relu", "=", "model_resnet101", ".", "relu", "\n", "self", ".", "maxpool", "=", "model_resnet101", ".", "maxpool", "\n", "self", ".", "layer1", "=", "model_resnet101", ".", "layer1", "\n", "self", ".", "layer2", "=", "model_resnet101", ".", "layer2", "\n", "self", ".", "layer3", "=", "model_resnet101", ".", "layer3", "\n", "self", ".", "layer4", "=", "model_resnet101", ".", "layer4", "\n", "self", ".", "avgpool", "=", "model_resnet101", ".", "avgpool", "\n", "self", ".", "__in_features", "=", "model_resnet101", ".", "fc", ".", "in_features", "\n", "\n"]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.model_factory.Resnet101Fc.forward": [[50, 62], ["model_factory.Resnet101Fc.conv1", "model_factory.Resnet101Fc.bn1", "model_factory.Resnet101Fc.relu", "model_factory.Resnet101Fc.maxpool", "model_factory.Resnet101Fc.layer1", "model_factory.Resnet101Fc.layer2", "model_factory.Resnet101Fc.layer3", "model_factory.Resnet101Fc.layer4", "model_factory.Resnet101Fc.avgpool", "x.view.view.view", "x.view.view.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.model_factory.Resnet101Fc.output_num": [[63, 65], ["None"], "methods", ["None"], ["", "def", "output_num", "(", "self", ")", ":", "\n", "    ", "return", "self", ".", "__in_features", "\n", "", "", ""]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.train.discriminatorDANN.__init__": [[50, 68], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "train.discriminatorDANN.ad_layer1.weight.data.normal_", "train.discriminatorDANN.ad_layer1.bias.data.fill_", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "train.discriminatorDANN.ad_layer2.weight.data.normal_", "train.discriminatorDANN.ad_layer2.bias.data.fill_", "torch.Linear", "torch.Linear", "torch.Linear", "train.discriminatorDANN.ad_layer3.weight.data.normal_", "train.discriminatorDANN.ad_layer3.bias.data.fill_", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.astuti_ILA-DA.None.pre_process.PlaceCrop.__init__"], ["    ", "def", "__init__", "(", "self", ",", "feature_len", ")", ":", "\n", "        ", "super", "(", "discriminatorDANN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "0.5", ")", "\n", "\n", "self", ".", "ad_layer1", "=", "nn", ".", "Linear", "(", "feature_len", ",", "1024", ")", "\n", "self", ".", "ad_layer1", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "0.01", ")", "\n", "self", ".", "ad_layer1", ".", "bias", ".", "data", ".", "fill_", "(", "0.0", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Sequential", "(", "self", ".", "ad_layer1", ",", "nn", ".", "ReLU", "(", ")", ",", "nn", ".", "Dropout", "(", "0.5", ")", ")", "\n", "\n", "self", ".", "ad_layer2", "=", "nn", ".", "Linear", "(", "1024", ",", "1024", ")", "\n", "self", ".", "ad_layer2", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "0.01", ")", "\n", "self", ".", "ad_layer2", ".", "bias", ".", "data", ".", "fill_", "(", "0.0", ")", "\n", "\n", "self", ".", "ad_layer3", "=", "nn", ".", "Linear", "(", "1024", ",", "1", ")", "\n", "self", ".", "ad_layer3", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "0.3", ")", "\n", "self", ".", "ad_layer3", ".", "bias", ".", "data", ".", "fill_", "(", "0.0", ")", "\n", "self", ".", "fc2_3", "=", "nn", ".", "Sequential", "(", "self", ".", "ad_layer2", ",", "nn", ".", "ReLU", "(", ")", ",", "nn", ".", "Dropout", "(", "0.5", ")", ",", "self", ".", "ad_layer3", ",", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.train.discriminatorDANN.forward": [[69, 73], ["train.discriminatorDANN.fc1", "train.discriminatorDANN.fc2_3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "f2", "=", "self", ".", "fc1", "(", "x", ")", "\n", "f", "=", "self", ".", "fc2_3", "(", "f2", ")", "\n", "return", "f", "\n", "\n"]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.train.discriminatorCDAN.__init__": [[76, 90], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "train.discriminatorCDAN.ad_layer1.weight.data.normal_", "train.discriminatorCDAN.ad_layer1.bias.data.fill_", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "train.discriminatorCDAN.ad_layer2.weight.data.normal_", "train.discriminatorCDAN.ad_layer2.bias.data.fill_", "torch.Linear", "torch.Linear", "torch.Linear", "train.discriminatorCDAN.ad_layer3.weight.data.normal_", "train.discriminatorCDAN.ad_layer3.bias.data.fill_", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.astuti_ILA-DA.None.pre_process.PlaceCrop.__init__"], ["    ", "def", "__init__", "(", "self", ",", "feature_len", ")", ":", "\n", "        ", "super", "(", "discriminatorCDAN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "ad_layer1", "=", "nn", ".", "Linear", "(", "feature_len", "*", "31", ",", "1024", ")", "\n", "self", ".", "ad_layer1", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "0.01", ")", "\n", "self", ".", "ad_layer1", ".", "bias", ".", "data", ".", "fill_", "(", "0.0", ")", "\n", "self", ".", "fc1", "=", "nn", ".", "Sequential", "(", "self", ".", "ad_layer1", ",", "nn", ".", "ReLU", "(", ")", ",", "nn", ".", "Dropout", "(", "0.5", ")", ")", "\n", "\n", "self", ".", "ad_layer2", "=", "nn", ".", "Linear", "(", "1024", ",", "1024", ")", "\n", "self", ".", "ad_layer2", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "0.01", ")", "\n", "self", ".", "ad_layer2", ".", "bias", ".", "data", ".", "fill_", "(", "0.0", ")", "\n", "self", ".", "ad_layer3", "=", "nn", ".", "Linear", "(", "1024", ",", "1", ")", "\n", "self", ".", "ad_layer3", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "0.3", ")", "\n", "self", ".", "ad_layer3", ".", "bias", ".", "data", ".", "fill_", "(", "0.0", ")", "\n", "self", ".", "fc2_3", "=", "nn", ".", "Sequential", "(", "self", ".", "ad_layer2", ",", "nn", ".", "ReLU", "(", ")", ",", "nn", ".", "Dropout", "(", "0.5", ")", ",", "self", ".", "ad_layer3", ",", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.train.discriminatorCDAN.forward": [[91, 97], ["torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm", "torch.bmm.view", "torch.bmm.view", "torch.bmm.view", "train.discriminatorCDAN.fc1", "train.discriminatorCDAN.fc2_3", "y.unsqueeze", "x.unsqueeze", "y.size", "x.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "op_out", "=", "torch", ".", "bmm", "(", "y", ".", "unsqueeze", "(", "2", ")", ",", "x", ".", "unsqueeze", "(", "1", ")", ")", "\n", "ad_in", "=", "op_out", ".", "view", "(", "-", "1", ",", "y", ".", "size", "(", "1", ")", "*", "x", ".", "size", "(", "1", ")", ")", "\n", "f2", "=", "self", ".", "fc1", "(", "ad_in", ")", "\n", "f", "=", "self", ".", "fc2_3", "(", "f2", ")", "\n", "return", "f", "\n", "\n"]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.train.predictor.__init__": [[100, 105], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "train.predictor.classifier.weight.data.normal_", "train.predictor.classifier.bias.data.fill_"], "methods", ["home.repos.pwc.inspect_result.astuti_ILA-DA.None.pre_process.PlaceCrop.__init__"], ["    ", "def", "__init__", "(", "self", ",", "feature_len", ",", "cate_num", ")", ":", "\n", "        ", "super", "(", "predictor", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "feature_len", ",", "cate_num", ")", "\n", "self", ".", "classifier", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "0.01", ")", "\n", "self", ".", "classifier", ".", "bias", ".", "data", ".", "fill_", "(", "0.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.train.predictor.forward": [[106, 109], ["train.predictor.classifier"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "features", ")", ":", "\n", "        ", "activations", "=", "self", ".", "classifier", "(", "features", ")", "\n", "return", "(", "activations", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.train.net.__init__": [[112, 120], ["torch.Module.__init__", "model_factory.Resnet50Fc", "torch.Linear", "torch.Linear", "torch.Linear", "train.net.bottleneck_0.weight.data.normal_", "train.net.bottleneck_0.bias.data.fill_", "torch.Sequential", "torch.Sequential", "torch.Sequential", "train.predictor", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.astuti_ILA-DA.None.pre_process.PlaceCrop.__init__"], ["    ", "def", "__init__", "(", "self", ",", "feature_len", ")", ":", "\n", "        ", "super", "(", "net", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "model_fc", "=", "model_no", ".", "Resnet50Fc", "(", ")", "\n", "self", ".", "bottleneck_0", "=", "nn", ".", "Linear", "(", "feature_len", ",", "256", ")", "\n", "self", ".", "bottleneck_0", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "0.005", ")", "\n", "self", ".", "bottleneck_0", ".", "bias", ".", "data", ".", "fill_", "(", "0.1", ")", "\n", "self", ".", "bottleneck_layer", "=", "nn", ".", "Sequential", "(", "self", ".", "bottleneck_0", ",", "nn", ".", "ReLU", "(", ")", ",", "nn", ".", "Dropout", "(", "0.5", ")", ")", "\n", "self", ".", "classifier_layer", "=", "predictor", "(", "256", ",", "num_categories", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.train.net.forward": [[121, 126], ["train.net.model_fc", "train.net.bottleneck_layer", "train.net.classifier_layer"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "features", "=", "self", ".", "model_fc", "(", "x", ")", "\n", "out_bottleneck", "=", "self", ".", "bottleneck_layer", "(", "features", ")", "\n", "logits", "=", "self", ".", "classifier_layer", "(", "out_bottleneck", ")", "\n", "return", "(", "out_bottleneck", ",", "logits", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.train.net.get_parameters": [[127, 132], ["train.net.model_fc.parameters", "train.net.bottleneck_layer.parameters", "train.net.classifier_layer.parameters"], "methods", ["None"], ["", "def", "get_parameters", "(", "self", ")", ":", "\n", "        ", "parameter_list", "=", "[", "{", "\"params\"", ":", "self", ".", "model_fc", ".", "parameters", "(", ")", ",", "\"lr_mult\"", ":", "0.1", "}", ",", "{", "\"params\"", ":", "self", ".", "bottleneck_layer", ".", "parameters", "(", ")", ",", "\"lr_mult\"", ":", "1", "}", ",", "{", "\"params\"", ":", "self", ".", "classifier_layer", ".", "parameters", "(", ")", ",", "\"lr_mult\"", ":", "1", "}", "]", "\n", "return", "parameter_list", "\n", "\n"]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.train.test_target": [[13, 39], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "range", "torch.max", "torch.max", "torch.max", "iter", "len", "range", "labels.cuda.cuda", "range", "sum", "torch.sum().item", "torch.sum().item", "torch.sum().item", "float", "range", "iter_val[].next", "inputs[].cuda", "model", "sum.append", "sum.data.float", "labels.cuda.data.float", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "range", "range", "torch.sum", "torch.sum", "torch.sum", "torch.cat.size", "sum.data.float", "labels.cuda.data.float", "str", "torch.squeeze().float", "torch.squeeze().float", "torch.squeeze().float", "torch.squeeze", "torch.squeeze", "torch.squeeze"], "function", ["None"], ["def", "test_target", "(", "loader", ",", "model", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "start_test", "=", "True", "\n", "iter_val", "=", "[", "iter", "(", "loader", "[", "'val'", "+", "str", "(", "i", ")", "]", ")", "for", "i", "in", "range", "(", "10", ")", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "loader", "[", "'val0'", "]", ")", ")", ":", "\n", "            ", "data", "=", "[", "iter_val", "[", "j", "]", ".", "next", "(", ")", "for", "j", "in", "range", "(", "10", ")", "]", "\n", "inputs", "=", "[", "data", "[", "j", "]", "[", "0", "]", "for", "j", "in", "range", "(", "10", ")", "]", "\n", "labels", "=", "data", "[", "0", "]", "[", "1", "]", "\n", "for", "j", "in", "range", "(", "10", ")", ":", "\n", "                ", "inputs", "[", "j", "]", "=", "inputs", "[", "j", "]", ".", "cuda", "(", ")", "\n", "", "labels", "=", "labels", ".", "cuda", "(", ")", "\n", "outputs", "=", "[", "]", "\n", "for", "j", "in", "range", "(", "10", ")", ":", "\n", "                ", "_", ",", "output", "=", "model", "(", "inputs", "[", "j", "]", ")", "\n", "outputs", ".", "append", "(", "output", ")", "\n", "", "outputs", "=", "sum", "(", "outputs", ")", "\n", "if", "start_test", ":", "\n", "                ", "all_output", "=", "outputs", ".", "data", ".", "float", "(", ")", "\n", "all_label", "=", "labels", ".", "data", ".", "float", "(", ")", "\n", "start_test", "=", "False", "\n", "", "else", ":", "\n", "                ", "all_output", "=", "torch", ".", "cat", "(", "(", "all_output", ",", "outputs", ".", "data", ".", "float", "(", ")", ")", ",", "0", ")", "\n", "all_label", "=", "torch", ".", "cat", "(", "(", "all_label", ",", "labels", ".", "data", ".", "float", "(", ")", ")", ",", "0", ")", "\n", "", "", "_", ",", "predict", "=", "torch", ".", "max", "(", "all_output", ",", "1", ")", "\n", "accuracy", "=", "torch", ".", "sum", "(", "torch", ".", "squeeze", "(", "predict", ")", ".", "float", "(", ")", "==", "all_label", ")", ".", "item", "(", ")", "/", "float", "(", "all_label", ".", "size", "(", ")", "[", "0", "]", ")", "\n", "", "return", "accuracy", "\n", "\n"]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.train.inv_lr_scheduler": [[41, 48], ["None"], "function", ["None"], ["", "def", "inv_lr_scheduler", "(", "param_lr", ",", "optimizer", ",", "iter_num", ",", "gamma", ",", "power", ",", "init_lr", "=", "0.001", ")", ":", "\n", "    ", "lr", "=", "init_lr", "*", "(", "1", "+", "gamma", "*", "iter_num", ")", "**", "(", "-", "power", ")", "\n", "i", "=", "0", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "lr", "*", "param_lr", "[", "i", "]", "\n", "i", "+=", "1", "\n", "", "return", "optimizer", "\n", "\n"]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.adversarial.AdversarialLayer.forward": [[8, 12], ["None"], "methods", ["None"], ["@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "input", ")", ":", "\n", "        ", "AdversarialLayer", ".", "iter_num", "+=", "1", "\n", "return", "input", "*", "1.0", "\n", "\n"]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.adversarial.AdversarialLayer.backward": [[13, 22], ["numpy.float", "numpy.exp"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "gradOutput", ")", ":", "\n", "        ", "alpha", "=", "10", "\n", "low", "=", "0.0", "\n", "high", "=", "1.0", "\n", "lamb", "=", "2.0", "\n", "iter_num", ",", "max_iter", "=", "AdversarialLayer", ".", "iter_num", ",", "AdversarialLayer", ".", "max_iter", "\n", "coeff", "=", "np", ".", "float", "(", "lamb", "*", "(", "high", "-", "low", ")", "/", "(", "1.0", "+", "np", ".", "exp", "(", "-", "alpha", "*", "iter_num", "/", "max_iter", ")", ")", "-", "(", "high", "-", "low", ")", "+", "low", ")", "\n", "return", "-", "coeff", "*", "gradOutput", "", "", "", ""]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.sampler.BalancedBatchSampler.__init__": [[6, 32], ["numpy.array", "list", "len", "numpy.random.shuffle", "open", "csv.reader", "set", "numpy.random.shuffle", "sampler.BalancedBatchSampler.label_to_indices[].copy", "numpy.append", "sampler.BalancedBatchSampler.labels_list.append", "numpy.where", "range", "int"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "file_path", ",", "n_classes", ",", "n_samples", ")", ":", "\n", "        ", "self", ".", "labels_list", "=", "[", "]", "\n", "with", "open", "(", "file_path", ")", "as", "csv_file", ":", "\n", "            ", "csv_reader", "=", "csv", ".", "reader", "(", "csv_file", ",", "delimiter", "=", "' '", ")", "\n", "for", "row", "in", "csv_reader", ":", "\n", "                ", "self", ".", "labels_list", ".", "append", "(", "int", "(", "row", "[", "1", "]", ")", ")", "\n", "\n", "", "", "self", ".", "labels", "=", "np", ".", "array", "(", "self", ".", "labels_list", ")", "\n", "self", ".", "labels_set", "=", "list", "(", "set", "(", "self", ".", "labels", ")", ")", "\n", "self", ".", "label_to_indices", "=", "{", "label", ":", "np", ".", "where", "(", "self", ".", "labels", "==", "label", ")", "[", "0", "]", "\n", "for", "label", "in", "self", ".", "labels_set", "}", "#get indices for each class from the csv file", "\n", "\n", "for", "l", "in", "self", ".", "labels_set", ":", "\n", "            ", "np", ".", "random", ".", "shuffle", "(", "self", ".", "label_to_indices", "[", "l", "]", ")", "\n", "temp_arr", "=", "self", ".", "label_to_indices", "[", "l", "]", ".", "copy", "(", ")", "\n", "self", ".", "label_to_indices", "[", "l", "]", "=", "np", ".", "append", "(", "self", ".", "label_to_indices", "[", "l", "]", ",", "temp_arr", ")", "\n", "\n", "", "self", ".", "used_label_indices_count", "=", "{", "label", ":", "0", "for", "label", "in", "self", ".", "labels_set", "}", "#acts as pointer for tracking used indices", "\n", "self", ".", "count", "=", "0", "\n", "self", ".", "n_classes", "=", "n_classes", "\n", "self", ".", "n_samples", "=", "n_samples", "#samples per class", "\n", "self", ".", "len_dataset", "=", "len", "(", "self", ".", "labels_list", ")", "\n", "self", ".", "batch_size", "=", "self", ".", "n_samples", "*", "self", ".", "n_classes", "\n", "self", ".", "all_classes", "=", "[", "i", "for", "i", "in", "range", "(", "0", ",", "self", ".", "n_classes", ")", "]", "\n", "np", ".", "random", ".", "shuffle", "(", "self", ".", "all_classes", ")", "\n", "self", ".", "idx_class", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.sampler.BalancedBatchSampler.__iter__": [[33, 53], ["numpy.random.shuffle", "indices.extend", "len", "list", "numpy.random.shuffle", "numpy.append", "set", "sampler.BalancedBatchSampler.label_to_indices[].copy"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "self", ".", "count", "=", "0", "#to track if dataset has been explored", "\n", "while", "self", ".", "count", "+", "self", ".", "batch_size", "<", "self", ".", "len_dataset", ":", "\n", "            ", "np", ".", "random", ".", "shuffle", "(", "self", ".", "all_classes", ")", "\n", "indices", "=", "[", "]", "#collects the batch", "\n", "for", "class_", "in", "self", ".", "all_classes", ":", "\n", "                ", "indices", ".", "extend", "(", "self", ".", "label_to_indices", "[", "class_", "]", "[", "\n", "self", ".", "used_label_indices_count", "[", "class_", "]", ":", "self", ".", "used_label_indices_count", "[", "\n", "class_", "]", "+", "self", ".", "n_samples", "]", ")", "\n", "self", ".", "used_label_indices_count", "[", "class_", "]", "+=", "self", ".", "n_samples", "#move pointer for a particular class", "\n", "\n", "# reset pointer if all indices visited for that class", "\n", "if", "self", ".", "used_label_indices_count", "[", "class_", "]", "+", "self", ".", "n_samples", ">", "len", "(", "self", ".", "label_to_indices", "[", "class_", "]", ")", ":", "\n", "                    ", "indices_set", "=", "list", "(", "set", "(", "self", ".", "label_to_indices", "[", "class_", "]", ".", "copy", "(", ")", ")", ")", "\n", "np", ".", "random", ".", "shuffle", "(", "indices_set", ")", "\n", "self", ".", "label_to_indices", "[", "class_", "]", "=", "np", ".", "append", "(", "self", ".", "label_to_indices", "[", "class_", "]", ",", "indices_set", ")", "\n", "self", ".", "used_label_indices_count", "[", "class_", "]", "=", "0", "\n", "\n", "", "", "yield", "indices", "\n", "self", ".", "count", "+=", "self", ".", "n_classes", "*", "self", ".", "n_samples", "\n", "\n"]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.sampler.BalancedBatchSampler.__len__": [[54, 56], ["None"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "len_dataset", "//", "self", ".", "batch_size", "\n", "\n"]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.sampler.get_sampler": [[57, 60], ["sampler.BalancedBatchSampler"], "function", ["None"], ["", "", "def", "get_sampler", "(", "config_data", ")", ":", "\n", "    ", "sampler_src_train", "=", "BalancedBatchSampler", "(", "config_data", "[", "'path'", "]", ",", "config_data", "[", "'num_categories'", "]", ",", "config_data", "[", "'n_samples'", "]", ")", "\n", "return", "sampler_src_train", "\n", "\n"]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.data_list.ImageList.__init__": [[35, 46], ["data_list.make_dataset", "len", "RuntimeError"], "methods", ["home.repos.pwc.inspect_result.astuti_ILA-DA.None.data_list.make_dataset"], ["    ", "def", "__init__", "(", "self", ",", "image_list", ",", "labels", "=", "None", ",", "transform", "=", "None", ",", "target_transform", "=", "None", ",", "\n", "loader", "=", "default_loader", ",", "dataset", "=", "None", ")", ":", "\n", "        ", "use_path_for_labels", "=", "True", "if", "dataset", "==", "'compcars'", "else", "False", "\n", "imgs", "=", "make_dataset", "(", "image_list", ",", "labels", ",", "use_path_for_labels", "=", "use_path_for_labels", ")", "\n", "if", "len", "(", "imgs", ")", "==", "0", ":", "\n", "            ", "raise", "(", "RuntimeError", "(", "\"Found 0 images\"", ")", ")", "\n", "\n", "", "self", ".", "imgs", "=", "imgs", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "target_transform", "=", "target_transform", "\n", "self", ".", "loader", "=", "loader", "\n", "\n"]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.data_list.ImageList.__getitem__": [[47, 56], ["data_list.ImageList.loader", "data_list.ImageList.transform", "data_list.ImageList.target_transform"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "path", ",", "target", "=", "self", ".", "imgs", "[", "index", "]", "\n", "img", "=", "self", ".", "loader", "(", "path", ")", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "", "if", "self", ".", "target_transform", "is", "not", "None", ":", "\n", "            ", "target", "=", "self", ".", "target_transform", "(", "target", ")", "\n", "\n", "", "return", "img", ",", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.data_list.ImageList.__len__": [[57, 59], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "imgs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.data_list.make_dataset": [[4, 21], ["list", "len", "set", "len", "img.split", "enumerate", "image_list[].strip", "range", "image_list[].split", "numpy.array", "int", "val.split", "val.split", "img.split", "int", "val.split", "val.split"], "function", ["None"], ["def", "make_dataset", "(", "image_list", ",", "labels", ",", "use_path_for_labels", "=", "False", ")", ":", "\n", "    ", "if", "(", "use_path_for_labels", ")", ":", "\n", "        ", "all_make_ids", "=", "[", "img", ".", "split", "(", "\"/\"", ")", "[", "0", "]", "for", "img", "in", "image_list", "]", "\n", "set_make_ids", "=", "list", "(", "set", "(", "all_make_ids", ")", ")", "\n", "make_to_class", "=", "{", "idx", ":", "_id", "for", "idx", ",", "_id", "in", "enumerate", "(", "set_make_ids", ")", "}", "\n", "images", "=", "[", "(", "img", ",", "make_to_class", "[", "img", ".", "split", "(", "\"/\"", ")", "[", "0", "]", "]", ")", "for", "img", "in", "image_list", "]", "\n", "return", "images", "\n", "\n", "", "if", "labels", ":", "\n", "        ", "len_", "=", "len", "(", "image_list", ")", "\n", "images", "=", "[", "(", "image_list", "[", "i", "]", ".", "strip", "(", ")", ",", "labels", "[", "i", ",", ":", "]", ")", "for", "i", "in", "range", "(", "len_", ")", "]", "\n", "", "else", ":", "\n", "        ", "if", "len", "(", "image_list", "[", "0", "]", ".", "split", "(", ")", ")", ">", "2", ":", "\n", "            ", "images", "=", "[", "(", "val", ".", "split", "(", ")", "[", "0", "]", ",", "np", ".", "array", "(", "[", "int", "(", "la", ")", "for", "la", "in", "val", ".", "split", "(", ")", "[", "1", ":", "]", "]", ")", ")", "for", "val", "in", "image_list", "]", "\n", "", "else", ":", "\n", "            ", "images", "=", "[", "(", "val", ".", "split", "(", ")", "[", "0", "]", ",", "int", "(", "val", ".", "split", "(", ")", "[", "1", "]", ")", ")", "for", "val", "in", "image_list", "]", "\n", "", "", "return", "images", "\n", "\n"]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.data_list.pil_loader": [[23, 28], ["open", "PIL.Image.open", "img.convert"], "function", ["None"], ["", "def", "pil_loader", "(", "path", ")", ":", "\n", "# open path as file to avoid ResourceWarning (https://github.com/python-pillow/Pillow/issues/835)", "\n", "    ", "with", "open", "(", "path", ",", "'rb'", ")", "as", "f", ":", "\n", "        ", "with", "Image", ".", "open", "(", "f", ")", "as", "img", ":", "\n", "            ", "return", "img", ".", "convert", "(", "'RGB'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.data_list.default_loader": [[30, 32], ["data_list.pil_loader"], "function", ["home.repos.pwc.inspect_result.astuti_ILA-DA.None.data_list.pil_loader"], ["", "", "", "def", "default_loader", "(", "path", ")", ":", "\n", "    ", "return", "pil_loader", "(", "path", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.criterion_factory.MSCLoss.__init__": [[5, 11], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.astuti_ILA-DA.None.pre_process.PlaceCrop.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config_data", ")", ":", "\n", "        ", "super", "(", "MSCLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "m", "=", "config_data", "[", "'m'", "]", "\n", "self", ".", "mu", "=", "config_data", "[", "'mu'", "]", "# mu in number", "\n", "self", ".", "eps", "=", "1e-9", "\n", "self", ".", "k", "=", "config_data", "[", "'k'", "]", "# k for knn", "\n", "\n"]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.criterion_factory.MSCLoss.__get_sim_matrix": [[12, 17], ["torch.cdist", "torch.cdist", "torch.cdist", "torch.cdist"], "methods", ["None"], ["", "def", "__get_sim_matrix", "(", "self", ",", "out_src", ",", "out_tar", ")", ":", "\n", "        ", "matrix", "=", "torch", ".", "cdist", "(", "out_src", ",", "out_tar", ")", "\n", "matrix", "=", "matrix", "+", "1.0", "\n", "matrix", "=", "1.0", "/", "matrix", "\n", "return", "matrix", "\n", "\n"]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.criterion_factory.MSCLoss.__target_pseudolabels": [[18, 34], ["torch.split", "torch.split", "torch.split", "torch.split", "src_labels.unsqueeze().repeat", "range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "id.squeeze", "ind_split[].long", "label_list.append", "torch.mode", "torch.mode", "torch.mode", "torch.mode", "src_labels.unsqueeze", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "range"], "methods", ["None"], ["", "def", "__target_pseudolabels", "(", "self", ",", "sim_matrix", ",", "src_labels", ")", ":", "\n", "        ", "ind", "=", "torch", ".", "sort", "(", "sim_matrix", ",", "descending", "=", "True", ",", "dim", "=", "0", ")", ".", "indices", "\n", "ind_split", "=", "torch", ".", "split", "(", "ind", ",", "1", ",", "dim", "=", "1", ")", "\n", "ind_split", "=", "[", "id", ".", "squeeze", "(", ")", "for", "id", "in", "ind_split", "]", "\n", "vr_src", "=", "src_labels", ".", "unsqueeze", "(", "-", "1", ")", ".", "repeat", "(", "1", ",", "self", ".", "n_per_domain", ")", "\n", "label_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "self", ".", "n_per_domain", ")", ":", "\n", "            ", "_row", "=", "ind_split", "[", "i", "]", ".", "long", "(", ")", "\n", "_col", "=", "(", "torch", ".", "ones", "(", "self", ".", "n_per_domain", ")", "*", "i", ")", ".", "long", "(", ")", "\n", "_val", "=", "vr_src", "[", "_row", ",", "_col", "]", "\n", "top_n_val", "=", "_val", "[", "[", "j", "for", "j", "in", "range", "(", "0", ",", "self", ".", "k", ")", "]", "]", "\n", "label_list", ".", "append", "(", "top_n_val", ")", "\n", "\n", "", "all_top_labels", "=", "torch", ".", "stack", "(", "label_list", ",", "dim", "=", "1", ")", "\n", "assigned_target_labels", "=", "torch", ".", "mode", "(", "all_top_labels", ",", "dim", "=", "0", ")", ".", "values", "\n", "return", "assigned_target_labels", "\n", "\n"]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.criterion_factory.MSCLoss.forward": [[35, 73], ["criterion_factory.MSCLoss.__get_sim_matrix", "src_labels.squeeze", "criterion_factory.MSCLoss.__target_pseudolabels", "torch.split", "torch.split", "torch.split", "torch.split", "range", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "torch.narrow", "torch.narrow", "torch.narrow", "torch.narrow", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "criterion_factory.MSCLoss.calc_loss", "_id.squeeze", "torch.narrow", "torch.narrow", "torch.narrow", "torch.narrow", "torch.narrow", "torch.narrow", "torch.narrow", "torch.narrow", "simratio_score.append", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "filtered_sim_matrix_list.append", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum"], "methods", ["home.repos.pwc.inspect_result.astuti_ILA-DA.None.criterion_factory.MSCLoss.__get_sim_matrix", "home.repos.pwc.inspect_result.astuti_ILA-DA.None.criterion_factory.MSCLoss.__target_pseudolabels", "home.repos.pwc.inspect_result.astuti_ILA-DA.None.criterion_factory.MSCLoss.calc_loss"], ["", "def", "forward", "(", "self", ",", "src_features", ",", "src_labels", ",", "tgt_features", ")", ":", "\n", "\n", "        ", "sim_matrix", "=", "self", ".", "__get_sim_matrix", "(", "src_features", ",", "tgt_features", ")", "\n", "flat_src_labels", "=", "src_labels", ".", "squeeze", "(", ")", "\n", "\n", "assigned_tgt_labels", "=", "self", ".", "__target_pseudolabels", "(", "sim_matrix", ",", "src_labels", ")", "\n", "\n", "simratio_score", "=", "[", "]", "#sim-ratio (knn conf measure) for all tgt", "\n", "\n", "sim_matrix_split", "=", "torch", ".", "split", "(", "sim_matrix", ",", "1", ",", "dim", "=", "1", ")", "\n", "sim_matrix_split", "=", "[", "_id", ".", "squeeze", "(", ")", "for", "_id", "in", "sim_matrix_split", "]", "\n", "\n", "r", "=", "self", ".", "m", "\n", "for", "i", "in", "range", "(", "0", ",", "self", ".", "n_per_domain", ")", ":", "#nln: nearest like neighbours, nun: nearest unlike neighbours", "\n", "            ", "t_label", "=", "assigned_tgt_labels", "[", "i", "]", "\n", "nln_mask", "=", "(", "flat_src_labels", "==", "t_label", ")", "\n", "nln_sim_all", "=", "sim_matrix_split", "[", "i", "]", "[", "nln_mask", "]", "\n", "nln_sim_r", "=", "torch", ".", "narrow", "(", "torch", ".", "sort", "(", "nln_sim_all", ",", "descending", "=", "True", ")", "[", "0", "]", ",", "0", ",", "0", ",", "r", ")", "\n", "\n", "nun_mask", "=", "~", "(", "flat_src_labels", "==", "t_label", ")", "\n", "nun_sim_all", "=", "sim_matrix_split", "[", "i", "]", "[", "nun_mask", "]", "\n", "nun_sim_r", "=", "torch", ".", "narrow", "(", "torch", ".", "sort", "(", "nun_sim_all", ",", "descending", "=", "True", ")", "[", "0", "]", ",", "0", ",", "0", ",", "r", ")", "\n", "\n", "conf_score", "=", "(", "1.0", "*", "torch", ".", "sum", "(", "nln_sim_r", ")", "/", "torch", ".", "sum", "(", "nun_sim_r", ")", ")", ".", "item", "(", ")", "#sim ratio : confidence score", "\n", "simratio_score", ".", "append", "(", "conf_score", ")", "\n", "\n", "", "sort_ranking_score", ",", "ind_tgt", "=", "torch", ".", "sort", "(", "torch", ".", "tensor", "(", "simratio_score", ")", ",", "descending", "=", "True", ")", "\n", "top_n_tgt_ind", "=", "torch", ".", "narrow", "(", "ind_tgt", ",", "0", ",", "0", ",", "self", ".", "mu", ")", "#take top mu confident tgt labels", "\n", "\n", "filtered_sim_matrix_list", "=", "[", "]", "\n", "\n", "for", "idx", "in", "top_n_tgt_ind", ":", "\n", "            ", "filtered_sim_matrix_list", ".", "append", "(", "sim_matrix_split", "[", "idx", "]", ")", "\n", "\n", "", "filtered_sim_matrix", "=", "torch", ".", "stack", "(", "filtered_sim_matrix_list", ",", "dim", "=", "1", ")", "\n", "filtered_tgt_labels", "=", "assigned_tgt_labels", "[", "top_n_tgt_ind", "]", "\n", "loss", "=", "self", ".", "calc_loss", "(", "filtered_sim_matrix", ",", "src_labels", ",", "filtered_tgt_labels", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.criterion_factory.MSCLoss.__build_mask": [[74, 85], ["torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["None"], ["", "def", "__build_mask", "(", "self", ",", "vr_src", ",", "hr_tgt", ",", "n_tgt", ",", "same", "=", "True", ")", ":", "\n", "        ", "if", "same", ":", "\n", "            ", "mask", "=", "(", "vr_src", "==", "hr_tgt", ")", ".", "float", "(", ")", "\n", "", "else", ":", "\n", "            ", "mask", "=", "(", "~", "(", "vr_src", "==", "hr_tgt", ")", ")", ".", "float", "(", ")", "\n", "\n", "", "sum_row", "=", "(", "torch", ".", "sum", "(", "mask", ",", "dim", "=", "1", ")", ")", ">", "0.", "\n", "\n", "to_remove", "=", "[", "torch", ".", "ones", "(", "n_tgt", ")", "if", "(", "_s", ")", "else", "torch", ".", "zeros", "(", "n_tgt", ")", "for", "_s", "in", "sum_row", "]", "\n", "to_remove", "=", "torch", ".", "stack", "(", "to_remove", ",", "dim", "=", "0", ")", "\n", "return", "to_remove", "\n", "\n"]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.criterion_factory.MSCLoss.calc_loss": [[86, 115], ["src_labels.unsqueeze().repeat", "filtered_tgt_labels.unsqueeze().repeat", "criterion_factory.MSCLoss.__build_mask", "criterion_factory.MSCLoss.__build_mask", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "float", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "criterion_factory.MSCLoss.bool", "criterion_factory.MSCLoss.bool", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "src_labels.unsqueeze", "filtered_tgt_labels.unsqueeze", "criterion_factory.MSCLoss.cuda", "criterion_factory.MSCLoss.cuda", "mask_sim.cuda", "filtered_sim_matrix.cuda", "final_mask.cuda", "torch.log", "torch.log", "torch.log", "torch.log", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.isnan", "torch.softmax.sum", "torch.softmax.sum", "torch.softmax.sum", "torch.softmax.sum"], "methods", ["home.repos.pwc.inspect_result.astuti_ILA-DA.None.criterion_factory.MSCLoss.__build_mask", "home.repos.pwc.inspect_result.astuti_ILA-DA.None.criterion_factory.MSCLoss.__build_mask"], ["", "def", "calc_loss", "(", "self", ",", "filtered_sim_matrix", ",", "src_labels", ",", "filtered_tgt_labels", ")", ":", "\n", "        ", "n_src", "=", "src_labels", ".", "shape", "[", "0", "]", "\n", "n_tgt", "=", "filtered_tgt_labels", ".", "shape", "[", "0", "]", "\n", "\n", "vr_src", "=", "src_labels", ".", "unsqueeze", "(", "-", "1", ")", ".", "repeat", "(", "1", ",", "n_tgt", ")", "\n", "hr_tgt", "=", "filtered_tgt_labels", ".", "unsqueeze", "(", "-", "2", ")", ".", "repeat", "(", "n_src", ",", "1", ")", "\n", "\n", "mask_sim", "=", "(", "vr_src", "==", "hr_tgt", ")", ".", "float", "(", ")", "\n", "\n", "same", "=", "self", ".", "__build_mask", "(", "vr_src", ",", "hr_tgt", ",", "n_tgt", ",", "same", "=", "True", ")", "\n", "diff", "=", "self", ".", "__build_mask", "(", "vr_src", ",", "hr_tgt", ",", "n_tgt", ",", "same", "=", "False", ")", "\n", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "            ", "same", ",", "diff", ",", "mask_sim", "=", "same", ".", "cuda", "(", ")", ",", "diff", ".", "cuda", "(", ")", ",", "mask_sim", ".", "cuda", "(", ")", "\n", "\n", "", "final_mask", "=", "(", "same", ".", "bool", "(", ")", "&", "diff", ".", "bool", "(", ")", ")", "\n", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "            ", "filtered_sim_matrix", ",", "final_mask", "=", "filtered_sim_matrix", ".", "cuda", "(", ")", ",", "final_mask", ".", "cuda", "(", ")", "\n", "\n", "", "filtered_sim_matrix", "[", "~", "final_mask", "]", "=", "float", "(", "'-inf'", ")", "\n", "unpurged_exp_scores", "=", "torch", ".", "softmax", "(", "filtered_sim_matrix", ",", "dim", "=", "1", ")", "\n", "\n", "exp_scores", "=", "unpurged_exp_scores", "[", "~", "torch", ".", "isnan", "(", "unpurged_exp_scores", ".", "sum", "(", "dim", "=", "1", ")", ")", "]", "\n", "sim_labels", "=", "mask_sim", "[", "~", "torch", ".", "isnan", "(", "unpurged_exp_scores", ".", "sum", "(", "dim", "=", "1", ")", ")", "]", "\n", "\n", "contrastive_matrix", "=", "torch", ".", "sum", "(", "exp_scores", "*", "sim_labels", ",", "dim", "=", "1", ")", "\n", "loss", "=", "-", "1", "*", "torch", ".", "mean", "(", "torch", ".", "log", "(", "contrastive_matrix", ")", ")", "\n", "return", "loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.pre_process.ResizeImage.__init__": [[5, 10], ["isinstance", "int", "int"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "size", ")", ":", "\n", "      ", "if", "isinstance", "(", "size", ",", "int", ")", ":", "\n", "        ", "self", ".", "size", "=", "(", "int", "(", "size", ")", ",", "int", "(", "size", ")", ")", "\n", "", "else", ":", "\n", "        ", "self", ".", "size", "=", "size", "\n", "", "", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n"]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.pre_process.ResizeImage.__call__": [[10, 13], ["img.resize"], "methods", ["None"], ["", "", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "      ", "th", ",", "tw", "=", "self", ".", "size", "\n", "return", "img", ".", "resize", "(", "(", "th", ",", "tw", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.pre_process.PlaceCrop.__init__": [[23, 30], ["isinstance", "int", "int"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "size", ",", "start_x", ",", "start_y", ")", ":", "\n", "        ", "if", "isinstance", "(", "size", ",", "int", ")", ":", "\n", "            ", "self", ".", "size", "=", "(", "int", "(", "size", ")", ",", "int", "(", "size", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "size", "=", "size", "\n", "", "self", ".", "start_x", "=", "start_x", "\n", "self", ".", "start_y", "=", "start_y", "\n", "\n"]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.pre_process.PlaceCrop.__call__": [[31, 40], ["img.crop"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            img (PIL.Image): Image to be cropped.\n        Returns:\n            PIL.Image: Cropped image.\n        \"\"\"", "\n", "th", ",", "tw", "=", "self", ".", "size", "\n", "return", "img", ".", "crop", "(", "(", "self", ".", "start_x", ",", "self", ".", "start_y", ",", "self", ".", "start_x", "+", "tw", ",", "self", ".", "start_y", "+", "th", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.pre_process.ForceFlip.__call__": [[45, 53], ["img.transpose"], "methods", ["None"], ["def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            img (PIL.Image): Image to be flipped.\n        Returns:\n            PIL.Image: Randomly flipped image.\n        \"\"\"", "\n", "return", "img", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.pre_process.image_train": [[54, 63], ["torchvision.transforms.Normalize", "torchvision.transforms.Compose", "pre_process.ResizeImage", "torchvision.transforms.RandomSizedCrop", "torchvision.transforms.RandomHorizontalFlip", "torchvision.transforms.ToTensor"], "function", ["None"], ["", "", "def", "image_train", "(", "resize_size", "=", "256", ",", "crop_size", "=", "224", ")", ":", "\n", "  ", "normalize", "=", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "return", "transforms", ".", "Compose", "(", "[", "\n", "ResizeImage", "(", "resize_size", ")", ",", "\n", "transforms", ".", "RandomSizedCrop", "(", "crop_size", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.pre_process.image_test": [[65, 77], ["torchvision.transforms.Normalize", "torchvision.transforms.Compose", "pre_process.ResizeImage", "pre_process.PlaceCrop", "torchvision.transforms.ToTensor"], "function", ["None"], ["", "def", "image_test", "(", "resize_size", "=", "256", ",", "crop_size", "=", "224", ")", ":", "\n", "  ", "normalize", "=", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "start_first", "=", "0", "\n", "start_center", "=", "(", "resize_size", "-", "crop_size", "-", "1", ")", "/", "2", "\n", "start_last", "=", "resize_size", "-", "crop_size", "-", "1", "\n", "\n", "return", "transforms", ".", "Compose", "(", "[", "\n", "ResizeImage", "(", "resize_size", ")", ",", "\n", "PlaceCrop", "(", "crop_size", ",", "start_center", ",", "start_center", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.astuti_ILA-DA.None.pre_process.image_test_10crop": [[79, 147], ["torchvision.transforms.Normalize", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "pre_process.ResizeImage", "pre_process.ForceFlip", "pre_process.PlaceCrop", "torchvision.transforms.ToTensor", "pre_process.ResizeImage", "pre_process.ForceFlip", "pre_process.PlaceCrop", "torchvision.transforms.ToTensor", "pre_process.ResizeImage", "pre_process.ForceFlip", "pre_process.PlaceCrop", "torchvision.transforms.ToTensor", "pre_process.ResizeImage", "pre_process.ForceFlip", "pre_process.PlaceCrop", "torchvision.transforms.ToTensor", "pre_process.ResizeImage", "pre_process.ForceFlip", "pre_process.PlaceCrop", "torchvision.transforms.ToTensor", "pre_process.ResizeImage", "pre_process.PlaceCrop", "torchvision.transforms.ToTensor", "pre_process.ResizeImage", "pre_process.PlaceCrop", "torchvision.transforms.ToTensor", "pre_process.ResizeImage", "pre_process.PlaceCrop", "torchvision.transforms.ToTensor", "pre_process.ResizeImage", "pre_process.PlaceCrop", "torchvision.transforms.ToTensor", "pre_process.ResizeImage", "pre_process.PlaceCrop", "torchvision.transforms.ToTensor"], "function", ["None"], ["", "def", "image_test_10crop", "(", "resize_size", "=", "256", ",", "crop_size", "=", "224", ")", ":", "\n", "  ", "normalize", "=", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "start_first", "=", "0", "\n", "start_center", "=", "(", "resize_size", "-", "crop_size", "-", "1", ")", "/", "2", "\n", "start_last", "=", "resize_size", "-", "crop_size", "-", "1", "\n", "data_transforms", "=", "{", "}", "\n", "data_transforms", "[", "'val0'", "]", "=", "transforms", ".", "Compose", "(", "[", "\n", "ResizeImage", "(", "resize_size", ")", ",", "ForceFlip", "(", ")", ",", "\n", "PlaceCrop", "(", "crop_size", ",", "start_first", ",", "start_first", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", "\n", "]", ")", "\n", "data_transforms", "[", "'val1'", "]", "=", "transforms", ".", "Compose", "(", "[", "\n", "ResizeImage", "(", "resize_size", ")", ",", "ForceFlip", "(", ")", ",", "\n", "PlaceCrop", "(", "crop_size", ",", "start_last", ",", "start_last", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", "\n", "]", ")", "\n", "data_transforms", "[", "'val2'", "]", "=", "transforms", ".", "Compose", "(", "[", "\n", "ResizeImage", "(", "resize_size", ")", ",", "ForceFlip", "(", ")", ",", "\n", "PlaceCrop", "(", "crop_size", ",", "start_last", ",", "start_first", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", "\n", "]", ")", "\n", "data_transforms", "[", "'val3'", "]", "=", "transforms", ".", "Compose", "(", "[", "\n", "ResizeImage", "(", "resize_size", ")", ",", "ForceFlip", "(", ")", ",", "\n", "PlaceCrop", "(", "crop_size", ",", "start_first", ",", "start_last", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", "\n", "]", ")", "\n", "data_transforms", "[", "'val4'", "]", "=", "transforms", ".", "Compose", "(", "[", "\n", "ResizeImage", "(", "resize_size", ")", ",", "ForceFlip", "(", ")", ",", "\n", "PlaceCrop", "(", "crop_size", ",", "start_center", ",", "start_center", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", "\n", "]", ")", "\n", "data_transforms", "[", "'val5'", "]", "=", "transforms", ".", "Compose", "(", "[", "\n", "ResizeImage", "(", "resize_size", ")", ",", "\n", "PlaceCrop", "(", "crop_size", ",", "start_first", ",", "start_first", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", "\n", "]", ")", "\n", "data_transforms", "[", "'val6'", "]", "=", "transforms", ".", "Compose", "(", "[", "\n", "ResizeImage", "(", "resize_size", ")", ",", "\n", "PlaceCrop", "(", "crop_size", ",", "start_last", ",", "start_last", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", "\n", "]", ")", "\n", "data_transforms", "[", "'val7'", "]", "=", "transforms", ".", "Compose", "(", "[", "\n", "ResizeImage", "(", "resize_size", ")", ",", "\n", "PlaceCrop", "(", "crop_size", ",", "start_last", ",", "start_first", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", "\n", "]", ")", "\n", "data_transforms", "[", "'val8'", "]", "=", "transforms", ".", "Compose", "(", "[", "\n", "ResizeImage", "(", "resize_size", ")", ",", "\n", "PlaceCrop", "(", "crop_size", ",", "start_first", ",", "start_last", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", "\n", "]", ")", "\n", "data_transforms", "[", "'val9'", "]", "=", "transforms", ".", "Compose", "(", "[", "\n", "ResizeImage", "(", "resize_size", ")", ",", "\n", "PlaceCrop", "(", "crop_size", ",", "start_center", ",", "start_center", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", "\n", "]", ")", "\n", "return", "data_transforms", "\n", "", ""]]}