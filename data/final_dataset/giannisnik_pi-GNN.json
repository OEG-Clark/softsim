{"home.repos.pwc.inspect_result.giannisnik_pi-GNN.None.main.Features.__init__": [[20, 23], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "n_max", ",", "cat", "=", "True", ")", ":", "\n", "        ", "self", ".", "n_max", "=", "n_max", "\n", "self", ".", "cat", "=", "cat", "\n", "\n"]], "home.repos.pwc.inspect_result.giannisnik_pi-GNN.None.main.Features.__call__": [[24, 52], ["torch_geometric.utils.to_networkx", "torch_geometric.utils.to_networkx.remove_edges_from", "torch.FloatTensor().unsqueeze", "torch.FloatTensor().unsqueeze", "torch.FloatTensor().unsqueeze", "torch.FloatTensor().unsqueeze", "torch.FloatTensor().unsqueeze", "torch.FloatTensor().unsqueeze", "torch.FloatTensor().unsqueeze", "torch.FloatTensor().unsqueeze", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "networkx.selfloop_edges", "torch_geometric.utils.to_networkx.degree", "networkx.triangles", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch_geometric.utils.to_networkx.nodes", "torch_geometric.utils.to_networkx.nodes", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "x.view", "x.size", "torch_geometric.utils.to_networkx.number_of_nodes", "x.dim", "x.size", "x.size", "x.size", "x.size", "torch_geometric.utils.to_networkx.number_of_nodes"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "data", ")", ":", "\n", "        ", "x", "=", "data", ".", "x", "\n", "G", "=", "to_networkx", "(", "data", ",", "to_undirected", "=", "True", ")", "\n", "G", ".", "remove_edges_from", "(", "nx", ".", "selfloop_edges", "(", "G", ")", ")", "\n", "degs", "=", "[", "G", ".", "degree", "(", "v", ")", "for", "v", "in", "G", ".", "nodes", "(", ")", "]", "\n", "triangles", "=", "[", "nx", ".", "triangles", "(", "G", ",", "v", ")", "for", "v", "in", "G", ".", "nodes", "(", ")", "]", "\n", "degs", "=", "torch", ".", "FloatTensor", "(", "degs", ")", ".", "unsqueeze", "(", "1", ")", "\n", "triangles", "=", "torch", ".", "FloatTensor", "(", "triangles", ")", ".", "unsqueeze", "(", "1", ")", "\n", "deg_tri", "=", "torch", ".", "cat", "(", "[", "degs", ",", "triangles", "]", ",", "dim", "=", "-", "1", ")", "\n", "\n", "if", "x", "is", "not", "None", "and", "self", ".", "cat", ":", "\n", "            ", "x", "=", "x", ".", "view", "(", "-", "1", ",", "1", ")", "if", "x", ".", "dim", "(", ")", "==", "1", "else", "x", "\n", "features", "=", "torch", ".", "zeros", "(", "self", ".", "n_max", ",", "x", ".", "size", "(", "1", ")", "+", "2", ",", "dtype", "=", "x", ".", "dtype", ")", "\n", "if", "x", ".", "size", "(", "0", ")", "<=", "self", ".", "n_max", ":", "\n", "                ", "features", "[", ":", "x", ".", "size", "(", "0", ")", ",", ":", "2", "]", "=", "deg_tri", "[", ":", "x", ".", "size", "(", "0", ")", ",", ":", "]", "\n", "features", "[", ":", "x", ".", "size", "(", "0", ")", ",", "2", ":", "]", "=", "x", "\n", "", "else", ":", "\n", "                ", "features", "[", ":", ",", ":", "2", "]", "=", "deg_tri", "[", ":", "self", ".", "n_max", ",", ":", "]", "\n", "features", "[", ":", ",", "2", ":", "]", "=", "x", "[", ":", "self", ".", "n_max", ",", ":", "]", "\n", "", "", "else", ":", "\n", "            ", "features", "=", "torch", ".", "zeros", "(", "self", ".", "n_max", ",", "2", ")", "\n", "if", "G", ".", "number_of_nodes", "(", ")", "<=", "self", ".", "n_max", ":", "\n", "                ", "features", "[", ":", "G", ".", "number_of_nodes", "(", ")", ",", ":", "]", "=", "deg_tri", "\n", "", "else", ":", "\n", "                ", "features", "=", "deg_tri", "[", ":", "self", ".", "n_max", ",", ":", "]", "\n", "\n", "", "", "data", ".", "x", "=", "features", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.giannisnik_pi-GNN.None.main.MyTransform.__init__": [[55, 57], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "n_max", ")", ":", "\n", "        ", "self", ".", "n_max", "=", "n_max", "\n", "\n"]], "home.repos.pwc.inspect_result.giannisnik_pi-GNN.None.main.MyTransform.__call__": [[58, 76], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.nonzero().t.size", "torch.nonzero().t.size", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch_geometric.utils.to_networkx", "torch_geometric.utils.to_networkx.remove_nodes_from", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.nonzero().t", "torch.nonzero().t", "torch.nonzero().t", "torch.nonzero().t", "torch.arange().unsqueeze", "torch.arange().unsqueeze", "torch.arange().unsqueeze", "torch.arange().unsqueeze", "torch.arange().unsqueeze", "torch.arange().unsqueeze", "torch.arange().unsqueeze", "torch.arange().unsqueeze", "range", "networkx.to_numpy_matrix", "torch_geometric.utils.to_networkx.number_of_nodes", "torch.nonzero", "torch.nonzero", "torch.nonzero", "torch.nonzero", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.arange"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "data", ")", ":", "\n", "        ", "x", ",", "edge_index", "=", "data", ".", "x", ",", "data", ".", "edge_index", "\n", "self_loops", "=", "torch", ".", "cat", "(", "[", "torch", ".", "arange", "(", "0", ",", "self", ".", "n_max", ")", ".", "unsqueeze", "(", "0", ")", ",", "torch", ".", "arange", "(", "0", ",", "self", ".", "n_max", ")", ".", "unsqueeze", "(", "0", ")", "]", ",", "dim", "=", "0", ")", "\n", "if", "data", ".", "num_nodes", "<=", "self", ".", "n_max", ":", "\n", "            ", "adj", "=", "torch", ".", "zeros", "(", "self", ".", "n_max", ",", "self", ".", "n_max", ")", "\n", "adj", "[", "edge_index", "[", "0", ",", ":", "]", ",", "edge_index", "[", "1", ",", ":", "]", "]", "=", "1", "\n", "", "else", ":", "\n", "            ", "G", "=", "to_networkx", "(", "data", ",", "to_undirected", "=", "True", ")", "\n", "G", ".", "remove_nodes_from", "(", "range", "(", "self", ".", "n_max", ",", "G", ".", "number_of_nodes", "(", ")", ")", ")", "\n", "adj", "=", "torch", ".", "LongTensor", "(", "nx", ".", "to_numpy_matrix", "(", "G", ")", ")", "\n", "edge_index", "=", "torch", ".", "nonzero", "(", "adj", ")", ".", "t", "(", ")", "\n", "\n", "", "data", ".", "num_nodes", "=", "self", ".", "n_max", "\n", "data", ".", "num_edges", "=", "edge_index", ".", "size", "(", "1", ")", "\n", "edge_index", "=", "torch", ".", "cat", "(", "[", "edge_index", ",", "self_loops", "]", ",", "dim", "=", "1", ")", "\n", "data", ".", "adj", "=", "adj", "\n", "data", ".", "edge_index", "=", "edge_index", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.giannisnik_pi-GNN.None.main.train": [[106, 120], ["model.train", "data.to.to", "optimizer.zero_grad", "torch.nll_loss", "F.nll_loss.backward", "optimizer.step", "model", "F.nll_loss.item"], "function", ["home.repos.pwc.inspect_result.giannisnik_pi-GNN.None.main.train"], ["def", "train", "(", "epoch", ",", "loader", ",", "optimizer", ")", ":", "\n", "    ", "model", ".", "train", "(", ")", "\n", "loss_all", "=", "0", "\n", "n_samples", "=", "0", "\n", "for", "data", "in", "loader", ":", "\n", "        ", "data", "=", "data", ".", "to", "(", "device", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "loss", "=", "F", ".", "nll_loss", "(", "model", "(", "data", ")", ",", "data", ".", "y", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "loss_all", "+=", "data", ".", "num_graphs", "*", "loss", ".", "item", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "n_samples", "+=", "data", ".", "num_graphs", "\n", "", "return", "loss_all", "/", "n_samples", "\n", "\n"]], "home.repos.pwc.inspect_result.giannisnik_pi-GNN.None.main.val": [[122, 136], ["model.eval", "data.to.to", "model", "torch.nll_loss().item", "pred.eq().sum().item", "model.max", "torch.nll_loss", "pred.eq().sum", "pred.eq"], "function", ["None"], ["", "def", "val", "(", "loader", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "loss_all", "=", "0", "\n", "n_samples", "=", "0", "\n", "correct", "=", "0", "\n", "for", "data", "in", "loader", ":", "\n", "        ", "data", "=", "data", ".", "to", "(", "device", ")", "\n", "output", "=", "model", "(", "data", ")", "\n", "loss_all", "+=", "F", ".", "nll_loss", "(", "output", ",", "data", ".", "y", ",", "reduction", "=", "'sum'", ")", ".", "item", "(", ")", "\n", "pred", "=", "output", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "correct", "+=", "pred", ".", "eq", "(", "data", ".", "y", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "\n", "n_samples", "+=", "data", ".", "num_graphs", "\n", "", "return", "loss_all", "/", "n_samples", ",", "correct", "/", "n_samples", "\n", "\n"]], "home.repos.pwc.inspect_result.giannisnik_pi-GNN.None.main.test": [[138, 149], ["model.eval", "data.to.to", "pred.eq().sum().item", "model().max", "pred.eq().sum", "model", "pred.eq"], "function", ["None"], ["", "def", "test", "(", "loader", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "correct", "=", "0", "\n", "n_samples", "=", "0", "\n", "for", "data", "in", "loader", ":", "\n", "        ", "data", "=", "data", ".", "to", "(", "device", ")", "\n", "pred", "=", "model", "(", "data", ")", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "correct", "+=", "pred", ".", "eq", "(", "data", ".", "y", ")", ".", "sum", "(", ")", ".", "item", "(", ")", "\n", "\n", "n_samples", "+=", "data", ".", "num_graphs", "\n", "", "return", "correct", "/", "n_samples", "\n", "\n"]], "home.repos.pwc.inspect_result.giannisnik_pi-GNN.None.model.pi_GNN.__init__": [[51, 102], ["torch.Module.__init__", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "list", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Softmax", "torch.Softmax", "torch.Softmax", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "model.pi_GNN.init_weights", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "list.append", "range", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.LayerNorm", "torch.LayerNorm", "torch.LayerNorm", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch_geometric.nn.GCNConv", "list.append", "list.append", "range", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.Linear", "torch.Linear", "torch.Linear", "torch_geometric.nn.GCNConv", "torch_geometric.nn.GINConv", "list.append", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch_geometric.nn.GINConv", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.BatchNorm1d", "torch.Linear", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.giannisnik_pi-GNN.None.model.pi_GNN.__init__", "home.repos.pwc.inspect_result.giannisnik_pi-GNN.None.model.pi_GNN.init_weights"], ["    ", "def", "__init__", "(", "self", ",", "input_dim", ",", "hidden_dim", ",", "n_max", ",", "hidden_nodes", ",", "n_layers", ",", "use_dustbins", ",", "features", ",", "dropout", ",", "n_classes", ")", ":", "\n", "        ", "super", "(", "pi_GNN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "n_max", "=", "n_max", "\n", "self", ".", "n_layers", "=", "n_layers", "\n", "self", ".", "use_dustbins", "=", "use_dustbins", "\n", "self", ".", "hidden_nodes", "=", "hidden_nodes", "\n", "self", ".", "features", "=", "features", "\n", "\n", "if", "input_dim", ">", "2", ":", "\n", "            ", "self", ".", "has_features", "=", "True", "\n", "", "else", ":", "\n", "            ", "self", ".", "has_features", "=", "False", "\n", "\n", "", "self", ".", "weight1", "=", "Parameter", "(", "torch", ".", "FloatTensor", "(", "hidden_nodes", ",", "hidden_dim", ")", ")", "\n", "self", ".", "alpha", "=", "Parameter", "(", "torch", ".", "tensor", "(", ".01", ")", ")", "\n", "\n", "lst", "=", "list", "(", ")", "\n", "if", "self", ".", "features", "==", "'gcn'", ":", "\n", "            ", "lst", ".", "append", "(", "GCNConv", "(", "input_dim", ",", "hidden_dim", ")", ")", "\n", "for", "i", "in", "range", "(", "n_layers", "-", "1", ")", ":", "\n", "                ", "lst", ".", "append", "(", "GCNConv", "(", "hidden_dim", ",", "hidden_dim", ")", ")", "\n", "", "self", ".", "mp", "=", "nn", ".", "ModuleList", "(", "lst", ")", "\n", "", "elif", "self", ".", "features", "==", "'gin'", ":", "\n", "            ", "lst", ".", "append", "(", "GINConv", "(", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "input_dim", ",", "hidden_dim", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "nn", ".", "BatchNorm1d", "(", "hidden_dim", ")", ",", "nn", ".", "Linear", "(", "hidden_dim", ",", "hidden_dim", ")", ",", "nn", ".", "ReLU", "(", ")", ")", ")", ")", "\n", "for", "i", "in", "range", "(", "n_layers", "-", "1", ")", ":", "\n", "                ", "lst", ".", "append", "(", "GINConv", "(", "nn", ".", "Sequential", "(", "nn", ".", "Linear", "(", "hidden_dim", ",", "hidden_dim", ")", ",", "nn", ".", "ReLU", "(", ")", ",", "nn", ".", "BatchNorm1d", "(", "hidden_dim", ")", ",", "nn", ".", "Linear", "(", "hidden_dim", ",", "hidden_dim", ")", ",", "nn", ".", "ReLU", "(", ")", ")", ")", ")", "\n", "", "self", ".", "mp", "=", "nn", ".", "ModuleList", "(", "lst", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "fc2", "=", "nn", ".", "Linear", "(", "2", ",", "hidden_dim", ")", "\n", "if", "self", ".", "has_features", ":", "\n", "                ", "self", ".", "weight2", "=", "Parameter", "(", "torch", ".", "FloatTensor", "(", "hidden_nodes", ",", "hidden_dim", ")", ")", "\n", "self", ".", "fc3", "=", "nn", ".", "Linear", "(", "input_dim", "-", "2", ",", "hidden_dim", ")", "\n", "\n", "", "", "self", ".", "ln1", "=", "nn", ".", "LayerNorm", "(", "hidden_nodes", "**", "2", ")", "\n", "self", ".", "fc4", "=", "nn", ".", "Linear", "(", "(", "hidden_nodes", "**", "2", ")", ",", "256", ")", "\n", "\n", "if", "self", ".", "has_features", ":", "\n", "            ", "self", ".", "ln2", "=", "nn", ".", "LayerNorm", "(", "hidden_nodes", "*", "(", "input_dim", "-", "2", ")", ")", "\n", "self", ".", "fc5", "=", "nn", ".", "Linear", "(", "hidden_nodes", "*", "(", "input_dim", "-", "2", ")", ",", "256", ")", "\n", "self", ".", "fc6", "=", "nn", ".", "Linear", "(", "512", ",", "64", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "fc6", "=", "nn", ".", "Linear", "(", "256", ",", "64", ")", "\n", "", "self", ".", "fc7", "=", "nn", ".", "Linear", "(", "64", ",", "n_classes", ")", "\n", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "dropout", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "self", ".", "softmax", "=", "nn", ".", "Softmax", "(", "dim", "=", "2", ")", "\n", "\n", "self", ".", "bin_score", "=", "Parameter", "(", "torch", ".", "tensor", "(", "1.", ")", ")", "\n", "self", ".", "init_weights", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.giannisnik_pi-GNN.None.model.pi_GNN.init_weights": [[103, 107], ["model.pi_GNN.weight1.data.uniform_", "model.pi_GNN.weight2.data.uniform_"], "methods", ["None"], ["", "def", "init_weights", "(", "self", ")", ":", "\n", "        ", "self", ".", "weight1", ".", "data", ".", "uniform_", "(", "-", "1", ",", "1", ")", "\n", "if", "self", ".", "has_features", "and", "self", ".", "features", "==", "'raw'", ":", "\n", "            ", "self", ".", "weight2", ".", "data", ".", "uniform_", "(", "-", "1", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.giannisnik_pi-GNN.None.model.pi_GNN.forward": [[108, 174], ["adj.view.view.view", "model.pi_GNN.view", "model.pi_GNN.relu", "model.log_optimal_transport", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "model.pi_GNN.ln1", "model.pi_GNN.relu", "model.pi_GNN.dropout", "model.pi_GNN.relu", "model.pi_GNN.dropout", "model.pi_GNN.fc7", "torch.log_softmax", "torch.log_softmax", "torch.log_softmax", "range", "model.pi_GNN.relu", "model.pi_GNN.size", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "model.pi_GNN.relu", "feats.view.view.view", "model.pi_GNN.relu", "model.log_optimal_transport", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "model.pi_GNN.sigmoid", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "model.pi_GNN.fc4", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "torch.reshape", "model.pi_GNN.ln2", "model.pi_GNN.relu", "model.pi_GNN.dropout", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.pi_GNN.fc6", "model.pi_GNN.relu", "model.pi_GNN.dropout", "model.pi_GNN.fc2", "model.pi_GNN.fc3", "feats.view.view.size", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum", "torch.einsum.size", "torch.einsum.size", "torch.einsum.size", "model.pi_GNN.fc5", "torch.einsum.size", "torch.einsum.size", "torch.einsum.size", "x[].view", "x[].view", "x[].size", "x[].size"], "methods", ["home.repos.pwc.inspect_result.giannisnik_pi-GNN.None.model.log_optimal_transport", "home.repos.pwc.inspect_result.giannisnik_pi-GNN.None.model.log_optimal_transport"], ["", "", "def", "forward", "(", "self", ",", "data", ")", ":", "\n", "        ", "x", ",", "adj", ",", "edge_index", "=", "data", ".", "x", ",", "data", ".", "adj", ",", "data", ".", "edge_index", "\n", "#x = x.view(-1, self.n_max, x.size(1))", "\n", "adj", "=", "adj", ".", "view", "(", "-", "1", ",", "self", ".", "n_max", ",", "self", ".", "n_max", ")", "\n", "if", "self", ".", "features", "==", "'raw'", ":", "\n", "            ", "struc_feats", "=", "x", "[", ":", ",", ":", "2", "]", "\n", "", "else", ":", "\n", "            ", "struc_feats", "=", "x", "\n", "\n", "", "if", "self", ".", "features", "==", "'gcn'", "or", "self", ".", "features", "==", "'gin'", ":", "\n", "            ", "for", "i", "in", "range", "(", "self", ".", "n_layers", ")", ":", "\n", "                ", "struc_feats", "=", "self", ".", "relu", "(", "self", ".", "mp", "[", "i", "]", "(", "struc_feats", ",", "edge_index", ")", ")", "\n", "struc_feats", "=", "self", ".", "dropout", "(", "struc_feats", ")", "\n", "", "", "else", ":", "\n", "            ", "struc_feats", "=", "self", ".", "relu", "(", "self", ".", "fc2", "(", "struc_feats", ")", ")", "\n", "\n", "", "struc_feats", "=", "struc_feats", ".", "view", "(", "-", "1", ",", "self", ".", "n_max", ",", "struc_feats", ".", "size", "(", "1", ")", ")", "\n", "scores", "=", "self", ".", "relu", "(", "torch", ".", "einsum", "(", "\"abc,dc->adb\"", ",", "(", "struc_feats", ",", "self", ".", "weight1", ")", ")", ")", "\n", "P_struc_feats", "=", "log_optimal_transport", "(", "scores", ",", "self", ".", "use_dustbins", ",", "self", ".", "bin_score", ",", "100", ")", "\n", "P_struc_feats", "=", "torch", ".", "exp", "(", "P_struc_feats", ")", "\n", "\n", "if", "self", ".", "has_features", "and", "self", ".", "features", "==", "'raw'", ":", "\n", "            ", "feats", "=", "x", "[", ":", ",", "2", ":", "]", "\n", "feats", "=", "self", ".", "relu", "(", "self", ".", "fc3", "(", "feats", ")", ")", "\n", "feats", "=", "feats", ".", "view", "(", "-", "1", ",", "self", ".", "n_max", ",", "feats", ".", "size", "(", "1", ")", ")", "\n", "scores", "=", "self", ".", "relu", "(", "torch", ".", "einsum", "(", "\"abc,dc->adb\"", ",", "(", "feats", ",", "self", ".", "weight2", ")", ")", ")", "\n", "P_feats", "=", "log_optimal_transport", "(", "scores", ",", "self", ".", "use_dustbins", ",", "self", ".", "bin_score", ",", "100", ")", "\n", "P_feats", "=", "torch", ".", "exp", "(", "P_feats", ")", "\n", "\n", "alpha", "=", "self", ".", "sigmoid", "(", "self", ".", "alpha", ")", "\n", "P", "=", "alpha", "*", "P_struc_feats", "+", "(", "1", "-", "alpha", ")", "*", "P_feats", "\n", "", "else", ":", "\n", "            ", "P", "=", "P_struc_feats", "\n", "\n", "", "if", "self", ".", "use_dustbins", ":", "\n", "            ", "adj_aligned", "=", "torch", ".", "einsum", "(", "\"abc,acd->abd\"", ",", "(", "P", "[", ":", ",", ":", "-", "1", ",", ":", "-", "1", "]", ",", "adj", ")", ")", "\n", "adj_aligned", "=", "torch", ".", "einsum", "(", "\"abc,adc->abd\"", ",", "(", "adj_aligned", ",", "P", "[", ":", ",", ":", "-", "1", ",", ":", "-", "1", "]", ")", ")", "\n", "\n", "if", "self", ".", "has_features", ":", "\n", "                ", "feats_aligned", "=", "torch", ".", "einsum", "(", "\"abc,acd->abd\"", ",", "(", "P", "[", ":", ",", ":", "-", "1", ",", ":", "-", "1", "]", ",", "x", "[", ":", ",", "2", ":", "]", ".", "view", "(", "-", "1", ",", "self", ".", "n_max", ",", "x", "[", ":", ",", "2", ":", "]", ".", "size", "(", "1", ")", ")", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "adj_aligned", "=", "torch", ".", "einsum", "(", "\"abc,acd->abd\"", ",", "(", "P", ",", "adj", ")", ")", "\n", "adj_aligned", "=", "torch", ".", "einsum", "(", "\"abc,adc->abd\"", ",", "(", "adj_aligned", ",", "P", ")", ")", "\n", "\n", "if", "self", ".", "has_features", ":", "\n", "                ", "feats_aligned", "=", "torch", ".", "einsum", "(", "\"abc,acd->abd\"", ",", "(", "P", ",", "x", "[", ":", ",", "2", ":", "]", ".", "view", "(", "-", "1", ",", "self", ".", "n_max", ",", "x", "[", ":", ",", "2", ":", "]", ".", "size", "(", "1", ")", ")", ")", ")", "\n", "\n", "", "", "adj_aligned", "=", "torch", ".", "reshape", "(", "adj_aligned", ",", "(", "adj_aligned", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", "\n", "adj_aligned", "=", "self", ".", "ln1", "(", "adj_aligned", ")", "\n", "out_adj", "=", "self", ".", "relu", "(", "self", ".", "fc4", "(", "adj_aligned", ")", ")", "\n", "out_adj", "=", "self", ".", "dropout", "(", "out_adj", ")", "\n", "\n", "\n", "if", "self", ".", "has_features", ":", "\n", "            ", "feats_aligned", "=", "torch", ".", "reshape", "(", "feats_aligned", ",", "(", "feats_aligned", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", "\n", "feats_aligned", "=", "self", ".", "ln2", "(", "feats_aligned", ")", "\n", "out_feats", "=", "self", ".", "relu", "(", "self", ".", "fc5", "(", "feats_aligned", ")", ")", "\n", "out_feats", "=", "self", ".", "dropout", "(", "out_feats", ")", "\n", "out", "=", "torch", ".", "cat", "(", "[", "out_adj", ",", "out_feats", "]", ",", "dim", "=", "1", ")", "\n", "", "else", ":", "\n", "            ", "out", "=", "out_adj", "\n", "\n", "", "out", "=", "self", ".", "relu", "(", "self", ".", "fc6", "(", "out", ")", ")", "\n", "out", "=", "self", ".", "dropout", "(", "out", ")", "\n", "out", "=", "self", ".", "fc7", "(", "out", ")", "\n", "return", "F", ".", "log_softmax", "(", "out", ",", "dim", "=", "1", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.giannisnik_pi-GNN.None.model.log_sinkhorn_iterations": [[13, 20], ["range", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "v.unsqueeze", "torch.logsumexp", "torch.logsumexp", "torch.logsumexp", "torch.logsumexp", "torch.logsumexp", "torch.logsumexp", "u.unsqueeze", "v.unsqueeze", "u.unsqueeze"], "function", ["None"], ["def", "log_sinkhorn_iterations", "(", "Z", ",", "log_mu", ",", "log_nu", ",", "iters", ")", ":", "\n", "    ", "\"\"\" Perform Sinkhorn Normalization in Log-space for stability\"\"\"", "\n", "u", ",", "v", "=", "torch", ".", "zeros_like", "(", "log_mu", ")", ",", "torch", ".", "zeros_like", "(", "log_nu", ")", "\n", "for", "_", "in", "range", "(", "iters", ")", ":", "\n", "        ", "u", "=", "log_mu", "-", "torch", ".", "logsumexp", "(", "Z", "+", "v", ".", "unsqueeze", "(", "1", ")", ",", "dim", "=", "2", ")", "\n", "v", "=", "log_nu", "-", "torch", ".", "logsumexp", "(", "Z", "+", "u", ".", "unsqueeze", "(", "2", ")", ",", "dim", "=", "1", ")", "\n", "", "return", "Z", "+", "u", ".", "unsqueeze", "(", "2", ")", "+", "v", ".", "unsqueeze", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.giannisnik_pi-GNN.None.model.log_optimal_transport": [[22, 48], ["scores.new_tensor", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "model.log_sinkhorn_iterations", "alpha.expand.expand", "alpha.expand.expand", "alpha.expand.expand", "torch.cat", "torch.cat", "torch.cat", "log_mu[].expand", "log_nu[].expand", "norm.expand", "norm.expand", "norm.expand", "norm.expand", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "ns.log", "ms.log"], "function", ["home.repos.pwc.inspect_result.giannisnik_pi-GNN.None.model.log_sinkhorn_iterations"], ["", "def", "log_optimal_transport", "(", "scores", ",", "use_dustbins", ",", "alpha", ",", "iters", ")", ":", "\n", "    ", "\"\"\" Perform Differentiable Optimal Transport in Log-space for stability\"\"\"", "\n", "b", ",", "m", ",", "n", "=", "scores", ".", "shape", "\n", "one", "=", "scores", ".", "new_tensor", "(", "1", ")", "\n", "ms", ",", "ns", "=", "(", "m", "*", "one", ")", ".", "to", "(", "scores", ")", ",", "(", "n", "*", "one", ")", ".", "to", "(", "scores", ")", "\n", "\n", "if", "use_dustbins", ":", "\n", "        ", "bins0", "=", "alpha", ".", "expand", "(", "b", ",", "m", ",", "1", ")", "\n", "bins1", "=", "alpha", ".", "expand", "(", "b", ",", "1", ",", "n", ")", "\n", "alpha", "=", "alpha", ".", "expand", "(", "b", ",", "1", ",", "1", ")", "\n", "couplings", "=", "torch", ".", "cat", "(", "[", "torch", ".", "cat", "(", "[", "scores", ",", "bins0", "]", ",", "-", "1", ")", ",", "torch", ".", "cat", "(", "[", "bins1", ",", "alpha", "]", ",", "-", "1", ")", "]", ",", "1", ")", "\n", "", "else", ":", "\n", "        ", "couplings", "=", "scores", "\n", "\n", "", "norm", "=", "-", "(", "ms", "+", "ns", ")", ".", "log", "(", ")", "\n", "log_mu", "=", "torch", ".", "cat", "(", "[", "norm", ".", "expand", "(", "m", ")", ",", "ns", ".", "log", "(", ")", "[", "None", "]", "+", "norm", "]", ")", "\n", "log_nu", "=", "torch", ".", "cat", "(", "[", "norm", ".", "expand", "(", "n", ")", ",", "ms", ".", "log", "(", ")", "[", "None", "]", "+", "norm", "]", ")", "\n", "\n", "if", "not", "use_dustbins", ":", "\n", "        ", "log_mu", ",", "log_nu", "=", "norm", ".", "expand", "(", "m", ")", ",", "norm", ".", "expand", "(", "n", ")", "\n", "\n", "", "log_mu", ",", "log_nu", "=", "log_mu", "[", "None", "]", ".", "expand", "(", "b", ",", "-", "1", ")", ",", "log_nu", "[", "None", "]", ".", "expand", "(", "b", ",", "-", "1", ")", "\n", "\n", "Z", "=", "log_sinkhorn_iterations", "(", "couplings", ",", "log_mu", ",", "log_nu", ",", "iters", ")", "\n", "Z", "=", "Z", "-", "norm", "# multiply probabilities by M+N", "\n", "return", "Z", "\n", "\n"]]}