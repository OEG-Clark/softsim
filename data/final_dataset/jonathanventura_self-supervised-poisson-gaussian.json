{"home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets.GaussianLayer.__init__": [[11, 13], ["tensorflow.keras.layers.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets.PoissonGaussianLayer.__init__"], ["def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "GaussianLayer", ",", "self", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets.GaussianLayer.build": [[14, 22], ["super().build", "nets.GaussianLayer.add_weight", "tensorflow.keras.initializers.Constant", "tensorflow.keras.initializers.Constant"], "methods", ["home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets.PoissonGaussianLayer.build"], ["", "def", "build", "(", "self", ",", "input_shape", ")", ":", "\n", "        ", "if", "not", "input_shape", ":", "\n", "# global parameter", "\n", "            ", "self", ".", "b", "=", "self", ".", "add_weight", "(", "name", "=", "'b'", ",", "\n", "shape", "=", "(", ")", ",", "\n", "initializer", "=", "Constant", "(", "0", ")", ",", "\n", "trainable", "=", "True", ")", "\n", "", "super", "(", "GaussianLayer", ",", "self", ")", ".", "build", "(", "input_shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets.GaussianLayer.call": [[23, 26], ["tensorflow.softplus", "tensorflow.softplus"], "methods", ["None"], ["", "def", "call", "(", "self", ",", "x", ")", ":", "\n", "        ", "noise_std", "=", "K", ".", "softplus", "(", "self", ".", "b", "-", "4", ")", "+", "1e-3", "\n", "return", "noise_std", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets.GaussianLayer.compute_output_shape": [[27, 32], ["None"], "methods", ["None"], ["", "def", "compute_output_shape", "(", "self", ",", "input_shape", ")", ":", "\n", "        ", "if", "not", "input_shape", ":", "\n", "            ", "return", "(", ")", "\n", "", "else", ":", "\n", "            ", "return", "input_shape", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets.PoissonLayer.__init__": [[35, 37], ["tensorflow.keras.layers.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets.PoissonGaussianLayer.__init__"], ["def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "PoissonLayer", ",", "self", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets.PoissonLayer.build": [[38, 44], ["nets.PoissonLayer.add_weight", "super().build", "tensorflow.keras.initializers.Constant", "tensorflow.keras.initializers.Constant"], "methods", ["home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets.PoissonGaussianLayer.build"], ["", "def", "build", "(", "self", ",", "input_shape", ")", ":", "\n", "        ", "self", ".", "a", "=", "self", ".", "add_weight", "(", "name", "=", "'a'", ",", "\n", "shape", "=", "(", ")", ",", "\n", "initializer", "=", "Constant", "(", "0", ")", ",", "\n", "trainable", "=", "True", ")", "\n", "super", "(", "PoissonLayer", ",", "self", ")", ".", "build", "(", "input_shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets.PoissonLayer.call": [[45, 49], ["tensorflow.softplus", "tensorflow.softplus", "tensorflow.maximum", "tensorflow.maximum"], "methods", ["None"], ["", "def", "call", "(", "self", ",", "x", ")", ":", "\n", "        ", "noise_est", "=", "K", ".", "softplus", "(", "self", ".", "a", "-", "4", ")", "+", "1e-3", "\n", "noise_std", "=", "(", "K", ".", "maximum", "(", "x", ",", "1e-3", ")", "*", "noise_est", ")", "**", "0.5", "\n", "return", "noise_std", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets.PoissonLayer.compute_output_shape": [[50, 52], ["None"], "methods", ["None"], ["", "def", "compute_output_shape", "(", "self", ",", "input_shape", ")", ":", "\n", "        ", "return", "input_shape", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets.PoissonGaussianLayer.__init__": [[55, 57], ["tensorflow.keras.layers.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets.PoissonGaussianLayer.__init__"], ["def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "PoissonGaussianLayer", ",", "self", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets.PoissonGaussianLayer.build": [[58, 68], ["nets.PoissonGaussianLayer.add_weight", "nets.PoissonGaussianLayer.add_weight", "super().build", "tensorflow.keras.initializers.Constant", "tensorflow.keras.initializers.Constant", "tensorflow.keras.initializers.Constant", "tensorflow.keras.initializers.Constant"], "methods", ["home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets.PoissonGaussianLayer.build"], ["", "def", "build", "(", "self", ",", "input_shape", ")", ":", "\n", "        ", "self", ".", "a", "=", "self", ".", "add_weight", "(", "name", "=", "'a'", ",", "\n", "shape", "=", "(", ")", ",", "\n", "initializer", "=", "Constant", "(", "0", ")", ",", "\n", "trainable", "=", "True", ")", "\n", "self", ".", "b", "=", "self", ".", "add_weight", "(", "name", "=", "'b'", ",", "\n", "shape", "=", "(", ")", ",", "\n", "initializer", "=", "Constant", "(", "0", ")", ",", "\n", "trainable", "=", "True", ")", "\n", "super", "(", "PoissonGaussianLayer", ",", "self", ")", ".", "build", "(", "input_shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets.PoissonGaussianLayer.call": [[69, 75], ["tensorflow.maximum", "tensorflow.maximum", "tensorflow.softplus", "tensorflow.softplus", "tensorflow.maximum", "tensorflow.maximum"], "methods", ["None"], ["", "def", "call", "(", "self", ",", "x", ")", ":", "\n", "        ", "poisson_noise_est", "=", "K", ".", "softplus", "(", "self", ".", "a", "-", "4", ")", "+", "1e-3", "\n", "poisson_noise_var", "=", "K", ".", "maximum", "(", "x", ",", "1e-3", ")", "*", "poisson_noise_est", "\n", "noise_var", "=", "K", ".", "maximum", "(", "poisson_noise_var", "+", "self", ".", "b", ",", "1e-3", ")", "\n", "noise_std", "=", "noise_var", "**", "0.5", "\n", "return", "noise_std", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets.PoissonGaussianLayer.compute_output_shape": [[76, 78], ["None"], "methods", ["None"], ["", "def", "compute_output_shape", "(", "self", ",", "input_shape", ")", ":", "\n", "        ", "return", "input_shape", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets.mse_loss": [[79, 87], ["tensorflow.mean"], "function", ["None"], ["", "", "def", "mse_loss", "(", "y", ",", "loc", ")", ":", "\n", "    ", "\"\"\" Mean squared error loss function\n        Use mean-squared error to regress to the expected value\n        Parameters:\n            loc: mean\n    \"\"\"", "\n", "loss", "=", "(", "y", "-", "loc", ")", "**", "2", "\n", "return", "K", ".", "mean", "(", "loss", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets.uncalib_gaussian_loss": [[88, 99], ["tensorflow.mean", "tensorflow.log"], "function", ["None"], ["", "def", "uncalib_gaussian_loss", "(", "y", ",", "loc", ",", "std", ")", ":", "\n", "    ", "\"\"\" Uncalibrated Gaussian loss function\n        Model noisy data using a Gaussian parameterized by mean and std. dev.\n        Parameters:\n            loc: mean\n            std: std. dev.\n    \"\"\"", "\n", "var", "=", "std", "**", "2", "\n", "total_var", "=", "var", "+", "1e-3", "\n", "loss", "=", "(", "y", "-", "loc", ")", "**", "2", "/", "total_var", "+", "K", ".", "log", "(", "total_var", ")", "\n", "return", "K", ".", "mean", "(", "loss", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets.gaussian_loss": [[100, 116], ["tensorflow.mean", "tensorflow.log", "tensorflow.abs"], "function", ["None"], ["", "def", "gaussian_loss", "(", "y", ",", "loc", ",", "std", ",", "noise_std", ",", "reg_weight", ")", ":", "\n", "    ", "\"\"\" Gaussian loss function\n        Model noisy data using a Gaussian prior and Gaussian noise model\n        Parameters:\n            y: noisy input image\n            loc: prior mean\n            std: prior std. dev.\n            noise_std: noise std. dev.\n            reg_weight: strength of regularization on prior std. dev.\n    \"\"\"", "\n", "var", "=", "std", "**", "2", "\n", "noise_var", "=", "noise_std", "**", "2", "\n", "total_var", "=", "var", "+", "noise_var", "\n", "loss", "=", "(", "y", "-", "loc", ")", "**", "2", "/", "total_var", "+", "K", ".", "log", "(", "total_var", ")", "\n", "reg", "=", "reg_weight", "*", "K", ".", "abs", "(", "std", ")", "\n", "return", "K", ".", "mean", "(", "loss", "+", "reg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets.gaussian_posterior_mean": [[117, 129], ["None"], "function", ["None"], ["", "def", "gaussian_posterior_mean", "(", "y", ",", "loc", ",", "std", ",", "noise_std", ")", ":", "\n", "    ", "\"\"\" Gaussian posterior mean\n        Given noisy observation (y), compute optimal estimate for denoised image \n            y: noisy input image\n            loc: prior mean\n            std: prior std. dev.\n            noise_std: noise std. dev.\n    \"\"\"", "\n", "var", "=", "std", "**", "2", "\n", "noise_var", "=", "noise_std", "**", "2", "\n", "total_var", "=", "var", "+", "noise_var", "\n", "return", "(", "loc", "*", "noise_var", "+", "var", "*", "y", ")", "/", "total_var", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets._conv": [[130, 138], ["tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.LeakyReLU"], "function", ["None"], ["", "def", "_conv", "(", "x", ",", "num_filters", ",", "name", ")", ":", "\n", "  ", "\"\"\" 2d convolution \"\"\"", "\n", "filter_size", "=", "[", "3", ",", "3", "]", "\n", "\n", "x", "=", "Conv2D", "(", "filters", "=", "num_filters", ",", "kernel_size", "=", "filter_size", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "'he_normal'", ",", "name", "=", "name", ")", "(", "x", ")", "\n", "x", "=", "LeakyReLU", "(", "0.1", ")", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets._vshifted_conv": [[139, 150], ["tensorflow.keras.layers.ZeroPadding2D", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.LeakyReLU", "tensorflow.keras.layers.Cropping2D"], "function", ["None"], ["", "def", "_vshifted_conv", "(", "x", ",", "num_filters", ",", "name", ")", ":", "\n", "  ", "\"\"\" Vertically shifted convolution \"\"\"", "\n", "filter_size", "=", "[", "3", ",", "3", "]", "\n", "k", "=", "filter_size", "[", "0", "]", "//", "2", "\n", "\n", "x", "=", "ZeroPadding2D", "(", "[", "[", "k", ",", "0", "]", ",", "[", "0", ",", "0", "]", "]", ")", "(", "x", ")", "\n", "x", "=", "Conv2D", "(", "filters", "=", "num_filters", ",", "kernel_size", "=", "filter_size", ",", "padding", "=", "'same'", ",", "kernel_initializer", "=", "'he_normal'", ",", "name", "=", "name", ")", "(", "x", ")", "\n", "x", "=", "LeakyReLU", "(", "0.1", ")", "(", "x", ")", "\n", "x", "=", "Cropping2D", "(", "[", "[", "0", ",", "k", "]", ",", "[", "0", ",", "0", "]", "]", ")", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets._pool": [[151, 156], ["tensorflow.keras.layers.MaxPooling2D"], "function", ["None"], ["", "def", "_pool", "(", "x", ")", ":", "\n", "  ", "\"\"\" max pooling\"\"\"", "\n", "x", "=", "MaxPooling2D", "(", "pool_size", "=", "2", ",", "strides", "=", "2", ",", "padding", "=", "'same'", ")", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets._vshifted_pool": [[157, 165], ["tensorflow.keras.layers.ZeroPadding2D", "tensorflow.keras.layers.Cropping2D", "tensorflow.keras.layers.MaxPooling2D"], "function", ["None"], ["", "def", "_vshifted_pool", "(", "x", ")", ":", "\n", "  ", "\"\"\" Vertically shifted max pooling\"\"\"", "\n", "x", "=", "ZeroPadding2D", "(", "[", "[", "1", ",", "0", "]", ",", "[", "0", ",", "0", "]", "]", ")", "(", "x", ")", "\n", "x", "=", "Cropping2D", "(", "[", "[", "0", ",", "1", "]", ",", "[", "0", ",", "0", "]", "]", ")", "(", "x", ")", "\n", "\n", "x", "=", "MaxPooling2D", "(", "pool_size", "=", "2", ",", "strides", "=", "2", ",", "padding", "=", "'same'", ")", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets._vertical_blindspot_network": [[166, 225], ["nets._vshifted_conv", "nets._vshifted_conv", "nets._vshifted_pool", "skips.append", "nets._vshifted_conv", "nets._vshifted_pool", "skips.append", "nets._vshifted_conv", "nets._vshifted_pool", "skips.append", "nets._vshifted_conv", "nets._vshifted_pool", "skips.append", "nets._vshifted_conv", "nets._vshifted_pool", "nets._vshifted_conv", "nets._vshifted_conv", "nets._vshifted_conv", "nets._vshifted_conv", "nets._vshifted_conv", "nets._vshifted_conv", "nets._vshifted_conv", "nets._vshifted_conv", "nets._vshifted_conv", "nets._vshifted_conv", "nets._vshifted_conv", "tensorflow.keras.layers.UpSampling2D", "tensorflow.keras.layers.Concatenate", "tensorflow.keras.layers.UpSampling2D", "tensorflow.keras.layers.Concatenate", "tensorflow.keras.layers.UpSampling2D", "tensorflow.keras.layers.Concatenate", "tensorflow.keras.layers.UpSampling2D", "tensorflow.keras.layers.Concatenate", "tensorflow.keras.layers.UpSampling2D", "tensorflow.keras.layers.Concatenate", "tensorflow.keras.layers.ZeroPadding2D", "tensorflow.keras.layers.Cropping2D", "skips.pop", "skips.pop", "skips.pop", "skips.pop", "skips.pop"], "function", ["home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets._vshifted_conv", "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets._vshifted_conv", "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets._vshifted_pool", "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets._vshifted_conv", "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets._vshifted_pool", "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets._vshifted_conv", "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets._vshifted_pool", "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets._vshifted_conv", "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets._vshifted_pool", "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets._vshifted_conv", "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets._vshifted_pool", "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets._vshifted_conv", "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets._vshifted_conv", "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets._vshifted_conv", "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets._vshifted_conv", "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets._vshifted_conv", "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets._vshifted_conv", "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets._vshifted_conv", "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets._vshifted_conv", "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets._vshifted_conv", "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets._vshifted_conv", "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets._vshifted_conv"], ["", "def", "_vertical_blindspot_network", "(", "x", ")", ":", "\n", "  ", "\"\"\" Blind-spot network; adapted from noise2noise GitHub\n    Each row of output only sees input pixels above that row\n  \"\"\"", "\n", "skips", "=", "[", "x", "]", "\n", "\n", "n", "=", "x", "\n", "n", "=", "_vshifted_conv", "(", "n", ",", "48", ",", "'enc_conv0'", ")", "\n", "n", "=", "_vshifted_conv", "(", "n", ",", "48", ",", "'enc_conv1'", ")", "\n", "n", "=", "_vshifted_pool", "(", "n", ")", "\n", "skips", ".", "append", "(", "n", ")", "\n", "\n", "n", "=", "_vshifted_conv", "(", "n", ",", "48", ",", "'enc_conv2'", ")", "\n", "n", "=", "_vshifted_pool", "(", "n", ")", "\n", "skips", ".", "append", "(", "n", ")", "\n", "\n", "n", "=", "_vshifted_conv", "(", "n", ",", "48", ",", "'enc_conv3'", ")", "\n", "n", "=", "_vshifted_pool", "(", "n", ")", "\n", "skips", ".", "append", "(", "n", ")", "\n", "\n", "n", "=", "_vshifted_conv", "(", "n", ",", "48", ",", "'enc_conv4'", ")", "\n", "n", "=", "_vshifted_pool", "(", "n", ")", "\n", "skips", ".", "append", "(", "n", ")", "\n", "\n", "n", "=", "_vshifted_conv", "(", "n", ",", "48", ",", "'enc_conv5'", ")", "\n", "n", "=", "_vshifted_pool", "(", "n", ")", "\n", "n", "=", "_vshifted_conv", "(", "n", ",", "48", ",", "'enc_conv6'", ")", "\n", "\n", "#-----------------------------------------------", "\n", "n", "=", "UpSampling2D", "(", "2", ")", "(", "n", ")", "\n", "n", "=", "Concatenate", "(", "axis", "=", "3", ")", "(", "[", "n", ",", "skips", ".", "pop", "(", ")", "]", ")", "\n", "n", "=", "_vshifted_conv", "(", "n", ",", "96", ",", "'dec_conv5'", ")", "\n", "n", "=", "_vshifted_conv", "(", "n", ",", "96", ",", "'dec_conv5b'", ")", "\n", "\n", "n", "=", "UpSampling2D", "(", "2", ")", "(", "n", ")", "\n", "n", "=", "Concatenate", "(", "axis", "=", "3", ")", "(", "[", "n", ",", "skips", ".", "pop", "(", ")", "]", ")", "\n", "n", "=", "_vshifted_conv", "(", "n", ",", "96", ",", "'dec_conv4'", ")", "\n", "n", "=", "_vshifted_conv", "(", "n", ",", "96", ",", "'dec_conv4b'", ")", "\n", "\n", "n", "=", "UpSampling2D", "(", "2", ")", "(", "n", ")", "\n", "n", "=", "Concatenate", "(", "axis", "=", "3", ")", "(", "[", "n", ",", "skips", ".", "pop", "(", ")", "]", ")", "\n", "n", "=", "_vshifted_conv", "(", "n", ",", "96", ",", "'dec_conv3'", ")", "\n", "n", "=", "_vshifted_conv", "(", "n", ",", "96", ",", "'dec_conv3b'", ")", "\n", "\n", "n", "=", "UpSampling2D", "(", "2", ")", "(", "n", ")", "\n", "n", "=", "Concatenate", "(", "axis", "=", "3", ")", "(", "[", "n", ",", "skips", ".", "pop", "(", ")", "]", ")", "\n", "n", "=", "_vshifted_conv", "(", "n", ",", "96", ",", "'dec_conv2'", ")", "\n", "n", "=", "_vshifted_conv", "(", "n", ",", "96", ",", "'dec_conv2b'", ")", "\n", "\n", "n", "=", "UpSampling2D", "(", "2", ")", "(", "n", ")", "\n", "n", "=", "Concatenate", "(", "axis", "=", "3", ")", "(", "[", "n", ",", "skips", ".", "pop", "(", ")", "]", ")", "\n", "n", "=", "_vshifted_conv", "(", "n", ",", "96", ",", "'dec_conv1a'", ")", "\n", "n", "=", "_vshifted_conv", "(", "n", ",", "96", ",", "'dec_conv1b'", ")", "\n", "\n", "# final pad and crop for blind spot", "\n", "n", "=", "ZeroPadding2D", "(", "[", "[", "1", ",", "0", "]", ",", "[", "0", ",", "0", "]", "]", ")", "(", "n", ")", "\n", "n", "=", "Cropping2D", "(", "[", "[", "0", ",", "1", "]", ",", "[", "0", ",", "0", "]", "]", ")", "(", "n", ")", "\n", "\n", "return", "n", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets.blindspot_network": [[226, 261], ["tensorflow.int_shape", "tensorflow.keras.Input", "nets._vertical_blindspot_network", "tensorflow.keras.models.Model", "range", "ValueError", "tensorflow.keras.models.Model.", "stacks.append", "tensorflow.keras.layers.Concatenate", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.LeakyReLU", "tensorflow.keras.layers.Conv2D", "tensorflow.keras.layers.LeakyReLU", "tensorflow.keras.layers.Lambda", "tensorflow.keras.layers.Lambda", "tensorflow.keras.layers.Reshape", "tensorflow.keras.layers.Reshape", "tensorflow.image.rot90", "tensorflow.image.rot90"], "function", ["home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets._vertical_blindspot_network"], ["", "def", "blindspot_network", "(", "inputs", ")", ":", "\n", "  ", "b", ",", "h", ",", "w", ",", "c", "=", "K", ".", "int_shape", "(", "inputs", ")", "\n", "#if h != w:", "\n", "#raise ValueError('input shape must be square')", "\n", "if", "h", "%", "32", "!=", "0", "or", "w", "%", "32", "!=", "0", ":", "\n", "    ", "raise", "ValueError", "(", "'input shape (%d x %d) must be divisible by 32'", "%", "(", "h", ",", "w", ")", ")", "\n", "\n", "# make vertical blindspot network", "\n", "", "vert_input", "=", "Input", "(", "[", "h", ",", "w", ",", "c", "]", ")", "\n", "vert_output", "=", "_vertical_blindspot_network", "(", "vert_input", ")", "\n", "vert_model", "=", "Model", "(", "inputs", "=", "vert_input", ",", "outputs", "=", "vert_output", ")", "\n", "\n", "# run vertical blindspot network on rotated inputs", "\n", "stacks", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "4", ")", ":", "\n", "      ", "rotated", "=", "Lambda", "(", "lambda", "x", ":", "tf", ".", "image", ".", "rot90", "(", "x", ",", "i", ")", ")", "(", "inputs", ")", "\n", "if", "i", "==", "0", "or", "i", "==", "2", ":", "\n", "          ", "rotated", "=", "Reshape", "(", "[", "h", ",", "w", ",", "c", "]", ")", "(", "rotated", ")", "\n", "", "else", ":", "\n", "          ", "rotated", "=", "Reshape", "(", "[", "w", ",", "h", ",", "c", "]", ")", "(", "rotated", ")", "\n", "", "out", "=", "vert_model", "(", "rotated", ")", "\n", "out", "=", "Lambda", "(", "lambda", "x", ":", "tf", ".", "image", ".", "rot90", "(", "x", ",", "4", "-", "i", ")", ")", "(", "out", ")", "\n", "stacks", ".", "append", "(", "out", ")", "\n", "\n", "# concatenate outputs", "\n", "", "x", "=", "Concatenate", "(", "axis", "=", "3", ")", "(", "stacks", ")", "\n", "\n", "# final 1x1 convolutional layers", "\n", "x", "=", "Conv2D", "(", "384", ",", "1", ",", "kernel_initializer", "=", "'he_normal'", ",", "name", "=", "'conv1x1_1'", ")", "(", "x", ")", "\n", "x", "=", "LeakyReLU", "(", "0.1", ")", "(", "x", ")", "\n", "\n", "x", "=", "Conv2D", "(", "96", ",", "1", ",", "kernel_initializer", "=", "'he_normal'", ",", "name", "=", "'conv1x1_2'", ")", "(", "x", ")", "\n", "x", "=", "LeakyReLU", "(", "0.1", ")", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets.gaussian_blindspot_network": [[262, 320], ["tensorflow.keras.Input", "nets.blindspot_network", "tensorflow.keras.models.Model", "tensorflow.keras.models.Model.add_loss", "tensorflow.keras.layers.Conv2D", "nets.mse_loss", "tensorflow.keras.layers.Conv2D", "nets.uncalib_gaussian_loss", "nets.gaussian_loss", "tensorflow.keras.layers.Lambda", "nets.GaussianLayer", "nets.PoissonLayer", "ValueError", "nets.gaussian_posterior_mean", "nets.PoissonGaussianLayer"], "function", ["home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets.blindspot_network", "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets.mse_loss", "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets.uncalib_gaussian_loss", "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets.gaussian_loss", "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets.gaussian_posterior_mean"], ["", "def", "gaussian_blindspot_network", "(", "input_shape", ",", "mode", ",", "reg_weight", "=", "0", ")", ":", "\n", "    ", "\"\"\" Create a variant of the Gaussian blindspot newtork.\n        input_shape: Shape of input image\n        mode: mse, uncalib, global, perpixel, poisson\n              mse              -- regress to expected value using mean squared error loss \n              uncalib          -- model prior and noise together with single Gaussian at each pixel\n              gaussian         -- Gaussian noise\n              poisson          -- Poisson noise\n              poissongaussian  -- Poisson-Gaussian noise\n        reg_weight: strength of regularization on prior std. dev.\n    \"\"\"", "\n", "# create input layer", "\n", "inputs", "=", "Input", "(", "input_shape", ")", "\n", "\n", "# run blindspot network", "\n", "x", "=", "blindspot_network", "(", "inputs", ")", "\n", "\n", "# get prior parameters", "\n", "loc", "=", "Conv2D", "(", "1", ",", "1", ",", "kernel_initializer", "=", "'he_normal'", ",", "name", "=", "'loc'", ")", "(", "x", ")", "\n", "if", "mode", "!=", "'mse'", ":", "\n", "        ", "std", "=", "Conv2D", "(", "1", ",", "1", ",", "kernel_initializer", "=", "'he_normal'", ",", "name", "=", "'std'", ")", "(", "x", ")", "\n", "\n", "# get noise variance", "\n", "", "if", "mode", "==", "'mse'", ":", "\n", "        ", "pass", "\n", "", "elif", "mode", "==", "'uncalib'", ":", "\n", "        ", "pass", "\n", "", "elif", "mode", "==", "'gaussian'", ":", "\n", "        ", "noise_std", "=", "GaussianLayer", "(", ")", "(", "[", "]", ")", "\n", "", "elif", "mode", "==", "'poisson'", ":", "\n", "        ", "noise_std", "=", "PoissonLayer", "(", ")", "(", "loc", ")", "\n", "", "elif", "mode", "==", "'poissongaussian'", ":", "\n", "        ", "noise_std", "=", "PoissonGaussianLayer", "(", ")", "(", "loc", ")", "\n", "", "else", ":", "\n", "        ", "raise", "ValueError", "(", "'unknown mode %s'", "%", "mode", ")", "\n", "\n", "# get outputs", "\n", "", "if", "mode", "==", "'mse'", ":", "\n", "        ", "outputs", "=", "loc", "\n", "", "elif", "mode", "==", "'uncalib'", ":", "\n", "        ", "outputs", "=", "[", "loc", ",", "std", "]", "\n", "", "else", ":", "\n", "        ", "outputs", "=", "Lambda", "(", "lambda", "x", ":", "gaussian_posterior_mean", "(", "*", "x", ")", ")", "(", "[", "inputs", ",", "loc", ",", "std", ",", "noise_std", "]", ")", "\n", "\n", "# create model", "\n", "", "model", "=", "Model", "(", "inputs", "=", "inputs", ",", "outputs", "=", "outputs", ")", "\n", "\n", "# create loss function", "\n", "# input is evaluated against output distribution", "\n", "if", "mode", "==", "'mse'", ":", "\n", "        ", "loss", "=", "mse_loss", "(", "inputs", ",", "loc", ")", "\n", "", "elif", "mode", "==", "'uncalib'", ":", "\n", "        ", "loss", "=", "uncalib_gaussian_loss", "(", "inputs", ",", "loc", ",", "std", ")", "\n", "", "else", ":", "\n", "        ", "loss", "=", "gaussian_loss", "(", "inputs", ",", "loc", ",", "std", ",", "noise_std", ",", "reg_weight", ")", "\n", "", "model", ".", "add_loss", "(", "loss", ")", "\n", "\n", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.train_fmd.load_images": [[38, 46], ["range", "sorted", "glob.glob", "images.append", "numpy.stack", "imageio.imread"], "function", ["None"], ["def", "load_images", "(", "noise", ")", ":", "\n", "    ", "basepath", "=", "args", ".", "path", "+", "'/'", "+", "args", ".", "dataset", "+", "'/'", "+", "noise", "\n", "images", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "21", ")", ":", "\n", "        ", "if", "i", "==", "19", ":", "continue", "\n", "for", "path", "in", "sorted", "(", "glob", ".", "glob", "(", "basepath", "+", "'/%d/*.png'", "%", "i", ")", ")", ":", "\n", "            ", "images", ".", "append", "(", "imread", "(", "path", ")", ")", "\n", "", "", "return", "np", ".", "stack", "(", "images", ",", "axis", "=", "0", ")", "[", ":", ",", ":", ",", ":", ",", "None", "]", "/", "255.", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.train_fmd.augment_images": [[58, 65], ["numpy.concatenate", "numpy.concatenate", "numpy.rot90", "numpy.rot90", "numpy.rot90", "numpy.flip"], "function", ["None"], ["def", "augment_images", "(", "images", ")", ":", "\n", "  ", "augmented", "=", "np", ".", "concatenate", "(", "(", "images", ",", "\n", "np", ".", "rot90", "(", "images", ",", "k", "=", "1", ",", "axes", "=", "(", "1", ",", "2", ")", ")", ",", "\n", "np", ".", "rot90", "(", "images", ",", "k", "=", "2", ",", "axes", "=", "(", "1", ",", "2", ")", ")", ",", "\n", "np", ".", "rot90", "(", "images", ",", "k", "=", "3", ",", "axes", "=", "(", "1", ",", "2", ")", ")", ")", ")", "\n", "augmented", "=", "np", ".", "concatenate", "(", "(", "augmented", ",", "np", ".", "flip", "(", "augmented", ",", "axis", "=", "-", "2", ")", ")", ")", "\n", "return", "augmented", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.train_fmd.random_crop_generator": [[73, 82], ["numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "numpy.zeros", "enumerate"], "function", ["None"], ["def", "random_crop_generator", "(", "data", ",", "crop_size", ",", "batch_size", ")", ":", "\n", "    ", "while", "True", ":", "\n", "        ", "inds", "=", "np", ".", "random", ".", "randint", "(", "data", ".", "shape", "[", "0", "]", ",", "size", "=", "batch_size", ")", "\n", "y", "=", "np", ".", "random", ".", "randint", "(", "data", ".", "shape", "[", "1", "]", "-", "crop_size", ",", "size", "=", "batch_size", ")", "\n", "x", "=", "np", ".", "random", ".", "randint", "(", "data", ".", "shape", "[", "2", "]", "-", "crop_size", ",", "size", "=", "batch_size", ")", "\n", "batch", "=", "np", ".", "zeros", "(", "(", "batch_size", ",", "crop_size", ",", "crop_size", ",", "1", ")", ",", "dtype", "=", "data", ".", "dtype", ")", "\n", "for", "i", ",", "ind", "in", "enumerate", "(", "inds", ")", ":", "\n", "            ", "batch", "[", "i", "]", "=", "data", "[", "ind", ",", "y", "[", "i", "]", ":", "y", "[", "i", "]", "+", "crop_size", ",", "x", "[", "i", "]", ":", "x", "[", "i", "]", "+", "crop_size", "]", "\n", "", "yield", "batch", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.test_fmd.load_images": [[38, 44], ["sorted", "glob.glob", "images.append", "imageio.imread", "numpy.stack"], "function", ["None"], ["def", "load_images", "(", "noise", ")", ":", "\n", "    ", "basepath", "=", "args", ".", "path", "+", "'/'", "+", "args", ".", "dataset", "+", "'/'", "+", "noise", "\n", "images", "=", "[", "]", "\n", "for", "path", "in", "sorted", "(", "glob", ".", "glob", "(", "basepath", "+", "'/19/*.png'", ")", ")", ":", "\n", "        ", "images", ".", "append", "(", "imread", "(", "path", ")", ")", "\n", "", "return", "np", ".", "stack", "(", "images", ",", "axis", "=", "0", ")", "[", ":", ",", ":", ",", ":", ",", "None", "]", "/", "255.", "\n", "\n"]], "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.test_fmd.poisson_gaussian_loss": [[50, 54], ["numpy.maximum", "numpy.mean", "numpy.log"], "function", ["None"], ["def", "poisson_gaussian_loss", "(", "x", ",", "y", ",", "a", ",", "b", ")", ":", "\n", "    ", "var", "=", "np", ".", "maximum", "(", "1e-4", ",", "a", "*", "x", "+", "b", ")", "\n", "loss", "=", "(", "y", "-", "x", ")", "**", "2", "/", "var", "+", "np", ".", "log", "(", "var", ")", "\n", "return", "np", ".", "mean", "(", "loss", ")", "\n", "", "optfun", "=", "lambda", "p", ",", "x", ",", "y", ":", "poisson_gaussian_loss", "(", "x", ",", "y", ",", "p", "[", "0", "]", ",", "p", "[", "1", "]", ")", "\n"]], "home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.test_fmd.denoise_uncalib": [[56, 63], ["numpy.maximum", "numpy.maximum", "numpy.squeeze", "nets.gaussian_posterior_mean"], "function", ["home.repos.pwc.inspect_result.jonathanventura_self-supervised-poisson-gaussian.None.nets.gaussian_posterior_mean"], ["def", "denoise_uncalib", "(", "y", ",", "loc", ",", "std", ",", "a", ",", "b", ")", ":", "\n", "    ", "total_var", "=", "std", "**", "2", "\n", "noise_var", "=", "np", ".", "maximum", "(", "1e-3", ",", "a", "*", "loc", "+", "b", ")", "\n", "noise_std", "=", "noise_var", "**", "0.5", "\n", "prior_var", "=", "np", ".", "maximum", "(", "1e-4", ",", "total_var", "-", "noise_var", ")", "\n", "prior_std", "=", "prior_var", "**", "0.5", "\n", "return", "np", ".", "squeeze", "(", "gaussian_posterior_mean", "(", "y", ",", "loc", ",", "prior_std", ",", "noise_std", ")", ")", "\n", "\n"]]}