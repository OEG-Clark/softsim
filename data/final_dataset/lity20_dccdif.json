{"home.repos.pwc.inspect_result.lity20_dccdif.None.evaluate.evaluate": [[11, 66], ["numpy.zeros", "numpy.zeros", "numpy.zeros", "enumerate", "print", "print", "pandas.DataFrame", "pandas.DataFrame.to_csv", "print", "open", "f.readlines", "l.rstrip", "len", "len", "len", "print", "os.path.join", "os.path.join", "trimesh.load", "trimesh.load", "trimesh.load.sample", "pred_points.astype.astype", "trimesh.load.sample", "gt_points.astype.astype", "scipy.spatial.cKDTree", "scipy.spatial.cKDTree.query", "scipy.spatial.cKDTree", "scipy.spatial.cKDTree.query", "numpy.abs", "numpy.abs", "numpy.sum", "numpy.sum", "numpy.mean", "numpy.mean", "l.split", "l.split", "numpy.mean", "numpy.mean", "numpy.mean", "numpy.mean", "len", "len", "numpy.mean", "numpy.mean", "numpy.mean", "len"], "function", ["home.repos.pwc.inspect_result.lity20_dccdif.None.network.CodeCloud.query", "home.repos.pwc.inspect_result.lity20_dccdif.None.network.CodeCloud.query"], ["def", "evaluate", "(", "config", ")", ":", "\n", "    ", "with", "open", "(", "config", "[", "'evaluate'", "]", "[", "'split_file'", "]", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "shape_ids", "=", "f", ".", "readlines", "(", ")", "\n", "", "shape_ids", "=", "[", "l", ".", "rstrip", "(", ")", "for", "l", "in", "shape_ids", "]", "\n", "\n", "cd_list", "=", "np", ".", "zeros", "(", "len", "(", "shape_ids", ")", ")", "# chamfer distance", "\n", "nc_list", "=", "np", ".", "zeros", "(", "len", "(", "shape_ids", ")", ")", "# normal consistency", "\n", "fs_list", "=", "np", ".", "zeros", "(", "len", "(", "shape_ids", ")", ")", "# f score", "\n", "for", "idx", ",", "shape_id", "in", "enumerate", "(", "shape_ids", ")", ":", "\n", "        ", "print", "(", "'Evaluation progress: %d/%d...'", "%", "(", "idx", ",", "len", "(", "shape_ids", ")", ")", ",", "end", "=", "'\\r'", ")", "\n", "\n", "pred_mesh_path", "=", "os", ".", "path", ".", "join", "(", "config", "[", "'evaluate'", "]", "[", "'recon_mesh_dir'", "]", ",", "shape_id", "+", "'.ply'", ")", "\n", "gt_mesh_path", "=", "os", ".", "path", ".", "join", "(", "config", "[", "'evaluate'", "]", "[", "'gt_mesh_dir'", "]", ",", "shape_id", "+", "'.obj'", ")", "\n", "pred_mesh", "=", "trimesh", ".", "load", "(", "pred_mesh_path", ")", "\n", "gt_mesh", "=", "trimesh", ".", "load", "(", "gt_mesh_path", ")", "\n", "\n", "pred_points", ",", "pred_indices", "=", "pred_mesh", ".", "sample", "(", "config", "[", "'evaluate'", "]", "[", "'num_surface_samples'", "]", ",", "return_index", "=", "True", ")", "\n", "pred_points", "=", "pred_points", ".", "astype", "(", "np", ".", "float32", ")", "\n", "pred_normals", "=", "pred_mesh", ".", "face_normals", "[", "pred_indices", "]", "\n", "\n", "gt_points", ",", "gt_indices", "=", "gt_mesh", ".", "sample", "(", "config", "[", "'evaluate'", "]", "[", "'num_surface_samples'", "]", ",", "return_index", "=", "True", ")", "\n", "gt_points", "=", "gt_points", ".", "astype", "(", "np", ".", "float32", ")", "\n", "gt_normals", "=", "gt_mesh", ".", "face_normals", "[", "gt_indices", "]", "\n", "\n", "kdtree", "=", "KDTree", "(", "gt_points", ")", "\n", "dist_p2g", ",", "indices_p2g", "=", "kdtree", ".", "query", "(", "pred_points", ")", "\n", "\n", "kdtree", "=", "KDTree", "(", "pred_points", ")", "\n", "dist_g2p", ",", "indices_g2p", "=", "kdtree", ".", "query", "(", "gt_points", ")", "\n", "\n", "normals_p2g", "=", "gt_normals", "[", "indices_p2g", "]", "\n", "nc_p2g", "=", "np", ".", "abs", "(", "np", ".", "sum", "(", "normals_p2g", "*", "pred_normals", ",", "axis", "=", "1", ")", ")", "\n", "normals_g2p", "=", "pred_normals", "[", "indices_g2p", "]", "\n", "nc_g2p", "=", "np", ".", "abs", "(", "np", ".", "sum", "(", "normals_g2p", "*", "gt_normals", ",", "axis", "=", "1", ")", ")", "\n", "nc", "=", "0.5", "*", "(", "np", ".", "mean", "(", "nc_p2g", ")", "+", "np", ".", "mean", "(", "nc_g2p", ")", ")", "\n", "\n", "precision", "=", "np", ".", "mean", "(", "(", "dist_p2g", "**", "2", "<=", "config", "[", "'evaluate'", "]", "[", "'f_score_tau'", "]", "**", "2", ")", ".", "astype", "(", "np", ".", "float32", ")", ")", "*", "100.0", "\n", "recall", "=", "np", ".", "mean", "(", "(", "dist_g2p", "**", "2", "<=", "config", "[", "'evaluate'", "]", "[", "'f_score_tau'", "]", "**", "2", ")", ".", "astype", "(", "np", ".", "float32", ")", ")", "*", "100.0", "\n", "fs", "=", "(", "2", "*", "precision", "*", "recall", ")", "/", "(", "precision", "+", "recall", "+", "1e-9", ")", "\n", "\n", "cd", "=", "1000.0", "*", "(", "np", ".", "mean", "(", "dist_p2g", "**", "2", ")", "+", "np", ".", "mean", "(", "dist_g2p", "**", "2", ")", ")", "\n", "\n", "cd_list", "[", "idx", "]", "=", "cd", "\n", "nc_list", "[", "idx", "]", "=", "nc", "\n", "fs_list", "[", "idx", "]", "=", "fs", "\n", "\n", "", "print", "(", "'Evaluation progress: %d/%d. Done.'", "%", "(", "len", "(", "shape_ids", ")", ",", "len", "(", "shape_ids", ")", ")", ")", "\n", "print", "(", "'Chamfer-L2: %f, Normal Consistency: %f, F-Score: %f.'", "%", "(", "np", ".", "mean", "(", "cd_list", ")", ",", "np", ".", "mean", "(", "nc_list", ")", ",", "np", ".", "mean", "(", "fs_list", ")", ")", ")", "\n", "\n", "classes", "=", "[", "l", ".", "split", "(", "'/'", ")", "[", "0", "]", "for", "l", "in", "shape_ids", "]", "\n", "shape_ids", "=", "[", "l", ".", "split", "(", "'/'", ")", "[", "1", "]", "for", "l", "in", "shape_ids", "]", "\n", "data_frame", "=", "pandas", ".", "DataFrame", "(", "{", "'class'", ":", "classes", ",", "'shape_id'", ":", "shape_ids", ",", "\n", "'cd'", ":", "cd_list", ",", "'nc'", ":", "nc_list", ",", "'fs'", ":", "fs_list", "}", ")", "\n", "data_frame", ".", "to_csv", "(", "config", "[", "'experiment'", "]", "[", "'eval_results_save_path'", "]", ",", "index", "=", "False", ",", "sep", "=", "','", ")", "\n", "print", "(", "'Results are saved to '", "+", "config", "[", "'experiment'", "]", "[", "'eval_results_save_path'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lity20_dccdif.None.reconstruct.LossHelper.__init__": [[17, 21], ["reconstruct.LossHelper.clear"], "methods", ["home.repos.pwc.inspect_result.lity20_dccdif.None.train.LossHelper.clear"], ["    ", "def", "__init__", "(", "self", ",", "num_shapes", ",", "num_iters", ")", ":", "\n", "        ", "self", ".", "num_shapes", "=", "num_shapes", "\n", "self", ".", "num_iters", "=", "num_iters", "\n", "self", ".", "clear", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lity20_dccdif.None.reconstruct.LossHelper.clear": [[22, 24], ["None"], "methods", ["None"], ["", "def", "clear", "(", "self", ")", ":", "\n", "        ", "self", ".", "loss_dict", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.lity20_dccdif.None.reconstruct.LossHelper.accumulate": [[25, 32], ["loss_dict.items", "loss_dict.keys", "v.item", "numpy.zeros"], "methods", ["None"], ["", "def", "accumulate", "(", "self", ",", "loss_dict", ",", "shape_idx", ",", "iter_idx", ")", ":", "\n", "        ", "if", "self", ".", "loss_dict", "is", "None", ":", "\n", "            ", "self", ".", "loss_dict", "=", "{", "}", "\n", "for", "k", "in", "loss_dict", ".", "keys", "(", ")", ":", "\n", "                ", "self", ".", "loss_dict", "[", "k", "]", "=", "np", ".", "zeros", "(", "(", "self", ".", "num_shapes", ",", "self", ".", "num_iters", ")", ")", "\n", "", "", "for", "k", ",", "v", "in", "loss_dict", ".", "items", "(", ")", ":", "\n", "            ", "self", ".", "loss_dict", "[", "k", "]", "[", "shape_idx", "]", "[", "iter_idx", "]", "=", "v", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lity20_dccdif.None.reconstruct.LossHelper.write_log": [[33, 41], ["reconstruct.LossHelper.loss_dict.keys", "reconstruct.LossHelper.loss_dict.items", "numpy.mean", "range", "writer.add_scalar"], "methods", ["None"], ["", "", "def", "write_log", "(", "self", ",", "writer", ")", ":", "\n", "        ", "if", "self", ".", "loss_dict", "is", "None", ":", "\n", "            ", "return", "\n", "", "for", "k", "in", "self", ".", "loss_dict", ".", "keys", "(", ")", ":", "\n", "            ", "self", ".", "loss_dict", "[", "k", "]", "=", "np", ".", "mean", "(", "self", ".", "loss_dict", "[", "k", "]", ",", "axis", "=", "0", ")", "\n", "", "for", "k", ",", "v", "in", "self", ".", "loss_dict", ".", "items", "(", ")", ":", "\n", "            ", "for", "i", "in", "range", "(", "self", ".", "num_iters", ")", ":", "\n", "                ", "writer", ".", "add_scalar", "(", "k", ",", "v", "[", "i", "]", ",", "global_step", "=", "i", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lity20_dccdif.None.reconstruct.optimize_latent_codes": [[43, 64], ["network.CodeCloud().cuda", "network.code_cloud.train", "network.decoder.eval", "torch.optim.Adam", "torch.optim.lr_scheduler.StepLR", "range", "print", "network.code_cloud.parameters", "torch.tensor().float().unsqueeze().cuda", "torch.tensor().float().unsqueeze().cuda", "torch.zeros().cuda", "torch.optim.Adam.zero_grad", "network", "network.loss", "loss_helper.accumulate", "loss_dict[].backward", "torch.optim.Adam.step", "torch.optim.lr_scheduler.StepLR.step", "print", "network.CodeCloud", "torch.tensor().float().unsqueeze", "torch.tensor().float().unsqueeze", "torch.zeros", "torch.tensor().float", "torch.tensor().float", "torch.tensor", "torch.tensor"], "function", ["home.repos.pwc.inspect_result.lity20_dccdif.None.train.train", "home.repos.pwc.inspect_result.lity20_dccdif.None.network.Network.loss", "home.repos.pwc.inspect_result.lity20_dccdif.None.train.LossHelper.accumulate"], ["", "", "", "", "def", "optimize_latent_codes", "(", "network", ",", "dataset", ",", "shape_idx", ",", "config", ",", "loss_helper", ")", ":", "\n", "    ", "network", ".", "code_cloud", "=", "CodeCloud", "(", "config", "[", "'network'", "]", "[", "'code_cloud'", "]", ",", "1", ")", ".", "cuda", "(", ")", "\n", "network", ".", "code_cloud", ".", "train", "(", ")", "\n", "network", ".", "decoder", ".", "eval", "(", ")", "\n", "optimizer", "=", "Adam", "(", "network", ".", "code_cloud", ".", "parameters", "(", ")", ",", "lr", "=", "config", "[", "'reconstruct'", "]", "[", "'init_lr'", "]", ")", "\n", "lr_scheduler", "=", "StepLR", "(", "optimizer", ",", "step_size", "=", "config", "[", "'reconstruct'", "]", "[", "'lr_decay_step'", "]", ",", "gamma", "=", "config", "[", "'reconstruct'", "]", "[", "'lr_decay_rate'", "]", ")", "\n", "\n", "for", "iter_idx", "in", "range", "(", "config", "[", "'reconstruct'", "]", "[", "'num_iteration'", "]", ")", ":", "\n", "        ", "query_points", ",", "gt_sd", ",", "_", "=", "dataset", "[", "shape_idx", "]", "\n", "query_points", "=", "torch", ".", "tensor", "(", "query_points", ")", ".", "float", "(", ")", ".", "unsqueeze", "(", "0", ")", ".", "cuda", "(", ")", "\n", "gt_sd", "=", "torch", ".", "tensor", "(", "gt_sd", ")", ".", "float", "(", ")", ".", "unsqueeze", "(", "0", ")", ".", "cuda", "(", ")", "\n", "indices", "=", "torch", ".", "zeros", "(", "1", ",", "dtype", "=", "torch", ".", "long", ")", ".", "cuda", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "pred_sd", "=", "network", "(", "indices", ",", "query_points", ")", "\n", "loss_dict", "=", "network", ".", "loss", "(", "gt_sd", ")", "\n", "loss_helper", ".", "accumulate", "(", "loss_dict", ",", "shape_idx", ",", "iter_idx", ")", "\n", "loss_dict", "[", "'total_loss'", "]", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "lr_scheduler", ".", "step", "(", ")", "\n", "print", "(", "'Optimizing latent code, progress: %d/%d...'", "%", "(", "iter_idx", ",", "config", "[", "'reconstruct'", "]", "[", "'num_iteration'", "]", ")", ",", "end", "=", "'\\r'", ")", "\n", "", "print", "(", "'Optimizing latent code, progress: %d/%d. Done.'", "%", "(", "config", "[", "'reconstruct'", "]", "[", "'num_iteration'", "]", ",", "config", "[", "'reconstruct'", "]", "[", "'num_iteration'", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lity20_dccdif.None.reconstruct.latent_codes_to_mesh": [[66, 103], ["print", "torch.arange", "torch.zeros", "numpy.zeros", "network.eval", "torch.zeros().cuda", "np.zeros.reshape", "skimage.measure.marching_cubes", "print", "datetime.datetime.now().strftime", "query_points[].unsqueeze().cuda", "network().squeeze", "network().squeeze.cpu().detach().numpy", "datetime.datetime.now().strftime", "torch.zeros", "datetime.datetime.now", "query_points[].unsqueeze", "network", "min", "network().squeeze.cpu().detach", "datetime.datetime.now", "network().squeeze.cpu", "min"], "function", ["None"], ["", "def", "latent_codes_to_mesh", "(", "network", ",", "config", ")", ":", "\n", "    ", "print", "(", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "'%Y-%m-%d %H:%M:%S'", ")", ",", "'Reconstructing mesh(marching cubes resolution=%d).'", "%", "config", "[", "'reconstruct'", "]", "[", "'marching_cubes_resolution'", "]", ")", "\n", "\n", "N", "=", "config", "[", "'reconstruct'", "]", "[", "'marching_cubes_resolution'", "]", "\n", "voxel_size", "=", "1.1", "/", "(", "N", "-", "1", ")", "\n", "voxel_origin", "=", "[", "-", "0.55", ",", "-", "0.55", ",", "-", "0.55", "]", "\n", "\n", "overall_index", "=", "torch", ".", "arange", "(", "0", ",", "N", "**", "3", ",", "1", ",", "dtype", "=", "torch", ".", "long", ")", "\n", "query_points", "=", "torch", ".", "zeros", "(", "N", "**", "3", ",", "3", ")", "\n", "query_points", "[", ":", ",", "2", "]", "=", "overall_index", "%", "N", "\n", "query_points", "[", ":", ",", "1", "]", "=", "(", "overall_index", "/", "N", ")", ".", "long", "(", ")", "%", "N", "\n", "query_points", "[", ":", ",", "0", "]", "=", "(", "(", "overall_index", "/", "N", ")", "/", "N", ")", ".", "long", "(", ")", "%", "N", "\n", "\n", "query_points", "[", ":", ",", "0", "]", "=", "(", "query_points", "[", ":", ",", "0", "]", "*", "voxel_size", ")", "+", "voxel_origin", "[", "2", "]", "\n", "query_points", "[", ":", ",", "1", "]", "=", "(", "query_points", "[", ":", ",", "1", "]", "*", "voxel_size", ")", "+", "voxel_origin", "[", "1", "]", "\n", "query_points", "[", ":", ",", "2", "]", "=", "(", "query_points", "[", ":", ",", "2", "]", "*", "voxel_size", ")", "+", "voxel_origin", "[", "0", "]", "\n", "query_points_sdf", "=", "np", ".", "zeros", "(", "N", "**", "3", ")", "\n", "\n", "network", ".", "eval", "(", ")", "\n", "query_points", ".", "requires_grad", "=", "False", "\n", "batch_indices", "=", "torch", ".", "zeros", "(", "1", ",", "dtype", "=", "torch", ".", "long", ")", ".", "cuda", "(", ")", "\n", "batch_size", "=", "1024", "\n", "num_query_points", "=", "N", "**", "3", "\n", "query_point_index", "=", "0", "\n", "while", "query_point_index", "<", "num_query_points", ":", "\n", "        ", "batch_query_points", "=", "query_points", "[", "query_point_index", ":", "min", "(", "query_point_index", "+", "batch_size", ",", "num_query_points", ")", "]", ".", "unsqueeze", "(", "0", ")", ".", "cuda", "(", ")", "\n", "pred_sd", "=", "network", "(", "batch_indices", ",", "batch_query_points", ")", ".", "squeeze", "(", "0", ")", "\n", "query_points_sdf", "[", "query_point_index", ":", "min", "(", "query_point_index", "+", "batch_size", ",", "num_query_points", ")", "]", "=", "pred_sd", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "query_point_index", "+=", "batch_size", "\n", "\n", "", "sdf_values", "=", "query_points_sdf", ".", "reshape", "(", "N", ",", "N", ",", "N", ")", "\n", "vertices", ",", "faces", ",", "_", ",", "_", "=", "marching_cubes", "(", "sdf_values", ",", "level", "=", "0.0", ",", "spacing", "=", "[", "voxel_size", "]", "*", "3", ")", "\n", "vertices", "[", ":", ",", "0", "]", "+=", "voxel_origin", "[", "0", "]", "\n", "vertices", "[", ":", ",", "1", "]", "+=", "voxel_origin", "[", "1", "]", "\n", "vertices", "[", ":", ",", "2", "]", "+=", "voxel_origin", "[", "2", "]", "\n", "print", "(", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "'%Y-%m-%d %H:%M:%S'", ")", ",", "'Reconstruction done.'", ")", "\n", "return", "vertices", ",", "faces", "\n", "\n"]], "home.repos.pwc.inspect_result.lity20_dccdif.None.reconstruct.reconstruct": [[105, 142], ["dataset.ShapeNet", "reconstruct.LossHelper", "torch.utils.tensorboard.SummaryWriter", "network.Network().cuda", "torch.load", "Network().cuda.decoder.load_state_dict", "range", "reconstruct.LossHelper.write_log", "torch.utils.tensorboard.SummaryWriter.close", "len", "len", "print", "reconstruct.optimize_latent_codes", "os.path.join", "os.path.dirname", "os.makedirs", "torch.save", "print", "reconstruct.latent_codes_to_mesh", "numpy.zeros", "range", "range", "numpy.array", "plyfile.PlyData", "os.path.join", "os.path.dirname", "os.makedirs", "plyfile.PlyData.write", "print", "network.Network", "tuple", "np.array.append", "Network().cuda.code_cloud.state_dict", "plyfile.PlyElement.describe", "plyfile.PlyElement.describe", "datetime.datetime.now().strftime", "len", "faces[].tolist", "datetime.datetime.now"], "function", ["home.repos.pwc.inspect_result.lity20_dccdif.None.train.LossHelper.write_log", "home.repos.pwc.inspect_result.lity20_dccdif.None.reconstruct.optimize_latent_codes", "home.repos.pwc.inspect_result.lity20_dccdif.None.reconstruct.latent_codes_to_mesh"], ["", "def", "reconstruct", "(", "config", ")", ":", "\n", "    ", "dataset", "=", "ShapeNet", "(", "config", "[", "'recon_dataset'", "]", ")", "\n", "loss_helper", "=", "LossHelper", "(", "len", "(", "dataset", ")", ",", "config", "[", "'reconstruct'", "]", "[", "'num_iteration'", "]", ")", "\n", "writer", "=", "SummaryWriter", "(", "config", "[", "'experiment'", "]", "[", "'recon_log_dir'", "]", ")", "\n", "network", "=", "Network", "(", "config", "[", "'network'", "]", ",", "1", ")", ".", "cuda", "(", ")", "\n", "ckpt_decoder", "=", "torch", ".", "load", "(", "config", "[", "'reconstruct'", "]", "[", "'ckpt_decoder'", "]", ")", "\n", "network", ".", "decoder", ".", "load_state_dict", "(", "ckpt_decoder", "[", "'decoder'", "]", ")", "\n", "\n", "for", "shape_idx", "in", "range", "(", "len", "(", "dataset", ")", ")", ":", "\n", "        ", "print", "(", "'****** %s ******\\ntime: %s\\ndata index: %d/%d'", "%", "(", "config", "[", "'experiment'", "]", "[", "'name'", "]", ",", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "'%Y-%m-%d %H:%M:%S'", ")", ",", "shape_idx", ",", "len", "(", "dataset", ")", ")", ")", "\n", "optimize_latent_codes", "(", "network", ",", "dataset", ",", "shape_idx", ",", "config", ",", "loss_helper", ")", "\n", "\n", "data_id", "=", "dataset", ".", "split", "[", "shape_idx", "]", "\n", "save_path", "=", "os", ".", "path", ".", "join", "(", "config", "[", "'experiment'", "]", "[", "'recon_latent_codes_dir'", "]", ",", "data_id", "+", "'.pth'", ")", "\n", "save_path_dir", "=", "os", ".", "path", ".", "dirname", "(", "save_path", ")", "\n", "os", ".", "makedirs", "(", "save_path_dir", ",", "exist_ok", "=", "True", ")", "\n", "torch", ".", "save", "(", "{", "'latent_codes'", ":", "network", ".", "code_cloud", ".", "state_dict", "(", ")", "}", ",", "save_path", ")", "\n", "print", "(", "'Optimized latent code is saved to '", "+", "save_path", ")", "\n", "\n", "vertices", ",", "faces", "=", "latent_codes_to_mesh", "(", "network", ",", "config", ")", "\n", "vertices_tuple", "=", "np", ".", "zeros", "(", "(", "vertices", ".", "shape", "[", "0", "]", ",", ")", ",", "dtype", "=", "[", "(", "'x'", ",", "'f4'", ")", ",", "(", "'y'", ",", "'f4'", ")", ",", "(", "'z'", ",", "'f4'", ")", "]", ")", "\n", "for", "i", "in", "range", "(", "vertices", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "vertices_tuple", "[", "i", "]", "=", "tuple", "(", "vertices", "[", "i", ",", ":", "]", ")", "\n", "", "faces_tuple", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "faces", ".", "shape", "[", "0", "]", ")", ":", "\n", "            ", "faces_tuple", ".", "append", "(", "(", "(", "faces", "[", "i", ",", ":", "]", ".", "tolist", "(", ")", ",", ")", ")", ")", "\n", "", "faces_tuple", "=", "np", ".", "array", "(", "faces_tuple", ",", "dtype", "=", "[", "(", "'vertex_indices'", ",", "'i4'", ",", "(", "3", ",", ")", ")", "]", ")", "\n", "ply_data", "=", "plyfile", ".", "PlyData", "(", "[", "plyfile", ".", "PlyElement", ".", "describe", "(", "vertices_tuple", ",", "'vertex'", ")", ",", "plyfile", ".", "PlyElement", ".", "describe", "(", "faces_tuple", ",", "'face'", ")", "]", ")", "\n", "\n", "save_path", "=", "os", ".", "path", ".", "join", "(", "config", "[", "'experiment'", "]", "[", "'recon_meshes_dir'", "]", ",", "data_id", "+", "'.ply'", ")", "\n", "save_path_dir", "=", "os", ".", "path", ".", "dirname", "(", "save_path", ")", "\n", "os", ".", "makedirs", "(", "save_path_dir", ",", "exist_ok", "=", "True", ")", "\n", "ply_data", ".", "write", "(", "save_path", ")", "\n", "print", "(", "'Reconstructed mesh is saved to '", "+", "save_path", ")", "\n", "\n", "", "loss_helper", ".", "write_log", "(", "writer", ")", "\n", "writer", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lity20_dccdif.None.network.CodeCloud.__init__": [[8, 18], ["print", "torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "sum", "print", "datetime.datetime.datetime.now().strftime", "datetime.datetime.datetime.now().strftime", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.rand", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "p.data.nelement", "datetime.datetime.datetime.now", "network.CodeCloud.parameters", "datetime.datetime.datetime.now"], "methods", ["home.repos.pwc.inspect_result.lity20_dccdif.None.dataset.ShapeNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", ",", "num_records", ")", ":", "\n", "        ", "print", "(", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "'%Y-%m-%d %H:%M:%S'", ")", ",", "'Building CodeCloud.'", ")", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "config", "=", "config", "\n", "\n", "self", ".", "codes_position", "=", "nn", ".", "Parameter", "(", "torch", ".", "rand", "(", "num_records", ",", "config", "[", "'num_codes'", "]", ",", "3", ")", "-", "0.5", ")", "\n", "self", ".", "codes", "=", "nn", ".", "Parameter", "(", "torch", ".", "randn", "(", "num_records", ",", "config", "[", "'num_codes'", "]", ",", "config", "[", "'code_dim'", "]", ")", "*", "0.01", ")", "\n", "\n", "num_params", "=", "sum", "(", "p", ".", "data", ".", "nelement", "(", ")", "for", "p", "in", "self", ".", "parameters", "(", ")", ")", "\n", "print", "(", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "'%Y-%m-%d %H:%M:%S'", ")", ",", "'CodeCloud done(#parameters=%d).'", "%", "num_params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lity20_dccdif.None.network.CodeCloud.query": [[19, 36], ["torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "weight.sum", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "query_points.unsqueeze", "batch_codes_position.unsqueeze"], "methods", ["None"], ["", "def", "query", "(", "self", ",", "indices", ",", "query_points", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            indices: tensor, (batch_size,)\n            query_points: tensor, (batch_size, num_points, 3)\n        Returns:\n            query_codes: tensor, (batch_size, num_points, code_dim)\n            square_dist: tensor, (batch_size, num_points, num_codes)\n            weight: tensor, (batch_size, num_points, num_codes)\n        \"\"\"", "\n", "batch_codes_position", "=", "self", ".", "codes_position", "[", "indices", "]", "\n", "batch_codes", "=", "self", ".", "codes", "[", "indices", "]", "\n", "square_dist", "=", "(", "query_points", ".", "unsqueeze", "(", "2", ")", "-", "batch_codes_position", ".", "unsqueeze", "(", "1", ")", ")", ".", "pow", "(", "2", ")", ".", "sum", "(", "dim", "=", "-", "1", ")", "+", "1e-16", "\n", "weight", "=", "1.0", "/", "(", "torch", ".", "sqrt", "(", "square_dist", ")", "**", "self", ".", "config", "[", "'dist_scale'", "]", ")", "\n", "weight", "=", "weight", "/", "weight", ".", "sum", "(", "dim", "=", "-", "1", ",", "keepdim", "=", "True", ")", "\n", "query_codes", "=", "torch", ".", "matmul", "(", "weight", ",", "batch_codes", ")", "\n", "return", "query_codes", ",", "square_dist", ",", "weight", "\n", "\n"]], "home.repos.pwc.inspect_result.lity20_dccdif.None.network.IM_Decoder.__init__": [[39, 52], ["print", "torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "sum", "print", "datetime.datetime.datetime.now().strftime", "datetime.datetime.datetime.now().strftime", "p.data.nelement", "datetime.datetime.datetime.now", "network.IM_Decoder.parameters", "datetime.datetime.datetime.now"], "methods", ["home.repos.pwc.inspect_result.lity20_dccdif.None.dataset.ShapeNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_dim", ")", ":", "\n", "        ", "print", "(", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "'%Y-%m-%d %H:%M:%S'", ")", ",", "'Building IM-decoder.'", ")", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "linear_1", "=", "nn", ".", "Linear", "(", "input_dim", ",", "2048", ",", "bias", "=", "True", ")", "\n", "self", ".", "linear_2", "=", "nn", ".", "Linear", "(", "input_dim", "+", "2048", ",", "1024", ",", "bias", "=", "True", ")", "\n", "self", ".", "linear_3", "=", "nn", ".", "Linear", "(", "input_dim", "+", "1024", ",", "512", ",", "bias", "=", "True", ")", "\n", "self", ".", "linear_4", "=", "nn", ".", "Linear", "(", "input_dim", "+", "512", ",", "256", ",", "bias", "=", "True", ")", "\n", "self", ".", "linear_5", "=", "nn", ".", "Linear", "(", "input_dim", "+", "256", ",", "128", ",", "bias", "=", "True", ")", "\n", "self", ".", "linear_6", "=", "nn", ".", "Linear", "(", "128", ",", "1", ",", "bias", "=", "True", ")", "\n", "\n", "num_params", "=", "sum", "(", "p", ".", "data", ".", "nelement", "(", ")", "for", "p", "in", "self", ".", "parameters", "(", ")", ")", "\n", "print", "(", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "'%Y-%m-%d %H:%M:%S'", ")", ",", "'IM decoder done(#parameters=%d).'", "%", "num_params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lity20_dccdif.None.network.IM_Decoder.forward": [[53, 75], ["network.IM_Decoder.linear_1", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "network.IM_Decoder.linear_2", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "network.IM_Decoder.linear_3", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "network.IM_Decoder.linear_4", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "network.IM_Decoder.linear_5", "torch.leaky_relu", "torch.leaky_relu", "torch.leaky_relu", "network.IM_Decoder.linear_6", "network.IM_Decoder.squeeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "batch_input", ")", ":", "\n", "        ", "l1", "=", "self", ".", "linear_1", "(", "batch_input", ")", "\n", "l1", "=", "F", ".", "leaky_relu", "(", "l1", ",", "negative_slope", "=", "0.02", ",", "inplace", "=", "True", ")", "\n", "l1", "=", "torch", ".", "cat", "(", "[", "l1", ",", "batch_input", "]", ",", "dim", "=", "-", "1", ")", "\n", "\n", "l2", "=", "self", ".", "linear_2", "(", "l1", ")", "\n", "l2", "=", "F", ".", "leaky_relu", "(", "l2", ",", "negative_slope", "=", "0.02", ",", "inplace", "=", "True", ")", "\n", "l2", "=", "torch", ".", "cat", "(", "[", "l2", ",", "batch_input", "]", ",", "dim", "=", "-", "1", ")", "\n", "\n", "l3", "=", "self", ".", "linear_3", "(", "l2", ")", "\n", "l3", "=", "F", ".", "leaky_relu", "(", "l3", ",", "negative_slope", "=", "0.02", ",", "inplace", "=", "True", ")", "\n", "l3", "=", "torch", ".", "cat", "(", "[", "l3", ",", "batch_input", "]", ",", "dim", "=", "-", "1", ")", "\n", "\n", "l4", "=", "self", ".", "linear_4", "(", "l3", ")", "\n", "l4", "=", "F", ".", "leaky_relu", "(", "l4", ",", "negative_slope", "=", "0.02", ",", "inplace", "=", "True", ")", "\n", "l4", "=", "torch", ".", "cat", "(", "[", "l4", ",", "batch_input", "]", ",", "dim", "=", "-", "1", ")", "\n", "\n", "l5", "=", "self", ".", "linear_5", "(", "l4", ")", "\n", "l5", "=", "F", ".", "leaky_relu", "(", "l5", ",", "negative_slope", "=", "0.02", ",", "inplace", "=", "True", ")", "\n", "\n", "l6", "=", "self", ".", "linear_6", "(", "l5", ")", "\n", "return", "l6", ".", "squeeze", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lity20_dccdif.None.network.Network.__init__": [[78, 88], ["print", "torch.Module.__init__", "network.CodeCloud", "network.IM_Decoder", "sum", "print", "datetime.datetime.datetime.now().strftime", "datetime.datetime.datetime.now().strftime", "p.data.nelement", "datetime.datetime.datetime.now", "network.Network.parameters", "datetime.datetime.datetime.now"], "methods", ["home.repos.pwc.inspect_result.lity20_dccdif.None.dataset.ShapeNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", ",", "num_records", ")", ":", "\n", "        ", "print", "(", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "'%Y-%m-%d %H:%M:%S'", ")", ",", "'Building network.'", ")", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "config", "=", "config", "\n", "\n", "self", ".", "code_cloud", "=", "CodeCloud", "(", "config", "[", "'code_cloud'", "]", ",", "num_records", ")", "\n", "self", ".", "decoder", "=", "IM_Decoder", "(", "config", "[", "'code_cloud'", "]", "[", "'code_dim'", "]", "+", "3", ")", "\n", "\n", "num_params", "=", "sum", "(", "p", ".", "data", ".", "nelement", "(", ")", "for", "p", "in", "self", ".", "parameters", "(", ")", ")", "\n", "print", "(", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "'%Y-%m-%d %H:%M:%S'", ")", ",", "'Network done(#parameters=%d).'", "%", "num_params", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lity20_dccdif.None.network.Network.forward": [[89, 106], ["network.Network.code_cloud.query", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "network.Network.decoder"], "methods", ["home.repos.pwc.inspect_result.lity20_dccdif.None.network.CodeCloud.query"], ["", "def", "forward", "(", "self", ",", "indices", ",", "query_points", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            indices: tensor, (batch_size,)\n            query_points: tensor, (batch_size, num_points, 3)\n        Returns:\n            pred_sd: tensor, (batch_size, num_points)\n        \"\"\"", "\n", "query_codes", ",", "square_dist", ",", "weight", "=", "self", ".", "code_cloud", ".", "query", "(", "indices", ",", "query_points", ")", "\n", "batch_input", "=", "torch", ".", "cat", "(", "[", "query_codes", ",", "query_points", "]", ",", "dim", "=", "-", "1", ")", "\n", "pred_sd", "=", "self", ".", "decoder", "(", "batch_input", ")", "\n", "\n", "self", ".", "per_step_query_codes", "=", "query_codes", "\n", "self", ".", "per_step_square_dist", "=", "square_dist", "\n", "self", ".", "per_step_weight", "=", "weight", "\n", "self", ".", "per_step_pred_sd", "=", "pred_sd", "\n", "return", "pred_sd", "\n", "\n"]], "home.repos.pwc.inspect_result.lity20_dccdif.None.network.Network.loss": [[107, 129], ["torch.mse_loss", "torch.mse_loss", "torch.mse_loss", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.linalg.norm", "torch.linalg.norm", "torch.linalg.norm", "torch.linalg.norm", "torch.linalg.norm", "torch.linalg.norm", "torch.linalg.norm", "torch.linalg.norm", "torch.linalg.norm", "network.Network.per_step_weight.detach", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.abs().unsqueeze", "torch.abs().unsqueeze", "torch.abs().unsqueeze", "torch.abs().unsqueeze", "torch.abs().unsqueeze", "torch.abs().unsqueeze", "torch.abs().unsqueeze", "torch.abs().unsqueeze", "torch.abs().unsqueeze", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "torch.abs"], "methods", ["None"], ["", "def", "loss", "(", "self", ",", "gt_sd", ")", ":", "\n", "        ", "loss_dict", "=", "{", "}", "\n", "loss_dict", "[", "'total_loss'", "]", "=", "0", "\n", "\n", "l2_loss", "=", "F", ".", "mse_loss", "(", "self", ".", "per_step_pred_sd", ",", "gt_sd", ")", "\n", "loss_dict", "[", "'l2_loss'", "]", "=", "l2_loss", "\n", "loss_dict", "[", "'total_loss'", "]", "+=", "l2_loss", "\n", "\n", "if", "self", ".", "config", "[", "'code_regularization_lambda'", "]", ">", "0", ":", "\n", "            ", "code_regularization_loss", "=", "torch", ".", "mean", "(", "torch", ".", "linalg", ".", "norm", "(", "self", ".", "per_step_query_codes", ",", "dim", "=", "-", "1", ")", ")", "\n", "loss_dict", "[", "'code_regularization_loss'", "]", "=", "code_regularization_loss", "\n", "loss_dict", "[", "'total_loss'", "]", "+=", "code_regularization_loss", "*", "self", ".", "config", "[", "'code_regularization_lambda'", "]", "\n", "\n", "", "if", "self", ".", "config", "[", "'code_position_lambda'", "]", ">", "0", ":", "\n", "            ", "dist", "=", "self", ".", "per_step_square_dist", "*", "self", ".", "per_step_weight", ".", "detach", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "error", "=", "torch", ".", "abs", "(", "self", ".", "per_step_pred_sd", "-", "gt_sd", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "", "code_position_loss", "=", "torch", ".", "mean", "(", "dist", "*", "error", ")", "\n", "loss_dict", "[", "'code_position_loss'", "]", "=", "code_position_loss", "\n", "loss_dict", "[", "'total_loss'", "]", "+=", "code_position_loss", "*", "self", ".", "config", "[", "'code_position_lambda'", "]", "\n", "\n", "", "return", "loss_dict", "\n", "", "", ""]], "home.repos.pwc.inspect_result.lity20_dccdif.None.train.LossHelper.__init__": [[27, 29], ["train.LossHelper.clear"], "methods", ["home.repos.pwc.inspect_result.lity20_dccdif.None.train.LossHelper.clear"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "clear", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lity20_dccdif.None.train.LossHelper.clear": [[30, 33], ["None"], "methods", ["None"], ["", "def", "clear", "(", "self", ")", ":", "\n", "        ", "self", ".", "loss_dict", "=", "None", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.lity20_dccdif.None.train.LossHelper.accumulate": [[34, 43], ["loss_dict.items", "loss_dict.items", "v.item", "v.item"], "methods", ["None"], ["", "def", "accumulate", "(", "self", ",", "loss_dict", ")", ":", "\n", "        ", "if", "self", ".", "count", "==", "0", ":", "\n", "            ", "self", ".", "loss_dict", "=", "{", "}", "\n", "for", "k", ",", "v", "in", "loss_dict", ".", "items", "(", ")", ":", "\n", "                ", "self", ".", "loss_dict", "[", "k", "]", "=", "v", ".", "item", "(", ")", "\n", "", "", "else", ":", "\n", "            ", "for", "k", ",", "v", "in", "loss_dict", ".", "items", "(", ")", ":", "\n", "                ", "self", ".", "loss_dict", "[", "k", "]", "+=", "v", ".", "item", "(", ")", "\n", "", "", "self", ".", "count", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.lity20_dccdif.None.train.LossHelper.write_log": [[44, 51], ["train.LossHelper.loss_dict.items", "writer.add_scalar", "print"], "methods", ["None"], ["", "def", "write_log", "(", "self", ",", "writer", ",", "step", ")", ":", "\n", "        ", "if", "self", ".", "count", "==", "0", ":", "\n", "            ", "return", "\n", "", "for", "k", ",", "v", "in", "self", ".", "loss_dict", ".", "items", "(", ")", ":", "\n", "            ", "v", "/=", "self", ".", "count", "\n", "writer", ".", "add_scalar", "(", "k", ",", "v", ",", "global_step", "=", "step", ")", "\n", "print", "(", "k", ",", "':'", ",", "v", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lity20_dccdif.None.train.prepare": [[15, 24], ["os.makedirs", "os.path.join", "os.makedirs", "os.system", "os.makedirs", "os.makedirs", "open", "json.dump", "os.path.join"], "function", ["None"], ["def", "prepare", "(", "config", ")", ":", "\n", "    ", "os", ".", "makedirs", "(", "config", "[", "'experiment'", "]", "[", "'dir'", "]", ")", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "config", "[", "'experiment'", "]", "[", "'dir'", "]", ",", "'config.json'", ")", ",", "'w'", ")", "as", "f", ":", "\n", "        ", "json", ".", "dump", "(", "config", ",", "f", ",", "indent", "=", "4", ")", "\n", "", "src_dir", "=", "os", ".", "path", ".", "join", "(", "config", "[", "'experiment'", "]", "[", "'dir'", "]", ",", "'src'", ")", "\n", "os", ".", "makedirs", "(", "src_dir", ")", "\n", "os", ".", "system", "(", "'cp *.py '", "+", "src_dir", ")", "\n", "os", ".", "makedirs", "(", "config", "[", "'experiment'", "]", "[", "'ckpt_save_dir'", "]", ")", "\n", "os", ".", "makedirs", "(", "config", "[", "'experiment'", "]", "[", "'log_dir'", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lity20_dccdif.None.train.load_ckpt": [[53, 71], ["torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "network.decoder.load_state_dict", "network.code_cloud.load_state_dict", "decoder_optimizer.load_state_dict", "latent_codes_optimizer.load_state_dict", "decoder_lr_scheduler.load_state_dict", "latent_codes_lr_scheduler.load_state_dict", "print", "datetime.datetime.now().strftime", "datetime.datetime.now"], "function", ["None"], ["", "", "", "def", "load_ckpt", "(", "config", ",", "network", ",", "decoder_optimizer", ",", "latent_codes_optimizer", ",", "decoder_lr_scheduler", ",", "latent_codes_lr_scheduler", ")", ":", "\n", "    ", "ckpt_decoder", "=", "torch", ".", "load", "(", "config", "[", "'train'", "]", "[", "'pretrain_ckpt_decoder'", "]", ")", "\n", "ckpt_decoder_optimizer", "=", "torch", ".", "load", "(", "config", "[", "'train'", "]", "[", "'pretrain_ckpt_decoder_optimizer'", "]", ")", "\n", "ckpt_decoder_lr_scheduler", "=", "torch", ".", "load", "(", "config", "[", "'train'", "]", "[", "'pretrain_ckpt_decoder_lr_scheduler'", "]", ")", "\n", "ckpt_latent_codes", "=", "torch", ".", "load", "(", "config", "[", "'train'", "]", "[", "'pretrain_ckpt_latent_codes'", "]", ")", "\n", "ckpt_latent_codes_optimizer", "=", "torch", ".", "load", "(", "config", "[", "'train'", "]", "[", "'pretrain_ckpt_latent_codes_optimizer'", "]", ")", "\n", "ckpt_latent_codes_lr_scheduler", "=", "torch", ".", "load", "(", "config", "[", "'train'", "]", "[", "'pretrain_ckpt_latent_codes_lr_scheduler'", "]", ")", "\n", "\n", "network", ".", "decoder", ".", "load_state_dict", "(", "ckpt_decoder", "[", "'decoder'", "]", ")", "\n", "network", ".", "code_cloud", ".", "load_state_dict", "(", "ckpt_latent_codes", "[", "'latent_codes'", "]", ")", "\n", "decoder_optimizer", ".", "load_state_dict", "(", "ckpt_decoder_optimizer", "[", "'decoder_optimizer'", "]", ")", "\n", "latent_codes_optimizer", ".", "load_state_dict", "(", "ckpt_latent_codes_optimizer", "[", "'latent_codes_optimizer'", "]", ")", "\n", "decoder_lr_scheduler", ".", "load_state_dict", "(", "ckpt_decoder_lr_scheduler", "[", "'decoder_lr_scheduler'", "]", ")", "\n", "latent_codes_lr_scheduler", ".", "load_state_dict", "(", "ckpt_latent_codes_lr_scheduler", "[", "'latent_codes_lr_scheduler'", "]", ")", "\n", "\n", "start_epoch", "=", "ckpt_decoder", "[", "'epoch'", "]", "+", "1", "\n", "print", "(", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "'%Y-%m-%d %H:%M:%S'", ")", ",", "'Load pretrain model, start from epoch %d.'", "%", "start_epoch", ")", "\n", "return", "start_epoch", "\n", "\n"]], "home.repos.pwc.inspect_result.lity20_dccdif.None.train.save_ckpt": [[73, 81], ["torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "print", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "datetime.datetime.now().strftime", "os.path.join", "network.decoder.state_dict", "network.code_cloud.state_dict", "decoder_optimizer.state_dict", "latent_codes_optimizer.state_dict", "decoder_lr_scheduler.state_dict", "latent_codes_lr_scheduler.state_dict", "datetime.datetime.now"], "function", ["None"], ["", "def", "save_ckpt", "(", "config", ",", "epoch", ",", "network", ",", "decoder_optimizer", ",", "latent_codes_optimizer", ",", "decoder_lr_scheduler", ",", "latent_codes_lr_scheduler", ")", ":", "\n", "    ", "torch", ".", "save", "(", "{", "'epoch'", ":", "epoch", ",", "'decoder'", ":", "network", ".", "decoder", ".", "state_dict", "(", ")", "}", ",", "os", ".", "path", ".", "join", "(", "config", "[", "'experiment'", "]", "[", "'ckpt_save_dir'", "]", ",", "'epoch%d-decoder.pth'", "%", "epoch", ")", ")", "\n", "torch", ".", "save", "(", "{", "'epoch'", ":", "epoch", ",", "'latent_codes'", ":", "network", ".", "code_cloud", ".", "state_dict", "(", ")", "}", ",", "os", ".", "path", ".", "join", "(", "config", "[", "'experiment'", "]", "[", "'ckpt_save_dir'", "]", ",", "'epoch%d-latent_codes.pth'", "%", "epoch", ")", ")", "\n", "torch", ".", "save", "(", "{", "'epoch'", ":", "epoch", ",", "'decoder_optimizer'", ":", "decoder_optimizer", ".", "state_dict", "(", ")", "}", ",", "os", ".", "path", ".", "join", "(", "config", "[", "'experiment'", "]", "[", "'ckpt_save_dir'", "]", ",", "'epoch%d-decoder_optimizer.pth'", "%", "epoch", ")", ")", "\n", "torch", ".", "save", "(", "{", "'epoch'", ":", "epoch", ",", "'latent_codes_optimizer'", ":", "latent_codes_optimizer", ".", "state_dict", "(", ")", "}", ",", "os", ".", "path", ".", "join", "(", "config", "[", "'experiment'", "]", "[", "'ckpt_save_dir'", "]", ",", "'epoch%d-latent_codes_optimizer.pth'", "%", "epoch", ")", ")", "\n", "torch", ".", "save", "(", "{", "'epoch'", ":", "epoch", ",", "'decoder_lr_scheduler'", ":", "decoder_lr_scheduler", ".", "state_dict", "(", ")", "}", ",", "os", ".", "path", ".", "join", "(", "config", "[", "'experiment'", "]", "[", "'ckpt_save_dir'", "]", ",", "'epoch%d-decoder_lr_scheduler.pth'", "%", "epoch", ")", ")", "\n", "torch", ".", "save", "(", "{", "'epoch'", ":", "epoch", ",", "'latent_codes_lr_scheduler'", ":", "latent_codes_lr_scheduler", ".", "state_dict", "(", ")", "}", ",", "os", ".", "path", ".", "join", "(", "config", "[", "'experiment'", "]", "[", "'ckpt_save_dir'", "]", ",", "'epoch%d-latent_codes_lr_scheduler.pth'", "%", "epoch", ")", ")", "\n", "print", "(", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "'%Y-%m-%d %H:%M:%S'", ")", ",", "'Checkpoint saved to'", ",", "os", ".", "path", ".", "join", "(", "config", "[", "'experiment'", "]", "[", "'ckpt_save_dir'", "]", ",", "'epoch%d-*.pth'", "%", "epoch", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lity20_dccdif.None.train.train": [[83, 127], ["train.prepare", "train.LossHelper", "torch.utils.tensorboard.SummaryWriter", "dataset.ShapeNet", "torch.utils.data.DataLoader", "network.Network().cuda", "torch.optim.Adam", "torch.optim.lr_scheduler.StepLR", "torch.optim.Adam", "torch.optim.lr_scheduler.StepLR", "Network().cuda.train", "range", "train.save_ckpt", "torch.utils.tensorboard.SummaryWriter.close", "Network().cuda.decoder.parameters", "Network().cuda.code_cloud.parameters", "train.load_ckpt", "print", "train.LossHelper.clear", "enumerate", "print", "torch.optim.lr_scheduler.StepLR.step", "torch.optim.lr_scheduler.StepLR.step", "train.LossHelper.write_log", "torch.utils.tensorboard.SummaryWriter.add_scalar", "torch.utils.tensorboard.SummaryWriter.add_scalar", "network.Network", "indices.cuda.cuda", "query_points.float().cuda.float().cuda", "gt_sd.float().cuda.float().cuda", "torch.optim.Adam.zero_grad", "torch.optim.Adam.zero_grad", "Network().cuda.", "Network().cuda.loss", "train.LossHelper.accumulate", "loss_dict[].backward", "torch.optim.Adam.step", "torch.optim.Adam.step", "print", "datetime.datetime.now().strftime", "train.save_ckpt", "len", "datetime.datetime.now().strftime", "query_points.float().cuda.float", "gt_sd.float().cuda.float", "datetime.datetime.now", "len", "len", "len", "datetime.datetime.now"], "function", ["home.repos.pwc.inspect_result.lity20_dccdif.None.train.prepare", "home.repos.pwc.inspect_result.lity20_dccdif.None.train.train", "home.repos.pwc.inspect_result.lity20_dccdif.None.train.save_ckpt", "home.repos.pwc.inspect_result.lity20_dccdif.None.train.load_ckpt", "home.repos.pwc.inspect_result.lity20_dccdif.None.train.LossHelper.clear", "home.repos.pwc.inspect_result.lity20_dccdif.None.train.LossHelper.write_log", "home.repos.pwc.inspect_result.lity20_dccdif.None.network.Network.loss", "home.repos.pwc.inspect_result.lity20_dccdif.None.train.LossHelper.accumulate", "home.repos.pwc.inspect_result.lity20_dccdif.None.train.save_ckpt"], ["", "def", "train", "(", "config", ")", ":", "\n", "    ", "prepare", "(", "config", ")", "\n", "loss_helper", "=", "LossHelper", "(", ")", "\n", "writer", "=", "SummaryWriter", "(", "config", "[", "'experiment'", "]", "[", "'log_dir'", "]", ")", "\n", "dataset", "=", "ShapeNet", "(", "config", "[", "'train_dataset'", "]", ")", "\n", "data_loader", "=", "DataLoader", "(", "dataset", ",", "batch_size", "=", "config", "[", "'train'", "]", "[", "'batch_size'", "]", ",", "shuffle", "=", "True", ",", "num_workers", "=", "8", ",", "drop_last", "=", "True", ")", "\n", "network", "=", "Network", "(", "config", "[", "'network'", "]", ",", "len", "(", "dataset", ")", ")", ".", "cuda", "(", ")", "\n", "decoder_optimizer", "=", "Adam", "(", "network", ".", "decoder", ".", "parameters", "(", ")", ",", "lr", "=", "config", "[", "'train'", "]", "[", "'decoder_init_lr'", "]", ",", "weight_decay", "=", "config", "[", "'train'", "]", "[", "'decoder_weight_decay'", "]", ")", "\n", "decoder_lr_scheduler", "=", "StepLR", "(", "decoder_optimizer", ",", "step_size", "=", "config", "[", "'train'", "]", "[", "'decoder_lr_decay_step'", "]", ",", "gamma", "=", "config", "[", "'train'", "]", "[", "'decoder_lr_decay_rate'", "]", ")", "\n", "latent_codes_optimizer", "=", "Adam", "(", "network", ".", "code_cloud", ".", "parameters", "(", ")", ",", "lr", "=", "config", "[", "'train'", "]", "[", "'latent_codes_init_lr'", "]", ")", "\n", "latent_codes_lr_scheduler", "=", "StepLR", "(", "latent_codes_optimizer", ",", "step_size", "=", "config", "[", "'train'", "]", "[", "'latent_codes_lr_decay_step'", "]", ",", "gamma", "=", "config", "[", "'train'", "]", "[", "'latent_codes_lr_decay_rate'", "]", ")", "\n", "\n", "start_epoch", "=", "0", "\n", "if", "config", "[", "'train'", "]", "[", "'pretrain'", "]", ":", "\n", "        ", "start_epoch", "=", "load_ckpt", "(", "config", ",", "network", ",", "decoder_optimizer", ",", "latent_codes_optimizer", ",", "decoder_lr_scheduler", ",", "latent_codes_lr_scheduler", ")", "\n", "", "network", ".", "train", "(", ")", "\n", "for", "epoch", "in", "range", "(", "start_epoch", ",", "config", "[", "'train'", "]", "[", "'num_epoch'", "]", ")", ":", "\n", "        ", "print", "(", "'****** %s ******\\ntime: %s\\nepoch: %d/%d'", "%", "(", "config", "[", "'experiment'", "]", "[", "'name'", "]", ",", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "'%Y-%m-%d %H:%M:%S'", ")", ",", "epoch", ",", "config", "[", "'train'", "]", "[", "'num_epoch'", "]", ")", ")", "\n", "loss_helper", ".", "clear", "(", ")", "\n", "for", "batch_idx", ",", "(", "query_points", ",", "gt_sd", ",", "indices", ")", "in", "enumerate", "(", "data_loader", ")", ":", "\n", "            ", "indices", "=", "indices", ".", "cuda", "(", ")", "\n", "query_points", "=", "query_points", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "gt_sd", "=", "gt_sd", ".", "float", "(", ")", ".", "cuda", "(", ")", "\n", "decoder_optimizer", ".", "zero_grad", "(", ")", "\n", "latent_codes_optimizer", ".", "zero_grad", "(", ")", "\n", "pred_sd", "=", "network", "(", "indices", ",", "query_points", ")", "\n", "loss_dict", "=", "network", ".", "loss", "(", "gt_sd", ")", "\n", "loss_helper", ".", "accumulate", "(", "loss_dict", ")", "\n", "loss_dict", "[", "'total_loss'", "]", ".", "backward", "(", ")", "\n", "decoder_optimizer", ".", "step", "(", ")", "\n", "latent_codes_optimizer", ".", "step", "(", ")", "\n", "print", "(", "'Current epoch progress: %d/%d...'", "%", "(", "batch_idx", ",", "len", "(", "data_loader", ")", ")", ",", "end", "=", "'\\r'", ")", "\n", "", "print", "(", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "'%Y-%m-%d %H:%M:%S'", ")", ",", "'Current epoch progress: %d/%d. Done.'", "%", "(", "len", "(", "data_loader", ")", ",", "len", "(", "data_loader", ")", ")", ")", "\n", "\n", "decoder_lr_scheduler", ".", "step", "(", ")", "\n", "latent_codes_lr_scheduler", ".", "step", "(", ")", "\n", "loss_helper", ".", "write_log", "(", "writer", ",", "epoch", ")", "\n", "writer", ".", "add_scalar", "(", "'decoder_lr'", ",", "decoder_optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", ",", "global_step", "=", "epoch", ")", "\n", "writer", ".", "add_scalar", "(", "'latent_codes_lr'", ",", "latent_codes_optimizer", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", ",", "global_step", "=", "epoch", ")", "\n", "if", "epoch", "%", "config", "[", "'train'", "]", "[", "'ckpt_save_frequency'", "]", "==", "0", ":", "\n", "            ", "save_ckpt", "(", "config", ",", "epoch", ",", "network", ",", "decoder_optimizer", ",", "latent_codes_optimizer", ",", "decoder_lr_scheduler", ",", "latent_codes_lr_scheduler", ")", "\n", "\n", "", "", "save_ckpt", "(", "config", ",", "config", "[", "'train'", "]", "[", "'num_epoch'", "]", ",", "network", ",", "decoder_optimizer", ",", "latent_codes_optimizer", ",", "decoder_lr_scheduler", ",", "latent_codes_lr_scheduler", ")", "\n", "writer", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lity20_dccdif.None.dataset.ShapeNet.__init__": [[8, 25], ["print", "torch.utils.data.Dataset.__init__", "print", "datetime.datetime.datetime.now().strftime", "open", "f.readlines", "l.rstrip", "enumerate", "datetime.datetime.datetime.now().strftime", "os.path.join", "print", "os.path.join", "dataset.ShapeNet.data.append", "datetime.datetime.datetime.now", "numpy.load", "datetime.datetime.datetime.now", "len"], "methods", ["home.repos.pwc.inspect_result.lity20_dccdif.None.dataset.ShapeNet.__init__"], ["    ", "def", "__init__", "(", "self", ",", "config", ")", ":", "\n", "        ", "print", "(", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "'%Y-%m-%d %H:%M:%S'", ")", ",", "'Building ShapeNet dataset.'", ")", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "config", "=", "config", "\n", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "config", "[", "'data_root'", "]", ",", "config", "[", "'split'", "]", "+", "'_split.txt'", ")", ",", "'r'", ")", "as", "f", ":", "\n", "            ", "split", "=", "f", ".", "readlines", "(", ")", "\n", "", "self", ".", "split", "=", "[", "l", ".", "rstrip", "(", ")", "for", "l", "in", "split", "]", "\n", "\n", "if", "config", "[", "'load_in_memory'", "]", ":", "\n", "            ", "self", ".", "data", "=", "[", "]", "\n", "for", "i", ",", "data_id", "in", "enumerate", "(", "self", ".", "split", ")", ":", "\n", "                ", "print", "(", "'loading data: %d/%d...'", "%", "(", "i", ",", "len", "(", "self", ".", "split", ")", ")", ",", "end", "=", "'\\r'", ")", "\n", "data_path", "=", "os", ".", "path", ".", "join", "(", "config", "[", "'data_root'", "]", ",", "data_id", "+", "'.npy'", ")", "\n", "self", ".", "data", ".", "append", "(", "np", ".", "load", "(", "data_path", ")", ")", "\n", "\n", "", "", "print", "(", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "'%Y-%m-%d %H:%M:%S'", ")", ",", "'Dataset done.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lity20_dccdif.None.dataset.ShapeNet.__len__": [[26, 28], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "split", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lity20_dccdif.None.dataset.ShapeNet.__getitem__": [[29, 38], ["os.path.join", "numpy.load", "numpy.random.randint"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "self", ".", "config", "[", "'load_in_memory'", "]", ":", "\n", "            ", "xyz_sd", "=", "self", ".", "data", "[", "idx", "]", "\n", "", "else", ":", "\n", "            ", "data_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "config", "[", "'data_root'", "]", ",", "self", ".", "split", "[", "idx", "]", "+", "'.npy'", ")", "\n", "xyz_sd", "=", "np", ".", "load", "(", "data_path", ")", "\n", "", "n_total_samples", "=", "xyz_sd", ".", "shape", "[", "0", "]", "\n", "xyz_sd", "=", "xyz_sd", "[", "np", ".", "random", ".", "randint", "(", "0", ",", "n_total_samples", ",", "size", "=", "self", ".", "config", "[", "'num_samples_per_step'", "]", ")", "]", "\n", "return", "xyz_sd", "[", ":", ",", ":", "3", "]", ",", "xyz_sd", "[", ":", ",", "-", "1", "]", ",", "idx", "\n", "", "", ""]]}