{"home.repos.pwc.inspect_result.Haoran-S_TSP_CL.None.main.Continuum.__init__": [[34, 51], ["len", "range", "len", "print", "[].size", "range", "print", "random.shuffle", "range"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data", ",", "args", ")", ":", "\n", "        ", "self", ".", "data", "=", "data", "\n", "self", ".", "batch_size", "=", "args", ".", "batch_size", "\n", "n_tasks", "=", "len", "(", "data", ")", "\n", "\n", "self", ".", "permutation", "=", "[", "]", "\n", "for", "t", "in", "range", "(", "n_tasks", ")", ":", "\n", "            ", "N", "=", "data", "[", "t", "]", "[", "1", "]", ".", "size", "(", "0", ")", "\n", "for", "_", "in", "range", "(", "args", ".", "n_epochs", ")", ":", "\n", "                ", "task_p", "=", "[", "[", "t", ",", "i", "]", "for", "i", "in", "range", "(", "N", ")", "]", "\n", "random", ".", "shuffle", "(", "task_p", ")", "\n", "self", ".", "permutation", "+=", "task_p", "\n", "", "print", "(", "\"Task\"", ",", "t", ",", "\"Samples are\"", ",", "N", ")", "\n", "\n", "", "self", ".", "length", "=", "len", "(", "self", ".", "permutation", ")", "\n", "self", ".", "current", "=", "0", "\n", "print", "(", "\"total length\"", ",", "self", ".", "length", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.None.main.Continuum.__iter__": [[52, 54], ["None"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "self", "\n", "\n"]], "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.None.main.Continuum.next": [[55, 57], ["main.Continuum.__next__"], "methods", ["home.repos.pwc.inspect_result.Haoran-S_TSP_CL.None.main.Continuum.__next__"], ["", "def", "next", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "__next__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.None.main.Continuum.__next__": [[58, 73], ["torch.LongTensor", "torch.LongTensor.append"], "methods", ["None"], ["", "def", "__next__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "current", ">=", "self", ".", "length", ":", "\n", "            ", "raise", "StopIteration", "\n", "", "else", ":", "\n", "            ", "ti", "=", "self", ".", "permutation", "[", "self", ".", "current", "]", "[", "0", "]", "\n", "j", "=", "[", "]", "\n", "i", "=", "0", "\n", "while", "(", "(", "(", "self", ".", "current", "+", "i", ")", "<", "self", ".", "length", ")", "and", "\n", "(", "self", ".", "permutation", "[", "self", ".", "current", "+", "i", "]", "[", "0", "]", "==", "ti", ")", "and", "\n", "(", "i", "<", "self", ".", "batch_size", ")", ")", ":", "\n", "                ", "j", ".", "append", "(", "self", ".", "permutation", "[", "self", ".", "current", "+", "i", "]", "[", "1", "]", ")", "\n", "i", "+=", "1", "\n", "", "self", ".", "current", "+=", "i", "\n", "j", "=", "torch", ".", "LongTensor", "(", "j", ")", "\n", "return", "self", ".", "data", "[", "ti", "]", "[", "1", "]", "[", "j", "]", ",", "ti", ",", "self", ".", "data", "[", "ti", "]", "[", "2", "]", "[", "j", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.None.main.eval_tasks": [[75, 109], ["model.eval", "torch.nn.MSELoss", "enumerate", "print", "model().data.cpu", "result_rate.append", "result_ratio.append", "result_mse.append", "xb.cuda.cuda", "model.common.SumRateLoss().item", "model.common.SumRateLoss().item", "torch.nn.MSELoss.item", "model", "model.common.SumRateLoss", "model.common.SumRateLoss", "torch.nn.MSELoss.", "xb.cuda.cpu", "xb.cuda.cpu", "yb.cpu", "yb.cpu"], "function", ["home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.common.SumRateLoss", "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.common.SumRateLoss"], ["", "", "", "def", "eval_tasks", "(", "model", ",", "tasks", ",", "args", ")", ":", "\n", "    ", "\"\"\"\n    evaluates the model on all tasks\n    \"\"\"", "\n", "model", ".", "eval", "(", ")", "\n", "result_mse", "=", "[", "]", "\n", "result_rate", "=", "[", "]", "\n", "result_ratio", "=", "[", "]", "\n", "MSEloss", "=", "torch", ".", "nn", ".", "MSELoss", "(", ")", "\n", "\n", "total_pred", "=", "0", "\n", "total_label", "=", "0", "\n", "for", "i", ",", "task", "in", "enumerate", "(", "tasks", ")", ":", "\n", "        ", "t", "=", "i", "\n", "xb", "=", "task", "[", "1", "]", "\n", "yb", "=", "task", "[", "2", "]", "\n", "\n", "if", "args", ".", "cuda", ":", "\n", "            ", "xb", "=", "xb", ".", "cuda", "(", ")", "\n", "", "output", "=", "model", "(", "xb", ",", "t", ")", ".", "data", ".", "cpu", "(", ")", "\n", "# output = (output > 0.5).float()", "\n", "\n", "rate_loss", "=", "-", "SumRateLoss", "(", "xb", ".", "cpu", "(", ")", ",", "output", ",", "args", ".", "noise", ")", ".", "item", "(", ")", "\n", "rate_loss_of_wmmse", "=", "-", "SumRateLoss", "(", "xb", ".", "cpu", "(", ")", ",", "yb", ".", "cpu", "(", ")", ",", "args", ".", "noise", ")", ".", "item", "(", ")", "\n", "result_rate", ".", "append", "(", "rate_loss", ")", "\n", "result_ratio", ".", "append", "(", "rate_loss", "/", "rate_loss_of_wmmse", ")", "\n", "result_mse", ".", "append", "(", "MSEloss", "(", "output", ",", "yb", ".", "cpu", "(", ")", ")", ".", "item", "(", ")", ")", "\n", "total_pred", "+=", "rate_loss", "\n", "total_label", "+=", "rate_loss_of_wmmse", "\n", "\n", "# print('MSE:', [i for i in result_mse])", "\n", "", "print", "(", "'ratio:'", ",", "[", "i", "for", "i", "in", "result_ratio", "]", ")", "\n", "return", "result_mse", ",", "result_rate", ",", "result_ratio", ",", "total_pred", "/", "total_label", "\n", "\n"]], "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.None.main.life_experience": [[111, 171], ["time.time", "enumerate", "time.time", "model.train", "time.time", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.randperm", "v_x.cuda.cuda", "v_y.cuda.cuda", "model.observe", "main.eval_tasks", "result_t_mse.append", "result_t_rate.append", "result_t_ratio.append", "result_all.append", "time_all.append", "torch.cat", "torch.cat", "print", "v_x.cuda.size", "model.observe", "model.observe"], "function", ["home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.reservoir_sampling.Net.observe", "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.None.main.eval_tasks", "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.reservoir_sampling.Net.observe", "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.reservoir_sampling.Net.observe"], ["", "def", "life_experience", "(", "model_o", ",", "continuum", ",", "x_te", ",", "args", ",", "accumulate_train", "=", "False", ")", ":", "\n", "    ", "result_t_mse", "=", "[", "]", "\n", "result_t_rate", "=", "[", "]", "\n", "result_t_ratio", "=", "[", "]", "\n", "time_all", "=", "[", "]", "\n", "result_all", "=", "[", "]", "# avg performance on all test samples", "\n", "current_task", "=", "0", "\n", "time_start", "=", "time", ".", "time", "(", ")", "\n", "time_spent", "=", "0", "\n", "model", "=", "model_o", "\n", "\n", "for", "(", "i", ",", "(", "v_x", ",", "t", ",", "v_y", ")", ")", "in", "enumerate", "(", "continuum", ")", ":", "\n", "        ", "if", "accumulate_train", ":", "\n", "#            model = model_o", "\n", "            ", "if", "i", "==", "0", ":", "\n", "                ", "v_x_acc", "=", "v_x", "\n", "v_y_acc", "=", "v_y", "\n", "", "else", ":", "\n", "                ", "v_x_acc", "=", "torch", ".", "cat", "(", "(", "v_x_acc", ",", "v_x", ")", ",", "0", ")", "\n", "v_y_acc", "=", "torch", ".", "cat", "(", "(", "v_y_acc", ",", "v_y", ")", ",", "0", ")", "\n", "", "v_x", "=", "v_x_acc", "\n", "v_y", "=", "v_y_acc", "\n", "\n", "perm_index", "=", "torch", ".", "randperm", "(", "v_x", ".", "size", "(", ")", "[", "0", "]", ")", "\n", "v_x", "=", "v_x", "[", "perm_index", "]", "\n", "v_y", "=", "v_y", "[", "perm_index", "]", "\n", "\n", "", "if", "args", ".", "cuda", ":", "\n", "            ", "v_x", "=", "v_x", ".", "cuda", "(", ")", "\n", "v_y", "=", "v_y", ".", "cuda", "(", ")", "\n", "\n", "", "time_start", "=", "time", ".", "time", "(", ")", "\n", "\n", "model", ".", "train", "(", ")", "\n", "if", "args", ".", "unsupervised", "==", "'n'", ":", "\n", "            ", "model", ".", "observe", "(", "v_x", ",", "t", ",", "v_y", ",", "loss_type", "=", "'MSE'", ",", "x_te", "=", "x_te", ",", "x_tr", "=", "x_tr", ")", "\n", "", "elif", "args", ".", "unsupervised", "==", "'y'", ":", "\n", "            ", "if", "i", "<", "1", ":", "\n", "                ", "model", ".", "observe", "(", "v_x", ",", "t", ",", "v_y", ",", "loss_type", "=", "'MSE'", ",", "\n", "x_te", "=", "x_te", ",", "x_tr", "=", "x_tr", ")", "\n", "", "else", ":", "\n", "                ", "model", ".", "observe", "(", "v_x", ",", "t", ",", "v_y", ",", "loss_type", "=", "'SUMRATE'", ",", "\n", "x_te", "=", "x_te", ",", "x_tr", "=", "x_tr", ")", "\n", "", "", "else", ":", "\n", "            ", "print", "(", "'error!'", ")", "\n", "\n", "", "time_end", "=", "time", ".", "time", "(", ")", "\n", "time_spent", "=", "time_spent", "+", "time_end", "-", "time_start", "\n", "\n", "if", "(", "(", "(", "i", "%", "args", ".", "log_every", ")", "==", "0", ")", "or", "(", "t", "!=", "current_task", ")", ")", ":", "\n", "            ", "res_per_t_mse", ",", "res_per_t_rate", ",", "res_per_t_ratio", ",", "res_all", "=", "eval_tasks", "(", "\n", "model", ",", "x_te", ",", "args", ")", "\n", "result_t_mse", ".", "append", "(", "res_per_t_mse", ")", "\n", "result_t_rate", ".", "append", "(", "res_per_t_rate", ")", "\n", "result_t_ratio", ".", "append", "(", "res_per_t_ratio", ")", "\n", "result_all", ".", "append", "(", "res_all", ")", "\n", "current_task", "=", "t", "\n", "time_all", ".", "append", "(", "time_spent", ")", "\n", "\n", "", "", "return", "torch", ".", "Tensor", "(", "result_t_mse", ")", ",", "torch", ".", "Tensor", "(", "result_t_rate", ")", ",", "torch", ".", "Tensor", "(", "result_t_ratio", ")", ",", "torch", ".", "Tensor", "(", "result_all", ")", ",", "time_all", "\n", "\n"]], "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.None.generate_figure.test": [[139, 167], ["model.eval", "enumerate", "model().data.cpu", "model.common.SumRateLoss", "torch.sum", "model.common.SumRateLoss", "torch.div", "xb.cuda.cuda", "xb.cuda.cpu", "xb.cuda.cpu", "yb.cpu", "torch.cat", "torch.cat", "torch.cat", "model", "yb.cpu"], "function", ["home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.common.SumRateLoss", "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.common.SumRateLoss"], ["def", "test", "(", "model", ",", "tasks", ",", "args", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "MSE_per_sample", "=", "[", "]", "\n", "SUM_per_sample", "=", "[", "]", "\n", "ratio_per_sample", "=", "[", "]", "\n", "for", "i", ",", "task", "in", "enumerate", "(", "tasks", ")", ":", "\n", "        ", "t", "=", "i", "\n", "xb", "=", "task", "[", "1", "]", "\n", "yb", "=", "task", "[", "2", "]", "\n", "if", "args", ".", "cuda", ":", "\n", "            ", "xb", "=", "xb", ".", "cuda", "(", ")", "\n", "", "output", "=", "model", "(", "xb", ",", "t", ")", ".", "data", ".", "cpu", "(", ")", "\n", "\n", "predict_sumrate", "=", "SumRateLoss", "(", "\n", "xb", ".", "cpu", "(", ")", ",", "output", ",", "args", ".", "noise", ",", "persample", "=", "True", ")", "\n", "predict_mse", "=", "torch", ".", "sum", "(", "(", "yb", ".", "cpu", "(", ")", "-", "output", ")", "**", "2", ",", "1", ")", "\n", "label_sumrate", "=", "SumRateLoss", "(", "\n", "xb", ".", "cpu", "(", ")", ",", "yb", ".", "cpu", "(", ")", ",", "args", ".", "noise", ",", "persample", "=", "True", ")", "\n", "ratio", "=", "torch", ".", "div", "(", "predict_sumrate", ",", "label_sumrate", ")", "\n", "if", "i", "==", "0", ":", "\n", "            ", "ratio_per_sample", "=", "ratio", "\n", "MSE_per_sample", "=", "predict_mse", "\n", "SUM_per_sample", "=", "predict_sumrate", "\n", "", "else", ":", "\n", "            ", "ratio_per_sample", "=", "torch", ".", "cat", "(", "(", "ratio_per_sample", ",", "ratio", ")", ",", "0", ")", "\n", "MSE_per_sample", "=", "torch", ".", "cat", "(", "(", "MSE_per_sample", ",", "predict_mse", ")", ",", "0", ")", "\n", "SUM_per_sample", "=", "torch", ".", "cat", "(", "(", "SUM_per_sample", ",", "predict_sumrate", ")", ",", "0", ")", "\n", "", "", "return", "ratio_per_sample", ",", "MSE_per_sample", ",", "-", "SUM_per_sample", "\n", "\n"]], "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.None.generate_data.load_datasets": [[27, 33], ["torch.load", "[].size", "[].size", "print", "len"], "function", ["None"], ["def", "load_datasets", "(", "args", ")", ":", "\n", "    ", "d_tr", ",", "d_te", ",", "args", "=", "torch", ".", "load", "(", "args", ".", "data_file", ")", "\n", "n_inputs", "=", "d_tr", "[", "0", "]", "[", "1", "]", ".", "size", "(", "1", ")", "\n", "n_outputs", "=", "d_tr", "[", "0", "]", "[", "2", "]", ".", "size", "(", "1", ")", "\n", "print", "(", "args", ")", "\n", "return", "d_tr", ",", "d_te", ",", "n_inputs", ",", "n_outputs", ",", "len", "(", "d_tr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.common.MLP.__init__": [[17, 29], ["torch.Module.__init__", "range", "torch.Sequential", "torch.Sequential", "common.MLP.net.apply", "len", "layers.append", "layers.append", "layers.append", "layers.append", "len", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.reservoir_sampling.Net.__init__"], ["    ", "def", "__init__", "(", "self", ",", "sizes", ")", ":", "\n", "        ", "super", "(", "MLP", ",", "self", ")", ".", "__init__", "(", ")", "\n", "layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "sizes", ")", "-", "1", ")", ":", "\n", "            ", "if", "i", "<", "(", "len", "(", "sizes", ")", "-", "2", ")", ":", "\n", "                ", "layers", ".", "append", "(", "nn", ".", "Linear", "(", "sizes", "[", "i", "]", ",", "sizes", "[", "i", "+", "1", "]", ")", ")", "\n", "layers", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "", "else", ":", "\n", "                ", "layers", ".", "append", "(", "nn", ".", "Linear", "(", "sizes", "[", "i", "]", ",", "sizes", "[", "i", "+", "1", "]", ")", ")", "\n", "layers", ".", "append", "(", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "", "", "self", ".", "net", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "self", ".", "net", ".", "apply", "(", "Xavier", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.common.MLP.forward": [[30, 32], ["common.MLP.net"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "net", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.common.Xavier": [[6, 14], ["m.weight.data.uniform_", "m.weight.data.size", "m.weight.data.size", "math.sqrt", "math.sqrt", "m.bias.data.fill_"], "function", ["None"], ["def", "Xavier", "(", "m", ")", ":", "\n", "    ", "if", "m", ".", "__class__", ".", "__name__", "==", "'Linear'", ":", "\n", "        ", "fan_in", ",", "fan_out", "=", "m", ".", "weight", ".", "data", ".", "size", "(", "1", ")", ",", "m", ".", "weight", ".", "data", ".", "size", "(", "0", ")", "\n", "std", "=", "1.0", "*", "math", ".", "sqrt", "(", "2.0", "/", "(", "fan_in", "+", "fan_out", ")", ")", "\n", "a", "=", "math", ".", "sqrt", "(", "3.0", ")", "*", "std", "\n", "m", ".", "weight", ".", "data", ".", "uniform_", "(", "-", "a", ",", "a", ")", "\n", "if", "m", ".", "bias", "is", "not", "None", ":", "\n", "            ", "m", ".", "bias", ".", "data", ".", "fill_", "(", "0.0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.common.SumRateLoss": [[34, 51], ["torch.reshape", "torch.reshape", "torch.square", "torch.square", "torch.reshape", "torch.reshape", "torch.mul", "torch.mul", "torch.eye", "torch.eye", "torch.sum", "torch.sum", "torch.log2", "torch.log2", "torch.sum", "torch.sum", "torch.round", "torch.round", "torch.mul", "torch.mul", "torch.sum", "torch.sum", "torch.mul", "torch.mul", "torch.div", "torch.div", "torch.mean", "torch.mean"], "function", ["None"], ["", "", "def", "SumRateLoss", "(", "data", ",", "output", ",", "noise", ",", "K", "=", "10", ",", "binary", "=", "False", ",", "persample", "=", "False", ")", ":", "\n", "    ", "bs", "=", "data", ".", "shape", "[", "0", "]", "\n", "H", "=", "torch", ".", "reshape", "(", "data", ",", "(", "bs", ",", "K", ",", "K", ")", ")", "\n", "H2", "=", "torch", ".", "square", "(", "H", ")", "\n", "if", "binary", ":", "\n", "        ", "output", "=", "torch", ".", "round", "(", "output", ")", "\n", "", "pv", "=", "torch", ".", "reshape", "(", "output", ",", "(", "bs", ",", "K", ",", "1", ")", ")", "\n", "rx_power", "=", "torch", ".", "mul", "(", "H2", ",", "pv", ")", "\n", "mask", "=", "torch", ".", "eye", "(", "K", ")", "\n", "valid_rx_power", "=", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "rx_power", ",", "mask", ")", ",", "dim", "=", "1", ")", "\n", "interference", "=", "torch", ".", "sum", "(", "torch", ".", "mul", "(", "rx_power", ",", "1", "-", "mask", ")", ",", "axis", "=", "1", ")", "+", "noise", "\n", "pyrate", "=", "torch", ".", "log2", "(", "1", "+", "torch", ".", "div", "(", "valid_rx_power", ",", "interference", ")", ")", "\n", "pyrate", "=", "torch", ".", "sum", "(", "pyrate", ",", "dim", "=", "1", ")", "\n", "if", "persample", ":", "\n", "        ", "return", "-", "pyrate", "\n", "", "else", ":", "\n", "        ", "return", "-", "torch", ".", "mean", "(", "pyrate", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.common.weighted_mse_loss": [[53, 56], ["torch.sum", "torch.sum", "torch.sum", "torch.sum"], "function", ["None"], ["", "", "def", "weighted_mse_loss", "(", "input", ",", "target", ",", "weight", ")", ":", "\n", "    ", "MSE_per_sample", "=", "torch", ".", "sum", "(", "(", "input", "-", "target", ")", "**", "2", ",", "1", ")", "\n", "return", "torch", ".", "sum", "(", "weight", "*", "MSE_per_sample", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.common.weighted_sumrate_loss": [[58, 62], ["common.SumRateLoss", "torch.sum", "torch.sum"], "function", ["home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.common.SumRateLoss"], ["", "def", "weighted_sumrate_loss", "(", "data", ",", "predict", ",", "weight", ",", "noise_power", ")", ":", "\n", "    ", "SumRate_per_sample", "=", "SumRateLoss", "(", "\n", "data", ",", "predict", ",", "noise_power", ",", "persample", "=", "True", ")", "\n", "return", "torch", ".", "sum", "(", "weight", "*", "SumRate_per_sample", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.common.weighted_ratio_loss": [[64, 72], ["common.SumRateLoss", "common.SumRateLoss", "torch.div", "torch.div", "torch.sum", "torch.sum"], "function", ["home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.common.SumRateLoss", "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.common.SumRateLoss"], ["", "def", "weighted_ratio_loss", "(", "data", ",", "predict", ",", "target", ",", "noise_power", ",", "weight", "=", "None", ")", ":", "\n", "    ", "predict_sumrate", "=", "SumRateLoss", "(", "data", ",", "predict", ",", "noise_power", ",", "persample", "=", "True", ")", "\n", "label_sumrate", "=", "SumRateLoss", "(", "data", ",", "target", ",", "noise_power", ",", "persample", "=", "True", ")", "\n", "ratio", "=", "torch", ".", "div", "(", "predict_sumrate", ",", "label_sumrate", ")", "\n", "if", "weight", "is", "None", ":", "\n", "        ", "return", "-", "ratio", "\n", "", "else", ":", "\n", "        ", "return", "-", "torch", ".", "sum", "(", "weight", "*", "ratio", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.common.mse_per_sample": [[74, 76], ["torch.sum", "torch.sum"], "function", ["None"], ["", "", "def", "mse_per_sample", "(", "data", ",", "predict", ",", "target", ",", "noise_power", "=", "None", ")", ":", "\n", "    ", "return", "torch", ".", "sum", "(", "(", "predict", "-", "target", ")", "**", "2", ",", "1", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.minmax.Net.__init__": [[8, 43], ["super().__init__", "common.MLP", "torch.optim.RMSprop", "int", "minmax.Net.parameters", "args.hidden_layers.split", "AssertionError"], "methods", ["home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.reservoir_sampling.Net.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "n_inputs", ",", "\n", "n_outputs", ",", "\n", "n_tasks", ",", "\n", "args", ")", ":", "\n", "        ", "super", "(", "Net", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# setup network", "\n", "hidden", "=", "[", "int", "(", "x", ")", "for", "x", "in", "args", ".", "hidden_layers", ".", "split", "(", "\"-\"", ")", "]", "\n", "self", ".", "net", "=", "MLP", "(", "[", "n_inputs", "]", "+", "hidden", "+", "[", "n_outputs", "]", ")", "\n", "self", ".", "nc_per_task", "=", "n_outputs", "\n", "self", ".", "n_outputs", "=", "n_outputs", "\n", "\n", "# setup optimizer", "\n", "self", ".", "opt", "=", "torch", ".", "optim", ".", "RMSprop", "(", "self", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ")", "\n", "self", ".", "n_iter", "=", "args", ".", "n_iter", "\n", "self", ".", "mini_batch_size", "=", "args", ".", "mini_batch_size", "\n", "\n", "# setup losses", "\n", "self", ".", "noise", "=", "args", ".", "noise", "\n", "self", ".", "loss_wmse", "=", "weighted_mse_loss", "\n", "self", ".", "loss_wsumrate", "=", "weighted_sumrate_loss", "\n", "if", "args", ".", "eval_metric", "==", "'mse'", ":", "\n", "            ", "self", ".", "loss_dual", "=", "mse_per_sample", "\n", "", "elif", "args", ".", "eval_metric", "==", "'ratio'", ":", "\n", "            ", "self", ".", "loss_dual", "=", "weighted_ratio_loss", "\n", "", "else", ":", "\n", "            ", "raise", "AssertionError", "(", "'error'", ")", "\n", "\n", "# allocate buffer", "\n", "", "self", ".", "M", "=", "[", "]", "\n", "self", ".", "age", "=", "0", "\n", "self", ".", "memories", "=", "args", ".", "n_memories", "\n", "self", ".", "dual_stepsize", "=", "args", ".", "dual_stepsize", "\n", "self", ".", "weight_ini", "=", "args", ".", "weight_ini", "\n", "\n"]], "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.minmax.Net.forward": [[44, 47], ["minmax.Net.net"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "t", ")", ":", "\n", "        ", "output", "=", "self", ".", "net", "(", "x", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.minmax.Net.get_batch": [[48, 67], ["torch.cat", "torch.cat", "torch.cat.size", "torch.ones", "x.size", "torch.rand", "torch.ones"], "methods", ["None"], ["", "def", "get_batch", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "if", "self", ".", "M", ":", "\n", "# combine buffer with current samples", "\n", "            ", "set_x", ",", "set_y", "=", "self", ".", "M", "\n", "set_x", "=", "torch", ".", "cat", "(", "[", "set_x", ",", "x", "]", ",", "0", ")", "\n", "set_y", "=", "torch", ".", "cat", "(", "[", "set_y", ",", "y", "]", ",", "0", ")", "\n", "", "else", ":", "\n", "            ", "set_x", ",", "set_y", "=", "x", ",", "y", "\n", "", "batch_size", "=", "set_x", ".", "size", "(", ")", "[", "0", "]", "\n", "\n", "if", "self", ".", "weight_ini", "==", "'pra'", ":", "\n", "            ", "set_w", "=", "torch", ".", "ones", "(", "batch_size", ")", "\n", "set_w", "[", "0", ":", "self", ".", "memories", "]", "=", "self", ".", "age", "/", "self", ".", "memories", "\n", "self", ".", "age", "+=", "x", ".", "size", "(", ")", "[", "0", "]", "\n", "", "elif", "self", ".", "weight_ini", "==", "'mean'", ":", "\n", "            ", "set_w", "=", "torch", ".", "ones", "(", "batch_size", ")", "/", "batch_size", "\n", "", "else", ":", "\n", "            ", "set_w", "=", "torch", ".", "rand", "(", "batch_size", ")", "\n", "", "return", "set_x", ",", "set_y", ",", "set_w", "\n", "\n"]], "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.minmax.Net.MSE_per_sample": [[68, 70], ["torch.sum"], "methods", ["None"], ["", "def", "MSE_per_sample", "(", "self", ",", "input", ",", "target", ")", ":", "\n", "        ", "return", "torch", ".", "sum", "(", "(", "input", "-", "target", ")", "**", "2", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.minmax.Net.proj": [[71, 82], ["v.detach().numpy.detach().numpy.detach().numpy", "numpy.maximum", "torch.from_numpy", "numpy.sort", "numpy.cumsum", "numpy.arange", "float", "v.detach().numpy.detach().numpy.detach"], "methods", ["None"], ["", "def", "proj", "(", "self", ",", "v", ",", "z", "=", "1", ")", ":", "\n", "        ", "v", "=", "v", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "n_features", "=", "v", ".", "shape", "[", "0", "]", "\n", "u", "=", "np", ".", "sort", "(", "v", ")", "[", ":", ":", "-", "1", "]", "\n", "cssv", "=", "np", ".", "cumsum", "(", "u", ")", "-", "z", "\n", "ind", "=", "np", ".", "arange", "(", "n_features", ")", "+", "1", "\n", "cond", "=", "u", "-", "cssv", "/", "ind", ">", "0", "\n", "rho", "=", "ind", "[", "cond", "]", "[", "-", "1", "]", "\n", "theta", "=", "cssv", "[", "cond", "]", "[", "-", "1", "]", "/", "float", "(", "rho", ")", "\n", "w", "=", "np", ".", "maximum", "(", "v", "-", "theta", ",", "0", ")", "\n", "return", "torch", ".", "from_numpy", "(", "w", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.minmax.Net.observe": [[83, 121], ["minmax.Net.train", "minmax.Net.get_batch", "range", "torch.sort", "print", "torch.randperm", "range", "minmax.Net.proj", "len", "torch.sum().item", "minmax.Net.zero_grad", "minmax.Net.backward", "minmax.Net.opt.step", "set_x.size", "x.size", "minmax.Net.loss_wmse", "minmax.Net.loss_dual", "torch.sum", "minmax.Net.forward", "minmax.Net.loss_wsumrate", "minmax.Net.forward", "minmax.Net.forward"], "methods", ["home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.reservoir_sampling.Net.get_batch", "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.minmax.Net.proj", "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.reservoir_sampling.Net.forward", "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.reservoir_sampling.Net.forward", "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.reservoir_sampling.Net.forward"], ["", "def", "observe", "(", "self", ",", "x", ",", "t", ",", "y", ",", "loss_type", "=", "'MSE'", ",", "x_te", "=", "None", ",", "x_tr", "=", "None", ")", ":", "\n", "        ", "self", ".", "train", "(", ")", "\n", "set_x", ",", "set_y", ",", "set_w", "=", "self", ".", "get_batch", "(", "x", ",", "y", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "self", ".", "n_iter", ")", ":", "\n", "            ", "permutation", "=", "torch", ".", "randperm", "(", "set_x", ".", "size", "(", ")", "[", "0", "]", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "x", ".", "size", "(", ")", "[", "0", "]", ",", "self", ".", "mini_batch_size", ")", ":", "\n", "# primal", "\n", "                ", "self", ".", "zero_grad", "(", ")", "\n", "indices", "=", "permutation", "[", "i", ":", "i", "+", "self", ".", "mini_batch_size", "]", "\n", "batch_x", "=", "set_x", "[", "indices", "]", "\n", "batch_y", "=", "set_y", "[", "indices", "]", "\n", "batch_w", "=", "set_w", "[", "indices", "]", "\n", "\n", "if", "loss_type", "==", "'MSE'", ":", "\n", "                    ", "ptloss", "=", "self", ".", "loss_wmse", "(", "\n", "self", ".", "forward", "(", "batch_x", ",", "t", ")", ",", "batch_y", ",", "batch_w", ")", "\n", "", "elif", "loss_type", "==", "'SUMRATE'", ":", "\n", "                    ", "ptloss", "=", "self", ".", "loss_wsumrate", "(", "\n", "batch_x", ",", "self", ".", "forward", "(", "batch_x", ",", "t", ")", ",", "batch_w", ",", "self", ".", "noise", ")", "\n", "", "ptloss", ".", "backward", "(", ")", "\n", "self", ".", "opt", ".", "step", "(", ")", "\n", "\n", "# dual", "\n", "", "set_w", "=", "set_w", "+", "self", ".", "dual_stepsize", "*", "self", ".", "loss_dual", "(", "set_x", ",", "self", ".", "forward", "(", "\n", "set_x", ",", "t", ")", ",", "set_y", ",", "self", ".", "noise", ")", "\n", "set_w", "=", "self", ".", "proj", "(", "set_w", ")", "\n", "\n", "", "_", ",", "indices", "=", "torch", ".", "sort", "(", "set_w", ",", "descending", "=", "True", ")", "\n", "if", "len", "(", "set_w", ")", "<=", "self", ".", "memories", ":", "\n", "            ", "self", ".", "M", "=", "(", "set_x", ",", "set_y", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "M", "=", "(", "set_x", "[", "indices", "[", "0", ":", "self", ".", "memories", "]", "]", ",", "\n", "set_y", "[", "indices", "[", "0", ":", "self", ".", "memories", "]", "]", ")", "\n", "\n", "", "print", "(", "torch", ".", "sum", "(", "indices", "[", "0", ":", "self", ".", "memories", "]", "<", "self", ".", "memories", ")", ".", "item", "(", "\n", ")", ",", "' out of '", ",", "self", ".", "memories", ",", "' samples in buffer are keeped'", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.composition.Net.__init__": [[7, 36], ["super().__init__", "common.MLP", "int", "args.hidden_layers.split"], "methods", ["home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.reservoir_sampling.Net.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "n_inputs", ",", "\n", "n_outputs", ",", "\n", "n_tasks", ",", "\n", "args", ")", ":", "\n", "        ", "super", "(", "Net", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# setup network", "\n", "hidden", "=", "[", "int", "(", "x", ")", "for", "x", "in", "args", ".", "hidden_layers", ".", "split", "(", "\"-\"", ")", "]", "\n", "self", ".", "net", "=", "MLP", "(", "[", "n_inputs", "]", "+", "hidden", "+", "[", "n_outputs", "]", ")", "\n", "self", ".", "nc_per_task", "=", "n_outputs", "\n", "self", ".", "n_outputs", "=", "n_outputs", "\n", "\n", "# setup optimizer", "\n", "self", ".", "lr", "=", "args", ".", "lr", "\n", "self", ".", "n_iter", "=", "args", ".", "n_iter", "\n", "self", ".", "mini_batch_size", "=", "args", ".", "mini_batch_size", "\n", "\n", "# setup losses", "\n", "self", ".", "noise", "=", "args", ".", "noise", "\n", "self", ".", "loss_wmse", "=", "weighted_mse_loss", "\n", "self", ".", "loss_dual", "=", "weighted_ratio_loss", "\n", "\n", "# allocate buffer", "\n", "self", ".", "M", "=", "[", "]", "\n", "self", ".", "age", "=", "0", "\n", "self", ".", "memories", "=", "args", ".", "n_memories", "\n", "\n", "self", ".", "set_index", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.composition.Net.forward": [[37, 40], ["composition.Net.net"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "t", ")", ":", "\n", "        ", "output", "=", "self", ".", "net", "(", "x", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.composition.Net.get_batch": [[41, 50], ["torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "get_batch", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "if", "self", ".", "M", ":", "\n", "# combine buffer with current samples", "\n", "            ", "set_x", ",", "set_y", "=", "self", ".", "M", "\n", "set_x", "=", "torch", ".", "cat", "(", "[", "set_x", ",", "x", "]", ",", "0", ")", "\n", "set_y", "=", "torch", ".", "cat", "(", "[", "set_y", ",", "y", "]", ",", "0", ")", "\n", "", "else", ":", "\n", "            ", "set_x", ",", "set_y", "=", "x", ",", "y", "\n", "", "return", "set_x", ",", "set_y", "\n", "\n"]], "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.composition.Net.MSE_per_sample": [[51, 53], ["torch.sum"], "methods", ["None"], ["", "def", "MSE_per_sample", "(", "self", ",", "input", ",", "target", ")", ":", "\n", "        ", "return", "torch", ".", "sum", "(", "(", "input", "-", "target", ")", "**", "2", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.composition.Net.observe": [[54, 104], ["composition.Net.train", "composition.Net.get_batch", "range", "torch.exp", "torch.sort", "torch.sort", "torch.cat", "torch.randperm", "torch.randperm", "range", "composition.Net.net.parameters", "composition.Net.zero_grad", "torch.sum", "torch.sum.backward", "composition.Net.zero_grad", "torch.exp", "composition.Net.loss_wmse", "composition.Net.zero_grad", "f2_loss.backward", "composition.Net.loss_dual", "set_x.size", "set_x.size", "set_x.size", "x.size", "torch.exp", "torch.no_grad", "composition.Net.forward", "torch.sum.detach", "torch.no_grad", "torch.no_grad", "zip", "composition.Net.forward", "composition.Net.loss_dual", "composition.Net.net.parameters", "grads_squared_new.append", "round", "round", "composition.Net.loss_dual", "composition.Net.net.parameters", "composition.Net.forward", "composition.Net.net.parameters", "composition.Net.forward", "torch.square", "torch.sqrt"], "methods", ["home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.reservoir_sampling.Net.get_batch", "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.reservoir_sampling.Net.forward", "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.reservoir_sampling.Net.forward", "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.reservoir_sampling.Net.forward", "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.reservoir_sampling.Net.forward"], ["", "def", "observe", "(", "self", ",", "x", ",", "t", ",", "y", ",", "loss_type", "=", "'MSE'", ",", "x_te", "=", "None", ",", "x_tr", "=", "None", ",", "scale", "=", "1.0", ")", ":", "\n", "        ", "self", ".", "train", "(", ")", "\n", "set_x", ",", "set_y", "=", "self", ".", "get_batch", "(", "x", ",", "y", ")", "\n", "grads_squared", "=", "[", "0.0", "for", "_", "in", "self", ".", "net", ".", "parameters", "(", ")", "]", "\n", "self", ".", "age", "+=", "1", "\n", "for", "epoch", "in", "range", "(", "self", ".", "n_iter", ")", ":", "\n", "            ", "permutation1", "=", "torch", ".", "randperm", "(", "set_x", ".", "size", "(", ")", "[", "0", "]", ")", "\n", "permutation2", "=", "torch", ".", "randperm", "(", "set_x", ".", "size", "(", ")", "[", "0", "]", ")", "\n", "weight_scale", "=", "set_x", ".", "size", "(", ")", "[", "0", "]", "/", "self", ".", "mini_batch_size", "\n", "for", "i", "in", "range", "(", "0", ",", "x", ".", "size", "(", ")", "[", "0", "]", ",", "self", ".", "mini_batch_size", ")", ":", "\n", "# primal", "\n", "                ", "self", ".", "zero_grad", "(", ")", "\n", "indices1", "=", "permutation1", "[", "i", ":", "i", "+", "self", ".", "mini_batch_size", "]", "\n", "batch_x1", "=", "set_x", "[", "indices1", "]", "\n", "batch_y1", "=", "set_y", "[", "indices1", "]", "\n", "\n", "g_loss", "=", "torch", ".", "sum", "(", "torch", ".", "exp", "(", "scale", "*", "self", ".", "loss_dual", "(", "batch_x1", ",", "self", ".", "forward", "(", "batch_x1", ",", "t", ")", ",", "batch_y1", ",", "self", ".", "noise", ")", ")", ")", "\n", "g_loss", "=", "g_loss", "*", "weight_scale", "\n", "g_loss", ".", "backward", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "g_grad", "=", "[", "param", ".", "grad", "for", "param", "in", "self", ".", "net", ".", "parameters", "(", ")", "]", "\n", "\n", "", "self", ".", "zero_grad", "(", ")", "\n", "indices2", "=", "permutation2", "[", "i", ":", "i", "+", "self", ".", "mini_batch_size", "]", "\n", "batch_x2", "=", "set_x", "[", "indices2", "]", "\n", "batch_y2", "=", "set_y", "[", "indices2", "]", "\n", "temp_w", "=", "torch", ".", "exp", "(", "scale", "*", "self", ".", "loss_dual", "(", "batch_x2", ",", "self", ".", "forward", "(", "batch_x2", ",", "t", ")", ",", "batch_y2", ",", "self", ".", "noise", ")", ")", "\n", "temp_numerator", "=", "self", ".", "loss_wmse", "(", "self", ".", "forward", "(", "batch_x2", ",", "t", ")", ",", "batch_y2", ",", "temp_w", ")", "\n", "f1_grad", "=", "-", "temp_numerator", "/", "g_loss", "**", "2", "\n", "\n", "self", ".", "zero_grad", "(", ")", "\n", "f2_loss", "=", "temp_numerator", "/", "g_loss", ".", "detach", "(", ")", "\n", "f2_loss", ".", "backward", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "f2_grad", "=", "[", "param", ".", "grad", "for", "param", "in", "self", ".", "net", ".", "parameters", "(", ")", "]", "\n", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "grads_squared_new", "=", "[", "]", "\n", "for", "param", ",", "g_g", ",", "f2_g", ",", "square_g", "in", "zip", "(", "self", ".", "net", ".", "parameters", "(", ")", ",", "g_grad", ",", "f2_grad", ",", "grads_squared", ")", ":", "\n", "                        ", "grad_current", "=", "g_g", "*", "f1_grad", "+", "f2_g", "\n", "square_g", "=", "0.99", "*", "square_g", "+", "0.01", "*", "torch", ".", "square", "(", "grad_current", ")", "\n", "param", "-=", "self", ".", "lr", "/", "(", "torch", ".", "sqrt", "(", "square_g", ")", "+", "1e-8", ")", "*", "grad_current", "\n", "grads_squared_new", ".", "append", "(", "square_g", ")", "\n", "", "grads_squared", "=", "grads_squared_new", "\n", "\n", "", "", "", "set_w", "=", "torch", ".", "exp", "(", "scale", "*", "self", ".", "loss_dual", "(", "set_x", ",", "self", ".", "forward", "(", "set_x", ",", "t", ")", ",", "set_y", ",", "self", ".", "noise", ")", ")", "\n", "_", ",", "indices_first", "=", "torch", ".", "sort", "(", "set_w", "[", "0", ":", "self", ".", "memories", "]", ",", "descending", "=", "True", ")", "\n", "_", ",", "indices_second", "=", "torch", ".", "sort", "(", "set_w", "[", "self", ".", "memories", ":", "]", ",", "descending", "=", "True", ")", "\n", "indices_combine", "=", "torch", ".", "cat", "(", "(", "indices_first", "[", "0", ":", "round", "(", "self", ".", "memories", "*", "(", "1.0", "-", "1.0", "/", "(", "self", ".", "age", "+", "1", ")", ")", ")", "]", ",", "indices_second", "[", "0", ":", "round", "(", "self", ".", "memories", "/", "(", "self", ".", "age", "+", "1", ")", ")", "]", ")", ")", "\n", "self", ".", "M", "=", "(", "set_x", "[", "indices_combine", "]", ",", "set_y", "[", "indices_combine", "]", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.single.Net.__init__": [[7, 29], ["super().__init__", "common.MLP", "torch.optim.RMSprop", "torch.nn.MSELoss", "int", "single.Net.parameters", "args.hidden_layers.split"], "methods", ["home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.reservoir_sampling.Net.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "n_inputs", ",", "\n", "n_outputs", ",", "\n", "n_tasks", ",", "\n", "args", ")", ":", "\n", "        ", "super", "(", "Net", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# setup network", "\n", "hidden", "=", "[", "int", "(", "x", ")", "for", "x", "in", "args", ".", "hidden_layers", ".", "split", "(", "\"-\"", ")", "]", "\n", "self", ".", "net", "=", "MLP", "(", "[", "n_inputs", "]", "+", "hidden", "+", "[", "n_outputs", "]", ")", "\n", "self", ".", "nc_per_task", "=", "n_outputs", "\n", "self", ".", "n_outputs", "=", "n_outputs", "\n", "\n", "# setup optimizer", "\n", "self", ".", "opt", "=", "torch", ".", "optim", ".", "RMSprop", "(", "self", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ")", "\n", "self", ".", "n_iter", "=", "args", ".", "n_iter", "\n", "self", ".", "mini_batch_size", "=", "args", ".", "mini_batch_size", "\n", "\n", "# setup losses", "\n", "self", ".", "noise", "=", "args", ".", "noise", "\n", "self", ".", "loss", "=", "torch", ".", "nn", ".", "MSELoss", "(", ")", "\n", "self", ".", "loss_sumrate", "=", "SumRateLoss", "\n", "\n"]], "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.single.Net.forward": [[30, 33], ["single.Net.net"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "t", ")", ":", "\n", "        ", "output", "=", "self", ".", "net", "(", "x", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.single.Net.observe": [[34, 53], ["single.Net.train", "range", "torch.randperm", "range", "time.time", "single.Net.zero_grad", "single.Net.backward", "single.Net.opt.step", "time.time", "x.size", "x.size", "single.Net.loss", "single.Net.loss_sumrate", "single.Net.forward", "single.Net.forward"], "methods", ["home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.reservoir_sampling.Net.forward", "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.reservoir_sampling.Net.forward"], ["", "def", "observe", "(", "self", ",", "x", ",", "t", ",", "y", ",", "loss_type", "=", "'MSE'", ",", "x_te", "=", "None", ",", "x_tr", "=", "None", ")", ":", "\n", "        ", "self", ".", "train", "(", ")", "\n", "time_spent", "=", "0", "\n", "for", "epoch", "in", "range", "(", "self", ".", "n_iter", ")", ":", "\n", "            ", "permutation", "=", "torch", ".", "randperm", "(", "x", ".", "size", "(", ")", "[", "0", "]", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "x", ".", "size", "(", ")", "[", "0", "]", ",", "self", ".", "mini_batch_size", ")", ":", "\n", "                ", "time_start", "=", "time", ".", "time", "(", ")", "\n", "self", ".", "zero_grad", "(", ")", "\n", "indices", "=", "permutation", "[", "i", ":", "i", "+", "self", ".", "mini_batch_size", "]", "\n", "batch_x", ",", "batch_y", "=", "x", "[", "indices", "]", ",", "y", "[", "indices", "]", "\n", "if", "loss_type", "==", "'MSE'", ":", "\n", "                    ", "ptloss", "=", "self", ".", "loss", "(", "self", ".", "forward", "(", "batch_x", ",", "t", ")", ",", "batch_y", ")", "\n", "", "else", ":", "\n", "                    ", "ptloss", "=", "self", ".", "loss_sumrate", "(", "\n", "batch_x", ",", "self", ".", "forward", "(", "batch_x", ",", "t", ")", ",", "self", ".", "noise", ")", "\n", "", "ptloss", ".", "backward", "(", ")", "\n", "self", ".", "opt", ".", "step", "(", ")", "\n", "time_end", "=", "time", ".", "time", "(", ")", "\n", "time_spent", "=", "time_spent", "+", "time_end", "-", "time_start", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.reservoir_sampling.Net.__init__": [[7, 34], ["super().__init__", "common.MLP", "torch.optim.RMSprop", "torch.nn.MSELoss", "int", "reservoir_sampling.Net.parameters", "args.hidden_layers.split"], "methods", ["home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.reservoir_sampling.Net.__init__"], ["    ", "def", "__init__", "(", "self", ",", "\n", "n_inputs", ",", "\n", "n_outputs", ",", "\n", "n_tasks", ",", "\n", "args", ")", ":", "\n", "        ", "super", "(", "Net", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# setup network", "\n", "hidden", "=", "[", "int", "(", "x", ")", "for", "x", "in", "args", ".", "hidden_layers", ".", "split", "(", "\"-\"", ")", "]", "\n", "self", ".", "net", "=", "MLP", "(", "[", "n_inputs", "]", "+", "hidden", "+", "[", "n_outputs", "]", ")", "\n", "self", ".", "nc_per_task", "=", "n_outputs", "\n", "self", ".", "n_outputs", "=", "n_outputs", "\n", "\n", "# setup optimizer", "\n", "self", ".", "opt", "=", "torch", ".", "optim", ".", "RMSprop", "(", "self", ".", "parameters", "(", ")", ",", "lr", "=", "args", ".", "lr", ")", "\n", "self", ".", "n_iter", "=", "args", ".", "n_iter", "\n", "self", ".", "mini_batch_size", "=", "args", ".", "mini_batch_size", "\n", "\n", "# setup losses", "\n", "self", ".", "noise", "=", "args", ".", "noise", "\n", "self", ".", "loss", "=", "torch", ".", "nn", ".", "MSELoss", "(", ")", "\n", "self", ".", "loss_sumrate", "=", "SumRateLoss", "\n", "\n", "# allocate buffer", "\n", "self", ".", "M", "=", "[", "]", "\n", "self", ".", "age", "=", "0", "\n", "self", ".", "memories", "=", "args", ".", "n_memories", "\n", "\n"]], "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.reservoir_sampling.Net.forward": [[35, 38], ["reservoir_sampling.Net.net"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "t", ")", ":", "\n", "        ", "output", "=", "self", ".", "net", "(", "x", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.reservoir_sampling.Net.get_batch": [[39, 49], ["torch.stack", "torch.stack", "torch.cat", "torch.cat", "range", "range", "len", "len"], "methods", ["None"], ["", "def", "get_batch", "(", "self", ",", "x", ",", "y", ")", ":", "\n", "        ", "if", "self", ".", "M", ":", "\n", "# combine buffer with current samples", "\n", "            ", "set_x", "=", "torch", ".", "stack", "(", "[", "self", ".", "M", "[", "k", "]", "[", "0", "]", "for", "k", "in", "range", "(", "len", "(", "self", ".", "M", ")", ")", "]", ",", "0", ")", "\n", "set_y", "=", "torch", ".", "stack", "(", "[", "self", ".", "M", "[", "k", "]", "[", "1", "]", "for", "k", "in", "range", "(", "len", "(", "self", ".", "M", ")", ")", "]", ",", "0", ")", "\n", "set_x", "=", "torch", ".", "cat", "(", "[", "set_x", ",", "x", "]", ",", "0", ")", "\n", "set_y", "=", "torch", ".", "cat", "(", "[", "set_y", ",", "y", "]", ",", "0", ")", "\n", "return", "set_x", ",", "set_y", "\n", "", "else", ":", "\n", "            ", "return", "x", ",", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.reservoir_sampling.Net.observe": [[50, 77], ["reservoir_sampling.Net.train", "reservoir_sampling.Net.get_batch", "range", "range", "torch.randperm", "range", "reservoir_sampling.Net.zero_grad", "reservoir_sampling.Net.backward", "reservoir_sampling.Net.opt.step", "x.size", "len", "reservoir_sampling.Net.M.append", "random.randint", "set_x.size", "x.size", "reservoir_sampling.Net.loss", "reservoir_sampling.Net.loss_sumrate", "reservoir_sampling.Net.forward", "reservoir_sampling.Net.forward"], "methods", ["home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.reservoir_sampling.Net.get_batch", "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.reservoir_sampling.Net.forward", "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.model.reservoir_sampling.Net.forward"], ["", "", "def", "observe", "(", "self", ",", "x", ",", "t", ",", "y", ",", "loss_type", "=", "'MSE'", ",", "x_tr", "=", "None", ",", "x_te", "=", "None", ")", ":", "\n", "        ", "self", ".", "train", "(", ")", "\n", "set_x", ",", "set_y", "=", "self", ".", "get_batch", "(", "x", ",", "y", ")", "\n", "for", "epoch", "in", "range", "(", "self", ".", "n_iter", ")", ":", "\n", "            ", "permutation", "=", "torch", ".", "randperm", "(", "set_x", ".", "size", "(", ")", "[", "0", "]", ")", "\n", "for", "i", "in", "range", "(", "0", ",", "x", ".", "size", "(", ")", "[", "0", "]", ",", "self", ".", "mini_batch_size", ")", ":", "\n", "                ", "self", ".", "zero_grad", "(", ")", "\n", "indices", "=", "permutation", "[", "i", ":", "i", "+", "self", ".", "mini_batch_size", "]", "\n", "batch_x", ",", "batch_y", "=", "set_x", "[", "indices", "]", ",", "set_y", "[", "indices", "]", "\n", "if", "loss_type", "==", "'MSE'", ":", "\n", "                    ", "ptloss", "=", "self", ".", "loss", "(", "self", ".", "forward", "(", "batch_x", ",", "t", ")", ",", "batch_y", ")", "\n", "", "else", ":", "\n", "                    ", "ptloss", "=", "self", ".", "loss_sumrate", "(", "\n", "batch_x", ",", "self", ".", "forward", "(", "batch_x", ",", "t", ")", ",", "self", ".", "noise", ")", "\n", "", "ptloss", ".", "backward", "(", ")", "\n", "self", ".", "opt", ".", "step", "(", ")", "\n", "\n", "", "", "for", "i", "in", "range", "(", "0", ",", "x", ".", "size", "(", ")", "[", "0", "]", ")", ":", "\n", "            ", "self", ".", "age", "+=", "1", "\n", "if", "len", "(", "self", ".", "M", ")", "<", "self", ".", "memories", ":", "\n", "# add new samples to the buffer", "\n", "                ", "self", ".", "M", ".", "append", "(", "[", "x", "[", "i", "]", ",", "y", "[", "i", "]", ",", "t", "]", ")", "\n", "", "else", ":", "\n", "# buffer is full", "\n", "                ", "p", "=", "random", ".", "randint", "(", "0", ",", "self", ".", "age", ")", "\n", "if", "p", "<", "self", ".", "memories", ":", "\n", "                    ", "self", ".", "M", "[", "p", "]", "=", "[", "x", "[", "i", "]", ",", "y", "[", "i", "]", ",", "t", "]", "\n", "", "", "", "", "", ""]], "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.data.function_wmmse_powercontrol.WMMSE_sum_rate": [[32, 65], ["numpy.size", "numpy.sqrt", "numpy.zeros", "numpy.zeros", "range", "numpy.zeros", "range", "numpy.square", "range", "range", "math.log2", "sum", "math.log2", "numpy.square", "numpy.square", "min", "max", "numpy.square", "numpy.sqrt", "numpy.square", "numpy.square", "numpy.square"], "function", ["None"], ["def", "WMMSE_sum_rate", "(", "p_int", ",", "H", ",", "Pmax", ",", "var_noise", ")", ":", "\n", "    ", "\"\"\"Functions for WMMSE algorithm\"\"\"", "\n", "K", "=", "np", ".", "size", "(", "p_int", ")", "\n", "vnew", "=", "0", "\n", "b", "=", "np", ".", "sqrt", "(", "p_int", ")", "\n", "f", "=", "np", ".", "zeros", "(", "K", ")", "\n", "w", "=", "np", ".", "zeros", "(", "K", ")", "\n", "for", "i", "in", "range", "(", "K", ")", ":", "\n", "        ", "f", "[", "i", "]", "=", "H", "[", "i", ",", "i", "]", "*", "b", "[", "i", "]", "/", "(", "np", ".", "square", "(", "H", "[", "i", ",", ":", "]", ")", "@", "np", ".", "square", "(", "b", ")", "+", "var_noise", ")", "\n", "w", "[", "i", "]", "=", "1", "/", "(", "1", "-", "f", "[", "i", "]", "*", "b", "[", "i", "]", "*", "H", "[", "i", ",", "i", "]", ")", "\n", "vnew", "=", "vnew", "+", "math", ".", "log2", "(", "w", "[", "i", "]", ")", "\n", "\n", "", "VV", "=", "np", ".", "zeros", "(", "100", ")", "\n", "for", "iter", "in", "range", "(", "100", ")", ":", "\n", "        ", "vold", "=", "vnew", "\n", "for", "i", "in", "range", "(", "K", ")", ":", "\n", "            ", "btmp", "=", "w", "[", "i", "]", "*", "f", "[", "i", "]", "*", "H", "[", "i", ",", "i", "]", "/", "sum", "(", "w", "*", "np", ".", "square", "(", "f", ")", "*", "np", ".", "square", "(", "H", "[", ":", ",", "i", "]", ")", ")", "\n", "b", "[", "i", "]", "=", "min", "(", "btmp", ",", "np", ".", "sqrt", "(", "Pmax", ")", ")", "+", "max", "(", "btmp", ",", "0", ")", "-", "btmp", "\n", "\n", "", "vnew", "=", "0", "\n", "for", "i", "in", "range", "(", "K", ")", ":", "\n", "            ", "f", "[", "i", "]", "=", "H", "[", "i", ",", "i", "]", "*", "b", "[", "i", "]", "/", "(", "(", "np", ".", "square", "(", "H", "[", "i", ",", ":", "]", ")", ")", "@", "(", "np", ".", "square", "(", "b", ")", ")", "+", "var_noise", ")", "\n", "w", "[", "i", "]", "=", "1", "/", "(", "1", "-", "f", "[", "i", "]", "*", "b", "[", "i", "]", "*", "H", "[", "i", ",", "i", "]", ")", "\n", "vnew", "=", "vnew", "+", "math", ".", "log2", "(", "w", "[", "i", "]", ")", "\n", "\n", "", "VV", "[", "iter", "]", "=", "vnew", "\n", "if", "vnew", "-", "vold", "<=", "1e-3", ":", "\n", "            ", "break", "\n", "\n", "", "", "p_opt", "=", "np", ".", "square", "(", "b", ")", "\n", "return", "p_opt", "\n", "", ""]], "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.data.channel.generate_geometry_CSI": [[27, 46], ["numpy.zeros", "numpy.zeros", "numpy.zeros", "range", "numpy.sqrt", "numpy.divide", "numpy.sqrt", "numpy.reshape", "numpy.zeros", "numpy.reshape", "numpy.zeros", "numpy.reshape", "numpy.zeros", "numpy.reshape", "numpy.zeros", "numpy.reshape", "rng.rand", "rng.rand", "numpy.square", "numpy.square", "numpy.square", "numpy.square", "rng.randn", "rng.randn"], "function", ["None"], ["def", "generate_geometry_CSI", "(", "K", ",", "num_H", ",", "rng", ",", "area_length", "=", "10", ",", "alpha", "=", "2", ")", ":", "\n", "    ", "tx_pos", "=", "np", ".", "zeros", "(", "[", "num_H", ",", "K", ",", "2", "]", ")", "\n", "rx_pos", "=", "np", ".", "zeros", "(", "[", "num_H", ",", "K", ",", "2", "]", ")", "\n", "rayleigh_coeff", "=", "np", ".", "zeros", "(", "[", "num_H", ",", "K", ",", "K", "]", ")", "\n", "for", "i", "in", "range", "(", "num_H", ")", ":", "\n", "        ", "tx_pos", "[", "i", ",", ":", ",", ":", "]", "=", "rng", ".", "rand", "(", "K", ",", "2", ")", "*", "area_length", "\n", "rx_pos", "[", "i", ",", ":", ",", ":", "]", "=", "rng", ".", "rand", "(", "K", ",", "2", ")", "*", "area_length", "\n", "rayleigh_coeff", "[", "i", ",", ":", ",", ":", "]", "=", "(", "\n", "np", ".", "square", "(", "rng", ".", "randn", "(", "K", ",", "K", ")", ")", "+", "np", ".", "square", "(", "rng", ".", "randn", "(", "K", ",", "K", ")", ")", ")", "/", "2", "\n", "\n", "", "tx_pos_x", "=", "np", ".", "reshape", "(", "tx_pos", "[", ":", ",", ":", ",", "0", "]", ",", "[", "num_H", ",", "K", ",", "1", "]", ")", "+", "np", ".", "zeros", "(", "[", "1", ",", "1", ",", "K", "]", ")", "\n", "tx_pos_y", "=", "np", ".", "reshape", "(", "tx_pos", "[", ":", ",", ":", ",", "1", "]", ",", "[", "num_H", ",", "K", ",", "1", "]", ")", "+", "np", ".", "zeros", "(", "[", "1", ",", "1", ",", "K", "]", ")", "\n", "rx_pos_x", "=", "np", ".", "reshape", "(", "rx_pos", "[", ":", ",", ":", ",", "0", "]", ",", "[", "num_H", ",", "1", ",", "K", "]", ")", "+", "np", ".", "zeros", "(", "[", "1", ",", "K", ",", "1", "]", ")", "\n", "rx_pos_y", "=", "np", ".", "reshape", "(", "rx_pos", "[", ":", ",", ":", ",", "1", "]", ",", "[", "num_H", ",", "1", ",", "K", "]", ")", "+", "np", ".", "zeros", "(", "[", "1", ",", "K", ",", "1", "]", ")", "\n", "d", "=", "np", ".", "sqrt", "(", "np", ".", "square", "(", "tx_pos_x", "-", "rx_pos_x", ")", "+", "\n", "np", ".", "square", "(", "tx_pos_y", "-", "rx_pos_y", ")", ")", "\n", "G", "=", "np", ".", "divide", "(", "1", ",", "1", "+", "d", "**", "alpha", ")", "\n", "G", "=", "G", "*", "rayleigh_coeff", "\n", "return", "np", ".", "sqrt", "(", "np", ".", "reshape", "(", "G", ",", "[", "num_H", ",", "K", "**", "2", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.data.channel.generate_rayleigh_CSI": [[48, 57], ["numpy.zeros", "range", "numpy.reshape", "abs", "numpy.sqrt", "rng.randn", "numpy.diag", "rng.randn", "numpy.diag"], "function", ["None"], ["", "def", "generate_rayleigh_CSI", "(", "K", ",", "num_H", ",", "rng", ",", "diag_ratio", "=", "1", ")", ":", "\n", "    ", "X", "=", "np", ".", "zeros", "(", "(", "num_H", ",", "K", "**", "2", ")", ")", "\n", "for", "loop", "in", "range", "(", "num_H", ")", ":", "\n", "        ", "CH", "=", "1", "/", "np", ".", "sqrt", "(", "2", ")", "*", "(", "rng", ".", "randn", "(", "K", ",", "K", ")", "+", "\n", "1j", "*", "rng", ".", "randn", "(", "K", ",", "K", ")", ")", "\n", "CH", "=", "CH", "+", "(", "diag_ratio", "-", "1", ")", "*", "np", ".", "diag", "(", "np", ".", "diag", "(", "CH", ")", ")", "\n", "CH", "=", "np", ".", "reshape", "(", "CH", ",", "(", "1", ",", "K", "**", "2", ")", ")", "\n", "X", "[", "loop", ",", ":", "]", "=", "abs", "(", "CH", ")", "\n", "", "return", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.data.channel.generate_rice_CSI": [[59, 66], ["numpy.zeros", "range", "abs", "rng.randn", "rng.randn"], "function", ["None"], ["", "def", "generate_rice_CSI", "(", "K", ",", "num_H", ",", "rng", ")", ":", "\n", "    ", "X", "=", "np", ".", "zeros", "(", "(", "num_H", ",", "K", "**", "2", ")", ")", "\n", "for", "loop", "in", "range", "(", "num_H", ")", ":", "\n", "        ", "CH", "=", "1", "/", "2", "*", "(", "1", "+", "rng", ".", "randn", "(", "1", ",", "K", "**", "2", ")", "+", "\n", "1j", "*", "(", "1", "+", "rng", ".", "randn", "(", "1", ",", "K", "**", "2", ")", ")", ")", "\n", "X", "[", "loop", ",", ":", "]", "=", "abs", "(", "CH", ")", "\n", "", "return", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.data.channel.generate_CSI": [[68, 93], ["numpy.random.RandomState", "re.split", "print", "numpy.ones", "numpy.zeros", "range", "channel.generate_rayleigh_CSI", "numpy.reshape", "data.WMMSE_sum_rate", "len", "int", "channel.generate_rice_CSI", "channel.generate_geometry_CSI", "print", "exit", "int"], "function", ["home.repos.pwc.inspect_result.Haoran-S_TSP_CL.data.channel.generate_rayleigh_CSI", "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.data.function_wmmse_powercontrol.WMMSE_sum_rate", "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.data.channel.generate_rice_CSI", "home.repos.pwc.inspect_result.Haoran-S_TSP_CL.data.channel.generate_geometry_CSI"], ["", "def", "generate_CSI", "(", "K", ",", "num_H", ",", "seed", ",", "distribution", ",", "var_noise", ")", ":", "\n", "    ", "rng", "=", "np", ".", "random", ".", "RandomState", "(", "seed", ")", "\n", "\n", "out", "=", "re", ".", "split", "(", "r'(\\d+)'", ",", "distribution", ")", "\n", "name", ",", "num", "=", "(", "out", "[", "0", "]", ",", "1", ")", "if", "len", "(", "out", ")", "==", "1", "else", "(", "out", "[", "0", "]", ",", "out", "[", "1", "]", ")", "\n", "print", "(", "'Generate Data: %s, %s, K = %d, num = %d, seed = %d'", "%", "\n", "(", "name", ",", "num", ",", "K", ",", "num_H", ",", "seed", ")", ")", "\n", "\n", "if", "name", "==", "\"Rayleigh\"", ":", "\n", "        ", "abs_H", "=", "generate_rayleigh_CSI", "(", "K", ",", "num_H", ",", "rng", ",", "int", "(", "num", ")", ")", "\n", "", "elif", "name", "==", "\"Rice\"", ":", "\n", "        ", "abs_H", "=", "generate_rice_CSI", "(", "K", ",", "num_H", ",", "rng", ")", "\n", "", "elif", "name", "==", "\"Geometry\"", ":", "\n", "        ", "abs_H", "=", "generate_geometry_CSI", "(", "K", ",", "num_H", ",", "rng", ",", "area_length", "=", "int", "(", "num", ")", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"Invalid CSI distribution.\"", ")", "\n", "exit", "(", "0", ")", "\n", "\n", "", "Pmax", "=", "1", "\n", "Pini", "=", "np", ".", "ones", "(", "K", ")", "\n", "Y", "=", "np", ".", "zeros", "(", "(", "num_H", ",", "K", ")", ")", "\n", "for", "loop", "in", "range", "(", "num_H", ")", ":", "\n", "        ", "H", "=", "np", ".", "reshape", "(", "abs_H", "[", "loop", ",", ":", "]", ",", "(", "K", ",", "K", ")", ")", "\n", "Y", "[", "loop", ",", ":", "]", "=", "wf", ".", "WMMSE_sum_rate", "(", "Pini", ",", "H", ",", "Pmax", ",", "var_noise", ")", "\n", "", "return", "abs_H", ",", "Y", "\n", "", ""]]}