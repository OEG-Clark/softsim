{"home.repos.pwc.inspect_result.mathlee_acconet.None.data.SalObjDataset.__init__": [[82, 100], ["sorted", "sorted", "torch.SalObjDataset.filter_files", "len", "torchvision.Compose", "torchvision.Compose", "os.listdir", "f.endswith", "os.listdir", "torchvision.Resize", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.Resize", "torchvision.ToTensor", "f.endswith", "f.endswith"], "methods", ["home.repos.pwc.inspect_result.mathlee_acconet.None.data.SalObjDataset.filter_files"], ["    ", "def", "__init__", "(", "self", ",", "image_root", ",", "gt_root", ",", "trainsize", ")", ":", "\n", "        ", "self", ".", "trainsize", "=", "trainsize", "\n", "self", ".", "images", "=", "[", "image_root", "+", "f", "for", "f", "in", "os", ".", "listdir", "(", "image_root", ")", "if", "f", ".", "endswith", "(", "'.jpg'", ")", "]", "\n", "self", ".", "gts", "=", "[", "gt_root", "+", "f", "for", "f", "in", "os", ".", "listdir", "(", "gt_root", ")", "if", "f", ".", "endswith", "(", "'.jpg'", ")", "\n", "or", "f", ".", "endswith", "(", "'.png'", ")", "]", "\n", "self", ".", "images", "=", "sorted", "(", "self", ".", "images", ")", "\n", "# self.depths = sorted(self.depths)", "\n", "self", ".", "gts", "=", "sorted", "(", "self", ".", "gts", ")", "\n", "self", ".", "filter_files", "(", ")", "\n", "self", ".", "size", "=", "len", "(", "self", ".", "images", ")", "\n", "self", ".", "img_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "self", ".", "trainsize", ",", "self", ".", "trainsize", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "]", ")", "\n", "\n", "self", ".", "gt_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "self", ".", "trainsize", ",", "self", ".", "trainsize", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.None.data.SalObjDataset.__getitem__": [[101, 108], ["torch.SalObjDataset.rgb_loader", "torch.SalObjDataset.binary_loader", "torch.SalObjDataset.img_transform", "torch.SalObjDataset.gt_transform"], "methods", ["home.repos.pwc.inspect_result.mathlee_acconet.None.data.test_dataset.rgb_loader", "home.repos.pwc.inspect_result.mathlee_acconet.None.data.test_dataset.binary_loader"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "image", "=", "self", ".", "rgb_loader", "(", "self", ".", "images", "[", "index", "]", ")", "\n", "gt", "=", "self", ".", "binary_loader", "(", "self", ".", "gts", "[", "index", "]", ")", "\n", "# image,gt =cv_randop0;l.......", "\n", "image", "=", "self", ".", "img_transform", "(", "image", ")", "\n", "gt", "=", "self", ".", "gt_transform", "(", "gt", ")", "\n", "return", "image", ",", "gt", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.None.data.SalObjDataset.filter_files": [[109, 122], ["zip", "len", "len", "PIL.Image.open", "PIL.Image.open", "images.append", "gts.append"], "methods", ["None"], ["", "def", "filter_files", "(", "self", ")", ":", "\n", "        ", "assert", "len", "(", "self", ".", "images", ")", "==", "len", "(", "self", ".", "gts", ")", "\n", "images", "=", "[", "]", "\n", "# depths = []", "\n", "gts", "=", "[", "]", "\n", "for", "img_path", ",", "gt_path", "in", "zip", "(", "self", ".", "images", ",", "self", ".", "gts", ")", ":", "\n", "            ", "img", "=", "Image", ".", "open", "(", "img_path", ")", "\n", "gt", "=", "Image", ".", "open", "(", "gt_path", ")", "\n", "if", "img", ".", "size", "==", "gt", ".", "size", ":", "\n", "                ", "images", ".", "append", "(", "img_path", ")", "\n", "gts", ".", "append", "(", "gt_path", ")", "\n", "", "", "self", ".", "images", "=", "images", "\n", "self", ".", "gts", "=", "gts", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.None.data.SalObjDataset.rgb_loader": [[123, 127], ["open", "PIL.Image.open", "PIL.Image.open.convert"], "methods", ["None"], ["", "def", "rgb_loader", "(", "self", ",", "path", ")", ":", "\n", "        ", "with", "open", "(", "path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "img", "=", "Image", ".", "open", "(", "f", ")", "\n", "return", "img", ".", "convert", "(", "'RGB'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.None.data.SalObjDataset.binary_loader": [[128, 133], ["open", "PIL.Image.open", "PIL.Image.open.convert"], "methods", ["None"], ["", "", "def", "binary_loader", "(", "self", ",", "path", ")", ":", "\n", "        ", "with", "open", "(", "path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "img", "=", "Image", ".", "open", "(", "f", ")", "\n", "# return img.convert('1')", "\n", "return", "img", ".", "convert", "(", "'L'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.None.data.SalObjDataset.resize": [[134, 143], ["max", "max", "img.resize", "gt.resize"], "methods", ["home.repos.pwc.inspect_result.mathlee_acconet.None.data.SalObjDataset.resize", "home.repos.pwc.inspect_result.mathlee_acconet.None.data.SalObjDataset.resize"], ["", "", "def", "resize", "(", "self", ",", "img", ",", "gt", ")", ":", "\n", "        ", "assert", "img", ".", "size", "==", "gt", ".", "size", "\n", "w", ",", "h", "=", "img", ".", "size", "\n", "if", "h", "<", "self", ".", "trainsize", "or", "w", "<", "self", ".", "trainsize", ":", "\n", "            ", "h", "=", "max", "(", "h", ",", "self", ".", "trainsize", ")", "\n", "w", "=", "max", "(", "w", ",", "self", ".", "trainsize", ")", "\n", "return", "img", ".", "resize", "(", "(", "w", ",", "h", ")", ",", "Image", ".", "BILINEAR", ")", ",", "gt", ".", "resize", "(", "(", "w", ",", "h", ")", ",", "Image", ".", "NEAREST", ")", "\n", "", "else", ":", "\n", "            ", "return", "img", ",", "gt", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.None.data.SalObjDataset.__len__": [[144, 146], ["None"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.None.data.test_dataset.__init__": [[160, 175], ["sorted", "sorted", "torchvision.Compose", "torchvision.ToTensor", "len", "os.listdir", "f.endswith", "os.listdir", "torchvision.Resize", "torchvision.ToTensor", "torchvision.Normalize", "f.endswith", "f.endswith"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "image_root", ",", "gt_root", ",", "testsize", ")", ":", "\n", "        ", "self", ".", "testsize", "=", "testsize", "\n", "self", ".", "images", "=", "[", "image_root", "+", "f", "for", "f", "in", "os", ".", "listdir", "(", "image_root", ")", "if", "f", ".", "endswith", "(", "'.jpg'", ")", "]", "\n", "self", ".", "gts", "=", "[", "gt_root", "+", "f", "for", "f", "in", "os", ".", "listdir", "(", "gt_root", ")", "if", "f", ".", "endswith", "(", "'.jpg'", ")", "\n", "or", "f", ".", "endswith", "(", "'.png'", ")", "]", "\n", "self", ".", "images", "=", "sorted", "(", "self", ".", "images", ")", "\n", "# self.depths = sorted(self.depths)", "\n", "self", ".", "gts", "=", "sorted", "(", "self", ".", "gts", ")", "\n", "self", ".", "img_transform", "=", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "(", "self", ".", "testsize", ",", "self", ".", "testsize", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "]", ")", "\n", "self", ".", "gt_transform", "=", "transforms", ".", "ToTensor", "(", ")", "\n", "self", ".", "size", "=", "len", "(", "self", ".", "images", ")", "\n", "self", ".", "index", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.None.data.test_dataset.load_data": [[176, 185], ["torch.test_dataset.rgb_loader", "torch.test_dataset.img_transform().unsqueeze", "torch.test_dataset.binary_loader", "name.endswith", "torch.test_dataset.images[].split", "torch.test_dataset.img_transform", "name.split"], "methods", ["home.repos.pwc.inspect_result.mathlee_acconet.None.data.test_dataset.rgb_loader", "home.repos.pwc.inspect_result.mathlee_acconet.None.data.test_dataset.binary_loader"], ["", "def", "load_data", "(", "self", ")", ":", "\n", "        ", "image", "=", "self", ".", "rgb_loader", "(", "self", ".", "images", "[", "self", ".", "index", "]", ")", "\n", "image", "=", "self", ".", "img_transform", "(", "image", ")", ".", "unsqueeze", "(", "0", ")", "\n", "gt", "=", "self", ".", "binary_loader", "(", "self", ".", "gts", "[", "self", ".", "index", "]", ")", "\n", "name", "=", "self", ".", "images", "[", "self", ".", "index", "]", ".", "split", "(", "'/'", ")", "[", "-", "1", "]", "\n", "if", "name", ".", "endswith", "(", "'.jpg'", ")", ":", "\n", "            ", "name", "=", "name", ".", "split", "(", "'.jpg'", ")", "[", "0", "]", "+", "'.png'", "\n", "", "self", ".", "index", "+=", "1", "\n", "return", "image", ",", "gt", ",", "name", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.None.data.test_dataset.rgb_loader": [[186, 190], ["open", "PIL.Image.open", "PIL.Image.open.convert"], "methods", ["None"], ["", "def", "rgb_loader", "(", "self", ",", "path", ")", ":", "\n", "        ", "with", "open", "(", "path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "img", "=", "Image", ".", "open", "(", "f", ")", "\n", "return", "img", ".", "convert", "(", "'RGB'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.None.data.test_dataset.binary_loader": [[191, 195], ["open", "PIL.Image.open", "PIL.Image.open.convert"], "methods", ["None"], ["", "", "def", "binary_loader", "(", "self", ",", "path", ")", ":", "\n", "        ", "with", "open", "(", "path", ",", "'rb'", ")", "as", "f", ":", "\n", "            ", "img", "=", "Image", ".", "open", "(", "f", ")", "\n", "return", "img", ".", "convert", "(", "'L'", ")", "", "", "", "", ""]], "home.repos.pwc.inspect_result.mathlee_acconet.None.data.cv_random_flip": [[11, 24], ["random.randint", "img.transpose.transpose", "label.transpose.transpose"], "function", ["None"], ["def", "cv_random_flip", "(", "img", ",", "label", ")", ":", "\n", "    ", "flip_flag", "=", "random", ".", "randint", "(", "0", ",", "1", ")", "\n", "# flip_flag2= random.randint(0,1)", "\n", "#left right flip", "\n", "if", "flip_flag", "==", "1", ":", "\n", "        ", "img", "=", "img", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "label", "=", "label", ".", "transpose", "(", "Image", ".", "FLIP_LEFT_RIGHT", ")", "\n", "#top bottom flip", "\n", "# if flip_flag2==1:", "\n", "#     img = img.transpose(Image.FLIP_TOP_BOTTOM)", "\n", "#     label = label.transpose(Image.FLIP_TOP_BOTTOM)", "\n", "#     depth = depth.transpose(Image.FLIP_TOP_BOTTOM)", "\n", "", "return", "img", ",", "label", "\n", "", "def", "randomCrop", "(", "image", ",", "label", ")", ":", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.None.data.randomCrop": [[24, 34], ["numpy.random.randint", "numpy.random.randint", "image.crop", "label.crop"], "function", ["None"], ["", "def", "randomCrop", "(", "image", ",", "label", ")", ":", "\n", "    ", "border", "=", "30", "\n", "image_width", "=", "image", ".", "size", "[", "0", "]", "\n", "image_height", "=", "image", ".", "size", "[", "1", "]", "\n", "crop_win_width", "=", "np", ".", "random", ".", "randint", "(", "image_width", "-", "border", ",", "image_width", ")", "\n", "crop_win_height", "=", "np", ".", "random", ".", "randint", "(", "image_height", "-", "border", ",", "image_height", ")", "\n", "random_region", "=", "(", "\n", "(", "image_width", "-", "crop_win_width", ")", ">>", "1", ",", "(", "image_height", "-", "crop_win_height", ")", ">>", "1", ",", "(", "image_width", "+", "crop_win_width", ")", ">>", "1", ",", "\n", "(", "image_height", "+", "crop_win_height", ")", ">>", "1", ")", "\n", "return", "image", ".", "crop", "(", "random_region", ")", ",", "label", ".", "crop", "(", "random_region", ")", "\n", "", "def", "randomRotation", "(", "image", ",", "label", ")", ":", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.None.data.randomRotation": [[34, 41], ["random.random", "numpy.random.randint", "image.rotate.rotate", "label.rotate.rotate"], "function", ["None"], ["", "def", "randomRotation", "(", "image", ",", "label", ")", ":", "\n", "    ", "mode", "=", "Image", ".", "BICUBIC", "\n", "if", "random", ".", "random", "(", ")", ">", "0.8", ":", "\n", "        ", "random_angle", "=", "np", ".", "random", ".", "randint", "(", "-", "15", ",", "15", ")", "\n", "image", "=", "image", ".", "rotate", "(", "random_angle", ",", "mode", ")", "\n", "label", "=", "label", ".", "rotate", "(", "random_angle", ",", "mode", ")", "\n", "", "return", "image", ",", "label", "\n", "", "def", "colorEnhance", "(", "image", ")", ":", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.None.data.colorEnhance": [[41, 51], ["PIL.ImageEnhance.Brightness().enhance", "PIL.ImageEnhance.Contrast().enhance", "PIL.ImageEnhance.Color().enhance", "PIL.ImageEnhance.Sharpness().enhance", "random.randint", "random.randint", "random.randint", "random.randint", "PIL.ImageEnhance.Brightness", "PIL.ImageEnhance.Contrast", "PIL.ImageEnhance.Color", "PIL.ImageEnhance.Sharpness"], "function", ["None"], ["", "def", "colorEnhance", "(", "image", ")", ":", "\n", "    ", "bright_intensity", "=", "random", ".", "randint", "(", "5", ",", "15", ")", "/", "10.0", "\n", "image", "=", "ImageEnhance", ".", "Brightness", "(", "image", ")", ".", "enhance", "(", "bright_intensity", ")", "\n", "contrast_intensity", "=", "random", ".", "randint", "(", "5", ",", "15", ")", "/", "10.0", "\n", "image", "=", "ImageEnhance", ".", "Contrast", "(", "image", ")", ".", "enhance", "(", "contrast_intensity", ")", "\n", "color_intensity", "=", "random", ".", "randint", "(", "0", ",", "20", ")", "/", "10.0", "\n", "image", "=", "ImageEnhance", ".", "Color", "(", "image", ")", ".", "enhance", "(", "color_intensity", ")", "\n", "sharp_intensity", "=", "random", ".", "randint", "(", "0", ",", "30", ")", "/", "10.0", "\n", "image", "=", "ImageEnhance", ".", "Sharpness", "(", "image", ")", ".", "enhance", "(", "sharp_intensity", ")", "\n", "return", "image", "\n", "", "def", "randomGaussian", "(", "image", ",", "mean", "=", "0.1", ",", "sigma", "=", "0.35", ")", ":", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.None.data.randomGaussian": [[51, 61], ["numpy.asarray", "data.randomGaussian.gaussianNoisy"], "function", ["None"], ["", "def", "randomGaussian", "(", "image", ",", "mean", "=", "0.1", ",", "sigma", "=", "0.35", ")", ":", "\n", "    ", "def", "gaussianNoisy", "(", "im", ",", "mean", "=", "mean", ",", "sigma", "=", "sigma", ")", ":", "\n", "        ", "for", "_i", "in", "range", "(", "len", "(", "im", ")", ")", ":", "\n", "            ", "im", "[", "_i", "]", "+=", "random", ".", "gauss", "(", "mean", ",", "sigma", ")", "\n", "", "return", "im", "\n", "", "img", "=", "np", ".", "asarray", "(", "image", ")", "\n", "width", ",", "height", "=", "img", ".", "shape", "\n", "img", "=", "gaussianNoisy", "(", "img", "[", ":", "]", ".", "flatten", "(", ")", ",", "mean", ",", "sigma", ")", "\n", "img", "=", "img", ".", "reshape", "(", "[", "width", ",", "height", "]", ")", "\n", "return", "Image", ".", "fromarray", "(", "np", ".", "uint8", "(", "img", ")", ")", "\n", "", "def", "randomPeper", "(", "img", ")", ":", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.None.data.randomPeper": [[61, 79], ["numpy.array", "int", "range", "PIL.Image.fromarray", "random.randint", "random.randint", "random.randint"], "function", ["None"], ["", "def", "randomPeper", "(", "img", ")", ":", "\n", "\n", "    ", "img", "=", "np", ".", "array", "(", "img", ")", "\n", "noiseNum", "=", "int", "(", "0.0015", "*", "img", ".", "shape", "[", "0", "]", "*", "img", ".", "shape", "[", "1", "]", ")", "\n", "for", "i", "in", "range", "(", "noiseNum", ")", ":", "\n", "\n", "        ", "randX", "=", "random", ".", "randint", "(", "0", ",", "img", ".", "shape", "[", "0", "]", "-", "1", ")", "\n", "\n", "randY", "=", "random", ".", "randint", "(", "0", ",", "img", ".", "shape", "[", "1", "]", "-", "1", ")", "\n", "\n", "if", "random", ".", "randint", "(", "0", ",", "1", ")", "==", "0", ":", "\n", "\n", "            ", "img", "[", "randX", ",", "randY", "]", "=", "0", "\n", "\n", "", "else", ":", "\n", "\n", "            ", "img", "[", "randX", ",", "randY", "]", "=", "255", "\n", "", "", "return", "Image", ".", "fromarray", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.None.data.get_loader": [[148, 157], ["data.SalObjDataset", "torch.DataLoader"], "function", ["None"], ["", "", "def", "get_loader", "(", "image_root", ",", "gt_root", ",", "batchsize", ",", "trainsize", ",", "shuffle", "=", "True", ",", "num_workers", "=", "12", ",", "pin_memory", "=", "True", ")", ":", "\n", "\n", "    ", "dataset", "=", "SalObjDataset", "(", "image_root", ",", "gt_root", ",", "trainsize", ")", "\n", "data_loader", "=", "data", ".", "DataLoader", "(", "dataset", "=", "dataset", ",", "\n", "batch_size", "=", "batchsize", ",", "\n", "shuffle", "=", "shuffle", ",", "\n", "num_workers", "=", "num_workers", ",", "\n", "pin_memory", "=", "pin_memory", ")", "\n", "return", "data_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.None.utils.clip_gradient": [[1, 6], ["param.grad.data.clamp_"], "function", ["None"], ["def", "clip_gradient", "(", "optimizer", ",", "grad_clip", ")", ":", "\n", "    ", "for", "group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "for", "param", "in", "group", "[", "'params'", "]", ":", "\n", "            ", "if", "param", ".", "grad", "is", "not", "None", ":", "\n", "                ", "param", ".", "grad", ".", "data", ".", "clamp_", "(", "-", "grad_clip", ",", "grad_clip", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.None.utils.adjust_lr": [[8, 13], ["print"], "function", ["None"], ["", "", "", "", "def", "adjust_lr", "(", "optimizer", ",", "init_lr", ",", "epoch", ",", "decay_rate", "=", "0.1", ",", "decay_epoch", "=", "30", ")", ":", "\n", "    ", "decay", "=", "decay_rate", "**", "(", "epoch", "//", "decay_epoch", ")", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "init_lr", "*", "decay", "\n", "print", "(", "'decay_epoch: {}, Current_LR: {}'", ".", "format", "(", "decay_epoch", ",", "init_lr", "*", "decay", ")", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.mathlee_acconet.model.vgg.VGG.__init__": [[7, 70], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential", "torch.Sequential", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential", "torch.Sequential", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential", "torch.Sequential", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential", "torch.Sequential", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.Sequential.add_module", "torch.load", "torch.load", "torch.load", "torch.load", "vgg.VGG._initialize_weights", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.mathlee_acconet.pytorch_iou.__init__.IOU.__init__", "home.repos.pwc.inspect_result.mathlee_acconet.model.vgg.VGG._initialize_weights"], ["    ", "def", "__init__", "(", "self", ",", "mode", "=", "'rgb'", ")", ":", "\n", "        ", "super", "(", "VGG", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "conv1", "=", "nn", ".", "Sequential", "(", ")", "\n", "conv1", ".", "add_module", "(", "'conv1_1'", ",", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "3", ",", "1", ",", "1", ")", ")", "\n", "conv1", ".", "add_module", "(", "'bn1_1'", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ")", "\n", "conv1", ".", "add_module", "(", "'relu1_1'", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "conv1", ".", "add_module", "(", "'conv1_2'", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "3", ",", "1", ",", "1", ")", ")", "\n", "conv1", ".", "add_module", "(", "'bn1_2'", ",", "nn", ".", "BatchNorm2d", "(", "64", ")", ")", "\n", "conv1", ".", "add_module", "(", "'relu1_2'", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "\n", "self", ".", "conv1", "=", "conv1", "\n", "conv2", "=", "nn", ".", "Sequential", "(", ")", "\n", "conv2", ".", "add_module", "(", "'pool1'", ",", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ")", ")", "\n", "conv2", ".", "add_module", "(", "'conv2_1'", ",", "nn", ".", "Conv2d", "(", "64", ",", "128", ",", "3", ",", "1", ",", "1", ")", ")", "\n", "conv2", ".", "add_module", "(", "'bn2_1'", ",", "nn", ".", "BatchNorm2d", "(", "128", ")", ")", "\n", "conv2", ".", "add_module", "(", "'relu2_1'", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "conv2", ".", "add_module", "(", "'conv2_2'", ",", "nn", ".", "Conv2d", "(", "128", ",", "128", ",", "3", ",", "1", ",", "1", ")", ")", "\n", "conv2", ".", "add_module", "(", "'bn2_2'", ",", "nn", ".", "BatchNorm2d", "(", "128", ")", ")", "\n", "conv2", ".", "add_module", "(", "'relu2_2'", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "conv2", "=", "conv2", "\n", "\n", "conv3", "=", "nn", ".", "Sequential", "(", ")", "\n", "conv3", ".", "add_module", "(", "'pool2'", ",", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ")", ")", "\n", "conv3", ".", "add_module", "(", "'conv3_1'", ",", "nn", ".", "Conv2d", "(", "128", ",", "256", ",", "3", ",", "1", ",", "1", ")", ")", "\n", "conv3", ".", "add_module", "(", "'bn3_1'", ",", "nn", ".", "BatchNorm2d", "(", "256", ")", ")", "\n", "conv3", ".", "add_module", "(", "'relu3_1'", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "conv3", ".", "add_module", "(", "'conv3_2'", ",", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ",", "1", ",", "1", ")", ")", "\n", "conv3", ".", "add_module", "(", "'bn3_2'", ",", "nn", ".", "BatchNorm2d", "(", "256", ")", ")", "\n", "conv3", ".", "add_module", "(", "'relu3_2'", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "conv3", ".", "add_module", "(", "'conv3_3'", ",", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "3", ",", "1", ",", "1", ")", ")", "\n", "conv3", ".", "add_module", "(", "'bn3_3'", ",", "nn", ".", "BatchNorm2d", "(", "256", ")", ")", "\n", "conv3", ".", "add_module", "(", "'relu3_3'", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "conv3", "=", "conv3", "\n", "\n", "conv4", "=", "nn", ".", "Sequential", "(", ")", "\n", "conv4", ".", "add_module", "(", "'pool3_1'", ",", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ")", ")", "\n", "conv4", ".", "add_module", "(", "'conv4_1'", ",", "nn", ".", "Conv2d", "(", "256", ",", "512", ",", "3", ",", "1", ",", "1", ")", ")", "\n", "conv4", ".", "add_module", "(", "'bn4_1'", ",", "nn", ".", "BatchNorm2d", "(", "512", ")", ")", "\n", "conv4", ".", "add_module", "(", "'relu4_1'", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "conv4", ".", "add_module", "(", "'conv4_2'", ",", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "3", ",", "1", ",", "1", ")", ")", "\n", "conv4", ".", "add_module", "(", "'bn4_2'", ",", "nn", ".", "BatchNorm2d", "(", "512", ")", ")", "\n", "conv4", ".", "add_module", "(", "'relu4_2'", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "conv4", ".", "add_module", "(", "'conv4_3'", ",", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "3", ",", "1", ",", "1", ")", ")", "\n", "conv4", ".", "add_module", "(", "'bn4_3'", ",", "nn", ".", "BatchNorm2d", "(", "512", ")", ")", "\n", "conv4", ".", "add_module", "(", "'relu4_3'", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "conv4", "=", "conv4", "\n", "\n", "conv5", "=", "nn", ".", "Sequential", "(", ")", "\n", "conv5", ".", "add_module", "(", "'pool4'", ",", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ")", ")", "\n", "conv5", ".", "add_module", "(", "'conv5_1'", ",", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "3", ",", "1", ",", "1", ")", ")", "\n", "conv5", ".", "add_module", "(", "'bn5_1'", ",", "nn", ".", "BatchNorm2d", "(", "512", ")", ")", "\n", "conv5", ".", "add_module", "(", "'relu5_1'", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "conv5", ".", "add_module", "(", "'conv5_2'", ",", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "3", ",", "1", ",", "1", ")", ")", "\n", "conv5", ".", "add_module", "(", "'bn5_2'", ",", "nn", ".", "BatchNorm2d", "(", "512", ")", ")", "\n", "conv5", ".", "add_module", "(", "'relu5_2'", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "conv5", ".", "add_module", "(", "'conv5_3'", ",", "nn", ".", "Conv2d", "(", "512", ",", "512", ",", "3", ",", "1", ",", "1", ")", ")", "\n", "conv5", ".", "add_module", "(", "'bn5_2'", ",", "nn", ".", "BatchNorm2d", "(", "512", ")", ")", "\n", "conv5", ".", "add_module", "(", "'relu5_3'", ",", "nn", ".", "ReLU", "(", ")", ")", "\n", "self", ".", "conv5", "=", "conv5", "\n", "\n", "pre_train", "=", "torch", ".", "load", "(", "'/home/lgy/20210206_ORSI_SOD/model/vgg16-397923af.pth'", ")", "\n", "self", ".", "_initialize_weights", "(", "pre_train", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.vgg.VGG.forward": [[71, 79], ["vgg.VGG.conv1", "vgg.VGG.conv2", "vgg.VGG.conv3", "vgg.VGG.conv4", "vgg.VGG.conv5"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "conv2", "(", "x", ")", "\n", "x", "=", "self", ".", "conv3", "(", "x", ")", "\n", "x", "=", "self", ".", "conv4", "(", "x", ")", "\n", "x", "=", "self", ".", "conv5", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.vgg.VGG._initialize_weights": [[80, 110], ["pre_train.keys", "vgg.VGG.conv1.conv1_1.weight.data.copy_", "vgg.VGG.conv1.conv1_2.weight.data.copy_", "vgg.VGG.conv2.conv2_1.weight.data.copy_", "vgg.VGG.conv2.conv2_2.weight.data.copy_", "vgg.VGG.conv3.conv3_1.weight.data.copy_", "vgg.VGG.conv3.conv3_2.weight.data.copy_", "vgg.VGG.conv3.conv3_3.weight.data.copy_", "vgg.VGG.conv4.conv4_1.weight.data.copy_", "vgg.VGG.conv4.conv4_2.weight.data.copy_", "vgg.VGG.conv4.conv4_3.weight.data.copy_", "vgg.VGG.conv5.conv5_1.weight.data.copy_", "vgg.VGG.conv5.conv5_2.weight.data.copy_", "vgg.VGG.conv5.conv5_3.weight.data.copy_", "vgg.VGG.conv1.conv1_1.bias.data.copy_", "vgg.VGG.conv1.conv1_2.bias.data.copy_", "vgg.VGG.conv2.conv2_1.bias.data.copy_", "vgg.VGG.conv2.conv2_2.bias.data.copy_", "vgg.VGG.conv3.conv3_1.bias.data.copy_", "vgg.VGG.conv3.conv3_2.bias.data.copy_", "vgg.VGG.conv3.conv3_3.bias.data.copy_", "vgg.VGG.conv4.conv4_1.bias.data.copy_", "vgg.VGG.conv4.conv4_2.bias.data.copy_", "vgg.VGG.conv4.conv4_3.bias.data.copy_", "vgg.VGG.conv5.conv5_1.bias.data.copy_", "vgg.VGG.conv5.conv5_2.bias.data.copy_", "vgg.VGG.conv5.conv5_3.bias.data.copy_"], "methods", ["None"], ["", "def", "_initialize_weights", "(", "self", ",", "pre_train", ")", ":", "\n", "        ", "keys", "=", "pre_train", ".", "keys", "(", ")", "\n", "\n", "self", ".", "conv1", ".", "conv1_1", ".", "weight", ".", "data", ".", "copy_", "(", "pre_train", "[", "keys", "[", "0", "]", "]", ")", "\n", "self", ".", "conv1", ".", "conv1_2", ".", "weight", ".", "data", ".", "copy_", "(", "pre_train", "[", "keys", "[", "2", "]", "]", ")", "\n", "self", ".", "conv2", ".", "conv2_1", ".", "weight", ".", "data", ".", "copy_", "(", "pre_train", "[", "keys", "[", "4", "]", "]", ")", "\n", "self", ".", "conv2", ".", "conv2_2", ".", "weight", ".", "data", ".", "copy_", "(", "pre_train", "[", "keys", "[", "6", "]", "]", ")", "\n", "self", ".", "conv3", ".", "conv3_1", ".", "weight", ".", "data", ".", "copy_", "(", "pre_train", "[", "keys", "[", "8", "]", "]", ")", "\n", "self", ".", "conv3", ".", "conv3_2", ".", "weight", ".", "data", ".", "copy_", "(", "pre_train", "[", "keys", "[", "10", "]", "]", ")", "\n", "self", ".", "conv3", ".", "conv3_3", ".", "weight", ".", "data", ".", "copy_", "(", "pre_train", "[", "keys", "[", "12", "]", "]", ")", "\n", "self", ".", "conv4", ".", "conv4_1", ".", "weight", ".", "data", ".", "copy_", "(", "pre_train", "[", "keys", "[", "14", "]", "]", ")", "\n", "self", ".", "conv4", ".", "conv4_2", ".", "weight", ".", "data", ".", "copy_", "(", "pre_train", "[", "keys", "[", "16", "]", "]", ")", "\n", "self", ".", "conv4", ".", "conv4_3", ".", "weight", ".", "data", ".", "copy_", "(", "pre_train", "[", "keys", "[", "18", "]", "]", ")", "\n", "self", ".", "conv5", ".", "conv5_1", ".", "weight", ".", "data", ".", "copy_", "(", "pre_train", "[", "keys", "[", "20", "]", "]", ")", "\n", "self", ".", "conv5", ".", "conv5_2", ".", "weight", ".", "data", ".", "copy_", "(", "pre_train", "[", "keys", "[", "22", "]", "]", ")", "\n", "self", ".", "conv5", ".", "conv5_3", ".", "weight", ".", "data", ".", "copy_", "(", "pre_train", "[", "keys", "[", "24", "]", "]", ")", "\n", "\n", "self", ".", "conv1", ".", "conv1_1", ".", "bias", ".", "data", ".", "copy_", "(", "pre_train", "[", "keys", "[", "1", "]", "]", ")", "\n", "self", ".", "conv1", ".", "conv1_2", ".", "bias", ".", "data", ".", "copy_", "(", "pre_train", "[", "keys", "[", "3", "]", "]", ")", "\n", "self", ".", "conv2", ".", "conv2_1", ".", "bias", ".", "data", ".", "copy_", "(", "pre_train", "[", "keys", "[", "5", "]", "]", ")", "\n", "self", ".", "conv2", ".", "conv2_2", ".", "bias", ".", "data", ".", "copy_", "(", "pre_train", "[", "keys", "[", "7", "]", "]", ")", "\n", "self", ".", "conv3", ".", "conv3_1", ".", "bias", ".", "data", ".", "copy_", "(", "pre_train", "[", "keys", "[", "9", "]", "]", ")", "\n", "self", ".", "conv3", ".", "conv3_2", ".", "bias", ".", "data", ".", "copy_", "(", "pre_train", "[", "keys", "[", "11", "]", "]", ")", "\n", "self", ".", "conv3", ".", "conv3_3", ".", "bias", ".", "data", ".", "copy_", "(", "pre_train", "[", "keys", "[", "13", "]", "]", ")", "\n", "self", ".", "conv4", ".", "conv4_1", ".", "bias", ".", "data", ".", "copy_", "(", "pre_train", "[", "keys", "[", "15", "]", "]", ")", "\n", "self", ".", "conv4", ".", "conv4_2", ".", "bias", ".", "data", ".", "copy_", "(", "pre_train", "[", "keys", "[", "17", "]", "]", ")", "\n", "self", ".", "conv4", ".", "conv4_3", ".", "bias", ".", "data", ".", "copy_", "(", "pre_train", "[", "keys", "[", "19", "]", "]", ")", "\n", "self", ".", "conv5", ".", "conv5_1", ".", "bias", ".", "data", ".", "copy_", "(", "pre_train", "[", "keys", "[", "21", "]", "]", ")", "\n", "self", ".", "conv5", ".", "conv5_2", ".", "bias", ".", "data", ".", "copy_", "(", "pre_train", "[", "keys", "[", "23", "]", "]", ")", "\n", "self", ".", "conv5", ".", "conv5_3", ".", "bias", ".", "data", ".", "copy_", "(", "pre_train", "[", "keys", "[", "25", "]", "]", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ACCoNet_VGG_models.BasicConv2d.__init__": [[8, 15], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.mathlee_acconet.pytorch_iou.__init__.IOU.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ",", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "dilation", "=", "1", ")", ":", "\n", "        ", "super", "(", "BasicConv2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "\n", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "dilation", "=", "dilation", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "out_planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ACCoNet_VGG_models.BasicConv2d.forward": [[16, 21], ["ACCoNet_VGG_models.BasicConv2d.conv", "ACCoNet_VGG_models.BasicConv2d.bn", "ACCoNet_VGG_models.BasicConv2d.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "self", ".", "bn", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ACCoNet_VGG_models.TransBasicConv2d.__init__": [[23, 30], ["torch.Module.__init__", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.mathlee_acconet.pytorch_iou.__init__.IOU.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "dilation", "=", "1", ",", "bias", "=", "False", ")", ":", "\n", "        ", "super", "(", "TransBasicConv2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "Deconv", "=", "nn", ".", "ConvTranspose2d", "(", "in_planes", ",", "out_planes", ",", "\n", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "dilation", "=", "dilation", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "out_planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ACCoNet_VGG_models.TransBasicConv2d.forward": [[31, 36], ["ACCoNet_VGG_models.TransBasicConv2d.Deconv", "ACCoNet_VGG_models.TransBasicConv2d.bn", "ACCoNet_VGG_models.TransBasicConv2d.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "Deconv", "(", "x", ")", "\n", "x", "=", "self", ".", "bn", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ACCoNet_VGG_models.ChannelAttention.__init__": [[39, 49], ["torch.Module.__init__", "torch.AdaptiveMaxPool2d", "torch.AdaptiveMaxPool2d", "torch.AdaptiveMaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.mathlee_acconet.pytorch_iou.__init__.IOU.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "ratio", "=", "16", ")", ":", "\n", "        ", "super", "(", "ChannelAttention", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "max_pool", "=", "nn", ".", "AdaptiveMaxPool2d", "(", "1", ")", "\n", "\n", "self", ".", "fc1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "in_planes", "//", "16", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "relu1", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Conv2d", "(", "in_planes", "//", "16", ",", "in_planes", ",", "1", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ACCoNet_VGG_models.ChannelAttention.forward": [[50, 54], ["ACCoNet_VGG_models.ChannelAttention.fc2", "ACCoNet_VGG_models.ChannelAttention.sigmoid", "ACCoNet_VGG_models.ChannelAttention.relu1", "ACCoNet_VGG_models.ChannelAttention.fc1", "ACCoNet_VGG_models.ChannelAttention.max_pool"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "max_out", "=", "self", ".", "fc2", "(", "self", ".", "relu1", "(", "self", ".", "fc1", "(", "self", ".", "max_pool", "(", "x", ")", ")", ")", ")", "\n", "out", "=", "max_out", "\n", "return", "self", ".", "sigmoid", "(", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ACCoNet_VGG_models.SpatialAttention.__init__": [[57, 65], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.mathlee_acconet.pytorch_iou.__init__.IOU.__init__"], ["    ", "def", "__init__", "(", "self", ",", "kernel_size", "=", "7", ")", ":", "\n", "        ", "super", "(", "SpatialAttention", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "assert", "kernel_size", "in", "(", "3", ",", "7", ")", ",", "'kernel size must be 3 or 7'", "\n", "padding", "=", "3", "if", "kernel_size", "==", "7", "else", "1", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "1", ",", "1", ",", "kernel_size", ",", "padding", "=", "padding", ",", "bias", "=", "False", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ACCoNet_VGG_models.SpatialAttention.forward": [[66, 71], ["torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "ACCoNet_VGG_models.SpatialAttention.conv1", "ACCoNet_VGG_models.SpatialAttention.sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "max_out", ",", "_", "=", "torch", ".", "max", "(", "x", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "x", "=", "max_out", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "return", "self", ".", "sigmoid", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ACCoNet_VGG_models.ACCoM5.__init__": [[74, 91], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.ReLU", "ACCoNet_VGG_models.BasicConv2d", "ACCoNet_VGG_models.BasicConv2d", "ACCoNet_VGG_models.BasicConv2d", "ACCoNet_VGG_models.BasicConv2d", "ACCoNet_VGG_models.BasicConv2d", "ACCoNet_VGG_models.ChannelAttention", "ACCoNet_VGG_models.SpatialAttention", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "ACCoNet_VGG_models.SpatialAttention"], "methods", ["home.repos.pwc.inspect_result.mathlee_acconet.pytorch_iou.__init__.IOU.__init__"], ["    ", "def", "__init__", "(", "self", ",", "cur_channel", ")", ":", "\n", "        ", "super", "(", "ACCoM5", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "\n", "# current conv", "\n", "self", ".", "cur_b1", "=", "BasicConv2d", "(", "cur_channel", ",", "cur_channel", ",", "3", ",", "padding", "=", "1", ",", "dilation", "=", "1", ")", "\n", "self", ".", "cur_b2", "=", "BasicConv2d", "(", "cur_channel", ",", "cur_channel", ",", "3", ",", "padding", "=", "2", ",", "dilation", "=", "2", ")", "\n", "self", ".", "cur_b3", "=", "BasicConv2d", "(", "cur_channel", ",", "cur_channel", ",", "3", ",", "padding", "=", "3", ",", "dilation", "=", "3", ")", "\n", "self", ".", "cur_b4", "=", "BasicConv2d", "(", "cur_channel", ",", "cur_channel", ",", "3", ",", "padding", "=", "4", ",", "dilation", "=", "4", ")", "\n", "\n", "self", ".", "cur_all", "=", "BasicConv2d", "(", "4", "*", "cur_channel", ",", "cur_channel", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "cur_all_ca", "=", "ChannelAttention", "(", "cur_channel", ")", "\n", "self", ".", "cur_all_sa", "=", "SpatialAttention", "(", ")", "\n", "\n", "# previous conv", "\n", "self", ".", "downsample2", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ")", "\n", "self", ".", "pre_sa", "=", "SpatialAttention", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ACCoNet_VGG_models.ACCoM5.forward": [[92, 109], ["ACCoNet_VGG_models.ACCoM5.cur_b1", "ACCoNet_VGG_models.ACCoM5.cur_b2", "ACCoNet_VGG_models.ACCoM5.cur_b3", "ACCoNet_VGG_models.ACCoM5.cur_b4", "ACCoNet_VGG_models.ACCoM5.cur_all", "ACCoNet_VGG_models.ACCoM5.mul", "ACCoNet_VGG_models.ACCoM5.mul", "ACCoNet_VGG_models.ACCoM5.downsample2", "ACCoNet_VGG_models.ACCoM5.mul", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "ACCoNet_VGG_models.ACCoM5.cur_all_ca", "ACCoNet_VGG_models.ACCoM5.cur_all_sa", "ACCoNet_VGG_models.ACCoM5.pre_sa"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x_pre", ",", "x_cur", ")", ":", "\n", "# current conv", "\n", "        ", "x_cur_1", "=", "self", ".", "cur_b1", "(", "x_cur", ")", "\n", "x_cur_2", "=", "self", ".", "cur_b2", "(", "x_cur", ")", "\n", "x_cur_3", "=", "self", ".", "cur_b3", "(", "x_cur", ")", "\n", "x_cur_4", "=", "self", ".", "cur_b4", "(", "x_cur", ")", "\n", "x_cur_all", "=", "self", ".", "cur_all", "(", "torch", ".", "cat", "(", "(", "x_cur_1", ",", "x_cur_2", ",", "x_cur_3", ",", "x_cur_4", ")", ",", "1", ")", ")", "\n", "cur_all_ca", "=", "x_cur_all", ".", "mul", "(", "self", ".", "cur_all_ca", "(", "x_cur_all", ")", ")", "\n", "cur_all_sa", "=", "x_cur_all", ".", "mul", "(", "self", ".", "cur_all_sa", "(", "cur_all_ca", ")", ")", "\n", "\n", "# previois conv", "\n", "x_pre", "=", "self", ".", "downsample2", "(", "x_pre", ")", "\n", "pre_sa", "=", "x_cur_all", ".", "mul", "(", "self", ".", "pre_sa", "(", "x_pre", ")", ")", "\n", "\n", "x_LocAndGlo", "=", "cur_all_sa", "+", "pre_sa", "+", "x_cur", "\n", "\n", "return", "x_LocAndGlo", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ACCoNet_VGG_models.ACCoM1.__init__": [[112, 129], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.ReLU", "ACCoNet_VGG_models.BasicConv2d", "ACCoNet_VGG_models.BasicConv2d", "ACCoNet_VGG_models.BasicConv2d", "ACCoNet_VGG_models.BasicConv2d", "ACCoNet_VGG_models.BasicConv2d", "ACCoNet_VGG_models.ChannelAttention", "ACCoNet_VGG_models.SpatialAttention", "torch.Upsample", "torch.Upsample", "torch.Upsample", "ACCoNet_VGG_models.SpatialAttention"], "methods", ["home.repos.pwc.inspect_result.mathlee_acconet.pytorch_iou.__init__.IOU.__init__"], ["    ", "def", "__init__", "(", "self", ",", "cur_channel", ")", ":", "\n", "        ", "super", "(", "ACCoM1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "\n", "# current conv", "\n", "self", ".", "cur_b1", "=", "BasicConv2d", "(", "cur_channel", ",", "cur_channel", ",", "3", ",", "padding", "=", "1", ",", "dilation", "=", "1", ")", "\n", "self", ".", "cur_b2", "=", "BasicConv2d", "(", "cur_channel", ",", "cur_channel", ",", "3", ",", "padding", "=", "2", ",", "dilation", "=", "2", ")", "\n", "self", ".", "cur_b3", "=", "BasicConv2d", "(", "cur_channel", ",", "cur_channel", ",", "3", ",", "padding", "=", "3", ",", "dilation", "=", "3", ")", "\n", "self", ".", "cur_b4", "=", "BasicConv2d", "(", "cur_channel", ",", "cur_channel", ",", "3", ",", "padding", "=", "4", ",", "dilation", "=", "4", ")", "\n", "\n", "self", ".", "cur_all", "=", "BasicConv2d", "(", "4", "*", "cur_channel", ",", "cur_channel", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "cur_all_ca", "=", "ChannelAttention", "(", "cur_channel", ")", "\n", "self", ".", "cur_all_sa", "=", "SpatialAttention", "(", ")", "\n", "\n", "# latter conv", "\n", "self", ".", "upsample2", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "self", ".", "lat_sa", "=", "SpatialAttention", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ACCoNet_VGG_models.ACCoM1.forward": [[130, 147], ["ACCoNet_VGG_models.ACCoM1.cur_b1", "ACCoNet_VGG_models.ACCoM1.cur_b2", "ACCoNet_VGG_models.ACCoM1.cur_b3", "ACCoNet_VGG_models.ACCoM1.cur_b4", "ACCoNet_VGG_models.ACCoM1.cur_all", "ACCoNet_VGG_models.ACCoM1.mul", "ACCoNet_VGG_models.ACCoM1.mul", "ACCoNet_VGG_models.ACCoM1.upsample2", "ACCoNet_VGG_models.ACCoM1.mul", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "ACCoNet_VGG_models.ACCoM1.cur_all_ca", "ACCoNet_VGG_models.ACCoM1.cur_all_sa", "ACCoNet_VGG_models.ACCoM1.lat_sa"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x_cur", ",", "x_lat", ")", ":", "\n", "# current conv", "\n", "        ", "x_cur_1", "=", "self", ".", "cur_b1", "(", "x_cur", ")", "\n", "x_cur_2", "=", "self", ".", "cur_b2", "(", "x_cur", ")", "\n", "x_cur_3", "=", "self", ".", "cur_b3", "(", "x_cur", ")", "\n", "x_cur_4", "=", "self", ".", "cur_b4", "(", "x_cur", ")", "\n", "x_cur_all", "=", "self", ".", "cur_all", "(", "torch", ".", "cat", "(", "(", "x_cur_1", ",", "x_cur_2", ",", "x_cur_3", ",", "x_cur_4", ")", ",", "1", ")", ")", "\n", "cur_all_ca", "=", "x_cur_all", ".", "mul", "(", "self", ".", "cur_all_ca", "(", "x_cur_all", ")", ")", "\n", "cur_all_sa", "=", "x_cur_all", ".", "mul", "(", "self", ".", "cur_all_sa", "(", "cur_all_ca", ")", ")", "\n", "\n", "# latter conv", "\n", "x_lat", "=", "self", ".", "upsample2", "(", "x_lat", ")", "\n", "lat_sa", "=", "x_cur_all", ".", "mul", "(", "self", ".", "lat_sa", "(", "x_lat", ")", ")", "\n", "\n", "x_LocAndGlo", "=", "cur_all_sa", "+", "lat_sa", "+", "x_cur", "\n", "\n", "return", "x_LocAndGlo", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ACCoNet_VGG_models.ACCoM.__init__": [[150, 171], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.ReLU", "ACCoNet_VGG_models.BasicConv2d", "ACCoNet_VGG_models.BasicConv2d", "ACCoNet_VGG_models.BasicConv2d", "ACCoNet_VGG_models.BasicConv2d", "ACCoNet_VGG_models.BasicConv2d", "ACCoNet_VGG_models.ChannelAttention", "ACCoNet_VGG_models.SpatialAttention", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "ACCoNet_VGG_models.SpatialAttention", "torch.Upsample", "torch.Upsample", "torch.Upsample", "ACCoNet_VGG_models.SpatialAttention"], "methods", ["home.repos.pwc.inspect_result.mathlee_acconet.pytorch_iou.__init__.IOU.__init__"], ["    ", "def", "__init__", "(", "self", ",", "cur_channel", ")", ":", "\n", "        ", "super", "(", "ACCoM", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "\n", "# current conv", "\n", "self", ".", "cur_b1", "=", "BasicConv2d", "(", "cur_channel", ",", "cur_channel", ",", "3", ",", "padding", "=", "1", ",", "dilation", "=", "1", ")", "\n", "self", ".", "cur_b2", "=", "BasicConv2d", "(", "cur_channel", ",", "cur_channel", ",", "3", ",", "padding", "=", "2", ",", "dilation", "=", "2", ")", "\n", "self", ".", "cur_b3", "=", "BasicConv2d", "(", "cur_channel", ",", "cur_channel", ",", "3", ",", "padding", "=", "3", ",", "dilation", "=", "3", ")", "\n", "self", ".", "cur_b4", "=", "BasicConv2d", "(", "cur_channel", ",", "cur_channel", ",", "3", ",", "padding", "=", "4", ",", "dilation", "=", "4", ")", "\n", "\n", "self", ".", "cur_all", "=", "BasicConv2d", "(", "4", "*", "cur_channel", ",", "cur_channel", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "cur_all_ca", "=", "ChannelAttention", "(", "cur_channel", ")", "\n", "self", ".", "cur_all_sa", "=", "SpatialAttention", "(", ")", "\n", "\n", "# previous conv", "\n", "self", ".", "downsample2", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ")", "\n", "self", ".", "pre_sa", "=", "SpatialAttention", "(", ")", "\n", "\n", "# latter conv", "\n", "self", ".", "upsample2", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "self", ".", "lat_sa", "=", "SpatialAttention", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ACCoNet_VGG_models.ACCoM.forward": [[172, 193], ["ACCoNet_VGG_models.ACCoM.cur_b1", "ACCoNet_VGG_models.ACCoM.cur_b2", "ACCoNet_VGG_models.ACCoM.cur_b3", "ACCoNet_VGG_models.ACCoM.cur_b4", "ACCoNet_VGG_models.ACCoM.cur_all", "ACCoNet_VGG_models.ACCoM.mul", "ACCoNet_VGG_models.ACCoM.mul", "ACCoNet_VGG_models.ACCoM.downsample2", "ACCoNet_VGG_models.ACCoM.mul", "ACCoNet_VGG_models.ACCoM.upsample2", "ACCoNet_VGG_models.ACCoM.mul", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "ACCoNet_VGG_models.ACCoM.cur_all_ca", "ACCoNet_VGG_models.ACCoM.cur_all_sa", "ACCoNet_VGG_models.ACCoM.pre_sa", "ACCoNet_VGG_models.ACCoM.lat_sa"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x_pre", ",", "x_cur", ",", "x_lat", ")", ":", "\n", "# current conv", "\n", "        ", "x_cur_1", "=", "self", ".", "cur_b1", "(", "x_cur", ")", "\n", "x_cur_2", "=", "self", ".", "cur_b2", "(", "x_cur", ")", "\n", "x_cur_3", "=", "self", ".", "cur_b3", "(", "x_cur", ")", "\n", "x_cur_4", "=", "self", ".", "cur_b4", "(", "x_cur", ")", "\n", "x_cur_all", "=", "self", ".", "cur_all", "(", "torch", ".", "cat", "(", "(", "x_cur_1", ",", "x_cur_2", ",", "x_cur_3", ",", "x_cur_4", ")", ",", "1", ")", ")", "\n", "cur_all_ca", "=", "x_cur_all", ".", "mul", "(", "self", ".", "cur_all_ca", "(", "x_cur_all", ")", ")", "\n", "cur_all_sa", "=", "x_cur_all", ".", "mul", "(", "self", ".", "cur_all_sa", "(", "cur_all_ca", ")", ")", "\n", "\n", "# previois conv", "\n", "x_pre", "=", "self", ".", "downsample2", "(", "x_pre", ")", "\n", "pre_sa", "=", "x_cur_all", ".", "mul", "(", "self", ".", "pre_sa", "(", "x_pre", ")", ")", "\n", "\n", "# latter conv", "\n", "x_lat", "=", "self", ".", "upsample2", "(", "x_lat", ")", "\n", "lat_sa", "=", "x_cur_all", ".", "mul", "(", "self", ".", "lat_sa", "(", "x_lat", ")", ")", "\n", "\n", "x_LocAndGlo", "=", "cur_all_sa", "+", "pre_sa", "+", "lat_sa", "+", "x_cur", "\n", "\n", "return", "x_LocAndGlo", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ACCoNet_VGG_models.BAB_Decoder.__init__": [[196, 205], ["torch.Module.__init__", "ACCoNet_VGG_models.BasicConv2d", "ACCoNet_VGG_models.BasicConv2d", "ACCoNet_VGG_models.BasicConv2d", "ACCoNet_VGG_models.BasicConv2d", "ACCoNet_VGG_models.BasicConv2d", "ACCoNet_VGG_models.BasicConv2d"], "methods", ["home.repos.pwc.inspect_result.mathlee_acconet.pytorch_iou.__init__.IOU.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel_1", "=", "1024", ",", "channel_2", "=", "512", ",", "channel_3", "=", "256", ",", "dilation_1", "=", "3", ",", "dilation_2", "=", "2", ")", ":", "\n", "        ", "super", "(", "BAB_Decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "BasicConv2d", "(", "channel_1", ",", "channel_2", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv1_Dila", "=", "BasicConv2d", "(", "channel_2", ",", "channel_2", ",", "3", ",", "padding", "=", "dilation_1", ",", "dilation", "=", "dilation_1", ")", "\n", "self", ".", "conv2", "=", "BasicConv2d", "(", "channel_2", ",", "channel_2", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv2_Dila", "=", "BasicConv2d", "(", "channel_2", ",", "channel_2", ",", "3", ",", "padding", "=", "dilation_2", ",", "dilation", "=", "dilation_2", ")", "\n", "self", ".", "conv3", "=", "BasicConv2d", "(", "channel_2", ",", "channel_2", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv_fuse", "=", "BasicConv2d", "(", "channel_2", "*", "3", ",", "channel_3", ",", "3", ",", "padding", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ACCoNet_VGG_models.BAB_Decoder.forward": [[206, 218], ["ACCoNet_VGG_models.BAB_Decoder.conv1", "ACCoNet_VGG_models.BAB_Decoder.conv1_Dila", "ACCoNet_VGG_models.BAB_Decoder.conv2", "ACCoNet_VGG_models.BAB_Decoder.conv2_Dila", "ACCoNet_VGG_models.BAB_Decoder.conv3", "ACCoNet_VGG_models.BAB_Decoder.conv_fuse", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x1", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x1_dila", "=", "self", ".", "conv1_Dila", "(", "x1", ")", "\n", "\n", "x2", "=", "self", ".", "conv2", "(", "x1", ")", "\n", "x2_dila", "=", "self", ".", "conv2_Dila", "(", "x2", ")", "\n", "\n", "x3", "=", "self", ".", "conv3", "(", "x2", ")", "\n", "\n", "x_fuse", "=", "self", ".", "conv_fuse", "(", "torch", ".", "cat", "(", "(", "x1_dila", ",", "x2_dila", ",", "x3", ")", ",", "1", ")", ")", "\n", "\n", "return", "x_fuse", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ACCoNet_VGG_models.decoder.__init__": [[221, 263], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "ACCoNet_VGG_models.BAB_Decoder", "torch.Dropout", "torch.Dropout", "torch.Dropout", "ACCoNet_VGG_models.TransBasicConv2d", "ACCoNet_VGG_models.BAB_Decoder", "torch.Dropout", "torch.Dropout", "torch.Dropout", "ACCoNet_VGG_models.TransBasicConv2d", "ACCoNet_VGG_models.BAB_Decoder", "torch.Dropout", "torch.Dropout", "torch.Dropout", "ACCoNet_VGG_models.TransBasicConv2d", "ACCoNet_VGG_models.BAB_Decoder", "torch.Dropout", "torch.Dropout", "torch.Dropout", "ACCoNet_VGG_models.TransBasicConv2d", "ACCoNet_VGG_models.BAB_Decoder"], "methods", ["home.repos.pwc.inspect_result.mathlee_acconet.pytorch_iou.__init__.IOU.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", "=", "512", ")", ":", "\n", "        ", "super", "(", "decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "\n", "self", ".", "upsample", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n", "self", ".", "decoder5", "=", "nn", ".", "Sequential", "(", "\n", "BAB_Decoder", "(", "512", ",", "512", ",", "512", ",", "3", ",", "2", ")", ",", "\n", "nn", ".", "Dropout", "(", "0.5", ")", ",", "\n", "TransBasicConv2d", "(", "512", ",", "512", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "\n", "padding", "=", "0", ",", "dilation", "=", "1", ",", "bias", "=", "False", ")", "\n", ")", "\n", "self", ".", "S5", "=", "nn", ".", "Conv2d", "(", "512", ",", "1", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "decoder4", "=", "nn", ".", "Sequential", "(", "\n", "BAB_Decoder", "(", "1024", ",", "512", ",", "256", ",", "3", ",", "2", ")", ",", "\n", "nn", ".", "Dropout", "(", "0.5", ")", ",", "\n", "TransBasicConv2d", "(", "256", ",", "256", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "\n", "padding", "=", "0", ",", "dilation", "=", "1", ",", "bias", "=", "False", ")", "\n", ")", "\n", "self", ".", "S4", "=", "nn", ".", "Conv2d", "(", "256", ",", "1", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "decoder3", "=", "nn", ".", "Sequential", "(", "\n", "BAB_Decoder", "(", "512", ",", "256", ",", "128", ",", "5", ",", "3", ")", ",", "\n", "nn", ".", "Dropout", "(", "0.5", ")", ",", "\n", "TransBasicConv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "\n", "padding", "=", "0", ",", "dilation", "=", "1", ",", "bias", "=", "False", ")", "\n", ")", "\n", "self", ".", "S3", "=", "nn", ".", "Conv2d", "(", "128", ",", "1", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "decoder2", "=", "nn", ".", "Sequential", "(", "\n", "BAB_Decoder", "(", "256", ",", "128", ",", "64", ",", "5", ",", "3", ")", ",", "\n", "nn", ".", "Dropout", "(", "0.5", ")", ",", "\n", "TransBasicConv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "\n", "padding", "=", "0", ",", "dilation", "=", "1", ",", "bias", "=", "False", ")", "\n", ")", "\n", "self", ".", "S2", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "decoder1", "=", "nn", ".", "Sequential", "(", "\n", "BAB_Decoder", "(", "128", ",", "64", ",", "32", ",", "5", ",", "3", ")", "\n", ")", "\n", "self", ".", "S1", "=", "nn", ".", "Conv2d", "(", "32", ",", "1", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ACCoNet_VGG_models.decoder.forward": [[265, 283], ["ACCoNet_VGG_models.decoder.decoder5", "ACCoNet_VGG_models.decoder.S5", "ACCoNet_VGG_models.decoder.decoder4", "ACCoNet_VGG_models.decoder.S4", "ACCoNet_VGG_models.decoder.decoder3", "ACCoNet_VGG_models.decoder.S3", "ACCoNet_VGG_models.decoder.decoder2", "ACCoNet_VGG_models.decoder.S2", "ACCoNet_VGG_models.decoder.decoder1", "ACCoNet_VGG_models.decoder.S1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x5", ",", "x4", ",", "x3", ",", "x2", ",", "x1", ")", ":", "\n", "# x5: 1/16, 512; x4: 1/8, 512; x3: 1/4, 256; x2: 1/2, 128; x1: 1/1, 64", "\n", "        ", "x5_up", "=", "self", ".", "decoder5", "(", "x5", ")", "\n", "s5", "=", "self", ".", "S5", "(", "x5_up", ")", "\n", "\n", "x4_up", "=", "self", ".", "decoder4", "(", "torch", ".", "cat", "(", "(", "x4", ",", "x5_up", ")", ",", "1", ")", ")", "\n", "s4", "=", "self", ".", "S4", "(", "x4_up", ")", "\n", "\n", "x3_up", "=", "self", ".", "decoder3", "(", "torch", ".", "cat", "(", "(", "x3", ",", "x4_up", ")", ",", "1", ")", ")", "\n", "s3", "=", "self", ".", "S3", "(", "x3_up", ")", "\n", "\n", "x2_up", "=", "self", ".", "decoder2", "(", "torch", ".", "cat", "(", "(", "x2", ",", "x3_up", ")", ",", "1", ")", ")", "\n", "s2", "=", "self", ".", "S2", "(", "x2_up", ")", "\n", "\n", "x1_up", "=", "self", ".", "decoder1", "(", "torch", ".", "cat", "(", "(", "x1", ",", "x2_up", ")", ",", "1", ")", ")", "\n", "s1", "=", "self", ".", "S1", "(", "x1_up", ")", "\n", "\n", "return", "s1", ",", "s2", ",", "s3", ",", "s4", ",", "s5", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ACCoNet_VGG_models.ACCoNet_VGG.__init__": [[286, 305], ["torch.Module.__init__", "vgg.VGG", "ACCoNet_VGG_models.ACCoM5", "ACCoNet_VGG_models.ACCoM", "ACCoNet_VGG_models.ACCoM", "ACCoNet_VGG_models.ACCoM", "ACCoNet_VGG_models.ACCoM1", "ACCoNet_VGG_models.decoder", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.mathlee_acconet.pytorch_iou.__init__.IOU.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", "=", "32", ")", ":", "\n", "        ", "super", "(", "ACCoNet_VGG", ",", "self", ")", ".", "__init__", "(", ")", "\n", "#Backbone model", "\n", "self", ".", "vgg", "=", "VGG", "(", "'rgb'", ")", "\n", "\n", "self", ".", "ACCoM5", "=", "ACCoM5", "(", "512", ")", "\n", "self", ".", "ACCoM4", "=", "ACCoM", "(", "512", ")", "\n", "self", ".", "ACCoM3", "=", "ACCoM", "(", "256", ")", "\n", "self", ".", "ACCoM2", "=", "ACCoM", "(", "128", ")", "\n", "self", ".", "ACCoM1", "=", "ACCoM1", "(", "64", ")", "\n", "\n", "# self.agg2_rgbd = aggregation(channel)", "\n", "self", ".", "decoder_rgb", "=", "decoder", "(", "512", ")", "\n", "\n", "self", ".", "upsample8", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "8", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "self", ".", "upsample4", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "4", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "self", ".", "upsample2", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ACCoNet_VGG_models.ACCoNet_VGG.forward": [[307, 328], ["ACCoNet_VGG_models.ACCoNet_VGG.vgg.conv1", "ACCoNet_VGG_models.ACCoNet_VGG.vgg.conv2", "ACCoNet_VGG_models.ACCoNet_VGG.vgg.conv3", "ACCoNet_VGG_models.ACCoNet_VGG.vgg.conv4", "ACCoNet_VGG_models.ACCoNet_VGG.vgg.conv5", "ACCoNet_VGG_models.ACCoNet_VGG.ACCoM5", "ACCoNet_VGG_models.ACCoNet_VGG.ACCoM4", "ACCoNet_VGG_models.ACCoNet_VGG.ACCoM3", "ACCoNet_VGG_models.ACCoNet_VGG.ACCoM2", "ACCoNet_VGG_models.ACCoNet_VGG.ACCoM1", "ACCoNet_VGG_models.ACCoNet_VGG.decoder_rgb", "ACCoNet_VGG_models.ACCoNet_VGG.upsample2", "ACCoNet_VGG_models.ACCoNet_VGG.upsample4", "ACCoNet_VGG_models.ACCoNet_VGG.upsample8", "ACCoNet_VGG_models.ACCoNet_VGG.sigmoid", "ACCoNet_VGG_models.ACCoNet_VGG.sigmoid", "ACCoNet_VGG_models.ACCoNet_VGG.sigmoid", "ACCoNet_VGG_models.ACCoNet_VGG.sigmoid", "ACCoNet_VGG_models.ACCoNet_VGG.sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x_rgb", ")", ":", "\n", "        ", "x1_rgb", "=", "self", ".", "vgg", ".", "conv1", "(", "x_rgb", ")", "\n", "x2_rgb", "=", "self", ".", "vgg", ".", "conv2", "(", "x1_rgb", ")", "\n", "x3_rgb", "=", "self", ".", "vgg", ".", "conv3", "(", "x2_rgb", ")", "\n", "x4_rgb", "=", "self", ".", "vgg", ".", "conv4", "(", "x3_rgb", ")", "\n", "x5_rgb", "=", "self", ".", "vgg", ".", "conv5", "(", "x4_rgb", ")", "\n", "\n", "# up means update", "\n", "x5_ACCoM", "=", "self", ".", "ACCoM5", "(", "x4_rgb", ",", "x5_rgb", ")", "\n", "x4_ACCoM", "=", "self", ".", "ACCoM4", "(", "x3_rgb", ",", "x4_rgb", ",", "x5_rgb", ")", "\n", "x3_ACCoM", "=", "self", ".", "ACCoM3", "(", "x2_rgb", ",", "x3_rgb", ",", "x4_rgb", ")", "\n", "x2_ACCoM", "=", "self", ".", "ACCoM2", "(", "x1_rgb", ",", "x2_rgb", ",", "x3_rgb", ")", "\n", "x1_ACCoM", "=", "self", ".", "ACCoM1", "(", "x1_rgb", ",", "x2_rgb", ")", "\n", "\n", "s1", ",", "s2", ",", "s3", ",", "s4", ",", "s5", "=", "self", ".", "decoder_rgb", "(", "x5_ACCoM", ",", "x4_ACCoM", ",", "x3_ACCoM", ",", "x2_ACCoM", ",", "x1_ACCoM", ")", "\n", "\n", "s3", "=", "self", ".", "upsample2", "(", "s3", ")", "\n", "s4", "=", "self", ".", "upsample4", "(", "s4", ")", "\n", "s5", "=", "self", ".", "upsample8", "(", "s5", ")", "\n", "\n", "return", "s1", ",", "s2", ",", "s3", ",", "s4", ",", "s5", ",", "self", ".", "sigmoid", "(", "s1", ")", ",", "self", ".", "sigmoid", "(", "s2", ")", ",", "self", ".", "sigmoid", "(", "s3", ")", ",", "self", ".", "sigmoid", "(", "s4", ")", ",", "self", ".", "sigmoid", "(", "s5", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ResNet50.BasicBlock.__init__": [[30, 39], ["torch.Module.__init__", "ResNet50.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "ResNet50.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.mathlee_acconet.pytorch_iou.__init__.IOU.__init__", "home.repos.pwc.inspect_result.mathlee_acconet.model.ResNet50.conv3x3", "home.repos.pwc.inspect_result.mathlee_acconet.model.ResNet50.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ResNet50.BasicBlock.forward": [[40, 57], ["ResNet50.BasicBlock.conv1", "ResNet50.BasicBlock.bn1", "ResNet50.BasicBlock.relu", "ResNet50.BasicBlock.conv2", "ResNet50.BasicBlock.bn2", "ResNet50.BasicBlock.relu", "ResNet50.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ResNet50.Bottleneck.__init__": [[62, 73], ["torch.Module.__init__", "ResNet50.conv1x1", "torch.BatchNorm2d", "torch.BatchNorm2d", "ResNet50.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "ResNet50.conv1x1", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.mathlee_acconet.pytorch_iou.__init__.IOU.__init__", "home.repos.pwc.inspect_result.mathlee_acconet.model.ResNet50.conv1x1", "home.repos.pwc.inspect_result.mathlee_acconet.model.ResNet50.conv3x3", "home.repos.pwc.inspect_result.mathlee_acconet.model.ResNet50.conv1x1"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv1x1", "(", "inplanes", ",", "planes", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "conv1x1", "(", "planes", ",", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "self", ".", "expansion", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ResNet50.Bottleneck.forward": [[74, 95], ["ResNet50.Bottleneck.conv1", "ResNet50.Bottleneck.bn1", "ResNet50.Bottleneck.relu", "ResNet50.Bottleneck.conv2", "ResNet50.Bottleneck.bn2", "ResNet50.Bottleneck.relu", "ResNet50.Bottleneck.conv3", "ResNet50.Bottleneck.bn3", "ResNet50.Bottleneck.relu", "ResNet50.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "identity", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "identity", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "identity", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ResNet50.ResNet.__init__": [[98, 126], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "ResNet50.ResNet._make_layer", "ResNet50.ResNet._make_layer", "ResNet50.ResNet._make_layer", "ResNet50.ResNet._make_layer", "ResNet50.ResNet.modules", "isinstance", "ResNet50.ResNet.modules", "torch.init.kaiming_normal_", "torch.init.kaiming_normal_", "isinstance", "isinstance", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "torch.init.constant_", "isinstance", "torch.init.constant_", "torch.init.constant_"], "methods", ["home.repos.pwc.inspect_result.mathlee_acconet.pytorch_iou.__init__.IOU.__init__", "home.repos.pwc.inspect_result.mathlee_acconet.model.ResNet50.ResNet._make_layer", "home.repos.pwc.inspect_result.mathlee_acconet.model.ResNet50.ResNet._make_layer", "home.repos.pwc.inspect_result.mathlee_acconet.model.ResNet50.ResNet._make_layer", "home.repos.pwc.inspect_result.mathlee_acconet.model.ResNet50.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "zero_init_residual", "=", "False", ")", ":", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "inplanes", "=", "64", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ")", "# 6", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ")", "# 3", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ",", "mode", "=", "\"fan_out\"", ",", "nonlinearity", "=", "\"relu\"", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n", "# Zero-initialize the last BN in each residual branch,", "\n", "# so that the residual branch starts with zeros, and each residual block behaves like an identity.", "\n", "# This improves the model by 0.2~0.3% according to https://arxiv.org/abs/1706.02677", "\n", "", "", "if", "zero_init_residual", ":", "\n", "            ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "m", ",", "Bottleneck", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn3", ".", "weight", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "BasicBlock", ")", ":", "\n", "                    ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn2", ".", "weight", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ResNet50.ResNet._make_layer": [[127, 142], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "ResNet50.conv1x1", "torch.BatchNorm2d", "torch.BatchNorm2d", "block"], "methods", ["home.repos.pwc.inspect_result.mathlee_acconet.model.ResNet50.conv1x1"], ["", "", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "conv1x1", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "stride", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "_", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ResNet50.ResNet.forward": [[143, 155], ["ResNet50.ResNet.conv1", "ResNet50.ResNet.bn1", "ResNet50.ResNet.relu", "ResNet50.ResNet.maxpool", "ResNet50.ResNet.layer1", "ResNet50.ResNet.layer2", "ResNet50.ResNet.layer3", "ResNet50.ResNet.layer4"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ResNet50.conv3x3": [[17, 20], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"3x3 convolution with padding\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ResNet50.conv1x1": [[22, 25], ["torch.Conv2d"], "function", ["None"], ["", "def", "conv1x1", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"\"\"1x1 convolution\"\"\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ResNet50.resnet18": [[157, 175], ["ResNet50.ResNet", "torch.load_url", "ResNet.state_dict", "model.state_dict.update", "ResNet.load_state_dict", "model_zoo.load_url.items"], "function", ["None"], ["", "", "def", "resnet18", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-18 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "pretrained_dict", "=", "model_zoo", ".", "load_url", "(", "model_urls", "[", "\"resnet18\"", "]", ")", "\n", "\n", "model_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "# 1. filter out unnecessary keys", "\n", "pretrained_dict", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "pretrained_dict", ".", "items", "(", ")", "if", "k", "in", "model_dict", "}", "\n", "# 2. overwrite entries in the existing state dict", "\n", "model_dict", ".", "update", "(", "pretrained_dict", ")", "\n", "# 3. load the new state dict", "\n", "model", ".", "load_state_dict", "(", "model_dict", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ResNet50.resnet34": [[177, 195], ["ResNet50.ResNet", "torch.load_url", "ResNet.state_dict", "model.state_dict.update", "ResNet.load_state_dict", "model_zoo.load_url.items"], "function", ["None"], ["", "def", "resnet34", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-34 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "pretrained_dict", "=", "model_zoo", ".", "load_url", "(", "model_urls", "[", "\"resnet34\"", "]", ")", "\n", "\n", "model_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "# 1. filter out unnecessary keys", "\n", "pretrained_dict", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "pretrained_dict", ".", "items", "(", ")", "if", "k", "in", "model_dict", "}", "\n", "# 2. overwrite entries in the existing state dict", "\n", "model_dict", ".", "update", "(", "pretrained_dict", ")", "\n", "# 3. load the new state dict", "\n", "model", ".", "load_state_dict", "(", "model_dict", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ResNet50.resnet50": [[197, 217], ["ResNet50.ResNet", "torch.load_url", "ResNet.state_dict", "model.state_dict.update", "ResNet.load_state_dict", "model_zoo.load_url.items"], "function", ["None"], ["", "def", "resnet50", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-50 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "\n", "if", "pretrained", ":", "\n", "        ", "pretrained_dict", "=", "model_zoo", ".", "load_url", "(", "model_urls", "[", "\"resnet50\"", "]", ")", "\n", "\n", "model_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "# 1. filter out unnecessary keys", "\n", "pretrained_dict", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "pretrained_dict", ".", "items", "(", ")", "if", "k", "in", "model_dict", "}", "\n", "# 2. overwrite entries in the existing state dict", "\n", "model_dict", ".", "update", "(", "pretrained_dict", ")", "\n", "# 3. load the new state dict", "\n", "model", ".", "load_state_dict", "(", "model_dict", ")", "\n", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ResNet50.resnet101": [[219, 237], ["ResNet50.ResNet", "torch.load_url", "ResNet.state_dict", "model.state_dict.update", "ResNet.load_state_dict", "model_zoo.load_url.items"], "function", ["None"], ["", "def", "resnet101", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-101 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "pretrained_dict", "=", "model_zoo", ".", "load_url", "(", "model_urls", "[", "\"resnet101\"", "]", ")", "\n", "\n", "model_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "# 1. filter out unnecessary keys", "\n", "pretrained_dict", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "pretrained_dict", ".", "items", "(", ")", "if", "k", "in", "model_dict", "}", "\n", "# 2. overwrite entries in the existing state dict", "\n", "model_dict", ".", "update", "(", "pretrained_dict", ")", "\n", "# 3. load the new state dict", "\n", "model", ".", "load_state_dict", "(", "model_dict", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ResNet50.resnet152": [[239, 259], ["ResNet50.ResNet", "torch.load_url", "ResNet.state_dict", "model.state_dict.update", "ResNet.load_state_dict", "model_zoo.load_url.items"], "function", ["None"], ["", "def", "resnet152", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-152 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "\n", "if", "pretrained", ":", "\n", "        ", "pretrained_dict", "=", "model_zoo", ".", "load_url", "(", "model_urls", "[", "\"resnet152\"", "]", ")", "\n", "\n", "model_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "# 1. filter out unnecessary keys", "\n", "pretrained_dict", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "pretrained_dict", ".", "items", "(", ")", "if", "k", "in", "model_dict", "}", "\n", "# 2. overwrite entries in the existing state dict", "\n", "model_dict", ".", "update", "(", "pretrained_dict", ")", "\n", "# 3. load the new state dict", "\n", "model", ".", "load_state_dict", "(", "model_dict", ")", "\n", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ResNet50.Backbone_ResNet50_in3": [[261, 270], ["ResNet50.resnet50", "torch.Sequential", "torch.Sequential", "list", "list", "resnet50.children", "resnet50.children"], "function", ["home.repos.pwc.inspect_result.mathlee_acconet.model.ResNet50.resnet50"], ["", "def", "Backbone_ResNet50_in3", "(", ")", ":", "\n", "    ", "net", "=", "resnet50", "(", "pretrained", "=", "True", ")", "\n", "div_2", "=", "nn", ".", "Sequential", "(", "*", "list", "(", "net", ".", "children", "(", ")", ")", "[", ":", "3", "]", ")", "\n", "div_4", "=", "nn", ".", "Sequential", "(", "*", "list", "(", "net", ".", "children", "(", ")", ")", "[", "3", ":", "5", "]", ")", "\n", "div_8", "=", "net", ".", "layer2", "\n", "div_16", "=", "net", ".", "layer3", "\n", "div_32", "=", "net", ".", "layer4", "\n", "\n", "return", "div_2", ",", "div_4", ",", "div_8", ",", "div_16", ",", "div_32", "\n", "", ""]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ACCoNet_Res_models.BasicConv2d.__init__": [[8, 15], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.mathlee_acconet.pytorch_iou.__init__.IOU.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ",", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "dilation", "=", "1", ")", ":", "\n", "        ", "super", "(", "BasicConv2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "\n", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "dilation", "=", "dilation", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "out_planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ACCoNet_Res_models.BasicConv2d.forward": [[16, 21], ["ACCoNet_Res_models.BasicConv2d.conv", "ACCoNet_Res_models.BasicConv2d.bn", "ACCoNet_Res_models.BasicConv2d.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "x", "=", "self", ".", "bn", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ACCoNet_Res_models.TransBasicConv2d.__init__": [[23, 30], ["torch.Module.__init__", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.ConvTranspose2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.mathlee_acconet.pytorch_iou.__init__.IOU.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "dilation", "=", "1", ",", "bias", "=", "False", ")", ":", "\n", "        ", "super", "(", "TransBasicConv2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "Deconv", "=", "nn", ".", "ConvTranspose2d", "(", "in_planes", ",", "out_planes", ",", "\n", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "dilation", "=", "dilation", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "out_planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ACCoNet_Res_models.TransBasicConv2d.forward": [[31, 36], ["ACCoNet_Res_models.TransBasicConv2d.Deconv", "ACCoNet_Res_models.TransBasicConv2d.bn", "ACCoNet_Res_models.TransBasicConv2d.relu"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "Deconv", "(", "x", ")", "\n", "x", "=", "self", ".", "bn", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ACCoNet_Res_models.ChannelAttention.__init__": [[39, 49], ["torch.Module.__init__", "torch.AdaptiveMaxPool2d", "torch.AdaptiveMaxPool2d", "torch.AdaptiveMaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.mathlee_acconet.pytorch_iou.__init__.IOU.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "ratio", "=", "16", ")", ":", "\n", "        ", "super", "(", "ChannelAttention", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "max_pool", "=", "nn", ".", "AdaptiveMaxPool2d", "(", "1", ")", "\n", "\n", "self", ".", "fc1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "in_planes", "//", "16", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "relu1", "=", "nn", ".", "ReLU", "(", ")", "\n", "self", ".", "fc2", "=", "nn", ".", "Conv2d", "(", "in_planes", "//", "16", ",", "in_planes", ",", "1", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ACCoNet_Res_models.ChannelAttention.forward": [[50, 54], ["ACCoNet_Res_models.ChannelAttention.fc2", "ACCoNet_Res_models.ChannelAttention.sigmoid", "ACCoNet_Res_models.ChannelAttention.relu1", "ACCoNet_Res_models.ChannelAttention.fc1", "ACCoNet_Res_models.ChannelAttention.max_pool"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "max_out", "=", "self", ".", "fc2", "(", "self", ".", "relu1", "(", "self", ".", "fc1", "(", "self", ".", "max_pool", "(", "x", ")", ")", ")", ")", "\n", "out", "=", "max_out", "\n", "return", "self", ".", "sigmoid", "(", "out", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ACCoNet_Res_models.SpatialAttention.__init__": [[57, 65], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.mathlee_acconet.pytorch_iou.__init__.IOU.__init__"], ["    ", "def", "__init__", "(", "self", ",", "kernel_size", "=", "7", ")", ":", "\n", "        ", "super", "(", "SpatialAttention", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "assert", "kernel_size", "in", "(", "3", ",", "7", ")", ",", "'kernel size must be 3 or 7'", "\n", "padding", "=", "3", "if", "kernel_size", "==", "7", "else", "1", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "1", ",", "1", ",", "kernel_size", ",", "padding", "=", "padding", ",", "bias", "=", "False", ")", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ACCoNet_Res_models.SpatialAttention.forward": [[66, 71], ["torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "torch.max", "ACCoNet_Res_models.SpatialAttention.conv1", "ACCoNet_Res_models.SpatialAttention.sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "max_out", ",", "_", "=", "torch", ".", "max", "(", "x", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "x", "=", "max_out", "\n", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "return", "self", ".", "sigmoid", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ACCoNet_Res_models.ACCoM_5.__init__": [[74, 91], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.ReLU", "ACCoNet_Res_models.BasicConv2d", "ACCoNet_Res_models.BasicConv2d", "ACCoNet_Res_models.BasicConv2d", "ACCoNet_Res_models.BasicConv2d", "ACCoNet_Res_models.BasicConv2d", "ACCoNet_Res_models.ChannelAttention", "ACCoNet_Res_models.SpatialAttention", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "ACCoNet_Res_models.SpatialAttention"], "methods", ["home.repos.pwc.inspect_result.mathlee_acconet.pytorch_iou.__init__.IOU.__init__"], ["    ", "def", "__init__", "(", "self", ",", "cur_channel", ")", ":", "\n", "        ", "super", "(", "ACCoM_5", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "\n", "# current conv", "\n", "self", ".", "cur_b1", "=", "BasicConv2d", "(", "cur_channel", ",", "cur_channel", ",", "3", ",", "padding", "=", "1", ",", "dilation", "=", "1", ")", "\n", "self", ".", "cur_b2", "=", "BasicConv2d", "(", "cur_channel", ",", "cur_channel", ",", "3", ",", "padding", "=", "2", ",", "dilation", "=", "2", ")", "\n", "self", ".", "cur_b3", "=", "BasicConv2d", "(", "cur_channel", ",", "cur_channel", ",", "3", ",", "padding", "=", "3", ",", "dilation", "=", "3", ")", "\n", "self", ".", "cur_b4", "=", "BasicConv2d", "(", "cur_channel", ",", "cur_channel", ",", "3", ",", "padding", "=", "4", ",", "dilation", "=", "4", ")", "\n", "\n", "self", ".", "cur_all", "=", "BasicConv2d", "(", "4", "*", "cur_channel", ",", "cur_channel", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "cur_all_ca", "=", "ChannelAttention", "(", "cur_channel", ")", "\n", "self", ".", "cur_all_sa", "=", "SpatialAttention", "(", ")", "\n", "\n", "# previous conv", "\n", "self", ".", "downsample2", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ")", "\n", "self", ".", "pre_sa", "=", "SpatialAttention", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ACCoNet_Res_models.ACCoM_5.forward": [[97, 114], ["ACCoNet_Res_models.ACCoM_5.cur_b1", "ACCoNet_Res_models.ACCoM_5.cur_b2", "ACCoNet_Res_models.ACCoM_5.cur_b3", "ACCoNet_Res_models.ACCoM_5.cur_b4", "ACCoNet_Res_models.ACCoM_5.cur_all", "ACCoNet_Res_models.ACCoM_5.mul", "ACCoNet_Res_models.ACCoM_5.mul", "ACCoNet_Res_models.ACCoM_5.downsample2", "ACCoNet_Res_models.ACCoM_5.mul", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "ACCoNet_Res_models.ACCoM_5.cur_all_ca", "ACCoNet_Res_models.ACCoM_5.cur_all_sa", "ACCoNet_Res_models.ACCoM_5.pre_sa"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x_pre", ",", "x_cur", ")", ":", "\n", "# current conv", "\n", "        ", "x_cur_1", "=", "self", ".", "cur_b1", "(", "x_cur", ")", "\n", "x_cur_2", "=", "self", ".", "cur_b2", "(", "x_cur", ")", "\n", "x_cur_3", "=", "self", ".", "cur_b3", "(", "x_cur", ")", "\n", "x_cur_4", "=", "self", ".", "cur_b4", "(", "x_cur", ")", "\n", "x_cur_all", "=", "self", ".", "cur_all", "(", "torch", ".", "cat", "(", "(", "x_cur_1", ",", "x_cur_2", ",", "x_cur_3", ",", "x_cur_4", ")", ",", "1", ")", ")", "\n", "cur_all_ca", "=", "x_cur_all", ".", "mul", "(", "self", ".", "cur_all_ca", "(", "x_cur_all", ")", ")", "\n", "cur_all_sa", "=", "x_cur_all", ".", "mul", "(", "self", ".", "cur_all_sa", "(", "cur_all_ca", ")", ")", "\n", "\n", "# previois conv", "\n", "x_pre", "=", "self", ".", "downsample2", "(", "x_pre", ")", "\n", "pre_sa", "=", "x_cur_all", ".", "mul", "(", "self", ".", "pre_sa", "(", "x_pre", ")", ")", "\n", "\n", "x_LocAndGlo", "=", "cur_all_sa", "+", "pre_sa", "+", "x_cur", "\n", "\n", "return", "x_LocAndGlo", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ACCoNet_Res_models.ACCoM_1.__init__": [[117, 134], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.ReLU", "ACCoNet_Res_models.BasicConv2d", "ACCoNet_Res_models.BasicConv2d", "ACCoNet_Res_models.BasicConv2d", "ACCoNet_Res_models.BasicConv2d", "ACCoNet_Res_models.BasicConv2d", "ACCoNet_Res_models.ChannelAttention", "ACCoNet_Res_models.SpatialAttention", "torch.Upsample", "torch.Upsample", "torch.Upsample", "ACCoNet_Res_models.SpatialAttention"], "methods", ["home.repos.pwc.inspect_result.mathlee_acconet.pytorch_iou.__init__.IOU.__init__"], ["    ", "def", "__init__", "(", "self", ",", "cur_channel", ")", ":", "\n", "        ", "super", "(", "ACCoM_1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "\n", "# current conv", "\n", "self", ".", "cur_b1", "=", "BasicConv2d", "(", "cur_channel", ",", "cur_channel", ",", "3", ",", "padding", "=", "1", ",", "dilation", "=", "1", ")", "\n", "self", ".", "cur_b2", "=", "BasicConv2d", "(", "cur_channel", ",", "cur_channel", ",", "3", ",", "padding", "=", "2", ",", "dilation", "=", "2", ")", "\n", "self", ".", "cur_b3", "=", "BasicConv2d", "(", "cur_channel", ",", "cur_channel", ",", "3", ",", "padding", "=", "3", ",", "dilation", "=", "3", ")", "\n", "self", ".", "cur_b4", "=", "BasicConv2d", "(", "cur_channel", ",", "cur_channel", ",", "3", ",", "padding", "=", "4", ",", "dilation", "=", "4", ")", "\n", "\n", "self", ".", "cur_all", "=", "BasicConv2d", "(", "4", "*", "cur_channel", ",", "cur_channel", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "cur_all_ca", "=", "ChannelAttention", "(", "cur_channel", ")", "\n", "self", ".", "cur_all_sa", "=", "SpatialAttention", "(", ")", "\n", "\n", "# latter conv", "\n", "self", ".", "upsample2", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "self", ".", "lat_sa", "=", "SpatialAttention", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ACCoNet_Res_models.ACCoM_1.forward": [[140, 157], ["ACCoNet_Res_models.ACCoM_1.cur_b1", "ACCoNet_Res_models.ACCoM_1.cur_b2", "ACCoNet_Res_models.ACCoM_1.cur_b3", "ACCoNet_Res_models.ACCoM_1.cur_b4", "ACCoNet_Res_models.ACCoM_1.cur_all", "ACCoNet_Res_models.ACCoM_1.mul", "ACCoNet_Res_models.ACCoM_1.mul", "ACCoNet_Res_models.ACCoM_1.upsample2", "ACCoNet_Res_models.ACCoM_1.mul", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "ACCoNet_Res_models.ACCoM_1.cur_all_ca", "ACCoNet_Res_models.ACCoM_1.cur_all_sa", "ACCoNet_Res_models.ACCoM_1.lat_sa"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x_cur", ",", "x_lat", ")", ":", "\n", "# current conv", "\n", "        ", "x_cur_1", "=", "self", ".", "cur_b1", "(", "x_cur", ")", "\n", "x_cur_2", "=", "self", ".", "cur_b2", "(", "x_cur", ")", "\n", "x_cur_3", "=", "self", ".", "cur_b3", "(", "x_cur", ")", "\n", "x_cur_4", "=", "self", ".", "cur_b4", "(", "x_cur", ")", "\n", "x_cur_all", "=", "self", ".", "cur_all", "(", "torch", ".", "cat", "(", "(", "x_cur_1", ",", "x_cur_2", ",", "x_cur_3", ",", "x_cur_4", ")", ",", "1", ")", ")", "\n", "cur_all_ca", "=", "x_cur_all", ".", "mul", "(", "self", ".", "cur_all_ca", "(", "x_cur_all", ")", ")", "\n", "cur_all_sa", "=", "x_cur_all", ".", "mul", "(", "self", ".", "cur_all_sa", "(", "cur_all_ca", ")", ")", "\n", "\n", "# latter conv", "\n", "x_lat", "=", "self", ".", "upsample2", "(", "x_lat", ")", "\n", "lat_sa", "=", "x_cur_all", ".", "mul", "(", "self", ".", "lat_sa", "(", "x_lat", ")", ")", "\n", "\n", "x_LocAndGlo", "=", "cur_all_sa", "+", "lat_sa", "+", "x_cur", "\n", "\n", "return", "x_LocAndGlo", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ACCoNet_Res_models.ACCoM.__init__": [[160, 181], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.ReLU", "ACCoNet_Res_models.BasicConv2d", "ACCoNet_Res_models.BasicConv2d", "ACCoNet_Res_models.BasicConv2d", "ACCoNet_Res_models.BasicConv2d", "ACCoNet_Res_models.BasicConv2d", "ACCoNet_Res_models.ChannelAttention", "ACCoNet_Res_models.SpatialAttention", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "ACCoNet_Res_models.SpatialAttention", "torch.Upsample", "torch.Upsample", "torch.Upsample", "ACCoNet_Res_models.SpatialAttention"], "methods", ["home.repos.pwc.inspect_result.mathlee_acconet.pytorch_iou.__init__.IOU.__init__"], ["    ", "def", "__init__", "(", "self", ",", "cur_channel", ")", ":", "\n", "        ", "super", "(", "ACCoM", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "\n", "# current conv", "\n", "self", ".", "cur_b1", "=", "BasicConv2d", "(", "cur_channel", ",", "cur_channel", ",", "3", ",", "padding", "=", "1", ",", "dilation", "=", "1", ")", "\n", "self", ".", "cur_b2", "=", "BasicConv2d", "(", "cur_channel", ",", "cur_channel", ",", "3", ",", "padding", "=", "2", ",", "dilation", "=", "2", ")", "\n", "self", ".", "cur_b3", "=", "BasicConv2d", "(", "cur_channel", ",", "cur_channel", ",", "3", ",", "padding", "=", "3", ",", "dilation", "=", "3", ")", "\n", "self", ".", "cur_b4", "=", "BasicConv2d", "(", "cur_channel", ",", "cur_channel", ",", "3", ",", "padding", "=", "4", ",", "dilation", "=", "4", ")", "\n", "\n", "self", ".", "cur_all", "=", "BasicConv2d", "(", "4", "*", "cur_channel", ",", "cur_channel", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "cur_all_ca", "=", "ChannelAttention", "(", "cur_channel", ")", "\n", "self", ".", "cur_all_sa", "=", "SpatialAttention", "(", ")", "\n", "\n", "# previous conv", "\n", "self", ".", "downsample2", "=", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ")", "\n", "self", ".", "pre_sa", "=", "SpatialAttention", "(", ")", "\n", "\n", "# latter conv", "\n", "self", ".", "upsample2", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "self", ".", "lat_sa", "=", "SpatialAttention", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ACCoNet_Res_models.ACCoM.forward": [[187, 208], ["ACCoNet_Res_models.ACCoM.cur_b1", "ACCoNet_Res_models.ACCoM.cur_b2", "ACCoNet_Res_models.ACCoM.cur_b3", "ACCoNet_Res_models.ACCoM.cur_b4", "ACCoNet_Res_models.ACCoM.cur_all", "ACCoNet_Res_models.ACCoM.mul", "ACCoNet_Res_models.ACCoM.mul", "ACCoNet_Res_models.ACCoM.downsample2", "ACCoNet_Res_models.ACCoM.mul", "ACCoNet_Res_models.ACCoM.upsample2", "ACCoNet_Res_models.ACCoM.mul", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "ACCoNet_Res_models.ACCoM.cur_all_ca", "ACCoNet_Res_models.ACCoM.cur_all_sa", "ACCoNet_Res_models.ACCoM.pre_sa", "ACCoNet_Res_models.ACCoM.lat_sa"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x_pre", ",", "x_cur", ",", "x_lat", ")", ":", "\n", "# current conv", "\n", "        ", "x_cur_1", "=", "self", ".", "cur_b1", "(", "x_cur", ")", "\n", "x_cur_2", "=", "self", ".", "cur_b2", "(", "x_cur", ")", "\n", "x_cur_3", "=", "self", ".", "cur_b3", "(", "x_cur", ")", "\n", "x_cur_4", "=", "self", ".", "cur_b4", "(", "x_cur", ")", "\n", "x_cur_all", "=", "self", ".", "cur_all", "(", "torch", ".", "cat", "(", "(", "x_cur_1", ",", "x_cur_2", ",", "x_cur_3", ",", "x_cur_4", ")", ",", "1", ")", ")", "\n", "cur_all_ca", "=", "x_cur_all", ".", "mul", "(", "self", ".", "cur_all_ca", "(", "x_cur_all", ")", ")", "\n", "cur_all_sa", "=", "x_cur_all", ".", "mul", "(", "self", ".", "cur_all_sa", "(", "cur_all_ca", ")", ")", "\n", "\n", "# previois conv", "\n", "x_pre", "=", "self", ".", "downsample2", "(", "x_pre", ")", "\n", "pre_sa", "=", "x_cur_all", ".", "mul", "(", "self", ".", "pre_sa", "(", "x_pre", ")", ")", "\n", "\n", "# latter conv", "\n", "x_lat", "=", "self", ".", "upsample2", "(", "x_lat", ")", "\n", "lat_sa", "=", "x_cur_all", ".", "mul", "(", "self", ".", "lat_sa", "(", "x_lat", ")", ")", "\n", "\n", "x_LocAndGlo", "=", "cur_all_sa", "+", "pre_sa", "+", "lat_sa", "+", "x_cur", "\n", "\n", "return", "x_LocAndGlo", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ACCoNet_Res_models.BAB_Decoder.__init__": [[211, 220], ["torch.Module.__init__", "ACCoNet_Res_models.BasicConv2d", "ACCoNet_Res_models.BasicConv2d", "ACCoNet_Res_models.BasicConv2d", "ACCoNet_Res_models.BasicConv2d", "ACCoNet_Res_models.BasicConv2d", "ACCoNet_Res_models.BasicConv2d"], "methods", ["home.repos.pwc.inspect_result.mathlee_acconet.pytorch_iou.__init__.IOU.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel_1", "=", "1024", ",", "channel_2", "=", "512", ",", "channel_3", "=", "256", ",", "dilation_1", "=", "3", ",", "dilation_2", "=", "2", ")", ":", "\n", "        ", "super", "(", "BAB_Decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "BasicConv2d", "(", "channel_1", ",", "channel_2", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv1_Dila", "=", "BasicConv2d", "(", "channel_2", ",", "channel_2", ",", "3", ",", "padding", "=", "dilation_1", ",", "dilation", "=", "dilation_1", ")", "\n", "self", ".", "conv2", "=", "BasicConv2d", "(", "channel_2", ",", "channel_2", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv2_Dila", "=", "BasicConv2d", "(", "channel_2", ",", "channel_2", ",", "3", ",", "padding", "=", "dilation_2", ",", "dilation", "=", "dilation_2", ")", "\n", "self", ".", "conv3", "=", "BasicConv2d", "(", "channel_2", ",", "channel_2", ",", "3", ",", "padding", "=", "1", ")", "\n", "self", ".", "conv_fuse", "=", "BasicConv2d", "(", "channel_2", "*", "3", ",", "channel_3", ",", "3", ",", "padding", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ACCoNet_Res_models.BAB_Decoder.forward": [[221, 233], ["ACCoNet_Res_models.BAB_Decoder.conv1", "ACCoNet_Res_models.BAB_Decoder.conv1_Dila", "ACCoNet_Res_models.BAB_Decoder.conv2", "ACCoNet_Res_models.BAB_Decoder.conv2_Dila", "ACCoNet_Res_models.BAB_Decoder.conv3", "ACCoNet_Res_models.BAB_Decoder.conv_fuse", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x1", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x1_dila", "=", "self", ".", "conv1_Dila", "(", "x1", ")", "\n", "\n", "x2", "=", "self", ".", "conv2", "(", "x1", ")", "\n", "x2_dila", "=", "self", ".", "conv2_Dila", "(", "x2", ")", "\n", "\n", "x3", "=", "self", ".", "conv3", "(", "x2", ")", "\n", "\n", "x_fuse", "=", "self", ".", "conv_fuse", "(", "torch", ".", "cat", "(", "(", "x1_dila", ",", "x2_dila", ",", "x3", ")", ",", "1", ")", ")", "\n", "\n", "return", "x_fuse", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ACCoNet_Res_models.decoder.__init__": [[236, 278], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "ACCoNet_Res_models.BAB_Decoder", "torch.Dropout", "torch.Dropout", "torch.Dropout", "ACCoNet_Res_models.TransBasicConv2d", "ACCoNet_Res_models.BAB_Decoder", "torch.Dropout", "torch.Dropout", "torch.Dropout", "ACCoNet_Res_models.TransBasicConv2d", "ACCoNet_Res_models.BAB_Decoder", "torch.Dropout", "torch.Dropout", "torch.Dropout", "ACCoNet_Res_models.TransBasicConv2d", "ACCoNet_Res_models.BAB_Decoder", "torch.Dropout", "torch.Dropout", "torch.Dropout", "ACCoNet_Res_models.TransBasicConv2d", "ACCoNet_Res_models.BAB_Decoder"], "methods", ["home.repos.pwc.inspect_result.mathlee_acconet.pytorch_iou.__init__.IOU.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", "=", "512", ")", ":", "\n", "        ", "super", "(", "decoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "\n", "self", ".", "upsample", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n", "self", ".", "decoder5", "=", "nn", ".", "Sequential", "(", "\n", "BAB_Decoder", "(", "512", ",", "512", ",", "512", ",", "3", ",", "2", ")", ",", "\n", "nn", ".", "Dropout", "(", "0.5", ")", ",", "\n", "TransBasicConv2d", "(", "512", ",", "512", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "\n", "padding", "=", "0", ",", "dilation", "=", "1", ",", "bias", "=", "False", ")", "\n", ")", "\n", "self", ".", "S5", "=", "nn", ".", "Conv2d", "(", "512", ",", "1", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "decoder4", "=", "nn", ".", "Sequential", "(", "\n", "BAB_Decoder", "(", "1024", ",", "512", ",", "256", ",", "3", ",", "2", ")", ",", "\n", "nn", ".", "Dropout", "(", "0.5", ")", ",", "\n", "TransBasicConv2d", "(", "256", ",", "256", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "\n", "padding", "=", "0", ",", "dilation", "=", "1", ",", "bias", "=", "False", ")", "\n", ")", "\n", "self", ".", "S4", "=", "nn", ".", "Conv2d", "(", "256", ",", "1", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "decoder3", "=", "nn", ".", "Sequential", "(", "\n", "BAB_Decoder", "(", "512", ",", "256", ",", "128", ",", "5", ",", "3", ")", ",", "\n", "nn", ".", "Dropout", "(", "0.5", ")", ",", "\n", "TransBasicConv2d", "(", "128", ",", "128", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "\n", "padding", "=", "0", ",", "dilation", "=", "1", ",", "bias", "=", "False", ")", "\n", ")", "\n", "self", ".", "S3", "=", "nn", ".", "Conv2d", "(", "128", ",", "1", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "decoder2", "=", "nn", ".", "Sequential", "(", "\n", "BAB_Decoder", "(", "256", ",", "128", ",", "64", ",", "5", ",", "3", ")", ",", "\n", "nn", ".", "Dropout", "(", "0.5", ")", ",", "\n", "TransBasicConv2d", "(", "64", ",", "64", ",", "kernel_size", "=", "2", ",", "stride", "=", "2", ",", "\n", "padding", "=", "0", ",", "dilation", "=", "1", ",", "bias", "=", "False", ")", "\n", ")", "\n", "self", ".", "S2", "=", "nn", ".", "Conv2d", "(", "64", ",", "1", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "decoder1", "=", "nn", ".", "Sequential", "(", "\n", "BAB_Decoder", "(", "128", ",", "64", ",", "32", ",", "5", ",", "3", ")", "\n", ")", "\n", "self", ".", "S1", "=", "nn", ".", "Conv2d", "(", "32", ",", "1", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ACCoNet_Res_models.decoder.forward": [[280, 298], ["ACCoNet_Res_models.decoder.decoder5", "ACCoNet_Res_models.decoder.S5", "ACCoNet_Res_models.decoder.decoder4", "ACCoNet_Res_models.decoder.S4", "ACCoNet_Res_models.decoder.decoder3", "ACCoNet_Res_models.decoder.S3", "ACCoNet_Res_models.decoder.decoder2", "ACCoNet_Res_models.decoder.S2", "ACCoNet_Res_models.decoder.decoder1", "ACCoNet_Res_models.decoder.S1", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x5", ",", "x4", ",", "x3", ",", "x2", ",", "x1", ")", ":", "\n", "# x5: 1/16, 512; x4: 1/8, 512; x3: 1/4, 256; x2: 1/2, 128; x1: 1/1, 64", "\n", "        ", "x5_up", "=", "self", ".", "decoder5", "(", "x5", ")", "\n", "s5", "=", "self", ".", "S5", "(", "x5_up", ")", "\n", "\n", "x4_up", "=", "self", ".", "decoder4", "(", "torch", ".", "cat", "(", "(", "x4", ",", "x5_up", ")", ",", "1", ")", ")", "\n", "s4", "=", "self", ".", "S4", "(", "x4_up", ")", "\n", "\n", "x3_up", "=", "self", ".", "decoder3", "(", "torch", ".", "cat", "(", "(", "x3", ",", "x4_up", ")", ",", "1", ")", ")", "\n", "s3", "=", "self", ".", "S3", "(", "x3_up", ")", "\n", "\n", "x2_up", "=", "self", ".", "decoder2", "(", "torch", ".", "cat", "(", "(", "x2", ",", "x3_up", ")", ",", "1", ")", ")", "\n", "s2", "=", "self", ".", "S2", "(", "x2_up", ")", "\n", "\n", "x1_up", "=", "self", ".", "decoder1", "(", "torch", ".", "cat", "(", "(", "x1", ",", "x2_up", ")", ",", "1", ")", ")", "\n", "s1", "=", "self", ".", "S1", "(", "x1_up", ")", "\n", "\n", "return", "s1", ",", "s2", ",", "s3", ",", "s4", ",", "s5", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ACCoNet_Res_models.ACCoNet_Res.__init__": [[301, 335], ["torch.Module.__init__", "ResNet50.Backbone_ResNet50_in3", "ACCoNet_Res_models.BasicConv2d", "ACCoNet_Res_models.BasicConv2d", "ACCoNet_Res_models.BasicConv2d", "ACCoNet_Res_models.BasicConv2d", "ACCoNet_Res_models.BasicConv2d", "ACCoNet_Res_models.ACCoM_5", "ACCoNet_Res_models.ACCoM", "ACCoNet_Res_models.ACCoM", "ACCoNet_Res_models.ACCoM", "ACCoNet_Res_models.ACCoM_1", "ACCoNet_Res_models.decoder", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Upsample", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.mathlee_acconet.pytorch_iou.__init__.IOU.__init__", "home.repos.pwc.inspect_result.mathlee_acconet.model.ResNet50.Backbone_ResNet50_in3"], ["    ", "def", "__init__", "(", "self", ",", "channel", "=", "32", ")", ":", "\n", "        ", "super", "(", "ACCoNet_Res", ",", "self", ")", ".", "__init__", "(", ")", "\n", "#Backbone model", "\n", "# ---- ResNet50 Backbone ----", "\n", "(", "\n", "self", ".", "encoder1", ",", "\n", "self", ".", "encoder2", ",", "\n", "self", ".", "encoder4", ",", "\n", "self", ".", "encoder8", ",", "\n", "self", ".", "encoder16", ",", "\n", ")", "=", "Backbone_ResNet50_in3", "(", ")", "\n", "\n", "# Lateral layers", "\n", "self", ".", "lateral_conv0", "=", "BasicConv2d", "(", "64", ",", "64", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "lateral_conv1", "=", "BasicConv2d", "(", "256", ",", "128", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "lateral_conv2", "=", "BasicConv2d", "(", "512", ",", "256", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "lateral_conv3", "=", "BasicConv2d", "(", "1024", ",", "512", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "self", ".", "lateral_conv4", "=", "BasicConv2d", "(", "2048", ",", "512", ",", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n", "self", ".", "ACCoM5", "=", "ACCoM_5", "(", "512", ")", "\n", "self", ".", "ACCoM4", "=", "ACCoM", "(", "512", ")", "\n", "self", ".", "ACCoM3", "=", "ACCoM", "(", "256", ")", "\n", "self", ".", "ACCoM2", "=", "ACCoM", "(", "128", ")", "\n", "self", ".", "ACCoM1", "=", "ACCoM_1", "(", "64", ")", "\n", "\n", "# self.agg2_rgbd = aggregation(channel)", "\n", "self", ".", "decoder_rgb", "=", "decoder", "(", "512", ")", "\n", "\n", "self", ".", "upsample16", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "16", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "self", ".", "upsample8", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "8", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "self", ".", "upsample4", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "4", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "self", ".", "upsample2", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ",", "mode", "=", "'bilinear'", ",", "align_corners", "=", "True", ")", "\n", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mathlee_acconet.model.ACCoNet_Res_models.ACCoNet_Res.forward": [[337, 367], ["ACCoNet_Res_models.ACCoNet_Res.encoder1", "ACCoNet_Res_models.ACCoNet_Res.encoder2", "ACCoNet_Res_models.ACCoNet_Res.encoder4", "ACCoNet_Res_models.ACCoNet_Res.encoder8", "ACCoNet_Res_models.ACCoNet_Res.encoder16", "ACCoNet_Res_models.ACCoNet_Res.lateral_conv0", "ACCoNet_Res_models.ACCoNet_Res.lateral_conv1", "ACCoNet_Res_models.ACCoNet_Res.lateral_conv2", "ACCoNet_Res_models.ACCoNet_Res.lateral_conv3", "ACCoNet_Res_models.ACCoNet_Res.lateral_conv4", "ACCoNet_Res_models.ACCoNet_Res.ACCoM5", "ACCoNet_Res_models.ACCoNet_Res.ACCoM4", "ACCoNet_Res_models.ACCoNet_Res.ACCoM3", "ACCoNet_Res_models.ACCoNet_Res.ACCoM2", "ACCoNet_Res_models.ACCoNet_Res.ACCoM1", "ACCoNet_Res_models.ACCoNet_Res.decoder_rgb", "ACCoNet_Res_models.ACCoNet_Res.upsample2", "ACCoNet_Res_models.ACCoNet_Res.upsample2", "ACCoNet_Res_models.ACCoNet_Res.upsample4", "ACCoNet_Res_models.ACCoNet_Res.upsample8", "ACCoNet_Res_models.ACCoNet_Res.upsample16", "ACCoNet_Res_models.ACCoNet_Res.sigmoid", "ACCoNet_Res_models.ACCoNet_Res.sigmoid", "ACCoNet_Res_models.ACCoNet_Res.sigmoid", "ACCoNet_Res_models.ACCoNet_Res.sigmoid", "ACCoNet_Res_models.ACCoNet_Res.sigmoid"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x_rgb", ")", ":", "\n", "        ", "x0", "=", "self", ".", "encoder1", "(", "x_rgb", ")", "\n", "x1", "=", "self", ".", "encoder2", "(", "x0", ")", "\n", "x2", "=", "self", ".", "encoder4", "(", "x1", ")", "\n", "x3", "=", "self", ".", "encoder8", "(", "x2", ")", "\n", "x4", "=", "self", ".", "encoder16", "(", "x3", ")", "\n", "\n", "x1_rgb", "=", "self", ".", "lateral_conv0", "(", "x0", ")", "\n", "x2_rgb", "=", "self", ".", "lateral_conv1", "(", "x1", ")", "\n", "x3_rgb", "=", "self", ".", "lateral_conv2", "(", "x2", ")", "\n", "x4_rgb", "=", "self", ".", "lateral_conv3", "(", "x3", ")", "\n", "x5_rgb", "=", "self", ".", "lateral_conv4", "(", "x4", ")", "\n", "\n", "\n", "# up means update", "\n", "x5_ACCoM", "=", "self", ".", "ACCoM5", "(", "x4_rgb", ",", "x5_rgb", ")", "\n", "x4_ACCoM", "=", "self", ".", "ACCoM4", "(", "x3_rgb", ",", "x4_rgb", ",", "x5_rgb", ")", "\n", "x3_ACCoM", "=", "self", ".", "ACCoM3", "(", "x2_rgb", ",", "x3_rgb", ",", "x4_rgb", ")", "\n", "x2_ACCoM", "=", "self", ".", "ACCoM2", "(", "x1_rgb", ",", "x2_rgb", ",", "x3_rgb", ")", "\n", "x1_ACCoM", "=", "self", ".", "ACCoM1", "(", "x1_rgb", ",", "x2_rgb", ")", "\n", "\n", "s1", ",", "s2", ",", "s3", ",", "s4", ",", "s5", "=", "self", ".", "decoder_rgb", "(", "x5_ACCoM", ",", "x4_ACCoM", ",", "x3_ACCoM", ",", "x2_ACCoM", ",", "x1_ACCoM", ")", "\n", "# At test phase, we can use the HA to post-processing our saliency map", "\n", "s1", "=", "self", ".", "upsample2", "(", "s1", ")", "\n", "s2", "=", "self", ".", "upsample2", "(", "s2", ")", "\n", "s3", "=", "self", ".", "upsample4", "(", "s3", ")", "\n", "s4", "=", "self", ".", "upsample8", "(", "s4", ")", "\n", "s5", "=", "self", ".", "upsample16", "(", "s5", ")", "\n", "\n", "return", "s1", ",", "s2", ",", "s3", ",", "s4", ",", "s5", ",", "self", ".", "sigmoid", "(", "s1", ")", ",", "self", ".", "sigmoid", "(", "s2", ")", ",", "self", ".", "sigmoid", "(", "s3", ")", ",", "self", ".", "sigmoid", "(", "s4", ")", ",", "self", ".", "sigmoid", "(", "s5", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.mathlee_acconet.pytorch_iou.__init__.IOU.__init__": [[24, 27], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.mathlee_acconet.pytorch_iou.__init__.IOU.__init__"], []], "home.repos.pwc.inspect_result.mathlee_acconet.pytorch_iou.__init__.IOU.forward": [[28, 31], ["__init__._iou"], "methods", ["home.repos.pwc.inspect_result.mathlee_acconet.pytorch_iou.__init__._iou"], []], "home.repos.pwc.inspect_result.mathlee_acconet.pytorch_iou.__init__._iou": [[8, 22], ["range", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum"], "function", ["None"], []]}