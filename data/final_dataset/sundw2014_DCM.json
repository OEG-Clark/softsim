{"home.repos.pwc.inspect_result.sundw2014_DCM.wrn_mobi.mobilenet.Block.__init__": [[15, 21], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.sundw2014_DCM.wrn_mobi.mobilenet.mobilenet.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "Block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "in_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "groups", "=", "in_planes", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "in_planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "out_planes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sundw2014_DCM.wrn_mobi.mobilenet.Block.forward": [[22, 26], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "mobilenet.Block.bn1", "mobilenet.Block.bn2", "mobilenet.Block.conv1", "mobilenet.Block.conv2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "#, inplace=True)", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", ")", "#, inplace=True)", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.sundw2014_DCM.wrn_mobi.mobilenet.mobilenet.__init__": [[33, 49], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "mobilenet.mobilenet._make_layers", "mobilenet.mobilenet._make_layers", "mobilenet.mobilenet._make_layers", "torch.Linear", "torch.Linear", "torch.Linear", "mobilenet.mobilenet._make_layers", "mobilenet.mobilenet._make_layers", "torch.Linear", "torch.Linear", "torch.Linear", "mobilenet.mobilenet._make_layers", "torch.Linear", "torch.Linear", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.sundw2014_DCM.wrn_mobi.mobilenet.mobilenet.__init__", "home.repos.pwc.inspect_result.sundw2014_DCM.wrn_mobi.mobilenet.mobilenet._make_layers", "home.repos.pwc.inspect_result.sundw2014_DCM.wrn_mobi.mobilenet.mobilenet._make_layers", "home.repos.pwc.inspect_result.sundw2014_DCM.wrn_mobi.mobilenet.mobilenet._make_layers", "home.repos.pwc.inspect_result.sundw2014_DCM.wrn_mobi.mobilenet.mobilenet._make_layers", "home.repos.pwc.inspect_result.sundw2014_DCM.wrn_mobi.mobilenet.mobilenet._make_layers", "home.repos.pwc.inspect_result.sundw2014_DCM.wrn_mobi.mobilenet.mobilenet._make_layers"], ["def", "__init__", "(", "self", ",", "num_classes", "=", "100", ",", "aux_classifiers_blocks", "=", "[", "]", ")", ":", "\n", "        ", "super", "(", "mobilenet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "is_aux", "=", "(", "aux_classifiers_blocks", "is", "not", "None", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "32", ")", "\n", "self", ".", "layer1", ",", "in_planes_hook_layer1", "=", "self", ".", "_make_layers", "(", "in_planes", "=", "32", ",", "cfg", "=", "[", "64", ",", "128", ",", "128", ",", "256", ",", "256", "]", ")", "\n", "self", ".", "layer2", ",", "in_planes_hook_layer2", "=", "self", ".", "_make_layers", "(", "in_planes", "=", "in_planes_hook_layer1", ",", "cfg", "=", "[", "(", "512", ",", "2", ")", ",", "512", ",", "512", ",", "512", ",", "512", ",", "512", "]", ")", "\n", "self", ".", "layer3", ",", "_", "=", "self", ".", "_make_layers", "(", "in_planes", "=", "in_planes_hook_layer2", ",", "cfg", "=", "[", "(", "1024", ",", "2", ")", ",", "1024", "]", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "1024", ",", "num_classes", ")", "\n", "if", "self", ".", "is_aux", ":", "\n", "            ", "self", ".", "ep1_layer2", ",", "out_planes", "=", "self", ".", "_make_layers", "(", "in_planes", "=", "in_planes_hook_layer1", ",", "cfg", "=", "[", "(", "512", ",", "2", ")", ",", "512", ",", "512", ",", "512", "]", ")", "\n", "self", ".", "ep1_layer3", ",", "_", "=", "self", ".", "_make_layers", "(", "in_planes", "=", "out_planes", ",", "cfg", "=", "[", "(", "1024", ",", "2", ")", ",", "1024", "]", ")", "\n", "self", ".", "ep1_linear", "=", "nn", ".", "Linear", "(", "1024", ",", "num_classes", ")", "\n", "\n", "self", ".", "ep2_layer3", ",", "_", "=", "self", ".", "_make_layers", "(", "in_planes", "=", "in_planes_hook_layer2", ",", "cfg", "=", "[", "(", "2048", ",", "2", ")", ",", "2048", "]", ")", "\n", "self", ".", "ep2_linear", "=", "nn", ".", "Linear", "(", "2048", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sundw2014_DCM.wrn_mobi.mobilenet.mobilenet._make_layers": [[51, 59], ["layers.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "isinstance", "isinstance", "mobilenet.Block"], "methods", ["None"], ["", "", "def", "_make_layers", "(", "self", ",", "in_planes", ",", "cfg", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "for", "x", "in", "cfg", ":", "\n", "            ", "out_planes", "=", "x", "if", "isinstance", "(", "x", ",", "int", ")", "else", "x", "[", "0", "]", "\n", "stride", "=", "1", "if", "isinstance", "(", "x", ",", "int", ")", "else", "x", "[", "1", "]", "\n", "layers", ".", "append", "(", "Block", "(", "in_planes", ",", "out_planes", ",", "stride", ")", ")", "\n", "in_planes", "=", "out_planes", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", ",", "out_planes", "\n", "\n"]], "home.repos.pwc.inspect_result.sundw2014_DCM.wrn_mobi.mobilenet.mobilenet.forward": [[60, 84], ["torch.relu", "torch.relu", "torch.relu", "mobilenet.mobilenet.layer1", "mobilenet.mobilenet.layer2", "mobilenet.mobilenet.layer3", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "out.view.view.view", "mobilenet.mobilenet.linear", "mobilenet.mobilenet.bn1", "out.view.view.size", "mobilenet.mobilenet.ep1_layer2", "mobilenet.mobilenet.ep1_layer3", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "out.view.view.view", "mobilenet.mobilenet.ep1_linear", "mobilenet.mobilenet.ep2_layer3", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "out.view.view.view", "mobilenet.mobilenet.ep2_linear", "mobilenet.mobilenet.conv1", "out.view.view.size", "out.view.view.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "\n", "out_layer1", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out_layer2", "=", "self", ".", "layer2", "(", "out_layer1", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out_layer2", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "8", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "ep3_out", "=", "self", ".", "linear", "(", "out", ")", "\n", "\n", "if", "self", ".", "is_aux", ":", "\n", "            ", "out", "=", "self", ".", "ep1_layer2", "(", "out_layer1", ")", "\n", "out", "=", "self", ".", "ep1_layer3", "(", "out", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "8", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "ep1_out", "=", "self", ".", "ep1_linear", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "ep2_layer3", "(", "out_layer2", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "8", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "ep2_out", "=", "self", ".", "ep2_linear", "(", "out", ")", "\n", "return", "(", "ep1_out", ",", "ep2_out", ",", "ep3_out", ")", "\n", "\n", "", "return", "ep3_out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.sundw2014_DCM.wrn_mobi.KL_divergence.KL_divergence": [[7, 25], ["torch.softmax", "torch.softmax", "list", "list", "torch.mean", "torch.mean", "F.softmax.size", "F.softmax.size", "torch.sum", "torch.sum", "torch.autograd.Variable", "torch.autograd.Variable", "torch.log", "torch.log", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "function", ["None"], ["def", "KL_divergence", "(", "logits_p", ",", "logits_q", ")", ":", "\n", "# p = softmax(logits_p)", "\n", "# q = softmax(logits_q)", "\n", "# KL(p||q)", "\n", "# suppose that p/q is in shape of [bs, num_classes]", "\n", "\n", "    ", "p", "=", "F", ".", "softmax", "(", "logits_p", ",", "dim", "=", "1", ")", "\n", "q", "=", "F", ".", "softmax", "(", "logits_q", ",", "dim", "=", "1", ")", "\n", "\n", "shape", "=", "list", "(", "p", ".", "size", "(", ")", ")", "\n", "_shape", "=", "list", "(", "q", ".", "size", "(", ")", ")", "\n", "assert", "shape", "==", "_shape", "\n", "#print(shape)", "\n", "num_classes", "=", "shape", "[", "1", "]", "\n", "epsilon", "=", "1e-8", "\n", "_p", "=", "(", "p", "+", "epsilon", "*", "Variable", "(", "torch", ".", "ones", "(", "*", "shape", ")", ".", "cuda", "(", ")", ")", ")", "/", "(", "1.0", "+", "num_classes", "*", "epsilon", ")", "\n", "_q", "=", "(", "q", "+", "epsilon", "*", "Variable", "(", "torch", ".", "ones", "(", "*", "shape", ")", ".", "cuda", "(", ")", ")", ")", "/", "(", "1.0", "+", "num_classes", "*", "epsilon", ")", "\n", "return", "torch", ".", "mean", "(", "torch", ".", "sum", "(", "_p", "*", "torch", ".", "log", "(", "_p", "/", "_q", ")", ",", "1", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.sundw2014_DCM.wrn_mobi.main.create_dataset": [[67, 81], ["torchvision.Compose", "torchvision.Compose", "getattr", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.Pad", "torchvision.RandomHorizontalFlip", "torchvision.RandomCrop", "numpy.array", "numpy.array"], "function", ["None"], ["def", "create_dataset", "(", "opt", ",", "train", ")", ":", "\n", "    ", "transform", "=", "T", ".", "Compose", "(", "[", "\n", "T", ".", "ToTensor", "(", ")", ",", "\n", "T", ".", "Normalize", "(", "np", ".", "array", "(", "[", "125.3", ",", "123.0", ",", "113.9", "]", ")", "/", "255.0", ",", "\n", "np", ".", "array", "(", "[", "63.0", ",", "62.1", ",", "66.7", "]", ")", "/", "255.0", ")", ",", "\n", "]", ")", "\n", "if", "train", ":", "\n", "        ", "transform", "=", "T", ".", "Compose", "(", "[", "\n", "T", ".", "Pad", "(", "4", ",", "padding_mode", "=", "'reflect'", ")", ",", "\n", "T", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "T", ".", "RandomCrop", "(", "32", ")", ",", "\n", "transform", "\n", "]", ")", "\n", "", "return", "getattr", "(", "datasets", ",", "opt", ".", "dataset", ")", "(", "opt", ".", "dataroot", ",", "train", "=", "train", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sundw2014_DCM.wrn_mobi.main.main": [[85, 247], ["parser.parse_args", "print", "json.loads", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "main.main.create_iterator"], "function", ["None"], ["def", "main", "(", ")", ":", "\n", "    ", "opt", "=", "parser", ".", "parse_args", "(", ")", "\n", "print", "(", "'parsed options:'", ",", "vars", "(", "opt", ")", ")", "\n", "epoch_step", "=", "json", ".", "loads", "(", "opt", ".", "epoch_step", ")", "\n", "num_classes", "=", "10", "if", "opt", ".", "dataset", "==", "'CIFAR10'", "else", "100", "\n", "\n", "torch", ".", "manual_seed", "(", "opt", ".", "seed", ")", "\n", "os", ".", "environ", "[", "'CUDA_VISIBLE_DEVICES'", "]", "=", "opt", ".", "gpu_id", "\n", "\n", "def", "create_iterator", "(", "mode", ")", ":", "\n", "        ", "return", "DataLoader", "(", "create_dataset", "(", "opt", ",", "mode", ")", ",", "opt", ".", "batch_size", ",", "shuffle", "=", "mode", ",", "\n", "num_workers", "=", "opt", ".", "nthread", ",", "pin_memory", "=", "torch", ".", "cuda", ".", "is_available", "(", ")", ")", "\n", "\n", "", "train_loader", "=", "create_iterator", "(", "True", ")", "\n", "test_loader", "=", "create_iterator", "(", "False", ")", "\n", "\n", "f_1", ",", "params_1", "=", "resnet", "(", "opt", ".", "depth", ",", "opt", ".", "width", ",", "num_classes", ")", "\n", "model_2", "=", "mobilenet", "(", ")", "\n", "model_2", "=", "torch", ".", "nn", ".", "DataParallel", "(", "model_2", ")", ".", "cuda", "(", ")", "\n", "f_2", "=", "model_2", ".", "forward", "\n", "params_2", "=", "dict", "(", "model_2", ".", "named_parameters", "(", ")", ")", "\n", "\n", "def", "create_optimizer", "(", "opt", ",", "lr", ")", ":", "\n", "        ", "print", "(", "'creating optimizer with lr = '", ",", "lr", ")", "\n", "return", "SGD", "(", "[", "v", "for", "v", "in", "params_1", ".", "values", "(", ")", "if", "v", ".", "requires_grad", "]", "+", "[", "v", "for", "v", "in", "params_2", ".", "values", "(", ")", "if", "v", ".", "requires_grad", "]", ",", "lr", ",", "momentum", "=", "0.9", ",", "weight_decay", "=", "opt", ".", "weight_decay", ")", "\n", "\n", "", "optimizer", "=", "create_optimizer", "(", "opt", ",", "opt", ".", "lr", ")", "\n", "\n", "epoch", "=", "0", "\n", "if", "opt", ".", "resume", "!=", "''", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n", "", "print", "(", "'\\nParameters:'", ")", "\n", "print_tensor_dict", "(", "params_1", ")", "\n", "print_tensor_dict", "(", "params_2", ")", "\n", "\n", "n_parameters", "=", "sum", "(", "[", "p", ".", "numel", "(", ")", "for", "p", "in", "params_1", ".", "values", "(", ")", "if", "p", ".", "requires_grad", "]", "+", "[", "p", ".", "numel", "(", ")", "for", "p", "in", "params_2", ".", "values", "(", ")", "if", "p", ".", "requires_grad", "]", ")", "\n", "print", "(", "'\\nTotal number of parameters:'", ",", "n_parameters", ")", "\n", "\n", "meter_loss", "=", "tnt", ".", "meter", ".", "AverageValueMeter", "(", ")", "\n", "classacc", "=", "tnt", ".", "meter", ".", "ClassErrorMeter", "(", "accuracy", "=", "True", ")", "\n", "timer_train", "=", "tnt", ".", "meter", ".", "TimeMeter", "(", "'s'", ")", "\n", "timer_test", "=", "tnt", ".", "meter", ".", "TimeMeter", "(", "'s'", ")", "\n", "classacc_another", "=", "tnt", ".", "meter", ".", "ClassErrorMeter", "(", "accuracy", "=", "True", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "opt", ".", "save", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "opt", ".", "save", ")", "\n", "\n", "", "def", "h", "(", "sample", ")", ":", "\n", "        ", "global", "_outputs", ",", "_loss", "\n", "\n", "connection_map", "=", "np", ".", "array", "(", "[", "\n", "[", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", "]", ",", "\n", "\n", "[", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", "]", "]", ")", "\n", "\n", "inputs", "=", "cast", "(", "sample", "[", "0", "]", ",", "opt", ".", "dtype", ")", "\n", "targets", "=", "cast", "(", "sample", "[", "1", "]", ",", "'long'", ")", "\n", "net1_outputs", "=", "data_parallel", "(", "f_1", ",", "inputs", ",", "params_1", ",", "sample", "[", "2", "]", ",", "list", "(", "range", "(", "opt", ".", "ngpu", ")", ")", ")", "\n", "net2_outputs", "=", "model_2", "(", "inputs", ")", "\n", "net1_outputs", "=", "[", "o", ".", "float", "(", ")", "for", "o", "in", "net1_outputs", "]", "\n", "net2_outputs", "=", "[", "o", ".", "float", "(", ")", "for", "o", "in", "net2_outputs", "]", "\n", "\n", "_loss", "=", "[", "]", "\n", "\n", "# hard supervision", "\n", "for", "i", ",", "o", "in", "enumerate", "(", "net1_outputs", ")", ":", "\n", "            ", "_loss", ".", "append", "(", "F", ".", "cross_entropy", "(", "o", ",", "targets", ")", ")", "\n", "\n", "", "for", "i", ",", "o", "in", "enumerate", "(", "net2_outputs", ")", ":", "\n", "            ", "_loss", ".", "append", "(", "F", ".", "cross_entropy", "(", "o", ",", "targets", ")", ")", "\n", "\n", "", "outputs", "=", "net1_outputs", "+", "net2_outputs", "\n", "# soft supervision", "\n", "for", "i", ",", "o", "in", "enumerate", "(", "outputs", ")", ":", "\n", "            ", "for", "j", ",", "o2", "in", "enumerate", "(", "outputs", ")", ":", "\n", "                ", "if", "connection_map", "[", "i", ",", "j", "]", ">", "0", ":", "\n", "                    ", "_loss", ".", "append", "(", "KL_divergence", "(", "o2", ".", "detach", "(", ")", ",", "o", ")", ")", "\n", "\n", "", "", "", "loss", "=", "sum", "(", "_loss", ")", "\n", "_outputs", "=", "net2_outputs", "[", "-", "1", "]", ".", "detach", "(", ")", "\n", "\n", "return", "loss", ",", "net1_outputs", "[", "-", "1", "]", "\n", "\n", "", "def", "log", "(", "t", ",", "state", ")", ":", "\n", "        ", "torch", ".", "save", "(", "dict", "(", "params", "=", "params_1", ",", "epoch", "=", "t", "[", "'epoch'", "]", ",", "optimizer", "=", "state", "[", "'optimizer'", "]", ".", "state_dict", "(", ")", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "opt", ".", "save", ",", "'model.pt7'", ")", ")", "\n", "z", "=", "{", "**", "vars", "(", "opt", ")", ",", "**", "t", "}", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "opt", ".", "save", ",", "'log.txt'", ")", ",", "'a'", ")", "as", "flog", ":", "\n", "            ", "flog", ".", "write", "(", "'json_stats: '", "+", "json", ".", "dumps", "(", "z", ")", "+", "'\\n'", ")", "\n", "", "print", "(", "z", ")", "\n", "\n", "", "def", "on_sample", "(", "state", ")", ":", "\n", "        ", "state", "[", "'sample'", "]", ".", "append", "(", "state", "[", "'train'", "]", ")", "\n", "\n", "", "def", "on_forward", "(", "state", ")", ":", "\n", "        ", "loss", "=", "float", "(", "state", "[", "'loss'", "]", ")", "\n", "classacc", ".", "add", "(", "state", "[", "'output'", "]", ".", "data", ",", "state", "[", "'sample'", "]", "[", "1", "]", ")", "\n", "classacc_another", ".", "add", "(", "_outputs", ".", "data", ",", "state", "[", "'sample'", "]", "[", "1", "]", ")", "\n", "meter_loss", ".", "add", "(", "loss", ")", "\n", "if", "state", "[", "'train'", "]", ":", "\n", "            ", "state", "[", "'iterator'", "]", ".", "set_postfix", "(", "loss", "=", "loss", ")", "\n", "\n", "", "", "def", "on_start", "(", "state", ")", ":", "\n", "        ", "state", "[", "'epoch'", "]", "=", "epoch", "\n", "\n", "", "def", "on_start_epoch", "(", "state", ")", ":", "\n", "        ", "classacc", ".", "reset", "(", ")", "\n", "classacc_another", ".", "reset", "(", ")", "\n", "meter_loss", ".", "reset", "(", ")", "\n", "timer_train", ".", "reset", "(", ")", "\n", "state", "[", "'iterator'", "]", "=", "tqdm", "(", "train_loader", ",", "dynamic_ncols", "=", "True", ")", "\n", "\n", "epoch", "=", "state", "[", "'epoch'", "]", "+", "1", "\n", "if", "epoch", "in", "epoch_step", ":", "\n", "            ", "lr", "=", "state", "[", "'optimizer'", "]", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", "\n", "state", "[", "'optimizer'", "]", "=", "create_optimizer", "(", "opt", ",", "lr", "*", "opt", ".", "lr_decay_ratio", ")", "\n", "\n", "", "", "def", "on_end_epoch", "(", "state", ")", ":", "\n", "        ", "train_loss", "=", "meter_loss", ".", "value", "(", ")", "\n", "train_acc", "=", "classacc", ".", "value", "(", ")", "\n", "train_time", "=", "timer_train", ".", "value", "(", ")", "\n", "train_acc_another", "=", "classacc_another", ".", "value", "(", ")", "\n", "\n", "meter_loss", ".", "reset", "(", ")", "\n", "classacc", ".", "reset", "(", ")", "\n", "timer_test", ".", "reset", "(", ")", "\n", "classacc_another", ".", "reset", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "engine", ".", "test", "(", "h", ",", "test_loader", ")", "\n", "\n", "", "test_acc", "=", "classacc", ".", "value", "(", ")", "[", "0", "]", "\n", "test_acc_another", "=", "classacc_another", ".", "value", "(", ")", "[", "0", "]", "\n", "print", "(", "log", "(", "{", "\n", "\"train_loss\"", ":", "train_loss", "[", "0", "]", ",", "\n", "\"train_acc\"", ":", "train_acc", "[", "0", "]", ",", "\n", "\"test_loss\"", ":", "meter_loss", ".", "value", "(", ")", "[", "0", "]", ",", "\n", "\"test_acc\"", ":", "test_acc", ",", "\n", "\"train_acc_another\"", ":", "train_acc_another", "[", "0", "]", ",", "\n", "\"test_acc_another\"", ":", "test_acc_another", ",", "\n", "\n", "\"epoch\"", ":", "state", "[", "'epoch'", "]", ",", "\n", "\"num_classes\"", ":", "num_classes", ",", "\n", "\"n_parameters\"", ":", "n_parameters", ",", "\n", "\"train_time\"", ":", "train_time", ",", "\n", "\"test_time\"", ":", "timer_test", ".", "value", "(", ")", ",", "\n", "}", ",", "state", ")", ")", "\n", "print", "(", "'==> id: %s (%d/%d), test_acc: \\33[91m%.2f\\033[0m'", "%", "\n", "(", "opt", ".", "save", ",", "state", "[", "'epoch'", "]", ",", "opt", ".", "epochs", ",", "test_acc", ")", ")", "\n", "\n", "", "engine", "=", "Engine", "(", ")", "\n", "engine", ".", "hooks", "[", "'on_sample'", "]", "=", "on_sample", "\n", "engine", ".", "hooks", "[", "'on_forward'", "]", "=", "on_forward", "\n", "engine", ".", "hooks", "[", "'on_start_epoch'", "]", "=", "on_start_epoch", "\n", "engine", ".", "hooks", "[", "'on_end_epoch'", "]", "=", "on_end_epoch", "\n", "engine", ".", "hooks", "[", "'on_start'", "]", "=", "on_start", "\n", "engine", ".", "train", "(", "h", ",", "train_loader", ",", "opt", ".", "epochs", ",", "optimizer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sundw2014_DCM.wrn_mobi.resnet.resnet": [[6, 85], ["utils.cast", "utils.set_requires_grad_except_bn_", "int", "utils.flatten", "torch.relu", "torch.conv2d", "torch.relu", "torch.conv2d", "range", "torch.conv2d", "resnet.resnet.group"], "function", ["home.repos.pwc.inspect_result.sundw2014_DCM.wrn.utils.cast", "home.repos.pwc.inspect_result.sundw2014_DCM.wrn.utils.set_requires_grad_except_bn_", "home.repos.pwc.inspect_result.sundw2014_DCM.wrn.utils.flatten"], ["def", "resnet", "(", "depth", ",", "width", ",", "num_classes", ")", ":", "\n", "    ", "assert", "(", "depth", "-", "4", ")", "%", "6", "==", "0", ",", "'depth should be 6n+4'", "\n", "n", "=", "(", "depth", "-", "4", ")", "//", "6", "\n", "widths", "=", "[", "int", "(", "v", "*", "width", ")", "for", "v", "in", "(", "16", ",", "32", ",", "64", ")", "]", "\n", "\n", "def", "gen_block_params", "(", "ni", ",", "no", ")", ":", "\n", "        ", "return", "{", "\n", "'conv0'", ":", "utils", ".", "conv_params", "(", "ni", ",", "no", ",", "3", ")", ",", "\n", "'conv1'", ":", "utils", ".", "conv_params", "(", "no", ",", "no", ",", "3", ")", ",", "\n", "'bn0'", ":", "utils", ".", "bnparams", "(", "ni", ")", ",", "\n", "'bn1'", ":", "utils", ".", "bnparams", "(", "no", ")", ",", "\n", "'convdim'", ":", "utils", ".", "conv_params", "(", "ni", ",", "no", ",", "1", ")", "if", "ni", "!=", "no", "else", "None", ",", "\n", "}", "\n", "\n", "", "def", "gen_group_params", "(", "ni", ",", "no", ",", "count", ")", ":", "\n", "        ", "return", "{", "'block%d'", "%", "i", ":", "gen_block_params", "(", "ni", "if", "i", "==", "0", "else", "no", ",", "no", ")", "\n", "for", "i", "in", "range", "(", "count", ")", "}", "\n", "\n", "", "flat_params", "=", "utils", ".", "cast", "(", "utils", ".", "flatten", "(", "{", "\n", "'conv0'", ":", "utils", ".", "conv_params", "(", "3", ",", "16", ",", "3", ")", ",", "\n", "'group0'", ":", "gen_group_params", "(", "16", ",", "widths", "[", "0", "]", ",", "n", ")", ",", "\n", "'group1'", ":", "gen_group_params", "(", "widths", "[", "0", "]", ",", "widths", "[", "1", "]", ",", "n", ")", ",", "\n", "'group2'", ":", "gen_group_params", "(", "widths", "[", "1", "]", ",", "widths", "[", "2", "]", ",", "n", ")", ",", "\n", "'bn'", ":", "utils", ".", "bnparams", "(", "widths", "[", "2", "]", ")", ",", "\n", "'fc'", ":", "utils", ".", "linear_params", "(", "widths", "[", "2", "]", ",", "num_classes", ")", ",", "\n", "# ep1", "\n", "'ep1_group1'", ":", "gen_group_params", "(", "widths", "[", "0", "]", ",", "widths", "[", "1", "]", ",", "n", ")", ",", "\n", "'ep1_group2'", ":", "gen_group_params", "(", "widths", "[", "1", "]", ",", "widths", "[", "2", "]", ",", "n", "//", "2", ")", ",", "\n", "'ep1_bn'", ":", "utils", ".", "bnparams", "(", "widths", "[", "2", "]", ")", ",", "\n", "'ep1_fc'", ":", "utils", ".", "linear_params", "(", "widths", "[", "2", "]", ",", "num_classes", ")", ",", "\n", "# ep2", "\n", "'ep2_group2'", ":", "gen_group_params", "(", "widths", "[", "1", "]", ",", "widths", "[", "2", "]", "*", "2", ",", "n", ")", ",", "\n", "'ep2_bn'", ":", "utils", ".", "bnparams", "(", "widths", "[", "2", "]", "*", "2", ")", ",", "\n", "'ep2_fc'", ":", "utils", ".", "linear_params", "(", "widths", "[", "2", "]", "*", "2", ",", "num_classes", ")", ",", "\n", "}", ")", ")", "\n", "\n", "utils", ".", "set_requires_grad_except_bn_", "(", "flat_params", ")", "\n", "\n", "def", "block", "(", "x", ",", "params", ",", "base", ",", "mode", ",", "stride", ")", ":", "\n", "        ", "o1", "=", "F", ".", "relu", "(", "utils", ".", "batch_norm", "(", "x", ",", "params", ",", "base", "+", "'.bn0'", ",", "mode", ")", ",", "inplace", "=", "True", ")", "\n", "y", "=", "F", ".", "conv2d", "(", "o1", ",", "params", "[", "base", "+", "'.conv0'", "]", ",", "stride", "=", "stride", ",", "padding", "=", "1", ")", "\n", "o2", "=", "F", ".", "relu", "(", "utils", ".", "batch_norm", "(", "y", ",", "params", ",", "base", "+", "'.bn1'", ",", "mode", ")", ",", "inplace", "=", "True", ")", "\n", "z", "=", "F", ".", "conv2d", "(", "o2", ",", "params", "[", "base", "+", "'.conv1'", "]", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "if", "base", "+", "'.convdim'", "in", "params", ":", "\n", "            ", "return", "z", "+", "F", ".", "conv2d", "(", "o1", ",", "params", "[", "base", "+", "'.convdim'", "]", ",", "stride", "=", "stride", ")", "\n", "", "else", ":", "\n", "            ", "return", "z", "+", "x", "\n", "\n", "", "", "def", "group", "(", "o", ",", "params", ",", "base", ",", "mode", ",", "stride", ",", "_n", "=", "n", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "_n", ")", ":", "\n", "            ", "o", "=", "block", "(", "o", ",", "params", ",", "'%s.block%d'", "%", "(", "base", ",", "i", ")", ",", "mode", ",", "stride", "if", "i", "==", "0", "else", "1", ")", "\n", "", "return", "o", "\n", "\n", "", "def", "f", "(", "input", ",", "params", ",", "mode", ")", ":", "\n", "        ", "x", "=", "F", ".", "conv2d", "(", "input", ",", "params", "[", "'conv0'", "]", ",", "padding", "=", "1", ")", "\n", "g0", "=", "group", "(", "x", ",", "params", ",", "'group0'", ",", "mode", ",", "1", ")", "\n", "g1", "=", "group", "(", "g0", ",", "params", ",", "'group1'", ",", "mode", ",", "2", ")", "\n", "g2", "=", "group", "(", "g1", ",", "params", ",", "'group2'", ",", "mode", ",", "2", ")", "\n", "o", "=", "F", ".", "relu", "(", "utils", ".", "batch_norm", "(", "g2", ",", "params", ",", "'bn'", ",", "mode", ")", ")", "\n", "o", "=", "F", ".", "avg_pool2d", "(", "o", ",", "8", ",", "1", ",", "0", ")", "\n", "o", "=", "o", ".", "view", "(", "o", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "o", "=", "F", ".", "linear", "(", "o", ",", "params", "[", "'fc.weight'", "]", ",", "params", "[", "'fc.bias'", "]", ")", "\n", "\n", "ep1_g1", "=", "group", "(", "g0", ",", "params", ",", "'ep1_group1'", ",", "mode", ",", "2", ")", "\n", "ep1_g2", "=", "group", "(", "ep1_g1", ",", "params", ",", "'ep1_group2'", ",", "mode", ",", "2", ",", "_n", "=", "n", "//", "2", ")", "\n", "ep1_o", "=", "F", ".", "relu", "(", "utils", ".", "batch_norm", "(", "ep1_g2", ",", "params", ",", "'ep1_bn'", ",", "mode", ")", ")", "\n", "ep1_o", "=", "F", ".", "avg_pool2d", "(", "ep1_o", ",", "8", ",", "1", ",", "0", ")", "\n", "ep1_o", "=", "ep1_o", ".", "view", "(", "ep1_o", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "ep1_o", "=", "F", ".", "linear", "(", "ep1_o", ",", "params", "[", "'ep1_fc.weight'", "]", ",", "params", "[", "'ep1_fc.bias'", "]", ")", "\n", "\n", "ep2_g2", "=", "group", "(", "g1", ",", "params", ",", "'ep2_group2'", ",", "mode", ",", "2", ")", "\n", "ep2_o", "=", "F", ".", "relu", "(", "utils", ".", "batch_norm", "(", "ep2_g2", ",", "params", ",", "'ep2_bn'", ",", "mode", ")", ")", "\n", "ep2_o", "=", "F", ".", "avg_pool2d", "(", "ep2_o", ",", "8", ",", "1", ",", "0", ")", "\n", "ep2_o", "=", "ep2_o", ".", "view", "(", "ep2_o", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "ep2_o", "=", "F", ".", "linear", "(", "ep2_o", ",", "params", "[", "'ep2_fc.weight'", "]", ",", "params", "[", "'ep2_fc.bias'", "]", ")", "\n", "\n", "return", "(", "ep1_o", ",", "ep2_o", ",", "o", ")", "\n", "\n", "", "return", "f", ",", "flat_params", "\n", "", ""]], "home.repos.pwc.inspect_result.sundw2014_DCM.wrn_mobi.utils.cast": [[10, 15], ["isinstance", "utils.cast", "getattr", "params.items", "torch.cuda.is_available", "torch.cuda.is_available", "params.cuda"], "function", ["home.repos.pwc.inspect_result.sundw2014_DCM.wrn.utils.cast"], ["def", "cast", "(", "params", ",", "dtype", "=", "'float'", ")", ":", "\n", "    ", "if", "isinstance", "(", "params", ",", "dict", ")", ":", "\n", "        ", "return", "{", "k", ":", "cast", "(", "v", ",", "dtype", ")", "for", "k", ",", "v", "in", "params", ".", "items", "(", ")", "}", "\n", "", "else", ":", "\n", "        ", "return", "getattr", "(", "params", ".", "cuda", "(", ")", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "params", ",", "dtype", ")", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sundw2014_DCM.wrn_mobi.utils.conv_params": [[17, 19], ["torch.nn.init.kaiming_normal_", "torch.Tensor", "torch.Tensor"], "function", ["None"], ["", "", "def", "conv_params", "(", "ni", ",", "no", ",", "k", "=", "1", ")", ":", "\n", "    ", "return", "kaiming_normal_", "(", "torch", ".", "Tensor", "(", "no", ",", "ni", ",", "k", ",", "k", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sundw2014_DCM.wrn_mobi.utils.linear_params": [[21, 23], ["torch.nn.init.kaiming_normal_", "torch.zeros", "torch.zeros", "torch.Tensor", "torch.Tensor"], "function", ["None"], ["", "def", "linear_params", "(", "ni", ",", "no", ")", ":", "\n", "    ", "return", "{", "'weight'", ":", "kaiming_normal_", "(", "torch", ".", "Tensor", "(", "no", ",", "ni", ")", ")", ",", "'bias'", ":", "torch", ".", "zeros", "(", "no", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.sundw2014_DCM.wrn_mobi.utils.bnparams": [[25, 30], ["torch.rand", "torch.rand", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.ones", "torch.ones"], "function", ["None"], ["", "def", "bnparams", "(", "n", ")", ":", "\n", "    ", "return", "{", "'weight'", ":", "torch", ".", "rand", "(", "n", ")", ",", "\n", "'bias'", ":", "torch", ".", "zeros", "(", "n", ")", ",", "\n", "'running_mean'", ":", "torch", ".", "zeros", "(", "n", ")", ",", "\n", "'running_var'", ":", "torch", ".", "ones", "(", "n", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.sundw2014_DCM.wrn_mobi.utils.data_parallel": [[32, 49], ["isinstance", "torch.nn.parallel._functions.Broadcast.apply", "torch.nn.parallel.scatter", "torch.nn.parallel.parallel_apply", "torch.nn.parallel.gather", "len", "f", "functools.partial", "params.values", "range", "enumerate", "len", "params.keys", "len"], "function", ["None"], ["", "def", "data_parallel", "(", "f", ",", "input", ",", "params", ",", "mode", ",", "device_ids", ",", "output_device", "=", "None", ")", ":", "\n", "    ", "assert", "isinstance", "(", "device_ids", ",", "list", ")", "\n", "if", "output_device", "is", "None", ":", "\n", "        ", "output_device", "=", "device_ids", "[", "0", "]", "\n", "\n", "", "if", "len", "(", "device_ids", ")", "==", "1", ":", "\n", "        ", "return", "f", "(", "input", ",", "params", ",", "mode", ")", "\n", "\n", "", "params_all", "=", "Broadcast", ".", "apply", "(", "device_ids", ",", "*", "params", ".", "values", "(", ")", ")", "\n", "params_replicas", "=", "[", "{", "k", ":", "params_all", "[", "i", "+", "j", "*", "len", "(", "params", ")", "]", "for", "i", ",", "k", "in", "enumerate", "(", "params", ".", "keys", "(", ")", ")", "}", "\n", "for", "j", "in", "range", "(", "len", "(", "device_ids", ")", ")", "]", "\n", "\n", "replicas", "=", "[", "partial", "(", "f", ",", "params", "=", "p", ",", "mode", "=", "mode", ")", "\n", "for", "p", "in", "params_replicas", "]", "\n", "inputs", "=", "scatter", "(", "[", "input", "]", ",", "device_ids", ")", "\n", "outputs", "=", "parallel_apply", "(", "replicas", ",", "inputs", ")", "\n", "return", "gather", "(", "outputs", ",", "output_device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sundw2014_DCM.wrn_mobi.utils.flatten": [[51, 53], ["nested_dict.nested_dict().items_flat", "nested_dict.nested_dict"], "function", ["None"], ["", "def", "flatten", "(", "params", ")", ":", "\n", "    ", "return", "{", "'.'", ".", "join", "(", "k", ")", ":", "v", "for", "k", ",", "v", "in", "nested_dict", "(", "params", ")", ".", "items_flat", "(", ")", "if", "v", "is", "not", "None", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.sundw2014_DCM.wrn_mobi.utils.batch_norm": [[55, 61], ["torch.batch_norm"], "function", ["home.repos.pwc.inspect_result.sundw2014_DCM.wrn.utils.batch_norm"], ["", "def", "batch_norm", "(", "x", ",", "params", ",", "base", ",", "mode", ")", ":", "\n", "    ", "return", "F", ".", "batch_norm", "(", "x", ",", "weight", "=", "params", "[", "base", "+", "'.weight'", "]", ",", "\n", "bias", "=", "params", "[", "base", "+", "'.bias'", "]", ",", "\n", "running_mean", "=", "params", "[", "base", "+", "'.running_mean'", "]", ",", "\n", "running_var", "=", "params", "[", "base", "+", "'.running_var'", "]", ",", "\n", "training", "=", "mode", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sundw2014_DCM.wrn_mobi.utils.print_tensor_dict": [[63, 67], ["max", "enumerate", "params.items", "print", "len", "str().ljust", "key.ljust", "str().ljust", "torch.typename", "torch.typename", "params.keys", "str", "str", "tuple"], "function", ["None"], ["", "def", "print_tensor_dict", "(", "params", ")", ":", "\n", "    ", "kmax", "=", "max", "(", "len", "(", "key", ")", "for", "key", "in", "params", ".", "keys", "(", ")", ")", "\n", "for", "i", ",", "(", "key", ",", "v", ")", "in", "enumerate", "(", "params", ".", "items", "(", ")", ")", ":", "\n", "        ", "print", "(", "str", "(", "i", ")", ".", "ljust", "(", "5", ")", ",", "key", ".", "ljust", "(", "kmax", "+", "3", ")", ",", "str", "(", "tuple", "(", "v", ".", "shape", ")", ")", ".", "ljust", "(", "23", ")", ",", "torch", ".", "typename", "(", "v", ")", ",", "v", ".", "requires_grad", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sundw2014_DCM.wrn_mobi.utils.set_requires_grad_except_bn_": [[69, 73], ["params.items", "k.endswith", "k.endswith"], "function", ["None"], ["", "", "def", "set_requires_grad_except_bn_", "(", "params", ")", ":", "\n", "    ", "for", "k", ",", "v", "in", "params", ".", "items", "(", ")", ":", "\n", "        ", "if", "not", "k", ".", "endswith", "(", "'running_mean'", ")", "and", "not", "k", ".", "endswith", "(", "'running_var'", ")", ":", "\n", "            ", "v", ".", "requires_grad", "=", "True", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.sundw2014_DCM.wrn.KL_divergence.KL_divergence": [[7, 25], ["torch.softmax", "torch.softmax", "list", "list", "torch.mean", "torch.mean", "F.softmax.size", "F.softmax.size", "torch.sum", "torch.sum", "torch.autograd.Variable", "torch.autograd.Variable", "torch.log", "torch.log", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones().cuda", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "function", ["None"], ["def", "KL_divergence", "(", "logits_p", ",", "logits_q", ")", ":", "\n", "# p = softmax(logits_p)", "\n", "# q = softmax(logits_q)", "\n", "# KL(p||q)", "\n", "# suppose that p/q is in shape of [bs, num_classes]", "\n", "\n", "    ", "p", "=", "F", ".", "softmax", "(", "logits_p", ",", "dim", "=", "1", ")", "\n", "q", "=", "F", ".", "softmax", "(", "logits_q", ",", "dim", "=", "1", ")", "\n", "\n", "shape", "=", "list", "(", "p", ".", "size", "(", ")", ")", "\n", "_shape", "=", "list", "(", "q", ".", "size", "(", ")", ")", "\n", "assert", "shape", "==", "_shape", "\n", "#print(shape)", "\n", "num_classes", "=", "shape", "[", "1", "]", "\n", "epsilon", "=", "1e-8", "\n", "_p", "=", "(", "p", "+", "epsilon", "*", "Variable", "(", "torch", ".", "ones", "(", "*", "shape", ")", ".", "cuda", "(", ")", ")", ")", "/", "(", "1.0", "+", "num_classes", "*", "epsilon", ")", "\n", "_q", "=", "(", "q", "+", "epsilon", "*", "Variable", "(", "torch", ".", "ones", "(", "*", "shape", ")", ".", "cuda", "(", ")", ")", ")", "/", "(", "1.0", "+", "num_classes", "*", "epsilon", ")", "\n", "return", "torch", ".", "mean", "(", "torch", ".", "sum", "(", "_p", "*", "torch", ".", "log", "(", "_p", "/", "_q", ")", ",", "1", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.sundw2014_DCM.wrn.main.create_dataset": [[66, 80], ["torchvision.Compose", "torchvision.Compose", "getattr", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.Pad", "torchvision.RandomHorizontalFlip", "torchvision.RandomCrop", "numpy.array", "numpy.array"], "function", ["None"], ["\n", "def", "create_dataset", "(", "opt", ",", "train", ")", ":", "\n", "    ", "transform", "=", "T", ".", "Compose", "(", "[", "\n", "T", ".", "ToTensor", "(", ")", ",", "\n", "T", ".", "Normalize", "(", "np", ".", "array", "(", "[", "125.3", ",", "123.0", ",", "113.9", "]", ")", "/", "255.0", ",", "\n", "np", ".", "array", "(", "[", "63.0", ",", "62.1", ",", "66.7", "]", ")", "/", "255.0", ")", ",", "\n", "]", ")", "\n", "if", "train", ":", "\n", "        ", "transform", "=", "T", ".", "Compose", "(", "[", "\n", "T", ".", "Pad", "(", "4", ",", "padding_mode", "=", "'reflect'", ")", ",", "\n", "T", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "T", ".", "RandomCrop", "(", "32", ")", ",", "\n", "transform", "\n", "]", ")", "\n", "", "return", "getattr", "(", "datasets", ",", "opt", ".", "dataset", ")", "(", "opt", ".", "dataroot", ",", "train", "=", "train", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "\n"]], "home.repos.pwc.inspect_result.sundw2014_DCM.wrn.main.main": [[84, 251], ["parser.parse_args", "print", "json.loads", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "main.main.create_iterator"], "function", ["None"], ["\n", "def", "main", "(", ")", ":", "\n", "    ", "opt", "=", "parser", ".", "parse_args", "(", ")", "\n", "print", "(", "'parsed options:'", ",", "vars", "(", "opt", ")", ")", "\n", "epoch_step", "=", "json", ".", "loads", "(", "opt", ".", "epoch_step", ")", "\n", "num_classes", "=", "10", "if", "opt", ".", "dataset", "==", "'CIFAR10'", "else", "100", "\n", "\n", "torch", ".", "manual_seed", "(", "opt", ".", "seed", ")", "\n", "os", ".", "environ", "[", "'CUDA_VISIBLE_DEVICES'", "]", "=", "opt", ".", "gpu_id", "\n", "\n", "def", "create_iterator", "(", "mode", ")", ":", "\n", "        ", "return", "DataLoader", "(", "create_dataset", "(", "opt", ",", "mode", ")", ",", "opt", ".", "batch_size", ",", "shuffle", "=", "mode", ",", "\n", "num_workers", "=", "opt", ".", "nthread", ",", "pin_memory", "=", "torch", ".", "cuda", ".", "is_available", "(", ")", ")", "\n", "\n", "", "train_loader", "=", "create_iterator", "(", "True", ")", "\n", "test_loader", "=", "create_iterator", "(", "False", ")", "\n", "\n", "f_1", ",", "params_1", "=", "resnet", "(", "opt", ".", "depth", ",", "opt", ".", "width", ",", "num_classes", ")", "\n", "model_2", "=", "mobilenet", "(", ")", "\n", "model_2", "=", "torch", ".", "nn", ".", "DataParallel", "(", "model_2", ")", ".", "cuda", "(", ")", "\n", "f_2", "=", "model_2", ".", "forward", "\n", "params_2", "=", "dict", "(", "model_2", ".", "named_parameters", "(", ")", ")", "\n", "\n", "def", "create_optimizer", "(", "opt", ",", "lr", ")", ":", "\n", "        ", "print", "(", "'creating optimizer with lr = '", ",", "lr", ")", "\n", "return", "SGD", "(", "[", "v", "for", "v", "in", "params_1", ".", "values", "(", ")", "if", "v", ".", "requires_grad", "]", "+", "[", "v", "for", "v", "in", "params_2", ".", "values", "(", ")", "if", "v", ".", "requires_grad", "]", ",", "lr", ",", "momentum", "=", "0.9", ",", "weight_decay", "=", "opt", ".", "weight_decay", ")", "\n", "\n", "", "optimizer", "=", "create_optimizer", "(", "opt", ",", "opt", ".", "lr", ")", "\n", "\n", "epoch", "=", "0", "\n", "if", "opt", ".", "resume", "!=", "''", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n", "", "print", "(", "'\\nParameters:'", ")", "\n", "print_tensor_dict", "(", "params_1", ")", "\n", "print_tensor_dict", "(", "params_2", ")", "\n", "\n", "n_parameters", "=", "sum", "(", "[", "p", ".", "numel", "(", ")", "for", "p", "in", "params_1", ".", "values", "(", ")", "if", "p", ".", "requires_grad", "]", "+", "[", "p", ".", "numel", "(", ")", "for", "p", "in", "params_2", ".", "values", "(", ")", "if", "p", ".", "requires_grad", "]", ")", "\n", "print", "(", "'\\nTotal number of parameters:'", ",", "n_parameters", ")", "\n", "\n", "meter_loss", "=", "tnt", ".", "meter", ".", "AverageValueMeter", "(", ")", "\n", "classacc", "=", "tnt", ".", "meter", ".", "ClassErrorMeter", "(", "accuracy", "=", "True", ")", "\n", "timer_train", "=", "tnt", ".", "meter", ".", "TimeMeter", "(", "'s'", ")", "\n", "timer_test", "=", "tnt", ".", "meter", ".", "TimeMeter", "(", "'s'", ")", "\n", "classacc_another", "=", "tnt", ".", "meter", ".", "ClassErrorMeter", "(", "accuracy", "=", "True", ")", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "opt", ".", "save", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "opt", ".", "save", ")", "\n", "\n", "", "def", "h", "(", "sample", ")", ":", "\n", "        ", "global", "_outputs", ",", "_loss", "\n", "\n", "connection_map", "=", "np", ".", "array", "(", "[", "\n", "[", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", "]", ",", "\n", "[", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", "]", ",", "\n", "\n", "[", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", "]", ",", "\n", "[", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", "]", "]", ")", "\n", "\n", "inputs", "=", "cast", "(", "sample", "[", "0", "]", ",", "opt", ".", "dtype", ")", "\n", "targets", "=", "cast", "(", "sample", "[", "1", "]", ",", "'long'", ")", "\n", "net1_outputs", "=", "data_parallel", "(", "f_1", ",", "inputs", ",", "params_1", ",", "sample", "[", "2", "]", ",", "list", "(", "range", "(", "opt", ".", "ngpu", ")", ")", ")", "\n", "net2_outputs", "=", "model_2", "(", "inputs", ")", "\n", "net1_outputs", "=", "[", "o", ".", "float", "(", ")", "for", "o", "in", "net1_outputs", "]", "\n", "net2_outputs", "=", "[", "o", ".", "float", "(", ")", "for", "o", "in", "net2_outputs", "]", "\n", "\n", "_loss", "=", "[", "]", "\n", "\n", "# hard supervision", "\n", "for", "i", ",", "o", "in", "enumerate", "(", "net1_outputs", ")", ":", "\n", "            ", "_loss", ".", "append", "(", "F", ".", "cross_entropy", "(", "o", ",", "targets", ")", ")", "\n", "\n", "", "for", "i", ",", "o", "in", "enumerate", "(", "net2_outputs", ")", ":", "\n", "            ", "_loss", ".", "append", "(", "F", ".", "cross_entropy", "(", "o", ",", "targets", ")", ")", "\n", "\n", "", "outputs", "=", "net1_outputs", "+", "net2_outputs", "\n", "# soft supervision", "\n", "for", "i", ",", "o", "in", "enumerate", "(", "outputs", ")", ":", "\n", "            ", "for", "j", ",", "o2", "in", "enumerate", "(", "outputs", ")", ":", "\n", "                ", "if", "connection_map", "[", "i", ",", "j", "]", ">", "0", ":", "\n", "                    ", "_loss", ".", "append", "(", "KL_divergence", "(", "o2", ".", "detach", "(", ")", ",", "o", ")", ")", "\n", "\n", "", "", "", "loss", "=", "sum", "(", "_loss", ")", "\n", "_outputs", "=", "net2_outputs", "[", "-", "1", "]", ".", "detach", "(", ")", "\n", "\n", "return", "loss", ",", "net1_outputs", "[", "-", "1", "]", "\n", "\n", "", "def", "log", "(", "t", ",", "state", ")", ":", "\n", "        ", "torch", ".", "save", "(", "dict", "(", "params", "=", "params_1", ",", "epoch", "=", "t", "[", "'epoch'", "]", ",", "optimizer", "=", "state", "[", "'optimizer'", "]", ".", "state_dict", "(", ")", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "opt", ".", "save", ",", "'model.pt7'", ")", ")", "\n", "z", "=", "{", "**", "vars", "(", "opt", ")", ",", "**", "t", "}", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "opt", ".", "save", ",", "'log.txt'", ")", ",", "'a'", ")", "as", "flog", ":", "\n", "            ", "flog", ".", "write", "(", "'json_stats: '", "+", "json", ".", "dumps", "(", "z", ")", "+", "'\\n'", ")", "\n", "", "print", "(", "z", ")", "\n", "\n", "", "def", "on_sample", "(", "state", ")", ":", "\n", "        ", "state", "[", "'sample'", "]", ".", "append", "(", "state", "[", "'train'", "]", ")", "\n", "\n", "", "def", "on_forward", "(", "state", ")", ":", "\n", "        ", "loss", "=", "float", "(", "state", "[", "'loss'", "]", ")", "\n", "classacc", ".", "add", "(", "state", "[", "'output'", "]", ".", "data", ",", "state", "[", "'sample'", "]", "[", "1", "]", ")", "\n", "classacc_another", ".", "add", "(", "_outputs", ".", "data", ",", "state", "[", "'sample'", "]", "[", "1", "]", ")", "\n", "meter_loss", ".", "add", "(", "loss", ")", "\n", "if", "state", "[", "'train'", "]", ":", "\n", "            ", "state", "[", "'iterator'", "]", ".", "set_postfix", "(", "loss", "=", "loss", ")", "\n", "\n", "", "", "def", "on_start", "(", "state", ")", ":", "\n", "        ", "state", "[", "'epoch'", "]", "=", "epoch", "\n", "\n", "", "def", "on_start_epoch", "(", "state", ")", ":", "\n", "        ", "classacc", ".", "reset", "(", ")", "\n", "classacc_another", ".", "reset", "(", ")", "\n", "meter_loss", ".", "reset", "(", ")", "\n", "timer_train", ".", "reset", "(", ")", "\n", "state", "[", "'iterator'", "]", "=", "tqdm", "(", "train_loader", ",", "dynamic_ncols", "=", "True", ")", "\n", "\n", "epoch", "=", "state", "[", "'epoch'", "]", "+", "1", "\n", "if", "epoch", "in", "epoch_step", ":", "\n", "            ", "lr", "=", "state", "[", "'optimizer'", "]", ".", "param_groups", "[", "0", "]", "[", "'lr'", "]", "\n", "state", "[", "'optimizer'", "]", "=", "create_optimizer", "(", "opt", ",", "lr", "*", "opt", ".", "lr_decay_ratio", ")", "\n", "\n", "", "", "def", "on_end_epoch", "(", "state", ")", ":", "\n", "        ", "train_loss", "=", "meter_loss", ".", "value", "(", ")", "\n", "train_acc", "=", "classacc", ".", "value", "(", ")", "\n", "train_time", "=", "timer_train", ".", "value", "(", ")", "\n", "train_acc_another", "=", "classacc_another", ".", "value", "(", ")", "\n", "\n", "meter_loss", ".", "reset", "(", ")", "\n", "classacc", ".", "reset", "(", ")", "\n", "timer_test", ".", "reset", "(", ")", "\n", "classacc_another", ".", "reset", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "engine", ".", "test", "(", "h", ",", "test_loader", ")", "\n", "\n", "", "test_acc", "=", "classacc", ".", "value", "(", ")", "[", "0", "]", "\n", "test_acc_another", "=", "classacc_another", ".", "value", "(", ")", "[", "0", "]", "\n", "print", "(", "log", "(", "{", "\n", "\"train_loss\"", ":", "train_loss", "[", "0", "]", ",", "\n", "\"train_acc\"", ":", "train_acc", "[", "0", "]", ",", "\n", "\"test_loss\"", ":", "meter_loss", ".", "value", "(", ")", "[", "0", "]", ",", "\n", "\"test_acc\"", ":", "test_acc", ",", "\n", "\"train_acc_another\"", ":", "train_acc_another", "[", "0", "]", ",", "\n", "\"test_acc_another\"", ":", "test_acc_another", ",", "\n", "\n", "\"epoch\"", ":", "state", "[", "'epoch'", "]", ",", "\n", "\"num_classes\"", ":", "num_classes", ",", "\n", "\"n_parameters\"", ":", "n_parameters", ",", "\n", "\"train_time\"", ":", "train_time", ",", "\n", "\"test_time\"", ":", "timer_test", ".", "value", "(", ")", ",", "\n", "}", ",", "state", ")", ")", "\n", "print", "(", "'==> id: %s (%d/%d), test_acc: \\33[91m%.2f\\033[0m'", "%", "\n", "(", "opt", ".", "save", ",", "state", "[", "'epoch'", "]", ",", "opt", ".", "epochs", ",", "test_acc", ")", ")", "\n", "\n", "", "engine", "=", "Engine", "(", ")", "\n", "engine", ".", "hooks", "[", "'on_sample'", "]", "=", "on_sample", "\n", "engine", ".", "hooks", "[", "'on_forward'", "]", "=", "on_forward", "\n", "engine", ".", "hooks", "[", "'on_start_epoch'", "]", "=", "on_start_epoch", "\n", "engine", ".", "hooks", "[", "'on_end_epoch'", "]", "=", "on_end_epoch", "\n", "engine", ".", "hooks", "[", "'on_start'", "]", "=", "on_start", "\n", "engine", ".", "train", "(", "h", ",", "train_loader", ",", "opt", ".", "epochs", ",", "optimizer", ")", "\n", "\n", "\n", "", "if", "__name__", "==", "'__main__'", ":", "\n", "    ", "main", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.sundw2014_DCM.wrn.resnet.resnet": [[6, 85], ["utils.cast", "utils.set_requires_grad_except_bn_", "int", "utils.flatten", "torch.relu", "torch.conv2d", "torch.relu", "torch.conv2d", "range", "torch.conv2d", "resnet.resnet.group"], "function", ["home.repos.pwc.inspect_result.sundw2014_DCM.wrn.utils.cast", "home.repos.pwc.inspect_result.sundw2014_DCM.wrn.utils.set_requires_grad_except_bn_", "home.repos.pwc.inspect_result.sundw2014_DCM.wrn.utils.flatten"], ["def", "resnet", "(", "depth", ",", "width", ",", "num_classes", ")", ":", "\n", "    ", "assert", "(", "depth", "-", "4", ")", "%", "6", "==", "0", ",", "'depth should be 6n+4'", "\n", "n", "=", "(", "depth", "-", "4", ")", "//", "6", "\n", "widths", "=", "[", "int", "(", "v", "*", "width", ")", "for", "v", "in", "(", "16", ",", "32", ",", "64", ")", "]", "\n", "\n", "def", "gen_block_params", "(", "ni", ",", "no", ")", ":", "\n", "        ", "return", "{", "\n", "'conv0'", ":", "utils", ".", "conv_params", "(", "ni", ",", "no", ",", "3", ")", ",", "\n", "'conv1'", ":", "utils", ".", "conv_params", "(", "no", ",", "no", ",", "3", ")", ",", "\n", "'bn0'", ":", "utils", ".", "bnparams", "(", "ni", ")", ",", "\n", "'bn1'", ":", "utils", ".", "bnparams", "(", "no", ")", ",", "\n", "'convdim'", ":", "utils", ".", "conv_params", "(", "ni", ",", "no", ",", "1", ")", "if", "ni", "!=", "no", "else", "None", ",", "\n", "}", "\n", "\n", "", "def", "gen_group_params", "(", "ni", ",", "no", ",", "count", ")", ":", "\n", "        ", "return", "{", "'block%d'", "%", "i", ":", "gen_block_params", "(", "ni", "if", "i", "==", "0", "else", "no", ",", "no", ")", "\n", "for", "i", "in", "range", "(", "count", ")", "}", "\n", "\n", "", "flat_params", "=", "utils", ".", "cast", "(", "utils", ".", "flatten", "(", "{", "\n", "'conv0'", ":", "utils", ".", "conv_params", "(", "3", ",", "16", ",", "3", ")", ",", "\n", "'group0'", ":", "gen_group_params", "(", "16", ",", "widths", "[", "0", "]", ",", "n", ")", ",", "\n", "'group1'", ":", "gen_group_params", "(", "widths", "[", "0", "]", ",", "widths", "[", "1", "]", ",", "n", ")", ",", "\n", "'group2'", ":", "gen_group_params", "(", "widths", "[", "1", "]", ",", "widths", "[", "2", "]", ",", "n", ")", ",", "\n", "'bn'", ":", "utils", ".", "bnparams", "(", "widths", "[", "2", "]", ")", ",", "\n", "'fc'", ":", "utils", ".", "linear_params", "(", "widths", "[", "2", "]", ",", "num_classes", ")", ",", "\n", "# ep1", "\n", "'ep1_group1'", ":", "gen_group_params", "(", "widths", "[", "0", "]", ",", "widths", "[", "1", "]", ",", "n", ")", ",", "\n", "'ep1_group2'", ":", "gen_group_params", "(", "widths", "[", "1", "]", ",", "widths", "[", "2", "]", ",", "n", "//", "2", ")", ",", "\n", "'ep1_bn'", ":", "utils", ".", "bnparams", "(", "widths", "[", "2", "]", ")", ",", "\n", "'ep1_fc'", ":", "utils", ".", "linear_params", "(", "widths", "[", "2", "]", ",", "num_classes", ")", ",", "\n", "# ep2", "\n", "'ep2_group2'", ":", "gen_group_params", "(", "widths", "[", "1", "]", ",", "widths", "[", "2", "]", "*", "2", ",", "n", ")", ",", "\n", "'ep2_bn'", ":", "utils", ".", "bnparams", "(", "widths", "[", "2", "]", "*", "2", ")", ",", "\n", "'ep2_fc'", ":", "utils", ".", "linear_params", "(", "widths", "[", "2", "]", "*", "2", ",", "num_classes", ")", ",", "\n", "}", ")", ")", "\n", "\n", "utils", ".", "set_requires_grad_except_bn_", "(", "flat_params", ")", "\n", "\n", "def", "block", "(", "x", ",", "params", ",", "base", ",", "mode", ",", "stride", ")", ":", "\n", "        ", "o1", "=", "F", ".", "relu", "(", "utils", ".", "batch_norm", "(", "x", ",", "params", ",", "base", "+", "'.bn0'", ",", "mode", ")", ",", "inplace", "=", "True", ")", "\n", "y", "=", "F", ".", "conv2d", "(", "o1", ",", "params", "[", "base", "+", "'.conv0'", "]", ",", "stride", "=", "stride", ",", "padding", "=", "1", ")", "\n", "o2", "=", "F", ".", "relu", "(", "utils", ".", "batch_norm", "(", "y", ",", "params", ",", "base", "+", "'.bn1'", ",", "mode", ")", ",", "inplace", "=", "True", ")", "\n", "z", "=", "F", ".", "conv2d", "(", "o2", ",", "params", "[", "base", "+", "'.conv1'", "]", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "if", "base", "+", "'.convdim'", "in", "params", ":", "\n", "            ", "return", "z", "+", "F", ".", "conv2d", "(", "o1", ",", "params", "[", "base", "+", "'.convdim'", "]", ",", "stride", "=", "stride", ")", "\n", "", "else", ":", "\n", "            ", "return", "z", "+", "x", "\n", "\n", "", "", "def", "group", "(", "o", ",", "params", ",", "base", ",", "mode", ",", "stride", ",", "_n", "=", "n", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "_n", ")", ":", "\n", "            ", "o", "=", "block", "(", "o", ",", "params", ",", "'%s.block%d'", "%", "(", "base", ",", "i", ")", ",", "mode", ",", "stride", "if", "i", "==", "0", "else", "1", ")", "\n", "", "return", "o", "\n", "\n", "", "def", "f", "(", "input", ",", "params", ",", "mode", ")", ":", "\n", "        ", "x", "=", "F", ".", "conv2d", "(", "input", ",", "params", "[", "'conv0'", "]", ",", "padding", "=", "1", ")", "\n", "g0", "=", "group", "(", "x", ",", "params", ",", "'group0'", ",", "mode", ",", "1", ")", "\n", "g1", "=", "group", "(", "g0", ",", "params", ",", "'group1'", ",", "mode", ",", "2", ")", "\n", "g2", "=", "group", "(", "g1", ",", "params", ",", "'group2'", ",", "mode", ",", "2", ")", "\n", "o", "=", "F", ".", "relu", "(", "utils", ".", "batch_norm", "(", "g2", ",", "params", ",", "'bn'", ",", "mode", ")", ")", "\n", "o", "=", "F", ".", "avg_pool2d", "(", "o", ",", "8", ",", "1", ",", "0", ")", "\n", "o", "=", "o", ".", "view", "(", "o", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "o", "=", "F", ".", "linear", "(", "o", ",", "params", "[", "'fc.weight'", "]", ",", "params", "[", "'fc.bias'", "]", ")", "\n", "\n", "ep1_g1", "=", "group", "(", "g0", ",", "params", ",", "'ep1_group1'", ",", "mode", ",", "2", ")", "\n", "ep1_g2", "=", "group", "(", "ep1_g1", ",", "params", ",", "'ep1_group2'", ",", "mode", ",", "2", ",", "_n", "=", "n", "//", "2", ")", "\n", "ep1_o", "=", "F", ".", "relu", "(", "utils", ".", "batch_norm", "(", "ep1_g2", ",", "params", ",", "'ep1_bn'", ",", "mode", ")", ")", "\n", "ep1_o", "=", "F", ".", "avg_pool2d", "(", "ep1_o", ",", "8", ",", "1", ",", "0", ")", "\n", "ep1_o", "=", "ep1_o", ".", "view", "(", "ep1_o", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "ep1_o", "=", "F", ".", "linear", "(", "ep1_o", ",", "params", "[", "'ep1_fc.weight'", "]", ",", "params", "[", "'ep1_fc.bias'", "]", ")", "\n", "\n", "ep2_g2", "=", "group", "(", "g1", ",", "params", ",", "'ep2_group2'", ",", "mode", ",", "2", ")", "\n", "ep2_o", "=", "F", ".", "relu", "(", "utils", ".", "batch_norm", "(", "ep2_g2", ",", "params", ",", "'ep2_bn'", ",", "mode", ")", ")", "\n", "ep2_o", "=", "F", ".", "avg_pool2d", "(", "ep2_o", ",", "8", ",", "1", ",", "0", ")", "\n", "ep2_o", "=", "ep2_o", ".", "view", "(", "ep2_o", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "ep2_o", "=", "F", ".", "linear", "(", "ep2_o", ",", "params", "[", "'ep2_fc.weight'", "]", ",", "params", "[", "'ep2_fc.bias'", "]", ")", "\n", "\n", "return", "(", "ep1_o", ",", "ep2_o", ",", "o", ")", "\n", "\n", "", "return", "f", ",", "flat_params", "\n", "", ""]], "home.repos.pwc.inspect_result.sundw2014_DCM.wrn.utils.cast": [[10, 15], ["isinstance", "utils.cast", "getattr", "params.items", "torch.cuda.is_available", "torch.cuda.is_available", "params.cuda"], "function", ["home.repos.pwc.inspect_result.sundw2014_DCM.wrn.utils.cast"], ["def", "cast", "(", "params", ",", "dtype", "=", "'float'", ")", ":", "\n", "    ", "if", "isinstance", "(", "params", ",", "dict", ")", ":", "\n", "        ", "return", "{", "k", ":", "cast", "(", "v", ",", "dtype", ")", "for", "k", ",", "v", "in", "params", ".", "items", "(", ")", "}", "\n", "", "else", ":", "\n", "        ", "return", "getattr", "(", "params", ".", "cuda", "(", ")", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "else", "params", ",", "dtype", ")", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sundw2014_DCM.wrn.utils.conv_params": [[17, 19], ["torch.nn.init.kaiming_normal_", "torch.Tensor", "torch.Tensor"], "function", ["None"], ["", "", "def", "conv_params", "(", "ni", ",", "no", ",", "k", "=", "1", ")", ":", "\n", "    ", "return", "kaiming_normal_", "(", "torch", ".", "Tensor", "(", "no", ",", "ni", ",", "k", ",", "k", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sundw2014_DCM.wrn.utils.linear_params": [[21, 23], ["torch.nn.init.kaiming_normal_", "torch.zeros", "torch.zeros", "torch.Tensor", "torch.Tensor"], "function", ["None"], ["", "def", "linear_params", "(", "ni", ",", "no", ")", ":", "\n", "    ", "return", "{", "'weight'", ":", "kaiming_normal_", "(", "torch", ".", "Tensor", "(", "no", ",", "ni", ")", ")", ",", "'bias'", ":", "torch", ".", "zeros", "(", "no", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.sundw2014_DCM.wrn.utils.bnparams": [[25, 30], ["torch.rand", "torch.rand", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.ones", "torch.ones"], "function", ["None"], ["", "def", "bnparams", "(", "n", ")", ":", "\n", "    ", "return", "{", "'weight'", ":", "torch", ".", "rand", "(", "n", ")", ",", "\n", "'bias'", ":", "torch", ".", "zeros", "(", "n", ")", ",", "\n", "'running_mean'", ":", "torch", ".", "zeros", "(", "n", ")", ",", "\n", "'running_var'", ":", "torch", ".", "ones", "(", "n", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.sundw2014_DCM.wrn.utils.data_parallel": [[32, 49], ["isinstance", "torch.nn.parallel._functions.Broadcast.apply", "torch.nn.parallel.scatter", "torch.nn.parallel.parallel_apply", "torch.nn.parallel.gather", "len", "f", "functools.partial", "params.values", "range", "enumerate", "len", "params.keys", "len"], "function", ["None"], ["", "def", "data_parallel", "(", "f", ",", "input", ",", "params", ",", "mode", ",", "device_ids", ",", "output_device", "=", "None", ")", ":", "\n", "    ", "assert", "isinstance", "(", "device_ids", ",", "list", ")", "\n", "if", "output_device", "is", "None", ":", "\n", "        ", "output_device", "=", "device_ids", "[", "0", "]", "\n", "\n", "", "if", "len", "(", "device_ids", ")", "==", "1", ":", "\n", "        ", "return", "f", "(", "input", ",", "params", ",", "mode", ")", "\n", "\n", "", "params_all", "=", "Broadcast", ".", "apply", "(", "device_ids", ",", "*", "params", ".", "values", "(", ")", ")", "\n", "params_replicas", "=", "[", "{", "k", ":", "params_all", "[", "i", "+", "j", "*", "len", "(", "params", ")", "]", "for", "i", ",", "k", "in", "enumerate", "(", "params", ".", "keys", "(", ")", ")", "}", "\n", "for", "j", "in", "range", "(", "len", "(", "device_ids", ")", ")", "]", "\n", "\n", "replicas", "=", "[", "partial", "(", "f", ",", "params", "=", "p", ",", "mode", "=", "mode", ")", "\n", "for", "p", "in", "params_replicas", "]", "\n", "inputs", "=", "scatter", "(", "[", "input", "]", ",", "device_ids", ")", "\n", "outputs", "=", "parallel_apply", "(", "replicas", ",", "inputs", ")", "\n", "return", "gather", "(", "outputs", ",", "output_device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sundw2014_DCM.wrn.utils.flatten": [[51, 53], ["nested_dict.nested_dict().items_flat", "nested_dict.nested_dict"], "function", ["None"], ["", "def", "flatten", "(", "params", ")", ":", "\n", "    ", "return", "{", "'.'", ".", "join", "(", "k", ")", ":", "v", "for", "k", ",", "v", "in", "nested_dict", "(", "params", ")", ".", "items_flat", "(", ")", "if", "v", "is", "not", "None", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.sundw2014_DCM.wrn.utils.batch_norm": [[55, 61], ["torch.batch_norm"], "function", ["home.repos.pwc.inspect_result.sundw2014_DCM.wrn.utils.batch_norm"], ["", "def", "batch_norm", "(", "x", ",", "params", ",", "base", ",", "mode", ")", ":", "\n", "    ", "return", "F", ".", "batch_norm", "(", "x", ",", "weight", "=", "params", "[", "base", "+", "'.weight'", "]", ",", "\n", "bias", "=", "params", "[", "base", "+", "'.bias'", "]", ",", "\n", "running_mean", "=", "params", "[", "base", "+", "'.running_mean'", "]", ",", "\n", "running_var", "=", "params", "[", "base", "+", "'.running_var'", "]", ",", "\n", "training", "=", "mode", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sundw2014_DCM.wrn.utils.print_tensor_dict": [[63, 67], ["max", "enumerate", "params.items", "print", "len", "str().ljust", "key.ljust", "str().ljust", "torch.typename", "torch.typename", "params.keys", "str", "str", "tuple"], "function", ["None"], ["", "def", "print_tensor_dict", "(", "params", ")", ":", "\n", "    ", "kmax", "=", "max", "(", "len", "(", "key", ")", "for", "key", "in", "params", ".", "keys", "(", ")", ")", "\n", "for", "i", ",", "(", "key", ",", "v", ")", "in", "enumerate", "(", "params", ".", "items", "(", ")", ")", ":", "\n", "        ", "print", "(", "str", "(", "i", ")", ".", "ljust", "(", "5", ")", ",", "key", ".", "ljust", "(", "kmax", "+", "3", ")", ",", "str", "(", "tuple", "(", "v", ".", "shape", ")", ")", ".", "ljust", "(", "23", ")", ",", "torch", ".", "typename", "(", "v", ")", ",", "v", ".", "requires_grad", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.sundw2014_DCM.wrn.utils.set_requires_grad_except_bn_": [[69, 73], ["params.items", "k.endswith", "k.endswith"], "function", ["None"], ["", "", "def", "set_requires_grad_except_bn_", "(", "params", ")", ":", "\n", "    ", "for", "k", ",", "v", "in", "params", ".", "items", "(", ")", ":", "\n", "        ", "if", "not", "k", ".", "endswith", "(", "'running_mean'", ")", "and", "not", "k", ".", "endswith", "(", "'running_var'", ")", ":", "\n", "            ", "v", ".", "requires_grad", "=", "True", "\n", "", "", "", ""]]}