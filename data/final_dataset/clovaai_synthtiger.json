{"home.repos.pwc.inspect_result.clovaai_synthtiger.None.setup.read_version": [[8, 14], ["os.path.join", "open", "exec", "fp.read"], "function", ["None"], ["def", "read_version", "(", ")", ":", "\n", "    ", "data", "=", "{", "}", "\n", "path", "=", "os", ".", "path", ".", "join", "(", "ROOT", ",", "\"synthtiger\"", ",", "\"_version.py\"", ")", "\n", "with", "open", "(", "path", ",", "\"r\"", ",", "encoding", "=", "\"utf-8\"", ")", "as", "fp", ":", "\n", "        ", "exec", "(", "fp", ".", "read", "(", ")", ",", "data", ")", "\n", "", "return", "data", "[", "\"__version__\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.None.setup.read_long_description": [[16, 21], ["os.path.join", "open", "fp.read"], "function", ["None"], ["", "def", "read_long_description", "(", ")", ":", "\n", "    ", "path", "=", "os", ".", "path", ".", "join", "(", "ROOT", ",", "\"README.md\"", ")", "\n", "with", "open", "(", "path", ",", "\"r\"", ",", "encoding", "=", "\"utf-8\"", ")", "as", "fp", ":", "\n", "        ", "text", "=", "fp", ".", "read", "(", ")", "\n", "", "return", "text", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.tools.create_colormap.search_files": [[19, 35], ["os.walk", "os.path.join", "paths.append", "os.path.splitext", "file_ext.lower"], "function", ["None"], ["def", "search_files", "(", "root", ",", "names", "=", "None", ",", "exts", "=", "None", ")", ":", "\n", "    ", "paths", "=", "[", "]", "\n", "\n", "for", "dir_path", ",", "_", ",", "file_names", "in", "os", ".", "walk", "(", "root", ")", ":", "\n", "        ", "for", "file_name", "in", "file_names", ":", "\n", "            ", "file_path", "=", "os", ".", "path", ".", "join", "(", "dir_path", ",", "file_name", ")", "\n", "file_ext", "=", "os", ".", "path", ".", "splitext", "(", "file_name", ")", "[", "1", "]", "\n", "\n", "if", "names", "is", "not", "None", "and", "file_name", "not", "in", "names", ":", "\n", "                ", "continue", "\n", "", "if", "exts", "is", "not", "None", "and", "file_ext", ".", "lower", "(", ")", "not", "in", "exts", ":", "\n", "                ", "continue", "\n", "\n", "", "paths", ".", "append", "(", "file_path", ")", "\n", "\n", "", "", "return", "paths", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.tools.create_colormap.write_cluster": [[37, 47], ["fp.write", "str", "texts.append", "list", "map"], "function", ["None"], ["", "def", "write_cluster", "(", "fp", ",", "clusters", ")", ":", "\n", "    ", "texts", "=", "[", "]", "\n", "\n", "for", "center", ",", "std", "in", "clusters", ":", "\n", "        ", "center", "=", "\",\"", ".", "join", "(", "list", "(", "map", "(", "str", ",", "center", ")", ")", ")", "\n", "std", "=", "str", "(", "std", ")", "\n", "texts", ".", "append", "(", "f\"{center}\\t{std}\"", ")", "\n", "\n", "", "text", "=", "\"\\t\"", ".", "join", "(", "texts", ")", "\n", "fp", ".", "write", "(", "f\"{text}\\n\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.tools.create_colormap.get_cluster": [[49, 69], ["PIL.Image.open().convert", "numpy.array().reshape", "scipy.cluster.vq.kmeans", "scipy.cluster.vq.vq", "zip", "sorted", "len", "numpy.std", "sorted.append", "PIL.Image.open", "numpy.array", "range", "len", "list"], "function", ["None"], ["", "def", "get_cluster", "(", "path", ",", "k", ",", "rgb", "=", "False", ")", ":", "\n", "    ", "clusters", "=", "[", "]", "\n", "\n", "mode", "=", "\"RGB\"", "if", "rgb", "else", "\"L\"", "\n", "channel", "=", "3", "if", "rgb", "else", "1", "\n", "image", "=", "Image", ".", "open", "(", "path", ")", ".", "convert", "(", "mode", ")", "\n", "image", "=", "np", ".", "array", "(", "image", ",", "dtype", "=", "np", ".", "float32", ")", ".", "reshape", "(", "-", "1", ",", "channel", ")", "\n", "\n", "centers", ",", "_", "=", "scipy", ".", "cluster", ".", "vq", ".", "kmeans", "(", "image", ",", "k", ")", "\n", "if", "len", "(", "centers", ")", "!=", "k", ":", "\n", "        ", "return", "None", "\n", "\n", "", "vecs", ",", "_", "=", "scipy", ".", "cluster", ".", "vq", ".", "vq", "(", "image", ",", "centers", ")", "\n", "stds", "=", "[", "np", ".", "std", "(", "image", "[", "vecs", "==", "idx", "]", ")", "for", "idx", "in", "range", "(", "len", "(", "centers", ")", ")", "]", "\n", "\n", "for", "center", ",", "std", "in", "zip", "(", "centers", ",", "stds", ")", ":", "\n", "        ", "clusters", ".", "append", "(", "(", "list", "(", "center", ")", ",", "std", ")", ")", "\n", "\n", "", "clusters", "=", "sorted", "(", "clusters", ")", "\n", "return", "clusters", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.tools.create_colormap.run": [[71, 102], ["create_colormap.search_files", "os.makedirs", "open", "concurrent.futures.ProcessPoolExecutor", "range", "concurrent.futures.ProcessPoolExecutor.shutdown", "open.close", "print", "os.path.dirname", "concurrent.futures.as_completed", "concurrent.futures.ProcessPoolExecutor.submit", "executor.submit.result", "create_colormap.write_cluster", "print", "print", "traceback.format_exc"], "function", ["home.repos.pwc.inspect_result.clovaai_synthtiger.utils.file_util.search_files", "home.repos.pwc.inspect_result.clovaai_synthtiger.tools.create_colormap.write_cluster"], ["", "def", "run", "(", "args", ")", ":", "\n", "    ", "paths", "=", "search_files", "(", "args", ".", "input", ",", "exts", "=", "[", "\".jpg\"", ",", "\".jpeg\"", ",", "\".png\"", ",", "\".bmp\"", "]", ")", "\n", "os", ".", "makedirs", "(", "os", ".", "path", ".", "dirname", "(", "args", ".", "output", ")", ",", "exist_ok", "=", "True", ")", "\n", "output_file", "=", "open", "(", "args", ".", "output", ",", "\"w\"", ",", "encoding", "=", "\"utf-8\"", ")", "\n", "executor", "=", "ProcessPoolExecutor", "(", "max_workers", "=", "args", ".", "worker", ")", "\n", "count", "=", "0", "\n", "\n", "for", "k", "in", "range", "(", "2", ",", "args", ".", "max_k", "+", "1", ")", ":", "\n", "        ", "futures", "=", "{", "}", "\n", "\n", "for", "path", "in", "paths", ":", "\n", "            ", "future", "=", "executor", ".", "submit", "(", "get_cluster", ",", "path", ",", "k", ",", "args", ".", "rgb", ")", "\n", "futures", "[", "future", "]", "=", "path", "\n", "\n", "", "for", "future", "in", "as_completed", "(", "futures", ")", ":", "\n", "            ", "path", "=", "futures", "[", "future", "]", "\n", "\n", "try", ":", "\n", "                ", "clusters", "=", "future", ".", "result", "(", ")", "\n", "", "except", ":", "\n", "                ", "print", "(", "f\"{traceback.format_exc()} ({path})\"", ")", "\n", "continue", "\n", "\n", "", "if", "clusters", "is", "not", "None", ":", "\n", "                ", "write_cluster", "(", "output_file", ",", "clusters", ")", "\n", "count", "+=", "1", "\n", "print", "(", "f\"Created colormap ({k} colors) ({path})\"", ")", "\n", "\n", "", "", "", "executor", ".", "shutdown", "(", ")", "\n", "output_file", ".", "close", "(", ")", "\n", "print", "(", "f\"Created {count} colormaps\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.tools.create_colormap.parse_args": [[104, 144], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "pprint.pprint", "vars"], "function", ["home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.main.parse_args"], ["", "def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--rgb\"", ",", "\n", "action", "=", "\"store_true\"", ",", "\n", "default", "=", "False", ",", "\n", "help", "=", "\"Create rgb colormap instead of gray colormap.\"", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"--max_k\"", ",", "\n", "metavar", "=", "\"NUM\"", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "3", ",", "\n", "help", "=", "\"Maximum number of colors. [default: 3]\"", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"-w\"", ",", "\n", "\"--worker\"", ",", "\n", "metavar", "=", "\"NUM\"", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "1", ",", "\n", "help", "=", "\"Number of workers. [default: 1]\"", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"input\"", ",", "\n", "metavar", "=", "\"INPUT\"", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "\"Directory path containing image files.\"", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"output\"", ",", "\n", "metavar", "=", "\"OUTPUT\"", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "\"File path to save colormap.\"", ",", "\n", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "pprint", ".", "pprint", "(", "vars", "(", "args", ")", ")", "\n", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.tools.create_colormap.main": [[146, 152], ["time.time", "create_colormap.parse_args", "create_colormap.run", "time.time", "print"], "function", ["home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.main.parse_args", "home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.main.run"], ["", "def", "main", "(", ")", ":", "\n", "    ", "start_time", "=", "time", ".", "time", "(", ")", "\n", "args", "=", "parse_args", "(", ")", "\n", "run", "(", "args", ")", "\n", "end_time", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "f\"{end_time - start_time:.2f} seconds elapsed\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.tools.extract_font_charset.search_files": [[19, 35], ["os.walk", "os.path.join", "paths.append", "os.path.splitext", "file_ext.lower"], "function", ["None"], ["def", "search_files", "(", "root", ",", "names", "=", "None", ",", "exts", "=", "None", ")", ":", "\n", "    ", "paths", "=", "[", "]", "\n", "\n", "for", "dir_path", ",", "_", ",", "file_names", "in", "os", ".", "walk", "(", "root", ")", ":", "\n", "        ", "for", "file_name", "in", "file_names", ":", "\n", "            ", "file_path", "=", "os", ".", "path", ".", "join", "(", "dir_path", ",", "file_name", ")", "\n", "file_ext", "=", "os", ".", "path", ".", "splitext", "(", "file_name", ")", "[", "1", "]", "\n", "\n", "if", "names", "is", "not", "None", "and", "file_name", "not", "in", "names", ":", "\n", "                ", "continue", "\n", "", "if", "exts", "is", "not", "None", "and", "file_ext", ".", "lower", "(", ")", "not", "in", "exts", ":", "\n", "                ", "continue", "\n", "\n", "", "paths", ".", "append", "(", "file_path", ")", "\n", "\n", "", "", "return", "paths", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.tools.extract_font_charset.get_cmap": [[37, 51], ["set", "fontTools.ttLib.TTFont", "table.cmap.items", "set.add", "chr"], "function", ["None"], ["", "def", "get_cmap", "(", "path", ")", ":", "\n", "    ", "cmap", "=", "set", "(", ")", "\n", "font", "=", "TTFont", "(", "path", ")", "\n", "\n", "for", "table", "in", "font", "[", "\"cmap\"", "]", ".", "tables", ":", "\n", "        ", "for", "code", ",", "_", "in", "table", ".", "cmap", ".", "items", "(", ")", ":", "\n", "            ", "try", ":", "\n", "                ", "char", "=", "chr", "(", "code", ")", "\n", "", "except", ":", "\n", "                ", "continue", "\n", "\n", "", "cmap", ".", "add", "(", "char", ")", "\n", "\n", "", "", "return", "cmap", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.tools.extract_font_charset.get_glyphs": [[53, 78], ["extract_font_charset.get_cmap", "pygame.freetype.init", "pygame.freetype.Font", "unicodedata.category", "unicodedata.category.startswith", "glyphs[].append", "freetype.Font.render_raw"], "function", ["home.repos.pwc.inspect_result.clovaai_synthtiger.tools.extract_font_charset.get_cmap"], ["", "def", "get_glyphs", "(", "path", ")", ":", "\n", "    ", "glyphs", "=", "{", "}", "\n", "cmap", "=", "get_cmap", "(", "path", ")", "\n", "\n", "freetype", ".", "init", "(", ")", "\n", "font", "=", "freetype", ".", "Font", "(", "path", ")", "\n", "font", ".", "antialiased", "=", "True", "\n", "font", ".", "pad", "=", "True", "\n", "font", ".", "size", "=", "72", "\n", "\n", "for", "char", "in", "cmap", ":", "\n", "        ", "category", "=", "unicodedata", ".", "category", "(", "char", ")", "\n", "if", "category", ".", "startswith", "(", "\"C\"", ")", ":", "\n", "            ", "continue", "\n", "\n", "", "try", ":", "\n", "            ", "glyph", ",", "_", "=", "font", ".", "render_raw", "(", "char", ")", "\n", "", "except", ":", "\n", "            ", "continue", "\n", "\n", "", "if", "glyph", "not", "in", "glyphs", ":", "\n", "            ", "glyphs", "[", "glyph", "]", "=", "[", "]", "\n", "", "glyphs", "[", "glyph", "]", ".", "append", "(", "char", ")", "\n", "\n", "", "return", "glyphs", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.tools.extract_font_charset.get_charset": [[80, 98], ["set", "extract_font_charset.get_glyphs", "get_glyphs.items", "sum", "char.isspace", "set.add", "len"], "function", ["home.repos.pwc.inspect_result.clovaai_synthtiger.tools.extract_font_charset.get_glyphs"], ["", "def", "get_charset", "(", "path", ")", ":", "\n", "    ", "charset", "=", "set", "(", ")", "\n", "glyphs", "=", "get_glyphs", "(", "path", ")", "\n", "threshold", "=", "10", "\n", "\n", "for", "glyph", ",", "chars", "in", "glyphs", ".", "items", "(", ")", ":", "\n", "        ", "empty", "=", "sum", "(", "glyph", ")", "==", "0", "\n", "\n", "if", "not", "empty", "and", "len", "(", "chars", ")", ">", "threshold", ":", "\n", "            ", "continue", "\n", "\n", "", "for", "char", "in", "chars", ":", "\n", "            ", "space", "=", "char", ".", "isspace", "(", ")", "\n", "if", "(", "empty", "and", "not", "space", ")", "or", "(", "not", "empty", "and", "space", ")", ":", "\n", "                ", "continue", "\n", "", "charset", ".", "add", "(", "char", ")", "\n", "\n", "", "", "return", "charset", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.tools.extract_font_charset.write_charset": [[100, 106], ["os.makedirs", "sorted", "os.path.dirname", "open", "fp.write"], "function", ["None"], ["", "def", "write_charset", "(", "path", ",", "charset", ")", ":", "\n", "    ", "os", ".", "makedirs", "(", "os", ".", "path", ".", "dirname", "(", "path", ")", ",", "exist_ok", "=", "True", ")", "\n", "charset", "=", "sorted", "(", "charset", ")", "\n", "with", "open", "(", "path", ",", "\"w\"", ",", "encoding", "=", "\"utf-8\"", ")", "as", "fp", ":", "\n", "        ", "for", "char", "in", "charset", ":", "\n", "            ", "fp", ".", "write", "(", "char", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.tools.extract_font_charset.run": [[108, 134], ["extract_font_charset.search_files", "concurrent.futures.ProcessPoolExecutor", "concurrent.futures.as_completed", "concurrent.futures.ProcessPoolExecutor.shutdown", "print", "concurrent.futures.ProcessPoolExecutor.submit", "extract_font_charset.write_charset", "print", "executor.submit.result", "print", "os.path.splitext", "len", "traceback.format_exc"], "function", ["home.repos.pwc.inspect_result.clovaai_synthtiger.utils.file_util.search_files", "home.repos.pwc.inspect_result.clovaai_synthtiger.tools.extract_font_charset.write_charset"], ["", "", "", "def", "run", "(", "args", ")", ":", "\n", "    ", "paths", "=", "search_files", "(", "args", ".", "input", ",", "exts", "=", "[", "\".ttf\"", ",", "\".otf\"", "]", ")", "\n", "executor", "=", "ProcessPoolExecutor", "(", "max_workers", "=", "args", ".", "worker", ")", "\n", "futures", "=", "{", "}", "\n", "count", "=", "0", "\n", "\n", "for", "path", "in", "paths", ":", "\n", "        ", "future", "=", "executor", ".", "submit", "(", "get_charset", ",", "path", ")", "\n", "futures", "[", "future", "]", "=", "path", "\n", "\n", "", "for", "future", "in", "as_completed", "(", "futures", ")", ":", "\n", "        ", "path", "=", "futures", "[", "future", "]", "\n", "\n", "try", ":", "\n", "            ", "charset", "=", "future", ".", "result", "(", ")", "\n", "", "except", ":", "\n", "            ", "print", "(", "f\"{traceback.format_exc()} ({path})\"", ")", "\n", "continue", "\n", "\n", "", "output_path", "=", "f\"{os.path.splitext(path)[0]}.txt\"", "\n", "write_charset", "(", "output_path", ",", "charset", ")", "\n", "count", "+=", "1", "\n", "print", "(", "f\"Extracted font charset ({len(charset)} chars) ({path})\"", ")", "\n", "\n", "", "executor", ".", "shutdown", "(", ")", "\n", "print", "(", "f\"Extracted {count} font charsets\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.tools.extract_font_charset.parse_args": [[136, 157], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "pprint.pprint", "vars"], "function", ["home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.main.parse_args"], ["", "def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"-w\"", ",", "\n", "\"--worker\"", ",", "\n", "metavar", "=", "\"NUM\"", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "1", ",", "\n", "help", "=", "\"Number of workers. [default: 1]\"", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"input\"", ",", "\n", "metavar", "=", "\"INPUT\"", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "\"Directory path containing font files.\"", ",", "\n", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "pprint", ".", "pprint", "(", "vars", "(", "args", ")", ")", "\n", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.tools.extract_font_charset.main": [[159, 165], ["time.time", "extract_font_charset.parse_args", "extract_font_charset.run", "time.time", "print"], "function", ["home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.main.parse_args", "home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.main.run"], ["", "def", "main", "(", ")", ":", "\n", "    ", "start_time", "=", "time", ".", "time", "(", ")", "\n", "args", "=", "parse_args", "(", ")", "\n", "run", "(", "args", ")", "\n", "end_time", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "f\"{end_time - start_time:.2f} seconds elapsed\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.multiline.template.Multiline.__init__": [[16, 25], ["config.get", "synthtiger.components.BaseCorpus", "synthtiger.components.BaseFont", "synthtiger.components.RGB", "synthtiger.components.FlowLayout", "config.get", "config.get", "config.get", "config.get"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "config", "=", "None", ")", ":", "\n", "        ", "if", "config", "is", "None", ":", "\n", "            ", "config", "=", "{", "}", "\n", "\n", "", "self", ".", "count", "=", "config", ".", "get", "(", "\"count\"", ",", "100", ")", "\n", "self", ".", "corpus", "=", "components", ".", "BaseCorpus", "(", "**", "config", ".", "get", "(", "\"corpus\"", ",", "{", "}", ")", ")", "\n", "self", ".", "font", "=", "components", ".", "BaseFont", "(", "**", "config", ".", "get", "(", "\"font\"", ",", "{", "}", ")", ")", "\n", "self", ".", "color", "=", "components", ".", "RGB", "(", "**", "config", ".", "get", "(", "\"color\"", ",", "{", "}", ")", ")", "\n", "self", ".", "layout", "=", "components", ".", "FlowLayout", "(", "**", "config", ".", "get", "(", "\"layout\"", ",", "{", "}", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.multiline.template.Multiline.generate": [[26, 51], ["template.Multiline.color.data", "synthtiger.layers.Group", "template.Multiline.layout.apply", "synthtiger.layers.RectLayer", "template.Multiline.corpus.data", "template.Multiline.font.sample", "template.Multiline.color.sample", "template.Multiline.corpus.sample", "range", "range", "synthtiger.layers.TextLayer", "zip"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.data", "home.repos.pwc.inspect_result.clovaai_synthtiger.text_effect.text_shadow.TextShadow.apply", "home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.data", "home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample", "home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample", "home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample"], ["", "def", "generate", "(", "self", ")", ":", "\n", "        ", "texts", "=", "[", "self", ".", "corpus", ".", "data", "(", "self", ".", "corpus", ".", "sample", "(", ")", ")", "for", "_", "in", "range", "(", "self", ".", "count", ")", "]", "\n", "fonts", "=", "[", "self", ".", "font", ".", "sample", "(", ")", "for", "_", "in", "range", "(", "self", ".", "count", ")", "]", "\n", "color", "=", "self", ".", "color", ".", "data", "(", "self", ".", "color", ".", "sample", "(", ")", ")", "\n", "\n", "text_group", "=", "layers", ".", "Group", "(", "\n", "[", "\n", "layers", ".", "TextLayer", "(", "text", ",", "color", "=", "color", ",", "**", "font", ")", "\n", "for", "text", ",", "font", "in", "zip", "(", "texts", ",", "fonts", ")", "\n", "]", "\n", ")", "\n", "self", ".", "layout", ".", "apply", "(", "text_group", ")", "\n", "\n", "bg_layer", "=", "layers", ".", "RectLayer", "(", "text_group", ".", "size", ",", "(", "255", ",", "255", ",", "255", ",", "255", ")", ")", "\n", "bg_layer", ".", "topleft", "=", "text_group", ".", "topleft", "\n", "\n", "image", "=", "(", "text_group", "+", "bg_layer", ")", ".", "output", "(", ")", "\n", "label", "=", "\" \"", ".", "join", "(", "texts", ")", "\n", "\n", "data", "=", "{", "\n", "\"image\"", ":", "image", ",", "\n", "\"label\"", ":", "label", ",", "\n", "}", "\n", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.multiline.template.Multiline.init_save": [[52, 56], ["os.makedirs", "os.path.join", "open"], "methods", ["None"], ["", "def", "init_save", "(", "self", ",", "root", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "root", ",", "exist_ok", "=", "True", ")", "\n", "gt_path", "=", "os", ".", "path", ".", "join", "(", "root", ",", "\"gt.txt\"", ")", "\n", "self", ".", "gt_file", "=", "open", "(", "gt_path", ",", "\"w\"", ",", "encoding", "=", "\"utf-8\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.multiline.template.Multiline.save": [[57, 70], ["str", "os.path.join", "os.path.join", "os.makedirs", "PIL.Image.fromarray", "PIL.Image.fromarray.save", "template.Multiline.gt_file.write", "os.path.dirname", "image[].astype"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.templates.template.Template.save"], ["", "def", "save", "(", "self", ",", "root", ",", "data", ",", "idx", ")", ":", "\n", "        ", "image", "=", "data", "[", "\"image\"", "]", "\n", "label", "=", "data", "[", "\"label\"", "]", "\n", "\n", "shard", "=", "str", "(", "idx", "//", "10000", ")", "\n", "image_key", "=", "os", ".", "path", ".", "join", "(", "\"images\"", ",", "shard", ",", "f\"{idx}.jpg\"", ")", "\n", "image_path", "=", "os", ".", "path", ".", "join", "(", "root", ",", "image_key", ")", "\n", "\n", "os", ".", "makedirs", "(", "os", ".", "path", ".", "dirname", "(", "image_path", ")", ",", "exist_ok", "=", "True", ")", "\n", "image", "=", "Image", ".", "fromarray", "(", "image", "[", "...", ",", ":", "3", "]", ".", "astype", "(", "np", ".", "uint8", ")", ")", "\n", "image", ".", "save", "(", "image_path", ",", "quality", "=", "95", ")", "\n", "\n", "self", ".", "gt_file", ".", "write", "(", "f\"{image_key}\\t{label}\\n\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.multiline.template.Multiline.end_save": [[71, 73], ["template.Multiline.gt_file.close"], "methods", ["None"], ["", "def", "end_save", "(", "self", ",", "root", ")", ":", "\n", "        ", "self", ".", "gt_file", ".", "close", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.template.SynthTiger.__init__": [[32, 102], ["config.get", "config.get", "config.get", "config.get", "synthtiger.components.Translate", "config.get", "synthtiger.components.Selector", "synthtiger.components.BaseFont", "synthtiger.components.Switch", "synthtiger.components.GrayMap", "synthtiger.components.GrayMap", "synthtiger.components.Gray", "synthtiger.components.Switch", "synthtiger.components.Selector", "synthtiger.components.Switch", "synthtiger.components.Switch", "synthtiger.components.Fit", "synthtiger.components.Switch", "synthtiger.components.Iterator", "synthtiger.components.BaseTexture", "synthtiger.components.Selector", "synthtiger.components.Selector", "synthtiger.components.Selector", "synthtiger.components.Pad", "config.get", "synthtiger.components.LengthAugmentableCorpus", "synthtiger.components.CharAugmentableCorpus", "config.get", "config.get", "config.get", "config.get", "config.get", "config.get", "config.get", "synthtiger.components.FlowLayout", "synthtiger.components.CurveLayout", "config.get", "config.get", "config.get", "config.get", "synthtiger.components.Switch", "synthtiger.components.Switch", "synthtiger.components.Switch", "synthtiger.components.Switch", "config.get", "synthtiger.components.ElasticDistortion", "synthtiger.components.ElasticDistortion", "synthtiger.components.TextBorder", "synthtiger.components.TextShadow", "synthtiger.components.TextExtrusion", "synthtiger.components.Perspective", "synthtiger.components.Perspective", "synthtiger.components.Trapezoidate", "synthtiger.components.Trapezoidate", "synthtiger.components.Skew", "synthtiger.components.Skew", "synthtiger.components.Rotate", "synthtiger.components.AdditiveGaussianNoise", "synthtiger.components.GaussianBlur", "synthtiger.components.Resample", "synthtiger.components.MedianBlur"], "methods", ["None"], ["[", "\n", "layers", ".", "TextLayer", "(", "text", ",", "color", "=", "color", ",", "**", "font", ")", "\n", "for", "text", ",", "font", "in", "zip", "(", "texts", ",", "fonts", ")", "\n", "]", "\n", ")", "\n", "self", ".", "layout", ".", "apply", "(", "text_group", ")", "\n", "\n", "bg_layer", "=", "layers", ".", "RectLayer", "(", "text_group", ".", "size", ",", "(", "255", ",", "255", ",", "255", ",", "255", ")", ")", "\n", "bg_layer", ".", "topleft", "=", "text_group", ".", "topleft", "\n", "\n", "image", "=", "(", "text_group", "+", "bg_layer", ")", ".", "output", "(", ")", "\n", "label", "=", "\" \"", ".", "join", "(", "texts", ")", "\n", "\n", "data", "=", "{", "\n", "\"image\"", ":", "image", ",", "\n", "\"label\"", ":", "label", ",", "\n", "}", "\n", "\n", "return", "data", "\n", "\n", "", "def", "init_save", "(", "self", ",", "root", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "root", ",", "exist_ok", "=", "True", ")", "\n", "gt_path", "=", "os", ".", "path", ".", "join", "(", "root", ",", "\"gt.txt\"", ")", "\n", "self", ".", "gt_file", "=", "open", "(", "gt_path", ",", "\"w\"", ",", "encoding", "=", "\"utf-8\"", ")", "\n", "\n", "", "def", "save", "(", "self", ",", "root", ",", "data", ",", "idx", ")", ":", "\n", "        ", "image", "=", "data", "[", "\"image\"", "]", "\n", "label", "=", "data", "[", "\"label\"", "]", "\n", "\n", "shard", "=", "str", "(", "idx", "//", "10000", ")", "\n", "image_key", "=", "os", ".", "path", ".", "join", "(", "\"images\"", ",", "shard", ",", "f\"{idx}.jpg\"", ")", "\n", "image_path", "=", "os", ".", "path", ".", "join", "(", "root", ",", "image_key", ")", "\n", "\n", "os", ".", "makedirs", "(", "os", ".", "path", ".", "dirname", "(", "image_path", ")", ",", "exist_ok", "=", "True", ")", "\n", "image", "=", "Image", ".", "fromarray", "(", "image", "[", "...", ",", ":", "3", "]", ".", "astype", "(", "np", ".", "uint8", ")", ")", "\n", "image", ".", "save", "(", "image_path", ",", "quality", "=", "95", ")", "\n", "\n", "self", ".", "gt_file", ".", "write", "(", "f\"{image_key}\\t{label}\\n\"", ")", "\n", "\n", "", "def", "end_save", "(", "self", ",", "root", ")", ":", "\n", "        ", "self", ".", "gt_file", ".", "close", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.template.SynthTiger.generate": [[104, 131], ["numpy.random.randint", "template.SynthTiger._generate_color", "template.SynthTiger._generate_fg", "template.SynthTiger._generate_bg", "template._blend_images", "template.SynthTiger._postprocess_image", "numpy.random.rand", "template._create_mask", "template.SynthTiger._generate_mg", "template._blend_images"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.template.SynthTiger._generate_color", "home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.template.SynthTiger._generate_fg", "home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.template.SynthTiger._generate_bg", "home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.template._blend_images", "home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.template.SynthTiger._postprocess_image", "home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.template._create_mask", "home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.template.SynthTiger._generate_mg", "home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.template._blend_images"], []], "home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.template.SynthTiger.init_save": [[132, 136], ["os.makedirs", "os.path.join", "open"], "methods", ["None"], []], "home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.template.SynthTiger.save": [[137, 151], ["str", "os.path.join", "os.path.join", "os.makedirs", "PIL.Image.fromarray", "PIL.Image.fromarray.save", "template.SynthTiger.gt_file.write", "os.path.dirname", "image[].astype"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.templates.template.Template.save"], []], "home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.template.SynthTiger.end_save": [[152, 154], ["template.SynthTiger.gt_file.close"], "methods", ["None"], []], "home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.template.SynthTiger._generate_color": [[155, 167], ["template.SynthTiger.color.sample", "template.SynthTiger.style.sample", "template.SynthTiger.style.sample", "template.SynthTiger.colormap3.sample", "template.SynthTiger.colormap2.sample"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample", "home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample", "home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample", "home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample", "home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample"], []], "home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.template.SynthTiger._generate_fg": [[168, 191], ["template.SynthTiger.corpus.data", "synthtiger.utils.split_text", "template.SynthTiger.font.sample", "template.SynthTiger.shape.apply", "template.SynthTiger.layout.apply", "synthtiger.layers.Group().merge", "template.SynthTiger.color.apply", "template.SynthTiger.texture.apply", "template.SynthTiger.style.apply", "template.SynthTiger.transform.apply", "template.SynthTiger.fit.apply", "template.SynthTiger.pad.apply", "synthtiger.layers.Group().merge.output", "template.SynthTiger.corpus.sample", "synthtiger.layers.TextLayer", "synthtiger.layers.Group"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.data", "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.unicode_util.split_text", "home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample", "home.repos.pwc.inspect_result.clovaai_synthtiger.text_effect.text_shadow.TextShadow.apply", "home.repos.pwc.inspect_result.clovaai_synthtiger.text_effect.text_shadow.TextShadow.apply", "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.merge", "home.repos.pwc.inspect_result.clovaai_synthtiger.text_effect.text_shadow.TextShadow.apply", "home.repos.pwc.inspect_result.clovaai_synthtiger.text_effect.text_shadow.TextShadow.apply", "home.repos.pwc.inspect_result.clovaai_synthtiger.text_effect.text_shadow.TextShadow.apply", "home.repos.pwc.inspect_result.clovaai_synthtiger.text_effect.text_shadow.TextShadow.apply", "home.repos.pwc.inspect_result.clovaai_synthtiger.text_effect.text_shadow.TextShadow.apply", "home.repos.pwc.inspect_result.clovaai_synthtiger.text_effect.text_shadow.TextShadow.apply", "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.output", "home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample"], []], "home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.template.SynthTiger._generate_mg": [[192, 221], ["template.SynthTiger.corpus.data", "synthtiger.utils.split_text", "template.SynthTiger.font.sample", "template.SynthTiger.shape.apply", "template.SynthTiger.layout.apply", "synthtiger.layers.Group().merge", "template.SynthTiger.color.apply", "template.SynthTiger.texture.apply", "template.SynthTiger.style.apply", "template.SynthTiger.transform.apply", "template.SynthTiger.fit.apply", "template.SynthTiger.pad.apply", "synthtiger.layers.Layer.output", "synthtiger.layers.Layer", "synthtiger.layers.Layer", "template.SynthTiger.midground_offset.apply", "synthtiger.layers.Layer.erase().output", "template.SynthTiger.corpus.sample", "synthtiger.layers.TextLayer", "synthtiger.layers.Group", "synthtiger.layers.Layer.erase"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.data", "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.unicode_util.split_text", "home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample", "home.repos.pwc.inspect_result.clovaai_synthtiger.text_effect.text_shadow.TextShadow.apply", "home.repos.pwc.inspect_result.clovaai_synthtiger.text_effect.text_shadow.TextShadow.apply", "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.merge", "home.repos.pwc.inspect_result.clovaai_synthtiger.text_effect.text_shadow.TextShadow.apply", "home.repos.pwc.inspect_result.clovaai_synthtiger.text_effect.text_shadow.TextShadow.apply", "home.repos.pwc.inspect_result.clovaai_synthtiger.text_effect.text_shadow.TextShadow.apply", "home.repos.pwc.inspect_result.clovaai_synthtiger.text_effect.text_shadow.TextShadow.apply", "home.repos.pwc.inspect_result.clovaai_synthtiger.text_effect.text_shadow.TextShadow.apply", "home.repos.pwc.inspect_result.clovaai_synthtiger.text_effect.text_shadow.TextShadow.apply", "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.output", "home.repos.pwc.inspect_result.clovaai_synthtiger.text_effect.text_shadow.TextShadow.apply", "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.output", "home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample", "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Layer.erase"], []], "home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.template.SynthTiger._generate_bg": [[222, 228], ["synthtiger.layers.RectLayer", "template.SynthTiger.color.apply", "template.SynthTiger.texture.apply", "synthtiger.layers.RectLayer.output"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.text_effect.text_shadow.TextShadow.apply", "home.repos.pwc.inspect_result.clovaai_synthtiger.text_effect.text_shadow.TextShadow.apply", "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.output"], []], "home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.template.SynthTiger._postprocess_image": [[229, 234], ["synthtiger.layers.Layer", "template.SynthTiger.postprocess.apply", "synthtiger.layers.Layer.output"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.text_effect.text_shadow.TextShadow.apply", "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.output"], []], "home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.template._blend_images": [[236, 250], ["numpy.random.permutation", "synthtiger.utils.blend_image", "RuntimeError", "template._check_visibility"], "function", ["home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.blend_image", "home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.template._check_visibility"], []], "home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.template._check_visibility": [[252, 281], ["synthtiger.utils.to_gray().astype", "mask.astype.astype", "cv2.getStructuringElement", "cv2.dilate", "cv2.dilate.copy", "numpy.pad", "cv2.dilate.copy", "range", "numpy.sum", "numpy.sum", "range", "synthtiger.utils.to_gray", "cv2.floodFill"], "function", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.copy", "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.copy", "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.to_gray"], []], "home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.template._create_mask": [[283, 304], ["image[].astype", "numpy.zeros", "cv2.findContours", "sorted", "range", "synthtiger.utils.dilate_image", "synthtiger.utils.create_image", "len", "cv2.convexHull", "cv2.fillConvexPoly", "numpy.concatenate", "cv2.convexHull", "cv2.fillConvexPoly", "len", "sum", "cv2.boundingRect"], "function", ["home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.dilate_image", "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.create_image"], []], "home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.main.run": [[14, 35], ["pprint.pprint", "synthtiger.read_template", "synthtiger.generator", "range", "synthtiger.read_config", "synthtiger.read_template.init_save", "next", "print", "synthtiger.read_template.end_save", "synthtiger.read_template.save"], "function", ["home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.gen.read_template", "home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.gen.generator", "home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.gen.read_config", "home.repos.pwc.inspect_result.clovaai_synthtiger.templates.template.Template.init_save", "home.repos.pwc.inspect_result.clovaai_synthtiger.templates.template.Template.end_save", "home.repos.pwc.inspect_result.clovaai_synthtiger.templates.template.Template.save"], ["def", "run", "(", "args", ")", ":", "\n", "    ", "if", "args", ".", "config", "is", "not", "None", ":", "\n", "        ", "config", "=", "synthtiger", ".", "read_config", "(", "args", ".", "config", ")", "\n", "", "pprint", ".", "pprint", "(", "config", ")", "\n", "\n", "template", "=", "synthtiger", ".", "read_template", "(", "args", ".", "script", ",", "args", ".", "name", ",", "config", ")", "\n", "generator", "=", "synthtiger", ".", "generator", "(", "\n", "args", ".", "script", ",", "args", ".", "name", ",", "config", ",", "worker", "=", "args", ".", "worker", ",", "verbose", "=", "args", ".", "verbose", "\n", ")", "\n", "\n", "if", "args", ".", "output", "is", "not", "None", ":", "\n", "        ", "template", ".", "init_save", "(", "args", ".", "output", ")", "\n", "\n", "", "for", "idx", "in", "range", "(", "args", ".", "count", ")", ":", "\n", "        ", "data", "=", "next", "(", "generator", ")", "\n", "if", "args", ".", "output", "is", "not", "None", ":", "\n", "            ", "template", ".", "save", "(", "args", ".", "output", ",", "data", ",", "idx", ")", "\n", "", "print", "(", "f\"Generated {idx + 1} data\"", ")", "\n", "\n", "", "if", "args", ".", "output", "is", "not", "None", ":", "\n", "        ", "template", ".", "end_save", "(", "args", ".", "output", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.main.parse_args": [[37, 93], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "pprint.pprint", "vars"], "function", ["home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.main.parse_args"], ["", "", "def", "parse_args", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"-o\"", ",", "\n", "\"--output\"", ",", "\n", "metavar", "=", "\"DIR\"", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "\"Directory path to save data.\"", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"-c\"", ",", "\n", "\"--count\"", ",", "\n", "metavar", "=", "\"NUM\"", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "100", ",", "\n", "help", "=", "\"Number of data. [default: 100]\"", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"-w\"", ",", "\n", "\"--worker\"", ",", "\n", "metavar", "=", "\"NUM\"", ",", "\n", "type", "=", "int", ",", "\n", "default", "=", "0", ",", "\n", "help", "=", "\"Number of workers. If 0, It generates data in the main process. [default: 0]\"", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"-v\"", ",", "\n", "\"--verbose\"", ",", "\n", "action", "=", "\"store_true\"", ",", "\n", "default", "=", "False", ",", "\n", "help", "=", "\"Print error messages while generating data.\"", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"script\"", ",", "\n", "metavar", "=", "\"SCRIPT\"", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "\"Script file path.\"", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"name\"", ",", "\n", "metavar", "=", "\"NAME\"", ",", "\n", "type", "=", "str", ",", "\n", "help", "=", "\"Template class name.\"", ",", "\n", ")", "\n", "parser", ".", "add_argument", "(", "\n", "\"config\"", ",", "\n", "metavar", "=", "\"CONFIG\"", ",", "\n", "type", "=", "str", ",", "\n", "nargs", "=", "\"?\"", ",", "\n", "help", "=", "\"Config file path.\"", ",", "\n", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "pprint", ".", "pprint", "(", "vars", "(", "args", ")", ")", "\n", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.main.main": [[95, 101], ["time.time", "main.parse_args", "main.run", "time.time", "print"], "function", ["home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.main.parse_args", "home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.main.run"], ["", "def", "main", "(", ")", ":", "\n", "    ", "start_time", "=", "time", ".", "time", "(", ")", "\n", "args", "=", "parse_args", "(", ")", "\n", "run", "(", "args", ")", "\n", "end_time", "=", "time", ".", "time", "(", ")", "\n", "print", "(", "f\"{end_time - start_time:.2f} seconds elapsed\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.gen.read_template": [[17, 26], ["os.path.abspath", "os.path.dirname", "sys.path.append", "sys.path.remove", "os.path.splitext", "getattr", "os.path.basename", "__import__"], "function", ["None"], ["def", "read_template", "(", "path", ",", "name", ",", "config", "=", "None", ")", ":", "\n", "    ", "path", "=", "os", ".", "path", ".", "abspath", "(", "path", ")", "\n", "root", "=", "os", ".", "path", ".", "dirname", "(", "path", ")", "\n", "module", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "basename", "(", "path", ")", ")", "[", "0", "]", "\n", "sys", ".", "path", ".", "append", "(", "root", ")", "\n", "template", "=", "getattr", "(", "__import__", "(", "module", ")", ",", "name", ")", "(", "config", ")", "\n", "sys", ".", "path", ".", "remove", "(", "root", ")", "\n", "del", "sys", ".", "modules", "[", "module", "]", "\n", "return", "template", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.gen.read_config": [[28, 32], ["open", "yaml.load"], "function", ["None"], ["", "def", "read_config", "(", "path", ")", ":", "\n", "    ", "with", "open", "(", "path", ",", "\"r\"", ",", "encoding", "=", "\"utf-8\"", ")", "as", "fp", ":", "\n", "        ", "config", "=", "yaml", ".", "load", "(", "fp", ",", "Loader", "=", "yaml", ".", "SafeLoader", ")", "\n", "", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.gen.generator": [[34, 49], ["multiprocessing.Queue", "range", "gen.read_template", "gen._run", "multiprocessing.Queue.get", "gen._generate"], "function", ["home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.gen.read_template", "home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.gen._run", "home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.gen._generate"], ["", "def", "generator", "(", "path", ",", "name", ",", "config", "=", "None", ",", "worker", "=", "0", ",", "verbose", "=", "False", ")", ":", "\n", "    ", "if", "worker", ">", "0", ":", "\n", "        ", "queue", "=", "Queue", "(", "maxsize", "=", "1024", ")", "\n", "for", "_", "in", "range", "(", "worker", ")", ":", "\n", "            ", "_run", "(", "_worker", ",", "(", "path", ",", "name", ",", "config", ",", "queue", ",", "verbose", ")", ")", "\n", "\n", "", "while", "True", ":", "\n", "            ", "data", "=", "queue", ".", "get", "(", ")", "\n", "yield", "data", "\n", "", "", "else", ":", "\n", "        ", "template", "=", "read_template", "(", "path", ",", "name", ",", "config", ")", "\n", "\n", "while", "True", ":", "\n", "            ", "data", "=", "_generate", "(", "template", ",", "verbose", ")", "\n", "yield", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.gen._run": [[51, 56], ["multiprocessing.Process", "multiprocessing.Process.start", "gen._worker"], "function", ["home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.gen._worker"], ["", "", "", "def", "_run", "(", "func", ",", "args", ")", ":", "\n", "    ", "proc", "=", "Process", "(", "target", "=", "func", ",", "args", "=", "args", ")", "\n", "proc", ".", "daemon", "=", "True", "\n", "proc", ".", "start", "(", ")", "\n", "return", "proc", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.gen._worker": [[58, 66], ["random.seed", "numpy.random.seed", "gen.read_template", "gen._generate", "queue.put"], "function", ["home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.gen.read_template", "home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.gen._generate"], ["", "def", "_worker", "(", "path", ",", "name", ",", "config", ",", "queue", ",", "verbose", ")", ":", "\n", "    ", "random", ".", "seed", "(", ")", "\n", "np", ".", "random", ".", "seed", "(", ")", "\n", "template", "=", "read_template", "(", "path", ",", "name", ",", "config", ")", "\n", "\n", "while", "True", ":", "\n", "        ", "data", "=", "_generate", "(", "template", ",", "verbose", ")", "\n", "queue", ".", "put", "(", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.gen._generate": [[68, 77], ["template.generate", "print", "traceback.format_exc"], "function", ["home.repos.pwc.inspect_result.clovaai_synthtiger.templates.template.Template.generate"], ["", "", "def", "_generate", "(", "template", ",", "verbose", ")", ":", "\n", "    ", "while", "True", ":", "\n", "        ", "try", ":", "\n", "            ", "data", "=", "template", ".", "generate", "(", ")", "\n", "", "except", ":", "\n", "            ", "if", "verbose", ":", "\n", "                ", "print", "(", "f\"{traceback.format_exc()}\"", ")", "\n", "", "continue", "\n", "", "return", "data", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.create_image": [[13, 30], ["numpy.zeros", "int", "int"], "function", ["None"], ["def", "create_image", "(", "size", ",", "color", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Create an image with given size and color.\n\n    :param size: The image size, as a 2-tuple (width, height)\n    :type size: tuple\n    :param color: The color of image, as a 4-tuple (RGBA)\n    :type color: tuple, optional\n    :return: RGBA image\n    :rtype: Numpy array of float32 type\n    \"\"\"", "\n", "\n", "width", ",", "height", "=", "size", "\n", "out", "=", "np", ".", "zeros", "(", "(", "int", "(", "height", ")", ",", "int", "(", "width", ")", ",", "4", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "if", "color", "is", "not", "None", ":", "\n", "        ", "out", "[", "...", "]", "=", "color", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.paste_image": [[32, 77], ["numpy.array", "numpy.array", "numpy.amin", "numpy.amax", "tuple", "numpy.amax", "numpy.amin", "any", "numpy.clip", "numpy.clip", "numpy.clip", "numpy.clip", "image_util.blend_image", "all", "origin.astype.astype", "cv2.getPerspectiveTransform", "cv2.warpPerspective", "slice", "slice", "slice", "slice"], "function", ["home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.blend_image"], ["", "def", "paste_image", "(", "src", ",", "dst", ",", "quad", ",", "mode", "=", "\"normal\"", ")", ":", "\n", "    ", "src_height", ",", "src_width", "=", "src", ".", "shape", "[", ":", "2", "]", "\n", "dst_height", ",", "dst_width", "=", "dst", ".", "shape", "[", ":", "2", "]", "\n", "origin", "=", "np", ".", "array", "(", "\n", "[", "[", "0", ",", "0", "]", ",", "[", "src_width", ",", "0", "]", ",", "[", "src_width", ",", "src_height", "]", ",", "[", "0", ",", "src_height", "]", "]", ",", "\n", "dtype", "=", "int", ",", "\n", ")", "\n", "quad", "=", "np", ".", "array", "(", "quad", ",", "dtype", "=", "int", ")", "\n", "\n", "src_topleft", "=", "np", ".", "amin", "(", "quad", ",", "axis", "=", "0", ")", "\n", "src_bottomright", "=", "np", ".", "amax", "(", "quad", ",", "axis", "=", "0", ")", "\n", "src_size", "=", "tuple", "(", "src_bottomright", "-", "src_topleft", ")", "\n", "dst_topleft", "=", "[", "0", ",", "0", "]", "\n", "dst_bottomright", "=", "[", "dst_width", ",", "dst_height", "]", "\n", "dst_size", "=", "(", "dst_width", ",", "dst_height", ")", "\n", "\n", "topleft", "=", "np", ".", "amax", "(", "[", "src_topleft", ",", "dst_topleft", "]", ",", "axis", "=", "0", ")", "\n", "bottomright", "=", "np", ".", "amin", "(", "[", "src_bottomright", ",", "dst_bottomright", "]", ",", "axis", "=", "0", ")", "\n", "if", "any", "(", "topleft", ">=", "bottomright", ")", ":", "\n", "        ", "return", "None", "\n", "\n", "", "if", "not", "all", "(", "\n", "(", "\n", "quad", "[", "0", "]", "[", "0", "]", "==", "quad", "[", "3", "]", "[", "0", "]", ",", "\n", "quad", "[", "1", "]", "[", "0", "]", "==", "quad", "[", "2", "]", "[", "0", "]", ",", "\n", "quad", "[", "0", "]", "[", "1", "]", "==", "quad", "[", "1", "]", "[", "1", "]", ",", "\n", "quad", "[", "2", "]", "[", "1", "]", "==", "quad", "[", "3", "]", "[", "1", "]", ",", "\n", "quad", "[", "1", "]", "[", "0", "]", "-", "quad", "[", "0", "]", "[", "0", "]", "==", "quad", "[", "2", "]", "[", "0", "]", "-", "quad", "[", "3", "]", "[", "0", "]", "==", "src_width", ",", "\n", "quad", "[", "3", "]", "[", "1", "]", "-", "quad", "[", "0", "]", "[", "1", "]", "==", "quad", "[", "2", "]", "[", "1", "]", "-", "quad", "[", "1", "]", "[", "1", "]", "==", "src_height", ",", "\n", ")", "\n", ")", ":", "\n", "        ", "origin", "=", "origin", ".", "astype", "(", "np", ".", "float32", ")", "\n", "quad", "=", "(", "quad", "-", "src_topleft", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "matrix", "=", "cv2", ".", "getPerspectiveTransform", "(", "origin", ",", "quad", ")", "\n", "src", "=", "cv2", ".", "warpPerspective", "(", "src", ",", "matrix", ",", "src_size", ")", "\n", "\n", "", "sx", ",", "sy", "=", "np", ".", "clip", "(", "topleft", "-", "src_topleft", ",", "(", "0", ",", "0", ")", ",", "src_size", ")", "\n", "dx", ",", "dy", "=", "np", ".", "clip", "(", "bottomright", "-", "src_topleft", ",", "(", "0", ",", "0", ")", ",", "src_size", ")", "\n", "src_area", "=", "(", "slice", "(", "sy", ",", "dy", ")", ",", "slice", "(", "sx", ",", "dx", ")", ")", "\n", "\n", "sx", ",", "sy", "=", "np", ".", "clip", "(", "topleft", "-", "dst_topleft", ",", "(", "0", ",", "0", ")", ",", "dst_size", ")", "\n", "dx", ",", "dy", "=", "np", ".", "clip", "(", "bottomright", "-", "dst_topleft", ",", "(", "0", ",", "0", ")", ",", "dst_size", ")", "\n", "dst_area", "=", "(", "slice", "(", "sy", ",", "dy", ")", ",", "slice", "(", "sx", ",", "dx", ")", ")", "\n", "\n", "dst", "[", "dst_area", "]", "=", "blend_image", "(", "src", "[", "src_area", "]", ",", "dst", "[", "dst_area", "]", ",", "mode", "=", "mode", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.erase_image": [[79, 124], ["numpy.array", "numpy.array", "numpy.amin", "numpy.amax", "tuple", "numpy.amax", "numpy.amin", "any", "numpy.clip", "numpy.clip", "numpy.clip", "numpy.clip", "numpy.clip", "all", "origin.astype.astype", "cv2.getPerspectiveTransform", "cv2.warpPerspective", "slice", "slice", "slice", "slice"], "function", ["None"], ["", "def", "erase_image", "(", "src", ",", "dst", ",", "quad", ")", ":", "\n", "    ", "src_height", ",", "src_width", "=", "src", ".", "shape", "[", ":", "2", "]", "\n", "dst_height", ",", "dst_width", "=", "dst", ".", "shape", "[", ":", "2", "]", "\n", "origin", "=", "np", ".", "array", "(", "\n", "[", "[", "0", ",", "0", "]", ",", "[", "src_width", ",", "0", "]", ",", "[", "src_width", ",", "src_height", "]", ",", "[", "0", ",", "src_height", "]", "]", ",", "\n", "dtype", "=", "int", ",", "\n", ")", "\n", "quad", "=", "np", ".", "array", "(", "quad", ",", "dtype", "=", "int", ")", "\n", "\n", "src_topleft", "=", "np", ".", "amin", "(", "quad", ",", "axis", "=", "0", ")", "\n", "src_bottomright", "=", "np", ".", "amax", "(", "quad", ",", "axis", "=", "0", ")", "\n", "src_size", "=", "tuple", "(", "src_bottomright", "-", "src_topleft", ")", "\n", "dst_topleft", "=", "[", "0", ",", "0", "]", "\n", "dst_bottomright", "=", "[", "dst_width", ",", "dst_height", "]", "\n", "dst_size", "=", "(", "dst_width", ",", "dst_height", ")", "\n", "\n", "topleft", "=", "np", ".", "amax", "(", "[", "src_topleft", ",", "dst_topleft", "]", ",", "axis", "=", "0", ")", "\n", "bottomright", "=", "np", ".", "amin", "(", "[", "src_bottomright", ",", "dst_bottomright", "]", ",", "axis", "=", "0", ")", "\n", "if", "any", "(", "topleft", ">=", "bottomright", ")", ":", "\n", "        ", "return", "None", "\n", "\n", "", "if", "not", "all", "(", "\n", "(", "\n", "quad", "[", "0", "]", "[", "0", "]", "==", "quad", "[", "3", "]", "[", "0", "]", ",", "\n", "quad", "[", "1", "]", "[", "0", "]", "==", "quad", "[", "2", "]", "[", "0", "]", ",", "\n", "quad", "[", "0", "]", "[", "1", "]", "==", "quad", "[", "1", "]", "[", "1", "]", ",", "\n", "quad", "[", "2", "]", "[", "1", "]", "==", "quad", "[", "3", "]", "[", "1", "]", ",", "\n", "quad", "[", "1", "]", "[", "0", "]", "-", "quad", "[", "0", "]", "[", "0", "]", "==", "quad", "[", "2", "]", "[", "0", "]", "-", "quad", "[", "3", "]", "[", "0", "]", "==", "src_width", ",", "\n", "quad", "[", "3", "]", "[", "1", "]", "-", "quad", "[", "0", "]", "[", "1", "]", "==", "quad", "[", "2", "]", "[", "1", "]", "-", "quad", "[", "1", "]", "[", "1", "]", "==", "src_height", ",", "\n", ")", "\n", ")", ":", "\n", "        ", "origin", "=", "origin", ".", "astype", "(", "np", ".", "float32", ")", "\n", "quad", "=", "(", "quad", "-", "src_topleft", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "matrix", "=", "cv2", ".", "getPerspectiveTransform", "(", "origin", ",", "quad", ")", "\n", "src", "=", "cv2", ".", "warpPerspective", "(", "src", ",", "matrix", ",", "src_size", ")", "\n", "\n", "", "sx", ",", "sy", "=", "np", ".", "clip", "(", "topleft", "-", "src_topleft", ",", "(", "0", ",", "0", ")", ",", "src_size", ")", "\n", "dx", ",", "dy", "=", "np", ".", "clip", "(", "bottomright", "-", "src_topleft", ",", "(", "0", ",", "0", ")", ",", "src_size", ")", "\n", "src_area", "=", "(", "slice", "(", "sy", ",", "dy", ")", ",", "slice", "(", "sx", ",", "dx", ")", ",", "3", ")", "\n", "\n", "sx", ",", "sy", "=", "np", ".", "clip", "(", "topleft", "-", "dst_topleft", ",", "(", "0", ",", "0", ")", ",", "dst_size", ")", "\n", "dx", ",", "dy", "=", "np", ".", "clip", "(", "bottomright", "-", "dst_topleft", ",", "(", "0", ",", "0", ")", ",", "dst_size", ")", "\n", "dst_area", "=", "(", "slice", "(", "sy", ",", "dy", ")", ",", "slice", "(", "sx", ",", "dx", ")", ",", "3", ")", "\n", "\n", "dst", "[", "dst_area", "]", "=", "np", ".", "clip", "(", "dst", "[", "dst_area", "]", "-", "src", "[", "src_area", "]", ",", "0", ",", "255", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.blend_image": [[126, 141], ["PIL.Image.fromarray", "PIL.Image.fromarray", "PIL.Image.alpha_composite", "numpy.array", "getattr", "getattr.", "Image.fromarray.astype", "Image.fromarray.astype"], "function", ["None"], ["", "def", "blend_image", "(", "src", ",", "dst", ",", "mode", "=", "\"normal\"", ",", "mask", "=", "False", ")", ":", "\n", "    ", "alpha", "=", "dst", "[", "...", ",", "3", "]", "\n", "\n", "if", "mode", "==", "\"normal\"", ":", "\n", "        ", "src", "=", "Image", ".", "fromarray", "(", "src", ".", "astype", "(", "np", ".", "uint8", ")", ")", "\n", "dst", "=", "Image", ".", "fromarray", "(", "dst", ".", "astype", "(", "np", ".", "uint8", ")", ")", "\n", "out", "=", "Image", ".", "alpha_composite", "(", "dst", ",", "src", ")", "\n", "out", "=", "np", ".", "array", "(", "out", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "", "else", ":", "\n", "        ", "blend", "=", "getattr", "(", "blend_modes", ",", "mode", ")", "\n", "out", "=", "blend", "(", "dst", ",", "src", ",", "1", ")", "\n", "\n", "", "if", "mask", ":", "\n", "        ", "out", "[", "...", ",", "3", "]", "=", "alpha", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.resize_image": [[143, 147], ["cv2.resize", "int", "int"], "function", ["None"], ["", "def", "resize_image", "(", "image", ",", "size", ")", ":", "\n", "    ", "size", "=", "(", "int", "(", "size", "[", "0", "]", ")", ",", "int", "(", "size", "[", "1", "]", ")", ")", "\n", "image", "=", "cv2", ".", "resize", "(", "image", ",", "size", ")", "\n", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.fit_image": [[149, 167], ["numpy.nonzero", "numpy.array", "numpy.array", "len", "len", "min", "min", "max", "max"], "function", ["None"], ["", "def", "fit_image", "(", "image", ",", "top", "=", "True", ",", "right", "=", "True", ",", "bottom", "=", "True", ",", "left", "=", "True", ")", ":", "\n", "    ", "height", ",", "width", "=", "image", ".", "shape", "[", ":", "2", "]", "\n", "sx", ",", "sy", "=", "0", ",", "0", "\n", "dx", ",", "dy", "=", "width", ",", "height", "\n", "\n", "ys", ",", "xs", "=", "np", ".", "nonzero", "(", "image", "[", "...", ",", "3", "]", ">", "0", ")", "\n", "if", "len", "(", "xs", ")", ">", "0", "and", "len", "(", "ys", ")", ">", "0", ":", "\n", "        ", "sx", ",", "sy", "=", "min", "(", "xs", ")", ",", "min", "(", "ys", ")", "\n", "dx", ",", "dy", "=", "max", "(", "xs", ")", "+", "1", ",", "max", "(", "ys", ")", "+", "1", "\n", "\n", "", "sx", "=", "0", "if", "not", "left", "else", "sx", "\n", "sy", "=", "0", "if", "not", "top", "else", "sy", "\n", "dx", "=", "width", "if", "not", "right", "else", "dx", "\n", "dy", "=", "height", "if", "not", "bottom", "else", "dy", "\n", "\n", "image", "=", "np", ".", "array", "(", "image", "[", "sy", ":", "dy", ",", "sx", ":", "dx", ",", ":", "]", ",", "dtype", "=", "image", ".", "dtype", ")", "\n", "bbox", "=", "np", ".", "array", "(", "[", "sx", ",", "sy", ",", "dx", "-", "sx", ",", "dy", "-", "sy", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "return", "image", ",", "bbox", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.crop_image": [[169, 174], ["max", "max", "max", "max", "numpy.array"], "function", ["None"], ["", "def", "crop_image", "(", "image", ",", "top", "=", "0", ",", "right", "=", "0", ",", "bottom", "=", "0", ",", "left", "=", "0", ")", ":", "\n", "    ", "height", ",", "width", "=", "image", ".", "shape", "[", ":", "2", "]", "\n", "top", ",", "right", ",", "bottom", ",", "left", "=", "max", "(", "top", ",", "0", ")", ",", "max", "(", "right", ",", "0", ")", ",", "max", "(", "bottom", ",", "0", ")", ",", "max", "(", "left", ",", "0", ")", "\n", "image", "=", "np", ".", "array", "(", "image", ")", "[", "top", ":", "height", "-", "bottom", ",", "left", ":", "width", "-", "right", ",", ":", "]", "\n", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.pad_image": [[176, 180], ["numpy.array", "numpy.pad"], "function", ["None"], ["", "def", "pad_image", "(", "image", ",", "top", "=", "0", ",", "right", "=", "0", ",", "bottom", "=", "0", ",", "left", "=", "0", ",", "mode", "=", "\"constant\"", ",", "value", "=", "0", ")", ":", "\n", "    ", "pad", "=", "np", ".", "array", "(", "[", "[", "top", ",", "bottom", "]", ",", "[", "left", ",", "right", "]", ",", "[", "0", ",", "0", "]", "]", ",", "dtype", "=", "int", ")", "\n", "image", "=", "np", ".", "pad", "(", "image", ",", "pad", ",", "mode", "=", "mode", ",", "constant_values", "=", "value", ")", "\n", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.dilate_image": [[182, 186], ["numpy.ones", "cv2.dilate"], "function", ["None"], ["", "def", "dilate_image", "(", "image", ",", "k", ")", ":", "\n", "    ", "kernel", "=", "np", ".", "ones", "(", "(", "k", "*", "2", "+", "1", ",", "k", "*", "2", "+", "1", ")", ")", "\n", "image", "=", "cv2", ".", "dilate", "(", "image", ",", "kernel", "=", "kernel", ",", "iterations", "=", "1", ")", "\n", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.erode_image": [[188, 192], ["numpy.ones", "cv2.erode"], "function", ["None"], ["", "def", "erode_image", "(", "image", ",", "k", ")", ":", "\n", "    ", "kernel", "=", "np", ".", "ones", "(", "(", "k", "*", "2", "+", "1", ",", "k", "*", "2", "+", "1", ")", ")", "\n", "image", "=", "cv2", ".", "erode", "(", "image", ",", "kernel", "=", "kernel", ",", "iterations", "=", "1", ")", "\n", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.grayscale_image": [[194, 198], ["numpy.array", "image_util.to_gray"], "function", ["home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.to_gray"], ["", "def", "grayscale_image", "(", "image", ")", ":", "\n", "    ", "image", "=", "np", ".", "array", "(", "image", ")", "\n", "image", "[", "...", ",", ":", "3", "]", "=", "to_gray", "(", "image", "[", "...", ",", ":", "3", "]", ")", "[", "...", ",", "np", ".", "newaxis", "]", "\n", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.add_alpha_channel": [[200, 206], ["numpy.full", "numpy.concatenate"], "function", ["None"], ["", "def", "add_alpha_channel", "(", "image", ")", ":", "\n", "    ", "height", ",", "width", ",", "channel", "=", "image", ".", "shape", "\n", "if", "channel", "==", "3", ":", "\n", "        ", "alpha", "=", "np", ".", "full", "(", "(", "height", ",", "width", ",", "1", ")", ",", "255", ",", "dtype", "=", "image", ".", "dtype", ")", "\n", "image", "=", "np", ".", "concatenate", "(", "(", "image", ",", "alpha", ")", ",", "axis", "=", "-", "1", ")", "\n", "", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.to_quad": [[208, 221], ["numpy.array"], "function", ["None"], ["", "def", "to_quad", "(", "bbox", ")", ":", "\n", "    ", "topleft", "=", "bbox", "[", ":", "2", "]", "\n", "width", ",", "height", "=", "bbox", "[", "2", ":", "]", "\n", "quad", "=", "np", ".", "array", "(", "\n", "[", "\n", "[", "topleft", "[", "0", "]", ",", "topleft", "[", "1", "]", "]", ",", "\n", "[", "topleft", "[", "0", "]", "+", "width", ",", "topleft", "[", "1", "]", "]", ",", "\n", "[", "topleft", "[", "0", "]", "+", "width", ",", "topleft", "[", "1", "]", "+", "height", "]", ",", "\n", "[", "topleft", "[", "0", "]", ",", "topleft", "[", "1", "]", "+", "height", "]", ",", "\n", "]", ",", "\n", "dtype", "=", "np", ".", "float32", ",", "\n", ")", "\n", "return", "quad", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.to_bbox": [[223, 229], ["numpy.amin", "numpy.amax", "numpy.array"], "function", ["None"], ["", "def", "to_bbox", "(", "quad", ")", ":", "\n", "    ", "topleft", "=", "np", ".", "amin", "(", "quad", ",", "axis", "=", "0", ")", "\n", "bottomright", "=", "np", ".", "amax", "(", "quad", ",", "axis", "=", "0", ")", "\n", "width", ",", "height", "=", "bottomright", "-", "topleft", "\n", "bbox", "=", "np", ".", "array", "(", "[", "topleft", "[", "0", "]", ",", "topleft", "[", "1", "]", ",", "width", ",", "height", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "return", "bbox", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.merge_quad": [[231, 246], ["numpy.array", "numpy.amin", "numpy.amax", "numpy.array"], "function", ["None"], ["", "def", "merge_quad", "(", "quads", ")", ":", "\n", "    ", "quads", "=", "np", ".", "array", "(", "quads", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "topleft", "=", "np", ".", "amin", "(", "quads", ",", "axis", "=", "(", "0", ",", "1", ")", ")", "\n", "bottomright", "=", "np", ".", "amax", "(", "quads", ",", "axis", "=", "(", "0", ",", "1", ")", ")", "\n", "width", ",", "height", "=", "bottomright", "-", "topleft", "\n", "quad", "=", "np", ".", "array", "(", "\n", "[", "\n", "[", "topleft", "[", "0", "]", ",", "topleft", "[", "1", "]", "]", ",", "\n", "[", "topleft", "[", "0", "]", "+", "width", ",", "topleft", "[", "1", "]", "]", ",", "\n", "[", "topleft", "[", "0", "]", "+", "width", ",", "topleft", "[", "1", "]", "+", "height", "]", ",", "\n", "[", "topleft", "[", "0", "]", ",", "topleft", "[", "1", "]", "+", "height", "]", ",", "\n", "]", ",", "\n", "dtype", "=", "np", ".", "float32", ",", "\n", ")", "\n", "return", "quad", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.merge_bbox": [[248, 255], ["numpy.array", "numpy.amin", "numpy.amax", "numpy.array"], "function", ["None"], ["", "def", "merge_bbox", "(", "bboxes", ")", ":", "\n", "    ", "bboxes", "=", "np", ".", "array", "(", "bboxes", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "topleft", "=", "np", ".", "amin", "(", "bboxes", "[", "...", ",", ":", "2", "]", ",", "axis", "=", "0", ")", "\n", "bottomright", "=", "np", ".", "amax", "(", "bboxes", "[", "...", ",", ":", "2", "]", "+", "bboxes", "[", "...", ",", "2", ":", "]", ",", "axis", "=", "0", ")", "\n", "width", ",", "height", "=", "bottomright", "-", "topleft", "\n", "bbox", "=", "np", ".", "array", "(", "[", "topleft", "[", "0", "]", ",", "topleft", "[", "1", "]", ",", "width", ",", "height", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "return", "bbox", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.to_gray": [[257, 260], ["numpy.dot"], "function", ["None"], ["", "def", "to_gray", "(", "color", ")", ":", "\n", "    ", "gray", "=", "np", ".", "dot", "(", "color", ",", "[", "0.299", ",", "0.587", ",", "0.114", "]", ")", "\n", "return", "gray", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.to_rgb": [[262, 276], ["numpy.random.permutation", "int", "int", "round"], "function", ["None"], ["", "def", "to_rgb", "(", "gray", ",", "colorize", "=", "False", ")", ":", "\n", "    ", "rgb", "=", "(", "gray", ",", "gray", ",", "gray", ")", "\n", "\n", "if", "colorize", ":", "\n", "        ", "indices", "=", "np", ".", "random", ".", "permutation", "(", "256", "*", "256", ")", "\n", "for", "idx", "in", "indices", ":", "\n", "            ", "r", "=", "int", "(", "idx", "//", "256", ")", "\n", "g", "=", "int", "(", "idx", "%", "256", ")", "\n", "b", "=", "round", "(", "(", "gray", "-", "r", "*", "0.2989", "-", "g", "*", "0.5870", ")", "/", "0.1140", ")", "\n", "if", "0", "<=", "b", "<", "256", ":", "\n", "                ", "break", "\n", "", "", "rgb", "=", "(", "r", ",", "g", ",", "b", ")", "\n", "\n", "", "return", "rgb", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.color_distance": [[278, 281], ["abs", "image_util.to_gray", "image_util.to_gray"], "function", ["home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.to_gray", "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.to_gray"], ["", "def", "color_distance", "(", "a", ",", "b", ")", ":", "\n", "    ", "dist", "=", "abs", "(", "to_gray", "(", "a", ")", "-", "to_gray", "(", "b", ")", ")", "\n", "return", "dist", "\n", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.unicode_util._read_vert_orient": [[15, 40], ["os.path.dirname", "os.path.join", "os.path.abspath", "open", "regex.sub().strip", "regex.sub().strip.split", "code_range.strip.strip", "value.strip.strip", "code_range.strip.split", "int", "len", "len", "range", "regex.sub"], "function", ["None"], ["def", "_read_vert_orient", "(", ")", ":", "\n", "    ", "root", "=", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "abspath", "(", "__file__", ")", ")", "\n", "path", "=", "os", ".", "path", ".", "join", "(", "root", ",", "\"VerticalOrientation.txt\"", ")", "\n", "data", "=", "{", "}", "\n", "\n", "with", "open", "(", "path", ",", "\"r\"", ",", "encoding", "=", "\"utf-8\"", ")", "as", "fp", ":", "\n", "        ", "for", "line", "in", "fp", ":", "\n", "            ", "line", "=", "regex", ".", "sub", "(", "\"#.*\"", ",", "\"\"", ",", "line", ")", ".", "strip", "(", ")", "\n", "if", "line", "==", "\"\"", ":", "\n", "                ", "continue", "\n", "\n", "", "code_range", ",", "value", "=", "line", ".", "split", "(", "\";\"", ")", "\n", "code_range", "=", "code_range", ".", "strip", "(", ")", "\n", "value", "=", "value", ".", "strip", "(", ")", "\n", "\n", "codes", "=", "code_range", ".", "split", "(", "\"..\"", ")", "\n", "codes", "=", "[", "int", "(", "code", ",", "base", "=", "16", ")", "for", "code", "in", "codes", "]", "\n", "\n", "if", "len", "(", "codes", ")", "==", "1", ":", "\n", "                ", "data", "[", "codes", "[", "0", "]", "]", "=", "value", "\n", "", "if", "len", "(", "codes", ")", "==", "2", ":", "\n", "                ", "for", "code", "in", "range", "(", "codes", "[", "0", "]", ",", "codes", "[", "1", "]", "+", "1", ")", ":", "\n", "                    ", "data", "[", "code", "]", "=", "value", "\n", "\n", "", "", "", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.unicode_util._read_indic_syllabic_category": [[42, 67], ["os.path.dirname", "os.path.join", "os.path.abspath", "open", "regex.sub().strip", "regex.sub().strip.split", "code_range.strip.strip", "value.strip.strip", "code_range.strip.split", "int", "len", "len", "range", "regex.sub"], "function", ["None"], ["", "def", "_read_indic_syllabic_category", "(", ")", ":", "\n", "    ", "root", "=", "os", ".", "path", ".", "dirname", "(", "os", ".", "path", ".", "abspath", "(", "__file__", ")", ")", "\n", "path", "=", "os", ".", "path", ".", "join", "(", "root", ",", "\"IndicSyllabicCategory.txt\"", ")", "\n", "data", "=", "{", "}", "\n", "\n", "with", "open", "(", "path", ",", "\"r\"", ",", "encoding", "=", "\"utf-8\"", ")", "as", "fp", ":", "\n", "        ", "for", "line", "in", "fp", ":", "\n", "            ", "line", "=", "regex", ".", "sub", "(", "\"#.*\"", ",", "\"\"", ",", "line", ")", ".", "strip", "(", ")", "\n", "if", "line", "==", "\"\"", ":", "\n", "                ", "continue", "\n", "\n", "", "code_range", ",", "value", "=", "line", ".", "split", "(", "\";\"", ")", "\n", "code_range", "=", "code_range", ".", "strip", "(", ")", "\n", "value", "=", "value", ".", "strip", "(", ")", "\n", "\n", "codes", "=", "code_range", ".", "split", "(", "\"..\"", ")", "\n", "codes", "=", "[", "int", "(", "code", ",", "base", "=", "16", ")", "for", "code", "in", "codes", "]", "\n", "\n", "if", "len", "(", "codes", ")", "==", "1", ":", "\n", "                ", "data", "[", "codes", "[", "0", "]", "]", "=", "value", "\n", "", "if", "len", "(", "codes", ")", "==", "2", ":", "\n", "                ", "for", "code", "in", "range", "(", "codes", "[", "0", "]", ",", "codes", "[", "1", "]", "+", "1", ")", ":", "\n", "                    ", "data", "[", "code", "]", "=", "value", "\n", "\n", "", "", "", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.unicode_util.vert_orient": [[89, 92], ["ord"], "function", ["None"], ["def", "vert_orient", "(", "char", ")", ":", "\n", "    ", "code", "=", "ord", "(", "char", ")", "\n", "return", "_VERT_ORIENT", "[", "code", "]", "if", "code", "in", "_VERT_ORIENT", "else", "\"R\"", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.unicode_util.vert_rot_flip": [[94, 97], ["ord"], "function", ["None"], ["", "def", "vert_rot_flip", "(", "char", ")", ":", "\n", "    ", "code", "=", "ord", "(", "char", ")", "\n", "return", "code", "in", "_VERT_ROT_FLIP", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.unicode_util.vert_right_flip": [[99, 102], ["ord"], "function", ["None"], ["", "def", "vert_right_flip", "(", "char", ")", ":", "\n", "    ", "code", "=", "ord", "(", "char", ")", "\n", "return", "code", "in", "_VERT_RIGHT_FLIP", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.unicode_util.indic_syllabic_category": [[104, 107], ["ord"], "function", ["None"], ["", "def", "indic_syllabic_category", "(", "char", ")", ":", "\n", "    ", "code", "=", "ord", "(", "char", ")", "\n", "return", "_INDIC_SYLLABIC_CATEGORY", "[", "code", "]", "if", "code", "in", "_INDIC_SYLLABIC_CATEGORY", "else", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.unicode_util.to_fullwidth": [[109, 131], ["unicodedata.name", "chars.append", "unicodedata.lookup", "unicodedata.name.replace", "unicodedata.lookup"], "function", ["None"], ["", "def", "to_fullwidth", "(", "text", ")", ":", "\n", "    ", "chars", "=", "[", "]", "\n", "\n", "for", "char", "in", "text", ":", "\n", "        ", "name", "=", "unicodedata", ".", "name", "(", "char", ")", "\n", "\n", "if", "\"HALFWIDTH \"", "in", "name", ":", "\n", "            ", "try", ":", "\n", "                ", "char", "=", "unicodedata", ".", "lookup", "(", "name", ".", "replace", "(", "\"HALFWIDTH \"", ",", "\"\"", ")", ")", "\n", "", "except", ":", "\n", "                ", "pass", "\n", "\n", "", "", "elif", "\"FULLWIDTH \"", "not", "in", "name", ":", "\n", "            ", "try", ":", "\n", "                ", "char", "=", "unicodedata", ".", "lookup", "(", "f\"FULLWIDTH {name}\"", ")", "\n", "", "except", ":", "\n", "                ", "pass", "\n", "\n", "", "", "chars", ".", "append", "(", "char", ")", "\n", "\n", "", "text", "=", "\"\"", ".", "join", "(", "chars", ")", "\n", "return", "text", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.unicode_util.split_text": [[133, 169], ["unicode_util.reshape_text", "set", "unicode_util.reshape_text", "unicode_util.reorder_text", "len", "regex.split", "list", "unicode_util.reorder_text", "regex.escape", "filter", "chars.append", "regex.findall", "range", "chars.append", "len", "unicode_util.indic_syllabic_category", "chars.append"], "function", ["home.repos.pwc.inspect_result.clovaai_synthtiger.utils.unicode_util.reshape_text", "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.unicode_util.reshape_text", "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.unicode_util.reorder_text", "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.unicode_util.reorder_text", "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.unicode_util.indic_syllabic_category"], ["", "def", "split_text", "(", "text", ",", "reorder", "=", "False", ",", "groups", "=", "None", ")", ":", "\n", "    ", "if", "groups", "is", "None", ":", "\n", "        ", "groups", "=", "[", "]", "\n", "\n", "", "text", "=", "reshape_text", "(", "text", ")", "\n", "groups", "=", "[", "reshape_text", "(", "group", ")", "for", "group", "in", "groups", "]", "\n", "if", "reorder", ":", "\n", "        ", "text", "=", "reorder_text", "(", "text", ")", "\n", "groups", "=", "[", "reorder_text", "(", "group", ")", "for", "group", "in", "groups", "]", "\n", "\n", "", "groups", "=", "set", "(", "groups", ")", "\n", "tokens", "=", "[", "text", "]", "\n", "chars", "=", "[", "]", "\n", "\n", "if", "len", "(", "groups", ")", ">", "0", ":", "\n", "        ", "pattern", "=", "[", "regex", ".", "escape", "(", "group", ")", "for", "group", "in", "groups", "]", "\n", "pattern", "=", "\"({})\"", ".", "format", "(", "\"|\"", ".", "join", "(", "pattern", ")", ")", "\n", "tokens", "=", "regex", ".", "split", "(", "pattern", ",", "text", ")", "\n", "tokens", "=", "list", "(", "filter", "(", "len", ",", "tokens", ")", ")", "\n", "\n", "", "for", "token", "in", "tokens", ":", "\n", "        ", "if", "token", "in", "groups", ":", "\n", "            ", "chars", ".", "append", "(", "token", ")", "\n", "", "else", ":", "\n", "            ", "graphemes", "=", "regex", ".", "findall", "(", "r\"\\X\"", ",", "token", ")", "\n", "start", "=", "0", "\n", "\n", "for", "end", "in", "range", "(", "1", ",", "len", "(", "graphemes", ")", ")", ":", "\n", "                ", "category", "=", "indic_syllabic_category", "(", "graphemes", "[", "end", "-", "1", "]", "[", "-", "1", "]", ")", "\n", "if", "category", "not", "in", "[", "\"Virama\"", ",", "\"Invisible_Stacker\"", ",", "\"Number_Joiner\"", "]", ":", "\n", "                    ", "chars", ".", "append", "(", "\"\"", ".", "join", "(", "graphemes", "[", "start", ":", "end", "]", ")", ")", "\n", "start", "=", "end", "\n", "\n", "", "", "chars", ".", "append", "(", "\"\"", ".", "join", "(", "graphemes", "[", "start", ":", "]", ")", ")", "\n", "\n", "", "", "return", "chars", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.unicode_util.reshape_text": [[171, 177], ["arabic_reshaper.ArabicReshaper", "arabic_reshaper.ArabicReshaper.reshape"], "function", ["None"], ["", "def", "reshape_text", "(", "text", ")", ":", "\n", "    ", "reshaper", "=", "arabic_reshaper", ".", "ArabicReshaper", "(", "\n", "{", "\"use_unshaped_instead_of_isolated\"", ":", "True", "}", "\n", ")", "\n", "text", "=", "reshaper", ".", "reshape", "(", "text", ")", "\n", "return", "text", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.unicode_util.reorder_text": [[179, 182], ["bidi.algorithm.get_display"], "function", ["None"], ["", "def", "reorder_text", "(", "text", ")", ":", "\n", "    ", "text", "=", "bidi", ".", "algorithm", ".", "get_display", "(", "text", ")", "\n", "return", "text", "\n", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.file_util.search_files": [[10, 26], ["os.walk", "os.path.join", "paths.append", "os.path.splitext", "file_ext.lower"], "function", ["None"], ["def", "search_files", "(", "root", ",", "names", "=", "None", ",", "exts", "=", "None", ")", ":", "\n", "    ", "paths", "=", "[", "]", "\n", "\n", "for", "dir_path", ",", "_", ",", "file_names", "in", "os", ".", "walk", "(", "root", ")", ":", "\n", "        ", "for", "file_name", "in", "file_names", ":", "\n", "            ", "file_path", "=", "os", ".", "path", ".", "join", "(", "dir_path", ",", "file_name", ")", "\n", "file_ext", "=", "os", ".", "path", ".", "splitext", "(", "file_name", ")", "[", "1", "]", "\n", "\n", "if", "names", "is", "not", "None", "and", "file_name", "not", "in", "names", ":", "\n", "                ", "continue", "\n", "", "if", "exts", "is", "not", "None", "and", "file_ext", ".", "lower", "(", ")", "not", "in", "exts", ":", "\n", "                ", "continue", "\n", "\n", "", "paths", ".", "append", "(", "file_path", ")", "\n", "\n", "", "", "return", "paths", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.file_util.read_charset": [[28, 32], ["open", "set", "fp.read"], "function", ["None"], ["", "def", "read_charset", "(", "path", ")", ":", "\n", "    ", "with", "open", "(", "path", ",", "\"r\"", ",", "encoding", "=", "\"utf-8\"", ")", "as", "fp", ":", "\n", "        ", "charset", "=", "set", "(", "fp", ".", "read", "(", ")", ")", "\n", "", "return", "charset", "\n", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.components.component.Component.__init__": [[11, 13], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.components.component.Component.sample": [[14, 17], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.components.component.Component.apply": [[18, 20], ["None"], "methods", ["None"], ["", "def", "apply", "(", "self", ",", "layers", ",", "meta", "=", "None", ")", ":", "\n", "        ", "raise", "AttributeError", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.components.component.Component.data": [[21, 23], ["None"], "methods", ["None"], ["", "def", "data", "(", "self", ",", "meta", ")", ":", "\n", "        ", "raise", "AttributeError", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.components.component.Component._init": [[24, 26], ["component.Component.__init__"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__"], ["", "def", "_init", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "__init__", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.grayscale.Grayscale.sample": [[12, 15], ["None"], "methods", ["None"], ["    ", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "meta", "=", "{", "}", "\n", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.grayscale.Grayscale.apply": [[16, 24], ["grayscale.Grayscale.sample", "synthtiger.utils.grayscale_image"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample", "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.grayscale_image"], ["", "def", "apply", "(", "self", ",", "layers", ",", "meta", "=", "None", ")", ":", "\n", "        ", "meta", "=", "self", ".", "sample", "(", "meta", ")", "\n", "\n", "for", "layer", "in", "layers", ":", "\n", "            ", "image", "=", "utils", ".", "grayscale_image", "(", "layer", ".", "image", ")", "\n", "layer", ".", "image", "=", "image", "\n", "\n", "", "return", "meta", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.gussian_blur.GaussianBlur.__init__": [[14, 17], ["synthtiger.components.component.Component.__init__"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "sigma", "=", "(", "1", ",", "2", ")", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "sigma", "=", "sigma", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.gussian_blur.GaussianBlur.sample": [[18, 29], ["meta.get", "numpy.random.randint"], "methods", ["None"], ["", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "if", "meta", "is", "None", ":", "\n", "            ", "meta", "=", "{", "}", "\n", "\n", "", "sigma", "=", "meta", ".", "get", "(", "\"sigma\"", ",", "np", ".", "random", ".", "randint", "(", "self", ".", "sigma", "[", "0", "]", ",", "self", ".", "sigma", "[", "1", "]", "+", "1", ")", ")", "\n", "\n", "meta", "=", "{", "\n", "\"sigma\"", ":", "sigma", ",", "\n", "}", "\n", "\n", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.gussian_blur.GaussianBlur.apply": [[30, 41], ["gussian_blur.GaussianBlur.sample", "imgaug.GaussianBlur", "layer.image.astype", "imgaug.GaussianBlur.astype", "imgaug.GaussianBlur."], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample"], ["", "def", "apply", "(", "self", ",", "layers", ",", "meta", "=", "None", ")", ":", "\n", "        ", "meta", "=", "self", ".", "sample", "(", "meta", ")", "\n", "sigma", "=", "meta", "[", "\"sigma\"", "]", "\n", "aug", "=", "iaa", ".", "GaussianBlur", "(", "sigma", "=", "sigma", ")", "\n", "\n", "for", "layer", "in", "layers", ":", "\n", "            ", "image", "=", "layer", ".", "image", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "image", "=", "aug", "(", "image", "=", "image", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "layer", ".", "image", "=", "image", "\n", "\n", "", "return", "meta", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.image_rotate.ImageRotate.__init__": [[14, 19], ["synthtiger.components.component.Component.__init__"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "angle", "=", "(", "-", "45", ",", "45", ")", ",", "ccw", "=", "0", ",", "mode", "=", "\"constant\"", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "angle", "=", "angle", "\n", "self", ".", "ccw", "=", "ccw", "\n", "self", ".", "mode", "=", "mode", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.image_rotate.ImageRotate.sample": [[20, 35], ["meta.get", "meta.get", "meta.get", "numpy.random.uniform", "numpy.random.rand"], "methods", ["None"], ["", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "if", "meta", "is", "None", ":", "\n", "            ", "meta", "=", "{", "}", "\n", "\n", "", "angle", "=", "meta", ".", "get", "(", "\"angle\"", ",", "np", ".", "random", ".", "uniform", "(", "self", ".", "angle", "[", "0", "]", ",", "self", ".", "angle", "[", "1", "]", ")", ")", "\n", "ccw", "=", "meta", ".", "get", "(", "\"ccw\"", ",", "np", ".", "random", ".", "rand", "(", ")", "<", "self", ".", "ccw", ")", "\n", "mode", "=", "meta", ".", "get", "(", "\"mode\"", ",", "self", ".", "mode", ")", "\n", "\n", "meta", "=", "{", "\n", "\"angle\"", ":", "angle", ",", "\n", "\"ccw\"", ":", "ccw", ",", "\n", "\"mode\"", ":", "mode", ",", "\n", "}", "\n", "\n", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.image_rotate.ImageRotate.apply": [[36, 48], ["image_rotate.ImageRotate.sample", "imgaug.Rotate", "layer.image.astype", "imgaug.Rotate.astype", "imgaug.Rotate."], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample"], ["", "def", "apply", "(", "self", ",", "layers", ",", "meta", "=", "None", ")", ":", "\n", "        ", "meta", "=", "self", ".", "sample", "(", "meta", ")", "\n", "angle", "=", "meta", "[", "\"angle\"", "]", "*", "(", "-", "1", "if", "meta", "[", "\"ccw\"", "]", "else", "1", ")", "\n", "mode", "=", "meta", "[", "\"mode\"", "]", "\n", "aug", "=", "iaa", ".", "Rotate", "(", "rotate", "=", "angle", ",", "mode", "=", "mode", ")", "\n", "\n", "for", "layer", "in", "layers", ":", "\n", "            ", "image", "=", "layer", ".", "image", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "image", "=", "aug", "(", "image", "=", "image", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "layer", ".", "image", "=", "image", "\n", "\n", "", "return", "meta", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.additive_gaussian_noise.AdditiveGaussianNoise.__init__": [[14, 18], ["synthtiger.components.component.Component.__init__"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "scale", "=", "(", "8", ",", "32", ")", ",", "per_channel", "=", "0.5", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "scale", "=", "scale", "\n", "self", ".", "per_channel", "=", "per_channel", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.additive_gaussian_noise.AdditiveGaussianNoise.sample": [[19, 32], ["meta.get", "meta.get", "numpy.random.uniform", "numpy.random.rand"], "methods", ["None"], ["", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "if", "meta", "is", "None", ":", "\n", "            ", "meta", "=", "{", "}", "\n", "\n", "", "scale", "=", "meta", ".", "get", "(", "\"scale\"", ",", "np", ".", "random", ".", "uniform", "(", "self", ".", "scale", "[", "0", "]", ",", "self", ".", "scale", "[", "1", "]", ")", ")", "\n", "per_channel", "=", "meta", ".", "get", "(", "\"per_channel\"", ",", "np", ".", "random", ".", "rand", "(", ")", "<", "self", ".", "per_channel", ")", "\n", "\n", "meta", "=", "{", "\n", "\"scale\"", ":", "scale", ",", "\n", "\"per_channel\"", ":", "per_channel", ",", "\n", "}", "\n", "\n", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.additive_gaussian_noise.AdditiveGaussianNoise.apply": [[33, 47], ["additive_gaussian_noise.AdditiveGaussianNoise.sample", "imgaug.AdditiveGaussianNoise", "layer.image[].astype", "layer.image[].astype", "imgaug.AdditiveGaussianNoise.", "numpy.concatenate().astype", "numpy.concatenate"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample"], ["", "def", "apply", "(", "self", ",", "layers", ",", "meta", "=", "None", ")", ":", "\n", "        ", "meta", "=", "self", ".", "sample", "(", "meta", ")", "\n", "scale", "=", "meta", "[", "\"scale\"", "]", "\n", "per_channel", "=", "meta", "[", "\"per_channel\"", "]", "\n", "aug", "=", "iaa", ".", "AdditiveGaussianNoise", "(", "scale", "=", "scale", ",", "per_channel", "=", "per_channel", ")", "\n", "\n", "for", "layer", "in", "layers", ":", "\n", "            ", "rgb", "=", "layer", ".", "image", "[", "...", ",", ":", "3", "]", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "alpha", "=", "layer", ".", "image", "[", "...", ",", "3", ",", "np", ".", "newaxis", "]", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "rgb", "=", "aug", "(", "image", "=", "rgb", ")", "\n", "image", "=", "np", ".", "concatenate", "(", "(", "rgb", ",", "alpha", ")", ",", "axis", "=", "-", "1", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "layer", ".", "image", "=", "image", "\n", "\n", "", "return", "meta", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.brightness.Brightness.__init__": [[13, 16], ["synthtiger.components.component.Component.__init__"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "beta", "=", "(", "-", "32", ",", "32", ")", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "beta", "=", "beta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.brightness.Brightness.sample": [[17, 28], ["meta.get", "numpy.random.randint"], "methods", ["None"], ["", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "if", "meta", "is", "None", ":", "\n", "            ", "meta", "=", "{", "}", "\n", "\n", "", "beta", "=", "meta", ".", "get", "(", "\"beta\"", ",", "np", ".", "random", ".", "randint", "(", "self", ".", "beta", "[", "0", "]", ",", "self", ".", "beta", "[", "1", "]", "+", "1", ")", ")", "\n", "\n", "meta", "=", "{", "\n", "\"beta\"", ":", "beta", ",", "\n", "}", "\n", "\n", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.brightness.Brightness.apply": [[29, 38], ["brightness.Brightness.sample", "numpy.clip"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample"], ["", "def", "apply", "(", "self", ",", "layers", ",", "meta", "=", "None", ")", ":", "\n", "        ", "meta", "=", "self", ".", "sample", "(", "meta", ")", "\n", "beta", "=", "meta", "[", "\"beta\"", "]", "\n", "\n", "for", "layer", "in", "layers", ":", "\n", "            ", "layer", ".", "image", "[", "...", ",", ":", "3", "]", "+=", "beta", "\n", "layer", ".", "image", "[", "...", ",", ":", "3", "]", "=", "np", ".", "clip", "(", "layer", ".", "image", "[", "...", ",", ":", "3", "]", ",", "0", ",", "255", ")", "\n", "\n", "", "return", "meta", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.elastic_distortion.ElasticDistortion.__init__": [[14, 18], ["synthtiger.components.component.Component.__init__"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "alpha", "=", "(", "10", ",", "15", ")", ",", "sigma", "=", "(", "3", ",", "3", ")", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "alpha", "=", "alpha", "\n", "self", ".", "sigma", "=", "sigma", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.elastic_distortion.ElasticDistortion.sample": [[19, 32], ["meta.get", "meta.get", "numpy.random.uniform", "numpy.random.uniform"], "methods", ["None"], ["", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "if", "meta", "is", "None", ":", "\n", "            ", "meta", "=", "{", "}", "\n", "\n", "", "alpha", "=", "meta", ".", "get", "(", "\"alpha\"", ",", "np", ".", "random", ".", "uniform", "(", "self", ".", "alpha", "[", "0", "]", ",", "self", ".", "alpha", "[", "1", "]", ")", ")", "\n", "sigma", "=", "meta", ".", "get", "(", "\"sigma\"", ",", "np", ".", "random", ".", "uniform", "(", "self", ".", "sigma", "[", "0", "]", ",", "self", ".", "sigma", "[", "1", "]", ")", ")", "\n", "\n", "meta", "=", "{", "\n", "\"alpha\"", ":", "alpha", ",", "\n", "\"sigma\"", ":", "sigma", ",", "\n", "}", "\n", "\n", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.elastic_distortion.ElasticDistortion.apply": [[33, 45], ["elastic_distortion.ElasticDistortion.sample", "imgaug.ElasticTransformation", "layer.image.astype", "imgaug.ElasticTransformation.astype", "imgaug.ElasticTransformation."], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample"], ["", "def", "apply", "(", "self", ",", "layers", ",", "meta", "=", "None", ")", ":", "\n", "        ", "meta", "=", "self", ".", "sample", "(", "meta", ")", "\n", "alpha", "=", "meta", "[", "\"alpha\"", "]", "\n", "sigma", "=", "meta", "[", "\"sigma\"", "]", "\n", "aug", "=", "iaa", ".", "ElasticTransformation", "(", "alpha", "=", "alpha", ",", "sigma", "=", "sigma", ",", "mode", "=", "\"nearest\"", ")", "\n", "\n", "for", "layer", "in", "layers", ":", "\n", "            ", "image", "=", "layer", ".", "image", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "image", "=", "aug", "(", "image", "=", "image", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "layer", ".", "image", "=", "image", "\n", "\n", "", "return", "meta", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.motion_blur.MotionBlur.__init__": [[14, 18], ["synthtiger.components.component.Component.__init__"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "k", "=", "(", "3", ",", "7", ")", ",", "angle", "=", "(", "0", ",", "360", ")", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "k", "=", "k", "\n", "self", ".", "angle", "=", "angle", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.motion_blur.MotionBlur.sample": [[19, 32], ["meta.get", "meta.get", "numpy.random.randint", "numpy.random.uniform"], "methods", ["None"], ["", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "if", "meta", "is", "None", ":", "\n", "            ", "meta", "=", "{", "}", "\n", "\n", "", "k", "=", "meta", ".", "get", "(", "\"k\"", ",", "np", ".", "random", ".", "randint", "(", "self", ".", "k", "[", "0", "]", ",", "self", ".", "k", "[", "1", "]", "+", "1", ")", ")", "\n", "angle", "=", "meta", ".", "get", "(", "\"angle\"", ",", "np", ".", "random", ".", "uniform", "(", "self", ".", "angle", "[", "0", "]", ",", "self", ".", "angle", "[", "1", "]", ")", ")", "\n", "\n", "meta", "=", "{", "\n", "\"k\"", ":", "k", ",", "\n", "\"angle\"", ":", "angle", ",", "\n", "}", "\n", "\n", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.motion_blur.MotionBlur.apply": [[33, 45], ["motion_blur.MotionBlur.sample", "imgaug.MotionBlur", "layer.image.astype", "imgaug.MotionBlur.astype", "imgaug.MotionBlur."], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample"], ["", "def", "apply", "(", "self", ",", "layers", ",", "meta", "=", "None", ")", ":", "\n", "        ", "meta", "=", "self", ".", "sample", "(", "meta", ")", "\n", "k", "=", "meta", "[", "\"k\"", "]", "\n", "angle", "=", "meta", "[", "\"angle\"", "]", "\n", "aug", "=", "iaa", ".", "MotionBlur", "(", "k", "=", "k", ",", "angle", "=", "angle", ")", "\n", "\n", "for", "layer", "in", "layers", ":", "\n", "            ", "image", "=", "layer", ".", "image", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "image", "=", "aug", "(", "image", "=", "image", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "layer", ".", "image", "=", "image", "\n", "\n", "", "return", "meta", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.coarse_dropout.CoarseDropout.__init__": [[14, 28], ["synthtiger.components.component.Component.__init__"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "p", "=", "(", "0.05", ",", "0.25", ")", ",", "\n", "size_px", "=", "None", ",", "\n", "size_percent", "=", "None", ",", "\n", "per_channel", "=", "0.5", ",", "\n", "only_alpha", "=", "0", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "p", "=", "p", "\n", "self", ".", "size_px", "=", "size_px", "\n", "self", ".", "size_percent", "=", "size_percent", "\n", "self", ".", "per_channel", "=", "per_channel", "\n", "self", ".", "only_alpha", "=", "only_alpha", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.coarse_dropout.CoarseDropout.sample": [[29, 56], ["meta.get", "meta.get", "meta.get", "meta.get", "meta.get", "numpy.random.uniform", "numpy.random.randint", "numpy.random.uniform", "numpy.random.rand", "numpy.random.rand"], "methods", ["None"], ["", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "if", "meta", "is", "None", ":", "\n", "            ", "meta", "=", "{", "}", "\n", "\n", "", "p", "=", "meta", ".", "get", "(", "\"p\"", ",", "np", ".", "random", ".", "uniform", "(", "self", ".", "p", "[", "0", "]", ",", "self", ".", "p", "[", "1", "]", ")", ")", "\n", "per_channel", "=", "meta", ".", "get", "(", "\"per_channel\"", ",", "np", ".", "random", ".", "rand", "(", ")", "<", "self", ".", "per_channel", ")", "\n", "only_alpha", "=", "meta", ".", "get", "(", "\"only_alpha\"", ",", "np", ".", "random", ".", "rand", "(", ")", "<", "self", ".", "only_alpha", ")", "\n", "\n", "size_px", "=", "None", "\n", "if", "self", ".", "size_px", "is", "not", "None", ":", "\n", "            ", "size_px", "=", "np", ".", "random", ".", "randint", "(", "self", ".", "size_px", "[", "0", "]", ",", "self", ".", "size_px", "[", "1", "]", "+", "1", ")", "\n", "", "size_px", "=", "meta", ".", "get", "(", "\"size_px\"", ",", "size_px", ")", "\n", "\n", "size_percent", "=", "None", "\n", "if", "self", ".", "size_percent", "is", "not", "None", ":", "\n", "            ", "size_percent", "=", "np", ".", "random", ".", "uniform", "(", "self", ".", "size_percent", "[", "0", "]", ",", "self", ".", "size_percent", "[", "1", "]", ")", "\n", "", "size_percent", "=", "meta", ".", "get", "(", "\"size_percent\"", ",", "size_percent", ")", "\n", "\n", "meta", "=", "{", "\n", "\"p\"", ":", "p", ",", "\n", "\"size_px\"", ":", "size_px", ",", "\n", "\"size_percent\"", ":", "size_percent", ",", "\n", "\"per_channel\"", ":", "per_channel", ",", "\n", "\"only_alpha\"", ":", "only_alpha", ",", "\n", "}", "\n", "\n", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.coarse_dropout.CoarseDropout.apply": [[57, 79], ["coarse_dropout.CoarseDropout.sample", "imgaug.CoarseDropout", "layer.image[].astype", "layer.image[].astype", "numpy.concatenate().astype", "imgaug.CoarseDropout.", "imgaug.CoarseDropout.", "numpy.concatenate"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample"], ["", "def", "apply", "(", "self", ",", "layers", ",", "meta", "=", "None", ")", ":", "\n", "        ", "meta", "=", "self", ".", "sample", "(", "meta", ")", "\n", "p", "=", "meta", "[", "\"p\"", "]", "\n", "size_px", "=", "meta", "[", "\"size_px\"", "]", "\n", "size_percent", "=", "meta", "[", "\"size_percent\"", "]", "\n", "per_channel", "=", "meta", "[", "\"per_channel\"", "]", "\n", "only_alpha", "=", "meta", "[", "\"only_alpha\"", "]", "\n", "aug", "=", "iaa", ".", "CoarseDropout", "(", "\n", "p", "=", "p", ",", "size_px", "=", "size_px", ",", "size_percent", "=", "size_percent", ",", "per_channel", "=", "per_channel", "\n", ")", "\n", "\n", "for", "layer", "in", "layers", ":", "\n", "            ", "rgb", "=", "layer", ".", "image", "[", "...", ",", ":", "3", "]", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "alpha", "=", "layer", ".", "image", "[", "...", ",", "3", ",", "np", ".", "newaxis", "]", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "if", "not", "only_alpha", ":", "\n", "                ", "rgb", "=", "aug", "(", "image", "=", "rgb", ")", "\n", "", "else", ":", "\n", "                ", "alpha", "=", "aug", "(", "image", "=", "alpha", ")", "\n", "", "image", "=", "np", ".", "concatenate", "(", "(", "rgb", ",", "alpha", ")", ",", "axis", "=", "-", "1", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "layer", ".", "image", "=", "image", "\n", "\n", "", "return", "meta", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.median_blur.MedianBlur.__init__": [[14, 17], ["synthtiger.components.component.Component.__init__"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "k", "=", "(", "1", ",", "3", ")", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "k", "=", "k", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.median_blur.MedianBlur.sample": [[18, 29], ["meta.get", "numpy.random.randint"], "methods", ["None"], ["", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "if", "meta", "is", "None", ":", "\n", "            ", "meta", "=", "{", "}", "\n", "\n", "", "k", "=", "meta", ".", "get", "(", "\"k\"", ",", "np", ".", "random", ".", "randint", "(", "self", ".", "k", "[", "0", "]", ",", "self", ".", "k", "[", "1", "]", "+", "1", ")", ")", "\n", "\n", "meta", "=", "{", "\n", "\"k\"", ":", "k", ",", "\n", "}", "\n", "\n", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.median_blur.MedianBlur.apply": [[30, 41], ["median_blur.MedianBlur.sample", "imgaug.MedianBlur", "layer.image.astype", "imgaug.MedianBlur.astype", "imgaug.MedianBlur."], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample"], ["", "def", "apply", "(", "self", ",", "layers", ",", "meta", "=", "None", ")", ":", "\n", "        ", "meta", "=", "self", ".", "sample", "(", "meta", ")", "\n", "k", "=", "meta", "[", "\"k\"", "]", "*", "2", "+", "1", "\n", "aug", "=", "iaa", ".", "MedianBlur", "(", "k", "=", "k", ")", "\n", "\n", "for", "layer", "in", "layers", ":", "\n", "            ", "image", "=", "layer", ".", "image", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "image", "=", "aug", "(", "image", "=", "image", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "layer", ".", "image", "=", "image", "\n", "\n", "", "return", "meta", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.jpeg_compression.JpegCompression.__init__": [[14, 17], ["synthtiger.components.component.Component.__init__"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "compression", "=", "(", "5", ",", "30", ")", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "compression", "=", "compression", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.jpeg_compression.JpegCompression.sample": [[18, 32], ["meta.get", "numpy.random.randint"], "methods", ["None"], ["", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "if", "meta", "is", "None", ":", "\n", "            ", "meta", "=", "{", "}", "\n", "\n", "", "compression", "=", "meta", ".", "get", "(", "\n", "\"compression\"", ",", "\n", "np", ".", "random", ".", "randint", "(", "self", ".", "compression", "[", "0", "]", ",", "self", ".", "compression", "[", "1", "]", "+", "1", ")", ",", "\n", ")", "\n", "\n", "meta", "=", "{", "\n", "\"compression\"", ":", "compression", ",", "\n", "}", "\n", "\n", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.jpeg_compression.JpegCompression.apply": [[33, 46], ["jpeg_compression.JpegCompression.sample", "imgaug.JpegCompression", "layer.image[].astype", "layer.image[].astype", "imgaug.JpegCompression.", "numpy.concatenate().astype", "numpy.concatenate"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample"], ["", "def", "apply", "(", "self", ",", "layers", ",", "meta", "=", "None", ")", ":", "\n", "        ", "meta", "=", "self", ".", "sample", "(", "meta", ")", "\n", "compression", "=", "meta", "[", "\"compression\"", "]", "\n", "aug", "=", "iaa", ".", "JpegCompression", "(", "compression", "=", "compression", ")", "\n", "\n", "for", "layer", "in", "layers", ":", "\n", "            ", "rgb", "=", "layer", ".", "image", "[", "...", ",", ":", "3", "]", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "alpha", "=", "layer", ".", "image", "[", "...", ",", "3", ",", "np", ".", "newaxis", "]", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "rgb", "=", "aug", "(", "image", "=", "rgb", ")", "\n", "image", "=", "np", ".", "concatenate", "(", "(", "rgb", ",", "alpha", ")", ",", "axis", "=", "-", "1", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "layer", ".", "image", "=", "image", "\n", "\n", "", "return", "meta", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.shadow.Shadow.__init__": [[16, 32], ["synthtiger.components.component.Component.__init__"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "intensity", "=", "(", "0", ",", "192", ")", ",", "\n", "amount", "=", "(", "0.5", ",", "1", ")", ",", "\n", "smoothing", "=", "(", "0", ",", "1", ")", ",", "\n", "bidirectional", "=", "0.5", ",", "\n", "align", "=", "(", "-", "1", ",", "1", ")", ",", "\n", "angle", "=", "(", "0", ",", "360", ")", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "intensity", "=", "intensity", "\n", "self", ".", "amount", "=", "amount", "\n", "self", ".", "smoothing", "=", "smoothing", "\n", "self", ".", "bidirectional", "=", "bidirectional", "\n", "self", ".", "align", "=", "align", "\n", "self", ".", "angle", "=", "angle", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.shadow.Shadow.sample": [[33, 58], ["meta.get", "meta.get", "meta.get", "meta.get", "meta.get", "meta.get", "numpy.random.randint", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.rand"], "methods", ["None"], ["", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "if", "meta", "is", "None", ":", "\n", "            ", "meta", "=", "{", "}", "\n", "\n", "", "intensity", "=", "meta", ".", "get", "(", "\n", "\"intensity\"", ",", "np", ".", "random", ".", "randint", "(", "self", ".", "intensity", "[", "0", "]", ",", "self", ".", "intensity", "[", "1", "]", "+", "1", ")", "\n", ")", "\n", "amount", "=", "meta", ".", "get", "(", "\"amount\"", ",", "np", ".", "random", ".", "uniform", "(", "self", ".", "amount", "[", "0", "]", ",", "self", ".", "amount", "[", "1", "]", ")", ")", "\n", "smoothing", "=", "meta", ".", "get", "(", "\n", "\"smoothing\"", ",", "np", ".", "random", ".", "uniform", "(", "self", ".", "smoothing", "[", "0", "]", ",", "self", ".", "smoothing", "[", "1", "]", ")", "\n", ")", "\n", "bidirectional", "=", "meta", ".", "get", "(", "\"bidirectional\"", ",", "np", ".", "random", ".", "rand", "(", ")", "<", "self", ".", "bidirectional", ")", "\n", "align", "=", "meta", ".", "get", "(", "\"align\"", ",", "np", ".", "random", ".", "uniform", "(", "self", ".", "align", "[", "0", "]", ",", "self", ".", "align", "[", "1", "]", ")", ")", "\n", "angle", "=", "meta", ".", "get", "(", "\"angle\"", ",", "np", ".", "random", ".", "uniform", "(", "self", ".", "angle", "[", "0", "]", ",", "self", ".", "angle", "[", "1", "]", ")", ")", "\n", "\n", "meta", "=", "{", "\n", "\"intensity\"", ":", "intensity", ",", "\n", "\"amount\"", ":", "amount", ",", "\n", "\"smoothing\"", ":", "smoothing", ",", "\n", "\"bidirectional\"", ":", "bidirectional", ",", "\n", "\"align\"", ":", "align", ",", "\n", "\"angle\"", ":", "angle", ",", "\n", "}", "\n", "\n", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.shadow.Shadow.apply": [[59, 122], ["cv2.resize.Shadow.sample", "abs", "abs", "max", "numpy.zeros", "synthtiger.utils.create_image", "cv2.getRotationMatrix2D", "cv2.warpAffine", "cv2.resize", "synthtiger.utils.blend_image", "numpy.sin", "numpy.cos", "int", "int", "numpy.clip", "numpy.clip", "max", "max", "numpy.linspace", "pytweening.easeInOutQuad", "int", "int", "numpy.clip", "numpy.clip", "int", "int", "numpy.clip", "numpy.clip", "max", "max", "numpy.linspace", "pytweening.easeInOutQuad", "numpy.deg2rad", "numpy.deg2rad", "min", "min"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample", "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.create_image", "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.blend_image"], ["", "def", "apply", "(", "self", ",", "layers", ",", "meta", "=", "None", ")", ":", "\n", "        ", "meta", "=", "self", ".", "sample", "(", "meta", ")", "\n", "intensity", "=", "meta", "[", "\"intensity\"", "]", "\n", "amount", "=", "meta", "[", "\"amount\"", "]", "\n", "smoothing", "=", "meta", "[", "\"smoothing\"", "]", "\n", "bidirectional", "=", "meta", "[", "\"bidirectional\"", "]", "\n", "align", "=", "meta", "[", "\"align\"", "]", "\n", "angle", "=", "meta", "[", "\"angle\"", "]", "\n", "\n", "scale", "=", "abs", "(", "np", ".", "sin", "(", "np", ".", "deg2rad", "(", "angle", ")", ")", ")", "+", "abs", "(", "np", ".", "cos", "(", "np", ".", "deg2rad", "(", "angle", ")", ")", ")", "\n", "\n", "if", "bidirectional", ":", "\n", "            ", "start", "=", "(", "1", "-", "amount", ")", "/", "2", "+", "(", "1", "-", "amount", ")", "/", "2", "*", "align", "\n", "end", "=", "(", "1", "+", "amount", ")", "/", "2", "+", "(", "1", "-", "amount", ")", "/", "2", "*", "align", "\n", "grad_start", "=", "start", "-", "amount", "/", "2", "*", "smoothing", "\n", "grad_end", "=", "end", "+", "amount", "/", "2", "*", "smoothing", "\n", "peak_start", "=", "start", "+", "amount", "/", "2", "*", "smoothing", "\n", "peak_end", "=", "end", "-", "amount", "/", "2", "*", "smoothing", "\n", "", "else", ":", "\n", "            ", "start", "=", "1", "-", "amount", "\n", "end", "=", "1", "\n", "grad_start", "=", "start", "-", "min", "(", "amount", ",", "1", "-", "amount", ")", "*", "smoothing", "\n", "grad_end", "=", "end", "\n", "peak_start", "=", "start", "+", "min", "(", "amount", ",", "1", "-", "amount", ")", "*", "smoothing", "\n", "peak_end", "=", "end", "\n", "\n", "", "for", "layer", "in", "layers", ":", "\n", "            ", "height", ",", "width", "=", "layer", ".", "image", ".", "shape", "[", ":", "2", "]", "\n", "size", "=", "max", "(", "width", ",", "height", ")", "\n", "values", "=", "np", ".", "zeros", "(", "size", ")", "\n", "\n", "start", ",", "end", "=", "int", "(", "size", "*", "grad_start", ")", ",", "int", "(", "size", "*", "peak_start", ")", "\n", "left", ",", "right", "=", "np", ".", "clip", "(", "start", ",", "0", ",", "size", ")", ",", "np", ".", "clip", "(", "end", ",", "0", ",", "size", ")", "\n", "grad_left", ",", "grad_right", "=", "max", "(", "left", "-", "start", ",", "0", ")", ",", "max", "(", "right", "-", "start", ",", "0", ")", "\n", "grads", "=", "np", ".", "linspace", "(", "0", ",", "1", ",", "end", "-", "start", ")", "[", "grad_left", ":", "grad_right", "]", "\n", "values", "[", "left", ":", "right", "]", "=", "[", "pytweening", ".", "easeInOutQuad", "(", "grad", ")", "for", "grad", "in", "grads", "]", "\n", "\n", "start", ",", "end", "=", "int", "(", "size", "*", "peak_start", ")", ",", "int", "(", "size", "*", "peak_end", ")", "\n", "left", ",", "right", "=", "np", ".", "clip", "(", "start", ",", "0", ",", "size", ")", ",", "np", ".", "clip", "(", "end", ",", "0", ",", "size", ")", "\n", "values", "[", "left", ":", "right", "]", "=", "1", "\n", "\n", "start", ",", "end", "=", "int", "(", "size", "*", "peak_end", ")", ",", "int", "(", "size", "*", "grad_end", ")", "\n", "left", ",", "right", "=", "np", ".", "clip", "(", "start", ",", "0", ",", "size", ")", ",", "np", ".", "clip", "(", "end", ",", "0", ",", "size", ")", "\n", "grad_left", ",", "grad_right", "=", "max", "(", "left", "-", "start", ",", "0", ")", ",", "max", "(", "right", "-", "start", ",", "0", ")", "\n", "grads", "=", "np", ".", "linspace", "(", "1", ",", "0", ",", "end", "-", "start", ")", "[", "grad_left", ":", "grad_right", "]", "\n", "values", "[", "left", ":", "right", "]", "=", "[", "pytweening", ".", "easeInOutQuad", "(", "grad", ")", "for", "grad", "in", "grads", "]", "\n", "\n", "shadow", "=", "utils", ".", "create_image", "(", "(", "size", ",", "size", ")", ")", "\n", "shadow", "[", "...", ",", "3", "]", "=", "values", "*", "intensity", "\n", "\n", "matrix", "=", "cv2", ".", "getRotationMatrix2D", "(", "(", "size", "/", "2", ",", "size", "/", "2", ")", ",", "angle", ",", "scale", ")", "\n", "shadow", "=", "cv2", ".", "warpAffine", "(", "\n", "shadow", ",", "\n", "matrix", ",", "\n", "(", "size", ",", "size", ")", ",", "\n", "borderMode", "=", "cv2", ".", "BORDER_REPLICATE", ",", "\n", ")", "\n", "shadow", "=", "cv2", ".", "resize", "(", "shadow", ",", "(", "width", ",", "height", ")", ")", "\n", "\n", "image", "=", "utils", ".", "blend_image", "(", "shadow", ",", "layer", ".", "image", ")", "\n", "layer", ".", "image", "=", "image", "\n", "\n", "", "return", "meta", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.contrast.Contrast.__init__": [[13, 16], ["synthtiger.components.component.Component.__init__"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "alpha", "=", "(", "0.5", ",", "1.5", ")", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "alpha", "=", "alpha", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.contrast.Contrast.sample": [[17, 28], ["meta.get", "numpy.random.uniform"], "methods", ["None"], ["", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "if", "meta", "is", "None", ":", "\n", "            ", "meta", "=", "{", "}", "\n", "\n", "", "alpha", "=", "meta", ".", "get", "(", "\"alpha\"", ",", "np", ".", "random", ".", "uniform", "(", "self", ".", "alpha", "[", "0", "]", ",", "self", ".", "alpha", "[", "1", "]", ")", ")", "\n", "\n", "meta", "=", "{", "\n", "\"alpha\"", ":", "alpha", ",", "\n", "}", "\n", "\n", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.contrast.Contrast.apply": [[29, 38], ["contrast.Contrast.sample", "numpy.clip"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample"], ["", "def", "apply", "(", "self", ",", "layers", ",", "meta", "=", "None", ")", ":", "\n", "        ", "meta", "=", "self", ".", "sample", "(", "meta", ")", "\n", "alpha", "=", "meta", "[", "\"alpha\"", "]", "\n", "\n", "for", "layer", "in", "layers", ":", "\n", "            ", "layer", ".", "image", "[", "...", ",", ":", "3", "]", "=", "alpha", "*", "layer", ".", "image", "[", "...", ",", ":", "3", "]", "-", "128", "*", "(", "alpha", "-", "1", ")", "\n", "layer", ".", "image", "[", "...", ",", ":", "3", "]", "=", "np", ".", "clip", "(", "layer", ".", "image", "[", "...", ",", ":", "3", "]", ",", "0", ",", "255", ")", "\n", "\n", "", "return", "meta", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.dilate.Dilate.__init__": [[14, 17], ["synthtiger.components.component.Component.__init__"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "k", "=", "(", "1", ",", "3", ")", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "k", "=", "k", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.dilate.Dilate.sample": [[18, 29], ["meta.get", "numpy.random.randint"], "methods", ["None"], ["", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "if", "meta", "is", "None", ":", "\n", "            ", "meta", "=", "{", "}", "\n", "\n", "", "k", "=", "meta", ".", "get", "(", "\"k\"", ",", "np", ".", "random", ".", "randint", "(", "self", ".", "k", "[", "0", "]", ",", "self", ".", "k", "[", "1", "]", "+", "1", ")", ")", "\n", "\n", "meta", "=", "{", "\n", "\"k\"", ":", "k", ",", "\n", "}", "\n", "\n", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.dilate.Dilate.apply": [[30, 39], ["dilate.Dilate.sample", "synthtiger.utils.dilate_image"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample", "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.dilate_image"], ["", "def", "apply", "(", "self", ",", "layers", ",", "meta", "=", "None", ")", ":", "\n", "        ", "meta", "=", "self", ".", "sample", "(", "meta", ")", "\n", "k", "=", "meta", "[", "\"k\"", "]", "\n", "\n", "for", "layer", "in", "layers", ":", "\n", "            ", "image", "=", "utils", ".", "dilate_image", "(", "layer", ".", "image", ",", "k", ")", "\n", "layer", ".", "image", "=", "image", "\n", "\n", "", "return", "meta", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.resample.Resample.__init__": [[14, 17], ["synthtiger.components.component.Component.__init__"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "size", "=", "(", "0.3", ",", "0.7", ")", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "size", "=", "size", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.resample.Resample.sample": [[18, 29], ["meta.get", "numpy.random.uniform"], "methods", ["None"], ["", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "if", "meta", "is", "None", ":", "\n", "            ", "meta", "=", "{", "}", "\n", "\n", "", "size", "=", "meta", ".", "get", "(", "\"size\"", ",", "np", ".", "random", ".", "uniform", "(", "self", ".", "size", "[", "0", "]", ",", "self", ".", "size", "[", "1", "]", ")", ")", "\n", "\n", "meta", "=", "{", "\n", "\"size\"", ":", "size", ",", "\n", "}", "\n", "\n", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.resample.Resample.apply": [[30, 44], ["resample.Resample.sample", "imgaug.KeepSizeByResize", "imgaug.Resize", "layer.image.astype", "imgaug.KeepSizeByResize.astype", "imgaug.KeepSizeByResize."], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample"], ["", "def", "apply", "(", "self", ",", "layers", ",", "meta", "=", "None", ")", ":", "\n", "        ", "meta", "=", "self", ".", "sample", "(", "meta", ")", "\n", "size", "=", "meta", "[", "\"size\"", "]", "\n", "aug", "=", "iaa", ".", "KeepSizeByResize", "(", "\n", "iaa", ".", "Resize", "(", "size", "=", "size", ",", "interpolation", "=", "[", "\"nearest\"", ",", "\"linear\"", ",", "\"area\"", ",", "\"cubic\"", "]", ")", ",", "\n", "interpolation", "=", "[", "\"nearest\"", ",", "\"linear\"", ",", "\"area\"", ",", "\"cubic\"", "]", ",", "\n", ")", "\n", "\n", "for", "layer", "in", "layers", ":", "\n", "            ", "image", "=", "layer", ".", "image", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "image", "=", "aug", "(", "image", "=", "image", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "layer", ".", "image", "=", "image", "\n", "\n", "", "return", "meta", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.erode.Erode.__init__": [[14, 17], ["synthtiger.components.component.Component.__init__"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "k", "=", "(", "1", ",", "3", ")", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "k", "=", "k", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.erode.Erode.sample": [[18, 29], ["meta.get", "numpy.random.randint"], "methods", ["None"], ["", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "if", "meta", "is", "None", ":", "\n", "            ", "meta", "=", "{", "}", "\n", "\n", "", "k", "=", "meta", ".", "get", "(", "\"k\"", ",", "np", ".", "random", ".", "randint", "(", "self", ".", "k", "[", "0", "]", ",", "self", ".", "k", "[", "1", "]", "+", "1", ")", ")", "\n", "\n", "meta", "=", "{", "\n", "\"k\"", ":", "k", ",", "\n", "}", "\n", "\n", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.image_effect.erode.Erode.apply": [[30, 39], ["erode.Erode.sample", "synthtiger.utils.erode_image"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample", "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.erode_image"], ["", "def", "apply", "(", "self", ",", "layers", ",", "meta", "=", "None", ")", ":", "\n", "        ", "meta", "=", "self", ".", "sample", "(", "meta", ")", "\n", "k", "=", "meta", "[", "\"k\"", "]", "\n", "\n", "for", "layer", "in", "layers", ":", "\n", "            ", "image", "=", "utils", ".", "erode_image", "(", "layer", ".", "image", ",", "k", ")", "\n", "layer", ".", "image", "=", "image", "\n", "\n", "", "return", "meta", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.texture.base_texture.BaseTexture.__init__": [[17, 28], ["synthtiger.components.component.Component.__init__", "base_texture.BaseTexture._update_paths", "numpy.array", "sum"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__", "home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont._update_paths"], ["    ", "def", "__init__", "(", "self", ",", "paths", "=", "(", ")", ",", "weights", "=", "(", ")", ",", "alpha", "=", "(", "1", ",", "1", ")", ",", "grayscale", "=", "0", ",", "crop", "=", "0", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "paths", "=", "paths", "\n", "self", ".", "weights", "=", "weights", "\n", "self", ".", "alpha", "=", "alpha", "\n", "self", ".", "grayscale", "=", "grayscale", "\n", "self", ".", "crop", "=", "crop", "\n", "self", ".", "_paths", "=", "[", "]", "\n", "self", ".", "_counts", "=", "[", "]", "\n", "self", ".", "_probs", "=", "np", ".", "array", "(", "self", ".", "weights", ")", "/", "sum", "(", "self", ".", "weights", ")", "\n", "self", ".", "_update_paths", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.texture.base_texture.BaseTexture.sample": [[29, 63], ["meta.get", "meta.get", "meta.get", "meta.get", "base_texture.BaseTexture._get_size", "meta.get", "meta.get", "meta.get", "meta.get", "len", "RuntimeError", "len", "len", "RuntimeError", "base_texture.BaseTexture._sample_texture", "numpy.random.uniform", "numpy.random.rand", "numpy.random.rand", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.texture.base_texture.BaseTexture._get_size", "home.repos.pwc.inspect_result.clovaai_synthtiger.texture.base_texture.BaseTexture._sample_texture"], ["", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "if", "meta", "is", "None", ":", "\n", "            ", "meta", "=", "{", "}", "\n", "\n", "", "if", "len", "(", "self", ".", "paths", ")", "==", "0", ":", "\n", "            ", "raise", "RuntimeError", "(", "\"Texture path is not specified\"", ")", "\n", "", "if", "len", "(", "self", ".", "paths", ")", "!=", "len", "(", "self", ".", "weights", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "\n", "\"The number of weights does not match the number of texture paths\"", "\n", ")", "\n", "\n", "", "path", "=", "meta", ".", "get", "(", "\"path\"", ",", "self", ".", "_sample_texture", "(", ")", ")", "\n", "alpha", "=", "meta", ".", "get", "(", "\"alpha\"", ",", "np", ".", "random", ".", "uniform", "(", "self", ".", "alpha", "[", "0", "]", ",", "self", ".", "alpha", "[", "1", "]", ")", ")", "\n", "grayscale", "=", "meta", ".", "get", "(", "\"grayscale\"", ",", "np", ".", "random", ".", "rand", "(", ")", "<", "self", ".", "grayscale", ")", "\n", "crop", "=", "meta", ".", "get", "(", "\"crop\"", ",", "np", ".", "random", ".", "rand", "(", ")", "<", "self", ".", "crop", ")", "\n", "\n", "width", ",", "height", "=", "self", ".", "_get_size", "(", "path", ")", "\n", "w", "=", "meta", ".", "get", "(", "\"w\"", ",", "np", ".", "random", ".", "randint", "(", "1", ",", "width", "+", "1", ")", "if", "crop", "else", "width", ")", "\n", "h", "=", "meta", ".", "get", "(", "\"h\"", ",", "np", ".", "random", ".", "randint", "(", "1", ",", "height", "+", "1", ")", "if", "crop", "else", "height", ")", "\n", "x", "=", "meta", ".", "get", "(", "\"x\"", ",", "np", ".", "random", ".", "randint", "(", "0", ",", "width", "-", "w", "+", "1", ")", "if", "crop", "else", "0", ")", "\n", "y", "=", "meta", ".", "get", "(", "\"y\"", ",", "np", ".", "random", ".", "randint", "(", "0", ",", "height", "-", "h", "+", "1", ")", "if", "crop", "else", "0", ")", "\n", "\n", "meta", "=", "{", "\n", "\"path\"", ":", "path", ",", "\n", "\"alpha\"", ":", "alpha", ",", "\n", "\"grayscale\"", ":", "grayscale", ",", "\n", "\"crop\"", ":", "crop", ",", "\n", "\"x\"", ":", "x", ",", "\n", "\"y\"", ":", "y", ",", "\n", "\"w\"", ":", "w", ",", "\n", "\"h\"", ":", "h", ",", "\n", "}", "\n", "\n", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.texture.base_texture.BaseTexture.apply": [[64, 74], ["base_texture.BaseTexture.sample", "base_texture.BaseTexture.data", "synthtiger.utils.resize_image", "synthtiger.utils.blend_image"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample", "home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.data", "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.resize_image", "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.blend_image"], ["", "def", "apply", "(", "self", ",", "layers", ",", "meta", "=", "None", ")", ":", "\n", "        ", "meta", "=", "self", ".", "sample", "(", "meta", ")", "\n", "texture", "=", "self", ".", "data", "(", "meta", ")", "\n", "\n", "for", "layer", "in", "layers", ":", "\n", "            ", "height", ",", "width", "=", "layer", ".", "image", ".", "shape", "[", ":", "2", "]", "\n", "image", "=", "utils", ".", "resize_image", "(", "texture", ",", "(", "width", ",", "height", ")", ")", "\n", "layer", ".", "image", "=", "utils", ".", "blend_image", "(", "image", ",", "layer", ".", "image", ",", "mask", "=", "True", ")", "\n", "\n", "", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.texture.base_texture.BaseTexture.data": [[75, 81], ["base_texture.BaseTexture._read_texture"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.texture.base_texture.BaseTexture._read_texture"], ["", "def", "data", "(", "self", ",", "meta", ")", ":", "\n", "        ", "x", ",", "y", ",", "w", ",", "h", "=", "meta", "[", "\"x\"", "]", ",", "meta", "[", "\"y\"", "]", ",", "meta", "[", "\"w\"", "]", ",", "meta", "[", "\"h\"", "]", "\n", "texture", "=", "self", ".", "_read_texture", "(", "meta", "[", "\"path\"", "]", ",", "meta", "[", "\"grayscale\"", "]", ")", "\n", "texture", "=", "texture", "[", "y", ":", "y", "+", "h", ",", "x", ":", "x", "+", "w", ",", "...", "]", "\n", "texture", "[", "...", ",", "3", "]", "*=", "meta", "[", "\"alpha\"", "]", "\n", "return", "texture", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.texture.base_texture.BaseTexture._update_paths": [[82, 96], ["os.path.isdir", "base_texture.BaseTexture._paths.append", "base_texture.BaseTexture._counts.append", "os.path.exists", "synthtiger.utils.search_files", "len"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.utils.file_util.search_files"], ["", "def", "_update_paths", "(", "self", ")", ":", "\n", "        ", "self", ".", "_paths", "=", "[", "]", "\n", "self", ".", "_counts", "=", "[", "]", "\n", "\n", "for", "path", "in", "self", ".", "paths", ":", "\n", "            ", "if", "not", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "\n", "                ", "continue", "\n", "\n", "", "paths", "=", "[", "path", "]", "\n", "if", "os", ".", "path", ".", "isdir", "(", "path", ")", ":", "\n", "                ", "paths", "=", "utils", ".", "search_files", "(", "path", ",", "exts", "=", "[", "\".jpg\"", ",", "\".jpeg\"", ",", "\".png\"", ",", "\".bmp\"", "]", ")", "\n", "\n", "", "self", ".", "_paths", ".", "append", "(", "paths", ")", "\n", "self", ".", "_counts", ".", "append", "(", "len", "(", "paths", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.texture.base_texture.BaseTexture._read_texture": [[97, 105], ["PIL.Image.open", "PIL.ImageOps.exif_transpose", "texture.convert.convert.convert", "numpy.array", "texture.convert.convert.convert"], "methods", ["None"], ["", "", "def", "_read_texture", "(", "self", ",", "path", ",", "grayscale", "=", "False", ")", ":", "\n", "        ", "texture", "=", "Image", ".", "open", "(", "path", ")", "\n", "texture", "=", "ImageOps", ".", "exif_transpose", "(", "texture", ")", "\n", "if", "grayscale", ":", "\n", "            ", "texture", "=", "texture", ".", "convert", "(", "\"L\"", ")", "\n", "", "texture", "=", "texture", ".", "convert", "(", "\"RGBA\"", ")", "\n", "texture", "=", "np", ".", "array", "(", "texture", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "return", "texture", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.texture.base_texture.BaseTexture._get_size": [[106, 113], ["PIL.Image.open", "dict", "PIL.Image.open.getexif", "dict.get"], "methods", ["None"], ["", "def", "_get_size", "(", "self", ",", "path", ")", ":", "\n", "        ", "texture", "=", "Image", ".", "open", "(", "path", ")", "\n", "width", ",", "height", "=", "texture", ".", "size", "\n", "exif", "=", "dict", "(", "texture", ".", "getexif", "(", ")", ")", "\n", "if", "exif", ".", "get", "(", "0x0112", ",", "1", ")", ">=", "5", ":", "\n", "            ", "width", ",", "height", "=", "height", ",", "width", "\n", "", "return", "width", ",", "height", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.texture.base_texture.BaseTexture._sample_texture": [[114, 122], ["numpy.random.choice", "numpy.random.randint", "len", "RuntimeError", "len"], "methods", ["None"], ["", "def", "_sample_texture", "(", "self", ")", ":", "\n", "        ", "key", "=", "np", ".", "random", ".", "choice", "(", "len", "(", "self", ".", "paths", ")", ",", "p", "=", "self", ".", "_probs", ")", "\n", "if", "self", ".", "_counts", "[", "key", "]", "==", "0", ":", "\n", "            ", "raise", "RuntimeError", "(", "f\"There is no texture: {self.paths[key]}\"", ")", "\n", "\n", "", "idx", "=", "np", ".", "random", ".", "randint", "(", "len", "(", "self", ".", "_paths", "[", "key", "]", ")", ")", "\n", "path", "=", "self", ".", "_paths", "[", "key", "]", "[", "idx", "]", "\n", "return", "path", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.wrapper.switch.Switch.__init__": [[13, 20], ["synthtiger.components.component.Component.__init__", "switch.Switch.component._init"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__", "home.repos.pwc.inspect_result.clovaai_synthtiger.wrapper.iterator.Iterator._init"], ["    ", "def", "__init__", "(", "self", ",", "component", ",", "prob", "=", "1", ",", "args", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "component", "=", "component", "\n", "self", ".", "prob", "=", "prob", "\n", "\n", "if", "args", "is", "not", "None", ":", "\n", "            ", "self", ".", "component", ".", "_init", "(", "**", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.wrapper.switch.Switch.sample": [[21, 37], ["meta.get", "switch.Switch.component.sample", "numpy.random.rand", "meta.get"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample"], ["", "", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "if", "meta", "is", "None", ":", "\n", "            ", "meta", "=", "{", "}", "\n", "\n", "", "state", "=", "meta", ".", "get", "(", "\"state\"", ",", "np", ".", "random", ".", "rand", "(", ")", "<", "self", ".", "prob", ")", "\n", "\n", "sub_meta", "=", "None", "\n", "if", "state", ":", "\n", "            ", "sub_meta", "=", "self", ".", "component", ".", "sample", "(", "meta", ".", "get", "(", "\"meta\"", ")", ")", "\n", "\n", "", "meta", "=", "{", "\n", "\"state\"", ":", "state", ",", "\n", "\"meta\"", ":", "sub_meta", ",", "\n", "}", "\n", "\n", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.wrapper.switch.Switch.apply": [[38, 47], ["switch.Switch.sample", "switch.Switch.component.apply"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample", "home.repos.pwc.inspect_result.clovaai_synthtiger.text_effect.text_shadow.TextShadow.apply"], ["", "def", "apply", "(", "self", ",", "layers", ",", "meta", "=", "None", ")", ":", "\n", "        ", "meta", "=", "self", ".", "sample", "(", "meta", ")", "\n", "state", "=", "meta", "[", "\"state\"", "]", "\n", "sub_meta", "=", "meta", "[", "\"meta\"", "]", "\n", "\n", "if", "state", ":", "\n", "            ", "self", ".", "component", ".", "apply", "(", "layers", ",", "sub_meta", ")", "\n", "\n", "", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.wrapper.switch.Switch.data": [[48, 57], ["switch.Switch.component.data"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.data"], ["", "def", "data", "(", "self", ",", "meta", ")", ":", "\n", "        ", "state", "=", "meta", "[", "\"state\"", "]", "\n", "sub_meta", "=", "meta", "[", "\"meta\"", "]", "\n", "\n", "data", "=", "None", "\n", "if", "state", ":", "\n", "            ", "data", "=", "self", ".", "component", ".", "data", "(", "sub_meta", ")", "\n", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.wrapper.switch.Switch._init": [[58, 60], ["switch.Switch.__init__"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__"], ["", "def", "_init", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "__init__", "(", "self", ".", "component", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.wrapper.selector.Selector.__init__": [[13, 24], ["synthtiger.components.component.Component.__init__", "numpy.array", "sum", "zip", "len", "component._init"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__", "home.repos.pwc.inspect_result.clovaai_synthtiger.wrapper.iterator.Iterator._init"], ["    ", "def", "__init__", "(", "self", ",", "components", ",", "weights", "=", "None", ",", "args", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "components", "=", "components", "\n", "self", ".", "weights", "=", "weights", "\n", "if", "self", ".", "weights", "is", "None", ":", "\n", "            ", "self", ".", "weights", "=", "[", "1", "]", "*", "len", "(", "components", ")", "\n", "", "self", ".", "_probs", "=", "np", ".", "array", "(", "self", ".", "weights", ")", "/", "sum", "(", "self", ".", "weights", ")", "\n", "\n", "if", "args", "is", "not", "None", ":", "\n", "            ", "for", "component", ",", "arg", "in", "zip", "(", "self", ".", "components", ",", "args", ")", ":", "\n", "                ", "component", ".", "_init", "(", "**", "arg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.wrapper.selector.Selector.sample": [[25, 38], ["meta.get", "selector.Selector.components[].sample", "selector.Selector._sample_idx", "meta.get"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample", "home.repos.pwc.inspect_result.clovaai_synthtiger.wrapper.selector.Selector._sample_idx"], ["", "", "", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "if", "meta", "is", "None", ":", "\n", "            ", "meta", "=", "{", "}", "\n", "\n", "", "idx", "=", "meta", ".", "get", "(", "\"idx\"", ",", "self", ".", "_sample_idx", "(", ")", ")", "\n", "sub_meta", "=", "self", ".", "components", "[", "idx", "]", ".", "sample", "(", "meta", ".", "get", "(", "\"meta\"", ")", ")", "\n", "\n", "meta", "=", "{", "\n", "\"idx\"", ":", "idx", ",", "\n", "\"meta\"", ":", "sub_meta", ",", "\n", "}", "\n", "\n", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.wrapper.selector.Selector.apply": [[39, 47], ["selector.Selector.sample", "selector.Selector.components[].apply"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample", "home.repos.pwc.inspect_result.clovaai_synthtiger.text_effect.text_shadow.TextShadow.apply"], ["", "def", "apply", "(", "self", ",", "layers", ",", "meta", "=", "None", ")", ":", "\n", "        ", "meta", "=", "self", ".", "sample", "(", "meta", ")", "\n", "idx", "=", "meta", "[", "\"idx\"", "]", "\n", "sub_meta", "=", "meta", "[", "\"meta\"", "]", "\n", "\n", "self", ".", "components", "[", "idx", "]", ".", "apply", "(", "layers", ",", "sub_meta", ")", "\n", "\n", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.wrapper.selector.Selector.data": [[48, 53], ["selector.Selector.components[].data"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.data"], ["", "def", "data", "(", "self", ",", "meta", ")", ":", "\n", "        ", "idx", "=", "meta", "[", "\"idx\"", "]", "\n", "sub_meta", "=", "meta", "[", "\"meta\"", "]", "\n", "data", "=", "self", ".", "components", "[", "idx", "]", ".", "data", "(", "sub_meta", ")", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.wrapper.selector.Selector._init": [[54, 56], ["selector.Selector.__init__"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__"], ["", "def", "_init", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "__init__", "(", "self", ".", "components", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.wrapper.selector.Selector._sample_idx": [[57, 60], ["numpy.random.choice", "len"], "methods", ["None"], ["", "def", "_sample_idx", "(", "self", ")", ":", "\n", "        ", "idx", "=", "np", ".", "random", ".", "choice", "(", "len", "(", "self", ".", "components", ")", ",", "replace", "=", "False", ",", "p", "=", "self", ".", "_probs", ")", "\n", "return", "idx", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.wrapper.iterator.Iterator.__init__": [[11, 18], ["synthtiger.components.component.Component.__init__", "zip", "component._init"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__", "home.repos.pwc.inspect_result.clovaai_synthtiger.wrapper.iterator.Iterator._init"], ["    ", "def", "__init__", "(", "self", ",", "components", ",", "args", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "components", "=", "components", "\n", "\n", "if", "args", "is", "not", "None", ":", "\n", "            ", "for", "component", ",", "arg", "in", "zip", "(", "self", ".", "components", ",", "args", ")", ":", "\n", "                ", "component", ".", "_init", "(", "**", "arg", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.wrapper.iterator.Iterator.sample": [[19, 33], ["meta.get", "enumerate", "meta[].append", "component.sample"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample"], ["", "", "", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "if", "meta", "is", "None", ":", "\n", "            ", "meta", "=", "{", "}", "\n", "\n", "", "sub_metas", "=", "meta", ".", "get", "(", "\"metas\"", ",", "[", "{", "}", "for", "_", "in", "self", ".", "components", "]", ")", "\n", "\n", "meta", "=", "{", "\n", "\"metas\"", ":", "[", "]", ",", "\n", "}", "\n", "\n", "for", "idx", ",", "component", "in", "enumerate", "(", "self", ".", "components", ")", ":", "\n", "            ", "meta", "[", "\"metas\"", "]", ".", "append", "(", "component", ".", "sample", "(", "sub_metas", "[", "idx", "]", ")", ")", "\n", "\n", "", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.wrapper.iterator.Iterator.apply": [[34, 42], ["iterator.Iterator.sample", "enumerate", "component.apply"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample", "home.repos.pwc.inspect_result.clovaai_synthtiger.text_effect.text_shadow.TextShadow.apply"], ["", "def", "apply", "(", "self", ",", "layers", ",", "meta", "=", "None", ")", ":", "\n", "        ", "meta", "=", "self", ".", "sample", "(", "meta", ")", "\n", "sub_metas", "=", "meta", "[", "\"metas\"", "]", "\n", "\n", "for", "idx", ",", "component", "in", "enumerate", "(", "self", ".", "components", ")", ":", "\n", "            ", "component", ".", "apply", "(", "layers", ",", "sub_metas", "[", "idx", "]", ")", "\n", "\n", "", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.wrapper.iterator.Iterator.data": [[43, 51], ["enumerate", "data.append", "component.data"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.data"], ["", "def", "data", "(", "self", ",", "meta", ")", ":", "\n", "        ", "sub_metas", "=", "meta", "[", "\"metas\"", "]", "\n", "data", "=", "[", "]", "\n", "\n", "for", "idx", ",", "component", "in", "enumerate", "(", "self", ".", "components", ")", ":", "\n", "            ", "data", ".", "append", "(", "component", ".", "data", "(", "sub_metas", "[", "idx", "]", ")", ")", "\n", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.wrapper.iterator.Iterator._init": [[52, 54], ["iterator.Iterator.__init__"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__"], ["", "def", "_init", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "__init__", "(", "self", ".", "components", ",", "*", "args", ",", "**", "kwargs", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layout.flow_layout.FlowLayout.__init__": [[14, 34], ["synthtiger.components.component.Component.__init__"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "length", "=", "None", ",", "\n", "space", "=", "(", "0", ",", "0", ")", ",", "\n", "line_space", "=", "(", "0", ",", "0", ")", ",", "\n", "align", "=", "(", "\"left\"", ",", ")", ",", "\n", "line_align", "=", "(", "\"middle\"", ",", ")", ",", "\n", "ltr", "=", "True", ",", "\n", "ttb", "=", "True", ",", "\n", "vertical", "=", "False", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "length", "=", "length", "\n", "self", ".", "space", "=", "space", "\n", "self", ".", "line_space", "=", "line_space", "\n", "self", ".", "align", "=", "align", "\n", "self", ".", "line_align", "=", "line_align", "\n", "self", ".", "ltr", "=", "ltr", "\n", "self", ".", "ttb", "=", "ttb", "\n", "self", ".", "vertical", "=", "vertical", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layout.flow_layout.FlowLayout.sample": [[35, 69], ["meta.get", "meta.get", "meta.get", "meta.get", "meta.get", "meta.get", "meta.get", "meta.get", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "len", "len"], "methods", ["None"], ["", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "if", "meta", "is", "None", ":", "\n", "            ", "meta", "=", "{", "}", "\n", "\n", "", "length", "=", "meta", ".", "get", "(", "\n", "\"length\"", ",", "\n", "np", ".", "random", ".", "randint", "(", "self", ".", "length", "[", "0", "]", ",", "self", ".", "length", "[", "1", "]", "+", "1", ")", "\n", "if", "self", ".", "length", "is", "not", "None", "\n", "else", "None", ",", "\n", ")", "\n", "space", "=", "meta", ".", "get", "(", "\"space\"", ",", "np", ".", "random", ".", "randint", "(", "self", ".", "space", "[", "0", "]", ",", "self", ".", "space", "[", "1", "]", "+", "1", ")", ")", "\n", "line_space", "=", "meta", ".", "get", "(", "\n", "\"line_space\"", ",", "np", ".", "random", ".", "randint", "(", "self", ".", "line_space", "[", "0", "]", ",", "self", ".", "line_space", "[", "1", "]", "+", "1", ")", "\n", ")", "\n", "align", "=", "meta", ".", "get", "(", "\"align\"", ",", "self", ".", "align", "[", "np", ".", "random", ".", "randint", "(", "len", "(", "self", ".", "align", ")", ")", "]", ")", "\n", "line_align", "=", "meta", ".", "get", "(", "\n", "\"line_align\"", ",", "self", ".", "line_align", "[", "np", ".", "random", ".", "randint", "(", "len", "(", "self", ".", "line_align", ")", ")", "]", "\n", ")", "\n", "ltr", "=", "meta", ".", "get", "(", "\"ltr\"", ",", "self", ".", "ltr", ")", "\n", "ttb", "=", "meta", ".", "get", "(", "\"ttb\"", ",", "self", ".", "ttb", ")", "\n", "vertical", "=", "meta", ".", "get", "(", "\"vertical\"", ",", "self", ".", "vertical", ")", "\n", "\n", "meta", "=", "{", "\n", "\"length\"", ":", "length", ",", "\n", "\"space\"", ":", "space", ",", "\n", "\"line_space\"", ":", "line_space", ",", "\n", "\"align\"", ":", "align", ",", "\n", "\"line_align\"", ":", "line_align", ",", "\n", "\"ltr\"", ":", "ltr", ",", "\n", "\"ttb\"", ":", "ttb", ",", "\n", "\"vertical\"", ":", "vertical", ",", "\n", "}", "\n", "\n", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layout.flow_layout.FlowLayout.apply": [[70, 163], ["flow_layout.FlowLayout.sample", "synthtiger.layers.Group", "enumerate", "enumerate", "synthtiger.layers.Group", "max", "groups[].append", "max", "groups[].append", "groups.append", "groups.append", "numpy.linspace", "zip", "numpy.linspace", "zip", "len", "len"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample"], ["", "def", "apply", "(", "self", ",", "layers", ",", "meta", "=", "None", ")", ":", "\n", "        ", "meta", "=", "self", ".", "sample", "(", "meta", ")", "\n", "length", "=", "meta", "[", "\"length\"", "]", "\n", "space", "=", "meta", "[", "\"space\"", "]", "\n", "line_space", "=", "meta", "[", "\"line_space\"", "]", "\n", "align", "=", "meta", "[", "\"align\"", "]", "\n", "line_align", "=", "meta", "[", "\"line_align\"", "]", "\n", "ltr", "=", "meta", "[", "\"ltr\"", "]", "\n", "ttb", "=", "meta", "[", "\"ttb\"", "]", "\n", "vertical", "=", "meta", "[", "\"vertical\"", "]", "\n", "\n", "x", ",", "y", ",", "line", "=", "0", ",", "0", ",", "0", "\n", "groups", "=", "[", "[", "]", "]", "\n", "\n", "if", "vertical", ":", "\n", "            ", "for", "idx", ",", "layer", "in", "enumerate", "(", "layers", ")", ":", "\n", "                ", "layer", ".", "topleft", "=", "(", "x", ",", "y", ")", "\n", "if", "idx", ">", "0", "and", "length", "is", "not", "None", "and", "layer", ".", "bottom", ">", "length", ":", "\n", "                    ", "layer", ".", "topleft", "=", "(", "line", ",", "0", ")", "\n", "groups", ".", "append", "(", "[", "]", ")", "\n", "\n", "", "x", ",", "y", "=", "layer", ".", "bottomleft", "+", "(", "0", ",", "space", ")", "\n", "line", "=", "max", "(", "layer", ".", "right", "+", "line_space", ",", "line", ")", "\n", "groups", "[", "-", "1", "]", ".", "append", "(", "layer", ")", "\n", "", "", "else", ":", "\n", "            ", "for", "idx", ",", "layer", "in", "enumerate", "(", "layers", ")", ":", "\n", "                ", "layer", ".", "topleft", "=", "(", "x", ",", "y", ")", "\n", "if", "idx", ">", "0", "and", "length", "is", "not", "None", "and", "layer", ".", "right", ">", "length", ":", "\n", "                    ", "layer", ".", "topleft", "=", "(", "0", ",", "line", ")", "\n", "groups", ".", "append", "(", "[", "]", ")", "\n", "\n", "", "x", ",", "y", "=", "layer", ".", "topright", "+", "(", "space", ",", "0", ")", "\n", "line", "=", "max", "(", "layer", ".", "bottom", "+", "line_space", ",", "line", ")", "\n", "groups", "[", "-", "1", "]", ".", "append", "(", "layer", ")", "\n", "\n", "", "", "groups", "=", "[", "Group", "(", "group", ")", "for", "group", "in", "groups", "]", "\n", "\n", "if", "length", "is", "not", "None", "and", "align", "==", "\"justify\"", ":", "\n", "            ", "for", "group", "in", "groups", ":", "\n", "                ", "if", "vertical", ":", "\n", "                    ", "offsets", "=", "np", ".", "linspace", "(", "0", ",", "length", "-", "group", ".", "height", ",", "len", "(", "group", ")", ")", "\n", "for", "layer", ",", "offset", "in", "zip", "(", "group", ",", "offsets", ")", ":", "\n", "                        ", "layer", ".", "top", "+=", "offset", "\n", "", "", "else", ":", "\n", "                    ", "offsets", "=", "np", ".", "linspace", "(", "0", ",", "length", "-", "group", ".", "width", ",", "len", "(", "group", ")", ")", "\n", "for", "layer", ",", "offset", "in", "zip", "(", "group", ",", "offsets", ")", ":", "\n", "                        ", "layer", ".", "left", "+=", "offset", "\n", "\n", "", "", "", "", "if", "not", "ltr", ":", "\n", "            ", "for", "layer", "in", "layers", ":", "\n", "                ", "layer", ".", "right", "=", "-", "layer", ".", "left", "\n", "", "", "if", "not", "ttb", ":", "\n", "            ", "for", "layer", "in", "layers", ":", "\n", "                ", "layer", ".", "bottom", "=", "-", "layer", ".", "top", "\n", "\n", "", "", "group", "=", "Group", "(", "layers", ")", "\n", "group", ".", "topleft", "=", "(", "0", ",", "0", ")", "\n", "\n", "if", "length", "is", "not", "None", ":", "\n", "            ", "for", "group", "in", "groups", ":", "\n", "                ", "if", "vertical", ":", "\n", "                    ", "if", "align", "==", "\"left\"", ":", "\n", "                        ", "group", ".", "top", "=", "0", "\n", "", "if", "align", "==", "\"center\"", ":", "\n", "                        ", "group", ".", "centery", "=", "length", "/", "2", "\n", "", "if", "align", "==", "\"right\"", ":", "\n", "                        ", "group", ".", "bottom", "=", "length", "\n", "", "", "else", ":", "\n", "                    ", "if", "align", "==", "\"left\"", ":", "\n", "                        ", "group", ".", "left", "=", "0", "\n", "", "if", "align", "==", "\"center\"", ":", "\n", "                        ", "group", ".", "centerx", "=", "length", "/", "2", "\n", "", "if", "align", "==", "\"right\"", ":", "\n", "                        ", "group", ".", "right", "=", "length", "\n", "\n", "", "", "", "", "for", "group", "in", "groups", ":", "\n", "            ", "for", "layer", "in", "group", ":", "\n", "                ", "if", "vertical", ":", "\n", "                    ", "if", "line_align", "==", "\"top\"", ":", "\n", "                        ", "layer", ".", "left", "=", "group", ".", "left", "\n", "", "if", "line_align", "==", "\"middle\"", ":", "\n", "                        ", "layer", ".", "centerx", "=", "group", ".", "centerx", "\n", "", "if", "line_align", "==", "\"bottom\"", ":", "\n", "                        ", "layer", ".", "right", "=", "group", ".", "right", "\n", "", "", "else", ":", "\n", "                    ", "if", "line_align", "==", "\"top\"", ":", "\n", "                        ", "layer", ".", "top", "=", "group", ".", "top", "\n", "", "if", "line_align", "==", "\"middle\"", ":", "\n", "                        ", "layer", ".", "centery", "=", "group", ".", "centery", "\n", "", "if", "line_align", "==", "\"bottom\"", ":", "\n", "                        ", "layer", ".", "bottom", "=", "group", ".", "bottom", "\n", "\n", "", "", "", "", "return", "meta", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layout.curve_layout.CurveLayout.__init__": [[14, 23], ["synthtiger.components.component.Component.__init__"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "curve", "=", "(", "10", ",", "20", ")", ",", "space", "=", "(", "0", ",", "0", ")", ",", "convex", "=", "0.5", ",", "upward", "=", "0.5", ",", "vertical", "=", "False", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "curve", "=", "curve", "\n", "self", ".", "space", "=", "space", "\n", "self", ".", "convex", "=", "convex", "\n", "self", ".", "upward", "=", "upward", "\n", "self", ".", "vertical", "=", "vertical", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layout.curve_layout.CurveLayout.sample": [[24, 43], ["meta.get", "meta.get", "meta.get", "meta.get", "meta.get", "numpy.random.randint", "numpy.random.randint", "numpy.random.rand", "numpy.random.rand"], "methods", ["None"], ["", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "if", "meta", "is", "None", ":", "\n", "            ", "meta", "=", "{", "}", "\n", "\n", "", "curve", "=", "meta", ".", "get", "(", "\"curve\"", ",", "np", ".", "random", ".", "randint", "(", "self", ".", "curve", "[", "0", "]", ",", "self", ".", "curve", "[", "1", "]", "+", "1", ")", ")", "\n", "space", "=", "meta", ".", "get", "(", "\"space\"", ",", "np", ".", "random", ".", "randint", "(", "self", ".", "space", "[", "0", "]", ",", "self", ".", "space", "[", "1", "]", "+", "1", ")", ")", "\n", "convex", "=", "meta", ".", "get", "(", "\"convex\"", ",", "np", ".", "random", ".", "rand", "(", ")", "<", "self", ".", "convex", ")", "\n", "upward", "=", "meta", ".", "get", "(", "\"upward\"", ",", "np", ".", "random", ".", "rand", "(", ")", "<", "self", ".", "upward", ")", "\n", "vertical", "=", "meta", ".", "get", "(", "\"vertical\"", ",", "self", ".", "vertical", ")", "\n", "\n", "meta", "=", "{", "\n", "\"curve\"", ":", "curve", ",", "\n", "\"space\"", ":", "space", ",", "\n", "\"convex\"", ":", "convex", ",", "\n", "\"upward\"", ":", "upward", ",", "\n", "\"vertical\"", ":", "vertical", ",", "\n", "}", "\n", "\n", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layout.curve_layout.CurveLayout.apply": [[44, 86], ["curve_layout.CurveLayout.sample", "numpy.max", "enumerate", "enumerate", "enumerate", "len", "cv2.getRotationMatrix2D", "numpy.append().dot", "numpy.degrees", "numpy.append", "numpy.arctan", "numpy.degrees", "numpy.ones", "numpy.arctan"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample"], ["", "def", "apply", "(", "self", ",", "layers", ",", "meta", "=", "None", ")", ":", "\n", "        ", "meta", "=", "self", ".", "sample", "(", "meta", ")", "\n", "curve", "=", "meta", "[", "\"curve\"", "]", "\n", "space", "=", "meta", "[", "\"space\"", "]", "\n", "convex", "=", "meta", "[", "\"convex\"", "]", "\n", "upward", "=", "meta", "[", "\"upward\"", "]", "\n", "vertical", "=", "meta", "[", "\"vertical\"", "]", "\n", "\n", "orientation", "=", "-", "1", "if", "convex", "else", "1", "\n", "size", "=", "np", ".", "max", "(", "[", "layer", ".", "size", "for", "layer", "in", "layers", "]", ",", "axis", "=", "0", ")", "\n", "mid", "=", "(", "len", "(", "layers", ")", "-", "1", ")", "/", "2", "\n", "\n", "if", "vertical", ":", "\n", "            ", "w", "=", "curve", "*", "orientation", "\n", "h", "=", "(", "size", "[", "1", "]", "+", "space", ")", "*", "mid", "\n", "a", "=", "w", "/", "h", "**", "2", "if", "h", ">", "0", "else", "0", "\n", "for", "idx", ",", "layer", "in", "enumerate", "(", "layers", ")", ":", "\n", "                ", "y", "=", "(", "size", "[", "1", "]", "+", "space", ")", "*", "(", "idx", "-", "mid", ")", "\n", "x", "=", "a", "*", "y", "**", "2", "\n", "layer", ".", "center", "=", "(", "x", ",", "y", ")", "\n", "", "", "else", ":", "\n", "            ", "w", "=", "(", "size", "[", "0", "]", "+", "space", ")", "*", "mid", "\n", "h", "=", "curve", "*", "orientation", "\n", "a", "=", "h", "/", "w", "**", "2", "if", "w", ">", "0", "else", "0", "\n", "for", "idx", ",", "layer", "in", "enumerate", "(", "layers", ")", ":", "\n", "                ", "x", "=", "(", "size", "[", "0", "]", "+", "space", ")", "*", "(", "idx", "-", "mid", ")", "\n", "y", "=", "a", "*", "x", "**", "2", "\n", "layer", ".", "center", "=", "(", "x", ",", "y", ")", "\n", "\n", "", "", "if", "not", "upward", ":", "\n", "            ", "for", "idx", ",", "layer", "in", "enumerate", "(", "layers", ")", ":", "\n", "                ", "quad", "=", "layer", ".", "quad", "\n", "x", ",", "y", "=", "layer", ".", "center", "\n", "if", "vertical", ":", "\n", "                    ", "angle", "=", "np", ".", "degrees", "(", "np", ".", "arctan", "(", "x", "/", "y", ")", ")", "if", "y", "!=", "0", "else", "0", "\n", "", "else", ":", "\n", "                    ", "angle", "=", "-", "np", ".", "degrees", "(", "np", ".", "arctan", "(", "y", "/", "x", ")", ")", "if", "x", "!=", "0", "else", "0", "\n", "", "matrix", "=", "cv2", ".", "getRotationMatrix2D", "(", "(", "x", ",", "y", ")", ",", "angle", ",", "1", ")", "\n", "quad", "=", "np", ".", "append", "(", "quad", ",", "np", ".", "ones", "(", "(", "4", ",", "1", ")", ")", ",", "axis", "=", "-", "1", ")", ".", "dot", "(", "matrix", ".", "T", ")", "\n", "layer", ".", "quad", "=", "quad", "\n", "\n", "", "", "return", "meta", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.color.rgb_map.RGBMap.__init__": [[14, 18], ["synthtiger.components.color.color_map.ColorMap.__init__"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "paths", "=", "(", ")", ",", "weights", "=", "(", ")", ",", "k", "=", "2", ",", "alpha", "=", "(", "1", ",", "1", ")", ",", "grayscale", "=", "0", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "paths", ",", "weights", ",", "k", ")", "\n", "self", ".", "alpha", "=", "alpha", "\n", "self", ".", "grayscale", "=", "grayscale", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.color.rgb_map.RGBMap.sample": [[19, 49], ["rgb_map.RGBMap._sample_colormap", "zip", "len", "RuntimeError", "len", "len", "RuntimeError", "tuple", "numpy.random.uniform", "new_meta.append", "new_data.update", "map", "numpy.random.rand"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.color.color_map.ColorMap._sample_colormap"], ["", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "if", "meta", "is", "None", ":", "\n", "            ", "meta", "=", "[", "]", "\n", "\n", "", "if", "len", "(", "self", ".", "paths", ")", "==", "0", ":", "\n", "            ", "raise", "RuntimeError", "(", "\"RGB map path is not specified\"", ")", "\n", "", "if", "len", "(", "self", ".", "paths", ")", "!=", "len", "(", "self", ".", "weights", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "\n", "\"The number of weights does not match the number of rgb map paths\"", "\n", ")", "\n", "\n", "", "colormap", "=", "self", ".", "_sample_colormap", "(", ")", "\n", "new_meta", "=", "[", "]", "\n", "\n", "for", "color", "in", "colormap", ":", "\n", "            ", "rgb", "=", "tuple", "(", "map", "(", "round", ",", "color", ")", ")", "\n", "alpha", "=", "np", ".", "random", ".", "uniform", "(", "self", ".", "alpha", "[", "0", "]", ",", "self", ".", "alpha", "[", "1", "]", ")", "\n", "grayscale", "=", "np", ".", "random", ".", "rand", "(", ")", "<", "self", ".", "grayscale", "\n", "new_meta", ".", "append", "(", "\n", "{", "\n", "\"rgb\"", ":", "rgb", ",", "\n", "\"alpha\"", ":", "alpha", ",", "\n", "\"grayscale\"", ":", "grayscale", ",", "\n", "}", "\n", ")", "\n", "\n", "", "for", "data", ",", "new_data", "in", "zip", "(", "meta", ",", "new_meta", ")", ":", "\n", "            ", "new_data", ".", "update", "(", "data", ")", "\n", "\n", "", "return", "new_meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.color.rgb_map.RGBMap.data": [[50, 66], ["round", "colors.append", "synthtiger.utils.to_gray"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.to_gray"], ["", "def", "data", "(", "self", ",", "meta", ")", ":", "\n", "        ", "colors", "=", "[", "]", "\n", "\n", "for", "data", "in", "meta", ":", "\n", "            ", "rgb", "=", "data", "[", "\"rgb\"", "]", "\n", "alpha", "=", "round", "(", "data", "[", "\"alpha\"", "]", "*", "255", ")", "\n", "grayscale", "=", "data", "[", "\"grayscale\"", "]", "\n", "\n", "if", "grayscale", ":", "\n", "                ", "gray", "=", "utils", ".", "to_gray", "(", "rgb", ")", "\n", "rgb", "=", "(", "gray", ",", "gray", ",", "gray", ")", "\n", "\n", "", "color", "=", "rgb", "+", "(", "alpha", ",", ")", "\n", "colors", ".", "append", "(", "color", ")", "\n", "\n", "", "return", "colors", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.color.gray.Gray.__init__": [[14, 19], ["synthtiger.components.component.Component.__init__"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "gray", "=", "(", "0", ",", "255", ")", ",", "alpha", "=", "(", "1", ",", "1", ")", ",", "colorize", "=", "0", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "gray", "=", "gray", "\n", "self", ".", "alpha", "=", "alpha", "\n", "self", ".", "colorize", "=", "colorize", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.color.gray.Gray.sample": [[20, 37], ["meta.get", "meta.get", "meta.get", "meta.get", "numpy.random.randint", "numpy.random.uniform", "synthtiger.utils.to_rgb", "numpy.random.rand"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.to_rgb"], ["", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "if", "meta", "is", "None", ":", "\n", "            ", "meta", "=", "{", "}", "\n", "\n", "", "gray", "=", "meta", ".", "get", "(", "\"gray\"", ",", "np", ".", "random", ".", "randint", "(", "self", ".", "gray", "[", "0", "]", ",", "self", ".", "gray", "[", "1", "]", "+", "1", ")", ")", "\n", "alpha", "=", "meta", ".", "get", "(", "\"alpha\"", ",", "np", ".", "random", ".", "uniform", "(", "self", ".", "alpha", "[", "0", "]", ",", "self", ".", "alpha", "[", "1", "]", ")", ")", "\n", "colorize", "=", "meta", ".", "get", "(", "\"colorize\"", ",", "np", ".", "random", ".", "rand", "(", ")", "<", "self", ".", "colorize", ")", "\n", "rgb", "=", "meta", ".", "get", "(", "\"rgb\"", ",", "utils", ".", "to_rgb", "(", "gray", ",", "colorize", ")", ")", "\n", "\n", "meta", "=", "{", "\n", "\"rgb\"", ":", "rgb", ",", "\n", "\"gray\"", ":", "gray", ",", "\n", "\"alpha\"", ":", "alpha", ",", "\n", "\"colorize\"", ":", "colorize", ",", "\n", "}", "\n", "\n", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.color.gray.Gray.apply": [[38, 47], ["gray.Gray.sample", "numpy.empty", "gray.Gray.data", "synthtiger.utils.blend_image"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample", "home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.data", "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.blend_image"], ["", "def", "apply", "(", "self", ",", "layers", ",", "meta", "=", "None", ")", ":", "\n", "        ", "meta", "=", "self", ".", "sample", "(", "meta", ")", "\n", "\n", "for", "layer", "in", "layers", ":", "\n", "            ", "image", "=", "np", ".", "empty", "(", "layer", ".", "image", ".", "shape", ")", "\n", "image", "[", "...", ",", ":", "]", "=", "self", ".", "data", "(", "meta", ")", "\n", "layer", ".", "image", "=", "utils", ".", "blend_image", "(", "image", ",", "layer", ".", "image", ",", "mask", "=", "True", ")", "\n", "\n", "", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.color.gray.Gray.data": [[48, 53], ["round"], "methods", ["None"], ["", "def", "data", "(", "self", ",", "meta", ")", ":", "\n", "        ", "rgb", "=", "meta", "[", "\"rgb\"", "]", "\n", "alpha", "=", "round", "(", "meta", "[", "\"alpha\"", "]", "*", "255", ")", "\n", "color", "=", "rgb", "+", "(", "alpha", ",", ")", "\n", "return", "color", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.color.gray_map.GrayMap.__init__": [[14, 18], ["synthtiger.components.color.color_map.ColorMap.__init__"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "paths", "=", "(", ")", ",", "weights", "=", "(", ")", ",", "k", "=", "2", ",", "alpha", "=", "(", "1", ",", "1", ")", ",", "colorize", "=", "0", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "paths", ",", "weights", ",", "k", ")", "\n", "self", ".", "alpha", "=", "alpha", "\n", "self", ".", "colorize", "=", "colorize", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.color.gray_map.GrayMap.sample": [[19, 51], ["gray_map.GrayMap._sample_colormap", "zip", "len", "RuntimeError", "len", "len", "RuntimeError", "round", "numpy.random.uniform", "synthtiger.utils.to_rgb", "new_meta.append", "new_data.update", "numpy.random.rand"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.color.color_map.ColorMap._sample_colormap", "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.to_rgb"], ["", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "if", "meta", "is", "None", ":", "\n", "            ", "meta", "=", "[", "]", "\n", "\n", "", "if", "len", "(", "self", ".", "paths", ")", "==", "0", ":", "\n", "            ", "raise", "RuntimeError", "(", "\"Gray map path is not specified\"", ")", "\n", "", "if", "len", "(", "self", ".", "paths", ")", "!=", "len", "(", "self", ".", "weights", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "\n", "\"The number of weights does not match the number of gray map paths\"", "\n", ")", "\n", "\n", "", "colormap", "=", "self", ".", "_sample_colormap", "(", ")", "\n", "new_meta", "=", "[", "]", "\n", "\n", "for", "color", "in", "colormap", ":", "\n", "            ", "gray", "=", "round", "(", "color", "[", "0", "]", ")", "\n", "alpha", "=", "np", ".", "random", ".", "uniform", "(", "self", ".", "alpha", "[", "0", "]", ",", "self", ".", "alpha", "[", "1", "]", ")", "\n", "colorize", "=", "np", ".", "random", ".", "rand", "(", ")", "<", "self", ".", "colorize", "\n", "rgb", "=", "utils", ".", "to_rgb", "(", "gray", ",", "colorize", ")", "\n", "new_meta", ".", "append", "(", "\n", "{", "\n", "\"gray\"", ":", "gray", ",", "\n", "\"rgb\"", ":", "rgb", ",", "\n", "\"alpha\"", ":", "alpha", ",", "\n", "\"colorize\"", ":", "colorize", ",", "\n", "}", "\n", ")", "\n", "\n", "", "for", "data", ",", "new_data", "in", "zip", "(", "meta", ",", "new_meta", ")", ":", "\n", "            ", "new_data", ".", "update", "(", "data", ")", "\n", "\n", "", "return", "new_meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.color.gray_map.GrayMap.data": [[52, 62], ["round", "colors.append"], "methods", ["None"], ["", "def", "data", "(", "self", ",", "meta", ")", ":", "\n", "        ", "colors", "=", "[", "]", "\n", "\n", "for", "data", "in", "meta", ":", "\n", "            ", "rgb", "=", "data", "[", "\"rgb\"", "]", "\n", "alpha", "=", "round", "(", "data", "[", "\"alpha\"", "]", "*", "255", ")", "\n", "color", "=", "rgb", "+", "(", "alpha", ",", ")", "\n", "colors", ".", "append", "(", "color", ")", "\n", "\n", "", "return", "colors", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.color.opacity.Opacity.__init__": [[13, 16], ["synthtiger.components.component.Component.__init__"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "opacity", "=", "(", "0", ",", "1", ")", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "opacity", "=", "opacity", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.color.opacity.Opacity.sample": [[17, 30], ["meta.get", "numpy.random.uniform"], "methods", ["None"], ["", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "if", "meta", "is", "None", ":", "\n", "            ", "meta", "=", "{", "}", "\n", "\n", "", "opacity", "=", "meta", ".", "get", "(", "\n", "\"opacity\"", ",", "np", ".", "random", ".", "uniform", "(", "self", ".", "opacity", "[", "0", "]", ",", "self", ".", "opacity", "[", "1", "]", ")", "\n", ")", "\n", "\n", "meta", "=", "{", "\n", "\"opacity\"", ":", "opacity", ",", "\n", "}", "\n", "\n", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.color.opacity.Opacity.apply": [[31, 39], ["opacity.Opacity.sample"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample"], ["", "def", "apply", "(", "self", ",", "layers", ",", "meta", "=", "None", ")", ":", "\n", "        ", "meta", "=", "self", ".", "sample", "(", "meta", ")", "\n", "opacity", "=", "meta", "[", "\"opacity\"", "]", "\n", "\n", "for", "layer", "in", "layers", ":", "\n", "            ", "layer", ".", "image", "[", "...", ",", "3", "]", "*=", "opacity", "\n", "\n", "", "return", "meta", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.color.color_map.ColorMap.__init__": [[13, 22], ["synthtiger.components.component.Component.__init__", "color_map.ColorMap._update_cluster_groups", "numpy.array", "sum"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__", "home.repos.pwc.inspect_result.clovaai_synthtiger.color.color_map.ColorMap._update_cluster_groups"], ["    ", "def", "__init__", "(", "self", ",", "paths", "=", "(", ")", ",", "weights", "=", "(", ")", ",", "k", "=", "2", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "paths", "=", "paths", "\n", "self", ".", "weights", "=", "weights", "\n", "self", ".", "k", "=", "k", "\n", "self", ".", "_cluster_groups", "=", "[", "]", "\n", "self", ".", "_counts", "=", "[", "]", "\n", "self", ".", "_probs", "=", "np", ".", "array", "(", "self", ".", "weights", ")", "/", "sum", "(", "self", ".", "weights", ")", "\n", "self", ".", "_update_cluster_groups", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.color.color_map.ColorMap._update_cluster_groups": [[23, 49], ["color_map.ColorMap._cluster_groups.append", "color_map.ColorMap._counts.append", "open", "len", "row.split", "range", "cluster_group.append", "len", "len", "list", "float", "clusters.append", "map", "list.split"], "methods", ["None"], ["", "def", "_update_cluster_groups", "(", "self", ")", ":", "\n", "        ", "self", ".", "_cluster_groups", "=", "[", "]", "\n", "self", ".", "_counts", "=", "[", "]", "\n", "\n", "for", "path", "in", "self", ".", "paths", ":", "\n", "            ", "cluster_group", "=", "[", "]", "\n", "\n", "with", "open", "(", "path", ",", "\"r\"", ",", "encoding", "=", "\"utf-8\"", ")", "as", "fp", ":", "\n", "                ", "for", "row", "in", "fp", ":", "\n", "                    ", "values", "=", "row", ".", "split", "(", ")", "\n", "\n", "k", "=", "len", "(", "values", ")", "//", "2", "\n", "if", "k", "!=", "self", ".", "k", ":", "\n", "                        ", "continue", "\n", "\n", "", "clusters", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "0", ",", "len", "(", "values", ")", ",", "2", ")", ":", "\n", "                        ", "center", ",", "std", "=", "values", "[", "idx", "]", ",", "values", "[", "idx", "+", "1", "]", "\n", "center", "=", "list", "(", "map", "(", "float", ",", "center", ".", "split", "(", "\",\"", ")", ")", ")", "\n", "std", "=", "float", "(", "std", ")", "\n", "clusters", ".", "append", "(", "(", "center", ",", "std", ")", ")", "\n", "\n", "", "cluster_group", ".", "append", "(", "clusters", ")", "\n", "\n", "", "", "self", ".", "_cluster_groups", ".", "append", "(", "cluster_group", ")", "\n", "self", ".", "_counts", ".", "append", "(", "len", "(", "cluster_group", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.color.color_map.ColorMap._sample_colormap": [[50, 60], ["numpy.random.choice", "numpy.random.permutation", "len", "RuntimeError", "numpy.random.normal", "numpy.random.randint", "len"], "methods", ["None"], ["", "", "def", "_sample_colormap", "(", "self", ")", ":", "\n", "        ", "key", "=", "np", ".", "random", ".", "choice", "(", "len", "(", "self", ".", "paths", ")", ",", "p", "=", "self", ".", "_probs", ")", "\n", "if", "self", ".", "_counts", "[", "key", "]", "==", "0", ":", "\n", "            ", "raise", "RuntimeError", "(", "f\"There is no colormap: {self.paths[key]}\"", ")", "\n", "\n", "", "cluster_group", "=", "self", ".", "_cluster_groups", "[", "key", "]", "\n", "clusters", "=", "cluster_group", "[", "np", ".", "random", ".", "randint", "(", "len", "(", "cluster_group", ")", ")", "]", "\n", "colormap", "=", "[", "np", ".", "random", ".", "normal", "(", "center", ",", "std", ")", "for", "center", ",", "std", "in", "clusters", "]", "\n", "colormap", "=", "np", ".", "random", ".", "permutation", "(", "colormap", ")", "\n", "return", "colormap", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.color.rgb.RGB.__init__": [[14, 19], ["synthtiger.components.component.Component.__init__"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "rgb", "=", "(", "(", "0", ",", "255", ")", ",", "(", "0", ",", "255", ")", ",", "(", "0", ",", "255", ")", ")", ",", "alpha", "=", "(", "1", ",", "1", ")", ",", "grayscale", "=", "0", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "rgb", "=", "rgb", "\n", "self", ".", "alpha", "=", "alpha", "\n", "self", ".", "grayscale", "=", "grayscale", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.color.rgb.RGB.sample": [[20, 42], ["meta.get", "meta.get", "meta.get", "numpy.random.uniform", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "numpy.random.rand"], "methods", ["None"], ["", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "if", "meta", "is", "None", ":", "\n", "            ", "meta", "=", "{", "}", "\n", "\n", "", "rgb", "=", "meta", ".", "get", "(", "\n", "\"rgb\"", ",", "\n", "(", "\n", "np", ".", "random", ".", "randint", "(", "self", ".", "rgb", "[", "0", "]", "[", "0", "]", ",", "self", ".", "rgb", "[", "0", "]", "[", "1", "]", "+", "1", ")", ",", "\n", "np", ".", "random", ".", "randint", "(", "self", ".", "rgb", "[", "1", "]", "[", "0", "]", ",", "self", ".", "rgb", "[", "1", "]", "[", "1", "]", "+", "1", ")", ",", "\n", "np", ".", "random", ".", "randint", "(", "self", ".", "rgb", "[", "2", "]", "[", "0", "]", ",", "self", ".", "rgb", "[", "2", "]", "[", "1", "]", "+", "1", ")", ",", "\n", ")", ",", "\n", ")", "\n", "alpha", "=", "meta", ".", "get", "(", "\"alpha\"", ",", "np", ".", "random", ".", "uniform", "(", "self", ".", "alpha", "[", "0", "]", ",", "self", ".", "alpha", "[", "1", "]", ")", ")", "\n", "grayscale", "=", "meta", ".", "get", "(", "\"grayscale\"", ",", "np", ".", "random", ".", "rand", "(", ")", "<", "self", ".", "grayscale", ")", "\n", "\n", "meta", "=", "{", "\n", "\"rgb\"", ":", "rgb", ",", "\n", "\"alpha\"", ":", "alpha", ",", "\n", "\"grayscale\"", ":", "grayscale", ",", "\n", "}", "\n", "\n", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.color.rgb.RGB.apply": [[43, 52], ["rgb.RGB.sample", "numpy.empty", "rgb.RGB.data", "synthtiger.utils.blend_image"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample", "home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.data", "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.blend_image"], ["", "def", "apply", "(", "self", ",", "layers", ",", "meta", "=", "None", ")", ":", "\n", "        ", "meta", "=", "self", ".", "sample", "(", "meta", ")", "\n", "\n", "for", "layer", "in", "layers", ":", "\n", "            ", "image", "=", "np", ".", "empty", "(", "layer", ".", "image", ".", "shape", ")", "\n", "image", "[", "...", ",", ":", "]", "=", "self", ".", "data", "(", "meta", ")", "\n", "layer", ".", "image", "=", "utils", ".", "blend_image", "(", "image", ",", "layer", ".", "image", ",", "mask", "=", "True", ")", "\n", "\n", "", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.color.rgb.RGB.data": [[53, 64], ["round", "synthtiger.utils.to_gray"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.to_gray"], ["", "def", "data", "(", "self", ",", "meta", ")", ":", "\n", "        ", "rgb", "=", "meta", "[", "\"rgb\"", "]", "\n", "alpha", "=", "round", "(", "meta", "[", "\"alpha\"", "]", "*", "255", ")", "\n", "grayscale", "=", "meta", "[", "\"grayscale\"", "]", "\n", "\n", "if", "grayscale", ":", "\n", "            ", "gray", "=", "utils", ".", "to_gray", "(", "rgb", ")", "\n", "rgb", "=", "(", "gray", ",", "gray", ",", "gray", ")", "\n", "\n", "", "color", "=", "rgb", "+", "(", "alpha", ",", ")", "\n", "return", "color", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.transform.fit.Fit.sample": [[12, 15], ["None"], "methods", ["None"], ["    ", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "meta", "=", "{", "}", "\n", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.transform.fit.Fit.apply": [[16, 30], ["fit.Fit.sample", "layer.output", "synthtiger.utils.fit_image"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample", "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.output", "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.fit_image"], ["", "def", "apply", "(", "self", ",", "layers", ",", "meta", "=", "None", ")", ":", "\n", "        ", "meta", "=", "self", ".", "sample", "(", "meta", ")", "\n", "\n", "for", "layer", "in", "layers", ":", "\n", "            ", "image", "=", "layer", ".", "output", "(", ")", "\n", "image", ",", "bbox", "=", "utils", ".", "fit_image", "(", "image", ")", "\n", "\n", "topleft", "=", "layer", ".", "topleft", "+", "bbox", "[", ":", "2", "]", "\n", "height", ",", "width", "=", "image", ".", "shape", "[", ":", "2", "]", "\n", "\n", "layer", ".", "image", "=", "image", "\n", "layer", ".", "bbox", "=", "[", "*", "topleft", ",", "width", ",", "height", "]", "\n", "\n", "", "return", "meta", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.transform.translate.Translate.__init__": [[14, 24], ["synthtiger.components.component.Component.__init__", "TypeError", "TypeError", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "pxs", "=", "None", ",", "percents", "=", "None", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pxs", "=", "pxs", "\n", "self", ".", "percents", "=", "percents", "\n", "\n", "shapes", "=", "[", "(", "1", ",", "2", ")", ",", "(", "2", ",", "2", ")", "]", "\n", "if", "self", ".", "pxs", "is", "not", "None", "and", "np", ".", "array", "(", "self", ".", "pxs", ")", ".", "shape", "not", "in", "shapes", ":", "\n", "            ", "raise", "TypeError", "(", "\"Shape of pxs must be (1,2) or (2,2)\"", ")", "\n", "", "if", "self", ".", "percents", "is", "not", "None", "and", "np", ".", "array", "(", "self", ".", "percents", ")", ".", "shape", "not", "in", "shapes", ":", "\n", "            ", "raise", "TypeError", "(", "\"Shape of percents must be (1,2) or (2,2)\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.transform.translate.Translate.sample": [[25, 50], ["meta.get", "meta.get", "tuple", "tuple", "numpy.random.randint", "numpy.random.uniform"], "methods", ["None"], ["", "", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "if", "meta", "is", "None", ":", "\n", "            ", "meta", "=", "{", "}", "\n", "\n", "", "pxs", "=", "meta", ".", "get", "(", "\n", "\"pxs\"", ",", "\n", "tuple", "(", "np", ".", "random", ".", "randint", "(", "px", "[", "0", "]", ",", "px", "[", "1", "]", "+", "1", ")", "for", "px", "in", "self", ".", "pxs", ")", "\n", "if", "self", ".", "pxs", "is", "not", "None", "\n", "else", "None", ",", "\n", ")", "\n", "percents", "=", "meta", ".", "get", "(", "\n", "\"percents\"", ",", "\n", "tuple", "(", "\n", "np", ".", "random", ".", "uniform", "(", "percent", "[", "0", "]", ",", "percent", "[", "1", "]", ")", "for", "percent", "in", "self", ".", "percents", "\n", ")", "\n", "if", "self", ".", "percents", "is", "not", "None", "\n", "else", "None", ",", "\n", ")", "\n", "\n", "meta", "=", "{", "\n", "\"pxs\"", ":", "pxs", ",", "\n", "\"percents\"", ":", "percents", ",", "\n", "}", "\n", "\n", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.transform.translate.Translate.apply": [[51, 69], ["translate.Translate.sample", "synthtiger.layers.Group", "numpy.tile", "numpy.tile"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample"], ["", "def", "apply", "(", "self", ",", "layers", ",", "meta", "=", "None", ")", ":", "\n", "        ", "meta", "=", "self", ".", "sample", "(", "meta", ")", "\n", "pxs", "=", "meta", "[", "\"pxs\"", "]", "\n", "percents", "=", "meta", "[", "\"percents\"", "]", "\n", "\n", "if", "pxs", "is", "not", "None", ":", "\n", "            ", "pxs", "=", "np", ".", "tile", "(", "pxs", ",", "2", ")", "[", ":", "2", "]", "\n", "", "if", "percents", "is", "not", "None", ":", "\n", "            ", "percents", "=", "np", ".", "tile", "(", "percents", ",", "2", ")", "[", ":", "2", "]", "\n", "\n", "", "group", "=", "Group", "(", "layers", ")", "\n", "\n", "if", "pxs", "is", "not", "None", ":", "\n", "            ", "group", ".", "quad", "+=", "pxs", "\n", "", "elif", "percents", "is", "not", "None", ":", "\n", "            ", "group", ".", "quad", "+=", "group", ".", "size", "*", "percents", "\n", "\n", "", "return", "meta", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.transform.crop.Crop.__init__": [[14, 27], ["synthtiger.components.component.Component.__init__", "TypeError", "TypeError", "TypeError", "numpy.array", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "pxs", "=", "None", ",", "percents", "=", "None", ",", "aligns", "=", "(", "(", "-", "1", ",", "1", ")", ",", "(", "-", "1", ",", "1", ")", ")", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pxs", "=", "pxs", "\n", "self", ".", "percents", "=", "percents", "\n", "self", ".", "aligns", "=", "aligns", "\n", "\n", "shapes", "=", "[", "(", "1", ",", "2", ")", ",", "(", "2", ",", "2", ")", "]", "\n", "if", "self", ".", "pxs", "is", "not", "None", "and", "np", ".", "array", "(", "self", ".", "pxs", ")", ".", "shape", "not", "in", "shapes", ":", "\n", "            ", "raise", "TypeError", "(", "\"Shape of pxs must be (1,2) or (2,2)\"", ")", "\n", "", "if", "self", ".", "percents", "is", "not", "None", "and", "np", ".", "array", "(", "self", ".", "percents", ")", ".", "shape", "not", "in", "shapes", ":", "\n", "            ", "raise", "TypeError", "(", "\"Shape of percents must be (1,2) or (2,2)\"", ")", "\n", "", "if", "np", ".", "array", "(", "self", ".", "aligns", ")", ".", "shape", "not", "in", "shapes", ":", "\n", "            ", "raise", "TypeError", "(", "\"Shape of aligns must be (1,2) or (2,2)\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.transform.crop.Crop.sample": [[28, 58], ["meta.get", "meta.get", "meta.get", "tuple", "tuple", "tuple", "numpy.random.uniform", "numpy.random.randint", "numpy.random.uniform"], "methods", ["None"], ["", "", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "if", "meta", "is", "None", ":", "\n", "            ", "meta", "=", "{", "}", "\n", "\n", "", "pxs", "=", "meta", ".", "get", "(", "\n", "\"pxs\"", ",", "\n", "tuple", "(", "np", ".", "random", ".", "randint", "(", "px", "[", "0", "]", ",", "px", "[", "1", "]", "+", "1", ")", "for", "px", "in", "self", ".", "pxs", ")", "\n", "if", "self", ".", "pxs", "is", "not", "None", "\n", "else", "None", ",", "\n", ")", "\n", "percents", "=", "meta", ".", "get", "(", "\n", "\"percents\"", ",", "\n", "tuple", "(", "\n", "np", ".", "random", ".", "uniform", "(", "percent", "[", "0", "]", ",", "percent", "[", "1", "]", ")", "for", "percent", "in", "self", ".", "percents", "\n", ")", "\n", "if", "self", ".", "percents", "is", "not", "None", "\n", "else", "None", ",", "\n", ")", "\n", "aligns", "=", "meta", ".", "get", "(", "\n", "\"aligns\"", ",", "\n", "tuple", "(", "np", ".", "random", ".", "uniform", "(", "align", "[", "0", "]", ",", "align", "[", "1", "]", ")", "for", "align", "in", "self", ".", "aligns", ")", ",", "\n", ")", "\n", "\n", "meta", "=", "{", "\n", "\"pxs\"", ":", "pxs", ",", "\n", "\"percents\"", ":", "percents", ",", "\n", "\"aligns\"", ":", "aligns", ",", "\n", "}", "\n", "\n", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.transform.crop.Crop.apply": [[59, 101], ["crop.Crop.sample", "numpy.clip", "numpy.tile", "layer.output", "numpy.amin", "numpy.amax", "synthtiger.utils.crop_image", "numpy.tile", "numpy.tile", "round", "round"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample", "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.output", "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.crop_image"], ["", "def", "apply", "(", "self", ",", "layers", ",", "meta", "=", "None", ")", ":", "\n", "        ", "meta", "=", "self", ".", "sample", "(", "meta", ")", "\n", "pxs", "=", "meta", "[", "\"pxs\"", "]", "\n", "percents", "=", "meta", "[", "\"percents\"", "]", "\n", "aligns", "=", "meta", "[", "\"aligns\"", "]", "\n", "\n", "if", "pxs", "is", "not", "None", ":", "\n", "            ", "pxs", "=", "np", ".", "tile", "(", "pxs", ",", "2", ")", "[", ":", "2", "]", "\n", "", "if", "percents", "is", "not", "None", ":", "\n", "            ", "percents", "=", "np", ".", "tile", "(", "percents", ",", "2", ")", "[", ":", "2", "]", "\n", "\n", "", "aligns", "=", "np", ".", "tile", "(", "aligns", ",", "2", ")", "[", ":", "2", "]", "\n", "aligns", "=", "np", ".", "clip", "(", "aligns", ",", "-", "1", ",", "1", ")", "\n", "aligns", "=", "(", "aligns", "+", "1", ")", "/", "2", "\n", "\n", "for", "layer", "in", "layers", ":", "\n", "            ", "image", "=", "layer", ".", "output", "(", ")", "\n", "height", ",", "width", "=", "image", ".", "shape", "[", ":", "2", "]", "\n", "\n", "crops", "=", "[", "0", ",", "0", ",", "0", ",", "0", "]", "\n", "if", "pxs", "is", "not", "None", ":", "\n", "                ", "crops", "=", "pxs", "\n", "", "elif", "percents", "is", "not", "None", ":", "\n", "                ", "crops", "=", "percents", "*", "(", "width", ",", "height", ")", "\n", "\n", "", "crops", "=", "np", ".", "amin", "(", "(", "crops", ",", "(", "width", "-", "1", ",", "height", "-", "1", ")", ")", ",", "axis", "=", "0", ")", "\n", "crops", "=", "np", ".", "amax", "(", "(", "crops", ",", "(", "0", ",", "0", ")", ")", ",", "axis", "=", "0", ")", "\n", "left", ",", "top", "=", "crops", "*", "aligns", "\n", "left", ",", "top", "=", "round", "(", "left", ")", ",", "round", "(", "top", ")", "\n", "right", ",", "bottom", "=", "width", "-", "left", ",", "height", "-", "top", "\n", "\n", "image", "=", "utils", ".", "crop_image", "(", "\n", "image", ",", "top", "=", "top", ",", "right", "=", "right", ",", "bottom", "=", "bottom", ",", "left", "=", "left", "\n", ")", "\n", "\n", "topleft", "=", "layer", ".", "topleft", "+", "(", "left", ",", "top", ")", "\n", "height", ",", "width", "=", "image", ".", "shape", "[", ":", "2", "]", "\n", "\n", "layer", ".", "image", "=", "image", "\n", "layer", ".", "bbox", "=", "[", "*", "topleft", ",", "width", ",", "height", "]", "\n", "\n", "", "return", "meta", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.transform.perspective.Perspective.__init__": [[15, 30], ["synthtiger.components.component.Component.__init__", "TypeError", "TypeError", "TypeError", "numpy.array", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "pxs", "=", "None", ",", "percents", "=", "None", ",", "aligns", "=", "(", "(", "-", "1", ",", "1", ")", ",", "(", "-", "1", ",", "1", ")", ",", "(", "-", "1", ",", "1", ")", ",", "(", "-", "1", ",", "1", ")", ")", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pxs", "=", "pxs", "\n", "self", ".", "percents", "=", "percents", "\n", "self", ".", "aligns", "=", "aligns", "\n", "\n", "shapes", "=", "[", "(", "1", ",", "2", ")", ",", "(", "2", ",", "2", ")", ",", "(", "3", ",", "2", ")", ",", "(", "4", ",", "2", ")", "]", "\n", "if", "self", ".", "pxs", "is", "not", "None", "and", "np", ".", "array", "(", "self", ".", "pxs", ")", ".", "shape", "not", "in", "shapes", ":", "\n", "            ", "raise", "TypeError", "(", "\"Shape of pxs must be (1,2), (2,2), (3,2) or (4,2)\"", ")", "\n", "", "if", "self", ".", "percents", "is", "not", "None", "and", "np", ".", "array", "(", "self", ".", "percents", ")", ".", "shape", "not", "in", "shapes", ":", "\n", "            ", "raise", "TypeError", "(", "\"Shape of percents must be (1,2), (2,2), (3,2) or (4,2)\"", ")", "\n", "", "if", "np", ".", "array", "(", "self", ".", "aligns", ")", ".", "shape", "not", "in", "shapes", ":", "\n", "            ", "raise", "TypeError", "(", "\"Shape of aligns must be (1,2), (2,2), (3,2) or (4,2)\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.transform.perspective.Perspective.sample": [[31, 61], ["meta.get", "meta.get", "meta.get", "tuple", "tuple", "tuple", "numpy.random.uniform", "numpy.random.randint", "numpy.random.uniform"], "methods", ["None"], ["", "", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "if", "meta", "is", "None", ":", "\n", "            ", "meta", "=", "{", "}", "\n", "\n", "", "pxs", "=", "meta", ".", "get", "(", "\n", "\"pxs\"", ",", "\n", "tuple", "(", "np", ".", "random", ".", "randint", "(", "px", "[", "0", "]", ",", "px", "[", "1", "]", "+", "1", ")", "for", "px", "in", "self", ".", "pxs", ")", "\n", "if", "self", ".", "pxs", "is", "not", "None", "\n", "else", "None", ",", "\n", ")", "\n", "percents", "=", "meta", ".", "get", "(", "\n", "\"percents\"", ",", "\n", "tuple", "(", "\n", "np", ".", "random", ".", "uniform", "(", "percent", "[", "0", "]", ",", "percent", "[", "1", "]", ")", "for", "percent", "in", "self", ".", "percents", "\n", ")", "\n", "if", "self", ".", "percents", "is", "not", "None", "\n", "else", "None", ",", "\n", ")", "\n", "aligns", "=", "meta", ".", "get", "(", "\n", "\"aligns\"", ",", "\n", "tuple", "(", "np", ".", "random", ".", "uniform", "(", "align", "[", "0", "]", ",", "align", "[", "1", "]", ")", "for", "align", "in", "self", ".", "aligns", ")", ",", "\n", ")", "\n", "\n", "meta", "=", "{", "\n", "\"pxs\"", ":", "pxs", ",", "\n", "\"percents\"", ":", "percents", ",", "\n", "\"aligns\"", ":", "aligns", ",", "\n", "}", "\n", "\n", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.transform.perspective.Perspective.apply": [[62, 101], ["perspective.Perspective.sample", "synthtiger.layers.Group", "numpy.tile", "numpy.tile", "numpy.abs", "numpy.array", "cv2.getPerspectiveTransform", "numpy.tile", "numpy.append().dot", "numpy.tile", "numpy.tile", "numpy.append", "numpy.ones"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample"], ["", "def", "apply", "(", "self", ",", "layers", ",", "meta", "=", "None", ")", ":", "\n", "        ", "meta", "=", "self", ".", "sample", "(", "meta", ")", "\n", "pxs", "=", "meta", "[", "\"pxs\"", "]", "\n", "percents", "=", "meta", "[", "\"percents\"", "]", "\n", "aligns", "=", "meta", "[", "\"aligns\"", "]", "\n", "\n", "aligns", "=", "np", ".", "tile", "(", "aligns", ",", "4", ")", "[", ":", "4", "]", "\n", "if", "pxs", "is", "not", "None", ":", "\n", "            ", "pxs", "=", "np", ".", "tile", "(", "pxs", ",", "4", ")", "[", ":", "4", "]", "\n", "", "if", "percents", "is", "not", "None", ":", "\n", "            ", "percents", "=", "np", ".", "tile", "(", "percents", ",", "4", ")", "[", ":", "4", "]", "\n", "\n", "", "group", "=", "Group", "(", "layers", ")", "\n", "sizes", "=", "np", ".", "tile", "(", "group", ".", "size", ",", "2", ")", "\n", "new_sizes", "=", "np", ".", "tile", "(", "group", ".", "size", ",", "2", ")", "\n", "\n", "if", "pxs", "is", "not", "None", ":", "\n", "            ", "new_sizes", "+=", "pxs", "\n", "", "elif", "percents", "is", "not", "None", ":", "\n", "            ", "new_sizes", "*=", "percents", "\n", "\n", "", "values", "=", "(", "sizes", "-", "new_sizes", ")", "/", "2", "\n", "aligns", "*=", "np", ".", "abs", "(", "values", ")", "\n", "offsets", "=", "[", "\n", "[", "values", "[", "0", "]", "+", "aligns", "[", "0", "]", ",", "values", "[", "3", "]", "+", "aligns", "[", "3", "]", "]", ",", "\n", "[", "-", "values", "[", "0", "]", "+", "aligns", "[", "0", "]", ",", "values", "[", "1", "]", "+", "aligns", "[", "1", "]", "]", ",", "\n", "[", "-", "values", "[", "2", "]", "+", "aligns", "[", "2", "]", ",", "-", "values", "[", "1", "]", "+", "aligns", "[", "1", "]", "]", ",", "\n", "[", "values", "[", "2", "]", "+", "aligns", "[", "2", "]", ",", "-", "values", "[", "3", "]", "+", "aligns", "[", "3", "]", "]", ",", "\n", "]", "\n", "\n", "origin", "=", "group", ".", "quad", "\n", "quad", "=", "np", ".", "array", "(", "origin", "+", "offsets", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "matrix", "=", "cv2", ".", "getPerspectiveTransform", "(", "origin", ",", "quad", ")", "\n", "\n", "for", "layer", "in", "layers", ":", "\n", "            ", "quad", "=", "np", ".", "append", "(", "layer", ".", "quad", ",", "np", ".", "ones", "(", "(", "4", ",", "1", ")", ")", ",", "axis", "=", "-", "1", ")", ".", "dot", "(", "matrix", ".", "T", ")", "\n", "layer", ".", "quad", "=", "quad", "[", "...", ",", ":", "2", "]", "/", "quad", "[", "...", ",", "2", ",", "np", ".", "newaxis", "]", "\n", "\n", "", "return", "meta", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.transform.rotate.Rotate.__init__": [[15, 19], ["synthtiger.components.component.Component.__init__"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "angle", "=", "(", "-", "45", ",", "45", ")", ",", "ccw", "=", "0", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "angle", "=", "angle", "\n", "self", ".", "ccw", "=", "ccw", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.transform.rotate.Rotate.sample": [[20, 33], ["meta.get", "meta.get", "numpy.random.uniform", "numpy.random.rand"], "methods", ["None"], ["", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "if", "meta", "is", "None", ":", "\n", "            ", "meta", "=", "{", "}", "\n", "\n", "", "angle", "=", "meta", ".", "get", "(", "\"angle\"", ",", "np", ".", "random", ".", "uniform", "(", "self", ".", "angle", "[", "0", "]", ",", "self", ".", "angle", "[", "1", "]", ")", ")", "\n", "ccw", "=", "meta", ".", "get", "(", "\"ccw\"", ",", "np", ".", "random", ".", "rand", "(", ")", "<", "self", ".", "ccw", ")", "\n", "\n", "meta", "=", "{", "\n", "\"angle\"", ":", "angle", ",", "\n", "\"ccw\"", ":", "ccw", ",", "\n", "}", "\n", "\n", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.transform.rotate.Rotate.apply": [[34, 44], ["rotate.Rotate.sample", "synthtiger.layers.Group", "cv2.getRotationMatrix2D", "tuple", "numpy.append().dot", "numpy.append", "numpy.ones"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample"], ["", "def", "apply", "(", "self", ",", "layers", ",", "meta", "=", "None", ")", ":", "\n", "        ", "meta", "=", "self", ".", "sample", "(", "meta", ")", "\n", "angle", "=", "meta", "[", "\"angle\"", "]", "*", "(", "1", "if", "meta", "[", "\"ccw\"", "]", "else", "-", "1", ")", "\n", "group", "=", "Group", "(", "layers", ")", "\n", "matrix", "=", "cv2", ".", "getRotationMatrix2D", "(", "tuple", "(", "group", ".", "center", ")", ",", "angle", ",", "1", ")", "\n", "\n", "for", "layer", "in", "layers", ":", "\n", "            ", "layer", ".", "quad", "=", "np", ".", "append", "(", "layer", ".", "quad", ",", "np", ".", "ones", "(", "(", "4", ",", "1", ")", ")", ",", "axis", "=", "-", "1", ")", ".", "dot", "(", "matrix", ".", "T", ")", "\n", "\n", "", "return", "meta", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.transform.trapezoidate.Trapezoidate.__init__": [[15, 22], ["synthtiger.components.component.Component.__init__", "numpy.array", "sum"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "weights", "=", "(", "1", ",", "1", ",", "1", ",", "1", ")", ",", "px", "=", "None", ",", "percent", "=", "None", ",", "align", "=", "(", "-", "1", ",", "1", ")", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "weights", "=", "weights", "\n", "self", ".", "px", "=", "px", "\n", "self", ".", "percent", "=", "percent", "\n", "self", ".", "align", "=", "align", "\n", "self", ".", "_probs", "=", "np", ".", "array", "(", "self", ".", "weights", ")", "/", "sum", "(", "self", ".", "weights", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.transform.trapezoidate.Trapezoidate.sample": [[23, 50], ["meta.get", "meta.get", "meta.get", "meta.get", "numpy.random.choice", "numpy.random.uniform", "numpy.random.randint", "numpy.random.uniform"], "methods", ["None"], ["", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "if", "meta", "is", "None", ":", "\n", "            ", "meta", "=", "{", "}", "\n", "\n", "", "side", "=", "meta", ".", "get", "(", "\"side\"", ",", "np", ".", "random", ".", "choice", "(", "4", ",", "p", "=", "self", ".", "_probs", ")", ")", "\n", "px", "=", "meta", ".", "get", "(", "\n", "\"px\"", ",", "\n", "np", ".", "random", ".", "randint", "(", "self", ".", "px", "[", "0", "]", ",", "self", ".", "px", "[", "1", "]", "+", "1", ")", "\n", "if", "self", ".", "px", "is", "not", "None", "\n", "else", "None", ",", "\n", ")", "\n", "percent", "=", "meta", ".", "get", "(", "\n", "\"percent\"", ",", "\n", "np", ".", "random", ".", "uniform", "(", "self", ".", "percent", "[", "0", "]", ",", "self", ".", "percent", "[", "1", "]", ")", "\n", "if", "self", ".", "percent", "is", "not", "None", "\n", "else", "None", ",", "\n", ")", "\n", "align", "=", "meta", ".", "get", "(", "\"align\"", ",", "np", ".", "random", ".", "uniform", "(", "self", ".", "align", "[", "0", "]", ",", "self", ".", "align", "[", "1", "]", ")", ")", "\n", "\n", "meta", "=", "{", "\n", "\"side\"", ":", "side", ",", "\n", "\"px\"", ":", "px", ",", "\n", "\"percent\"", ":", "percent", ",", "\n", "\"align\"", ":", "align", ",", "\n", "}", "\n", "\n", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.transform.trapezoidate.Trapezoidate.apply": [[51, 95], ["trapezoidate.Trapezoidate.sample", "synthtiger.layers.Group", "numpy.tile", "numpy.tile", "numpy.abs", "numpy.array", "cv2.getPerspectiveTransform", "numpy.append().dot", "numpy.append", "numpy.ones"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample"], ["", "def", "apply", "(", "self", ",", "layers", ",", "meta", "=", "None", ")", ":", "\n", "        ", "meta", "=", "self", ".", "sample", "(", "meta", ")", "\n", "side", "=", "meta", "[", "\"side\"", "]", "\n", "px", "=", "meta", "[", "\"px\"", "]", "\n", "percent", "=", "meta", "[", "\"percent\"", "]", "\n", "align", "=", "meta", "[", "\"align\"", "]", "\n", "\n", "pxs", "=", "[", "0", ",", "0", ",", "0", ",", "0", "]", "\n", "percents", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", "\n", "aligns", "=", "[", "0", ",", "0", ",", "0", ",", "0", "]", "\n", "\n", "aligns", "[", "side", "]", "=", "align", "\n", "if", "px", "is", "not", "None", ":", "\n", "            ", "pxs", "[", "side", "]", "=", "px", "\n", "", "if", "percent", "is", "not", "None", ":", "\n", "            ", "percents", "[", "side", "]", "=", "percent", "\n", "\n", "", "group", "=", "Group", "(", "layers", ")", "\n", "sizes", "=", "np", ".", "tile", "(", "group", ".", "size", ",", "2", ")", "\n", "new_sizes", "=", "np", ".", "tile", "(", "group", ".", "size", ",", "2", ")", "\n", "\n", "if", "px", "is", "not", "None", ":", "\n", "            ", "new_sizes", "+=", "pxs", "\n", "", "elif", "percent", "is", "not", "None", ":", "\n", "            ", "new_sizes", "*=", "percents", "\n", "\n", "", "values", "=", "(", "sizes", "-", "new_sizes", ")", "/", "2", "\n", "aligns", "*=", "np", ".", "abs", "(", "values", ")", "\n", "offsets", "=", "[", "\n", "[", "values", "[", "0", "]", "+", "aligns", "[", "0", "]", ",", "values", "[", "3", "]", "+", "aligns", "[", "3", "]", "]", ",", "\n", "[", "-", "values", "[", "0", "]", "+", "aligns", "[", "0", "]", ",", "values", "[", "1", "]", "+", "aligns", "[", "1", "]", "]", ",", "\n", "[", "-", "values", "[", "2", "]", "+", "aligns", "[", "2", "]", ",", "-", "values", "[", "1", "]", "+", "aligns", "[", "1", "]", "]", ",", "\n", "[", "values", "[", "2", "]", "+", "aligns", "[", "2", "]", ",", "-", "values", "[", "3", "]", "+", "aligns", "[", "3", "]", "]", ",", "\n", "]", "\n", "\n", "origin", "=", "group", ".", "quad", "\n", "quad", "=", "np", ".", "array", "(", "origin", "+", "offsets", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "matrix", "=", "cv2", ".", "getPerspectiveTransform", "(", "origin", ",", "quad", ")", "\n", "\n", "for", "layer", "in", "layers", ":", "\n", "            ", "quad", "=", "np", ".", "append", "(", "layer", ".", "quad", ",", "np", ".", "ones", "(", "(", "4", ",", "1", ")", ")", ",", "axis", "=", "-", "1", ")", ".", "dot", "(", "matrix", ".", "T", ")", "\n", "layer", ".", "quad", "=", "quad", "[", "...", ",", ":", "2", "]", "/", "quad", "[", "...", ",", "2", ",", "np", ".", "newaxis", "]", "\n", "\n", "", "return", "meta", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.transform.skew.Skew.__init__": [[15, 21], ["synthtiger.components.component.Component.__init__", "numpy.array", "sum"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "weights", "=", "(", "1", ",", "1", ")", ",", "angle", "=", "(", "-", "30", ",", "30", ")", ",", "ccw", "=", "0", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "weights", "=", "weights", "\n", "self", ".", "angle", "=", "angle", "\n", "self", ".", "ccw", "=", "ccw", "\n", "self", ".", "_probs", "=", "np", ".", "array", "(", "self", ".", "weights", ")", "/", "sum", "(", "self", ".", "weights", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.transform.skew.Skew.sample": [[22, 37], ["meta.get", "meta.get", "meta.get", "numpy.random.choice", "numpy.random.uniform", "numpy.random.rand"], "methods", ["None"], ["", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "if", "meta", "is", "None", ":", "\n", "            ", "meta", "=", "{", "}", "\n", "\n", "", "axis", "=", "meta", ".", "get", "(", "\"axis\"", ",", "np", ".", "random", ".", "choice", "(", "2", ",", "p", "=", "self", ".", "_probs", ")", ")", "\n", "angle", "=", "meta", ".", "get", "(", "\"angle\"", ",", "np", ".", "random", ".", "uniform", "(", "self", ".", "angle", "[", "0", "]", ",", "self", ".", "angle", "[", "1", "]", ")", ")", "\n", "ccw", "=", "meta", ".", "get", "(", "\"ccw\"", ",", "np", ".", "random", ".", "rand", "(", ")", "<", "self", ".", "ccw", ")", "\n", "\n", "meta", "=", "{", "\n", "\"axis\"", ":", "axis", ",", "\n", "\"angle\"", ":", "angle", ",", "\n", "\"ccw\"", ":", "ccw", ",", "\n", "}", "\n", "\n", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.transform.skew.Skew.apply": [[38, 62], ["skew.Skew.sample", "synthtiger.layers.Group", "numpy.array", "cv2.getPerspectiveTransform", "numpy.append().dot", "numpy.tan", "numpy.radians", "numpy.append", "numpy.ones"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample"], ["", "def", "apply", "(", "self", ",", "layers", ",", "meta", "=", "None", ")", ":", "\n", "        ", "meta", "=", "self", ".", "sample", "(", "meta", ")", "\n", "axis", "=", "meta", "[", "\"axis\"", "]", "\n", "angle", "=", "meta", "[", "\"angle\"", "]", "*", "(", "1", "if", "meta", "[", "\"ccw\"", "]", "else", "-", "1", ")", "\n", "\n", "group", "=", "Group", "(", "layers", ")", "\n", "values", "=", "[", "0", ",", "0", "]", "\n", "values", "[", "axis", "]", "=", "group", ".", "size", "[", ":", ":", "-", "1", "]", "[", "axis", "]", "*", "np", ".", "tan", "(", "np", ".", "radians", "(", "angle", ")", ")", "/", "2", "\n", "offsets", "=", "[", "\n", "[", "values", "[", "0", "]", ",", "-", "values", "[", "1", "]", "]", ",", "\n", "[", "values", "[", "0", "]", ",", "values", "[", "1", "]", "]", ",", "\n", "[", "-", "values", "[", "0", "]", ",", "values", "[", "1", "]", "]", ",", "\n", "[", "-", "values", "[", "0", "]", ",", "-", "values", "[", "1", "]", "]", ",", "\n", "]", "\n", "\n", "origin", "=", "group", ".", "quad", "\n", "quad", "=", "np", ".", "array", "(", "origin", "+", "offsets", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "matrix", "=", "cv2", ".", "getPerspectiveTransform", "(", "origin", ",", "quad", ")", "\n", "\n", "for", "layer", "in", "layers", ":", "\n", "            ", "quad", "=", "np", ".", "append", "(", "layer", ".", "quad", ",", "np", ".", "ones", "(", "(", "4", ",", "1", ")", ")", ",", "axis", "=", "-", "1", ")", ".", "dot", "(", "matrix", ".", "T", ")", "\n", "layer", ".", "quad", "=", "(", "quad", "/", "quad", "[", "...", ",", "2", ",", "np", ".", "newaxis", "]", ")", "[", "...", ",", ":", "2", "]", "\n", "\n", "", "return", "meta", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.transform.pad.Pad.__init__": [[14, 26], ["synthtiger.components.component.Component.__init__", "TypeError", "TypeError", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "pxs", "=", "None", ",", "percents", "=", "None", ",", "mode", "=", "\"constant\"", ",", "value", "=", "0", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pxs", "=", "pxs", "\n", "self", ".", "percents", "=", "percents", "\n", "self", ".", "mode", "=", "mode", "\n", "self", ".", "value", "=", "value", "\n", "\n", "shapes", "=", "[", "(", "1", ",", "2", ")", ",", "(", "2", ",", "2", ")", ",", "(", "3", ",", "2", ")", ",", "(", "4", ",", "2", ")", "]", "\n", "if", "self", ".", "pxs", "is", "not", "None", "and", "np", ".", "array", "(", "self", ".", "pxs", ")", ".", "shape", "not", "in", "shapes", ":", "\n", "            ", "raise", "TypeError", "(", "\"Shape of pxs must be (1,2), (2,2), (3,2) or (4,2)\"", ")", "\n", "", "if", "self", ".", "percents", "is", "not", "None", "and", "np", ".", "array", "(", "self", ".", "percents", ")", ".", "shape", "not", "in", "shapes", ":", "\n", "            ", "raise", "TypeError", "(", "\"Shape of percents must be (1,2), (2,2), (3,2) or (4,2)\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.transform.pad.Pad.sample": [[27, 56], ["meta.get", "meta.get", "meta.get", "meta.get", "tuple", "tuple", "numpy.random.randint", "numpy.random.uniform"], "methods", ["None"], ["", "", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "if", "meta", "is", "None", ":", "\n", "            ", "meta", "=", "{", "}", "\n", "\n", "", "pxs", "=", "meta", ".", "get", "(", "\n", "\"pxs\"", ",", "\n", "tuple", "(", "np", ".", "random", ".", "randint", "(", "px", "[", "0", "]", ",", "px", "[", "1", "]", "+", "1", ")", "for", "px", "in", "self", ".", "pxs", ")", "\n", "if", "self", ".", "pxs", "is", "not", "None", "\n", "else", "None", ",", "\n", ")", "\n", "percents", "=", "meta", ".", "get", "(", "\n", "\"percents\"", ",", "\n", "tuple", "(", "\n", "np", ".", "random", ".", "uniform", "(", "percent", "[", "0", "]", ",", "percent", "[", "1", "]", ")", "for", "percent", "in", "self", ".", "percents", "\n", ")", "\n", "if", "self", ".", "percents", "is", "not", "None", "\n", "else", "None", ",", "\n", ")", "\n", "mode", "=", "meta", ".", "get", "(", "\"mode\"", ",", "self", ".", "mode", ")", "\n", "value", "=", "meta", ".", "get", "(", "\"value\"", ",", "self", ".", "value", ")", "\n", "\n", "meta", "=", "{", "\n", "\"pxs\"", ":", "pxs", ",", "\n", "\"percents\"", ":", "percents", ",", "\n", "\"mode\"", ":", "mode", ",", "\n", "\"value\"", ":", "value", ",", "\n", "}", "\n", "\n", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.transform.pad.Pad.apply": [[57, 97], ["pad.Pad.sample", "layer.output", "synthtiger.utils.pad_image", "numpy.tile", "numpy.tile", "numpy.tile"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample", "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.output", "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.pad_image"], ["", "def", "apply", "(", "self", ",", "layers", ",", "meta", "=", "None", ")", ":", "\n", "        ", "meta", "=", "self", ".", "sample", "(", "meta", ")", "\n", "pxs", "=", "meta", "[", "\"pxs\"", "]", "\n", "percents", "=", "meta", "[", "\"percents\"", "]", "\n", "mode", "=", "meta", "[", "\"mode\"", "]", "\n", "value", "=", "meta", "[", "\"value\"", "]", "\n", "\n", "if", "pxs", "is", "not", "None", ":", "\n", "            ", "pxs", "=", "np", ".", "tile", "(", "pxs", ",", "4", ")", "[", ":", "4", "]", "\n", "", "if", "percents", "is", "not", "None", ":", "\n", "            ", "percents", "=", "np", ".", "tile", "(", "percents", ",", "4", ")", "[", ":", "4", "]", "\n", "\n", "", "for", "layer", "in", "layers", ":", "\n", "            ", "image", "=", "layer", ".", "output", "(", ")", "\n", "height", ",", "width", "=", "image", ".", "shape", "[", ":", "2", "]", "\n", "\n", "margins", "=", "[", "0", ",", "0", ",", "0", ",", "0", "]", "\n", "if", "pxs", "is", "not", "None", ":", "\n", "                ", "margins", "=", "pxs", "\n", "", "elif", "percents", "is", "not", "None", ":", "\n", "                ", "margins", "=", "percents", "*", "np", ".", "tile", "(", "(", "height", ",", "width", ")", ",", "2", ")", "\n", "\n", "", "top", ",", "right", ",", "bottom", ",", "left", "=", "margins", "\n", "image", "=", "utils", ".", "pad_image", "(", "\n", "image", ",", "\n", "top", "=", "top", ",", "\n", "right", "=", "right", ",", "\n", "bottom", "=", "bottom", ",", "\n", "left", "=", "left", ",", "\n", "mode", "=", "mode", ",", "\n", "value", "=", "value", ",", "\n", ")", "\n", "\n", "topleft", "=", "layer", ".", "topleft", "-", "(", "left", ",", "top", ")", "\n", "height", ",", "width", "=", "image", ".", "shape", "[", ":", "2", "]", "\n", "\n", "layer", ".", "image", "=", "image", "\n", "layer", ".", "bbox", "=", "[", "*", "topleft", ",", "width", ",", "height", "]", "\n", "\n", "", "return", "meta", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.transform.align.Align.__init__": [[14, 21], ["synthtiger.components.component.Component.__init__", "TypeError", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "aligns", "=", "(", "(", "-", "1", ",", "1", ")", ",", "(", "-", "1", ",", "1", ")", ")", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "aligns", "=", "aligns", "\n", "\n", "shapes", "=", "[", "(", "1", ",", "2", ")", ",", "(", "2", ",", "2", ")", "]", "\n", "if", "np", ".", "array", "(", "self", ".", "aligns", ")", ".", "shape", "not", "in", "shapes", ":", "\n", "            ", "raise", "TypeError", "(", "\"Shape of aligns must be (1,2) or (2,2)\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.transform.align.Align.sample": [[22, 36], ["meta.get", "tuple", "numpy.random.uniform"], "methods", ["None"], ["", "", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "if", "meta", "is", "None", ":", "\n", "            ", "meta", "=", "{", "}", "\n", "\n", "", "aligns", "=", "meta", ".", "get", "(", "\n", "\"aligns\"", ",", "\n", "tuple", "(", "np", ".", "random", ".", "uniform", "(", "align", "[", "0", "]", ",", "align", "[", "1", "]", ")", "for", "align", "in", "self", ".", "aligns", ")", ",", "\n", ")", "\n", "\n", "meta", "=", "{", "\n", "\"aligns\"", ":", "aligns", ",", "\n", "}", "\n", "\n", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.transform.align.Align.apply": [[37, 54], ["align.Align.sample", "numpy.clip", "synthtiger.layers.Group", "numpy.tile"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample"], ["", "def", "apply", "(", "self", ",", "layers", ",", "meta", "=", "None", ")", ":", "\n", "        ", "meta", "=", "self", ".", "sample", "(", "meta", ")", "\n", "aligns", "=", "meta", "[", "\"aligns\"", "]", "\n", "\n", "aligns", "=", "np", ".", "tile", "(", "aligns", ",", "2", ")", "[", ":", "2", "]", "\n", "aligns", "=", "np", ".", "clip", "(", "aligns", ",", "-", "1", ",", "1", ")", "\n", "aligns", "=", "(", "aligns", "+", "1", ")", "/", "2", "\n", "\n", "group", "=", "Group", "(", "layers", ")", "\n", "topleft", "=", "group", ".", "topleft", "\n", "size", "=", "group", ".", "size", "\n", "\n", "for", "layer", "in", "layers", ":", "\n", "            ", "layer", ".", "topleft", "=", "topleft", "\n", "layer", ".", "quad", "+=", "(", "size", "-", "layer", ".", "size", ")", "*", "aligns", "\n", "\n", "", "return", "meta", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.corpus.char_augmentable_corpus.CharAugmentableCorpus.__init__": [[16, 33], ["synthtiger.components.corpus.base_corpus.BaseCorpus.__init__", "set", "char_augmentable_corpus.CharAugmentableCorpus._update_dists"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__", "home.repos.pwc.inspect_result.clovaai_synthtiger.corpus.char_augmentable_corpus.CharAugmentableCorpus._update_dists"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "paths", "=", "(", ")", ",", "\n", "weights", "=", "(", ")", ",", "\n", "min_length", "=", "None", ",", "\n", "max_length", "=", "None", ",", "\n", "charset", "=", "None", ",", "\n", "textcase", "=", "None", ",", "\n", "augmentation", "=", "0", ",", "\n", "augmentation_charset", "=", "None", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "paths", ",", "weights", ",", "min_length", ",", "max_length", ",", "charset", ",", "textcase", ")", "\n", "self", ".", "augmentation", "=", "augmentation", "\n", "self", ".", "augmentation_charset", "=", "augmentation_charset", "\n", "self", ".", "_augmentation_charset", "=", "set", "(", ")", "\n", "self", ".", "_dists", "=", "[", "]", "\n", "self", ".", "_update_dists", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.corpus.char_augmentable_corpus.CharAugmentableCorpus._update_dists": [[34, 62], ["set", "range", "synthtiger.utils.read_charset", "len", "numpy.sum", "numpy.cumsum", "char_augmentable_corpus.CharAugmentableCorpus._dists.append", "numpy.ones", "collections.Counter", "range", "numpy.empty", "range", "char_augmentable_corpus.CharAugmentableCorpus._get_text", "collections.Counter.update", "char_augmentable_corpus.CharAugmentableCorpus._get_text", "sum", "set", "set"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.utils.file_util.read_charset", "home.repos.pwc.inspect_result.clovaai_synthtiger.corpus.base_corpus.BaseCorpus._get_text", "home.repos.pwc.inspect_result.clovaai_synthtiger.corpus.base_corpus.BaseCorpus._get_text"], ["", "def", "_update_dists", "(", "self", ")", ":", "\n", "        ", "self", ".", "_charset", "=", "set", "(", ")", "\n", "self", ".", "_dists", "=", "[", "]", "\n", "\n", "if", "self", ".", "augmentation", ">", "0", ":", "\n", "            ", "self", ".", "_augmentation_charset", "=", "utils", ".", "read_charset", "(", "self", ".", "augmentation_charset", ")", "\n", "\n", "", "for", "key", "in", "range", "(", "len", "(", "self", ".", "paths", ")", ")", ":", "\n", "            ", "count", "=", "self", ".", "_counts", "[", "key", "]", "\n", "if", "self", ".", "augmentation", "==", "0", ":", "\n", "                ", "dist", "=", "np", ".", "ones", "(", "count", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "", "else", ":", "\n", "                ", "char_count", "=", "Counter", "(", ")", "\n", "for", "idx", "in", "range", "(", "count", ")", ":", "\n", "                    ", "text", "=", "self", ".", "_get_text", "(", "key", ",", "idx", ")", "\n", "char_count", ".", "update", "(", "set", "(", "text", ")", ")", "\n", "\n", "", "dist", "=", "np", ".", "empty", "(", "count", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "for", "idx", "in", "range", "(", "count", ")", ":", "\n", "                    ", "text", "=", "self", ".", "_get_text", "(", "key", ",", "idx", ")", "\n", "charset", "=", "set", "(", "text", ")", "&", "self", ".", "_augmentation_charset", "\n", "dist", "[", "idx", "]", "=", "sum", "(", "[", "1", "/", "char_count", "[", "char", "]", "for", "char", "in", "charset", "]", ")", "\n", "\n", "", "", "total", "=", "np", ".", "sum", "(", "dist", ")", "\n", "if", "total", ">", "0", ":", "\n", "                ", "dist", "/=", "total", "\n", "", "dist", "=", "np", ".", "cumsum", "(", "dist", ")", "\n", "self", ".", "_dists", ".", "append", "(", "dist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.corpus.char_augmentable_corpus.CharAugmentableCorpus._sample_text": [[63, 77], ["numpy.random.choice", "numpy.searchsorted", "min", "char_augmentable_corpus.CharAugmentableCorpus._get_text", "numpy.random.rand", "super()._sample_text", "len", "RuntimeError", "numpy.random.rand"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.corpus.base_corpus.BaseCorpus._get_text", "home.repos.pwc.inspect_result.clovaai_synthtiger.corpus.length_augmentable_corpus.LengthAugmentableCorpus._sample_text"], ["", "", "def", "_sample_text", "(", "self", ")", ":", "\n", "        ", "augmentation", "=", "np", ".", "random", ".", "rand", "(", ")", "<", "self", ".", "augmentation", "\n", "if", "not", "augmentation", ":", "\n", "            ", "return", "super", "(", ")", ".", "_sample_text", "(", ")", "\n", "\n", "", "key", "=", "np", ".", "random", ".", "choice", "(", "len", "(", "self", ".", "paths", ")", ",", "p", "=", "self", ".", "_probs", ")", "\n", "if", "self", ".", "_counts", "[", "key", "]", "==", "0", ":", "\n", "            ", "raise", "RuntimeError", "(", "f\"There is no text: {self.paths[key]}\"", ")", "\n", "\n", "", "value", "=", "np", ".", "random", ".", "rand", "(", ")", "*", "self", ".", "_dists", "[", "key", "]", "[", "-", "1", "]", "\n", "idx", "=", "np", ".", "searchsorted", "(", "self", ".", "_dists", "[", "key", "]", ",", "value", ")", "\n", "idx", "=", "min", "(", "idx", ",", "self", ".", "_counts", "[", "key", "]", "-", "1", ")", "\n", "text", "=", "self", ".", "_get_text", "(", "key", ",", "idx", ")", "\n", "return", "text", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.corpus.base_corpus.BaseCorpus.__init__": [[17, 40], ["synthtiger.components.component.Component.__init__", "set", "base_corpus.BaseCorpus._update_charset", "base_corpus.BaseCorpus._update_contents", "numpy.array", "sum"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__", "home.repos.pwc.inspect_result.clovaai_synthtiger.corpus.base_corpus.BaseCorpus._update_charset", "home.repos.pwc.inspect_result.clovaai_synthtiger.corpus.base_corpus.BaseCorpus._update_contents"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "paths", "=", "(", ")", ",", "\n", "weights", "=", "(", ")", ",", "\n", "min_length", "=", "None", ",", "\n", "max_length", "=", "None", ",", "\n", "charset", "=", "None", ",", "\n", "textcase", "=", "None", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "paths", "=", "paths", "\n", "self", ".", "weights", "=", "weights", "\n", "self", ".", "min_length", "=", "min_length", "\n", "self", ".", "max_length", "=", "max_length", "\n", "self", ".", "charset", "=", "charset", "\n", "self", ".", "textcase", "=", "textcase", "\n", "self", ".", "_contents", "=", "[", "]", "\n", "self", ".", "_offsets", "=", "[", "]", "\n", "self", ".", "_counts", "=", "[", "]", "\n", "self", ".", "_probs", "=", "np", ".", "array", "(", "self", ".", "weights", ")", "/", "sum", "(", "self", ".", "weights", ")", "\n", "self", ".", "_charset", "=", "set", "(", ")", "\n", "self", ".", "_update_charset", "(", ")", "\n", "self", ".", "_update_contents", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.corpus.base_corpus.BaseCorpus.sample": [[41, 61], ["base_corpus.BaseCorpus._sample_text", "base_corpus.BaseCorpus._random_textcase", "meta.get", "len", "RuntimeError", "len", "len", "RuntimeError"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.corpus.length_augmentable_corpus.LengthAugmentableCorpus._sample_text", "home.repos.pwc.inspect_result.clovaai_synthtiger.corpus.base_corpus.BaseCorpus._random_textcase"], ["", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "if", "meta", "is", "None", ":", "\n", "            ", "meta", "=", "{", "}", "\n", "\n", "", "if", "len", "(", "self", ".", "paths", ")", "==", "0", ":", "\n", "            ", "raise", "RuntimeError", "(", "\"Corpus path is not specified\"", ")", "\n", "", "if", "len", "(", "self", ".", "paths", ")", "!=", "len", "(", "self", ".", "weights", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "\n", "\"The number of weights does not match the number of corpus paths\"", "\n", ")", "\n", "\n", "", "text", "=", "self", ".", "_sample_text", "(", ")", "\n", "text", "=", "self", ".", "_random_textcase", "(", "text", ")", "\n", "text", "=", "meta", ".", "get", "(", "\"text\"", ",", "text", ")", "\n", "\n", "meta", "=", "{", "\n", "\"text\"", ":", "text", ",", "\n", "}", "\n", "\n", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.corpus.base_corpus.BaseCorpus.data": [[62, 65], ["None"], "methods", ["None"], ["", "def", "data", "(", "self", ",", "meta", ")", ":", "\n", "        ", "text", "=", "meta", "[", "\"text\"", "]", "\n", "return", "text", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.corpus.base_corpus.BaseCorpus._update_charset": [[66, 70], ["set", "synthtiger.utils.read_charset"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.utils.file_util.read_charset"], ["", "def", "_update_charset", "(", "self", ")", ":", "\n", "        ", "self", ".", "_charset", "=", "set", "(", ")", "\n", "if", "self", ".", "charset", "is", "not", "None", ":", "\n", "            ", "self", ".", "_charset", "=", "utils", ".", "read_charset", "(", "self", ".", "charset", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.corpus.base_corpus.BaseCorpus._update_contents": [[71, 103], ["io.StringIO", "io.BytesIO", "io.BytesIO.write", "base_corpus.BaseCorpus._contents.append", "base_corpus.BaseCorpus._offsets.append", "base_corpus.BaseCorpus._counts.append", "io.StringIO.close", "io.BytesIO.close", "offset.to_bytes", "open", "io.StringIO.getvalue", "numpy.frombuffer", "text.strip.strip.strip", "io.StringIO.write", "len", "io.BytesIO.write", "io.BytesIO.getvalue", "base_corpus.BaseCorpus._check_length", "base_corpus.BaseCorpus._check_charset", "offset.to_bytes"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.corpus.base_corpus.BaseCorpus._check_length", "home.repos.pwc.inspect_result.clovaai_synthtiger.corpus.base_corpus.BaseCorpus._check_charset"], ["", "", "def", "_update_contents", "(", "self", ")", ":", "\n", "        ", "self", ".", "_contents", "=", "[", "]", "\n", "self", ".", "_offsets", "=", "[", "]", "\n", "self", ".", "_counts", "=", "[", "]", "\n", "\n", "for", "path", "in", "self", ".", "paths", ":", "\n", "            ", "offset", "=", "0", "\n", "count", "=", "0", "\n", "contents", "=", "io", ".", "StringIO", "(", ")", "\n", "offsets", "=", "io", ".", "BytesIO", "(", ")", "\n", "offsets", ".", "write", "(", "offset", ".", "to_bytes", "(", "4", ",", "sys", ".", "byteorder", ",", "signed", "=", "False", ")", ")", "\n", "\n", "with", "open", "(", "path", ",", "\"r\"", ",", "encoding", "=", "\"utf-8\"", ")", "as", "fp", ":", "\n", "                ", "for", "text", "in", "fp", ":", "\n", "                    ", "text", "=", "text", ".", "strip", "(", "\"\\r\\n\"", ")", "\n", "\n", "if", "not", "self", ".", "_check_length", "(", "text", ")", ":", "\n", "                        ", "continue", "\n", "", "if", "not", "self", ".", "_check_charset", "(", "text", ")", ":", "\n", "                        ", "continue", "\n", "\n", "", "contents", ".", "write", "(", "text", ")", "\n", "offset", "+=", "len", "(", "text", ")", "\n", "offsets", ".", "write", "(", "offset", ".", "to_bytes", "(", "4", ",", "sys", ".", "byteorder", ",", "signed", "=", "False", ")", ")", "\n", "count", "+=", "1", "\n", "\n", "", "", "self", ".", "_contents", ".", "append", "(", "contents", ".", "getvalue", "(", ")", ")", "\n", "self", ".", "_offsets", ".", "append", "(", "np", ".", "frombuffer", "(", "offsets", ".", "getvalue", "(", ")", ",", "dtype", "=", "np", ".", "uint32", ")", ")", "\n", "self", ".", "_counts", ".", "append", "(", "count", ")", "\n", "\n", "contents", ".", "close", "(", ")", "\n", "offsets", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.corpus.base_corpus.BaseCorpus._check_length": [[104, 110], ["len", "len"], "methods", ["None"], ["", "", "def", "_check_length", "(", "self", ",", "text", ")", ":", "\n", "        ", "if", "self", ".", "min_length", "is", "not", "None", "and", "len", "(", "text", ")", "<", "self", ".", "min_length", ":", "\n", "            ", "return", "False", "\n", "", "if", "self", ".", "max_length", "is", "not", "None", "and", "len", "(", "text", ")", ">", "self", ".", "max_length", ":", "\n", "            ", "return", "False", "\n", "", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.corpus.base_corpus.BaseCorpus._check_charset": [[111, 116], ["len", "set"], "methods", ["None"], ["", "def", "_check_charset", "(", "self", ",", "text", ")", ":", "\n", "        ", "if", "self", ".", "charset", "is", "not", "None", ":", "\n", "            ", "if", "len", "(", "set", "(", "text", ")", "-", "self", ".", "_charset", ")", ">", "0", ":", "\n", "                ", "return", "False", "\n", "", "", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.corpus.base_corpus.BaseCorpus._get_text": [[117, 122], ["None"], "methods", ["None"], ["", "def", "_get_text", "(", "self", ",", "key", ",", "idx", ")", ":", "\n", "        ", "start", "=", "self", ".", "_offsets", "[", "key", "]", "[", "idx", "]", "\n", "end", "=", "self", ".", "_offsets", "[", "key", "]", "[", "idx", "+", "1", "]", "\n", "text", "=", "self", ".", "_contents", "[", "key", "]", "[", "start", ":", "end", "]", "\n", "return", "text", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.corpus.base_corpus.BaseCorpus._sample_text": [[123, 131], ["numpy.random.choice", "numpy.random.randint", "base_corpus.BaseCorpus._get_text", "len", "RuntimeError"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.corpus.base_corpus.BaseCorpus._get_text"], ["", "def", "_sample_text", "(", "self", ")", ":", "\n", "        ", "key", "=", "np", ".", "random", ".", "choice", "(", "len", "(", "self", ".", "paths", ")", ",", "p", "=", "self", ".", "_probs", ")", "\n", "if", "self", ".", "_counts", "[", "key", "]", "==", "0", ":", "\n", "            ", "raise", "RuntimeError", "(", "f\"There is no text: {self.paths[key]}\"", ")", "\n", "\n", "", "idx", "=", "np", ".", "random", ".", "randint", "(", "self", ".", "_counts", "[", "key", "]", ")", "\n", "text", "=", "self", ".", "_get_text", "(", "key", ",", "idx", ")", "\n", "return", "text", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.corpus.base_corpus.BaseCorpus._random_textcase": [[132, 146], ["text.capitalize.capitalize.lower", "text.capitalize.capitalize.upper", "text.capitalize.capitalize.capitalize", "numpy.random.randint", "len"], "methods", ["None"], ["", "def", "_random_textcase", "(", "self", ",", "text", ")", ":", "\n", "        ", "if", "self", ".", "textcase", "is", "None", ":", "\n", "            ", "return", "text", "\n", "\n", "", "textcase", "=", "self", ".", "textcase", "[", "np", ".", "random", ".", "randint", "(", "len", "(", "self", ".", "textcase", ")", ")", "]", "\n", "\n", "if", "textcase", "==", "\"lower\"", ":", "\n", "            ", "text", "=", "text", ".", "lower", "(", ")", "\n", "", "if", "textcase", "==", "\"upper\"", ":", "\n", "            ", "text", "=", "text", ".", "upper", "(", ")", "\n", "", "if", "textcase", "==", "\"capitalize\"", ":", "\n", "            ", "text", "=", "text", ".", "capitalize", "(", ")", "\n", "\n", "", "return", "text", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.corpus.length_augmentable_corpus.LengthAugmentableCorpus.__init__": [[13, 27], ["synthtiger.components.corpus.base_corpus.BaseCorpus.__init__"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "paths", "=", "(", ")", ",", "\n", "weights", "=", "(", ")", ",", "\n", "min_length", "=", "None", ",", "\n", "max_length", "=", "None", ",", "\n", "charset", "=", "None", ",", "\n", "textcase", "=", "None", ",", "\n", "augmentation", "=", "0", ",", "\n", "augmentation_length", "=", "(", "1", ",", "25", ")", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "paths", ",", "weights", ",", "min_length", ",", "max_length", ",", "charset", ",", "textcase", ")", "\n", "self", ".", "augmentation", "=", "augmentation", "\n", "self", ".", "augmentation_length", "=", "augmentation_length", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.corpus.length_augmentable_corpus.LengthAugmentableCorpus._sample_text": [[28, 48], ["numpy.random.randint", "numpy.random.rand", "super()._sample_text", "len", "numpy.random.choice", "numpy.random.randint", "length_augmentable_corpus.LengthAugmentableCorpus._get_text", "len", "RuntimeError"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.corpus.length_augmentable_corpus.LengthAugmentableCorpus._sample_text", "home.repos.pwc.inspect_result.clovaai_synthtiger.corpus.base_corpus.BaseCorpus._get_text"], ["", "def", "_sample_text", "(", "self", ")", ":", "\n", "        ", "augmentation", "=", "np", ".", "random", ".", "rand", "(", ")", "<", "self", ".", "augmentation", "\n", "if", "not", "augmentation", ":", "\n", "            ", "return", "super", "(", ")", ".", "_sample_text", "(", ")", "\n", "\n", "", "text", "=", "\"\"", "\n", "length", "=", "np", ".", "random", ".", "randint", "(", "\n", "self", ".", "augmentation_length", "[", "0", "]", ",", "self", ".", "augmentation_length", "[", "1", "]", "+", "1", "\n", ")", "\n", "\n", "while", "len", "(", "text", ")", "<", "length", ":", "\n", "            ", "key", "=", "np", ".", "random", ".", "choice", "(", "len", "(", "self", ".", "paths", ")", ",", "p", "=", "self", ".", "_probs", ")", "\n", "if", "self", ".", "_counts", "[", "key", "]", "==", "0", ":", "\n", "                ", "raise", "RuntimeError", "(", "f\"There is no text: {self.paths[key]}\"", ")", "\n", "\n", "", "idx", "=", "np", ".", "random", ".", "randint", "(", "self", ".", "_counts", "[", "key", "]", ")", "\n", "text", "+=", "self", ".", "_get_text", "(", "key", ",", "idx", ")", "\n", "\n", "", "text", "=", "text", "[", ":", "length", "]", "\n", "return", "text", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.text_effect.text_extrusion.TextExtrusion.__init__": [[15, 30], ["synthtiger.components.component.Component.__init__", "synthtiger.components.color.RGB"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "length", "=", "(", "5", ",", "10", ")", ",", "\n", "angle", "=", "(", "0", ",", "360", ")", ",", "\n", "rgb", "=", "(", "(", "0", ",", "255", ")", ",", "(", "0", ",", "255", ")", ",", "(", "0", ",", "255", ")", ")", ",", "\n", "alpha", "=", "(", "1", ",", "1", ")", ",", "\n", "grayscale", "=", "0", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "length", "=", "length", "\n", "self", ".", "angle", "=", "angle", "\n", "self", ".", "rgb", "=", "rgb", "\n", "self", ".", "alpha", "=", "alpha", "\n", "self", ".", "grayscale", "=", "grayscale", "\n", "self", ".", "_color", "=", "RGB", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.text_effect.text_extrusion.TextExtrusion.sample": [[31, 59], ["meta.get", "meta.get", "meta.get", "meta.get", "meta.get", "numpy.random.randint", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "numpy.random.rand"], "methods", ["None"], ["", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "if", "meta", "is", "None", ":", "\n", "            ", "meta", "=", "{", "}", "\n", "\n", "", "length", "=", "meta", ".", "get", "(", "\n", "\"length\"", ",", "np", ".", "random", ".", "randint", "(", "self", ".", "length", "[", "0", "]", ",", "self", ".", "length", "[", "1", "]", "+", "1", ")", "\n", ")", "\n", "angle", "=", "meta", ".", "get", "(", "\"angle\"", ",", "np", ".", "random", ".", "uniform", "(", "self", ".", "angle", "[", "0", "]", ",", "self", ".", "angle", "[", "1", "]", ")", ")", "\n", "rgb", "=", "meta", ".", "get", "(", "\n", "\"rgb\"", ",", "\n", "(", "\n", "np", ".", "random", ".", "randint", "(", "self", ".", "rgb", "[", "0", "]", "[", "0", "]", ",", "self", ".", "rgb", "[", "0", "]", "[", "1", "]", "+", "1", ")", ",", "\n", "np", ".", "random", ".", "randint", "(", "self", ".", "rgb", "[", "1", "]", "[", "0", "]", ",", "self", ".", "rgb", "[", "1", "]", "[", "1", "]", "+", "1", ")", ",", "\n", "np", ".", "random", ".", "randint", "(", "self", ".", "rgb", "[", "2", "]", "[", "0", "]", ",", "self", ".", "rgb", "[", "2", "]", "[", "1", "]", "+", "1", ")", ",", "\n", ")", ",", "\n", ")", "\n", "alpha", "=", "meta", ".", "get", "(", "\"alpha\"", ",", "np", ".", "random", ".", "uniform", "(", "self", ".", "alpha", "[", "0", "]", ",", "self", ".", "alpha", "[", "1", "]", ")", ")", "\n", "grayscale", "=", "meta", ".", "get", "(", "\"grayscale\"", ",", "np", ".", "random", ".", "rand", "(", ")", "<", "self", ".", "grayscale", ")", "\n", "\n", "meta", "=", "{", "\n", "\"length\"", ":", "length", ",", "\n", "\"angle\"", ":", "angle", ",", "\n", "\"rgb\"", ":", "rgb", ",", "\n", "\"alpha\"", ":", "alpha", ",", "\n", "\"grayscale\"", ":", "grayscale", ",", "\n", "}", "\n", "\n", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.text_effect.text_extrusion.TextExtrusion.apply": [[60, 83], ["text_extrusion.TextExtrusion.sample", "numpy.radians", "numpy.array", "range", "synthtiger.layers.Group().merge", "text_extrusion.TextExtrusion._color.apply", "numpy.cos", "layer.copy", "extrusion_layers.append", "numpy.sin", "synthtiger.layers.Group"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample", "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.merge", "home.repos.pwc.inspect_result.clovaai_synthtiger.text_effect.text_shadow.TextShadow.apply", "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.copy"], ["", "def", "apply", "(", "self", ",", "layers", ",", "meta", "=", "None", ")", ":", "\n", "        ", "meta", "=", "self", ".", "sample", "(", "meta", ")", "\n", "length", "=", "meta", "[", "\"length\"", "]", "\n", "angle", "=", "meta", "[", "\"angle\"", "]", "\n", "\n", "radian", "=", "np", ".", "radians", "(", "angle", ")", "\n", "offsets", "=", "np", ".", "array", "(", "[", "np", ".", "cos", "(", "radian", ")", ",", "-", "np", ".", "sin", "(", "radian", ")", "]", ")", "\n", "\n", "for", "layer", "in", "layers", ":", "\n", "            ", "extrusion_layers", "=", "[", "]", "\n", "for", "idx", "in", "range", "(", "1", ",", "length", "+", "1", ")", ":", "\n", "                ", "extrusion_layer", "=", "layer", ".", "copy", "(", ")", "\n", "extrusion_layer", ".", "quad", "+=", "offsets", "*", "idx", "\n", "extrusion_layers", ".", "append", "(", "extrusion_layer", ")", "\n", "\n", "", "extrusion_layer", "=", "Group", "(", "extrusion_layers", ")", ".", "merge", "(", ")", "\n", "self", ".", "_color", ".", "apply", "(", "[", "extrusion_layer", "]", ",", "meta", ")", "\n", "\n", "out_layer", "=", "(", "layer", "+", "extrusion_layer", ")", ".", "merge", "(", ")", "\n", "layer", ".", "image", "=", "out_layer", ".", "image", "\n", "layer", ".", "quad", "=", "out_layer", ".", "quad", "\n", "\n", "", "return", "meta", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.text_effect.text_border.TextBorder.__init__": [[16, 25], ["synthtiger.components.component.Component.__init__", "synthtiger.components.color.RGB"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "size", "=", "(", "1", ",", "5", ")", ",", "rgb", "=", "(", "(", "0", ",", "255", ")", ",", "(", "0", ",", "255", ")", ",", "(", "0", ",", "255", ")", ")", ",", "alpha", "=", "(", "1", ",", "1", ")", ",", "grayscale", "=", "0", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "size", "=", "size", "\n", "self", ".", "rgb", "=", "rgb", "\n", "self", ".", "alpha", "=", "alpha", "\n", "self", ".", "grayscale", "=", "grayscale", "\n", "self", ".", "_color", "=", "RGB", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.text_effect.text_border.TextBorder.sample": [[26, 50], ["meta.get", "meta.get", "meta.get", "meta.get", "numpy.random.randint", "numpy.random.uniform", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "numpy.random.rand"], "methods", ["None"], ["", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "if", "meta", "is", "None", ":", "\n", "            ", "meta", "=", "{", "}", "\n", "\n", "", "size", "=", "meta", ".", "get", "(", "\"size\"", ",", "np", ".", "random", ".", "randint", "(", "self", ".", "size", "[", "0", "]", ",", "self", ".", "size", "[", "1", "]", "+", "1", ")", ")", "\n", "rgb", "=", "meta", ".", "get", "(", "\n", "\"rgb\"", ",", "\n", "(", "\n", "np", ".", "random", ".", "randint", "(", "self", ".", "rgb", "[", "0", "]", "[", "0", "]", ",", "self", ".", "rgb", "[", "0", "]", "[", "1", "]", "+", "1", ")", ",", "\n", "np", ".", "random", ".", "randint", "(", "self", ".", "rgb", "[", "1", "]", "[", "0", "]", ",", "self", ".", "rgb", "[", "1", "]", "[", "1", "]", "+", "1", ")", ",", "\n", "np", ".", "random", ".", "randint", "(", "self", ".", "rgb", "[", "2", "]", "[", "0", "]", ",", "self", ".", "rgb", "[", "2", "]", "[", "1", "]", "+", "1", ")", ",", "\n", ")", ",", "\n", ")", "\n", "alpha", "=", "meta", ".", "get", "(", "\"alpha\"", ",", "np", ".", "random", ".", "uniform", "(", "self", ".", "alpha", "[", "0", "]", ",", "self", ".", "alpha", "[", "1", "]", ")", ")", "\n", "grayscale", "=", "meta", ".", "get", "(", "\"grayscale\"", ",", "np", ".", "random", ".", "rand", "(", ")", "<", "self", ".", "grayscale", ")", "\n", "\n", "meta", "=", "{", "\n", "\"size\"", ":", "size", ",", "\n", "\"rgb\"", ":", "rgb", ",", "\n", "\"alpha\"", ":", "alpha", ",", "\n", "\"grayscale\"", ":", "grayscale", ",", "\n", "}", "\n", "\n", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.text_effect.text_border.TextBorder.apply": [[51, 71], ["text_border.TextBorder.sample", "layer.output", "synthtiger.utils.pad_image", "synthtiger.utils.dilate_image", "synthtiger.layers.Layer", "text_border.TextBorder._color.apply"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample", "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.output", "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.pad_image", "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.dilate_image", "home.repos.pwc.inspect_result.clovaai_synthtiger.text_effect.text_shadow.TextShadow.apply"], ["", "def", "apply", "(", "self", ",", "layers", ",", "meta", "=", "None", ")", ":", "\n", "        ", "meta", "=", "self", ".", "sample", "(", "meta", ")", "\n", "size", "=", "meta", "[", "\"size\"", "]", "\n", "\n", "for", "layer", "in", "layers", ":", "\n", "            ", "image", "=", "layer", ".", "output", "(", ")", "\n", "border_image", "=", "utils", ".", "pad_image", "(", "\n", "image", ",", "top", "=", "size", ",", "right", "=", "size", ",", "bottom", "=", "size", ",", "left", "=", "size", "\n", ")", "\n", "border_image", "=", "utils", ".", "dilate_image", "(", "border_image", ",", "size", ")", "\n", "\n", "border_layer", "=", "Layer", "(", "border_image", ")", "\n", "border_layer", ".", "center", "=", "layer", ".", "center", "\n", "self", ".", "_color", ".", "apply", "(", "[", "border_layer", "]", ",", "meta", ")", "\n", "\n", "out_layer", "=", "(", "layer", "+", "border_layer", ")", ".", "merge", "(", ")", "\n", "layer", ".", "image", "=", "out_layer", ".", "image", "\n", "layer", ".", "quad", "=", "out_layer", ".", "quad", "\n", "\n", "", "return", "meta", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.text_effect.text_sprinkle.TextSprinkle.__init__": [[14, 19], ["synthtiger.components.component.Component.__init__"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "prob", "=", "(", "0.05", ",", "0.2", ")", ",", "offset", "=", "(", "-", "2", ",", "2", ")", ",", "masking", "=", "0.5", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "prob", "=", "prob", "\n", "self", ".", "offset", "=", "offset", "\n", "self", ".", "masking", "=", "masking", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.text_effect.text_sprinkle.TextSprinkle.sample": [[20, 35], ["meta.get", "meta.get", "meta.get", "numpy.random.uniform", "numpy.random.rand"], "methods", ["None"], ["", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "if", "meta", "is", "None", ":", "\n", "            ", "meta", "=", "{", "}", "\n", "\n", "", "prob", "=", "meta", ".", "get", "(", "\"prob\"", ",", "np", ".", "random", ".", "uniform", "(", "self", ".", "prob", "[", "0", "]", ",", "self", ".", "prob", "[", "1", "]", ")", ")", "\n", "offset", "=", "meta", ".", "get", "(", "\"offset\"", ",", "(", "self", ".", "offset", "[", "0", "]", ",", "self", ".", "offset", "[", "1", "]", ")", ")", "\n", "masking", "=", "meta", ".", "get", "(", "\"masking\"", ",", "np", ".", "random", ".", "rand", "(", ")", "<", "self", ".", "masking", ")", "\n", "\n", "meta", "=", "{", "\n", "\"prob\"", ":", "prob", ",", "\n", "\"offset\"", ":", "offset", ",", "\n", "\"masking\"", ":", "masking", ",", "\n", "}", "\n", "\n", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.text_effect.text_sprinkle.TextSprinkle.apply": [[36, 65], ["text_sprinkle.TextSprinkle.sample", "int", "numpy.random.randint", "numpy.random.uniform", "numpy.zeros", "numpy.zeros", "numpy.reshape", "numpy.reshape", "numpy.indices", "cv2.remap"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample"], ["", "def", "apply", "(", "self", ",", "layers", ",", "meta", "=", "None", ")", ":", "\n", "        ", "meta", "=", "self", ".", "sample", "(", "meta", ")", "\n", "prob", "=", "meta", "[", "\"prob\"", "]", "\n", "offset", "=", "meta", "[", "\"offset\"", "]", "\n", "masking", "=", "meta", "[", "\"masking\"", "]", "\n", "\n", "for", "layer", "in", "layers", ":", "\n", "            ", "height", ",", "width", "=", "layer", ".", "image", ".", "shape", "[", ":", "2", "]", "\n", "\n", "count", "=", "int", "(", "height", "*", "width", "*", "prob", ")", "\n", "idxes", "=", "np", ".", "random", ".", "randint", "(", "height", "*", "width", ",", "size", "=", "count", ")", "\n", "offsets", "=", "np", ".", "random", ".", "uniform", "(", "offset", "[", "0", "]", ",", "offset", "[", "1", "]", ",", "(", "count", ",", "2", ")", ")", "\n", "\n", "dx", "=", "np", ".", "zeros", "(", "height", "*", "width", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "dy", "=", "np", ".", "zeros", "(", "height", "*", "width", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "dx", "[", "idxes", "]", "=", "offsets", "[", "...", ",", "0", "]", "\n", "dy", "[", "idxes", "]", "=", "offsets", "[", "...", ",", "1", "]", "\n", "dx", "=", "np", ".", "reshape", "(", "dx", ",", "(", "height", ",", "width", ")", ")", "\n", "dy", "=", "np", ".", "reshape", "(", "dy", ",", "(", "height", ",", "width", ")", ")", "\n", "\n", "alpha", "=", "layer", ".", "image", "[", "...", ",", "3", "]", "/", "255", "if", "masking", "else", "1", "\n", "mapy", ",", "mapx", "=", "np", ".", "indices", "(", "(", "height", ",", "width", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "mapx", "+=", "dx", "*", "alpha", "\n", "mapy", "+=", "dy", "*", "alpha", "\n", "out_image", "=", "cv2", ".", "remap", "(", "layer", ".", "image", ",", "mapx", ",", "mapy", ",", "cv2", ".", "INTER_LINEAR", ")", "\n", "\n", "layer", ".", "image", "=", "out_image", "\n", "\n", "", "return", "meta", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.text_effect.text_shadow.TextShadow.__init__": [[14, 29], ["synthtiger.components.component.Component.__init__", "synthtiger.components.color.RGB"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "distance", "=", "(", "1", ",", "5", ")", ",", "\n", "angle", "=", "(", "0", ",", "360", ")", ",", "\n", "rgb", "=", "(", "(", "0", ",", "0", ")", ",", "(", "0", ",", "0", ")", ",", "(", "0", ",", "0", ")", ")", ",", "\n", "alpha", "=", "(", "0", ",", "0.5", ")", ",", "\n", "grayscale", "=", "0", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "distance", "=", "distance", "\n", "self", ".", "angle", "=", "angle", "\n", "self", ".", "rgb", "=", "rgb", "\n", "self", ".", "alpha", "=", "alpha", "\n", "self", ".", "grayscale", "=", "grayscale", "\n", "self", ".", "_color", "=", "RGB", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.text_effect.text_shadow.TextShadow.sample": [[30, 58], ["meta.get", "meta.get", "meta.get", "meta.get", "meta.get", "numpy.random.randint", "numpy.random.uniform", "numpy.random.uniform", "numpy.random.randint", "numpy.random.randint", "numpy.random.randint", "numpy.random.rand"], "methods", ["None"], ["", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "if", "meta", "is", "None", ":", "\n", "            ", "meta", "=", "{", "}", "\n", "\n", "", "distance", "=", "meta", ".", "get", "(", "\n", "\"distance\"", ",", "np", ".", "random", ".", "randint", "(", "self", ".", "distance", "[", "0", "]", ",", "self", ".", "distance", "[", "1", "]", "+", "1", ")", "\n", ")", "\n", "angle", "=", "meta", ".", "get", "(", "\"angle\"", ",", "np", ".", "random", ".", "uniform", "(", "self", ".", "angle", "[", "0", "]", ",", "self", ".", "angle", "[", "1", "]", ")", ")", "\n", "rgb", "=", "meta", ".", "get", "(", "\n", "\"rgb\"", ",", "\n", "(", "\n", "np", ".", "random", ".", "randint", "(", "self", ".", "rgb", "[", "0", "]", "[", "0", "]", ",", "self", ".", "rgb", "[", "0", "]", "[", "1", "]", "+", "1", ")", ",", "\n", "np", ".", "random", ".", "randint", "(", "self", ".", "rgb", "[", "1", "]", "[", "0", "]", ",", "self", ".", "rgb", "[", "1", "]", "[", "1", "]", "+", "1", ")", ",", "\n", "np", ".", "random", ".", "randint", "(", "self", ".", "rgb", "[", "2", "]", "[", "0", "]", ",", "self", ".", "rgb", "[", "2", "]", "[", "1", "]", "+", "1", ")", ",", "\n", ")", ",", "\n", ")", "\n", "alpha", "=", "meta", ".", "get", "(", "\"alpha\"", ",", "np", ".", "random", ".", "uniform", "(", "self", ".", "alpha", "[", "0", "]", ",", "self", ".", "alpha", "[", "1", "]", ")", ")", "\n", "grayscale", "=", "meta", ".", "get", "(", "\"grayscale\"", ",", "np", ".", "random", ".", "rand", "(", ")", "<", "self", ".", "grayscale", ")", "\n", "\n", "meta", "=", "{", "\n", "\"distance\"", ":", "distance", ",", "\n", "\"angle\"", ":", "angle", ",", "\n", "\"rgb\"", ":", "rgb", ",", "\n", "\"alpha\"", ":", "alpha", ",", "\n", "\"grayscale\"", ":", "grayscale", ",", "\n", "}", "\n", "\n", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.text_effect.text_shadow.TextShadow.apply": [[59, 77], ["text_shadow.TextShadow.sample", "numpy.radians", "numpy.array", "layer.copy", "text_shadow.TextShadow._color.apply", "numpy.cos", "numpy.sin"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample", "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.copy", "home.repos.pwc.inspect_result.clovaai_synthtiger.text_effect.text_shadow.TextShadow.apply"], ["", "def", "apply", "(", "self", ",", "layers", ",", "meta", "=", "None", ")", ":", "\n", "        ", "meta", "=", "self", ".", "sample", "(", "meta", ")", "\n", "distance", "=", "meta", "[", "\"distance\"", "]", "\n", "angle", "=", "meta", "[", "\"angle\"", "]", "\n", "\n", "radian", "=", "np", ".", "radians", "(", "angle", ")", "\n", "offsets", "=", "np", ".", "array", "(", "[", "np", ".", "cos", "(", "radian", ")", ",", "-", "np", ".", "sin", "(", "radian", ")", "]", ")", "\n", "\n", "for", "layer", "in", "layers", ":", "\n", "            ", "shadow_layer", "=", "layer", ".", "copy", "(", ")", "\n", "shadow_layer", ".", "quad", "+=", "offsets", "*", "distance", "\n", "self", ".", "_color", ".", "apply", "(", "[", "shadow_layer", "]", ",", "meta", ")", "\n", "\n", "out_layer", "=", "(", "layer", "+", "shadow_layer", ")", ".", "merge", "(", ")", "\n", "layer", ".", "image", "=", "out_layer", ".", "image", "\n", "layer", ".", "quad", "=", "out_layer", ".", "quad", "\n", "\n", "", "return", "meta", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.__init__": [[17, 38], ["synthtiger.components.component.Component.__init__", "base_font.BaseFont._update_paths", "base_font.BaseFont._update_tables", "numpy.array", "sum"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__", "home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont._update_paths", "home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont._update_tables"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "paths", "=", "(", ")", ",", "\n", "weights", "=", "(", ")", ",", "\n", "size", "=", "(", "16", ",", "48", ")", ",", "\n", "bold", "=", "0", ",", "\n", "vertical", "=", "False", ",", "\n", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "paths", "=", "paths", "\n", "self", ".", "weights", "=", "weights", "\n", "self", ".", "size", "=", "size", "\n", "self", ".", "bold", "=", "bold", "\n", "self", ".", "vertical", "=", "vertical", "\n", "self", ".", "_paths", "=", "[", "]", "\n", "self", ".", "_counts", "=", "[", "]", "\n", "self", ".", "_probs", "=", "np", ".", "array", "(", "self", ".", "weights", ")", "/", "sum", "(", "self", ".", "weights", ")", "\n", "self", ".", "_tables", "=", "[", "]", "\n", "self", ".", "_ids", "=", "[", "]", "\n", "self", ".", "_update_paths", "(", ")", "\n", "self", ".", "_update_tables", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.sample": [[39, 64], ["meta.get", "meta.get", "meta.get", "meta.get", "meta.get", "len", "RuntimeError", "len", "len", "RuntimeError", "base_font.BaseFont._sample_font", "numpy.random.randint", "numpy.random.rand"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont._sample_font"], ["", "def", "sample", "(", "self", ",", "meta", "=", "None", ")", ":", "\n", "        ", "if", "meta", "is", "None", ":", "\n", "            ", "meta", "=", "{", "}", "\n", "\n", "", "if", "len", "(", "self", ".", "paths", ")", "==", "0", ":", "\n", "            ", "raise", "RuntimeError", "(", "\"Font path is not specified\"", ")", "\n", "", "if", "len", "(", "self", ".", "paths", ")", "!=", "len", "(", "self", ".", "weights", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "\n", "\"The number of weights does not match the number of font paths\"", "\n", ")", "\n", "\n", "", "text", "=", "meta", ".", "get", "(", "\"text\"", ")", "\n", "path", "=", "meta", ".", "get", "(", "\"path\"", ",", "self", ".", "_sample_font", "(", "text", ")", ")", "\n", "size", "=", "meta", ".", "get", "(", "\"size\"", ",", "np", ".", "random", ".", "randint", "(", "self", ".", "size", "[", "0", "]", ",", "self", ".", "size", "[", "1", "]", "+", "1", ")", ")", "\n", "bold", "=", "meta", ".", "get", "(", "\"bold\"", ",", "np", ".", "random", ".", "rand", "(", ")", "<", "self", ".", "bold", ")", "\n", "vertical", "=", "meta", ".", "get", "(", "\"vertical\"", ",", "self", ".", "vertical", ")", "\n", "\n", "meta", "=", "{", "\n", "\"path\"", ":", "path", ",", "\n", "\"size\"", ":", "size", ",", "\n", "\"bold\"", ":", "bold", ",", "\n", "\"vertical\"", ":", "vertical", ",", "\n", "}", "\n", "\n", "return", "meta", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont.data": [[65, 70], ["PIL.ImageFont.truetype", "int"], "methods", ["None"], ["", "def", "data", "(", "self", ",", "meta", ")", ":", "\n", "        ", "font", "=", "ImageFont", ".", "truetype", "(", "meta", "[", "\"path\"", "]", ",", "size", "=", "meta", "[", "\"size\"", "]", ")", "\n", "stroke_width", "=", "int", "(", "meta", "[", "\"bold\"", "]", ")", "\n", "direction", "=", "\"ltr\"", "if", "not", "meta", "[", "\"vertical\"", "]", "else", "\"ttb\"", "\n", "return", "font", ",", "stroke_width", ",", "direction", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont._update_paths": [[71, 85], ["os.path.isdir", "base_font.BaseFont._paths.append", "base_font.BaseFont._counts.append", "os.path.exists", "synthtiger.utils.search_files", "len"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.utils.file_util.search_files"], ["", "def", "_update_paths", "(", "self", ")", ":", "\n", "        ", "self", ".", "_paths", "=", "[", "]", "\n", "self", ".", "_counts", "=", "[", "]", "\n", "\n", "for", "path", "in", "self", ".", "paths", ":", "\n", "            ", "if", "not", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "\n", "                ", "continue", "\n", "\n", "", "paths", "=", "[", "path", "]", "\n", "if", "os", ".", "path", ".", "isdir", "(", "path", ")", ":", "\n", "                ", "paths", "=", "utils", ".", "search_files", "(", "path", ",", "exts", "=", "[", "\".ttf\"", ",", "\".otf\"", "]", ")", "\n", "\n", "", "self", ".", "_paths", ".", "append", "(", "paths", ")", "\n", "self", ".", "_counts", ".", "append", "(", "len", "(", "paths", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont._update_tables": [[86, 108], ["set", "base_font.BaseFont._ids.append", "base_font.BaseFont._tables.append", "enumerate", "base_font.BaseFont._read_glyphs", "set.update", "len", "len", "len", "numpy.zeros", "base_font.BaseFont._read_glyphs"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont._read_glyphs", "home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont._read_glyphs"], ["", "", "def", "_update_tables", "(", "self", ")", ":", "\n", "        ", "self", ".", "_tables", "=", "[", "]", "\n", "self", ".", "_ids", "=", "[", "]", "\n", "\n", "for", "paths", "in", "self", ".", "_paths", ":", "\n", "            ", "glyphset", "=", "set", "(", ")", "\n", "\n", "for", "path", "in", "paths", ":", "\n", "                ", "glyphs", "=", "self", ".", "_read_glyphs", "(", "path", ")", "\n", "glyphset", ".", "update", "(", "glyphs", ")", "\n", "\n", "", "self", ".", "_ids", ".", "append", "(", "{", "}", ")", "\n", "for", "glyph", "in", "glyphset", ":", "\n", "                ", "self", ".", "_ids", "[", "-", "1", "]", "[", "glyph", "]", "=", "len", "(", "self", ".", "_ids", "[", "-", "1", "]", ")", "\n", "\n", "", "size", "=", "(", "len", "(", "paths", ")", ",", "len", "(", "self", ".", "_ids", "[", "-", "1", "]", ")", ")", "\n", "self", ".", "_tables", ".", "append", "(", "np", ".", "zeros", "(", "size", ",", "dtype", "=", "bool", ")", ")", "\n", "\n", "for", "idx", ",", "path", "in", "enumerate", "(", "paths", ")", ":", "\n", "                ", "glyphs", "=", "self", ".", "_read_glyphs", "(", "path", ")", "\n", "ids", "=", "[", "self", ".", "_ids", "[", "-", "1", "]", "[", "glyph", "]", "for", "glyph", "in", "glyphs", "]", "\n", "self", ".", "_tables", "[", "-", "1", "]", "[", "idx", "]", "[", "ids", "]", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont._read_glyphs": [[109, 118], ["os.path.exists", "open", "list", "os.path.splitext", "fp.read"], "methods", ["None"], ["", "", "", "def", "_read_glyphs", "(", "self", ",", "path", ")", ":", "\n", "        ", "glyphs", "=", "[", "]", "\n", "path", "=", "f\"{os.path.splitext(path)[0]}.txt\"", "\n", "\n", "if", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "\n", "            ", "with", "open", "(", "path", ",", "\"r\"", ",", "encoding", "=", "\"utf-8\"", ")", "as", "fp", ":", "\n", "                ", "glyphs", "=", "list", "(", "fp", ".", "read", "(", ")", ")", "\n", "\n", "", "", "return", "glyphs", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.font.base_font.BaseFont._sample_font": [[119, 144], ["numpy.random.choice", "text.replace.replace.replace", "numpy.sum", "numpy.argwhere().flatten", "len", "RuntimeError", "numpy.random.randint", "base_font.BaseFont._ids[].get", "RuntimeError", "len", "numpy.argwhere", "numpy.random.randint", "len", "len"], "methods", ["None"], ["", "def", "_sample_font", "(", "self", ",", "text", "=", "None", ")", ":", "\n", "        ", "key", "=", "np", ".", "random", ".", "choice", "(", "len", "(", "self", ".", "paths", ")", ",", "p", "=", "self", ".", "_probs", ")", "\n", "if", "self", ".", "_counts", "[", "key", "]", "==", "0", ":", "\n", "            ", "raise", "RuntimeError", "(", "f\"There is no font: {self.paths[key]}\"", ")", "\n", "\n", "", "if", "text", "is", "None", ":", "\n", "            ", "idx", "=", "np", ".", "random", ".", "randint", "(", "len", "(", "self", ".", "_paths", "[", "key", "]", ")", ")", "\n", "path", "=", "self", ".", "_paths", "[", "key", "]", "[", "idx", "]", "\n", "return", "path", "\n", "\n", "# https://en.wikipedia.org/wiki/Backslash", "\n", "", "text", "=", "text", ".", "replace", "(", "\"\\\\\"", ",", "\"\uff3c\"", ")", "\n", "\n", "ids", "=", "[", "self", ".", "_ids", "[", "key", "]", ".", "get", "(", "char", ")", "for", "char", "in", "text", "]", "\n", "if", "None", "in", "ids", ":", "\n", "            ", "raise", "RuntimeError", "(", "\n", "f\"There is no font that can render text '{text}': {self.paths[key]}\"", "\n", ")", "\n", "\n", "", "table", "=", "self", ".", "_tables", "[", "key", "]", "[", "...", ",", "ids", "]", "\n", "counts", "=", "np", ".", "sum", "(", "table", ",", "axis", "=", "1", ")", "\n", "idxes", "=", "np", ".", "argwhere", "(", "counts", "==", "len", "(", "text", ")", ")", ".", "flatten", "(", ")", "\n", "idx", "=", "idxes", "[", "np", ".", "random", ".", "randint", "(", "len", "(", "idxes", ")", ")", "]", "\n", "path", "=", "self", ".", "_paths", "[", "key", "]", "[", "idx", "]", "\n", "return", "path", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.templates.template.Template.__init__": [[11, 13], ["None"], "methods", ["None"], ["\n", "from", "synthtiger", "import", "components", ",", "layers", ",", "templates", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.templates.template.Template.generate": [[14, 17], ["None"], "methods", ["None"], ["\n", "class", "Multiline", "(", "templates", ".", "Template", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "config", "=", "None", ")", ":", "\n", "        ", "if", "config", "is", "None", ":", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.templates.template.Template.init_save": [[18, 21], ["None"], "methods", ["None"], ["            ", "config", "=", "{", "}", "\n", "\n", "", "self", ".", "count", "=", "config", ".", "get", "(", "\"count\"", ",", "100", ")", "\n", "self", ".", "corpus", "=", "components", ".", "BaseCorpus", "(", "**", "config", ".", "get", "(", "\"corpus\"", ",", "{", "}", ")", ")", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.templates.template.Template.save": [[22, 25], ["None"], "methods", ["None"], ["self", ".", "font", "=", "components", ".", "BaseFont", "(", "**", "config", ".", "get", "(", "\"font\"", ",", "{", "}", ")", ")", "\n", "self", ".", "color", "=", "components", ".", "RGB", "(", "**", "config", ".", "get", "(", "\"color\"", ",", "{", "}", ")", ")", "\n", "self", ".", "layout", "=", "components", ".", "FlowLayout", "(", "**", "config", ".", "get", "(", "\"layout\"", ",", "{", "}", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.templates.template.Template.end_save": [[26, 29], ["None"], "methods", ["None"], ["", "def", "generate", "(", "self", ")", ":", "\n", "        ", "texts", "=", "[", "self", ".", "corpus", ".", "data", "(", "self", ".", "corpus", ".", "sample", "(", ")", ")", "for", "_", "in", "range", "(", "self", ".", "count", ")", "]", "\n", "fonts", "=", "[", "self", ".", "font", ".", "sample", "(", ")", "for", "_", "in", "range", "(", "self", ".", "count", ")", "]", "\n", "color", "=", "self", ".", "color", ".", "data", "(", "self", ".", "color", ".", "sample", "(", ")", ")", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.rect_layer.RectLayer.__init__": [[12, 15], ["synthtiger.utils.create_image", "synthtiger.layers.layer.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.create_image", "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__"], ["    ", "def", "__init__", "(", "self", ",", "size", ",", "color", "=", "(", "0", ",", "0", ",", "0", ",", "255", ")", ")", ":", "\n", "        ", "image", "=", "utils", ".", "create_image", "(", "size", ",", "color", ")", "\n", "super", "(", ")", ".", "__init__", "(", "image", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Layer.__init__": [[16, 22], ["numpy.array", "synthtiger.utils.add_alpha_channel"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.add_alpha_channel"], ["    ", "def", "__init__", "(", "self", ",", "image", ")", ":", "\n", "        ", "image", "=", "np", ".", "array", "(", "image", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "image", "=", "utils", ".", "add_alpha_channel", "(", "image", ")", "\n", "height", ",", "width", "=", "image", ".", "shape", "[", ":", "2", "]", "\n", "self", ".", "image", "=", "image", "\n", "self", ".", "bbox", "=", "[", "0", ",", "0", ",", "width", ",", "height", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Layer.__add__": [[23, 33], ["isinstance", "layer.Group", "isinstance", "list", "list"], "methods", ["None"], ["", "def", "__add__", "(", "self", ",", "obj", ")", ":", "\n", "        ", "if", "isinstance", "(", "obj", ",", "Iterable", ")", ":", "\n", "            ", "layers", "=", "[", "self", "]", "+", "list", "(", "obj", ")", "\n", "", "elif", "isinstance", "(", "obj", ",", "Group", ")", ":", "\n", "            ", "layers", "=", "[", "self", "]", "+", "list", "(", "obj", ".", "layers", ")", "\n", "", "else", ":", "\n", "            ", "layers", "=", "[", "self", "]", "+", "[", "obj", "]", "\n", "\n", "", "group", "=", "Group", "(", "layers", ")", "\n", "return", "group", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Layer.__sub__": [[34, 44], ["isinstance", "layer.Group", "filter", "isinstance", "filter", "filter", "list", "list"], "methods", ["None"], ["", "def", "__sub__", "(", "self", ",", "obj", ")", ":", "\n", "        ", "if", "isinstance", "(", "obj", ",", "Iterable", ")", ":", "\n", "            ", "layers", "=", "filter", "(", "lambda", "layer", ":", "layer", "not", "in", "list", "(", "obj", ")", ",", "[", "self", "]", ")", "\n", "", "elif", "isinstance", "(", "obj", ",", "Group", ")", ":", "\n", "            ", "layers", "=", "filter", "(", "lambda", "layer", ":", "layer", "not", "in", "list", "(", "obj", ".", "layers", ")", ",", "[", "self", "]", ")", "\n", "", "else", ":", "\n", "            ", "layers", "=", "filter", "(", "lambda", "layer", ":", "layer", "!=", "obj", ",", "[", "self", "]", ")", "\n", "\n", "", "group", "=", "Group", "(", "layers", ")", "\n", "return", "group", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Layer.copy": [[45, 49], ["Layer.Layer"], "methods", ["None"], ["", "def", "copy", "(", "self", ")", ":", "\n", "        ", "layer", "=", "Layer", "(", "self", ".", "image", ")", "\n", "layer", ".", "quad", "=", "self", ".", "quad", "\n", "return", "layer", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Layer.output": [[50, 57], ["synthtiger.utils.create_image", "synthtiger.utils.paste_image"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.create_image", "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.paste_image"], ["", "def", "output", "(", "self", ",", "bbox", "=", "None", ")", ":", "\n", "        ", "if", "bbox", "is", "None", ":", "\n", "            ", "bbox", "=", "self", ".", "bbox", "\n", "\n", "", "image", "=", "utils", ".", "create_image", "(", "bbox", "[", "2", ":", "]", ")", "\n", "utils", ".", "paste_image", "(", "self", ".", "image", ",", "image", ",", "self", ".", "quad", "-", "bbox", "[", ":", "2", "]", ")", "\n", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Layer.paste": [[58, 64], ["Layer.Layer.output", "synthtiger.utils.paste_image", "Layer.Layer"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.output", "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.paste_image"], ["", "def", "paste", "(", "self", ",", "layer", ",", "mode", "=", "\"normal\"", ")", ":", "\n", "        ", "image", "=", "self", ".", "output", "(", ")", "\n", "utils", ".", "paste_image", "(", "layer", ".", "image", ",", "image", ",", "layer", ".", "quad", "-", "self", ".", "topleft", ",", "mode", "=", "mode", ")", "\n", "layer", "=", "Layer", "(", "image", ")", "\n", "layer", ".", "bbox", "=", "self", ".", "bbox", "\n", "return", "layer", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Layer.erase": [[65, 71], ["Layer.Layer.output", "synthtiger.utils.erase_image", "Layer.Layer"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.output", "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.erase_image"], ["", "def", "erase", "(", "self", ",", "layer", ")", ":", "\n", "        ", "image", "=", "self", ".", "output", "(", ")", "\n", "utils", ".", "erase_image", "(", "layer", ".", "image", ",", "image", ",", "layer", ".", "quad", "-", "self", ".", "topleft", ")", "\n", "layer", "=", "Layer", "(", "image", ")", "\n", "layer", ".", "bbox", "=", "self", ".", "bbox", "\n", "return", "layer", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Layer.quad": [[76, 80], ["numpy.array", "synthtiger.utils.to_bbox"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.to_bbox"], ["", "@", "quad", ".", "setter", "\n", "def", "quad", "(", "self", ",", "data", ")", ":", "\n", "        ", "self", ".", "_quad", "=", "np", ".", "array", "(", "data", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "self", ".", "_bbox", "=", "utils", ".", "to_bbox", "(", "self", ".", "_quad", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Layer.bbox": [[85, 89], ["numpy.array", "synthtiger.utils.to_quad"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.to_quad"], ["", "@", "bbox", ".", "setter", "\n", "def", "bbox", "(", "self", ",", "data", ")", ":", "\n", "        ", "self", ".", "_bbox", "=", "np", ".", "array", "(", "data", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "self", ".", "_quad", "=", "utils", ".", "to_quad", "(", "self", ".", "_bbox", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Layer.size": [[94, 99], ["None"], "methods", ["None"], ["", "@", "size", ".", "setter", "\n", "def", "size", "(", "self", ",", "data", ")", ":", "\n", "        ", "scale_x", "=", "data", "[", "0", "]", "/", "self", ".", "bbox", "[", "2", "]", "if", "self", ".", "bbox", "[", "2", "]", ">", "0", "else", "0", "\n", "scale_y", "=", "data", "[", "1", "]", "/", "self", ".", "bbox", "[", "3", "]", "if", "self", ".", "bbox", "[", "3", "]", ">", "0", "else", "0", "\n", "self", ".", "quad", "=", "self", ".", "bbox", "[", ":", "2", "]", "+", "(", "self", ".", "quad", "-", "self", ".", "bbox", "[", ":", "2", "]", ")", "*", "(", "scale_x", ",", "scale_y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Layer.width": [[104, 107], ["None"], "methods", ["None"], ["", "@", "width", ".", "setter", "\n", "def", "width", "(", "self", ",", "data", ")", ":", "\n", "        ", "self", ".", "size", "=", "(", "data", ",", "self", ".", "bbox", "[", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Layer.height": [[112, 115], ["None"], "methods", ["None"], ["", "@", "height", ".", "setter", "\n", "def", "height", "(", "self", ",", "data", ")", ":", "\n", "        ", "self", ".", "size", "=", "(", "self", ".", "bbox", "[", "2", "]", ",", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Layer.top": [[120, 123], ["None"], "methods", ["None"], ["", "@", "top", ".", "setter", "\n", "def", "top", "(", "self", ",", "data", ")", ":", "\n", "        ", "self", ".", "quad", "+=", "(", "0", ",", "data", "-", "self", ".", "bbox", "[", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Layer.bottom": [[128, 131], ["None"], "methods", ["None"], ["", "@", "bottom", ".", "setter", "\n", "def", "bottom", "(", "self", ",", "data", ")", ":", "\n", "        ", "self", ".", "quad", "+=", "(", "0", ",", "data", "-", "(", "self", ".", "bbox", "[", "1", "]", "+", "self", ".", "bbox", "[", "3", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Layer.left": [[136, 139], ["None"], "methods", ["None"], ["", "@", "left", ".", "setter", "\n", "def", "left", "(", "self", ",", "data", ")", ":", "\n", "        ", "self", ".", "quad", "+=", "(", "data", "-", "self", ".", "bbox", "[", "0", "]", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Layer.right": [[144, 147], ["None"], "methods", ["None"], ["", "@", "right", ".", "setter", "\n", "def", "right", "(", "self", ",", "data", ")", ":", "\n", "        ", "self", ".", "quad", "+=", "(", "data", "-", "(", "self", ".", "bbox", "[", "0", "]", "+", "self", ".", "bbox", "[", "2", "]", ")", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Layer.topleft": [[152, 155], ["None"], "methods", ["None"], ["", "@", "topleft", ".", "setter", "\n", "def", "topleft", "(", "self", ",", "data", ")", ":", "\n", "        ", "self", ".", "quad", "+=", "data", "-", "self", ".", "bbox", "[", ":", "2", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Layer.topright": [[160, 163], ["None"], "methods", ["None"], ["", "@", "topright", ".", "setter", "\n", "def", "topright", "(", "self", ",", "data", ")", ":", "\n", "        ", "self", ".", "quad", "+=", "data", "-", "(", "self", ".", "bbox", "[", ":", "2", "]", "+", "(", "self", ".", "bbox", "[", "2", "]", ",", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Layer.bottomleft": [[168, 171], ["None"], "methods", ["None"], ["", "@", "bottomleft", ".", "setter", "\n", "def", "bottomleft", "(", "self", ",", "data", ")", ":", "\n", "        ", "self", ".", "quad", "+=", "data", "-", "(", "self", ".", "bbox", "[", ":", "2", "]", "+", "(", "0", ",", "self", ".", "bbox", "[", "3", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Layer.bottomright": [[176, 179], ["None"], "methods", ["None"], ["", "@", "bottomright", ".", "setter", "\n", "def", "bottomright", "(", "self", ",", "data", ")", ":", "\n", "        ", "self", ".", "quad", "+=", "data", "-", "(", "self", ".", "bbox", "[", ":", "2", "]", "+", "self", ".", "bbox", "[", "2", ":", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Layer.midtop": [[184, 188], ["numpy.mean"], "methods", ["None"], ["", "@", "midtop", ".", "setter", "\n", "def", "midtop", "(", "self", ",", "data", ")", ":", "\n", "        ", "origin", "=", "np", ".", "mean", "(", "self", ".", "quad", ",", "axis", "=", "0", ")", "*", "(", "1", ",", "0", ")", "+", "(", "0", ",", "self", ".", "bbox", "[", "1", "]", ")", "\n", "self", ".", "quad", "+=", "data", "-", "origin", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Layer.midbottom": [[193, 197], ["numpy.mean"], "methods", ["None"], ["", "@", "midbottom", ".", "setter", "\n", "def", "midbottom", "(", "self", ",", "data", ")", ":", "\n", "        ", "origin", "=", "np", ".", "mean", "(", "self", ".", "quad", ",", "axis", "=", "0", ")", "*", "(", "1", ",", "0", ")", "+", "(", "0", ",", "self", ".", "bbox", "[", "1", "]", "+", "self", ".", "bbox", "[", "3", "]", ")", "\n", "self", ".", "quad", "+=", "data", "-", "origin", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Layer.midleft": [[202, 206], ["numpy.mean"], "methods", ["None"], ["", "@", "midleft", ".", "setter", "\n", "def", "midleft", "(", "self", ",", "data", ")", ":", "\n", "        ", "origin", "=", "np", ".", "mean", "(", "self", ".", "quad", ",", "axis", "=", "0", ")", "*", "(", "0", ",", "1", ")", "+", "(", "self", ".", "bbox", "[", "0", "]", ",", "0", ")", "\n", "self", ".", "quad", "+=", "data", "-", "origin", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Layer.midright": [[211, 215], ["numpy.mean"], "methods", ["None"], ["", "@", "midright", ".", "setter", "\n", "def", "midright", "(", "self", ",", "data", ")", ":", "\n", "        ", "origin", "=", "np", ".", "mean", "(", "self", ".", "quad", ",", "axis", "=", "0", ")", "*", "(", "0", ",", "1", ")", "+", "(", "self", ".", "bbox", "[", "0", "]", "+", "self", ".", "bbox", "[", "2", "]", ",", "0", ")", "\n", "self", ".", "quad", "+=", "data", "-", "origin", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Layer.center": [[220, 224], ["numpy.mean"], "methods", ["None"], ["", "@", "center", ".", "setter", "\n", "def", "center", "(", "self", ",", "data", ")", ":", "\n", "        ", "origin", "=", "np", ".", "mean", "(", "self", ".", "quad", ",", "axis", "=", "0", ")", "\n", "self", ".", "quad", "+=", "data", "-", "origin", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Layer.centerx": [[229, 233], ["numpy.mean"], "methods", ["None"], ["", "@", "centerx", ".", "setter", "\n", "def", "centerx", "(", "self", ",", "data", ")", ":", "\n", "        ", "origin", "=", "np", ".", "mean", "(", "self", ".", "quad", ",", "axis", "=", "0", ")", "[", "0", "]", "\n", "self", ".", "quad", "+=", "(", "data", "-", "origin", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Layer.centery": [[238, 242], ["numpy.mean"], "methods", ["None"], ["", "@", "centery", ".", "setter", "\n", "def", "centery", "(", "self", ",", "data", ")", ":", "\n", "        ", "origin", "=", "np", ".", "mean", "(", "self", ".", "quad", ",", "axis", "=", "0", ")", "[", "1", "]", "\n", "self", ".", "quad", "+=", "(", "0", ",", "data", "-", "origin", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.__init__": [[245, 252], ["isinstance", "list", "isinstance", "list"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "obj", ")", ":", "\n", "        ", "if", "isinstance", "(", "obj", ",", "Iterable", ")", ":", "\n", "            ", "self", ".", "layers", "=", "list", "(", "obj", ")", "\n", "", "elif", "isinstance", "(", "obj", ",", "Group", ")", ":", "\n", "            ", "self", ".", "layers", "=", "list", "(", "obj", ".", "layers", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "layers", "=", "[", "obj", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.__len__": [[253, 255], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.__getitem__": [[256, 258], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "return", "self", ".", "layers", "[", "idx", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.__setitem__": [[259, 261], ["None"], "methods", ["None"], ["", "def", "__setitem__", "(", "self", ",", "idx", ",", "layer", ")", ":", "\n", "        ", "self", ".", "layers", "[", "idx", "]", "=", "layer", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.__add__": [[262, 272], ["isinstance", "layer.Group", "isinstance", "list", "list"], "methods", ["None"], ["", "def", "__add__", "(", "self", ",", "obj", ")", ":", "\n", "        ", "if", "isinstance", "(", "obj", ",", "Iterable", ")", ":", "\n", "            ", "layers", "=", "self", ".", "layers", "+", "list", "(", "obj", ")", "\n", "", "elif", "isinstance", "(", "obj", ",", "Group", ")", ":", "\n", "            ", "layers", "=", "self", ".", "layers", "+", "list", "(", "obj", ".", "layers", ")", "\n", "", "else", ":", "\n", "            ", "layers", "=", "self", ".", "layers", "+", "[", "obj", "]", "\n", "\n", "", "group", "=", "Group", "(", "layers", ")", "\n", "return", "group", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.__sub__": [[273, 283], ["isinstance", "layer.Group", "filter", "isinstance", "filter", "filter", "list", "list"], "methods", ["None"], ["", "def", "__sub__", "(", "self", ",", "obj", ")", ":", "\n", "        ", "if", "isinstance", "(", "obj", ",", "Iterable", ")", ":", "\n", "            ", "layers", "=", "filter", "(", "lambda", "layer", ":", "layer", "not", "in", "list", "(", "obj", ")", ",", "self", ".", "layers", ")", "\n", "", "elif", "isinstance", "(", "obj", ",", "Group", ")", ":", "\n", "            ", "layers", "=", "filter", "(", "lambda", "layer", ":", "layer", "not", "in", "list", "(", "obj", ".", "layers", ")", ",", "self", ".", "layers", ")", "\n", "", "else", ":", "\n", "            ", "layers", "=", "filter", "(", "lambda", "layer", ":", "layer", "!=", "obj", ",", "self", ".", "layers", ")", "\n", "\n", "", "group", "=", "Group", "(", "layers", ")", "\n", "return", "group", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.copy": [[284, 288], ["layer.Group", "layer.copy"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.copy"], ["", "def", "copy", "(", "self", ")", ":", "\n", "        ", "layers", "=", "[", "layer", ".", "copy", "(", ")", "for", "layer", "in", "self", ".", "layers", "]", "\n", "group", "=", "Group", "(", "layers", ")", "\n", "return", "group", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.output": [[289, 297], ["synthtiger.utils.create_image", "reversed", "synthtiger.utils.paste_image"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.create_image", "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.paste_image"], ["", "def", "output", "(", "self", ",", "bbox", "=", "None", ")", ":", "\n", "        ", "if", "bbox", "is", "None", ":", "\n", "            ", "bbox", "=", "self", ".", "bbox", "\n", "\n", "", "image", "=", "utils", ".", "create_image", "(", "bbox", "[", "2", ":", "]", ")", "\n", "for", "layer", "in", "reversed", "(", "self", ".", "layers", ")", ":", "\n", "            ", "utils", ".", "paste_image", "(", "layer", ".", "image", ",", "image", ",", "layer", ".", "quad", "-", "bbox", "[", ":", "2", "]", ")", "\n", "", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.merge": [[298, 302], ["Layer.Layer", "Layer.Group.output"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.output"], ["", "def", "merge", "(", "self", ")", ":", "\n", "        ", "layer", "=", "Layer", "(", "self", ".", "output", "(", ")", ")", "\n", "layer", ".", "bbox", "=", "[", "*", "self", ".", "topleft", ",", "*", "layer", ".", "size", "]", "\n", "return", "layer", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.quad": [[307, 315], ["numpy.array", "cv2.getPerspectiveTransform", "numpy.append().dot", "numpy.append", "numpy.ones"], "methods", ["None"], ["", "@", "quad", ".", "setter", "\n", "def", "quad", "(", "self", ",", "data", ")", ":", "\n", "        ", "quad", "=", "np", ".", "array", "(", "data", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "matrix", "=", "cv2", ".", "getPerspectiveTransform", "(", "self", ".", "quad", ",", "quad", ")", "\n", "\n", "for", "layer", "in", "self", ".", "layers", ":", "\n", "            ", "quad", "=", "np", ".", "append", "(", "layer", ".", "quad", ",", "np", ".", "ones", "(", "(", "4", ",", "1", ")", ")", ",", "axis", "=", "-", "1", ")", ".", "dot", "(", "matrix", ".", "T", ")", "\n", "layer", ".", "quad", "=", "(", "quad", "/", "quad", "[", "...", ",", "2", ",", "np", ".", "newaxis", "]", ")", "[", "...", ",", ":", "2", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.bbox": [[320, 329], ["numpy.array", "synthtiger.utils.to_quad", "cv2.getPerspectiveTransform", "numpy.append().dot", "numpy.append", "numpy.ones"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.to_quad"], ["", "@", "bbox", ".", "setter", "\n", "def", "bbox", "(", "self", ",", "data", ")", ":", "\n", "        ", "bbox", "=", "np", ".", "array", "(", "data", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "quad", "=", "utils", ".", "to_quad", "(", "bbox", ")", "\n", "matrix", "=", "cv2", ".", "getPerspectiveTransform", "(", "self", ".", "quad", ",", "quad", ")", "\n", "\n", "for", "layer", "in", "self", ".", "layers", ":", "\n", "            ", "quad", "=", "np", ".", "append", "(", "layer", ".", "quad", ",", "np", ".", "ones", "(", "(", "4", ",", "1", ")", ")", ",", "axis", "=", "-", "1", ")", ".", "dot", "(", "matrix", ".", "T", ")", "\n", "layer", ".", "quad", "=", "(", "quad", "/", "quad", "[", "...", ",", "2", ",", "np", ".", "newaxis", "]", ")", "[", "...", ",", ":", "2", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.size": [[334, 339], ["None"], "methods", ["None"], ["", "@", "size", ".", "setter", "\n", "def", "size", "(", "self", ",", "data", ")", ":", "\n", "        ", "scale_x", "=", "data", "[", "0", "]", "/", "self", ".", "bbox", "[", "2", "]", "if", "self", ".", "bbox", "[", "2", "]", ">", "0", "else", "0", "\n", "scale_y", "=", "data", "[", "1", "]", "/", "self", ".", "bbox", "[", "3", "]", "if", "self", ".", "bbox", "[", "3", "]", ">", "0", "else", "0", "\n", "self", ".", "quad", "=", "self", ".", "bbox", "[", ":", "2", "]", "+", "(", "self", ".", "quad", "-", "self", ".", "bbox", "[", ":", "2", "]", ")", "*", "(", "scale_x", ",", "scale_y", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.width": [[344, 347], ["None"], "methods", ["None"], ["", "@", "width", ".", "setter", "\n", "def", "width", "(", "self", ",", "data", ")", ":", "\n", "        ", "self", ".", "size", "=", "(", "data", ",", "self", ".", "bbox", "[", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.height": [[352, 355], ["None"], "methods", ["None"], ["", "@", "height", ".", "setter", "\n", "def", "height", "(", "self", ",", "data", ")", ":", "\n", "        ", "self", ".", "size", "=", "(", "self", ".", "bbox", "[", "2", "]", ",", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.top": [[360, 363], ["None"], "methods", ["None"], ["", "@", "top", ".", "setter", "\n", "def", "top", "(", "self", ",", "data", ")", ":", "\n", "        ", "self", ".", "quad", "+=", "(", "0", ",", "data", "-", "self", ".", "bbox", "[", "1", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.bottom": [[368, 371], ["None"], "methods", ["None"], ["", "@", "bottom", ".", "setter", "\n", "def", "bottom", "(", "self", ",", "data", ")", ":", "\n", "        ", "self", ".", "quad", "+=", "(", "0", ",", "data", "-", "(", "self", ".", "bbox", "[", "1", "]", "+", "self", ".", "bbox", "[", "3", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.left": [[376, 379], ["None"], "methods", ["None"], ["", "@", "left", ".", "setter", "\n", "def", "left", "(", "self", ",", "data", ")", ":", "\n", "        ", "self", ".", "quad", "+=", "(", "data", "-", "self", ".", "bbox", "[", "0", "]", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.right": [[384, 387], ["None"], "methods", ["None"], ["", "@", "right", ".", "setter", "\n", "def", "right", "(", "self", ",", "data", ")", ":", "\n", "        ", "self", ".", "quad", "+=", "(", "data", "-", "(", "self", ".", "bbox", "[", "0", "]", "+", "self", ".", "bbox", "[", "2", "]", ")", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.topleft": [[392, 395], ["None"], "methods", ["None"], ["", "@", "topleft", ".", "setter", "\n", "def", "topleft", "(", "self", ",", "data", ")", ":", "\n", "        ", "self", ".", "quad", "+=", "data", "-", "self", ".", "bbox", "[", ":", "2", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.topright": [[400, 403], ["None"], "methods", ["None"], ["", "@", "topright", ".", "setter", "\n", "def", "topright", "(", "self", ",", "data", ")", ":", "\n", "        ", "self", ".", "quad", "+=", "data", "-", "(", "self", ".", "bbox", "[", ":", "2", "]", "+", "(", "self", ".", "bbox", "[", "2", "]", ",", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.bottomleft": [[408, 411], ["None"], "methods", ["None"], ["", "@", "bottomleft", ".", "setter", "\n", "def", "bottomleft", "(", "self", ",", "data", ")", ":", "\n", "        ", "self", ".", "quad", "+=", "data", "-", "(", "self", ".", "bbox", "[", ":", "2", "]", "+", "(", "0", ",", "self", ".", "bbox", "[", "3", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.bottomright": [[416, 419], ["None"], "methods", ["None"], ["", "@", "bottomright", ".", "setter", "\n", "def", "bottomright", "(", "self", ",", "data", ")", ":", "\n", "        ", "self", ".", "quad", "+=", "data", "-", "(", "self", ".", "bbox", "[", ":", "2", "]", "+", "self", ".", "bbox", "[", "2", ":", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.midtop": [[424, 428], ["numpy.mean"], "methods", ["None"], ["", "@", "midtop", ".", "setter", "\n", "def", "midtop", "(", "self", ",", "data", ")", ":", "\n", "        ", "origin", "=", "np", ".", "mean", "(", "self", ".", "quad", ",", "axis", "=", "0", ")", "*", "(", "1", ",", "0", ")", "+", "(", "0", ",", "self", ".", "bbox", "[", "1", "]", ")", "\n", "self", ".", "quad", "+=", "data", "-", "origin", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.midbottom": [[433, 437], ["numpy.mean"], "methods", ["None"], ["", "@", "midbottom", ".", "setter", "\n", "def", "midbottom", "(", "self", ",", "data", ")", ":", "\n", "        ", "origin", "=", "np", ".", "mean", "(", "self", ".", "quad", ",", "axis", "=", "0", ")", "*", "(", "1", ",", "0", ")", "+", "(", "0", ",", "self", ".", "bbox", "[", "1", "]", "+", "self", ".", "bbox", "[", "3", "]", ")", "\n", "self", ".", "quad", "+=", "data", "-", "origin", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.midleft": [[442, 446], ["numpy.mean"], "methods", ["None"], ["", "@", "midleft", ".", "setter", "\n", "def", "midleft", "(", "self", ",", "data", ")", ":", "\n", "        ", "origin", "=", "np", ".", "mean", "(", "self", ".", "quad", ",", "axis", "=", "0", ")", "*", "(", "0", ",", "1", ")", "+", "(", "self", ".", "bbox", "[", "0", "]", ",", "0", ")", "\n", "self", ".", "quad", "+=", "data", "-", "origin", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.midright": [[451, 455], ["numpy.mean"], "methods", ["None"], ["", "@", "midright", ".", "setter", "\n", "def", "midright", "(", "self", ",", "data", ")", ":", "\n", "        ", "origin", "=", "np", ".", "mean", "(", "self", ".", "quad", ",", "axis", "=", "0", ")", "*", "(", "0", ",", "1", ")", "+", "(", "self", ".", "bbox", "[", "0", "]", "+", "self", ".", "bbox", "[", "2", "]", ",", "0", ")", "\n", "self", ".", "quad", "+=", "data", "-", "origin", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.center": [[460, 464], ["numpy.mean"], "methods", ["None"], ["", "@", "center", ".", "setter", "\n", "def", "center", "(", "self", ",", "data", ")", ":", "\n", "        ", "origin", "=", "np", ".", "mean", "(", "self", ".", "quad", ",", "axis", "=", "0", ")", "\n", "self", ".", "quad", "+=", "data", "-", "origin", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.centerx": [[469, 473], ["numpy.mean"], "methods", ["None"], ["", "@", "centerx", ".", "setter", "\n", "def", "centerx", "(", "self", ",", "data", ")", ":", "\n", "        ", "origin", "=", "np", ".", "mean", "(", "self", ".", "quad", ",", "axis", "=", "0", ")", "[", "0", "]", "\n", "self", ".", "quad", "+=", "(", "data", "-", "origin", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.layer.Group.centery": [[478, 482], ["numpy.mean"], "methods", ["None"], ["", "@", "centery", ".", "setter", "\n", "def", "centery", "(", "self", ",", "data", ")", ":", "\n", "        ", "origin", "=", "np", ".", "mean", "(", "self", ".", "quad", ",", "axis", "=", "0", ")", "[", "1", "]", "\n", "self", ".", "quad", "+=", "(", "0", ",", "data", "-", "origin", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__": [[15, 32], ["text.replace.replace.replace", "text_layer.TextLayer._read_font", "text_layer.TextLayer._render_text", "synthtiger.layers.layer.Layer.__init__"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer._read_font", "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer._render_text", "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "text", ",", "\n", "path", ",", "\n", "size", ",", "\n", "color", "=", "(", "0", ",", "0", ",", "0", ",", "255", ")", ",", "\n", "bold", "=", "False", ",", "\n", "vertical", "=", "False", ",", "\n", ")", ":", "\n", "# https://en.wikipedia.org/wiki/Backslash", "\n", "        ", "text", "=", "text", ".", "replace", "(", "\"\\\\\"", ",", "\"\uff3c\"", ")", "\n", "\n", "font", "=", "self", ".", "_read_font", "(", "path", ",", "size", ")", "\n", "image", ",", "bbox", "=", "self", ".", "_render_text", "(", "text", ",", "font", ",", "color", ",", "bold", ",", "vertical", ")", "\n", "\n", "super", "(", ")", ".", "__init__", "(", "image", ")", "\n", "self", ".", "bbox", "=", "bbox", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer._read_font": [[33, 36], ["PIL.ImageFont.truetype"], "methods", ["None"], ["", "def", "_read_font", "(", "self", ",", "path", ",", "size", ")", ":", "\n", "        ", "font", "=", "ImageFont", ".", "truetype", "(", "path", ",", "size", "=", "size", ")", "\n", "return", "font", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer._render_text": [[37, 44], ["text_layer.TextLayer._render_hori_text", "text_layer.TextLayer._render_vert_text"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer._render_hori_text", "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer._render_vert_text"], ["", "def", "_render_text", "(", "self", ",", "text", ",", "font", ",", "color", ",", "bold", ",", "vertical", ")", ":", "\n", "        ", "if", "not", "vertical", ":", "\n", "            ", "image", ",", "bbox", "=", "self", ".", "_render_hori_text", "(", "text", ",", "font", ",", "color", ",", "bold", ")", "\n", "", "else", ":", "\n", "            ", "image", ",", "bbox", "=", "self", ".", "_render_vert_text", "(", "text", ",", "font", ",", "color", ",", "bold", ")", "\n", "\n", "", "return", "image", ",", "bbox", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer._render_hori_text": [[45, 48], ["text_layer.TextLayer._get_image"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer._get_image"], ["", "def", "_render_hori_text", "(", "self", ",", "text", ",", "font", ",", "color", ",", "bold", ")", ":", "\n", "        ", "image", ",", "bbox", "=", "self", ".", "_get_image", "(", "text", ",", "font", ",", "color", ",", "bold", ",", "False", ")", "\n", "return", "image", ",", "bbox", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer._render_vert_text": [[49, 76], ["synthtiger.utils.split_text", "max", "sum", "min", "synthtiger.utils.create_image", "zip", "text_layer.TextLayer._render_vert_char", "patches.append", "bboxes.append"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.utils.unicode_util.split_text", "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.create_image", "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer._render_vert_char"], ["", "def", "_render_vert_text", "(", "self", ",", "text", ",", "font", ",", "color", ",", "bold", ")", ":", "\n", "        ", "chars", "=", "utils", ".", "split_text", "(", "text", ",", "reorder", "=", "True", ")", "\n", "patches", "=", "[", "]", "\n", "bboxes", "=", "[", "]", "\n", "\n", "for", "char", "in", "chars", ":", "\n", "            ", "patch", ",", "bbox", "=", "self", ".", "_render_vert_char", "(", "char", ",", "font", ",", "color", ",", "bold", ")", "\n", "patches", ".", "append", "(", "patch", ")", "\n", "bboxes", ".", "append", "(", "bbox", ")", "\n", "\n", "", "width", "=", "max", "(", "[", "bbox", "[", "2", "]", "for", "bbox", "in", "bboxes", "]", ")", "\n", "height", "=", "sum", "(", "[", "bbox", "[", "3", "]", "for", "bbox", "in", "bboxes", "]", ")", "\n", "left", "=", "min", "(", "[", "bbox", "[", "0", "]", "for", "bbox", "in", "bboxes", "]", ")", "\n", "bottom", "=", "0", "\n", "\n", "for", "bbox", "in", "bboxes", ":", "\n", "            ", "bbox", "[", "0", "]", "-=", "left", "\n", "bbox", "[", "1", "]", "=", "bottom", "\n", "bottom", "+=", "bbox", "[", "3", "]", "\n", "\n", "", "image", "=", "utils", ".", "create_image", "(", "(", "width", ",", "height", ")", ")", "\n", "for", "patch", ",", "(", "x", ",", "y", ",", "w", ",", "h", ")", "in", "zip", "(", "patches", ",", "bboxes", ")", ":", "\n", "            ", "image", "[", "y", ":", "y", "+", "h", ",", "x", ":", "x", "+", "w", "]", "=", "patch", "\n", "\n", "", "bbox", "=", "[", "-", "width", "//", "2", ",", "0", ",", "width", ",", "height", "]", "\n", "\n", "return", "image", ",", "bbox", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer._render_vert_char": [[77, 93], ["synthtiger.utils.vert_rot_flip", "synthtiger.utils.vert_right_flip", "text_layer.TextLayer._render_vert_upright_char", "synthtiger.utils.to_fullwidth", "fullwidth_char.isalnum", "text_layer.TextLayer._render_vert_upright_char", "text_layer.TextLayer._render_vert_rot_flip_char", "text_layer.TextLayer._render_vert_right_flip_char", "synthtiger.utils.vert_orient", "text_layer.TextLayer._render_vert_rot_char", "synthtiger.utils.vert_orient"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.utils.unicode_util.vert_rot_flip", "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.unicode_util.vert_right_flip", "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer._render_vert_upright_char", "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.unicode_util.to_fullwidth", "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer._render_vert_upright_char", "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer._render_vert_rot_flip_char", "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer._render_vert_right_flip_char", "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.unicode_util.vert_orient", "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer._render_vert_rot_char", "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.unicode_util.vert_orient"], ["", "def", "_render_vert_char", "(", "self", ",", "char", ",", "font", ",", "color", ",", "bold", ")", ":", "\n", "        ", "fullwidth_char", "=", "utils", ".", "to_fullwidth", "(", "char", ")", "[", "0", "]", "\n", "\n", "if", "utils", ".", "vert_orient", "(", "fullwidth_char", ")", "!=", "\"Tr\"", "and", "fullwidth_char", ".", "isalnum", "(", ")", ":", "\n", "            ", "return", "self", ".", "_render_vert_upright_char", "(", "char", ",", "font", ",", "color", ",", "bold", ")", "\n", "\n", "", "if", "utils", ".", "vert_rot_flip", "(", "fullwidth_char", ")", ":", "\n", "            ", "return", "self", ".", "_render_vert_rot_flip_char", "(", "char", ",", "font", ",", "color", ",", "bold", ")", "\n", "\n", "", "if", "utils", ".", "vert_right_flip", "(", "fullwidth_char", ")", ":", "\n", "            ", "return", "self", ".", "_render_vert_right_flip_char", "(", "char", ",", "font", ",", "color", ",", "bold", ")", "\n", "\n", "", "if", "utils", ".", "vert_orient", "(", "fullwidth_char", ")", "in", "(", "\"R\"", ",", "\"Tr\"", ")", ":", "\n", "            ", "return", "self", ".", "_render_vert_rot_char", "(", "char", ",", "font", ",", "color", ",", "bold", ")", "\n", "\n", "", "return", "self", ".", "_render_vert_upright_char", "(", "char", ",", "font", ",", "color", ",", "bold", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer._render_vert_upright_char": [[94, 100], ["text_layer.TextLayer._get_image", "len"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer._get_image"], ["", "def", "_render_vert_upright_char", "(", "self", ",", "char", ",", "font", ",", "color", ",", "bold", ")", ":", "\n", "        ", "vertical", "=", "len", "(", "char", ")", "<=", "1", "\n", "image", ",", "bbox", "=", "self", ".", "_get_image", "(", "char", ",", "font", ",", "color", ",", "bold", ",", "vertical", ")", "\n", "height", ",", "width", "=", "image", ".", "shape", "[", ":", "2", "]", "\n", "bbox", "=", "[", "-", "width", "//", "2", ",", "0", ",", "width", ",", "height", "]", "\n", "return", "image", ",", "bbox", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer._render_vert_rot_char": [[101, 115], ["text_layer.TextLayer._get_image", "synthtiger.utils.fit_image", "numpy.pad", "numpy.rot90", "max", "max"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer._get_image", "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.fit_image"], ["", "def", "_render_vert_rot_char", "(", "self", ",", "char", ",", "font", ",", "color", ",", "bold", ")", ":", "\n", "        ", "image", ",", "bbox", "=", "self", ".", "_get_image", "(", "char", ",", "font", ",", "color", ",", "bold", ",", "False", ")", "\n", "image", ",", "_", "=", "utils", ".", "fit_image", "(", "image", ",", "left", "=", "False", ",", "right", "=", "False", ")", "\n", "\n", "ascent", ",", "width", "=", "-", "bbox", "[", "1", "]", ",", "bbox", "[", "2", "]", "\n", "left", "=", "max", "(", "ascent", "-", "width", ",", "0", ")", "//", "2", "\n", "right", "=", "max", "(", "ascent", "-", "width", ",", "0", ")", "-", "left", "\n", "image", "=", "np", ".", "pad", "(", "image", ",", "(", "(", "0", ",", "0", ")", ",", "(", "left", ",", "right", ")", ",", "(", "0", ",", "0", ")", ")", ")", "\n", "image", "=", "np", ".", "rot90", "(", "image", ",", "k", "=", "-", "1", ")", "\n", "\n", "height", ",", "width", "=", "image", ".", "shape", "[", ":", "2", "]", "\n", "bbox", "=", "[", "-", "width", "//", "2", ",", "0", ",", "width", ",", "height", "]", "\n", "\n", "return", "image", ",", "bbox", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer._render_vert_rot_flip_char": [[116, 130], ["text_layer.TextLayer._get_image", "numpy.pad", "numpy.rot90", "numpy.fliplr", "max", "max"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer._get_image"], ["", "def", "_render_vert_rot_flip_char", "(", "self", ",", "char", ",", "font", ",", "color", ",", "bold", ")", ":", "\n", "        ", "image", ",", "bbox", "=", "self", ".", "_get_image", "(", "char", ",", "font", ",", "color", ",", "bold", ",", "False", ")", "\n", "\n", "ascent", ",", "width", "=", "-", "bbox", "[", "1", "]", ",", "bbox", "[", "2", "]", "\n", "left", "=", "max", "(", "ascent", "-", "width", ",", "0", ")", "//", "2", "\n", "right", "=", "max", "(", "ascent", "-", "width", ",", "0", ")", "-", "left", "\n", "image", "=", "np", ".", "pad", "(", "image", ",", "(", "(", "0", ",", "0", ")", ",", "(", "left", ",", "right", ")", ",", "(", "0", ",", "0", ")", ")", ")", "\n", "image", "=", "np", ".", "rot90", "(", "image", ",", "k", "=", "-", "1", ")", "\n", "image", "=", "np", ".", "fliplr", "(", "image", ")", "\n", "\n", "height", ",", "width", "=", "image", ".", "shape", "[", ":", "2", "]", "\n", "bbox", "=", "[", "-", "width", "//", "2", ",", "0", ",", "width", ",", "height", "]", "\n", "\n", "return", "image", ",", "bbox", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer._render_vert_right_flip_char": [[131, 149], ["text_layer.TextLayer._get_bbox", "text_layer.TextLayer._get_inner_bbox", "text_layer.TextLayer._get_image", "synthtiger.utils.create_image", "max", "max", "max", "max"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer._get_bbox", "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer._get_inner_bbox", "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer._get_image", "home.repos.pwc.inspect_result.clovaai_synthtiger.utils.image_util.create_image"], ["", "def", "_render_vert_right_flip_char", "(", "self", ",", "char", ",", "font", ",", "color", ",", "bold", ")", ":", "\n", "        ", "bbox", "=", "self", ".", "_get_bbox", "(", "char", ",", "font", ",", "False", ")", "\n", "inner_bbox", "=", "self", ".", "_get_inner_bbox", "(", "char", ",", "font", ",", "bold", ",", "False", ")", "\n", "sx", ",", "sy", ",", "patch_width", ",", "patch_height", "=", "inner_bbox", "\n", "\n", "patch", ",", "_", "=", "self", ".", "_get_image", "(", "char", ",", "font", ",", "color", ",", "bold", ",", "False", ")", "\n", "patch", "=", "patch", "[", "sy", ":", "sy", "+", "patch_height", ",", "sx", ":", "sx", "+", "patch_width", "]", "\n", "patch_height", ",", "patch_width", "=", "patch", ".", "shape", "[", ":", "2", "]", "\n", "\n", "ascent", "=", "-", "bbox", "[", "1", "]", "\n", "width", ",", "height", "=", "max", "(", "ascent", ",", "patch_width", ")", ",", "max", "(", "ascent", ",", "patch_height", ")", "\n", "dx", ",", "dy", "=", "max", "(", "width", "-", "patch_width", ",", "0", ")", ",", "max", "(", "height", "-", "patch_height", "-", "sy", ",", "0", ")", "\n", "\n", "image", "=", "utils", ".", "create_image", "(", "(", "width", ",", "height", ")", ")", "\n", "image", "[", "dy", ":", "dy", "+", "patch_height", ",", "dx", ":", "dx", "+", "patch_width", "]", "=", "patch", "\n", "bbox", "=", "[", "-", "width", "//", "2", ",", "0", ",", "width", ",", "height", "]", "\n", "\n", "return", "image", ",", "bbox", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer._get_image": [[150, 169], ["text_layer.TextLayer._get_stroke_width", "text_layer.TextLayer._get_direction", "text_layer.TextLayer._get_bbox", "PIL.Image.new", "PIL.ImageDraw.Draw", "PIL.ImageDraw.Draw.text", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer._get_stroke_width", "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer._get_direction", "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer._get_bbox"], ["", "def", "_get_image", "(", "self", ",", "text", ",", "font", ",", "color", ",", "bold", ",", "vertical", ")", ":", "\n", "        ", "stroke_width", "=", "self", ".", "_get_stroke_width", "(", "bold", ")", "\n", "direction", "=", "self", ".", "_get_direction", "(", "vertical", ")", "\n", "bbox", "=", "self", ".", "_get_bbox", "(", "text", ",", "font", ",", "vertical", ")", "\n", "width", ",", "height", "=", "bbox", "[", "2", ":", "]", "\n", "\n", "image", "=", "Image", ".", "new", "(", "\"RGBA\"", ",", "(", "width", ",", "height", ")", ")", "\n", "draw", "=", "ImageDraw", ".", "Draw", "(", "image", ")", "\n", "draw", ".", "text", "(", "\n", "(", "0", ",", "0", ")", ",", "\n", "text", ",", "\n", "fill", "=", "color", ",", "\n", "font", "=", "font", ",", "\n", "stroke_width", "=", "stroke_width", ",", "\n", "direction", "=", "direction", ",", "\n", ")", "\n", "image", "=", "np", ".", "array", "(", "image", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "\n", "return", "image", ",", "bbox", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer._get_bbox": [[170, 183], ["text_layer.TextLayer._get_direction", "font.getmetrics", "font.getsize", "font.getsize"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer._get_direction"], ["", "def", "_get_bbox", "(", "self", ",", "text", ",", "font", ",", "vertical", ")", ":", "\n", "        ", "direction", "=", "self", ".", "_get_direction", "(", "vertical", ")", "\n", "\n", "if", "not", "vertical", ":", "\n", "            ", "ascent", ",", "descent", "=", "font", ".", "getmetrics", "(", ")", "\n", "width", "=", "font", ".", "getsize", "(", "text", ",", "direction", "=", "direction", ")", "[", "0", "]", "\n", "height", "=", "ascent", "+", "descent", "\n", "bbox", "=", "[", "0", ",", "-", "ascent", ",", "width", ",", "height", "]", "\n", "", "else", ":", "\n", "            ", "width", ",", "height", "=", "font", ".", "getsize", "(", "text", ",", "direction", "=", "direction", ")", "\n", "bbox", "=", "[", "-", "width", "//", "2", ",", "0", ",", "width", ",", "height", "]", "\n", "\n", "", "return", "bbox", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer._get_inner_bbox": [[184, 201], ["text_layer.TextLayer._get_stroke_width", "text_layer.TextLayer._get_direction", "font.getmask2", "mask.getbbox", "max", "max", "max", "max", "max", "max"], "methods", ["home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer._get_stroke_width", "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer._get_direction"], ["", "def", "_get_inner_bbox", "(", "self", ",", "text", ",", "font", ",", "bold", ",", "vertical", ")", ":", "\n", "        ", "stroke_width", "=", "self", ".", "_get_stroke_width", "(", "bold", ")", "\n", "direction", "=", "self", ".", "_get_direction", "(", "vertical", ")", "\n", "\n", "mask", ",", "offset", "=", "font", ".", "getmask2", "(", "\n", "text", ",", "stroke_width", "=", "stroke_width", ",", "direction", "=", "direction", "\n", ")", "\n", "bbox", "=", "mask", ".", "getbbox", "(", ")", "\n", "left", "=", "max", "(", "bbox", "[", "0", "]", "+", "offset", "[", "0", "]", ",", "0", ")", "\n", "top", "=", "max", "(", "bbox", "[", "1", "]", "+", "offset", "[", "1", "]", ",", "0", ")", "\n", "right", "=", "max", "(", "bbox", "[", "2", "]", "+", "offset", "[", "0", "]", ",", "0", ")", "\n", "bottom", "=", "max", "(", "bbox", "[", "3", "]", "+", "offset", "[", "1", "]", ",", "0", ")", "\n", "width", "=", "max", "(", "right", "-", "left", ",", "0", ")", "\n", "height", "=", "max", "(", "bottom", "-", "top", ",", "0", ")", "\n", "bbox", "=", "[", "left", ",", "top", ",", "width", ",", "height", "]", "\n", "\n", "return", "bbox", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer._get_stroke_width": [[202, 205], ["int"], "methods", ["None"], ["", "def", "_get_stroke_width", "(", "self", ",", "bold", ")", ":", "\n", "        ", "stroke_width", "=", "int", "(", "bold", ")", "\n", "return", "stroke_width", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.layers.text_layer.TextLayer._get_direction": [[206, 209], ["None"], "methods", ["None"], ["", "def", "_get_direction", "(", "self", ",", "vertical", ")", ":", "\n", "        ", "direction", "=", "\"ltr\"", "if", "not", "vertical", "else", "\"ttb\"", "\n", "return", "direction", "\n", "", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.tests.test_generation_error.test_generation_error": [[12, 35], ["pytest.mark.parametrize", "request.getfixturevalue", "range", "request.getfixturevalue.generate", "print", "traceback.format_exc"], "function", ["home.repos.pwc.inspect_result.clovaai_synthtiger.templates.template.Template.generate"], ["@", "pytest", ".", "mark", ".", "parametrize", "(", "\n", "\"template\"", ",", "\n", "[", "\n", "\"synthtiger_horizontal_template\"", ",", "\n", "\"synthtiger_vertical_template\"", ",", "\n", "\"multiline_template\"", ",", "\n", "]", ",", "\n", ")", "\n", "def", "test_generation_error", "(", "template", ",", "request", ")", ":", "\n", "    ", "\"\"\"Test for errors during data generation\"\"\"", "\n", "\n", "template", "=", "request", ".", "getfixturevalue", "(", "template", ")", "\n", "total", "=", "100", "\n", "error", "=", "0", "\n", "\n", "for", "_", "in", "range", "(", "total", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "template", ".", "generate", "(", ")", "\n", "", "except", ":", "\n", "            ", "error", "+=", "1", "\n", "print", "(", "traceback", ".", "format_exc", "(", ")", ")", "\n", "\n", "", "", "assert", "error", "<", "total", "\n", "", ""]], "home.repos.pwc.inspect_result.clovaai_synthtiger.tests.conftest.synthtiger_horizontal_template": [[12, 20], ["synthtiger.read_config", "synthtiger.read_template"], "function", ["home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.gen.read_config", "home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.gen.read_template"], ["@", "pytest", ".", "fixture", "\n", "def", "synthtiger_horizontal_template", "(", ")", ":", "\n", "    ", "\"\"\"SynthTIGER horizontal template fixture\"\"\"", "\n", "config", "=", "synthtiger", ".", "read_config", "(", "\"examples/synthtiger/config_horizontal.yaml\"", ")", "\n", "template", "=", "synthtiger", ".", "read_template", "(", "\n", "\"examples/synthtiger/template.py\"", ",", "\"SynthTiger\"", ",", "config", "\n", ")", "\n", "return", "template", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.tests.conftest.synthtiger_vertical_template": [[22, 30], ["synthtiger.read_config", "synthtiger.read_template"], "function", ["home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.gen.read_config", "home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.gen.read_template"], ["", "@", "pytest", ".", "fixture", "\n", "def", "synthtiger_vertical_template", "(", ")", ":", "\n", "    ", "\"\"\"SynthTIGER vertical template fixture\"\"\"", "\n", "config", "=", "synthtiger", ".", "read_config", "(", "\"examples/synthtiger/config_vertical.yaml\"", ")", "\n", "template", "=", "synthtiger", ".", "read_template", "(", "\n", "\"examples/synthtiger/template.py\"", ",", "\"SynthTiger\"", ",", "config", "\n", ")", "\n", "return", "template", "\n", "\n"]], "home.repos.pwc.inspect_result.clovaai_synthtiger.tests.conftest.multiline_template": [[32, 40], ["synthtiger.read_config", "synthtiger.read_template"], "function", ["home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.gen.read_config", "home.repos.pwc.inspect_result.clovaai_synthtiger.synthtiger.gen.read_template"], ["", "@", "pytest", ".", "fixture", "\n", "def", "multiline_template", "(", ")", ":", "\n", "    ", "\"\"\"Multiline template fixture\"\"\"", "\n", "config", "=", "synthtiger", ".", "read_config", "(", "\"examples/multiline/config.yaml\"", ")", "\n", "template", "=", "synthtiger", ".", "read_template", "(", "\n", "\"examples/multiline/template.py\"", ",", "\"Multiline\"", ",", "config", "\n", ")", "\n", "return", "template", "\n", "", ""]]}