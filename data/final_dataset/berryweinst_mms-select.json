{"home.repos.pwc.inspect_result.berryweinst_mms-select.None.compare_experiments.main": [[24, 59], ["parser.parse_args", "enumerate", "bokeh.layouts.column", "bokeh.io.show", "pandas.read_csv", "bokeh.plotting.figure", "itertools.cycle", "enumerate", "figures.append", "results.items", "bokeh.plotting.figure.line", "len", "next"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.show"], ["def", "main", "(", ")", ":", "\n", "    ", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "title", "=", "'comparison: '", "+", "','", ".", "join", "(", "args", ".", "experiments", ")", "\n", "x_axis_type", "=", "'linear'", "\n", "y_axis_type", "=", "'linear'", "\n", "width", "=", "800", "\n", "height", "=", "400", "\n", "line_width", "=", "2", "\n", "tools", "=", "'pan,box_zoom,wheel_zoom,box_select,hover,reset,save'", "\n", "results", "=", "{", "}", "\n", "for", "i", ",", "exp", "in", "enumerate", "(", "args", ".", "experiments", ")", ":", "\n", "        ", "if", "args", ".", "legend", "is", "not", "None", "and", "len", "(", "args", ".", "legend", ")", ">", "i", ":", "\n", "            ", "name", "=", "args", ".", "legend", "[", "i", "]", "\n", "", "else", ":", "\n", "            ", "name", "=", "exp", "\n", "", "filename", "=", "exp", "+", "'/results.csv'", "\n", "results", "[", "name", "]", "=", "pd", ".", "read_csv", "(", "filename", ",", "index_col", "=", "None", ")", "\n", "", "figures", "=", "[", "]", "\n", "for", "comp", "in", "args", ".", "compare", ":", "\n", "        ", "fig", "=", "figure", "(", "title", "=", "comp", ",", "tools", "=", "tools", ",", "\n", "width", "=", "width", ",", "height", "=", "height", ",", "\n", "x_axis_label", "=", "args", ".", "x_axis", ",", "\n", "y_axis_label", "=", "comp", ",", "\n", "x_axis_type", "=", "x_axis_type", ",", "\n", "y_axis_type", "=", "y_axis_type", ")", "\n", "colors", "=", "cycle", "(", "args", ".", "colors", ")", "\n", "for", "i", ",", "(", "name", ",", "result", ")", "in", "enumerate", "(", "results", ".", "items", "(", ")", ")", ":", "\n", "            ", "fig", ".", "line", "(", "result", "[", "args", ".", "x_axis", "]", ",", "result", "[", "comp", "]", ",", "\n", "line_width", "=", "line_width", ",", "\n", "line_color", "=", "next", "(", "colors", ")", ",", "legend", "=", "name", ")", "\n", "", "fig", ".", "legend", ".", "click_policy", "=", "\"hide\"", "\n", "figures", ".", "append", "(", "fig", ")", "\n", "\n", "", "plots", "=", "column", "(", "*", "figures", ")", "\n", "show", "(", "plots", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.main.main": [[122, 131], ["parser.parse_args", "main.main_worker", "parser.set_defaults", "parser.parse_args", "open", "json.loads", "f.read"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.None.evaluate.main_worker"], ["def", "main", "(", ")", ":", "\n", "    ", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "if", "args", ".", "config_file", "is", "not", "None", ":", "\n", "        ", "with", "open", "(", "args", ".", "config_file", ")", "as", "f", ":", "\n", "            ", "config_dict", "=", "json", ".", "loads", "(", "f", ".", "read", "(", ")", ")", "\n", "", "parser", ".", "set_defaults", "(", "**", "config_dict", ")", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "", "main_worker", "(", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.main.main_worker": [[133, 402], ["utils.misc.torch_dtypes.get", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "datetime.datetime.now().strftime", "os.path.join", "utils.log.setup_logging", "os.path.join", "utils.log.ResultsLog", "logging.info", "logging.debug", "logging.info", "model.", "logging.info", "sum", "logging.info", "criterion.to", "model.to", "getattr", "data.DataRegime", "hasattr", "logging.info", "max", "range", "torch.init_process_group", "torch.get_rank", "torch.get_world_size", "utils.log.export_args_namespace", "os.path.join", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "dict", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load.get", "torch.load.get", "model.load_state_dict", "logging.info", "os.path.isdir", "os.path.isfile", "getattr", "utils.param_filter.FilterModules().to", "isinstance", "utils.optim.OptimRegime", "optimizer.load_state_dict", "trainer.SelectionTrainer", "trainer.Trainer.set_watcher", "getattr", "trainer.Trainer.validate", "logging.info", "zip", "data.SampledDataRegime", "data.DataRegime", "data.DataRegime.set_epoch", "data.DataRegime.set_epoch", "logging.info", "trainer.Trainer.train", "trainer.Trainer.validate", "max", "utils.log.save_checkpoint", "logging.info", "dict", "dict.update", "dict.update", "trainer.validate.add", "trainer.validate.plot", "trainer.validate.plot", "trainer.validate.plot", "trainer.validate.save", "datetime.datetime.now", "list", "os.path.exists", "os.makedirs", "os.path.join", "l.nelement", "os.path.isfile", "parser.error", "trainer.validate.load", "os.path.join", "logging.info", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "model.load_state_dict", "torch.load.get", "logging.info", "logging.error", "trainer.LabelSelectTrainer", "data.DataRegime.get_loader", "defaults.update", "regimes.append", "getattr", "data.DataRegime.get_loader", "data.DataRegime.get_loader", "optimizer.state_dict", "trainer.train.keys", "trainer.validate.plot", "trainer.train.keys", "trainer.validate.plot", "range", "ast.literal_eval", "model.parameters", "os.path.join", "utils.param_filter.FilterModules", "trainer.HardNegativeTrainer", "os.path.abspath", "data.DataRegime", "model.state_dict", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "torch.cuda.device_count", "trainer.NMAugmentTrainer", "trainer.Trainer", "os.path.join", "trainer.train.items", "trainer.validate.items"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataRegime.get", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.setup_logging", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.to", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.to", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.export_args_namespace", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.load", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.load", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.load", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.load", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.load", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.load", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.load", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataRegime.get", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataRegime.get", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.OptimRegime.load_state_dict", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.to", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.OptimRegime.load_state_dict", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.Trainer.set_watcher", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.HardNegativeTrainer.validate", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataRegime.set_epoch", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataRegime.set_epoch", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.HardNegativeTrainer.train", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.HardNegativeTrainer.validate", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.save_checkpoint", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.update", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.update", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.add", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.plot", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.plot", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.plot", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.save", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.load", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.load", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.load", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.load", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.load", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.load", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.load", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.load", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.OptimRegime.load_state_dict", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataRegime.get", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataRegime.get_loader", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.update", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataRegime.get_loader", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataRegime.get_loader", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.OptimRegime.state_dict", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.plot", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.plot", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.parameters", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.OptimRegime.state_dict"], ["", "def", "main_worker", "(", "args", ")", ":", "\n", "    ", "global", "best_prec1", ",", "dtype", "\n", "best_prec1", "=", "0", "\n", "dtype", "=", "torch_dtypes", ".", "get", "(", "args", ".", "dtype", ")", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "time_stamp", "=", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "'%Y-%m-%d_%H-%M-%S'", ")", "\n", "if", "args", ".", "evaluate", ":", "\n", "        ", "args", ".", "results_dir", "=", "'/tmp'", "\n", "", "if", "args", ".", "save", "is", "''", ":", "\n", "        ", "args", ".", "save", "=", "time_stamp", "\n", "", "save_path", "=", "path", ".", "join", "(", "args", ".", "results_dir", ",", "args", ".", "save", ")", "\n", "\n", "args", ".", "distributed", "=", "args", ".", "local_rank", ">=", "0", "or", "args", ".", "world_size", ">", "1", "\n", "\n", "if", "args", ".", "distributed", ":", "\n", "        ", "dist", ".", "init_process_group", "(", "backend", "=", "args", ".", "dist_backend", ",", "init_method", "=", "args", ".", "dist_init", ",", "\n", "world_size", "=", "args", ".", "world_size", ",", "rank", "=", "args", ".", "local_rank", ")", "\n", "args", ".", "local_rank", "=", "dist", ".", "get_rank", "(", ")", "\n", "args", ".", "world_size", "=", "dist", ".", "get_world_size", "(", ")", "\n", "if", "args", ".", "dist_backend", "==", "'mpi'", ":", "\n", "# If using MPI, select all visible devices", "\n", "            ", "args", ".", "device_ids", "=", "list", "(", "range", "(", "torch", ".", "cuda", ".", "device_count", "(", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "args", ".", "device_ids", "=", "[", "args", ".", "local_rank", "]", "\n", "\n", "", "", "if", "not", "(", "args", ".", "distributed", "and", "args", ".", "local_rank", ">", "0", ")", ":", "\n", "        ", "if", "not", "path", ".", "exists", "(", "save_path", ")", ":", "\n", "            ", "makedirs", "(", "save_path", ")", "\n", "", "export_args_namespace", "(", "args", ",", "path", ".", "join", "(", "save_path", ",", "'config.json'", ")", ")", "\n", "\n", "", "setup_logging", "(", "path", ".", "join", "(", "save_path", ",", "'log.txt'", ")", ",", "\n", "resume", "=", "args", ".", "resume", "is", "not", "''", ",", "\n", "dummy", "=", "args", ".", "distributed", "and", "args", ".", "local_rank", ">", "0", ")", "\n", "\n", "results_path", "=", "path", ".", "join", "(", "save_path", ",", "'results'", ")", "\n", "results", "=", "ResultsLog", "(", "results_path", ",", "\n", "title", "=", "'Training Results - %s'", "%", "args", ".", "save", ")", "\n", "\n", "logging", ".", "info", "(", "\"saving to %s\"", ",", "save_path", ")", "\n", "logging", ".", "debug", "(", "\"run arguments: %s\"", ",", "args", ")", "\n", "logging", ".", "info", "(", "\"creating model %s\"", ",", "args", ".", "model", ")", "\n", "\n", "if", "'cuda'", "in", "args", ".", "device", "and", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "torch", ".", "cuda", ".", "manual_seed_all", "(", "args", ".", "seed", ")", "\n", "torch", ".", "cuda", ".", "set_device", "(", "args", ".", "device_ids", "[", "0", "]", ")", "\n", "cudnn", ".", "benchmark", "=", "True", "\n", "", "else", ":", "\n", "        ", "args", ".", "device_ids", "=", "None", "\n", "\n", "# create model", "\n", "", "model", "=", "models", ".", "__dict__", "[", "args", ".", "model", "]", "\n", "model_config", "=", "{", "'dataset'", ":", "args", ".", "dataset", "}", "\n", "\n", "if", "args", ".", "model_config", "is", "not", "''", ":", "\n", "        ", "model_config", "=", "dict", "(", "model_config", ",", "**", "literal_eval", "(", "args", ".", "model_config", ")", ")", "\n", "\n", "", "model", "=", "model", "(", "**", "model_config", ")", "\n", "logging", ".", "info", "(", "\"created model with configuration: %s\"", ",", "model_config", ")", "\n", "num_parameters", "=", "sum", "(", "[", "l", ".", "nelement", "(", ")", "for", "l", "in", "model", ".", "parameters", "(", ")", "]", ")", "\n", "logging", ".", "info", "(", "\"number of parameters: %d\"", ",", "num_parameters", ")", "\n", "\n", "# optionally resume from a checkpoint", "\n", "if", "args", ".", "evaluate", ":", "\n", "        ", "if", "not", "path", ".", "isfile", "(", "args", ".", "evaluate", ")", ":", "\n", "            ", "parser", ".", "error", "(", "'invalid checkpoint: {}'", ".", "format", "(", "args", ".", "evaluate", ")", ")", "\n", "", "checkpoint", "=", "torch", ".", "load", "(", "args", ".", "evaluate", ",", "map_location", "=", "\"cpu\"", ")", "\n", "# Overrride configuration with checkpoint info", "\n", "args", ".", "model", "=", "checkpoint", ".", "get", "(", "'model'", ",", "args", ".", "model", ")", "\n", "args", ".", "model_config", "=", "checkpoint", ".", "get", "(", "'config'", ",", "args", ".", "model_config", ")", "\n", "# load checkpoint", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'state_dict'", "]", ")", "\n", "logging", ".", "info", "(", "\"loaded checkpoint '%s' (epoch %s)\"", ",", "\n", "args", ".", "evaluate", ",", "checkpoint", "[", "'epoch'", "]", ")", "\n", "\n", "", "if", "args", ".", "resume", ":", "\n", "        ", "checkpoint_file", "=", "args", ".", "resume", "\n", "if", "path", ".", "isdir", "(", "checkpoint_file", ")", ":", "\n", "            ", "results", ".", "load", "(", "path", ".", "join", "(", "checkpoint_file", ",", "'results.csv'", ")", ")", "\n", "checkpoint_file", "=", "path", ".", "join", "(", "\n", "checkpoint_file", ",", "'model_best.pth.tar'", ")", "\n", "", "if", "path", ".", "isfile", "(", "checkpoint_file", ")", ":", "\n", "            ", "logging", ".", "info", "(", "\"loading checkpoint '%s'\"", ",", "args", ".", "resume", ")", "\n", "checkpoint", "=", "torch", ".", "load", "(", "checkpoint_file", ",", "map_location", "=", "\"cpu\"", ")", "\n", "if", "args", ".", "start_epoch", "<", "0", ":", "# not explicitly set", "\n", "                ", "args", ".", "start_epoch", "=", "checkpoint", "[", "'epoch'", "]", "\n", "", "best_prec1", "=", "checkpoint", "[", "'best_prec1'", "]", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'state_dict'", "]", ")", "\n", "optim_state_dict", "=", "checkpoint", ".", "get", "(", "'optim_state_dict'", ",", "None", ")", "\n", "logging", ".", "info", "(", "\"loaded checkpoint '%s' (epoch %s)\"", ",", "\n", "checkpoint_file", ",", "checkpoint", "[", "'epoch'", "]", ")", "\n", "", "else", ":", "\n", "            ", "logging", ".", "error", "(", "\"no checkpoint found at '%s'\"", ",", "args", ".", "resume", ")", "\n", "", "", "else", ":", "\n", "        ", "optim_state_dict", "=", "None", "\n", "\n", "# define loss function (criterion) and optimizer", "\n", "", "loss_params", "=", "{", "}", "\n", "if", "args", ".", "label_smoothing", ">", "0", ":", "\n", "        ", "loss_params", "[", "'smooth_eps'", "]", "=", "args", ".", "label_smoothing", "\n", "", "criterion", "=", "getattr", "(", "model", ",", "'criterion'", ",", "CrossEntropyLoss", ")", "(", "**", "loss_params", ")", "\n", "criterion", ".", "to", "(", "args", ".", "device", ",", "dtype", ")", "\n", "model", ".", "to", "(", "args", ".", "device", ",", "dtype", ")", "\n", "\n", "# Batch-norm should always be done in float", "\n", "if", "'half'", "in", "args", ".", "dtype", ":", "\n", "        ", "FilterModules", "(", "model", ",", "module", "=", "is_bn", ")", ".", "to", "(", "dtype", "=", "torch", ".", "float", ")", "\n", "\n", "# optimizer configuration", "\n", "", "optim_regime", "=", "getattr", "(", "model", ",", "'regime'", ",", "[", "{", "'epoch'", ":", "0", ",", "\n", "'optimizer'", ":", "args", ".", "optimizer", ",", "\n", "'lr'", ":", "args", ".", "lr", ",", "\n", "'momentum'", ":", "args", ".", "momentum", ",", "\n", "'weight_decay'", ":", "args", ".", "weight_decay", "}", "]", ")", "\n", "\n", "optimizer", "=", "optim_regime", "if", "isinstance", "(", "optim_regime", ",", "OptimRegime", ")", "else", "OptimRegime", "(", "model", ",", "optim_regime", ",", "use_float_copy", "=", "'half'", "in", "args", ".", "dtype", ")", "\n", "\n", "if", "optim_state_dict", "is", "not", "None", ":", "\n", "        ", "optimizer", ".", "load_state_dict", "(", "optim_state_dict", ")", "\n", "\n", "", "if", "'selective'", "in", "model_config", "[", "'regime'", "]", ":", "\n", "        ", "trainer", "=", "SelectionTrainer", "(", "model", ",", "criterion", ",", "optimizer", ",", "\n", "device_ids", "=", "args", ".", "device_ids", ",", "device", "=", "args", ".", "device", ",", "dtype", "=", "dtype", ",", "\n", "distributed", "=", "args", ".", "distributed", ",", "local_rank", "=", "args", ".", "local_rank", ",", "mixup", "=", "args", ".", "mixup", ",", "\n", "loss_scale", "=", "args", ".", "loss_scale", ",", "\n", "grad_clip", "=", "args", ".", "grad_clip", ",", "print_freq", "=", "args", ".", "print_freq", ",", "\n", "adapt_grad_norm", "=", "args", ".", "adapt_grad_norm", ",", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "calc_grad_var", "=", "args", ".", "calc_grad_var", ")", "\n", "", "elif", "'label_select'", "in", "model_config", "[", "'regime'", "]", ":", "\n", "        ", "trainer", "=", "LabelSelectTrainer", "(", "model", ",", "criterion", ",", "optimizer", ",", "\n", "device_ids", "=", "args", ".", "device_ids", ",", "device", "=", "args", ".", "device", ",", "dtype", "=", "dtype", ",", "\n", "distributed", "=", "args", ".", "distributed", ",", "local_rank", "=", "args", ".", "local_rank", ",", "mixup", "=", "args", ".", "mixup", ",", "\n", "loss_scale", "=", "args", ".", "loss_scale", ",", "\n", "grad_clip", "=", "args", ".", "grad_clip", ",", "print_freq", "=", "args", ".", "print_freq", ",", "\n", "adapt_grad_norm", "=", "args", ".", "adapt_grad_norm", ",", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "calc_grad_var", "=", "args", ".", "calc_grad_var", ")", "\n", "", "elif", "'hard_select'", "in", "model_config", "[", "'regime'", "]", ":", "\n", "        ", "trainer", "=", "HardNegativeTrainer", "(", "model", ",", "criterion", ",", "optimizer", ",", "\n", "device_ids", "=", "args", ".", "device_ids", ",", "device", "=", "args", ".", "device", ",", "dtype", "=", "dtype", ",", "\n", "distributed", "=", "args", ".", "distributed", ",", "local_rank", "=", "args", ".", "local_rank", ",", "mixup", "=", "args", ".", "mixup", ",", "\n", "loss_scale", "=", "args", ".", "loss_scale", ",", "\n", "grad_clip", "=", "args", ".", "grad_clip", ",", "print_freq", "=", "args", ".", "print_freq", ",", "\n", "adapt_grad_norm", "=", "args", ".", "adapt_grad_norm", ",", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "calc_grad_var", "=", "args", ".", "calc_grad_var", ")", "\n", "", "elif", "'augment_select'", "in", "model_config", "[", "'regime'", "]", ":", "\n", "        ", "trainer", "=", "NMAugmentTrainer", "(", "model", ",", "criterion", ",", "optimizer", ",", "\n", "device_ids", "=", "args", ".", "device_ids", ",", "device", "=", "args", ".", "device", ",", "dtype", "=", "dtype", ",", "\n", "distributed", "=", "args", ".", "distributed", ",", "local_rank", "=", "args", ".", "local_rank", ",", "mixup", "=", "args", ".", "mixup", ",", "\n", "loss_scale", "=", "args", ".", "loss_scale", ",", "\n", "grad_clip", "=", "args", ".", "grad_clip", ",", "print_freq", "=", "args", ".", "print_freq", ",", "\n", "adapt_grad_norm", "=", "args", ".", "adapt_grad_norm", ",", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "calc_grad_var", "=", "args", ".", "calc_grad_var", ")", "\n", "", "else", ":", "\n", "        ", "trainer", "=", "Trainer", "(", "model", ",", "criterion", ",", "optimizer", ",", "\n", "device_ids", "=", "args", ".", "device_ids", ",", "device", "=", "args", ".", "device", ",", "dtype", "=", "dtype", ",", "\n", "distributed", "=", "args", ".", "distributed", ",", "local_rank", "=", "args", ".", "local_rank", ",", "mixup", "=", "args", ".", "mixup", ",", "loss_scale", "=", "args", ".", "loss_scale", ",", "\n", "grad_clip", "=", "args", ".", "grad_clip", ",", "print_freq", "=", "args", ".", "print_freq", ",", "adapt_grad_norm", "=", "args", ".", "adapt_grad_norm", ",", "batch_size", "=", "args", ".", "batch_size", ",", "\n", "calc_grad_var", "=", "args", ".", "calc_grad_var", ")", "\n", "\n", "\n", "", "if", "args", ".", "tensorwatch", ":", "\n", "        ", "trainer", ".", "set_watcher", "(", "filename", "=", "path", ".", "abspath", "(", "path", ".", "join", "(", "save_path", ",", "'tensorwatch.log'", ")", ")", ",", "\n", "port", "=", "args", ".", "tensorwatch_port", ")", "\n", "\n", "# Evaluation Data loading code", "\n", "", "args", ".", "eval_batch_size", "=", "args", ".", "eval_batch_size", "if", "args", ".", "eval_batch_size", ">", "0", "else", "args", ".", "batch_size", "\n", "val_data", "=", "DataRegime", "(", "getattr", "(", "model", ",", "'data_eval_regime'", ",", "None", ")", ",", "\n", "defaults", "=", "{", "'datasets_path'", ":", "args", ".", "datasets_dir", ",", "'name'", ":", "args", ".", "dataset", ",", "'split'", ":", "'val'", ",", "'augment'", ":", "False", ",", "\n", "'input_size'", ":", "args", ".", "input_size", ",", "'batch_size'", ":", "args", ".", "eval_batch_size", ",", "'shuffle'", ":", "False", ",", "\n", "'num_workers'", ":", "args", ".", "workers", ",", "'pin_memory'", ":", "True", ",", "'drop_last'", ":", "False", "}", ")", "\n", "\n", "if", "args", ".", "evaluate", ":", "\n", "        ", "results", "=", "trainer", ".", "validate", "(", "val_data", ".", "get_loader", "(", ")", ")", "\n", "logging", ".", "info", "(", "results", ")", "\n", "return", "\n", "\n", "# Training Data loading code", "\n", "", "train_data_defaults", "=", "{", "'datasets_path'", ":", "args", ".", "datasets_dir", ",", "'name'", ":", "args", ".", "dataset", ",", "'split'", ":", "'train'", ",", "'augment'", ":", "True", ",", "\n", "'input_size'", ":", "args", ".", "input_size", ",", "'batch_size'", ":", "args", ".", "sel_batch_size", ",", "'shuffle'", ":", "True", ",", "\n", "'num_workers'", ":", "args", ".", "workers", ",", "'pin_memory'", ":", "True", ",", "'drop_last'", ":", "True", ",", "\n", "'distributed'", ":", "args", ".", "distributed", ",", "'duplicates'", ":", "args", ".", "duplicates", ",", "'autoaugment'", ":", "args", ".", "autoaugment", ",", "\n", "'cutout'", ":", "{", "'holes'", ":", "1", ",", "'length'", ":", "16", "}", "if", "args", ".", "cutout", "else", "None", "}", "\n", "\n", "if", "hasattr", "(", "model", ",", "'sampled_data_regime'", ")", ":", "\n", "        ", "sampled_data_regime", "=", "model", ".", "sampled_data_regime", "\n", "probs", ",", "regime_configs", "=", "zip", "(", "*", "sampled_data_regime", ")", "\n", "regimes", "=", "[", "]", "\n", "for", "config", "in", "regime_configs", ":", "\n", "            ", "defaults", "=", "{", "**", "train_data_defaults", "}", "\n", "defaults", ".", "update", "(", "config", ")", "\n", "regimes", ".", "append", "(", "DataRegime", "(", "None", ",", "defaults", "=", "defaults", ")", ")", "\n", "", "train_data", "=", "SampledDataRegime", "(", "regimes", ",", "probs", ")", "\n", "", "else", ":", "\n", "        ", "train_data", "=", "DataRegime", "(", "\n", "getattr", "(", "model", ",", "'data_regime'", ",", "None", ")", ",", "defaults", "=", "train_data_defaults", ")", "\n", "\n", "", "logging", ".", "info", "(", "'optimization regime: %s'", ",", "optim_regime", ")", "\n", "args", ".", "start_epoch", "=", "max", "(", "args", ".", "start_epoch", ",", "0", ")", "\n", "trainer", ".", "training_steps", "=", "args", ".", "start_epoch", "*", "500", "#len(train_data.get_loader())", "\n", "for", "epoch", "in", "range", "(", "args", ".", "start_epoch", ",", "args", ".", "epochs", ")", ":", "\n", "        ", "trainer", ".", "epoch", "=", "epoch", "\n", "train_data", ".", "set_epoch", "(", "epoch", ")", "\n", "val_data", ".", "set_epoch", "(", "epoch", ")", "\n", "logging", ".", "info", "(", "'\\nStarting Epoch: {0}, Training steps: {1}\\n'", ".", "format", "(", "epoch", "+", "1", ",", "trainer", ".", "training_steps", "+", "1", ")", ")", "\n", "\n", "# train for one epoch", "\n", "train_results", "=", "trainer", ".", "train", "(", "train_data", ".", "get_loader", "(", ")", ",", "\n", "chunk_batch", "=", "args", ".", "chunk_batch", ")", "\n", "\n", "# evaluate on validation set", "\n", "val_results", "=", "trainer", ".", "validate", "(", "val_data", ".", "get_loader", "(", ")", ")", "\n", "\n", "if", "(", "args", ".", "distributed", "and", "args", ".", "local_rank", ">", "0", ")", "or", "val_results", "is", "None", ":", "\n", "            ", "continue", "\n", "\n", "\n", "# if isinstance(trainer, LabelSelectTrainer):", "\n", "#     trainer.curr_val_acc = val_results['prec1']/100.", "\n", "\n", "# remember best prec@1 and save checkpoint", "\n", "", "is_best", "=", "val_results", "[", "'prec1'", "]", ">", "best_prec1", "\n", "best_prec1", "=", "max", "(", "val_results", "[", "'prec1'", "]", ",", "best_prec1", ")", "\n", "\n", "if", "args", ".", "drop_optim_state", ":", "\n", "            ", "optim_state_dict", "=", "None", "\n", "", "else", ":", "\n", "            ", "optim_state_dict", "=", "optimizer", ".", "state_dict", "(", ")", "\n", "\n", "", "save_checkpoint", "(", "{", "\n", "'epoch'", ":", "epoch", "+", "1", ",", "\n", "'model'", ":", "args", ".", "model", ",", "\n", "'config'", ":", "args", ".", "model_config", ",", "\n", "'state_dict'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'optim_state_dict'", ":", "optim_state_dict", ",", "\n", "'best_prec1'", ":", "best_prec1", "\n", "}", ",", "is_best", ",", "path", "=", "save_path", ",", "save_all", "=", "args", ".", "save_all", ")", "\n", "\n", "logging", ".", "info", "(", "'\\nResults - Epoch: {0}\\n'", "\n", "'Training Loss {train[loss]:.4f} \\t'", "\n", "'Training Prec@1 {train[prec1]:.3f} \\t'", "\n", "'Training Prec@5 {train[prec5]:.3f} \\t'", "\n", "'Validation Loss {val[loss]:.4f} \\t'", "\n", "'Validation Prec@1 {val[prec1]:.3f} \\t'", "\n", "'Validation Prec@5 {val[prec5]:.3f} \\t\\n'", "\n", ".", "format", "(", "epoch", "+", "1", ",", "train", "=", "train_results", ",", "val", "=", "val_results", ")", ")", "\n", "\n", "values", "=", "dict", "(", "epoch", "=", "epoch", "+", "1", ",", "steps", "=", "trainer", ".", "training_steps", ")", "\n", "values", ".", "update", "(", "{", "'training '", "+", "k", ":", "v", "for", "k", ",", "v", "in", "train_results", ".", "items", "(", ")", "}", ")", "\n", "values", ".", "update", "(", "{", "'validation '", "+", "k", ":", "v", "for", "k", ",", "v", "in", "val_results", ".", "items", "(", ")", "}", ")", "\n", "results", ".", "add", "(", "**", "values", ")", "\n", "\n", "results", ".", "plot", "(", "x", "=", "'epoch'", ",", "y", "=", "[", "'training loss'", ",", "'validation loss'", "]", ",", "\n", "legend", "=", "[", "'training'", ",", "'validation'", "]", ",", "\n", "title", "=", "'Loss'", ",", "ylabel", "=", "'loss'", ")", "\n", "results", ".", "plot", "(", "x", "=", "'epoch'", ",", "y", "=", "[", "'training error1'", ",", "'validation error1'", "]", ",", "\n", "legend", "=", "[", "'training'", ",", "'validation'", "]", ",", "\n", "title", "=", "'Error@1'", ",", "ylabel", "=", "'error %'", ")", "\n", "results", ".", "plot", "(", "x", "=", "'epoch'", ",", "y", "=", "[", "'training error5'", ",", "'validation error5'", "]", ",", "\n", "legend", "=", "[", "'training'", ",", "'validation'", "]", ",", "\n", "title", "=", "'Error@5'", ",", "ylabel", "=", "'error %'", ")", "\n", "if", "'grad'", "in", "train_results", ".", "keys", "(", ")", ":", "\n", "            ", "results", ".", "plot", "(", "x", "=", "'epoch'", ",", "y", "=", "[", "'training grad'", "]", ",", "\n", "legend", "=", "[", "'gradient L2 norm'", "]", ",", "\n", "title", "=", "'Gradient Norm'", ",", "ylabel", "=", "'value'", ")", "\n", "", "if", "'grad_var'", "in", "train_results", ".", "keys", "(", ")", ":", "\n", "            ", "results", ".", "plot", "(", "x", "=", "'epoch'", ",", "y", "=", "[", "'training grad_var'", "]", ",", "\n", "legend", "=", "[", "'gradient L2 variance'", "]", ",", "\n", "title", "=", "'Gradient variance'", ",", "ylabel", "=", "'value'", ")", "\n", "", "results", ".", "save", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.evaluate.main": [[96, 99], ["parser.parse_args", "evaluate.main_worker"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.None.evaluate.main_worker"], ["def", "main", "(", ")", ":", "\n", "    ", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "main_worker", "(", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.evaluate.main_worker": [[101, 194], ["utils.misc.torch_dtypes.get", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "datetime.datetime.now().strftime", "os.path.join", "utils.log.setup_logging", "os.path.join", "utils.log.ResultsLog", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load.get", "torch.load.get", "logging.info", "logging.debug", "logging.info", "model.", "logging.info", "sum", "logging.info", "model.load_state_dict", "logging.info", "criterion.to", "model.to", "trainer.Trainer", "data.DataRegime", "trainer.Trainer.validate", "logging.info", "print", "os.makedirs", "os.path.join", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "torch.cuda.set_device", "os.path.isfile", "parser.error", "dict", "utils.absorb_bn.search_absorb_bn", "getattr", "utils.param_filter.FilterModules().to", "data.DataRegime", "trainer.Trainer.calibrate_bn", "data.DataRegime.get_loader", "datetime.datetime.now", "os.path.exists", "l.nelement", "data.DataRegime.get_loader", "ast.literal_eval", "model.parameters", "utils.param_filter.FilterModules"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataRegime.get", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.setup_logging", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.load", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.load", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.load", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.load", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.load", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.load", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.load", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataRegime.get", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataRegime.get", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.OptimRegime.load_state_dict", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.to", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.to", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.HardNegativeTrainer.validate", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.absorb_bn.search_absorb_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.to", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.Trainer.calibrate_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataRegime.get_loader", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataRegime.get_loader", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.parameters"], ["", "def", "main_worker", "(", "args", ")", ":", "\n", "    ", "global", "best_prec1", ",", "dtype", "\n", "best_prec1", "=", "0", "\n", "dtype", "=", "torch_dtypes", ".", "get", "(", "args", ".", "dtype", ")", "\n", "torch", ".", "manual_seed", "(", "args", ".", "seed", ")", "\n", "time_stamp", "=", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "'%Y-%m-%d_%H-%M-%S'", ")", "\n", "if", "args", ".", "evaluate", ":", "\n", "        ", "args", ".", "results_dir", "=", "'/tmp'", "\n", "", "if", "args", ".", "save", "is", "''", ":", "\n", "        ", "args", ".", "save", "=", "time_stamp", "\n", "", "save_path", "=", "os", ".", "path", ".", "join", "(", "args", ".", "results_dir", ",", "args", ".", "save", ")", "\n", "\n", "args", ".", "distributed", "=", "args", ".", "local_rank", ">=", "0", "or", "args", ".", "world_size", ">", "1", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "save_path", ")", "and", "not", "(", "args", ".", "distributed", "and", "args", ".", "local_rank", ">", "0", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "save_path", ")", "\n", "\n", "", "setup_logging", "(", "os", ".", "path", ".", "join", "(", "save_path", ",", "'log.txt'", ")", ",", "\n", "resume", "=", "args", ".", "resume", "is", "not", "''", ",", "\n", "dummy", "=", "args", ".", "distributed", "and", "args", ".", "local_rank", ">", "0", ")", "\n", "\n", "results_path", "=", "os", ".", "path", ".", "join", "(", "save_path", ",", "'results'", ")", "\n", "results", "=", "ResultsLog", "(", "\n", "results_path", ",", "title", "=", "'Training Results - %s'", "%", "args", ".", "save", ")", "\n", "\n", "if", "'cuda'", "in", "args", ".", "device", "and", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "        ", "torch", ".", "cuda", ".", "manual_seed_all", "(", "args", ".", "seed", ")", "\n", "torch", ".", "cuda", ".", "set_device", "(", "args", ".", "device_ids", "[", "0", "]", ")", "\n", "cudnn", ".", "benchmark", "=", "True", "\n", "", "else", ":", "\n", "        ", "args", ".", "device_ids", "=", "None", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "isfile", "(", "args", ".", "evaluate", ")", ":", "\n", "        ", "parser", ".", "error", "(", "'invalid checkpoint: {}'", ".", "format", "(", "args", ".", "evaluate", ")", ")", "\n", "", "checkpoint", "=", "torch", ".", "load", "(", "args", ".", "evaluate", ",", "map_location", "=", "\"cpu\"", ")", "\n", "# Overrride configuration with checkpoint info", "\n", "args", ".", "model", "=", "checkpoint", ".", "get", "(", "'model'", ",", "args", ".", "model", ")", "\n", "args", ".", "model_config", "=", "checkpoint", ".", "get", "(", "'config'", ",", "args", ".", "model_config", ")", "\n", "\n", "logging", ".", "info", "(", "\"saving to %s\"", ",", "save_path", ")", "\n", "logging", ".", "debug", "(", "\"run arguments: %s\"", ",", "args", ")", "\n", "logging", ".", "info", "(", "\"creating model %s\"", ",", "args", ".", "model", ")", "\n", "\n", "# create model", "\n", "model", "=", "models", ".", "__dict__", "[", "args", ".", "model", "]", "\n", "model_config", "=", "{", "'dataset'", ":", "args", ".", "dataset", "}", "\n", "\n", "if", "args", ".", "model_config", "is", "not", "''", ":", "\n", "        ", "model_config", "=", "dict", "(", "model_config", ",", "**", "literal_eval", "(", "args", ".", "model_config", ")", ")", "\n", "\n", "", "model", "=", "model", "(", "**", "model_config", ")", "\n", "logging", ".", "info", "(", "\"created model with configuration: %s\"", ",", "model_config", ")", "\n", "num_parameters", "=", "sum", "(", "[", "l", ".", "nelement", "(", ")", "for", "l", "in", "model", ".", "parameters", "(", ")", "]", ")", "\n", "logging", ".", "info", "(", "\"number of parameters: %d\"", ",", "num_parameters", ")", "\n", "\n", "# load checkpoint", "\n", "model", ".", "load_state_dict", "(", "checkpoint", "[", "'state_dict'", "]", ")", "\n", "logging", ".", "info", "(", "\"loaded checkpoint '%s' (epoch %s)\"", ",", "\n", "args", ".", "evaluate", ",", "checkpoint", "[", "'epoch'", "]", ")", "\n", "\n", "if", "args", ".", "absorb_bn", ":", "\n", "        ", "search_absorb_bn", "(", "model", ",", "remove_bn", "=", "not", "args", ".", "calibrate_bn", ",", "verbose", "=", "True", ")", "\n", "\n", "# define loss function (criterion) and optimizer", "\n", "", "loss_params", "=", "{", "}", "\n", "if", "args", ".", "label_smoothing", ">", "0", ":", "\n", "        ", "loss_params", "[", "'smooth_eps'", "]", "=", "args", ".", "label_smoothing", "\n", "", "criterion", "=", "getattr", "(", "model", ",", "'criterion'", ",", "nn", ".", "CrossEntropyLoss", ")", "(", "**", "loss_params", ")", "\n", "criterion", ".", "to", "(", "args", ".", "device", ",", "dtype", ")", "\n", "model", ".", "to", "(", "args", ".", "device", ",", "dtype", ")", "\n", "\n", "# Batch-norm should always be done in float", "\n", "if", "'half'", "in", "args", ".", "dtype", ":", "\n", "        ", "FilterModules", "(", "model", ",", "module", "=", "is_bn", ")", ".", "to", "(", "dtype", "=", "torch", ".", "float", ")", "\n", "\n", "", "trainer", "=", "Trainer", "(", "model", ",", "criterion", ",", "\n", "device_ids", "=", "args", ".", "device_ids", ",", "device", "=", "args", ".", "device", ",", "dtype", "=", "dtype", ",", "\n", "mixup", "=", "args", ".", "mixup", ",", "print_freq", "=", "args", ".", "print_freq", ")", "\n", "\n", "# Evaluation Data loading code", "\n", "val_data", "=", "DataRegime", "(", "None", ",", "defaults", "=", "{", "'datasets_path'", ":", "args", ".", "datasets_dir", ",", "'name'", ":", "args", ".", "dataset", ",", "'split'", ":", "'val'", ",", "'augment'", ":", "args", ".", "augment", ",", "\n", "'input_size'", ":", "args", ".", "input_size", ",", "'batch_size'", ":", "args", ".", "batch_size", ",", "'shuffle'", ":", "False", ",", "'duplicates'", ":", "args", ".", "duplicates", ",", "'autoaugment'", ":", "args", ".", "autoaugment", ",", "\n", "'cutout'", ":", "{", "'holes'", ":", "1", ",", "'length'", ":", "16", "}", "if", "args", ".", "cutout", "else", "None", ",", "'num_workers'", ":", "args", ".", "workers", ",", "'pin_memory'", ":", "True", ",", "'drop_last'", ":", "False", "}", ")", "\n", "\n", "if", "args", ".", "calibrate_bn", ":", "\n", "        ", "train_data", "=", "DataRegime", "(", "None", ",", "defaults", "=", "{", "'datasets_path'", ":", "args", ".", "datasets_dir", ",", "'name'", ":", "args", ".", "dataset", ",", "'split'", ":", "'train'", ",", "'augment'", ":", "True", ",", "\n", "'input_size'", ":", "args", ".", "input_size", ",", "'batch_size'", ":", "args", ".", "batch_size", ",", "'shuffle'", ":", "True", ",", "'num_workers'", ":", "args", ".", "workers", ",", "'pin_memory'", ":", "True", ",", "'drop_last'", ":", "False", "}", ")", "\n", "trainer", ".", "calibrate_bn", "(", "train_data", ".", "get_loader", "(", ")", ",", "num_steps", "=", "200", ")", "\n", "", "results", "=", "trainer", ".", "validate", "(", "val_data", ".", "get_loader", "(", ")", ",", "\n", "average_output", "=", "args", ".", "avg_out", ")", "\n", "logging", ".", "info", "(", "results", ")", "\n", "print", "(", "results", ")", "\n", "return", "results", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.Trainer.__init__": [[56, 87], ["torch.parallel.DistributedDataParallel", "torch.parallel.DistributedDataParallel", "torch.parallel.DistributedDataParallel", "torch.DataParallel", "torch.DataParallel", "torch.DataParallel", "len"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "model", ",", "criterion", ",", "optimizer", "=", "None", ",", "\n", "device_ids", "=", "[", "0", "]", ",", "device", "=", "torch", ".", "cuda", ",", "dtype", "=", "torch", ".", "float", ",", "\n", "distributed", "=", "False", ",", "local_rank", "=", "-", "1", ",", "adapt_grad_norm", "=", "None", ",", "\n", "mixup", "=", "None", ",", "cutmix", "=", "None", ",", "loss_scale", "=", "1.", ",", "grad_clip", "=", "-", "1", ",", "print_freq", "=", "100", ")", ":", "\n", "        ", "self", ".", "_model", "=", "model", "\n", "self", ".", "criterion", "=", "criterion", "\n", "self", ".", "epoch", "=", "0", "\n", "self", ".", "training_steps", "=", "0", "\n", "self", ".", "optimizer", "=", "optimizer", "\n", "self", ".", "device", "=", "device", "\n", "self", ".", "dtype", "=", "dtype", "\n", "self", ".", "distributed", "=", "distributed", "\n", "self", ".", "local_rank", "=", "local_rank", "\n", "self", ".", "print_freq", "=", "print_freq", "\n", "self", ".", "grad_clip", "=", "grad_clip", "\n", "self", ".", "mixup", "=", "mixup", "\n", "self", ".", "cutmix", "=", "cutmix", "\n", "self", ".", "grad_scale", "=", "None", "\n", "self", ".", "loss_scale", "=", "loss_scale", "\n", "self", ".", "adapt_grad_norm", "=", "adapt_grad_norm", "\n", "self", ".", "watcher", "=", "None", "\n", "self", ".", "streams", "=", "{", "}", "\n", "\n", "if", "distributed", ":", "\n", "            ", "self", ".", "model", "=", "nn", ".", "parallel", ".", "DistributedDataParallel", "(", "model", ",", "\n", "device_ids", "=", "device_ids", ",", "\n", "output_device", "=", "device_ids", "[", "0", "]", ")", "\n", "", "elif", "device_ids", "and", "len", "(", "device_ids", ")", ">", "1", ":", "\n", "            ", "self", ".", "model", "=", "nn", ".", "DataParallel", "(", "model", ",", "device_ids", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "model", "=", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.Trainer._grad_norm": [[88, 105], ["trainer.Trainer.model.zero_grad", "zip", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "inputs_batch.chunk", "target_batch.chunk", "target.to.to.to", "inputs.to.to.to", "trainer.Trainer.model", "trainer.Trainer.criterion", "trainer.Trainer.backward", "trainer.Trainer.model.parameters", "float"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.zero_grad", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.to", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.to", "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.UniformQuantizeGrad.backward", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.parameters"], ["", "", "def", "_grad_norm", "(", "self", ",", "inputs_batch", ",", "target_batch", ",", "chunk_batch", "=", "1", ")", ":", "\n", "        ", "self", ".", "model", ".", "zero_grad", "(", ")", "\n", "for", "inputs", ",", "target", "in", "zip", "(", "inputs_batch", ".", "chunk", "(", "chunk_batch", ",", "dim", "=", "0", ")", ",", "\n", "target_batch", ".", "chunk", "(", "chunk_batch", ",", "dim", "=", "0", ")", ")", ":", "\n", "            ", "target", "=", "target", ".", "to", "(", "self", ".", "device", ")", "\n", "inputs", "=", "inputs", ".", "to", "(", "self", ".", "device", ",", "dtype", "=", "self", ".", "dtype", ")", "\n", "\n", "# compute output", "\n", "output", "=", "self", ".", "model", "(", "inputs", ")", "\n", "loss", "=", "self", ".", "criterion", "(", "output", ",", "target", ")", "\n", "\n", "if", "chunk_batch", ">", "1", ":", "\n", "                ", "loss", "=", "loss", "/", "chunk_batch", "\n", "\n", "", "loss", ".", "backward", "(", ")", "# accumulate gradient", "\n", "", "grad", "=", "clip_grad_norm_", "(", "self", ".", "model", ".", "parameters", "(", ")", ",", "float", "(", "'inf'", ")", ")", "\n", "return", "grad", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.Trainer._step": [[106, 178], ["enumerate", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "trainer.Trainer.optimizer.zero_grad", "trainer.Trainer.optimizer.update", "zip", "_mixup.mix_target.to", "input_mixup.to", "trainer.Trainer.model", "trainer.Trainer.criterion", "torch.cat.append", "torch.cat.append", "torch.cat.append", "float", "trainer.Trainer.optimizer.step", "inputs_batch.chunk", "target_batch.chunk", "trainer.Trainer.optimizer.pre_forward", "_mixup.mix_target", "isinstance", "isinstance", "_average_duplicates.detach", "trainer.Trainer.backward", "trainer.Trainer.model.parameters", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "trainer._mixup", "input_mixup", "_average_duplicates.size", "isinstance", "isinstance", "trainer._average_duplicates", "trainer.Trainer.optimizer.pre_backward", "p.grad.data.div_", "trainer.Trainer.model.parameters", "utils.mixup.CutMix", "utils.mixup.MixUp", "input_mixup.size", "trainer.Trainer.model.modules", "isinstance", "trainer._average_duplicates"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.zero_grad", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.update", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.to", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.to", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.step", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.AbsorbBN.pre_forward", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.mixup.MixUp.mix_target", "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.UniformQuantizeGrad.backward", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.parameters", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer._mixup", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer._average_duplicates", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.DropConnect.pre_backward", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.parameters", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.modules", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer._average_duplicates"], ["", "def", "_step", "(", "self", ",", "inputs_batch", ",", "target_batch", ",", "training", "=", "False", ",", "average_output", "=", "False", ",", "chunk_batch", "=", "1", ")", ":", "\n", "        ", "outputs", "=", "[", "]", "\n", "total_loss", "=", "0", "\n", "\n", "if", "training", ":", "\n", "            ", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "self", ".", "optimizer", ".", "update", "(", "self", ".", "epoch", ",", "self", ".", "training_steps", ")", "\n", "\n", "", "for", "i", ",", "(", "inputs", ",", "target", ")", "in", "enumerate", "(", "zip", "(", "inputs_batch", ".", "chunk", "(", "chunk_batch", ",", "dim", "=", "0", ")", ",", "\n", "target_batch", ".", "chunk", "(", "chunk_batch", ",", "dim", "=", "0", ")", ")", ")", ":", "\n", "            ", "target", "=", "target", ".", "to", "(", "self", ".", "device", ")", "\n", "inputs", "=", "inputs", ".", "to", "(", "self", ".", "device", ",", "dtype", "=", "self", ".", "dtype", ")", "\n", "\n", "mixup", "=", "None", "\n", "if", "training", ":", "\n", "                ", "self", ".", "optimizer", ".", "pre_forward", "(", ")", "\n", "if", "self", ".", "mixup", "is", "not", "None", "or", "self", ".", "cutmix", "is", "not", "None", ":", "\n", "                    ", "input_mixup", "=", "CutMix", "(", ")", "if", "self", ".", "cutmix", "else", "MixUp", "(", ")", "\n", "mix_val", "=", "self", ".", "mixup", "or", "self", ".", "cutmix", "\n", "mixup_modules", "=", "[", "input_mixup", "]", "# input mixup", "\n", "mixup_modules", "+=", "[", "m", "for", "m", "in", "self", ".", "model", ".", "modules", "(", ")", "\n", "if", "isinstance", "(", "m", ",", "MixUp", ")", "]", "\n", "mixup", "=", "_mixup", "(", "mixup_modules", ",", "mix_val", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "inputs", "=", "input_mixup", "(", "inputs", ")", "\n", "\n", "# compute output", "\n", "", "", "output", "=", "self", ".", "model", "(", "inputs", ")", "\n", "\n", "if", "mixup", "is", "not", "None", ":", "\n", "                ", "target", "=", "mixup", ".", "mix_target", "(", "target", ",", "output", ".", "size", "(", "-", "1", ")", ")", "\n", "\n", "", "if", "average_output", ":", "\n", "                ", "if", "isinstance", "(", "output", ",", "list", ")", "or", "isinstance", "(", "output", ",", "tuple", ")", ":", "\n", "                    ", "output", "=", "[", "_average_duplicates", "(", "out", ",", "target", ")", "if", "out", "is", "not", "None", "else", "None", "\n", "for", "out", "in", "output", "]", "\n", "", "else", ":", "\n", "                    ", "output", "=", "_average_duplicates", "(", "output", ",", "target", ")", "\n", "", "", "loss", "=", "self", ".", "criterion", "(", "output", ",", "target", ")", "\n", "grad", "=", "None", "\n", "\n", "if", "chunk_batch", ">", "1", ":", "\n", "                ", "loss", "=", "loss", "/", "chunk_batch", "\n", "\n", "", "if", "isinstance", "(", "output", ",", "list", ")", "or", "isinstance", "(", "output", ",", "tuple", ")", ":", "\n", "                ", "output", "=", "output", "[", "0", "]", "\n", "\n", "", "outputs", ".", "append", "(", "output", ".", "detach", "(", ")", ")", "\n", "total_loss", "+=", "float", "(", "loss", ")", "\n", "\n", "if", "training", ":", "\n", "                ", "if", "i", "==", "0", ":", "\n", "                    ", "self", ".", "optimizer", ".", "pre_backward", "(", ")", "\n", "", "if", "self", ".", "grad_scale", "is", "not", "None", ":", "\n", "                    ", "loss", "=", "loss", "*", "self", ".", "grad_scale", "\n", "", "if", "self", ".", "loss_scale", "is", "not", "None", ":", "\n", "                    ", "loss", "=", "loss", "*", "self", ".", "loss_scale", "\n", "", "loss", ".", "backward", "(", ")", "# accumulate gradient", "\n", "\n", "", "", "if", "training", ":", "# post gradient accumulation", "\n", "            ", "if", "self", ".", "loss_scale", "is", "not", "None", ":", "\n", "                ", "for", "p", "in", "self", ".", "model", ".", "parameters", "(", ")", ":", "\n", "                    ", "if", "p", ".", "grad", "is", "None", ":", "\n", "                        ", "continue", "\n", "", "p", ".", "grad", ".", "data", ".", "div_", "(", "self", ".", "loss_scale", ")", "\n", "\n", "", "", "if", "self", ".", "grad_clip", ">", "0", ":", "\n", "                ", "grad", "=", "clip_grad_norm_", "(", "self", ".", "model", ".", "parameters", "(", ")", ",", "self", ".", "grad_clip", ")", "\n", "", "self", ".", "optimizer", ".", "step", "(", ")", "# SGD step", "\n", "self", ".", "training_steps", "+=", "1", "\n", "\n", "", "outputs", "=", "torch", ".", "cat", "(", "outputs", ",", "dim", "=", "0", ")", "\n", "return", "outputs", ",", "total_loss", ",", "grad", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.Trainer.forward": [[179, 264], ["time.time", "enumerate", "trainer.Trainer.forward.meter_results"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "data_loader", ",", "num_steps", "=", "None", ",", "training", "=", "False", ",", "average_output", "=", "False", ",", "chunk_batch", "=", "1", ")", ":", "\n", "\n", "        ", "meters", "=", "{", "name", ":", "AverageMeter", "(", ")", "\n", "for", "name", "in", "[", "'step'", ",", "'data'", ",", "'loss'", ",", "'prec1'", ",", "'prec5'", "]", "}", "\n", "if", "training", "and", "self", ".", "grad_clip", ">", "0", ":", "\n", "            ", "meters", "[", "'grad'", "]", "=", "AverageMeter", "(", ")", "\n", "\n", "", "batch_first", "=", "True", "\n", "if", "training", "and", "isinstance", "(", "self", ".", "model", ",", "nn", ".", "DataParallel", ")", "or", "chunk_batch", ">", "1", ":", "\n", "            ", "batch_first", "=", "False", "\n", "\n", "", "def", "meter_results", "(", "meters", ")", ":", "\n", "            ", "results", "=", "{", "name", ":", "meter", ".", "avg", "for", "name", ",", "meter", "in", "meters", ".", "items", "(", ")", "}", "\n", "results", "[", "'error1'", "]", "=", "100.", "-", "results", "[", "'prec1'", "]", "\n", "results", "[", "'error5'", "]", "=", "100.", "-", "results", "[", "'prec5'", "]", "\n", "return", "results", "\n", "\n", "", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "for", "i", ",", "(", "inputs", ",", "target", ")", "in", "enumerate", "(", "data_loader", ")", ":", "\n", "            ", "duplicates", "=", "inputs", ".", "dim", "(", ")", ">", "4", "# B x D x C x H x W", "\n", "if", "training", "and", "duplicates", "and", "self", ".", "adapt_grad_norm", "is", "not", "None", "and", "i", "%", "self", ".", "adapt_grad_norm", "==", "0", ":", "\n", "                ", "grad_mean", "=", "0", "\n", "num", "=", "inputs", ".", "size", "(", "1", ")", "\n", "for", "j", "in", "range", "(", "num", ")", ":", "\n", "                    ", "grad_mean", "+=", "float", "(", "self", ".", "_grad_norm", "(", "inputs", ".", "select", "(", "1", ",", "j", ")", ",", "target", ")", ")", "\n", "", "grad_mean", "/=", "num", "\n", "grad_all", "=", "float", "(", "self", ".", "_grad_norm", "(", "\n", "*", "_flatten_duplicates", "(", "inputs", ",", "target", ",", "batch_first", ")", ")", ")", "\n", "self", ".", "grad_scale", "=", "grad_mean", "/", "grad_all", "\n", "logging", ".", "info", "(", "'New loss scale: %s'", ",", "self", ".", "grad_scale", ")", "\n", "\n", "# measure data loading time", "\n", "", "meters", "[", "'data'", "]", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "if", "duplicates", ":", "# multiple versions for each sample (dim 1)", "\n", "                ", "inputs", ",", "target", "=", "_flatten_duplicates", "(", "inputs", ",", "target", ",", "batch_first", ",", "\n", "expand_target", "=", "not", "average_output", ")", "\n", "\n", "", "output", ",", "loss", ",", "grad", "=", "self", ".", "_step", "(", "inputs", ",", "target", ",", "\n", "training", "=", "training", ",", "\n", "average_output", "=", "average_output", ",", "\n", "chunk_batch", "=", "chunk_batch", ")", "\n", "\n", "# measure accuracy and record loss", "\n", "prec1", ",", "prec5", "=", "accuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "meters", "[", "'loss'", "]", ".", "update", "(", "float", "(", "loss", ")", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "meters", "[", "'prec1'", "]", ".", "update", "(", "float", "(", "prec1", ")", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "meters", "[", "'prec5'", "]", ".", "update", "(", "float", "(", "prec5", ")", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "if", "grad", "is", "not", "None", ":", "\n", "                ", "meters", "[", "'grad'", "]", ".", "update", "(", "float", "(", "grad", ")", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "\n", "# measure elapsed time", "\n", "", "meters", "[", "'step'", "]", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "if", "i", "%", "self", ".", "print_freq", "==", "0", "or", "i", "==", "len", "(", "data_loader", ")", "-", "1", ":", "\n", "                ", "report", "=", "str", "(", "'{phase} - Epoch: [{0}][{1}/{2}]\\t'", "\n", "'Time {meters[step].val:.3f} ({meters[step].avg:.3f})\\t'", "\n", "'Data {meters[data].val:.3f} ({meters[data].avg:.3f})\\t'", "\n", "'Loss {meters[loss].val:.4f} ({meters[loss].avg:.4f})\\t'", "\n", "'Prec@1 {meters[prec1].val:.3f} ({meters[prec1].avg:.3f})\\t'", "\n", "'Prec@5 {meters[prec5].val:.3f} ({meters[prec5].avg:.3f})\\t'", "\n", ".", "format", "(", "\n", "self", ".", "epoch", ",", "i", ",", "len", "(", "data_loader", ")", ",", "\n", "phase", "=", "'TRAINING'", "if", "training", "else", "'EVALUATING'", ",", "\n", "meters", "=", "meters", ")", ")", "\n", "if", "'grad'", "in", "meters", ".", "keys", "(", ")", ":", "\n", "                    ", "report", "+=", "'Grad {meters[grad].val:.3f} ({meters[grad].avg:.3f})'", ".", "format", "(", "meters", "=", "meters", ")", "\n", "", "logging", ".", "info", "(", "report", ")", "\n", "self", ".", "observe", "(", "trainer", "=", "self", ",", "\n", "model", "=", "self", ".", "_model", ",", "\n", "optimizer", "=", "self", ".", "optimizer", ",", "\n", "data", "=", "(", "inputs", ",", "target", ")", ")", "\n", "self", ".", "stream_meters", "(", "meters", ",", "\n", "prefix", "=", "'train'", "if", "training", "else", "'eval'", ")", "\n", "if", "training", ":", "\n", "                    ", "self", ".", "write_stream", "(", "'lr'", ",", "\n", "(", "self", ".", "training_steps", ",", "self", ".", "optimizer", ".", "get_lr", "(", ")", "[", "0", "]", ")", ")", "\n", "\n", "", "", "if", "num_steps", "is", "not", "None", "and", "i", ">=", "num_steps", ":", "\n", "                ", "break", "\n", "\n", "", "", "return", "meter_results", "(", "meters", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.Trainer.train": [[265, 270], ["trainer.Trainer.model.train", "trainer.Trainer.write_stream", "trainer.Trainer.forward"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.HardNegativeTrainer.train", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.Trainer.write_stream", "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.forward"], ["", "def", "train", "(", "self", ",", "data_loader", ",", "average_output", "=", "False", ",", "chunk_batch", "=", "1", ")", ":", "\n", "# switch to train mode", "\n", "        ", "self", ".", "model", ".", "train", "(", ")", "\n", "self", ".", "write_stream", "(", "'epoch'", ",", "(", "self", ".", "training_steps", ",", "self", ".", "epoch", ")", ")", "\n", "return", "self", ".", "forward", "(", "data_loader", ",", "training", "=", "True", ",", "average_output", "=", "average_output", ",", "chunk_batch", "=", "chunk_batch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.Trainer.validate": [[271, 276], ["trainer.Trainer.model.eval", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "trainer.Trainer.forward"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.forward"], ["", "def", "validate", "(", "self", ",", "data_loader", ",", "average_output", "=", "False", ")", ":", "\n", "# switch to evaluate mode", "\n", "        ", "self", ".", "model", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "return", "self", ".", "forward", "(", "data_loader", ",", "average_output", "=", "average_output", ",", "training", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.Trainer.calibrate_bn": [[277, 286], ["trainer.Trainer.model.modules", "trainer.Trainer.model.train", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "trainer.Trainer.forward", "isinstance", "isinstance", "m.reset_running_stats"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.modules", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.HardNegativeTrainer.train", "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.forward"], ["", "", "def", "calibrate_bn", "(", "self", ",", "data_loader", ",", "num_steps", "=", "None", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "model", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", "or", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm1d", ")", ":", "\n", "                ", "m", ".", "momentum", "=", "None", "\n", "m", ".", "track_running_stats", "=", "True", "\n", "m", ".", "reset_running_stats", "(", ")", "\n", "", "", "self", ".", "model", ".", "train", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "return", "self", ".", "forward", "(", "data_loader", ",", "num_steps", "=", "num_steps", ",", "training", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.Trainer.set_watcher": [[289, 299], ["tensorwatch.Watcher", "trainer.Trainer._default_streams", "trainer.Trainer.watcher.make_notebook"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.Trainer._default_streams"], ["", "", "def", "set_watcher", "(", "self", ",", "filename", ",", "port", "=", "0", ")", ":", "\n", "        ", "if", "not", "_TENSORWATCH_AVAILABLE", ":", "\n", "            ", "return", "False", "\n", "", "if", "self", ".", "distributed", "and", "self", ".", "local_rank", ">", "0", ":", "\n", "            ", "return", "False", "\n", "", "self", ".", "watcher", "=", "tensorwatch", ".", "Watcher", "(", "filename", "=", "filename", ",", "port", "=", "port", ")", "\n", "# default streams", "\n", "self", ".", "_default_streams", "(", ")", "\n", "self", ".", "watcher", ".", "make_notebook", "(", ")", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.Trainer.get_stream": [[300, 307], ["trainer.Trainer.streams.keys", "trainer.Trainer.watcher.create_stream"], "methods", ["None"], ["", "def", "get_stream", "(", "self", ",", "name", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "self", ".", "watcher", "is", "None", ":", "\n", "            ", "return", "None", "\n", "", "if", "name", "not", "in", "self", ".", "streams", ".", "keys", "(", ")", ":", "\n", "            ", "self", ".", "streams", "[", "name", "]", "=", "self", ".", "watcher", ".", "create_stream", "(", "name", "=", "name", ",", "\n", "**", "kwargs", ")", "\n", "", "return", "self", ".", "streams", "[", "name", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.Trainer.write_stream": [[308, 312], ["trainer.Trainer.get_stream", "trainer.Trainer.write"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.Trainer.get_stream"], ["", "def", "write_stream", "(", "self", ",", "name", ",", "values", ")", ":", "\n", "        ", "stream", "=", "self", ".", "get_stream", "(", "name", ")", "\n", "if", "stream", "is", "not", "None", ":", "\n", "            ", "stream", ".", "write", "(", "values", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.Trainer.stream_meters": [[313, 325], ["meters_dict.items", "trainer.Trainer.get_stream", "trainer.Trainer.write"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.Trainer.get_stream"], ["", "", "def", "stream_meters", "(", "self", ",", "meters_dict", ",", "prefix", "=", "None", ")", ":", "\n", "        ", "if", "self", ".", "watcher", "is", "None", ":", "\n", "            ", "return", "False", "\n", "", "for", "name", ",", "value", "in", "meters_dict", ".", "items", "(", ")", ":", "\n", "            ", "if", "prefix", "is", "not", "None", ":", "\n", "                ", "name", "=", "'_'", ".", "join", "(", "[", "prefix", ",", "name", "]", ")", "\n", "", "value", "=", "value", ".", "val", "\n", "stream", "=", "self", ".", "get_stream", "(", "name", ")", "\n", "if", "stream", "is", "None", ":", "\n", "                ", "continue", "\n", "", "stream", ".", "write", "(", "(", "self", ".", "training_steps", ",", "value", ")", ")", "\n", "", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.Trainer.observe": [[326, 331], ["trainer.Trainer.watcher.observe"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.Trainer.observe"], ["", "def", "observe", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "self", ".", "watcher", "is", "None", ":", "\n", "            ", "return", "False", "\n", "", "self", ".", "watcher", ".", "observe", "(", "**", "kwargs", ")", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.Trainer._default_streams": [[332, 338], ["trainer.Trainer.get_stream", "trainer.Trainer.get_stream", "trainer.Trainer.get_stream", "trainer.Trainer.get_stream", "trainer.Trainer.get_stream"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.Trainer.get_stream", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.Trainer.get_stream", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.Trainer.get_stream", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.Trainer.get_stream", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.Trainer.get_stream"], ["", "def", "_default_streams", "(", "self", ")", ":", "\n", "        ", "self", ".", "get_stream", "(", "'train_loss'", ")", "\n", "self", ".", "get_stream", "(", "'eval_loss'", ")", "\n", "self", ".", "get_stream", "(", "'train_prec1'", ")", "\n", "self", ".", "get_stream", "(", "'eval_prec1'", ")", "\n", "self", ".", "get_stream", "(", "'lr'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.SelectionTrainer.__init__": [[342, 346], ["trainer.Trainer.__init__", "kwargs.pop", "kwargs.pop"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "kargs", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "SelectionTrainer", ",", "self", ")", ".", "__init__", "(", "*", "kargs", ",", "**", "kwargs", ")", "\n", "self", ".", "data_loader", "=", "kwargs", ".", "pop", "(", "'data_loader'", ",", "None", ")", "\n", "self", ".", "ratio", "=", "kwargs", ".", "pop", "(", "'ratio'", ",", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.SelectionTrainer.select_largest_entropy": [[348, 366], ["trainer.SelectionTrainer.model.eval", "trainer.SelectionTrainer.model.train", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "inputs.to.to.to", "trainer.SelectionTrainer.model", "torch.functional.log_softmax", "torch.functional.log_softmax", "torch.functional.log_softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "torch.sort"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.HardNegativeTrainer.train", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.to"], ["", "def", "select_largest_entropy", "(", "self", ",", "inputs", ",", "target", ")", ":", "\n", "        ", "self", ".", "model", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "inputs", "=", "inputs", ".", "to", "(", "self", ".", "device", ",", "dtype", "=", "self", ".", "dtype", ")", "\n", "logit", ",", "_", "=", "self", ".", "model", "(", "inputs", ")", "\n", "# logit = logit.sigmoid()", "\n", "# logit = logit / logit.sum(-1).unsqueeze(-1)", "\n", "# log_logit = torch.log(logit)", "\n", "log_prob_bins", "=", "nn", ".", "functional", ".", "log_softmax", "(", "logit", ",", "1", ")", "\n", "prob_bins", "=", "torch", ".", "softmax", "(", "logit", ",", "1", ")", "\n", "\n", "entropy_logit", "=", "torch", ".", "sum", "(", "-", "prob_bins", "*", "log_prob_bins", ",", "dim", "=", "1", ")", "\n", "\n", "_", ",", "max_entr_indices", "=", "torch", ".", "sort", "(", "entropy_logit", ",", "descending", "=", "True", ")", "\n", "\n", "max_entr_indices", "=", "max_entr_indices", "[", ":", "self", ".", "batch_size", "]", "\n", "", "self", ".", "model", ".", "train", "(", ")", "\n", "return", "inputs", "[", "max_entr_indices", "]", ",", "target", "[", "max_entr_indices", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.SelectionTrainer.select_mms": [[367, 388], ["trainer.SelectionTrainer.model.eval", "trainer.SelectionTrainer.model.train", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "inputs.to.to.to", "target.to.to.to", "trainer.SelectionTrainer.model", "logit.topk", "trainer.SelectionTrainer.model.fc.weight.index_select", "trainer.SelectionTrainer.model.fc.weight.index_select", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "torch.sort", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "meters[].update", "float"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.HardNegativeTrainer.train", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.to", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.to", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.update"], ["", "def", "select_mms", "(", "self", ",", "inputs", ",", "target", ",", "meters", ")", ":", "\n", "        ", "self", ".", "model", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "inputs", "=", "inputs", ".", "to", "(", "self", ".", "device", ",", "dtype", "=", "self", ".", "dtype", ")", "\n", "target", "=", "target", ".", "to", "(", "self", ".", "device", ")", "\n", "logit", ",", "_", "=", "self", ".", "model", "(", "inputs", ")", "\n", "topk_vals", ",", "pred_classes", "=", "logit", ".", "topk", "(", "2", ",", "1", ")", "\n", "\n", "\n", "w1", "=", "self", ".", "model", ".", "fc", ".", "weight", ".", "index_select", "(", "0", ",", "pred_classes", "[", ":", ",", "0", "]", ")", "\n", "w2", "=", "self", ".", "model", ".", "fc", ".", "weight", ".", "index_select", "(", "0", ",", "pred_classes", "[", ":", ",", "1", "]", ")", "\n", "entropy_logit", "=", "(", "topk_vals", "[", ":", ",", "0", "]", "-", "topk_vals", "[", ":", ",", "1", "]", ")", "/", "(", "w1", "-", "w2", ")", ".", "norm", "(", "dim", "=", "-", "1", ")", "\n", "\n", "_", ",", "min_mms_indices", "=", "torch", ".", "sort", "(", "entropy_logit", ")", "\n", "\n", "confidence_top10", "=", "torch", ".", "mean", "(", "entropy_logit", "[", "min_mms_indices", "]", "[", ":", "10", "]", ")", "\n", "meters", "[", "'confidence'", "]", ".", "update", "(", "float", "(", "confidence_top10", ")", ",", "1", ")", "\n", "\n", "min_mms_indices", "=", "min_mms_indices", "[", ":", "self", ".", "batch_size", "]", "\n", "", "self", ".", "model", ".", "train", "(", ")", "\n", "return", "inputs", "[", "min_mms_indices", "]", ",", "target", "[", "min_mms_indices", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.SelectionTrainer.forward": [[392, 484], ["len", "time.time", "enumerate", "trainer.SelectionTrainer.forward.meter_results"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "data_loader", ",", "num_steps", "=", "None", ",", "training", "=", "False", ",", "average_output", "=", "False", ",", "chunk_batch", "=", "1", ")", ":", "\n", "        ", "self", ".", "train_batches", "=", "len", "(", "data_loader", ")", "\n", "meters", "=", "{", "name", ":", "AverageMeter", "(", ")", "\n", "for", "name", "in", "[", "'step'", ",", "'data'", ",", "'loss'", ",", "'prec1'", ",", "'prec5'", ",", "'samples'", ",", "'confidence'", "]", "}", "\n", "if", "training", "and", "self", ".", "grad_clip", ">", "0", ":", "\n", "            ", "meters", "[", "'grad'", "]", "=", "AverageMeter", "(", ")", "\n", "", "if", "self", ".", "calc_grad_var", "is", "not", "None", ":", "\n", "            ", "var_meter", "=", "OnlineMeter", "(", ")", "\n", "meters", "[", "'grad_var'", "]", "=", "AverageMeter", "(", ")", "\n", "\n", "", "batch_first", "=", "True", "\n", "if", "training", "and", "isinstance", "(", "self", ".", "model", ",", "nn", ".", "DataParallel", ")", "or", "chunk_batch", ">", "1", ":", "\n", "            ", "batch_first", "=", "False", "\n", "\n", "", "def", "meter_results", "(", "meters", ")", ":", "\n", "            ", "results", "=", "{", "name", ":", "meter", ".", "avg", "for", "name", ",", "meter", "in", "meters", ".", "items", "(", ")", "}", "\n", "results", "[", "'error1'", "]", "=", "100.", "-", "results", "[", "'prec1'", "]", "\n", "results", "[", "'error5'", "]", "=", "100.", "-", "results", "[", "'prec5'", "]", "\n", "return", "results", "\n", "\n", "", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "start_lr", "=", "self", ".", "optimizer", ".", "get_lr", "(", ")", "[", "0", "]", "\n", "for", "i", ",", "(", "inputs", ",", "target", ")", "in", "enumerate", "(", "data_loader", ")", ":", "\n", "\n", "# measure data loading time", "\n", "            ", "meters", "[", "'data'", "]", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "\n", "\n", "inputs", ",", "target", "=", "self", ".", "select_1st_2nd_smallest", "(", "inputs", ",", "target", ",", "meters", ")", "\n", "\n", "\n", "output", ",", "loss", ",", "grad", "=", "self", ".", "_step", "(", "inputs", ",", "target", ",", "\n", "training", "=", "training", ",", "\n", "average_output", "=", "average_output", ",", "\n", "chunk_batch", "=", "chunk_batch", ")", "\n", "\n", "if", "self", ".", "calc_grad_var", "is", "not", "None", ":", "\n", "                ", "var_meter", ".", "update", "(", "self", ".", "collect_flatten_grads_", "(", "self", ".", "model", ".", "parameters", "(", ")", ")", ")", "\n", "if", "(", "self", ".", "training_steps", "+", "1", ")", "%", "self", ".", "calc_grad_var", "==", "0", ":", "\n", "                    ", "meters", "[", "'grad_var'", "]", ".", "update", "(", "float", "(", "var_meter", ".", "var", ".", "mean", "(", ")", ")", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "var_meter", ".", "needs_init", "=", "True", "\n", "\n", "# measure accuracy and record loss", "\n", "", "", "prec1", ",", "prec5", "=", "accuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "meters", "[", "'loss'", "]", ".", "update", "(", "float", "(", "loss", ")", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "meters", "[", "'prec1'", "]", ".", "update", "(", "float", "(", "prec1", ")", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "meters", "[", "'prec5'", "]", ".", "update", "(", "float", "(", "prec5", ")", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "# self.data_idx_set.update(set(bindices.tolist()))", "\n", "# meters['samples'].update(int(len(self.data_idx_set)), 1)", "\n", "if", "grad", "is", "not", "None", ":", "\n", "                ", "meters", "[", "'grad'", "]", ".", "update", "(", "float", "(", "grad", ")", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "\n", "# measure elapsed time", "\n", "", "meters", "[", "'step'", "]", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "if", "i", "%", "self", ".", "print_freq", "==", "0", "or", "i", "==", "len", "(", "data_loader", ")", "-", "1", ":", "\n", "                ", "report", "=", "str", "(", "'{phase} - Epoch: [{0}][{1}/{2}]\\t'", "\n", "'Time {meters[step].val:.3f} ({meters[step].avg:.3f})\\t'", "\n", "'Data {meters[data].val:.3f} ({meters[data].avg:.3f})\\t'", "\n", "'Loss {meters[loss].val:.4f} ({meters[loss].avg:.4f})\\t'", "\n", "'Prec@1 {meters[prec1].val:.3f} ({meters[prec1].avg:.3f})\\t'", "\n", "'Prec@5 {meters[prec5].val:.3f} ({meters[prec5].avg:.3f})\\t'", "\n", "# 'Samples {meters[samples].val}\\t'", "\n", "'Confidence {meters[confidence].val}\\t'", "\n", ".", "format", "(", "\n", "self", ".", "epoch", ",", "i", ",", "len", "(", "data_loader", ")", ",", "\n", "phase", "=", "'TRAINING'", "if", "training", "else", "'EVALUATING'", ",", "\n", "meters", "=", "meters", ")", ")", "\n", "if", "'grad'", "in", "meters", ".", "keys", "(", ")", ":", "\n", "                    ", "report", "+=", "'Grad {meters[grad].val:.3f} ({meters[grad].avg:.3f})'", ".", "format", "(", "meters", "=", "meters", ")", "\n", "", "logging", ".", "info", "(", "report", ")", "\n", "self", ".", "observe", "(", "trainer", "=", "self", ",", "\n", "model", "=", "self", ".", "_model", ",", "\n", "optimizer", "=", "self", ".", "optimizer", ",", "\n", "data", "=", "(", "inputs", ",", "target", ")", ")", "\n", "self", ".", "stream_meters", "(", "meters", ",", "\n", "prefix", "=", "'train'", "if", "training", "else", "'eval'", ")", "\n", "if", "training", ":", "\n", "                    ", "self", ".", "write_stream", "(", "'lr'", ",", "\n", "(", "self", ".", "training_steps", ",", "self", ".", "optimizer", ".", "get_lr", "(", ")", "[", "0", "]", ")", ")", "\n", "\n", "", "", "if", "num_steps", "is", "not", "None", "and", "i", ">=", "num_steps", ":", "\n", "                ", "break", "\n", "# if start_lr != self.optimizer.get_lr()[0] and start_lr != 0 and self.use_rand_selection == False:", "\n", "#     self.use_rand_selection = True", "\n", "#     print('Switching to random selection at epoch %d' % (self.epoch))", "\n", "# self.update_sel_ratio()", "\n", "\n", "", "", "return", "meter_results", "(", "meters", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.SelectionTrainer.train": [[486, 491], ["trainer.SelectionTrainer.model.train", "trainer.SelectionTrainer.forward"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.HardNegativeTrainer.train", "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.forward"], ["", "def", "train", "(", "self", ",", "data_loader", ",", "duplicates", "=", "1", ",", "chunk_batch", "=", "1", ")", ":", "\n", "# switch to train mode", "\n", "        ", "self", ".", "model", ".", "train", "(", ")", "\n", "\n", "return", "self", ".", "forward", "(", "data_loader", ",", "training", "=", "True", ",", "chunk_batch", "=", "chunk_batch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.SelectionTrainer.validate": [[493, 501], ["trainer.SelectionTrainer.model.eval", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "trainer.Trainer.forward"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.forward"], ["", "def", "validate", "(", "self", ",", "data_loader", ",", "duplicates", "=", "1", ")", ":", "\n", "# switch to evaluate mode", "\n", "        ", "if", "self", ".", "training_steps", "%", "(", "self", ".", "train_batches", "*", "self", ".", "ratio", ")", "==", "0", ":", "\n", "            ", "self", ".", "model", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "return", "super", "(", "SelectionTrainer", ",", "self", ")", ".", "forward", "(", "data_loader", ",", "training", "=", "False", ")", "\n", "", "", "else", ":", "\n", "            ", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.HardNegativeTrainer.__init__": [[507, 513], ["kwargs.pop", "kwargs.pop", "kwargs.pop", "kwargs.pop", "trainer.Trainer.__init__"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "kargs", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "ratio", "=", "kwargs", ".", "pop", "(", "'ratio'", ",", "10", ")", "\n", "self", ".", "nm_min", "=", "kwargs", ".", "pop", "(", "'nm_min'", ",", "0", ")", "\n", "self", ".", "nm_max", "=", "kwargs", ".", "pop", "(", "'nm_max'", ",", "1", ")", "\n", "self", ".", "nm_rate", "=", "kwargs", ".", "pop", "(", "'nm_rate'", ",", "1.", "/", "10.", ")", "\n", "super", "(", "HardNegativeTrainer", ",", "self", ")", ".", "__init__", "(", "*", "kargs", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.HardNegativeTrainer.select_hard_samples": [[516, 572], ["trainer.HardNegativeTrainer.model.eval", "trainer.HardNegativeTrainer.model.train", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "trainer.HardNegativeTrainer.model", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "torch.functional.cross_entropy", "target.unique", "torch.functional.cross_entropy.sort", "target.index_select", "list", "classes.tolist.tolist.tolist", "shuffle", "max", "trainer.HardNegativeTrainer.select_hard_samples.select_balanced"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.HardNegativeTrainer.train", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.cross_entropy.cross_entropy", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.cross_entropy.cross_entropy", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.cross_entropy.cross_entropy"], ["", "def", "select_hard_samples", "(", "self", ",", "inputs", ",", "target", ",", "meters", ")", ":", "\n", "        ", "self", ".", "model", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "\n", "            ", "logit", ",", "_", "=", "self", ".", "model", "(", "inputs", ")", "\n", "\n", "scores", "=", "nn", ".", "functional", ".", "cross_entropy", "(", "logit", ",", "target", ",", "reduction", "=", "'none'", ")", "\n", "classes", "=", "target", ".", "unique", "(", ")", "\n", "_", ",", "indices", "=", "scores", ".", "sort", "(", "dim", "=", "0", ",", "descending", "=", "True", ")", "\n", "target_ordered", "=", "target", ".", "index_select", "(", "\n", "0", ",", "indices", ".", "to", "(", "device", "=", "target", ".", "device", ")", ")", "\n", "idx_target", "=", "list", "(", "zip", "(", "indices", ".", "tolist", "(", ")", ",", "target_ordered", ".", "tolist", "(", ")", ")", ")", "\n", "classes", "=", "classes", ".", "tolist", "(", ")", "\n", "shuffle", "(", "classes", ")", "\n", "classes_items", "=", "{", "c", ":", "[", "]", "for", "c", "in", "classes", "}", "\n", "ratio_hard", "=", "max", "(", "\n", "min", "(", "self", ".", "nm_max", ",", "(", "self", ".", "epoch", "+", "1", ")", "*", "self", ".", "nm_rate", ")", ",", "self", ".", "nm_min", ")", "\n", "\n", "def", "select_balanced", "(", "num", ",", "classes_items", "=", "classes_items", ",", "classes", "=", "classes", ",", "idx_target", "=", "idx_target", ")", ":", "\n", "                ", "curr_c_num", "=", "0", "\n", "while", "sum", "(", "[", "len", "(", "c", ")", "for", "c", "in", "classes_items", ".", "values", "(", ")", "]", ")", "<", "num", ":", "\n", "                    ", "for", "i", ",", "(", "idx", ",", "c", ")", "in", "enumerate", "(", "idx_target", ")", ":", "\n", "                        ", "if", "c", "==", "classes", "[", "curr_c_num", "]", ":", "\n", "                            ", "idx_target", ".", "pop", "(", "i", ")", "\n", "classes_items", "[", "c", "]", ".", "append", "(", "idx", ")", "\n", "break", "\n", "", "", "curr_c_num", "+=", "1", "\n", "if", "curr_c_num", ">=", "len", "(", "classes", ")", ":", "\n", "                        ", "curr_c_num", "=", "0", "\n", "\n", "", "", "", "select_balanced", "(", "ratio_hard", "*", "self", ".", "batch_size", ")", "\n", "shuffle", "(", "idx_target", ")", "\n", "select_balanced", "(", "self", ".", "batch_size", ")", "\n", "\n", "indices", "=", "[", "]", "\n", "for", "v", "in", "classes_items", ".", "values", "(", ")", ":", "\n", "                ", "indices", "+=", "v", "\n", "\n", "", "indices_left", "=", "list", "(", "set", "(", "range", "(", "inputs", ".", "size", "(", "0", ")", ")", ")", "-", "set", "(", "indices", ")", ")", "\n", "\n", "shuffle", "(", "indices", ")", "\n", "max_entr_indices1", "=", "torch", ".", "tensor", "(", "indices", ",", "device", "=", "inputs", ".", "device", ",", "dtype", "=", "torch", ".", "long", ")", "\n", "# indices_left = torch.tensor(indices_left, device=inputs.device, dtype=torch.long)", "\n", "\n", "topk_vals", ",", "pred_classes", "=", "logit", "[", "max_entr_indices1", "]", ".", "topk", "(", "2", ",", "1", ")", "\n", "w1", "=", "self", ".", "model", ".", "fc", ".", "weight", ".", "index_select", "(", "0", ",", "pred_classes", "[", ":", ",", "0", "]", ")", "\n", "w2", "=", "self", ".", "model", ".", "fc", ".", "weight", ".", "index_select", "(", "0", ",", "pred_classes", "[", ":", ",", "1", "]", ")", "\n", "entropy_logit", "=", "(", "topk_vals", "[", ":", ",", "0", "]", "-", "topk_vals", "[", ":", ",", "1", "]", ")", "/", "(", "w1", "-", "w2", ")", ".", "norm", "(", "dim", "=", "-", "1", ")", "\n", "_", ",", "meas_indices", "=", "torch", ".", "sort", "(", "entropy_logit", ")", "\n", "\n", "confidence_top10", "=", "torch", ".", "mean", "(", "entropy_logit", "[", "meas_indices", "]", "[", ":", "10", "]", ")", "\n", "meters", "[", "'confidence'", "]", ".", "update", "(", "float", "(", "confidence_top10", ")", ",", "1", ")", "\n", "\n", "# max_entr_indices1 = indices[:self.batch_size]", "\n", "", "self", ".", "model", ".", "train", "(", ")", "\n", "return", "inputs", "[", "max_entr_indices1", "]", ",", "target", "[", "max_entr_indices1", "]", "#, inputs[indices_left], target[indices_left]", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.HardNegativeTrainer.forward": [[576, 669], ["len", "time.time", "enumerate", "trainer.HardNegativeTrainer.forward.meter_results"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "data_loader", ",", "num_steps", "=", "None", ",", "training", "=", "False", ",", "average_output", "=", "False", ",", "chunk_batch", "=", "1", ")", ":", "\n", "        ", "self", ".", "train_batches", "=", "len", "(", "data_loader", ")", "\n", "meters", "=", "{", "name", ":", "AverageMeter", "(", ")", "\n", "for", "name", "in", "[", "'step'", ",", "'data'", ",", "'loss'", ",", "'prec1'", ",", "'prec5'", ",", "'samples'", ",", "'confidence'", "]", "}", "\n", "if", "training", "and", "self", ".", "grad_clip", ">", "0", ":", "\n", "            ", "meters", "[", "'grad'", "]", "=", "AverageMeter", "(", ")", "\n", "", "if", "self", ".", "calc_grad_var", "is", "not", "None", ":", "\n", "            ", "var_meter", "=", "OnlineMeter", "(", ")", "\n", "meters", "[", "'grad_var'", "]", "=", "AverageMeter", "(", ")", "\n", "\n", "", "batch_first", "=", "True", "\n", "if", "training", "and", "isinstance", "(", "self", ".", "model", ",", "nn", ".", "DataParallel", ")", "or", "chunk_batch", ">", "1", ":", "\n", "            ", "batch_first", "=", "False", "\n", "\n", "", "def", "meter_results", "(", "meters", ")", ":", "\n", "            ", "results", "=", "{", "name", ":", "meter", ".", "avg", "for", "name", ",", "meter", "in", "meters", ".", "items", "(", ")", "}", "\n", "results", "[", "'error1'", "]", "=", "100.", "-", "results", "[", "'prec1'", "]", "\n", "results", "[", "'error5'", "]", "=", "100.", "-", "results", "[", "'prec5'", "]", "\n", "return", "results", "\n", "\n", "", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "\n", "for", "i", ",", "(", "inputs", ",", "target", ")", "in", "enumerate", "(", "data_loader", ")", ":", "\n", "\n", "# measure data loading time", "\n", "            ", "meters", "[", "'data'", "]", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "inputs", "=", "inputs", ".", "to", "(", "self", ".", "device", ",", "dtype", "=", "self", ".", "dtype", ")", "\n", "target", "=", "target", ".", "to", "(", "self", ".", "device", ")", "\n", "\n", "if", "training", ":", "\n", "\n", "                ", "inputs", ",", "target", "=", "self", ".", "select_hard_samples", "(", "inputs", ",", "target", ",", "meters", ")", "\n", "\n", "\n", "", "target", "=", "target", ".", "to", "(", "self", ".", "device", ")", "\n", "inputs", "=", "inputs", ".", "to", "(", "self", ".", "device", ",", "dtype", "=", "self", ".", "dtype", ")", "\n", "\n", "output", ",", "loss", ",", "grad", "=", "self", ".", "_step", "(", "inputs", ",", "target", ",", "\n", "training", "=", "training", ",", "\n", "average_output", "=", "average_output", ",", "\n", "chunk_batch", "=", "chunk_batch", ")", "\n", "\n", "if", "self", ".", "calc_grad_var", "is", "not", "None", ":", "\n", "                ", "var_meter", ".", "update", "(", "self", ".", "collect_flatten_grads_", "(", "self", ".", "model", ".", "parameters", "(", ")", ")", ")", "\n", "if", "(", "self", ".", "training_steps", "+", "1", ")", "%", "self", ".", "calc_grad_var", "==", "0", ":", "\n", "                    ", "meters", "[", "'grad_var'", "]", ".", "update", "(", "float", "(", "var_meter", ".", "var", ".", "mean", "(", ")", ")", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "var_meter", ".", "needs_init", "=", "True", "\n", "\n", "# measure accuracy and record loss", "\n", "", "", "prec1", ",", "prec5", "=", "accuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", "5", ")", ")", "\n", "meters", "[", "'loss'", "]", ".", "update", "(", "float", "(", "loss", ")", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "meters", "[", "'prec1'", "]", ".", "update", "(", "float", "(", "prec1", ")", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "meters", "[", "'prec5'", "]", ".", "update", "(", "float", "(", "prec5", ")", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "\n", "if", "grad", "is", "not", "None", ":", "\n", "                ", "meters", "[", "'grad'", "]", ".", "update", "(", "float", "(", "grad", ")", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "\n", "# measure elapsed time", "\n", "", "meters", "[", "'step'", "]", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "if", "i", "%", "self", ".", "print_freq", "==", "0", "or", "i", "==", "len", "(", "data_loader", ")", "-", "1", ":", "\n", "                ", "report", "=", "str", "(", "'{phase} - Epoch: [{0}][{1}/{2}]\\t'", "\n", "'Time {meters[step].val:.3f} ({meters[step].avg:.3f})\\t'", "\n", "'Data {meters[data].val:.3f} ({meters[data].avg:.3f})\\t'", "\n", "'Loss {meters[loss].val:.4f} ({meters[loss].avg:.4f})\\t'", "\n", "'Prec@1 {meters[prec1].val:.3f} ({meters[prec1].avg:.3f})\\t'", "\n", "'Prec@5 {meters[prec5].val:.3f} ({meters[prec5].avg:.3f})\\t'", "\n", "# 'Samples {meters[samples].val}\\t'", "\n", "'Confidence {meters[confidence].val}\\t'", "\n", ".", "format", "(", "\n", "self", ".", "epoch", ",", "i", ",", "len", "(", "data_loader", ")", ",", "\n", "phase", "=", "'TRAINING'", "if", "training", "else", "'EVALUATING'", ",", "\n", "meters", "=", "meters", ")", ")", "\n", "if", "'grad'", "in", "meters", ".", "keys", "(", ")", ":", "\n", "                    ", "report", "+=", "'Grad {meters[grad].val:.3f} ({meters[grad].avg:.3f})'", ".", "format", "(", "meters", "=", "meters", ")", "\n", "", "logging", ".", "info", "(", "report", ")", "\n", "self", ".", "observe", "(", "trainer", "=", "self", ",", "\n", "model", "=", "self", ".", "_model", ",", "\n", "optimizer", "=", "self", ".", "optimizer", ",", "\n", "data", "=", "(", "inputs", ",", "target", ")", ")", "\n", "self", ".", "stream_meters", "(", "meters", ",", "\n", "prefix", "=", "'train'", "if", "training", "else", "'eval'", ")", "\n", "if", "training", ":", "\n", "                    ", "self", ".", "write_stream", "(", "'lr'", ",", "\n", "(", "self", ".", "training_steps", ",", "self", ".", "optimizer", ".", "get_lr", "(", ")", "[", "0", "]", ")", ")", "\n", "\n", "", "", "if", "num_steps", "is", "not", "None", "and", "i", ">=", "num_steps", ":", "\n", "                ", "break", "\n", "\n", "", "", "return", "meter_results", "(", "meters", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.HardNegativeTrainer.train": [[671, 676], ["trainer.HardNegativeTrainer.model.train", "trainer.HardNegativeTrainer.forward"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.HardNegativeTrainer.train", "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.forward"], ["", "def", "train", "(", "self", ",", "data_loader", ",", "duplicates", "=", "1", ",", "chunk_batch", "=", "1", ")", ":", "\n", "# switch to train mode", "\n", "        ", "self", ".", "model", ".", "train", "(", ")", "\n", "\n", "return", "self", ".", "forward", "(", "data_loader", ",", "training", "=", "True", ",", "chunk_batch", "=", "chunk_batch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer.HardNegativeTrainer.validate": [[678, 686], ["trainer.HardNegativeTrainer.model.eval", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "trainer.Trainer.forward"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.forward"], ["", "def", "validate", "(", "self", ",", "data_loader", ",", "duplicates", "=", "1", ")", ":", "\n", "# switch to evaluate mode", "\n", "        ", "if", "self", ".", "training_steps", "%", "(", "self", ".", "train_batches", "*", "self", ".", "ratio", ")", "==", "0", ":", "\n", "            ", "self", ".", "model", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "return", "super", "(", "HardNegativeTrainer", ",", "self", ")", ".", "forward", "(", "data_loader", ",", "training", "=", "False", ")", "\n", "", "", "else", ":", "\n", "            ", "return", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer._flatten_duplicates": [[17, 30], ["inputs.transpose.size", "inputs.transpose.flatten", "inputs.transpose.transpose", "target.view().expand.flatten", "target.view().expand.view().expand", "target.view().expand.view().expand", "target.view().expand.view", "target.view().expand.view"], "function", ["None"], ["", "def", "_flatten_duplicates", "(", "inputs", ",", "target", ",", "batch_first", "=", "True", ",", "expand_target", "=", "True", ")", ":", "\n", "    ", "duplicates", "=", "inputs", ".", "size", "(", "1", ")", "\n", "if", "not", "batch_first", ":", "\n", "        ", "inputs", "=", "inputs", ".", "transpose", "(", "0", ",", "1", ")", "\n", "", "inputs", "=", "inputs", ".", "flatten", "(", "0", ",", "1", ")", "\n", "\n", "if", "expand_target", ":", "\n", "        ", "if", "batch_first", ":", "\n", "            ", "target", "=", "target", ".", "view", "(", "-", "1", ",", "1", ")", ".", "expand", "(", "-", "1", ",", "duplicates", ")", "\n", "", "else", ":", "\n", "            ", "target", "=", "target", ".", "view", "(", "1", ",", "-", "1", ")", ".", "expand", "(", "duplicates", ",", "-", "1", ")", "\n", "", "target", "=", "target", ".", "flatten", "(", "0", ",", "1", ")", "\n", "", "return", "inputs", ",", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer._average_duplicates": [[32, 42], ["target.size", "outputs.view.mean", "outputs.view.view", "outputs.view.view"], "function", ["None"], ["", "def", "_average_duplicates", "(", "outputs", ",", "target", ",", "batch_first", "=", "True", ")", ":", "\n", "    ", "\"\"\"assumes target is not expanded (target.size(0) == batch_size) \"\"\"", "\n", "batch_size", "=", "target", ".", "size", "(", "0", ")", "\n", "reduce_dim", "=", "1", "if", "batch_first", "else", "0", "\n", "if", "batch_first", ":", "\n", "        ", "outputs", "=", "outputs", ".", "view", "(", "batch_size", ",", "-", "1", ",", "*", "outputs", ".", "shape", "[", "1", ":", "]", ")", "\n", "", "else", ":", "\n", "        ", "outputs", "=", "outputs", ".", "view", "(", "-", "1", ",", "batch_size", ",", "*", "outputs", ".", "shape", "[", "1", ":", "]", ")", "\n", "", "outputs", "=", "outputs", ".", "mean", "(", "dim", "=", "reduce_dim", ")", "\n", "return", "outputs", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.trainer._mixup": [[44, 52], ["len", "mixup_layer.sample", "m.reset", "random.sample"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.mixup.CutMix.sample", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.mixup.MixUp.reset", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.mixup.CutMix.sample"], ["", "def", "_mixup", "(", "mixup_modules", ",", "alpha", ",", "batch_size", ")", ":", "\n", "    ", "mixup_layer", "=", "None", "\n", "if", "len", "(", "mixup_modules", ")", ">", "0", ":", "\n", "        ", "for", "m", "in", "mixup_modules", ":", "\n", "            ", "m", ".", "reset", "(", ")", "\n", "", "mixup_layer", "=", "sample", "(", "mixup_modules", ",", "1", ")", "[", "0", "]", "\n", "mixup_layer", ".", "sample", "(", "alpha", ",", "batch_size", ")", "\n", "", "return", "mixup_layer", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.DataRegime.__init__": [[75, 80], ["utils.regime.Regime", "data.DataRegime.get_loader", "copy.deepcopy"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataRegime.get_loader"], ["    ", "def", "__init__", "(", "self", ",", "regime", ",", "defaults", "=", "{", "}", ")", ":", "\n", "        ", "self", ".", "regime", "=", "Regime", "(", "regime", ",", "deepcopy", "(", "defaults", ")", ")", "\n", "self", ".", "epoch", "=", "0", "\n", "self", ".", "steps", "=", "None", "\n", "self", ".", "get_loader", "(", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.DataRegime.get_setting": [[81, 92], ["transform_setting.setdefault", "setting.items", "setting.items", "setting.items", "setting.items"], "methods", ["None"], ["", "def", "get_setting", "(", "self", ")", ":", "\n", "        ", "setting", "=", "self", ".", "regime", ".", "setting", "\n", "loader_setting", "=", "{", "k", ":", "v", "for", "k", ",", "\n", "v", "in", "setting", ".", "items", "(", ")", "if", "k", "in", "_DATALOADER_ARGS", "}", "\n", "data_setting", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "setting", ".", "items", "(", ")", "if", "k", "in", "_DATA_ARGS", "}", "\n", "transform_setting", "=", "{", "\n", "k", ":", "v", "for", "k", ",", "v", "in", "setting", ".", "items", "(", ")", "if", "k", "in", "_TRANSFORM_ARGS", "}", "\n", "other_setting", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "setting", ".", "items", "(", ")", "if", "k", "in", "_OTHER_ARGS", "}", "\n", "transform_setting", ".", "setdefault", "(", "'transform_name'", ",", "data_setting", "[", "'name'", "]", ")", "\n", "return", "{", "'data'", ":", "data_setting", ",", "'loader'", ":", "loader_setting", ",", "\n", "'transform'", ":", "transform_setting", ",", "'other'", ":", "other_setting", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.DataRegime.get": [[93, 95], ["data.DataRegime.regime.setting.get"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataRegime.get"], ["", "def", "get", "(", "self", ",", "key", ",", "default", "=", "None", ")", ":", "\n", "        ", "return", "self", ".", "regime", ".", "setting", ".", "get", "(", "key", ",", "default", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.DataRegime.get_loader": [[96, 115], ["data.DataRegime.regime.update", "data.DataRegime.get_setting", "preprocess.get_transform", "setting[].setdefault", "data.get_dataset", "setting[].get", "setting[].get", "torch.utils.data.DataLoader", "data.DataRegime.update", "torch.utils.data.Subset", "torch.utils.data.distributed.DistributedSampler"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.update", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataRegime.get_setting", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.preprocess.get_transform", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.get_dataset", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataRegime.get", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataRegime.get", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.update"], ["", "def", "get_loader", "(", "self", ",", "force_update", "=", "False", ",", "override_settings", "=", "None", ",", "subset_indices", "=", "None", ")", ":", "\n", "        ", "if", "force_update", "or", "self", ".", "regime", ".", "update", "(", "self", ".", "epoch", ",", "self", ".", "steps", ")", ":", "\n", "            ", "setting", "=", "self", ".", "get_setting", "(", ")", "\n", "if", "override_settings", "is", "not", "None", ":", "\n", "                ", "setting", ".", "update", "(", "override_settings", ")", "\n", "", "self", ".", "_transform", "=", "get_transform", "(", "**", "setting", "[", "'transform'", "]", ")", "\n", "setting", "[", "'data'", "]", ".", "setdefault", "(", "'transform'", ",", "self", ".", "_transform", ")", "\n", "self", ".", "_data", "=", "get_dataset", "(", "**", "setting", "[", "'data'", "]", ")", "\n", "if", "subset_indices", "is", "not", "None", ":", "\n", "                ", "self", ".", "_data", "=", "Subset", "(", "self", ".", "_data", ",", "subset_indices", ")", "\n", "", "if", "setting", "[", "'other'", "]", ".", "get", "(", "'distributed'", ",", "False", ")", ":", "\n", "                ", "setting", "[", "'loader'", "]", "[", "'sampler'", "]", "=", "DistributedSampler", "(", "self", ".", "_data", ")", "\n", "setting", "[", "'loader'", "]", "[", "'shuffle'", "]", "=", "None", "\n", "# pin-memory currently broken for distributed", "\n", "setting", "[", "'loader'", "]", "[", "'pin_memory'", "]", "=", "False", "\n", "", "self", ".", "_sampler", "=", "setting", "[", "'loader'", "]", ".", "get", "(", "'sampler'", ",", "None", ")", "\n", "self", ".", "_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "self", ".", "_data", ",", "**", "setting", "[", "'loader'", "]", ")", "\n", "", "return", "self", ".", "_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.DataRegime.set_epoch": [[116, 120], ["hasattr", "data.DataRegime._sampler.set_epoch"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataRegime.set_epoch"], ["", "def", "set_epoch", "(", "self", ",", "epoch", ")", ":", "\n", "        ", "self", ".", "epoch", "=", "epoch", "\n", "if", "self", ".", "_sampler", "is", "not", "None", "and", "hasattr", "(", "self", ".", "_sampler", ",", "'set_epoch'", ")", ":", "\n", "            ", "self", ".", "_sampler", ".", "set_epoch", "(", "epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.DataRegime.__len__": [[121, 123], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "_data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.DataRegime.__repr__": [[124, 126], ["str"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "str", "(", "self", ".", "regime", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataLoader.__init__": [[129, 132], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dl_list", ")", ":", "\n", "        ", "self", ".", "dl_list", "=", "dl_list", "\n", "self", ".", "epoch", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataLoader.generate_order": [[133, 140], ["list", "torch.Generator", "torch.Generator.manual_seed", "[].tolist", "itertools.chain", "len", "enumerate", "torch.tensor", "torch.randperm", "len"], "methods", ["None"], ["", "def", "generate_order", "(", "self", ")", ":", "\n", "\n", "        ", "order", "=", "[", "[", "idx", "]", "*", "len", "(", "dl", ")", "for", "idx", ",", "dl", "in", "enumerate", "(", "self", ".", "dl_list", ")", "]", "\n", "order", "=", "list", "(", "chain", "(", "*", "order", ")", ")", "\n", "g", "=", "torch", ".", "Generator", "(", ")", "\n", "g", ".", "manual_seed", "(", "self", ".", "epoch", ")", "\n", "return", "torch", ".", "tensor", "(", "order", ")", "[", "torch", ".", "randperm", "(", "len", "(", "order", ")", ",", "generator", "=", "g", ")", "]", ".", "tolist", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataLoader.__len__": [[141, 143], ["sum", "len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "sum", "(", "[", "len", "(", "dl", ")", "for", "dl", "in", "self", ".", "dl_list", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataLoader.__iter__": [[144, 151], ["data.SampledDataLoader.generate_order", "iter", "next"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataLoader.generate_order"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "order", "=", "self", ".", "generate_order", "(", ")", "\n", "\n", "iterators", "=", "[", "iter", "(", "dl", ")", "for", "dl", "in", "self", ".", "dl_list", "]", "\n", "for", "idx", "in", "order", ":", "\n", "            ", "yield", "next", "(", "iterators", "[", "idx", "]", ")", "\n", "", "return", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataRegime.__init__": [[154, 158], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "data_regime_list", ",", "probs", ",", "split_data", "=", "True", ")", ":", "\n", "        ", "self", ".", "probs", "=", "probs", "\n", "self", ".", "data_regime_list", "=", "data_regime_list", "\n", "self", ".", "split_data", "=", "split_data", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataRegime.get_setting": [[159, 161], ["data_regime.get_setting"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataRegime.get_setting"], ["", "def", "get_setting", "(", "self", ")", ":", "\n", "        ", "return", "[", "data_regime", ".", "get_setting", "(", ")", "for", "data_regime", "in", "self", ".", "data_regime_list", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataRegime.get": [[162, 164], ["data_regime.get"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataRegime.get"], ["", "def", "get", "(", "self", ",", "key", ",", "default", "=", "None", ")", ":", "\n", "        ", "return", "[", "data_regime", ".", "get", "(", "key", ",", "default", ")", "for", "data_regime", "in", "self", ".", "data_regime_list", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataRegime.get_loader": [[165, 186], ["data.SampledDataRegime.get_setting", "data.SampledDataLoader", "torch.randperm().tolist", "len", "len", "int", "sum", "data_regime.get_loader", "data_regime.get_loader", "data.get_dataset", "set", "torch.randperm", "zip", "enumerate", "torch._utils._accumulate"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataRegime.get_setting", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataRegime.get_loader", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataRegime.get_loader", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.get_dataset"], ["", "def", "get_loader", "(", "self", ",", "force_update", "=", "False", ")", ":", "\n", "        ", "settings", "=", "self", ".", "get_setting", "(", ")", "\n", "if", "self", ".", "split_data", ":", "\n", "            ", "dset_sizes", "=", "[", "len", "(", "get_dataset", "(", "**", "s", "[", "'data'", "]", ")", ")", "for", "s", "in", "settings", "]", "\n", "assert", "len", "(", "set", "(", "dset_sizes", ")", ")", "==", "1", ",", "\"all datasets should be same size\"", "\n", "dset_size", "=", "dset_sizes", "[", "0", "]", "\n", "lengths", "=", "[", "int", "(", "prob", "*", "dset_size", ")", "for", "prob", "in", "self", ".", "probs", "]", "\n", "lengths", "[", "-", "1", "]", "=", "dset_size", "-", "sum", "(", "lengths", "[", ":", "-", "1", "]", ")", "\n", "indices", "=", "torch", ".", "randperm", "(", "dset_size", ")", ".", "tolist", "(", ")", "\n", "indices_split", "=", "[", "indices", "[", "offset", "-", "length", ":", "offset", "]", "\n", "for", "offset", ",", "length", "in", "zip", "(", "_accumulate", "(", "lengths", ")", ",", "lengths", ")", "]", "\n", "loaders", "=", "[", "data_regime", ".", "get_loader", "(", "force_update", "=", "True", ",", "subset_indices", "=", "indices_split", "[", "i", "]", ")", "\n", "for", "i", ",", "data_regime", "in", "enumerate", "(", "self", ".", "data_regime_list", ")", "]", "\n", "", "else", ":", "\n", "            ", "loaders", "=", "[", "data_regime", ".", "get_loader", "(", "\n", "force_update", "=", "force_update", ")", "for", "data_regime", "in", "self", ".", "data_regime_list", "]", "\n", "", "self", ".", "_loader", "=", "SampledDataLoader", "(", "loaders", ")", "\n", "self", ".", "_loader", ".", "epoch", "=", "self", ".", "epoch", "\n", "\n", "return", "self", ".", "_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataRegime.set_epoch": [[187, 194], ["hasattr", "hasattr", "data_regime._sampler.set_epoch"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataRegime.set_epoch"], ["", "def", "set_epoch", "(", "self", ",", "epoch", ")", ":", "\n", "        ", "self", ".", "epoch", "=", "epoch", "\n", "if", "hasattr", "(", "self", ",", "'_loader'", ")", ":", "\n", "            ", "self", ".", "_loader", ".", "epoch", "=", "epoch", "\n", "", "for", "data_regime", "in", "self", ".", "data_regime_list", ":", "\n", "            ", "if", "data_regime", ".", "_sampler", "is", "not", "None", "and", "hasattr", "(", "data_regime", ".", "_sampler", ",", "'set_epoch'", ")", ":", "\n", "                ", "data_regime", ".", "_sampler", ".", "set_epoch", "(", "epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataRegime.__len__": [[195, 198], ["sum", "len"], "methods", ["None"], ["", "", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "sum", "(", "[", "len", "(", "data_regime", ".", "_data", ")", "\n", "for", "data_regime", "in", "self", ".", "data_regime_list", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataRegime.__repr__": [[199, 204], ["zip"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "print_str", "=", "'Sampled Data Regime:\\n'", "\n", "for", "p", ",", "config", "in", "zip", "(", "self", ".", "probs", ",", "self", ".", "data_regime_list", ")", ":", "\n", "            ", "print_str", "+=", "'w.p. %s:  %s\\n'", "%", "(", "p", ",", "config", ")", "\n", "", "return", "print_str", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.get_dataset": [[17, 62], ["os.path.join", "os.path.expanduser", "torchvision.CIFAR10", "torchvision.CIFAR100", "torchvision.MNIST", "torchvision.STL10", "torchvision.ImageFolder", "os.path.join", "os.path.join", "utils.dataset.IndexedFileDataset", "os.path.join", "os.path.join", "fname.split"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset.LinedTextDataset.split"], ["def", "get_dataset", "(", "name", ",", "split", "=", "'train'", ",", "transform", "=", "None", ",", "\n", "target_transform", "=", "None", ",", "download", "=", "True", ",", "datasets_path", "=", "'~/Datasets'", ")", ":", "\n", "    ", "train", "=", "(", "split", "==", "'train'", ")", "\n", "root", "=", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "expanduser", "(", "datasets_path", ")", ",", "name", ")", "\n", "if", "name", "==", "'cifar10'", ":", "\n", "        ", "return", "datasets", ".", "CIFAR10", "(", "root", "=", "root", ",", "\n", "train", "=", "train", ",", "\n", "transform", "=", "transform", ",", "\n", "target_transform", "=", "target_transform", ",", "\n", "download", "=", "download", ")", "\n", "", "elif", "name", "==", "'cifar100'", ":", "\n", "        ", "return", "datasets", ".", "CIFAR100", "(", "root", "=", "root", ",", "\n", "train", "=", "train", ",", "\n", "transform", "=", "transform", ",", "\n", "target_transform", "=", "target_transform", ",", "\n", "download", "=", "download", ")", "\n", "", "elif", "name", "==", "'mnist'", ":", "\n", "        ", "return", "datasets", ".", "MNIST", "(", "root", "=", "root", ",", "\n", "train", "=", "train", ",", "\n", "transform", "=", "transform", ",", "\n", "target_transform", "=", "target_transform", ",", "\n", "download", "=", "download", ")", "\n", "", "elif", "name", "==", "'stl10'", ":", "\n", "        ", "return", "datasets", ".", "STL10", "(", "root", "=", "root", ",", "\n", "split", "=", "split", ",", "\n", "transform", "=", "transform", ",", "\n", "target_transform", "=", "target_transform", ",", "\n", "download", "=", "download", ")", "\n", "", "elif", "name", "==", "'imagenet'", ":", "\n", "        ", "if", "train", ":", "\n", "            ", "root", "=", "os", ".", "path", ".", "join", "(", "root", ",", "'train'", ")", "\n", "", "else", ":", "\n", "            ", "root", "=", "os", ".", "path", ".", "join", "(", "root", ",", "'val'", ")", "\n", "", "return", "datasets", ".", "ImageFolder", "(", "root", "=", "root", ",", "\n", "transform", "=", "transform", ",", "\n", "target_transform", "=", "target_transform", ")", "\n", "", "elif", "name", "==", "'imagenet_tar'", ":", "\n", "        ", "if", "train", ":", "\n", "            ", "root", "=", "os", ".", "path", ".", "join", "(", "root", ",", "'imagenet_train.tar'", ")", "\n", "", "else", ":", "\n", "            ", "root", "=", "os", ".", "path", ".", "join", "(", "root", ",", "'imagenet_validation.tar'", ")", "\n", "", "return", "IndexedFileDataset", "(", "root", ",", "extract_target_fn", "=", "(", "\n", "lambda", "fname", ":", "fname", ".", "split", "(", "'/'", ")", "[", "0", "]", ")", ",", "\n", "transform", "=", "transform", ",", "\n", "target_transform", "=", "target_transform", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.autoaugment.ImageNetPolicy.__init__": [[43, 73], ["autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "fillcolor", "=", "(", "128", ",", "128", ",", "128", ")", ")", ":", "\n", "        ", "self", ".", "policies", "=", "[", "\n", "SubPolicy", "(", "0.4", ",", "\"posterize\"", ",", "8", ",", "0.6", ",", "\"rotate\"", ",", "9", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.6", ",", "\"solarize\"", ",", "5", ",", "0.6", ",", "\"autocontrast\"", ",", "5", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.8", ",", "\"equalize\"", ",", "8", ",", "0.6", ",", "\"equalize\"", ",", "3", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.6", ",", "\"posterize\"", ",", "7", ",", "0.6", ",", "\"posterize\"", ",", "6", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.4", ",", "\"equalize\"", ",", "7", ",", "0.2", ",", "\"solarize\"", ",", "4", ",", "fillcolor", ")", ",", "\n", "\n", "SubPolicy", "(", "0.4", ",", "\"equalize\"", ",", "4", ",", "0.8", ",", "\"rotate\"", ",", "8", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.6", ",", "\"solarize\"", ",", "3", ",", "0.6", ",", "\"equalize\"", ",", "7", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.8", ",", "\"posterize\"", ",", "5", ",", "1.0", ",", "\"equalize\"", ",", "2", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.2", ",", "\"rotate\"", ",", "3", ",", "0.6", ",", "\"solarize\"", ",", "8", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.6", ",", "\"equalize\"", ",", "8", ",", "0.4", ",", "\"posterize\"", ",", "6", ",", "fillcolor", ")", ",", "\n", "\n", "SubPolicy", "(", "0.8", ",", "\"rotate\"", ",", "8", ",", "0.4", ",", "\"color\"", ",", "0", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.4", ",", "\"rotate\"", ",", "9", ",", "0.6", ",", "\"equalize\"", ",", "2", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.0", ",", "\"equalize\"", ",", "7", ",", "0.8", ",", "\"equalize\"", ",", "8", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.6", ",", "\"invert\"", ",", "4", ",", "1.0", ",", "\"equalize\"", ",", "8", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.6", ",", "\"color\"", ",", "4", ",", "1.0", ",", "\"contrast\"", ",", "8", ",", "fillcolor", ")", ",", "\n", "\n", "SubPolicy", "(", "0.8", ",", "\"rotate\"", ",", "8", ",", "1.0", ",", "\"color\"", ",", "2", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.8", ",", "\"color\"", ",", "8", ",", "0.8", ",", "\"solarize\"", ",", "7", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.4", ",", "\"sharpness\"", ",", "7", ",", "0.6", ",", "\"invert\"", ",", "8", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.6", ",", "\"shearX\"", ",", "5", ",", "1.0", ",", "\"equalize\"", ",", "9", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.4", ",", "\"color\"", ",", "0", ",", "0.6", ",", "\"equalize\"", ",", "3", ",", "fillcolor", ")", ",", "\n", "\n", "SubPolicy", "(", "0.4", ",", "\"equalize\"", ",", "7", ",", "0.2", ",", "\"solarize\"", ",", "4", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.6", ",", "\"solarize\"", ",", "5", ",", "0.6", ",", "\"autocontrast\"", ",", "5", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.6", ",", "\"invert\"", ",", "4", ",", "1.0", ",", "\"equalize\"", ",", "8", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.6", ",", "\"color\"", ",", "4", ",", "1.0", ",", "\"contrast\"", ",", "8", ",", "fillcolor", ")", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.autoaugment.ImageNetPolicy.__call__": [[76, 79], ["random.randint", "len"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "policy_idx", "=", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "policies", ")", "-", "1", ")", "\n", "return", "self", ".", "policies", "[", "policy_idx", "]", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.autoaugment.ImageNetPolicy.__repr__": [[80, 82], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "\"AutoAugment ImageNet Policy\"", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.autoaugment.CIFAR10Policy.__init__": [[97, 128], ["autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "fillcolor", "=", "(", "128", ",", "128", ",", "128", ")", ")", ":", "\n", "        ", "self", ".", "policies", "=", "[", "\n", "SubPolicy", "(", "0.1", ",", "\"invert\"", ",", "7", ",", "0.2", ",", "\"contrast\"", ",", "6", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.7", ",", "\"rotate\"", ",", "2", ",", "0.3", ",", "\"translateX\"", ",", "9", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.8", ",", "\"sharpness\"", ",", "1", ",", "0.9", ",", "\"sharpness\"", ",", "3", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.5", ",", "\"shearY\"", ",", "8", ",", "0.7", ",", "\"translateY\"", ",", "9", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.5", ",", "\"autocontrast\"", ",", "8", ",", "0.9", ",", "\"equalize\"", ",", "2", ",", "fillcolor", ")", ",", "\n", "\n", "SubPolicy", "(", "0.2", ",", "\"shearY\"", ",", "7", ",", "0.3", ",", "\"posterize\"", ",", "7", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.4", ",", "\"color\"", ",", "3", ",", "0.6", ",", "\"brightness\"", ",", "7", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.3", ",", "\"sharpness\"", ",", "9", ",", "0.7", ",", "\"brightness\"", ",", "9", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.6", ",", "\"equalize\"", ",", "5", ",", "0.5", ",", "\"equalize\"", ",", "1", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.6", ",", "\"contrast\"", ",", "7", ",", "0.6", ",", "\"sharpness\"", ",", "5", ",", "fillcolor", ")", ",", "\n", "\n", "SubPolicy", "(", "0.7", ",", "\"color\"", ",", "7", ",", "0.5", ",", "\"translateX\"", ",", "8", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.3", ",", "\"equalize\"", ",", "7", ",", "0.4", ",", "\"autocontrast\"", ",", "8", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.4", ",", "\"translateY\"", ",", "3", ",", "0.2", ",", "\"sharpness\"", ",", "6", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.9", ",", "\"brightness\"", ",", "6", ",", "0.2", ",", "\"color\"", ",", "8", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.5", ",", "\"solarize\"", ",", "2", ",", "0.0", ",", "\"invert\"", ",", "3", ",", "fillcolor", ")", ",", "\n", "\n", "SubPolicy", "(", "0.2", ",", "\"equalize\"", ",", "0", ",", "0.6", ",", "\"autocontrast\"", ",", "0", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.2", ",", "\"equalize\"", ",", "8", ",", "0.8", ",", "\"equalize\"", ",", "4", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.9", ",", "\"color\"", ",", "9", ",", "0.6", ",", "\"equalize\"", ",", "6", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.8", ",", "\"autocontrast\"", ",", "4", ",", "0.2", ",", "\"solarize\"", ",", "8", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.1", ",", "\"brightness\"", ",", "3", ",", "0.7", ",", "\"color\"", ",", "0", ",", "fillcolor", ")", ",", "\n", "\n", "SubPolicy", "(", "0.4", ",", "\"solarize\"", ",", "5", ",", "0.9", ",", "\"autocontrast\"", ",", "3", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.9", ",", "\"translateY\"", ",", "9", ",", "0.7", ",", "\"translateY\"", ",", "9", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.9", ",", "\"autocontrast\"", ",", "2", ",", "0.8", ",", "\"solarize\"", ",", "3", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.8", ",", "\"equalize\"", ",", "8", ",", "0.1", ",", "\"invert\"", ",", "3", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.7", ",", "\"translateY\"", ",", "9", ",", "0.9", ",", "\"autocontrast\"", ",", "1", ",", "fillcolor", ")", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.autoaugment.CIFAR10Policy.__call__": [[131, 134], ["random.randint", "len"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "policy_idx", "=", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "policies", ")", "-", "1", ")", "\n", "return", "self", ".", "policies", "[", "policy_idx", "]", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.autoaugment.CIFAR10Policy.__repr__": [[135, 137], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "\"AutoAugment CIFAR10 Policy\"", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.autoaugment.SVHNPolicy.__init__": [[152, 183], ["autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy", "autoaugment.SubPolicy"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "fillcolor", "=", "(", "128", ",", "128", ",", "128", ")", ")", ":", "\n", "        ", "self", ".", "policies", "=", "[", "\n", "SubPolicy", "(", "0.9", ",", "\"shearX\"", ",", "4", ",", "0.2", ",", "\"invert\"", ",", "3", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.9", ",", "\"shearY\"", ",", "8", ",", "0.7", ",", "\"invert\"", ",", "5", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.6", ",", "\"equalize\"", ",", "5", ",", "0.6", ",", "\"solarize\"", ",", "6", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.9", ",", "\"invert\"", ",", "3", ",", "0.6", ",", "\"equalize\"", ",", "3", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.6", ",", "\"equalize\"", ",", "1", ",", "0.9", ",", "\"rotate\"", ",", "3", ",", "fillcolor", ")", ",", "\n", "\n", "SubPolicy", "(", "0.9", ",", "\"shearX\"", ",", "4", ",", "0.8", ",", "\"autocontrast\"", ",", "3", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.9", ",", "\"shearY\"", ",", "8", ",", "0.4", ",", "\"invert\"", ",", "5", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.9", ",", "\"shearY\"", ",", "5", ",", "0.2", ",", "\"solarize\"", ",", "6", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.9", ",", "\"invert\"", ",", "6", ",", "0.8", ",", "\"autocontrast\"", ",", "1", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.6", ",", "\"equalize\"", ",", "3", ",", "0.9", ",", "\"rotate\"", ",", "3", ",", "fillcolor", ")", ",", "\n", "\n", "SubPolicy", "(", "0.9", ",", "\"shearX\"", ",", "4", ",", "0.3", ",", "\"solarize\"", ",", "3", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.8", ",", "\"shearY\"", ",", "8", ",", "0.7", ",", "\"invert\"", ",", "4", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.9", ",", "\"equalize\"", ",", "5", ",", "0.6", ",", "\"translateY\"", ",", "6", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.9", ",", "\"invert\"", ",", "4", ",", "0.6", ",", "\"equalize\"", ",", "7", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.3", ",", "\"contrast\"", ",", "3", ",", "0.8", ",", "\"rotate\"", ",", "4", ",", "fillcolor", ")", ",", "\n", "\n", "SubPolicy", "(", "0.8", ",", "\"invert\"", ",", "5", ",", "0.0", ",", "\"translateY\"", ",", "2", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.7", ",", "\"shearY\"", ",", "6", ",", "0.4", ",", "\"solarize\"", ",", "8", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.6", ",", "\"invert\"", ",", "4", ",", "0.8", ",", "\"rotate\"", ",", "4", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.3", ",", "\"shearY\"", ",", "7", ",", "0.9", ",", "\"translateX\"", ",", "3", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.1", ",", "\"shearX\"", ",", "6", ",", "0.6", ",", "\"invert\"", ",", "5", ",", "fillcolor", ")", ",", "\n", "\n", "SubPolicy", "(", "0.7", ",", "\"solarize\"", ",", "2", ",", "0.6", ",", "\"translateY\"", ",", "7", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.8", ",", "\"shearY\"", ",", "4", ",", "0.8", ",", "\"invert\"", ",", "8", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.7", ",", "\"shearX\"", ",", "9", ",", "0.8", ",", "\"translateY\"", ",", "3", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.8", ",", "\"shearY\"", ",", "5", ",", "0.7", ",", "\"autocontrast\"", ",", "3", ",", "fillcolor", ")", ",", "\n", "SubPolicy", "(", "0.7", ",", "\"shearX\"", ",", "2", ",", "0.1", ",", "\"invert\"", ",", "5", ",", "fillcolor", ")", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.autoaugment.SVHNPolicy.__call__": [[186, 189], ["random.randint", "len"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "policy_idx", "=", "random", ".", "randint", "(", "0", ",", "len", "(", "self", ".", "policies", ")", "-", "1", ")", "\n", "return", "self", ".", "policies", "[", "policy_idx", "]", "(", "img", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.autoaugment.SVHNPolicy.__repr__": [[190, 192], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "\"AutoAugment SVHN Policy\"", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.autoaugment.SubPolicy.__init__": [[195, 256], ["numpy.linspace", "numpy.linspace", "numpy.linspace", "numpy.linspace", "numpy.linspace", "numpy.linspace", "numpy.round().astype", "numpy.linspace", "numpy.linspace", "numpy.linspace", "numpy.linspace", "img.convert().rotate", "PIL.Image.composite().convert", "img.transform", "img.transform", "img.transform", "img.transform", "autoaugment.SubPolicy.__init__.rotate_with_fill"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "p1", ",", "operation1", ",", "magnitude_idx1", ",", "p2", ",", "operation2", ",", "magnitude_idx2", ",", "fillcolor", "=", "(", "128", ",", "128", ",", "128", ")", ")", ":", "\n", "        ", "ranges", "=", "{", "\n", "\"shearX\"", ":", "np", ".", "linspace", "(", "0", ",", "0.3", ",", "10", ")", ",", "\n", "\"shearY\"", ":", "np", ".", "linspace", "(", "0", ",", "0.3", ",", "10", ")", ",", "\n", "\"translateX\"", ":", "np", ".", "linspace", "(", "0", ",", "150", "/", "331", ",", "10", ")", ",", "\n", "\"translateY\"", ":", "np", ".", "linspace", "(", "0", ",", "150", "/", "331", ",", "10", ")", ",", "\n", "\"rotate\"", ":", "np", ".", "linspace", "(", "0", ",", "30", ",", "10", ")", ",", "\n", "\"color\"", ":", "np", ".", "linspace", "(", "0.0", ",", "0.9", ",", "10", ")", ",", "\n", "\"posterize\"", ":", "np", ".", "round", "(", "np", ".", "linspace", "(", "8", ",", "4", ",", "10", ")", ",", "0", ")", ".", "astype", "(", "np", ".", "int", ")", ",", "\n", "\"solarize\"", ":", "np", ".", "linspace", "(", "256", ",", "0", ",", "10", ")", ",", "\n", "\"contrast\"", ":", "np", ".", "linspace", "(", "0.0", ",", "0.9", ",", "10", ")", ",", "\n", "\"sharpness\"", ":", "np", ".", "linspace", "(", "0.0", ",", "0.9", ",", "10", ")", ",", "\n", "\"brightness\"", ":", "np", ".", "linspace", "(", "0.0", ",", "0.9", ",", "10", ")", ",", "\n", "\"autocontrast\"", ":", "[", "0", "]", "*", "10", ",", "\n", "\"equalize\"", ":", "[", "0", "]", "*", "10", ",", "\n", "\"invert\"", ":", "[", "0", "]", "*", "10", "\n", "}", "\n", "\n", "# from https://stackoverflow.com/questions/5252170/specify-image-filling-color-when-rotating-in-python-with-pil-and-setting-expand", "\n", "def", "rotate_with_fill", "(", "img", ",", "magnitude", ")", ":", "\n", "            ", "rot", "=", "img", ".", "convert", "(", "\"RGBA\"", ")", ".", "rotate", "(", "magnitude", ")", "\n", "return", "Image", ".", "composite", "(", "rot", ",", "Image", ".", "new", "(", "\"RGBA\"", ",", "rot", ".", "size", ",", "(", "128", ",", ")", "*", "4", ")", ",", "rot", ")", ".", "convert", "(", "img", ".", "mode", ")", "\n", "\n", "", "func", "=", "{", "\n", "\"shearX\"", ":", "lambda", "img", ",", "magnitude", ":", "img", ".", "transform", "(", "\n", "img", ".", "size", ",", "Image", ".", "AFFINE", ",", "(", "1", ",", "magnitude", "*", "random", ".", "choice", "(", "[", "-", "1", ",", "1", "]", ")", ",", "0", ",", "0", ",", "1", ",", "0", ")", ",", "\n", "Image", ".", "BICUBIC", ",", "fillcolor", "=", "fillcolor", ")", ",", "\n", "\"shearY\"", ":", "lambda", "img", ",", "magnitude", ":", "img", ".", "transform", "(", "\n", "img", ".", "size", ",", "Image", ".", "AFFINE", ",", "(", "1", ",", "0", ",", "0", ",", "magnitude", "*", "random", ".", "choice", "(", "[", "-", "1", ",", "1", "]", ")", ",", "1", ",", "0", ")", ",", "\n", "Image", ".", "BICUBIC", ",", "fillcolor", "=", "fillcolor", ")", ",", "\n", "\"translateX\"", ":", "lambda", "img", ",", "magnitude", ":", "img", ".", "transform", "(", "\n", "img", ".", "size", ",", "Image", ".", "AFFINE", ",", "(", "1", ",", "0", ",", "magnitude", "*", "img", ".", "size", "[", "0", "]", "*", "random", ".", "choice", "(", "[", "-", "1", ",", "1", "]", ")", ",", "0", ",", "1", ",", "0", ")", ",", "\n", "fillcolor", "=", "fillcolor", ")", ",", "\n", "\"translateY\"", ":", "lambda", "img", ",", "magnitude", ":", "img", ".", "transform", "(", "\n", "img", ".", "size", ",", "Image", ".", "AFFINE", ",", "(", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "magnitude", "*", "img", ".", "size", "[", "1", "]", "*", "random", ".", "choice", "(", "[", "-", "1", ",", "1", "]", ")", ")", ",", "\n", "fillcolor", "=", "fillcolor", ")", ",", "\n", "\"rotate\"", ":", "lambda", "img", ",", "magnitude", ":", "rotate_with_fill", "(", "img", ",", "magnitude", ")", ",", "\n", "# \"rotate\": lambda img, magnitude: img.rotate(magnitude * random.choice([-1, 1])),", "\n", "\"color\"", ":", "lambda", "img", ",", "magnitude", ":", "ImageEnhance", ".", "Color", "(", "img", ")", ".", "enhance", "(", "1", "+", "magnitude", "*", "random", ".", "choice", "(", "[", "-", "1", ",", "1", "]", ")", ")", ",", "\n", "\"posterize\"", ":", "lambda", "img", ",", "magnitude", ":", "ImageOps", ".", "posterize", "(", "img", ",", "magnitude", ")", ",", "\n", "\"solarize\"", ":", "lambda", "img", ",", "magnitude", ":", "ImageOps", ".", "solarize", "(", "img", ",", "magnitude", ")", ",", "\n", "\"contrast\"", ":", "lambda", "img", ",", "magnitude", ":", "ImageEnhance", ".", "Contrast", "(", "img", ")", ".", "enhance", "(", "\n", "1", "+", "magnitude", "*", "random", ".", "choice", "(", "[", "-", "1", ",", "1", "]", ")", ")", ",", "\n", "\"sharpness\"", ":", "lambda", "img", ",", "magnitude", ":", "ImageEnhance", ".", "Sharpness", "(", "img", ")", ".", "enhance", "(", "\n", "1", "+", "magnitude", "*", "random", ".", "choice", "(", "[", "-", "1", ",", "1", "]", ")", ")", ",", "\n", "\"brightness\"", ":", "lambda", "img", ",", "magnitude", ":", "ImageEnhance", ".", "Brightness", "(", "img", ")", ".", "enhance", "(", "\n", "1", "+", "magnitude", "*", "random", ".", "choice", "(", "[", "-", "1", ",", "1", "]", ")", ")", ",", "\n", "\"autocontrast\"", ":", "lambda", "img", ",", "magnitude", ":", "ImageOps", ".", "autocontrast", "(", "img", ")", ",", "\n", "\"equalize\"", ":", "lambda", "img", ",", "magnitude", ":", "ImageOps", ".", "equalize", "(", "img", ")", ",", "\n", "\"invert\"", ":", "lambda", "img", ",", "magnitude", ":", "ImageOps", ".", "invert", "(", "img", ")", "\n", "}", "\n", "\n", "# self.name = \"{}_{:.2f}_and_{}_{:.2f}\".format(", "\n", "#     operation1, ranges[operation1][magnitude_idx1],", "\n", "#     operation2, ranges[operation2][magnitude_idx2])", "\n", "self", ".", "p1", "=", "p1", "\n", "self", ".", "operation1", "=", "func", "[", "operation1", "]", "\n", "self", ".", "magnitude1", "=", "ranges", "[", "operation1", "]", "[", "magnitude_idx1", "]", "\n", "self", ".", "p2", "=", "p2", "\n", "self", ".", "operation2", "=", "func", "[", "operation2", "]", "\n", "self", ".", "magnitude2", "=", "ranges", "[", "operation2", "]", "[", "magnitude_idx2", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.autoaugment.SubPolicy.__call__": [[258, 262], ["random.random", "autoaugment.SubPolicy.operation1", "random.random", "autoaugment.SubPolicy.operation2"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "if", "random", ".", "random", "(", ")", "<", "self", ".", "p1", ":", "img", "=", "self", ".", "operation1", "(", "img", ",", "self", ".", "magnitude1", ")", "\n", "if", "random", ".", "random", "(", ")", "<", "self", ".", "p2", ":", "img", "=", "self", ".", "operation2", "(", "img", ",", "self", ".", "magnitude2", ")", "\n", "return", "img", "", "", "", ""]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.preprocess.Lighting.__init__": [[173, 177], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "alphastd", ",", "eigval", ",", "eigvec", ")", ":", "\n", "        ", "self", ".", "alphastd", "=", "alphastd", "\n", "self", ".", "eigval", "=", "eigval", "\n", "self", ".", "eigvec", "=", "eigvec", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.preprocess.Lighting.__call__": [[178, 189], ["img.new().resize_().normal_", "preprocess.Lighting.eigvec.type_as().clone().mul().mul().sum().squeeze", "img.add", "preprocess.Lighting.view().expand_as", "img.new().resize_", "preprocess.Lighting.eigvec.type_as().clone().mul().mul().sum", "preprocess.Lighting.view", "img.new", "preprocess.Lighting.eigvec.type_as().clone().mul().mul", "preprocess.Lighting.eigval.view().expand", "preprocess.Lighting.eigvec.type_as().clone().mul", "img.new().resize_().normal_.view().expand", "preprocess.Lighting.eigval.view", "preprocess.Lighting.eigvec.type_as().clone", "img.new().resize_().normal_.view", "preprocess.Lighting.eigvec.type_as"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.add"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "if", "self", ".", "alphastd", "==", "0", ":", "\n", "            ", "return", "img", "\n", "\n", "", "alpha", "=", "img", ".", "new", "(", ")", ".", "resize_", "(", "3", ")", ".", "normal_", "(", "0", ",", "self", ".", "alphastd", ")", "\n", "rgb", "=", "self", ".", "eigvec", ".", "type_as", "(", "img", ")", ".", "clone", "(", ")", ".", "mul", "(", "alpha", ".", "view", "(", "1", ",", "3", ")", ".", "expand", "(", "3", ",", "3", ")", ")", ".", "mul", "(", "self", ".", "eigval", ".", "view", "(", "1", ",", "3", ")", ".", "expand", "(", "3", ",", "3", ")", ")", ".", "sum", "(", "1", ")", ".", "squeeze", "(", ")", "\n", "\n", "return", "img", ".", "add", "(", "rgb", ".", "view", "(", "3", ",", "1", ",", "1", ")", ".", "expand_as", "(", "img", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.preprocess.Cutout.__init__": [[202, 205], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "holes", ",", "length", ")", ":", "\n", "        ", "self", ".", "holes", "=", "holes", "\n", "self", ".", "length", "=", "length", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.preprocess.Cutout.__call__": [[206, 234], ["img.size", "img.size", "numpy.ones", "range", "torch.from_numpy", "mask.expand_as.expand_as.expand_as", "numpy.random.randint", "numpy.random.randint", "numpy.clip", "numpy.clip", "numpy.clip", "numpy.clip"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "img", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            img (Tensor): Tensor image of size (C, H, W).\n        Returns:\n            Tensor: Image with holes of dimension length x length cut out of it.\n        \"\"\"", "\n", "h", "=", "img", ".", "size", "(", "1", ")", "\n", "w", "=", "img", ".", "size", "(", "2", ")", "\n", "\n", "mask", "=", "np", ".", "ones", "(", "(", "h", ",", "w", ")", ",", "np", ".", "float32", ")", "\n", "\n", "for", "n", "in", "range", "(", "self", ".", "holes", ")", ":", "\n", "            ", "y", "=", "np", ".", "random", ".", "randint", "(", "h", ")", "\n", "x", "=", "np", ".", "random", ".", "randint", "(", "w", ")", "\n", "\n", "y1", "=", "np", ".", "clip", "(", "y", "-", "self", ".", "length", "//", "2", ",", "0", ",", "h", ")", "\n", "y2", "=", "np", ".", "clip", "(", "y", "+", "self", ".", "length", "//", "2", ",", "0", ",", "h", ")", "\n", "x1", "=", "np", ".", "clip", "(", "x", "-", "self", ".", "length", "//", "2", ",", "0", ",", "w", ")", "\n", "x2", "=", "np", ".", "clip", "(", "x", "+", "self", ".", "length", "//", "2", ",", "0", ",", "w", ")", "\n", "\n", "mask", "[", "y1", ":", "y2", ",", "x1", ":", "x2", "]", "=", "0.", "\n", "\n", "", "mask", "=", "torch", ".", "from_numpy", "(", "mask", ")", "\n", "mask", "=", "mask", ".", "expand_as", "(", "img", ")", "\n", "img", "=", "img", "*", "mask", "\n", "\n", "return", "img", "\n", "", "", ""]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.preprocess.scale_crop": [[20, 42], ["torchvision.Compose", "torchvision.Compose", "t_list.append", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.CenterCrop", "torchvision.Lambda", "torchvision.FiveCrop", "torchvision.Resize", "torchvision.TenCrop", "torch.stack", "transforms.Compose."], "function", ["None"], ["def", "scale_crop", "(", "input_size", ",", "scale_size", "=", "None", ",", "num_crops", "=", "1", ",", "normalize", "=", "_IMAGENET_STATS", ")", ":", "\n", "    ", "assert", "num_crops", "in", "[", "1", ",", "5", ",", "10", "]", ",", "\"num crops must be in {1,5,10}\"", "\n", "convert_tensor", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "**", "normalize", ")", "]", ")", "\n", "if", "num_crops", "==", "1", ":", "\n", "        ", "t_list", "=", "[", "\n", "transforms", ".", "CenterCrop", "(", "input_size", ")", ",", "\n", "convert_tensor", "\n", "]", "\n", "", "else", ":", "\n", "        ", "if", "num_crops", "==", "5", ":", "\n", "            ", "t_list", "=", "[", "transforms", ".", "FiveCrop", "(", "input_size", ")", "]", "\n", "", "elif", "num_crops", "==", "10", ":", "\n", "            ", "t_list", "=", "[", "transforms", ".", "TenCrop", "(", "input_size", ")", "]", "\n", "# returns a 4D tensor", "\n", "", "t_list", ".", "append", "(", "transforms", ".", "Lambda", "(", "lambda", "crops", ":", "\n", "torch", ".", "stack", "(", "[", "convert_tensor", "(", "crop", ")", "for", "crop", "in", "crops", "]", ")", ")", ")", "\n", "\n", "", "if", "scale_size", "!=", "input_size", ":", "\n", "        ", "t_list", "=", "[", "transforms", ".", "Resize", "(", "scale_size", ")", "]", "+", "t_list", "\n", "\n", "", "return", "transforms", ".", "Compose", "(", "t_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.preprocess.scale_random_crop": [[44, 55], ["torchvision.Compose", "torchvision.RandomCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.Normalize", "torchvision.Resize"], "function", ["None"], ["", "def", "scale_random_crop", "(", "input_size", ",", "scale_size", "=", "None", ",", "normalize", "=", "_IMAGENET_STATS", ")", ":", "\n", "    ", "t_list", "=", "[", "\n", "transforms", ".", "RandomCrop", "(", "input_size", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "**", "normalize", ")", ",", "\n", "]", "\n", "if", "scale_size", "!=", "input_size", ":", "\n", "        ", "t_list", "=", "[", "transforms", ".", "Resize", "(", "scale_size", ")", "]", "+", "t_list", "\n", "\n", "", "return", "transforms", ".", "Compose", "(", "t_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.preprocess.pad_random_crop": [[57, 64], ["int", "torchvision.Compose", "torchvision.RandomCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.Normalize"], "function", ["None"], ["", "def", "pad_random_crop", "(", "input_size", ",", "scale_size", "=", "None", ",", "normalize", "=", "_IMAGENET_STATS", ")", ":", "\n", "    ", "padding", "=", "int", "(", "(", "scale_size", "-", "input_size", ")", "/", "2", ")", "\n", "return", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomCrop", "(", "input_size", ",", "padding", "=", "padding", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "**", "normalize", ")", ",", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.preprocess.cifar_autoaugment": [[67, 75], ["int", "torchvision.Compose", "torchvision.RandomCrop", "torchvision.RandomHorizontalFlip", "autoaugment.CIFAR10Policy", "torchvision.ToTensor", "torchvision.Normalize"], "function", ["None"], ["", "def", "cifar_autoaugment", "(", "input_size", ",", "scale_size", "=", "None", ",", "normalize", "=", "_IMAGENET_STATS", ")", ":", "\n", "    ", "padding", "=", "int", "(", "(", "scale_size", "-", "input_size", ")", "/", "2", ")", "\n", "return", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomCrop", "(", "input_size", ",", "padding", "=", "padding", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "CIFAR10Policy", "(", "fillcolor", "=", "(", "128", ",", "128", ",", "128", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "**", "normalize", ")", ",", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.preprocess.inception_preprocess": [[78, 84], ["torchvision.Compose", "torchvision.RandomResizedCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.Normalize"], "function", ["None"], ["", "def", "inception_preprocess", "(", "input_size", ",", "normalize", "=", "_IMAGENET_STATS", ")", ":", "\n", "    ", "return", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomResizedCrop", "(", "input_size", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "**", "normalize", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.preprocess.inception_autoaugment_preprocess": [[87, 94], ["torchvision.Compose", "torchvision.RandomResizedCrop", "torchvision.RandomHorizontalFlip", "autoaugment.ImageNetPolicy", "torchvision.ToTensor", "torchvision.Normalize"], "function", ["None"], ["", "def", "inception_autoaugment_preprocess", "(", "input_size", ",", "normalize", "=", "_IMAGENET_STATS", ")", ":", "\n", "    ", "return", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomResizedCrop", "(", "input_size", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "ImageNetPolicy", "(", "fillcolor", "=", "(", "128", ",", "128", ",", "128", ")", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "transforms", ".", "Normalize", "(", "**", "normalize", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.preprocess.inception_color_preprocess": [[97, 109], ["torchvision.Compose", "torchvision.RandomResizedCrop", "torchvision.RandomHorizontalFlip", "torchvision.ColorJitter", "torchvision.ToTensor", "preprocess.Lighting", "torchvision.Normalize"], "function", ["None"], ["", "def", "inception_color_preprocess", "(", "input_size", ",", "normalize", "=", "_IMAGENET_STATS", ")", ":", "\n", "    ", "return", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "RandomResizedCrop", "(", "input_size", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ColorJitter", "(", "\n", "brightness", "=", "0.4", ",", "\n", "contrast", "=", "0.4", ",", "\n", "saturation", "=", "0.4", ",", "\n", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "Lighting", "(", "0.1", ",", "_IMAGENET_PCA", "[", "'eigval'", "]", ",", "_IMAGENET_PCA", "[", "'eigvec'", "]", ")", ",", "\n", "transforms", ".", "Normalize", "(", "**", "normalize", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.preprocess.multi_transform": [[112, 120], ["torchvision.Lambda", "torch.stack", "transform_fn", "range"], "function", ["None"], ["", "def", "multi_transform", "(", "transform_fn", ",", "duplicates", "=", "1", ",", "dim", "=", "0", ")", ":", "\n", "    ", "\"\"\"preforms multiple transforms, useful to implement inference time augmentation or\n     \"batch augmentation\" from https://openreview.net/forum?id=H1V4QhAqYQ&noteId=BylUSs_3Y7\n    \"\"\"", "\n", "if", "duplicates", ">", "1", ":", "\n", "        ", "return", "transforms", ".", "Lambda", "(", "lambda", "x", ":", "torch", ".", "stack", "(", "[", "transform_fn", "(", "x", ")", "for", "_", "in", "range", "(", "duplicates", ")", "]", ",", "dim", "=", "dim", ")", ")", "\n", "", "else", ":", "\n", "        ", "return", "transform_fn", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.preprocess.get_transform": [[122, 168], ["preprocess.multi_transform", "scale_crop.transforms.append", "int", "preprocess.scale_crop", "preprocess.Cutout", "preprocess.inception_autoaugment_preprocess", "preprocess.inception_preprocess", "preprocess.scale_crop", "preprocess.cifar_autoaugment", "preprocess.pad_random_crop", "preprocess.pad_random_crop", "preprocess.scale_crop"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.None.preprocess.multi_transform", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.preprocess.scale_crop", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.preprocess.inception_autoaugment_preprocess", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.preprocess.inception_preprocess", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.preprocess.scale_crop", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.preprocess.cifar_autoaugment", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.preprocess.pad_random_crop", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.preprocess.pad_random_crop", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.preprocess.scale_crop"], ["", "", "def", "get_transform", "(", "transform_name", "=", "'imagenet'", ",", "input_size", "=", "None", ",", "scale_size", "=", "None", ",", "\n", "normalize", "=", "None", ",", "augment", "=", "True", ",", "cutout", "=", "None", ",", "autoaugment", "=", "False", ",", "\n", "duplicates", "=", "1", ",", "num_crops", "=", "1", ")", ":", "\n", "    ", "normalize", "=", "normalize", "or", "_IMAGENET_STATS", "\n", "transform_fn", "=", "None", "\n", "if", "'imagenet'", "in", "transform_name", ":", "# inception augmentation is default for imagenet", "\n", "        ", "input_size", "=", "input_size", "or", "224", "\n", "scale_size", "=", "scale_size", "or", "int", "(", "input_size", "*", "8", "/", "7", ")", "\n", "if", "augment", ":", "\n", "            ", "if", "autoaugment", ":", "\n", "                ", "transform_fn", "=", "inception_autoaugment_preprocess", "(", "input_size", ",", "\n", "normalize", "=", "normalize", ")", "\n", "", "else", ":", "\n", "                ", "transform_fn", "=", "inception_preprocess", "(", "input_size", ",", "\n", "normalize", "=", "normalize", ")", "\n", "", "", "else", ":", "\n", "            ", "transform_fn", "=", "scale_crop", "(", "input_size", "=", "input_size", ",", "scale_size", "=", "scale_size", ",", "\n", "num_crops", "=", "num_crops", ",", "normalize", "=", "normalize", ")", "\n", "", "", "elif", "'cifar'", "in", "transform_name", ":", "# resnet augmentation is default for imagenet", "\n", "        ", "input_size", "=", "input_size", "or", "32", "\n", "if", "augment", ":", "\n", "            ", "scale_size", "=", "scale_size", "or", "40", "\n", "if", "autoaugment", ":", "\n", "                ", "transform_fn", "=", "cifar_autoaugment", "(", "input_size", ",", "scale_size", "=", "scale_size", ",", "\n", "normalize", "=", "normalize", ")", "\n", "", "else", ":", "\n", "                ", "transform_fn", "=", "pad_random_crop", "(", "input_size", ",", "scale_size", "=", "scale_size", ",", "\n", "normalize", "=", "normalize", ")", "\n", "", "", "else", ":", "\n", "            ", "scale_size", "=", "scale_size", "or", "32", "\n", "transform_fn", "=", "scale_crop", "(", "input_size", "=", "input_size", ",", "scale_size", "=", "scale_size", ",", "\n", "num_crops", "=", "num_crops", ",", "normalize", "=", "normalize", ")", "\n", "", "", "elif", "transform_name", "==", "'mnist'", ":", "\n", "        ", "normalize", "=", "{", "'mean'", ":", "[", "0.5", "]", ",", "'std'", ":", "[", "0.5", "]", "}", "\n", "input_size", "=", "input_size", "or", "28", "\n", "if", "augment", ":", "\n", "            ", "scale_size", "=", "scale_size", "or", "32", "\n", "transform_fn", "=", "pad_random_crop", "(", "input_size", ",", "scale_size", "=", "scale_size", ",", "\n", "normalize", "=", "normalize", ")", "\n", "", "else", ":", "\n", "            ", "scale_size", "=", "scale_size", "or", "32", "\n", "transform_fn", "=", "scale_crop", "(", "input_size", "=", "input_size", ",", "scale_size", "=", "scale_size", ",", "\n", "num_crops", "=", "num_crops", ",", "normalize", "=", "normalize", ")", "\n", "", "", "if", "cutout", "is", "not", "None", ":", "\n", "        ", "transform_fn", ".", "transforms", ".", "append", "(", "Cutout", "(", "**", "cutout", ")", ")", "\n", "", "return", "multi_transform", "(", "transform_fn", ",", "duplicates", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.probe.multi_line_opts": [[34, 50], ["defaults.setdefault", "itertools.cycle", "range", "itertools.cycle", "options.append", "defaults.update", "next", "next"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.update"], ["def", "multi_line_opts", "(", "num", ",", "\n", "dashes", "=", "None", ",", "\n", "colors", "=", "[", "'red'", ",", "'green'", ",", "'blue'", ",", "'orange'", ",", "\n", "'black'", ",", "'purple'", ",", "'brown'", "]", ",", "\n", "**", "defaults", ")", ":", "\n", "    ", "defaults", ".", "setdefault", "(", "'line_width'", ",", "2", ")", "\n", "options", "=", "[", "]", "\n", "colors", "=", "cycle", "(", "colors", ")", "\n", "if", "dashes", "is", "not", "None", ":", "\n", "        ", "dashes", "=", "cycle", "(", "dashes", ")", "\n", "\n", "", "for", "_", "in", "range", "(", "num", ")", ":", "\n", "        ", "if", "dashes", "is", "not", "None", ":", "\n", "            ", "defaults", ".", "update", "(", "line_dash", "=", "next", "(", "dashes", ")", ")", "\n", "", "options", ".", "append", "(", "{", "'line_color'", ":", "next", "(", "colors", ")", ",", "**", "defaults", "}", ")", "\n", "", "return", "options", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.probe.reduce_multiple": [[52, 63], ["sorted", "set", "len", "len", "new_result.append", "sum", "len"], "function", ["None"], ["", "def", "reduce_multiple", "(", "result", ")", ":", "\n", "    ", "x_values", "=", "[", "x", "for", "x", ",", "_", "in", "result", "]", "\n", "x_unq", "=", "sorted", "(", "set", "(", "x_values", ")", ",", "key", "=", "x_values", ".", "index", ")", "\n", "if", "len", "(", "x_unq", ")", "!=", "len", "(", "x_values", ")", ":", "\n", "        ", "new_result", "=", "[", "]", "\n", "for", "curr_x", "in", "x_unq", ":", "\n", "            ", "y_values", "=", "[", "y", "for", "x", ",", "y", "in", "result", "if", "curr_x", "==", "x", "]", "\n", "aggr_y", "=", "sum", "(", "y_values", ")", "/", "len", "(", "y_values", ")", "\n", "new_result", ".", "append", "(", "(", "curr_x", ",", "aggr_y", ")", ")", "\n", "", "result", "=", "new_result", "\n", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.probe.plot_comparison": [[65, 107], ["enumerate", "probe.multi_line_opts", "len", "len", "probe.multi_line_opts", "figure_fn", "experiments.items", "zip", "figure_fn.line", "len", "len", "len", "len"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.None.probe.multi_line_opts", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.probe.multi_line_opts"], ["", "def", "plot_comparison", "(", "experiments", ",", "\n", "figure", "=", "None", ",", "\n", "line_options", "=", "None", ",", "\n", "title", "=", "None", ",", "\n", "x_axis_label", "=", "None", ",", "\n", "y_axis_label", "=", "None", ",", "\n", "x_axis_type", "=", "'linear'", ",", "\n", "y_axis_type", "=", "'linear'", ",", "\n", "x_range", "=", "None", ",", "\n", "y_range", "=", "None", ",", "\n", "width", "=", "800", ",", "\n", "height", "=", "400", ",", "\n", "legend_text_font_size", "=", "None", ",", "\n", "tools", "=", "'pan,box_zoom,wheel_zoom,box_select,hover,reset,save'", ",", "\n", "figure_fn", "=", "bk_figure", ")", ":", "\n", "    ", "line_options", "=", "line_options", "or", "multi_line_opts", "(", "len", "(", "experiments", ")", ")", "\n", "if", "len", "(", "line_options", ")", "<", "len", "(", "experiments", ")", ":", "\n", "        ", "line_options", "+=", "multi_line_opts", "(", "len", "(", "experiments", ")", "-", "\n", "len", "(", "line_options", ")", ")", "\n", "", "if", "figure", "is", "None", ":", "\n", "        ", "figure", "=", "figure_fn", "(", "title", "=", "title", ",", "tools", "=", "tools", ",", "\n", "width", "=", "width", ",", "height", "=", "height", ",", "\n", "x_axis_label", "=", "x_axis_label", ",", "\n", "y_axis_label", "=", "y_axis_label", ",", "\n", "x_axis_type", "=", "x_axis_type", ",", "\n", "y_axis_type", "=", "y_axis_type", ",", "\n", "x_range", "=", "x_range", ",", "\n", "y_range", "=", "y_range", ")", "\n", "", "plotted", "=", "False", "\n", "for", "i", ",", "(", "name", ",", "result", ")", "in", "enumerate", "(", "experiments", ".", "items", "(", ")", ")", ":", "\n", "        ", "if", "result", "is", "None", "or", "len", "(", "result", ")", "==", "0", ":", "\n", "            ", "continue", "\n", "", "result_x", ",", "result_y", "=", "zip", "(", "*", "result", ")", "\n", "figure", ".", "line", "(", "result_x", ",", "result_y", ",", "legend", "=", "name", ",", "**", "line_options", "[", "i", "]", ")", "\n", "plotted", "=", "True", "\n", "", "if", "plotted", ":", "\n", "        ", "figure", ".", "legend", ".", "click_policy", "=", "\"hide\"", "\n", "if", "legend_text_font_size", "is", "not", "None", ":", "\n", "            ", "figure", ".", "legend", ".", "label_text_font_size", "=", "legend_text_font_size", "\n", "", "", "else", ":", "\n", "        ", "figure", "=", "None", "\n", "", "return", "figure", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.probe.dump_stream": [[109, 113], ["client.open_stream", "probe.reduce_multiple", "getattr", "client.open_stream.read_all"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.None.probe.reduce_multiple"], ["", "def", "dump_stream", "(", "client", ",", "stream_name", ")", ":", "\n", "    ", "stream", "=", "client", ".", "open_stream", "(", "name", "=", "stream_name", ")", "\n", "output", "=", "[", "getattr", "(", "entry", ",", "'value'", ")", "for", "entry", "in", "stream", ".", "read_all", "(", ")", "]", "\n", "return", "reduce_multiple", "(", "output", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.probe.reduce_ranges": [[115, 125], ["numpy.array", "probe.reduce_multiple", "np.array.searchsorted", "len", "new_results.append"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.None.probe.reduce_multiple"], ["", "def", "reduce_ranges", "(", "results", ",", "x_values", ")", ":", "\n", "# assumes x_values are sorted unique values", "\n", "    ", "x_values", "=", "np", ".", "array", "(", "x_values", ")", "\n", "new_results", "=", "[", "]", "\n", "for", "x", ",", "y", "in", "results", ":", "\n", "        ", "idx", "=", "x_values", ".", "searchsorted", "(", "x", ")", "\n", "if", "idx", "<", "len", "(", "x_values", ")", ":", "\n", "            ", "x", "=", "x_values", "[", "idx", "]", "\n", "new_results", ".", "append", "(", "(", "x", ",", "y", ")", ")", "\n", "", "", "return", "reduce_multiple", "(", "new_results", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.None.probe.annotate_indices": [[127, 137], ["numpy.array", "probe.reduce_multiple", "np.array.searchsorted", "new_results.append", "float", "float", "len"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.None.probe.reduce_multiple"], ["", "def", "annotate_indices", "(", "results", ",", "x_values", ",", "interpolate", "=", "False", ")", ":", "\n", "    ", "x_values", "=", "np", ".", "array", "(", "x_values", ")", "\n", "new_results", "=", "[", "]", "\n", "for", "x", ",", "y", "in", "results", ":", "\n", "        ", "idx", "=", "x_values", ".", "searchsorted", "(", "x", ")", "\n", "if", "interpolate", "and", "idx", "<", "len", "(", "x_values", ")", "-", "1", ":", "\n", "            ", "length", "=", "float", "(", "x_values", "[", "idx", "+", "1", "]", "-", "x_values", "[", "idx", "]", ")", "\n", "idx", "=", "float", "(", "idx", ")", "+", "(", "x", "-", "x_values", "[", "idx", "]", ")", "/", "length", "\n", "", "new_results", ".", "append", "(", "(", "idx", ",", "y", ")", ")", "\n", "", "return", "reduce_multiple", "(", "new_results", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regime.Regime.__init__": [[30, 34], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "regime", ",", "defaults", "=", "{", "}", ")", ":", "\n", "        ", "self", ".", "regime", "=", "regime", "\n", "self", ".", "current_regime_phase", "=", "None", "\n", "self", ".", "setting", "=", "defaults", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regime.Regime.update": [[35, 85], ["copy.deepcopy", "copy.deepcopy.update", "enumerate", "len", "regime.Regime.regime[].get", "regime.Regime.regime[].get", "copy.deepcopy.pop", "regime.Regime.regime[].pop", "regime_setting.get", "regime_setting.get", "copy.deepcopy.update", "float", "float", "copy.deepcopy.pop", "copy.deepcopy.update", "copy.deepcopy.pop", "copy.deepcopy.pop", "regime.eval_func", "copy.deepcopy.update", "copy.deepcopy.pop", "regime.eval_func", "copy.deepcopy.pop"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.update", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataRegime.get", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataRegime.get", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataRegime.get", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataRegime.get", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.update", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.update", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regime.eval_func", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.update", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regime.eval_func"], ["", "def", "update", "(", "self", ",", "epoch", "=", "None", ",", "train_steps", "=", "None", ")", ":", "\n", "        ", "\"\"\"adjusts according to current epoch or steps and regime.\n        \"\"\"", "\n", "if", "self", ".", "regime", "is", "None", ":", "\n", "            ", "return", "False", "\n", "", "epoch", "=", "-", "1", "if", "epoch", "is", "None", "else", "epoch", "\n", "train_steps", "=", "-", "1", "if", "train_steps", "is", "None", "else", "train_steps", "\n", "setting", "=", "deepcopy", "(", "self", ".", "setting", ")", "\n", "if", "self", ".", "current_regime_phase", "is", "None", ":", "\n", "# Find the first entry where the epoch is smallest than current", "\n", "            ", "for", "regime_phase", ",", "regime_setting", "in", "enumerate", "(", "self", ".", "regime", ")", ":", "\n", "                ", "start_epoch", "=", "regime_setting", ".", "get", "(", "'epoch'", ",", "0", ")", "\n", "start_step", "=", "regime_setting", ".", "get", "(", "'step'", ",", "0", ")", "\n", "if", "epoch", ">=", "start_epoch", "or", "train_steps", ">=", "start_step", ":", "\n", "                    ", "self", ".", "current_regime_phase", "=", "regime_phase", "\n", "break", "\n", "# each entry is updated from previous", "\n", "", "setting", ".", "update", "(", "regime_setting", ")", "\n", "", "", "if", "len", "(", "self", ".", "regime", ")", ">", "self", ".", "current_regime_phase", "+", "1", ":", "\n", "            ", "next_phase", "=", "self", ".", "current_regime_phase", "+", "1", "\n", "# Any more regime steps?", "\n", "start_epoch", "=", "self", ".", "regime", "[", "next_phase", "]", ".", "get", "(", "'epoch'", ",", "float", "(", "'inf'", ")", ")", "\n", "start_step", "=", "self", ".", "regime", "[", "next_phase", "]", ".", "get", "(", "'step'", ",", "float", "(", "'inf'", ")", ")", "\n", "if", "epoch", ">=", "start_epoch", "or", "train_steps", ">=", "start_step", ":", "\n", "                ", "self", ".", "current_regime_phase", "=", "next_phase", "\n", "", "", "setting", ".", "update", "(", "self", ".", "regime", "[", "self", ".", "current_regime_phase", "]", ")", "\n", "\n", "if", "'lr_decay_rate'", "in", "setting", "and", "'lr'", "in", "setting", ":", "\n", "            ", "decay_steps", "=", "setting", ".", "pop", "(", "'lr_decay_steps'", ",", "100", ")", "\n", "if", "train_steps", "%", "decay_steps", "==", "0", ":", "\n", "                ", "decay_rate", "=", "setting", ".", "pop", "(", "'lr_decay_rate'", ")", "\n", "setting", "[", "'lr'", "]", "*=", "decay_rate", "**", "(", "train_steps", "/", "decay_steps", ")", "\n", "", "", "elif", "'step_lambda'", "in", "setting", ":", "\n", "            ", "setting", ".", "update", "(", "eval_func", "(", "setting", ".", "pop", "(", "'step_lambda'", ")", ",", "train_steps", ")", ")", "\n", "", "elif", "'epoch_lambda'", "in", "setting", ":", "\n", "            ", "setting", ".", "update", "(", "eval_func", "(", "setting", ".", "pop", "(", "'epoch_lambda'", ")", ",", "epoch", ")", ")", "\n", "\n", "", "if", "'execute'", "in", "setting", ":", "\n", "            ", "setting", ".", "pop", "(", "'execute'", ")", "(", ")", "\n", "\n", "", "if", "'execute_once'", "in", "setting", ":", "\n", "            ", "setting", ".", "pop", "(", "'execute_once'", ")", "(", ")", "\n", "# remove from regime, so won't happen again", "\n", "self", ".", "regime", "[", "self", ".", "current_regime_phase", "]", ".", "pop", "(", "'execute_once'", ",", "None", ")", "\n", "\n", "", "if", "setting", "==", "self", ".", "setting", ":", "\n", "            ", "return", "False", "\n", "", "else", ":", "\n", "            ", "self", ".", "setting", "=", "setting", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regime.Regime.__repr__": [[86, 88], ["None"], "methods", ["None"], ["", "", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "'Current: %s\\n Regime:%s'", "%", "(", "self", ".", "setting", ",", "self", ".", "regime", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regime.eval_func": [[6, 10], ["isinstance", "eval.", "eval"], "function", ["None"], ["def", "eval_func", "(", "f", ",", "x", ")", ":", "\n", "    ", "if", "isinstance", "(", "f", ",", "string_types", ")", ":", "\n", "        ", "f", "=", "eval", "(", "f", ")", "\n", "", "return", "f", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.cross_entropy.CrossEntropyLoss.__init__": [[73, 79], ["torch.CrossEntropyLoss.__init__"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["def", "__init__", "(", "self", ",", "weight", "=", "None", ",", "ignore_index", "=", "-", "100", ",", "reduction", "=", "'mean'", ",", "smooth_eps", "=", "None", ",", "smooth_dist", "=", "None", ",", "from_logits", "=", "True", ")", ":", "\n", "        ", "super", "(", "CrossEntropyLoss", ",", "self", ")", ".", "__init__", "(", "weight", "=", "weight", ",", "\n", "ignore_index", "=", "ignore_index", ",", "reduction", "=", "reduction", ")", "\n", "self", ".", "smooth_eps", "=", "smooth_eps", "\n", "self", ".", "smooth_dist", "=", "smooth_dist", "\n", "self", ".", "from_logits", "=", "from_logits", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.cross_entropy.CrossEntropyLoss.forward": [[80, 86], ["cross_entropy.cross_entropy"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.cross_entropy.cross_entropy"], ["", "def", "forward", "(", "self", ",", "input", ",", "target", ",", "smooth_dist", "=", "None", ")", ":", "\n", "        ", "if", "smooth_dist", "is", "None", ":", "\n", "            ", "smooth_dist", "=", "self", ".", "smooth_dist", "\n", "", "return", "cross_entropy", "(", "input", ",", "target", ",", "weight", "=", "self", ".", "weight", ",", "ignore_index", "=", "self", ".", "ignore_index", ",", "\n", "reduction", "=", "self", ".", "reduction", ",", "smooth_eps", "=", "self", ".", "smooth_eps", ",", "\n", "smooth_dist", "=", "smooth_dist", ",", "from_logits", "=", "self", ".", "from_logits", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.cross_entropy.BCELoss.__init__": [[105, 109], ["torch.BCELoss.__init__"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "weight", "=", "None", ",", "size_average", "=", "None", ",", "reduce", "=", "None", ",", "reduction", "=", "'mean'", ",", "smooth_eps", "=", "None", ",", "from_logits", "=", "False", ")", ":", "\n", "        ", "super", "(", "BCELoss", ",", "self", ")", ".", "__init__", "(", "weight", ",", "size_average", ",", "reduce", ",", "reduction", ")", "\n", "self", ".", "smooth_eps", "=", "smooth_eps", "\n", "self", ".", "from_logits", "=", "from_logits", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.cross_entropy.BCELoss.forward": [[110, 114], ["cross_entropy.binary_cross_entropy"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.cross_entropy.binary_cross_entropy"], ["", "def", "forward", "(", "self", ",", "input", ",", "target", ")", ":", "\n", "        ", "return", "binary_cross_entropy", "(", "input", ",", "target", ",", "\n", "weight", "=", "self", ".", "weight", ",", "reduction", "=", "self", ".", "reduction", ",", "\n", "smooth_eps", "=", "self", ".", "smooth_eps", ",", "from_logits", "=", "self", ".", "from_logits", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.cross_entropy.BCEWithLogitsLoss.__init__": [[117, 120], ["cross_entropy.BCELoss.__init__"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "weight", "=", "None", ",", "size_average", "=", "None", ",", "reduce", "=", "None", ",", "reduction", "=", "'mean'", ",", "smooth_eps", "=", "None", ",", "from_logits", "=", "True", ")", ":", "\n", "        ", "super", "(", "BCEWithLogitsLoss", ",", "self", ")", ".", "__init__", "(", "weight", ",", "size_average", ",", "\n", "reduce", ",", "reduction", ",", "smooth_eps", "=", "smooth_eps", ",", "from_logits", "=", "from_logits", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.cross_entropy._is_long": [[8, 12], ["hasattr", "isinstance", "isinstance"], "function", ["None"], ["def", "_is_long", "(", "x", ")", ":", "\n", "    ", "if", "hasattr", "(", "x", ",", "'data'", ")", ":", "\n", "        ", "x", "=", "x", ".", "data", "\n", "", "return", "isinstance", "(", "x", ",", "torch", ".", "LongTensor", ")", "or", "isinstance", "(", "x", ",", "torch", ".", "cuda", ".", "LongTensor", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.cross_entropy.cross_entropy": [[14, 68], ["inputs.size", "cross_entropy._is_long", "cross_entropy._is_long", "torch.log_softmax", "cross_entropy._is_long", "onehot().type_as.eq", "cross_entropy._is_long", "onehot().type_as.lerp_", "F.log_softmax.gather().squeeze", "loss.mean.masked_fill_", "loss.mean.sum", "torch.cross_entropy", "torch.nll_loss", "misc.onehot().type_as", "smooth_dist.unsqueeze.dim", "onehot().type_as.dim", "smooth_dist.unsqueeze.unsqueeze", "weight.unsqueeze", "F.log_softmax.gather", "loss.mean.mean", "misc.onehot", "F.log_softmax.sum", "loss.mean.sum", "float", "onehot().type_as.unsqueeze", "loss.mean.size", "target.eq.sum"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.cross_entropy._is_long", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.cross_entropy._is_long", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.cross_entropy._is_long", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.cross_entropy._is_long", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.cross_entropy.cross_entropy", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.misc.onehot"], ["", "def", "cross_entropy", "(", "inputs", ",", "target", ",", "weight", "=", "None", ",", "ignore_index", "=", "-", "100", ",", "reduction", "=", "'mean'", ",", "\n", "smooth_eps", "=", "None", ",", "smooth_dist", "=", "None", ",", "from_logits", "=", "True", ")", ":", "\n", "    ", "\"\"\"cross entropy loss, with support for target distributions and label smoothing https://arxiv.org/abs/1512.00567\"\"\"", "\n", "smooth_eps", "=", "smooth_eps", "or", "0", "\n", "\n", "# ordinary log-liklihood - use cross_entropy from nn", "\n", "if", "_is_long", "(", "target", ")", "and", "smooth_eps", "==", "0", ":", "\n", "        ", "if", "from_logits", ":", "\n", "            ", "return", "F", ".", "cross_entropy", "(", "inputs", ",", "target", ",", "weight", ",", "ignore_index", "=", "ignore_index", ",", "reduction", "=", "reduction", ")", "\n", "", "else", ":", "\n", "            ", "return", "F", ".", "nll_loss", "(", "inputs", ",", "target", ",", "weight", ",", "ignore_index", "=", "ignore_index", ",", "reduction", "=", "reduction", ")", "\n", "\n", "", "", "if", "from_logits", ":", "\n", "# log-softmax of inputs", "\n", "        ", "lsm", "=", "F", ".", "log_softmax", "(", "inputs", ",", "dim", "=", "-", "1", ")", "\n", "", "else", ":", "\n", "        ", "lsm", "=", "inputs", "\n", "\n", "", "masked_indices", "=", "None", "\n", "num_classes", "=", "inputs", ".", "size", "(", "-", "1", ")", "\n", "\n", "if", "_is_long", "(", "target", ")", "and", "ignore_index", ">=", "0", ":", "\n", "        ", "masked_indices", "=", "target", ".", "eq", "(", "ignore_index", ")", "\n", "\n", "", "if", "smooth_eps", ">", "0", "and", "smooth_dist", "is", "not", "None", ":", "\n", "        ", "if", "_is_long", "(", "target", ")", ":", "\n", "            ", "target", "=", "onehot", "(", "target", ",", "num_classes", ")", ".", "type_as", "(", "inputs", ")", "\n", "", "if", "smooth_dist", ".", "dim", "(", ")", "<", "target", ".", "dim", "(", ")", ":", "\n", "            ", "smooth_dist", "=", "smooth_dist", ".", "unsqueeze", "(", "0", ")", "\n", "", "target", ".", "lerp_", "(", "smooth_dist", ",", "smooth_eps", ")", "\n", "\n", "", "if", "weight", "is", "not", "None", ":", "\n", "        ", "lsm", "=", "lsm", "*", "weight", ".", "unsqueeze", "(", "0", ")", "\n", "\n", "", "if", "_is_long", "(", "target", ")", ":", "\n", "        ", "eps_sum", "=", "smooth_eps", "/", "num_classes", "\n", "eps_nll", "=", "1.", "-", "eps_sum", "-", "smooth_eps", "\n", "likelihood", "=", "lsm", ".", "gather", "(", "dim", "=", "-", "1", ",", "index", "=", "target", ".", "unsqueeze", "(", "-", "1", ")", ")", ".", "squeeze", "(", "-", "1", ")", "\n", "loss", "=", "-", "(", "eps_nll", "*", "likelihood", "+", "eps_sum", "*", "lsm", ".", "sum", "(", "-", "1", ")", ")", "\n", "", "else", ":", "\n", "        ", "loss", "=", "-", "(", "target", "*", "lsm", ")", ".", "sum", "(", "-", "1", ")", "\n", "\n", "", "if", "masked_indices", "is", "not", "None", ":", "\n", "        ", "loss", ".", "masked_fill_", "(", "masked_indices", ",", "0", ")", "\n", "\n", "", "if", "reduction", "==", "'sum'", ":", "\n", "        ", "loss", "=", "loss", ".", "sum", "(", ")", "\n", "", "elif", "reduction", "==", "'mean'", ":", "\n", "        ", "if", "masked_indices", "is", "None", ":", "\n", "            ", "loss", "=", "loss", ".", "mean", "(", ")", "\n", "", "else", ":", "\n", "            ", "loss", "=", "loss", ".", "sum", "(", ")", "/", "float", "(", "loss", ".", "size", "(", "0", ")", "-", "masked_indices", ".", "sum", "(", ")", ")", "\n", "\n", "", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.cross_entropy.binary_cross_entropy": [[88, 98], ["target.float.float", "target.float.add_().div_", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy", "target.float.add_"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.cross_entropy.binary_cross_entropy_with_logits", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.cross_entropy.binary_cross_entropy"], ["", "", "def", "binary_cross_entropy", "(", "inputs", ",", "target", ",", "weight", "=", "None", ",", "reduction", "=", "'mean'", ",", "smooth_eps", "=", "None", ",", "from_logits", "=", "False", ")", ":", "\n", "    ", "\"\"\"cross entropy loss, with support for label smoothing https://arxiv.org/abs/1512.00567\"\"\"", "\n", "smooth_eps", "=", "smooth_eps", "or", "0", "\n", "if", "smooth_eps", ">", "0", ":", "\n", "        ", "target", "=", "target", ".", "float", "(", ")", "\n", "target", ".", "add_", "(", "smooth_eps", ")", ".", "div_", "(", "2.", ")", "\n", "", "if", "from_logits", ":", "\n", "        ", "return", "F", ".", "binary_cross_entropy_with_logits", "(", "inputs", ",", "target", ",", "weight", "=", "weight", ",", "reduction", "=", "reduction", ")", "\n", "", "else", ":", "\n", "        ", "return", "F", ".", "binary_cross_entropy", "(", "inputs", ",", "target", ",", "weight", "=", "weight", ",", "reduction", "=", "reduction", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.cross_entropy.binary_cross_entropy_with_logits": [[100, 102], ["cross_entropy.binary_cross_entropy"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.cross_entropy.binary_cross_entropy"], ["", "", "def", "binary_cross_entropy_with_logits", "(", "inputs", ",", "target", ",", "weight", "=", "None", ",", "reduction", "=", "'mean'", ",", "smooth_eps", "=", "None", ",", "from_logits", "=", "True", ")", ":", "\n", "    ", "return", "binary_cross_entropy", "(", "inputs", ",", "target", ",", "weight", ",", "reduction", ",", "smooth_eps", ",", "from_logits", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset.RandomSamplerReplacment.__init__": [[21, 23], ["len"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "data_source", ")", ":", "\n", "        ", "self", ".", "num_samples", "=", "len", "(", "data_source", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset.RandomSamplerReplacment.__iter__": [[24, 26], ["iter", "torch.from_numpy", "numpy.random.choice"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "iter", "(", "torch", ".", "from_numpy", "(", "choice", "(", "self", ".", "num_samples", ",", "self", ".", "num_samples", ",", "replace", "=", "True", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset.RandomSamplerReplacment.__len__": [[27, 29], ["None"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "num_samples", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset.LimitDataset.__init__": [[33, 36], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "dset", ",", "max_len", ")", ":", "\n", "        ", "self", ".", "dset", "=", "dset", "\n", "self", ".", "max_len", "=", "max_len", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset.LimitDataset.__len__": [[37, 39], ["min", "len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "min", "(", "len", "(", "self", ".", "dset", ")", ",", "self", ".", "max_len", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset.LimitDataset.__getitem__": [[40, 42], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "return", "self", ".", "dset", "[", "index", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset.ByClassDataset.__init__": [[46, 52], ["enumerate", "dataset.ByClassDataset.idx_by_class.setdefault", "dataset.ByClassDataset.idx_by_class[].append"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "ds", ")", ":", "\n", "        ", "self", ".", "dataset", "=", "ds", "\n", "self", ".", "idx_by_class", "=", "{", "}", "\n", "for", "idx", ",", "(", "_", ",", "c", ")", "in", "enumerate", "(", "ds", ")", ":", "\n", "            ", "self", ".", "idx_by_class", ".", "setdefault", "(", "c", ",", "[", "]", ")", "\n", "self", ".", "idx_by_class", "[", "c", "]", ".", "append", "(", "idx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset.ByClassDataset.__len__": [[53, 55], ["min", "len", "dataset.ByClassDataset.idx_by_class.values"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "min", "(", "[", "len", "(", "d", ")", "for", "d", "in", "self", ".", "idx_by_class", ".", "values", "(", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset.ByClassDataset.__getitem__": [[56, 66], ["torch.LongTensor", "torch.is_tensor", "torch.stack", "range", "len"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "idx_per_class", "=", "[", "self", ".", "idx_by_class", "[", "c", "]", "[", "idx", "]", "\n", "for", "c", "in", "range", "(", "len", "(", "self", ".", "idx_by_class", ")", ")", "]", "\n", "labels", "=", "torch", ".", "LongTensor", "(", "[", "self", ".", "dataset", "[", "i", "]", "[", "1", "]", "\n", "for", "i", "in", "idx_per_class", "]", ")", "\n", "items", "=", "[", "self", ".", "dataset", "[", "i", "]", "[", "0", "]", "for", "i", "in", "idx_per_class", "]", "\n", "if", "torch", ".", "is_tensor", "(", "items", "[", "0", "]", ")", ":", "\n", "            ", "items", "=", "torch", ".", "stack", "(", "items", ")", "\n", "\n", "", "return", "(", "items", ",", "labels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset.IdxDataset.__init__": [[71, 75], ["torch.utils.data.Dataset.__init__", "range", "len"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["def", "__init__", "(", "self", ",", "dset", ")", ":", "\n", "        ", "super", "(", "IdxDataset", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "dset", "=", "dset", "\n", "self", ".", "idxs", "=", "range", "(", "len", "(", "self", ".", "dset", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset.IdxDataset.__getitem__": [[76, 79], ["None"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "data", ",", "labels", "=", "self", ".", "dset", "[", "self", ".", "idxs", "[", "idx", "]", "]", "\n", "return", "(", "idx", ",", "data", ",", "labels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset.IdxDataset.__len__": [[80, 82], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "idxs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset.IndexedFileDataset.__init__": [[98, 124], ["torch.utils.data.Dataset.__init__", "set", "open", "pickle.load", "extract_target_fn", "enumerate", "sorted", "extract_target_fn"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.load"], ["def", "__init__", "(", "self", ",", "filename", ",", "index_filename", "=", "None", ",", "extract_target_fn", "=", "None", ",", "\n", "transform", "=", "None", ",", "target_transform", "=", "None", ",", "loader", "=", "image_loader", ")", ":", "\n", "        ", "super", "(", "IndexedFileDataset", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "# Defaults", "\n", "if", "index_filename", "is", "None", ":", "\n", "            ", "index_filename", "=", "filename", "+", "'.index'", "\n", "", "if", "extract_target_fn", "is", "None", ":", "\n", "            ", "extract_target_fn", "=", "lambda", "*", "args", ":", "args", "\n", "\n", "# Read index", "\n", "", "with", "open", "(", "index_filename", ",", "'rb'", ")", "as", "index_fp", ":", "\n", "            ", "sample_list", "=", "pickle", ".", "load", "(", "index_fp", ")", "\n", "\n", "# Collect unique targets (sorted by name)", "\n", "", "targetset", "=", "set", "(", "extract_target_fn", "(", "target", ")", "\n", "for", "target", ",", "_", ",", "_", "in", "sample_list", ")", "\n", "targetmap", "=", "{", "target", ":", "i", "for", "i", ",", "target", "in", "enumerate", "(", "sorted", "(", "targetset", ")", ")", "}", "\n", "\n", "self", ".", "samples", "=", "[", "(", "targetmap", "[", "extract_target_fn", "(", "target", ")", "]", ",", "offset", ",", "size", ")", "\n", "for", "target", ",", "offset", ",", "size", "in", "sample_list", "]", "\n", "self", ".", "filename", "=", "filename", "\n", "\n", "self", ".", "loader", "=", "loader", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "target_transform", "=", "target_transform", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset.IndexedFileDataset._get_sample": [[125, 136], ["fp.seek", "dataset.IndexedFileDataset.loader", "fp.read", "dataset.IndexedFileDataset.transform", "dataset.IndexedFileDataset.target_transform"], "methods", ["None"], ["", "def", "_get_sample", "(", "self", ",", "fp", ",", "idx", ")", ":", "\n", "        ", "target", ",", "offset", ",", "size", "=", "self", ".", "samples", "[", "idx", "]", "\n", "fp", ".", "seek", "(", "offset", ")", "\n", "sample", "=", "self", ".", "loader", "(", "fp", ".", "read", "(", "size", ")", ")", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "sample", "=", "self", ".", "transform", "(", "sample", ")", "\n", "", "if", "self", ".", "target_transform", "is", "not", "None", ":", "\n", "            ", "target", "=", "self", ".", "target_transform", "(", "target", ")", "\n", "\n", "", "return", "sample", ",", "target", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset.IndexedFileDataset.__getitem__": [[137, 146], ["open", "isinstance", "dataset.IndexedFileDataset._get_sample", "dataset.IndexedFileDataset._get_sample", "range", "len"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset.IndexedFileDataset._get_sample", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset.IndexedFileDataset._get_sample"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "with", "open", "(", "self", ".", "filename", ",", "'rb'", ")", "as", "fp", ":", "\n", "# Handle slices", "\n", "            ", "if", "isinstance", "(", "index", ",", "slice", ")", ":", "\n", "                ", "return", "[", "self", ".", "_get_sample", "(", "fp", ",", "subidx", ")", "for", "subidx", "in", "\n", "range", "(", "index", ".", "start", "or", "0", ",", "index", ".", "stop", "or", "len", "(", "self", ")", ",", "\n", "index", ".", "step", "or", "1", ")", "]", "\n", "\n", "", "return", "self", ".", "_get_sample", "(", "fp", ",", "index", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset.IndexedFileDataset.__len__": [[147, 149], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "samples", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset.DuplicateBatchSampler.__init__": [[152, 168], ["isinstance", "ValueError", "isinstance", "ValueError", "isinstance", "ValueError", "isinstance"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "sampler", ",", "batch_size", ",", "duplicates", ",", "drop_last", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "sampler", ",", "Sampler", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"sampler should be an instance of \"", "\n", "\"torch.utils.data.Sampler, but got sampler={}\"", "\n", ".", "format", "(", "sampler", ")", ")", "\n", "", "if", "not", "isinstance", "(", "batch_size", ",", "_int_classes", ")", "or", "isinstance", "(", "batch_size", ",", "bool", ")", "or", "batch_size", "<=", "0", ":", "\n", "            ", "raise", "ValueError", "(", "\"batch_size should be a positive integeral value, \"", "\n", "\"but got batch_size={}\"", ".", "format", "(", "batch_size", ")", ")", "\n", "", "if", "not", "isinstance", "(", "drop_last", ",", "bool", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\"drop_last should be a boolean value, but got \"", "\n", "\"drop_last={}\"", ".", "format", "(", "drop_last", ")", ")", "\n", "", "self", ".", "sampler", "=", "sampler", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "self", ".", "drop_last", "=", "drop_last", "\n", "self", ".", "duplicates", "=", "duplicates", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset.DuplicateBatchSampler.__iter__": [[169, 178], ["batch.append", "len", "len"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "batch", "=", "[", "]", "\n", "for", "idx", "in", "self", ".", "sampler", ":", "\n", "            ", "batch", ".", "append", "(", "idx", ")", "\n", "if", "len", "(", "batch", ")", "==", "self", ".", "batch_size", ":", "\n", "                ", "yield", "batch", "*", "self", ".", "duplicates", "\n", "batch", "=", "[", "]", "\n", "", "", "if", "len", "(", "batch", ")", ">", "0", "and", "not", "self", ".", "drop_last", ":", "\n", "            ", "yield", "batch", "*", "self", ".", "duplicates", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset.DuplicateBatchSampler.__len__": [[179, 184], ["len", "len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "drop_last", ":", "\n", "            ", "return", "len", "(", "self", ".", "sampler", ")", "//", "self", ".", "batch_size", "\n", "", "else", ":", "\n", "            ", "return", "(", "len", "(", "self", ".", "sampler", ")", "+", "self", ".", "batch_size", "-", "1", ")", "//", "self", ".", "batch_size", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset.LinedTextDataset.__init__": [[219, 226], ["dataset._load_or_create", "dataset.list_line_locations"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset._load_or_create", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset.list_line_locations"], ["def", "__init__", "(", "self", ",", "filename", ",", "transform", "=", "None", ",", "cache", "=", "True", ")", ":", "\n", "        ", "self", ".", "filename", "=", "filename", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "items", "=", "_load_or_create", "(", "filename", "+", "'_cached_lines'", ",", "\n", "create_fn", "=", "lambda", ":", "list_line_locations", "(", "\n", "filename", ")", ",", "\n", "cache", "=", "cache", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset.LinedTextDataset.__getitem__": [[227, 236], ["isinstance", "codecs.open", "f.seek", "f.readline", "dataset.LinedTextDataset.transform", "range", "len"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "if", "isinstance", "(", "index", ",", "slice", ")", ":", "\n", "            ", "return", "[", "self", "[", "idx", "]", "for", "idx", "in", "range", "(", "index", ".", "start", "or", "0", ",", "index", ".", "stop", "or", "len", "(", "self", ")", ",", "index", ".", "step", "or", "1", ")", "]", "\n", "", "with", "codecs", ".", "open", "(", "self", ".", "filename", ",", "encoding", "=", "'UTF-8'", ")", "as", "f", ":", "\n", "            ", "f", ".", "seek", "(", "self", ".", "items", "[", "index", "]", ")", "\n", "item", "=", "f", ".", "readline", "(", ")", "\n", "", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "item", "=", "self", ".", "transform", "(", "item", ")", "\n", "", "return", "item", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset.LinedTextDataset.__len__": [[237, 239], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "items", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset.LinedTextDataset.select_range": [[240, 244], ["copy.copy.copy"], "methods", ["None"], ["", "def", "select_range", "(", "self", ",", "start", ",", "end", ")", ":", "\n", "        ", "new_dataset", "=", "copy", "(", "self", ")", "\n", "new_dataset", ".", "items", "=", "new_dataset", ".", "items", "[", "start", ":", "end", "]", "\n", "return", "new_dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset.LinedTextDataset.filter": [[245, 249], ["copy.copy.copy", "filter_func"], "methods", ["None"], ["", "def", "filter", "(", "self", ",", "filter_func", ")", ":", "\n", "        ", "new_dataset", "=", "copy", "(", "self", ")", "\n", "new_dataset", ".", "items", "=", "[", "item", "for", "item", "in", "self", "if", "filter_func", "(", "item", ")", "]", "\n", "return", "new_dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset.LinedTextDataset.subset": [[250, 254], ["copy.copy.copy"], "methods", ["None"], ["", "def", "subset", "(", "self", ",", "indices", ")", ":", "\n", "        ", "new_dataset", "=", "copy", "(", "self", ")", "\n", "new_dataset", ".", "items", "=", "[", "new_dataset", ".", "items", "[", "idx", "]", "for", "idx", "in", "indices", "]", "\n", "return", "new_dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset.LinedTextDataset.split": [[255, 267], ["sum", "len", "ValueError", "dataset.LinedTextDataset.select_range", "zip", "torch._utils._accumulate"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset.LinedTextDataset.select_range"], ["", "def", "split", "(", "self", ",", "lengths", ")", ":", "\n", "        ", "\"\"\"\n        split a dataset into non-overlapping new datasets of given lengths.\n        Arguments:\n            dataset (Dataset): Dataset to be split\n            lengths (sequence): lengths of splits to be produced\n        \"\"\"", "\n", "if", "sum", "(", "lengths", ")", "!=", "len", "(", "self", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"Sum of input lengths does not equal the length of the input dataset!\"", ")", "\n", "\n", "", "return", "[", "self", ".", "select_range", "(", "offset", "-", "length", ",", "offset", ")", "for", "offset", ",", "length", "in", "zip", "(", "_accumulate", "(", "lengths", ")", ",", "lengths", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset.LinedTextDataset.random_split": [[268, 281], ["torch.randperm().tolist", "sum", "len", "ValueError", "dataset.LinedTextDataset.subset", "torch.randperm", "zip", "sum", "torch._utils._accumulate"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset.LinedTextDataset.subset"], ["", "def", "random_split", "(", "self", ",", "lengths", ")", ":", "\n", "        ", "\"\"\"\n        Randomly split a dataset into non-overlapping new datasets of given lengths.\n        Arguments:\n            dataset (Dataset): Dataset to be split\n            lengths (sequence): lengths of splits to be produced\n        \"\"\"", "\n", "if", "sum", "(", "lengths", ")", "!=", "len", "(", "self", ")", ":", "\n", "            ", "raise", "ValueError", "(", "\n", "\"Sum of input lengths does not equal the length of the input dataset!\"", ")", "\n", "\n", "", "indices", "=", "torch", ".", "randperm", "(", "sum", "(", "lengths", ")", ")", ".", "tolist", "(", ")", "\n", "return", "[", "self", ".", "subset", "(", "indices", "[", "offset", "-", "length", ":", "offset", "]", ")", "for", "offset", ",", "length", "in", "zip", "(", "_accumulate", "(", "lengths", ")", ",", "lengths", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset.CSVDataset.__init__": [[287, 296], ["dataset._load_or_create", "dataset.list_line_locations"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset._load_or_create", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset.list_line_locations"], ["def", "__init__", "(", "self", ",", "filename", ",", "fieldnames", "=", "None", ",", "delimiter", "=", "'\\t'", ",", "transform", "=", "None", ",", "cache", "=", "True", ")", ":", "\n", "        ", "self", ".", "filename", "=", "filename", "\n", "self", ".", "fieldnames", "=", "fieldnames", "\n", "self", ".", "delimiter", "=", "delimiter", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "items", "=", "_load_or_create", "(", "filename", "+", "'_cached_lines'", ",", "\n", "create_fn", "=", "lambda", ":", "list_line_locations", "(", "\n", "filename", ")", ",", "\n", "cache", "=", "cache", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset.CSVDataset.__getitem__": [[297, 309], ["isinstance", "next", "codecs.open", "f.seek", "f.readline", "csv.DictReader", "dataset.CSVDataset.transform", "range", "len"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "if", "isinstance", "(", "index", ",", "slice", ")", ":", "\n", "            ", "return", "[", "self", "[", "idx", "]", "for", "idx", "in", "range", "(", "index", ".", "start", "or", "0", ",", "index", ".", "stop", "or", "len", "(", "self", ")", ",", "index", ".", "step", "or", "1", ")", "]", "\n", "", "with", "codecs", ".", "open", "(", "self", ".", "filename", ",", "encoding", "=", "'UTF-8'", ")", "as", "f", ":", "\n", "            ", "f", ".", "seek", "(", "self", ".", "items", "[", "index", "]", ")", "\n", "item", "=", "f", ".", "readline", "(", ")", "\n", "", "item", "=", "next", "(", "csv", ".", "DictReader", "(", "[", "item", "]", ",", "\n", "fieldnames", "=", "self", ".", "fieldnames", ",", "\n", "delimiter", "=", "self", ".", "delimiter", ")", ")", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "item", "=", "self", ".", "transform", "(", "item", ")", "\n", "", "return", "item", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset.CSVDataset.count_fields": [[310, 318], ["range", "collections.Counter", "len"], "methods", ["None"], ["", "def", "count_fields", "(", "self", ",", "fieldnames", "=", "None", ")", ":", "\n", "        ", "fieldnames", "=", "fieldnames", "or", "self", ".", "fieldnames", "\n", "counters", "=", "{", "name", ":", "Counter", "(", ")", "for", "name", "in", "fieldnames", "}", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ")", ")", ":", "\n", "            ", "value", "=", "self", "[", "i", "]", "\n", "for", "field", "in", "fieldnames", ":", "\n", "                ", "counters", "[", "field", "]", "[", "value", "[", "field", "]", "]", "+=", "1", "\n", "", "", "return", "counters", "\n", "", "", ""]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset.image_loader": [[84, 87], ["PIL.Image.open", "PIL.Image.open.convert", "io.BytesIO"], "function", ["None"], ["", "", "def", "image_loader", "(", "imagebytes", ")", ":", "\n", "    ", "img", "=", "PIL", ".", "Image", ".", "open", "(", "BytesIO", "(", "imagebytes", ")", ")", "\n", "return", "img", ".", "convert", "(", "'RGB'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset.list_line_locations": [[186, 196], ["open", "line_offset.append", "len", "len"], "function", ["None"], ["", "", "", "def", "list_line_locations", "(", "filename", ",", "limit", "=", "None", ")", ":", "\n", "    ", "line_offset", "=", "[", "]", "\n", "offset", "=", "0", "\n", "with", "open", "(", "filename", ",", "\"rb\"", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "f", ":", "\n", "            ", "line_offset", ".", "append", "(", "offset", ")", "\n", "offset", "+=", "len", "(", "line", ")", "\n", "if", "limit", "is", "not", "None", "and", "len", "(", "line_offset", ")", ">", "limit", ":", "\n", "                ", "break", "\n", "", "", "", "return", "line_offset", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.dataset._load_or_create": [[198, 213], ["create_fn", "open", "pickle.dump", "open", "pickle.load"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.load"], ["", "def", "_load_or_create", "(", "filename", ",", "create_fn", ",", "cache", "=", "True", ",", "force_create", "=", "False", ")", ":", "\n", "    ", "loaded", "=", "False", "\n", "if", "not", "force_create", ":", "\n", "        ", "try", ":", "\n", "            ", "with", "open", "(", "filename", ",", "'rb'", ")", "as", "fp", ":", "\n", "                ", "value", "=", "pickle", ".", "load", "(", "fp", ")", "\n", "", "loaded", "=", "True", "\n", "", "except", ":", "\n", "            ", "pass", "\n", "", "", "if", "not", "loaded", ":", "\n", "        ", "value", "=", "create_fn", "(", ")", "\n", "", "if", "cache", "and", "not", "loaded", ":", "\n", "        ", "with", "open", "(", "filename", ",", "'wb'", ")", "as", "fp", ":", "\n", "            ", "pickle", ".", "dump", "(", "value", ",", "fp", ")", "\n", "", "", "return", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.functions.ScaleGrad.forward": [[6, 10], ["None"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "input", ",", "scale", ")", ":", "\n", "        ", "ctx", ".", "scale", "=", "scale", "\n", "return", "input", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.functions.ScaleGrad.backward": [[11, 15], ["None"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_output", ")", ":", "\n", "        ", "grad_input", "=", "ctx", ".", "scale", "*", "grad_output", "\n", "return", "grad_input", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.functions.scale_grad": [[17, 19], ["ScaleGrad().apply", "functions.ScaleGrad"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.bwn.BoundedWeightNorm.apply"], ["", "", "def", "scale_grad", "(", "x", ",", "scale", ")", ":", "\n", "    ", "return", "ScaleGrad", "(", ")", ".", "apply", "(", "x", ",", "scale", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.functions.negate_grad": [[20, 22], ["functions.scale_grad"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.functions.scale_grad"], ["", "def", "negate_grad", "(", "x", ")", ":", "\n", "    ", "return", "scale_grad", "(", "x", ",", "-", "1", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.meters.AverageMeter.__init__": [[7, 9], ["meters.AverageMeter.reset"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.mixup.MixUp.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.meters.AverageMeter.reset": [[10, 15], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "val", "=", "0", "\n", "self", ".", "avg", "=", "0", "\n", "self", ".", "sum", "=", "0", "\n", "self", ".", "count", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.meters.AverageMeter.update": [[16, 21], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "val", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "val", "\n", "self", ".", "sum", "+=", "val", "*", "n", "\n", "self", ".", "count", "+=", "n", "\n", "self", ".", "avg", "=", "self", ".", "sum", "/", "self", ".", "count", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.meters.OnlineMeter.__init__": [[26, 31], ["torch.FloatTensor().fill_", "torch.FloatTensor().zero_", "torch.FloatTensor", "torch.FloatTensor"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "mean", "=", "torch", ".", "FloatTensor", "(", "1", ")", ".", "fill_", "(", "-", "1", ")", "\n", "self", ".", "M2", "=", "torch", ".", "FloatTensor", "(", "1", ")", ".", "zero_", "(", ")", "\n", "self", ".", "count", "=", "0.", "\n", "self", ".", "needs_init", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.meters.OnlineMeter.reset": [[32, 37], ["x.new().zero_", "x.new().zero_", "x.new", "x.new", "x.size", "x.size"], "methods", ["None"], ["", "def", "reset", "(", "self", ",", "x", ")", ":", "\n", "        ", "self", ".", "mean", "=", "x", ".", "new", "(", "x", ".", "size", "(", ")", ")", ".", "zero_", "(", ")", "\n", "self", ".", "M2", "=", "x", ".", "new", "(", "x", ".", "size", "(", ")", ")", ".", "zero_", "(", ")", "\n", "self", ".", "count", "=", "0.", "\n", "self", ".", "needs_init", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.meters.OnlineMeter.update": [[38, 47], ["meters.OnlineMeter.mean.add_", "meters.OnlineMeter.M2.add_", "meters.OnlineMeter.reset"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.mixup.MixUp.reset"], ["", "def", "update", "(", "self", ",", "x", ")", ":", "\n", "        ", "self", ".", "val", "=", "x", "\n", "if", "self", ".", "needs_init", ":", "\n", "            ", "self", ".", "reset", "(", "x", ")", "\n", "", "self", ".", "count", "+=", "1", "\n", "delta", "=", "x", "-", "self", ".", "mean", "\n", "self", ".", "mean", ".", "add_", "(", "delta", "/", "self", ".", "count", ")", "\n", "delta2", "=", "x", "-", "self", ".", "mean", "\n", "self", ".", "M2", ".", "add_", "(", "delta", "*", "delta2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.meters.OnlineMeter.var": [[48, 53], ["meters.OnlineMeter.M2.clone().zero_", "meters.OnlineMeter.M2.clone"], "methods", ["None"], ["", "@", "property", "\n", "def", "var", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "count", "<", "2", ":", "\n", "            ", "return", "self", ".", "M2", ".", "clone", "(", ")", ".", "zero_", "(", ")", "\n", "", "return", "self", ".", "M2", "/", "(", "self", ".", "count", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.meters.OnlineMeter.std": [[54, 57], ["meters.OnlineMeter.var().sqrt", "meters.OnlineMeter.var"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.meters.OnlineMeter.var"], ["", "@", "property", "\n", "def", "std", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "var", "(", ")", ".", "sqrt", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.meters.AccuracyMeter.__init__": [[78, 81], ["meters.AccuracyMeter.reset"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.mixup.MixUp.reset"], ["def", "__init__", "(", "self", ",", "topk", "=", "(", "1", ",", ")", ")", ":", "\n", "        ", "self", ".", "topk", "=", "topk", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.meters.AccuracyMeter.reset": [[82, 86], ["meters.AverageMeter"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "_meters", "=", "{", "}", "\n", "for", "k", "in", "self", ".", "topk", ":", "\n", "            ", "self", ".", "_meters", "[", "k", "]", "=", "AverageMeter", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.meters.AccuracyMeter.update": [[87, 92], ["target.nelement", "meters.accuracy", "enumerate", "meters.AccuracyMeter._meters[].update"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.meters.accuracy", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.update"], ["", "", "def", "update", "(", "self", ",", "output", ",", "target", ")", ":", "\n", "        ", "n", "=", "target", ".", "nelement", "(", ")", "\n", "acc_vals", "=", "accuracy", "(", "output", ",", "target", ",", "self", ".", "topk", ")", "\n", "for", "i", ",", "k", "in", "enumerate", "(", "self", ".", "topk", ")", ":", "\n", "            ", "self", ".", "_meters", "[", "k", "]", ".", "update", "(", "acc_vals", "[", "i", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.meters.AccuracyMeter.val": [[93, 96], ["meters.AccuracyMeter._meters.items"], "methods", ["None"], ["", "", "@", "property", "\n", "def", "val", "(", "self", ")", ":", "\n", "        ", "return", "{", "n", ":", "meter", ".", "val", "for", "(", "n", ",", "meter", ")", "in", "self", ".", "_meters", ".", "items", "(", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.meters.AccuracyMeter.avg": [[97, 100], ["meters.AccuracyMeter._meters.items"], "methods", ["None"], ["", "@", "property", "\n", "def", "avg", "(", "self", ")", ":", "\n", "        ", "return", "{", "n", ":", "meter", ".", "avg", "for", "(", "n", ",", "meter", ")", "in", "self", ".", "_meters", ".", "items", "(", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.meters.AccuracyMeter.avg_error": [[101, 104], ["meters.AccuracyMeter._meters.items"], "methods", ["None"], ["", "@", "property", "\n", "def", "avg_error", "(", "self", ")", ":", "\n", "        ", "return", "{", "n", ":", "100.", "-", "meter", ".", "avg", "for", "(", "n", ",", "meter", ")", "in", "self", ".", "_meters", ".", "items", "(", ")", "}", "\n", "", "", ""]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.meters.accuracy": [[59, 73], ["max", "target.size", "output.topk", "pred.t().type_as.t().type_as", "pred.t().type_as.eq", "target.view().expand_as", "correct[].view().float().sum", "res.append", "pred.t().type_as.t", "correct[].view().float().sum.mul_", "target.view", "correct[].view().float", "correct[].view"], "function", ["None"], ["", "", "def", "accuracy", "(", "output", ",", "target", ",", "topk", "=", "(", "1", ",", ")", ")", ":", "\n", "    ", "\"\"\"Computes the precision@k for the specified values of k\"\"\"", "\n", "maxk", "=", "max", "(", "topk", ")", "\n", "batch_size", "=", "target", ".", "size", "(", "0", ")", "\n", "\n", "_", ",", "pred", "=", "output", ".", "topk", "(", "maxk", ",", "1", ",", "True", ",", "True", ")", "\n", "pred", "=", "pred", ".", "t", "(", ")", ".", "type_as", "(", "target", ")", "\n", "correct", "=", "pred", ".", "eq", "(", "target", ".", "view", "(", "1", ",", "-", "1", ")", ".", "expand_as", "(", "pred", ")", ")", "\n", "\n", "res", "=", "[", "]", "\n", "for", "k", "in", "topk", ":", "\n", "        ", "correct_k", "=", "correct", "[", ":", "k", "]", ".", "view", "(", "-", "1", ")", ".", "float", "(", ")", ".", "sum", "(", "0", ")", "\n", "res", ".", "append", "(", "correct_k", ".", "mul_", "(", "100.0", "/", "batch_size", ")", ")", "\n", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.misc.CheckpointModule.__init__": [[56, 61], ["torch.Module.__init__", "isinstance"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module", ",", "num_segments", "=", "1", ")", ":", "\n", "        ", "super", "(", "CheckpointModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "num_segments", "==", "1", "or", "isinstance", "(", "module", ",", "nn", ".", "Sequential", ")", "\n", "self", ".", "module", "=", "module", "\n", "self", ".", "num_segments", "=", "num_segments", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.misc.CheckpointModule.forward": [[62, 67], ["torch.utils.checkpoint.checkpoint_sequential", "torch.utils.checkpoint.checkpoint_sequential", "torch.utils.checkpoint.checkpoint", "torch.utils.checkpoint.checkpoint"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "num_segments", ">", "1", ":", "\n", "            ", "return", "checkpoint_sequential", "(", "self", ".", "module", ",", "self", ".", "num_segments", ",", "x", ")", "\n", "", "else", ":", "\n", "            ", "return", "checkpoint", "(", "self", ".", "module", ",", "x", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.misc.onehot": [[25, 40], ["list", "indexes.new().byte().resize_().zero_", "indexes.new().byte().resize_().zero_.scatter_", "indexes.size", "indexes.unsqueeze", "indexes.new().byte().resize_().zero_.masked_fill_", "indexes.max", "indexes.new().byte().resize_", "indexes.eq().unsqueeze", "indexes.new().byte", "indexes.eq", "indexes.new"], "function", ["None"], ["def", "onehot", "(", "indexes", ",", "N", "=", "None", ",", "ignore_index", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Creates a one-representation of indexes with N possible entries\n    if N is not specified, it will suit the maximum index appearing.\n    indexes is a long-tensor of indexes\n    ignore_index will be zero in onehot representation\n    \"\"\"", "\n", "if", "N", "is", "None", ":", "\n", "        ", "N", "=", "indexes", ".", "max", "(", ")", "+", "1", "\n", "", "sz", "=", "list", "(", "indexes", ".", "size", "(", ")", ")", "\n", "output", "=", "indexes", ".", "new", "(", ")", ".", "byte", "(", ")", ".", "resize_", "(", "*", "sz", ",", "N", ")", ".", "zero_", "(", ")", "\n", "output", ".", "scatter_", "(", "-", "1", ",", "indexes", ".", "unsqueeze", "(", "-", "1", ")", ",", "1", ")", "\n", "if", "ignore_index", "is", "not", "None", "and", "ignore_index", ">=", "0", ":", "\n", "        ", "output", ".", "masked_fill_", "(", "indexes", ".", "eq", "(", "ignore_index", ")", ".", "unsqueeze", "(", "-", "1", ")", ",", "0", ")", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.misc.set_global_seeds": [[42, 53], ["numpy.random.seed", "random.seed", "torch.manual_seed", "torch.manual_seed", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.manual_seed_all", "torch.cuda.manual_seed_all"], "function", ["None"], ["", "def", "set_global_seeds", "(", "i", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "import", "torch", "\n", "", "except", "ImportError", ":", "\n", "        ", "pass", "\n", "", "else", ":", "\n", "        ", "torch", ".", "manual_seed", "(", "i", ")", "\n", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", ":", "\n", "            ", "torch", ".", "cuda", ".", "manual_seed_all", "(", "i", ")", "\n", "", "", "np", ".", "random", ".", "seed", "(", "i", ")", "\n", "random", ".", "seed", "(", "i", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.mixup.MixUp.__init__": [[9, 13], ["torch.Module.__init__", "mixup.MixUp.reset"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.mixup.MixUp.reset"], ["    ", "def", "__init__", "(", "self", ",", "batch_dim", "=", "0", ")", ":", "\n", "        ", "super", "(", "MixUp", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "batch_dim", "=", "batch_dim", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.mixup.MixUp.reset": [[14, 18], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "enabled", "=", "False", "\n", "self", ".", "mix_values", "=", "None", "\n", "self", ".", "mix_index", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.mixup.MixUp.mix": [[19, 27], ["torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "x2.lerp", "mixup.MixUp.mix_values.to().view", "int", "x1.dim", "mixup.MixUp.mix_values.to"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.to"], ["", "def", "mix", "(", "self", ",", "x1", ",", "x2", ")", ":", "\n", "        ", "if", "not", "torch", ".", "is_tensor", "(", "self", ".", "mix_values", ")", ":", "# scalar", "\n", "            ", "return", "x2", ".", "lerp", "(", "x1", ",", "self", ".", "mix_values", ")", "\n", "", "else", ":", "\n", "            ", "view", "=", "[", "1", "]", "*", "int", "(", "x1", ".", "dim", "(", ")", ")", "\n", "view", "[", "self", ".", "batch_dim", "]", "=", "-", "1", "\n", "mix_val", "=", "self", ".", "mix_values", ".", "to", "(", "device", "=", "x1", ".", "device", ")", ".", "view", "(", "*", "view", ")", "\n", "return", "mix_val", "*", "x1", "+", "(", "1.", "-", "mix_val", ")", "*", "x2", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.mixup.MixUp.sample": [[28, 36], ["torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "numpy.random.beta", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "numpy.random.beta"], "methods", ["None"], ["", "", "def", "sample", "(", "self", ",", "alpha", ",", "batch_size", ",", "sample_batch", "=", "False", ")", ":", "\n", "        ", "self", ".", "mix_index", "=", "torch", ".", "randperm", "(", "batch_size", ")", "\n", "if", "sample_batch", ":", "\n", "            ", "values", "=", "beta", "(", "alpha", ",", "alpha", ",", "size", "=", "batch_size", ")", "\n", "self", ".", "mix_values", "=", "torch", ".", "tensor", "(", "values", ",", "dtype", "=", "torch", ".", "float", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "mix_values", "=", "torch", ".", "tensor", "(", "[", "beta", "(", "alpha", ",", "alpha", ")", "]", ",", "\n", "dtype", "=", "torch", ".", "float", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.mixup.MixUp.mix_target": [[37, 46], ["torch.nn.functional.one_hot().to", "torch.nn.functional.one_hot().to", "mixup.MixUp.mix_index.to", "torch.nn.functional.one_hot().to.index_select", "mixup.MixUp.mix", "torch.nn.functional.one_hot", "torch.nn.functional.one_hot"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.to", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.to", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.to", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.mixup.MixUp.mix"], ["", "", "def", "mix_target", "(", "self", ",", "y", ",", "n_class", ")", ":", "\n", "        ", "if", "not", "self", ".", "training", "or", "self", ".", "mix_values", "is", "None", "or", "self", ".", "mix_values", "is", "None", ":", "\n", "            ", "return", "y", "\n", "", "y", "=", "one_hot", "(", "y", ",", "n_class", ")", ".", "to", "(", "dtype", "=", "torch", ".", "float", ")", "\n", "idx", "=", "self", ".", "mix_index", ".", "to", "(", "device", "=", "y", ".", "device", ")", "\n", "y_mix", "=", "y", ".", "index_select", "(", "self", ".", "batch_dim", ",", "idx", ")", "\n", "return", "self", ".", "mix", "(", "y", ",", "y_mix", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.mixup.MixUp.forward": [[47, 55], ["mixup.MixUp.mix_index.to", "x.index_select", "mixup.MixUp.mix"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.to", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.mixup.MixUp.mix"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "not", "self", ".", "training", "or", "self", ".", "mix_values", "is", "None", "or", "self", ".", "mix_values", "is", "None", ":", "\n", "            ", "return", "x", "\n", "", "idx", "=", "self", ".", "mix_index", ".", "to", "(", "device", "=", "x", ".", "device", ")", "\n", "x_mix", "=", "x", ".", "index_select", "(", "self", ".", "batch_dim", ",", "idx", ")", "\n", "return", "self", ".", "mix", "(", "x", ",", "x_mix", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.mixup.CutMix.__init__": [[77, 79], ["mixup.MixUp.__init__"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "batch_dim", "=", "0", ")", ":", "\n", "        ", "super", "(", "CutMix", ",", "self", ")", ".", "__init__", "(", "batch_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.mixup.CutMix.mix_image": [[80, 90], ["float", "mixup.rand_bbox", "mixup.CutMix.mix_values.fill_", "x1.size", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "mixup.CutMix.mix_values.nelement", "x1.size", "x1.size"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.mixup.rand_bbox"], ["", "def", "mix_image", "(", "self", ",", "x1", ",", "x2", ")", ":", "\n", "        ", "assert", "not", "torch", ".", "is_tensor", "(", "self", ".", "mix_values", ")", "or", "self", ".", "mix_values", ".", "nelement", "(", ")", "==", "1", "\n", "lam", "=", "float", "(", "self", ".", "mix_values", ")", "\n", "bbx1", ",", "bby1", ",", "bbx2", ",", "bby2", "=", "rand_bbox", "(", "x1", ".", "size", "(", ")", ",", "lam", ")", "\n", "x1", "[", ":", ",", ":", ",", "bbx1", ":", "bbx2", ",", "bby1", ":", "bby2", "]", "=", "x2", "[", ":", ",", ":", ",", "bbx1", ":", "bbx2", ",", "bby1", ":", "bby2", "]", "\n", "lam", "=", "1", "-", "(", "(", "bbx2", "-", "bbx1", ")", "*", "(", "bby2", "-", "bby1", ")", "/", "\n", "(", "x1", ".", "size", "(", ")", "[", "-", "1", "]", "*", "x1", ".", "size", "(", ")", "[", "-", "2", "]", ")", ")", "\n", "self", ".", "mix_values", ".", "fill_", "(", "lam", ")", "\n", "return", "x1", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.mixup.CutMix.sample": [[91, 94], ["mixup.MixUp.sample"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.mixup.CutMix.sample"], ["", "def", "sample", "(", "self", ",", "alpha", ",", "batch_size", ",", "sample_batch", "=", "False", ")", ":", "\n", "        ", "assert", "not", "sample_batch", "\n", "super", "(", "CutMix", ",", "self", ")", ".", "sample", "(", "alpha", ",", "batch_size", ",", "sample_batch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.mixup.CutMix.forward": [[95, 103], ["mixup.CutMix.mix_index.to", "x.index_select", "mixup.CutMix.mix_image"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.to", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.mixup.CutMix.mix_image"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "not", "self", ".", "training", "or", "self", ".", "mix_values", "is", "None", "or", "self", ".", "mix_values", "is", "None", ":", "\n", "            ", "return", "x", "\n", "", "idx", "=", "self", ".", "mix_index", ".", "to", "(", "device", "=", "x", ".", "device", ")", "\n", "x_mix", "=", "x", ".", "index_select", "(", "self", ".", "batch_dim", ",", "idx", ")", "\n", "return", "self", ".", "mix_image", "(", "x", ",", "x_mix", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.mixup.rand_bbox": [[57, 74], ["numpy.sqrt", "numpy.int", "numpy.int", "numpy.random.randint", "numpy.random.randint", "numpy.clip", "numpy.clip", "numpy.clip", "numpy.clip"], "function", ["None"], ["", "", "def", "rand_bbox", "(", "size", ",", "lam", ")", ":", "\n", "    ", "W", "=", "size", "[", "2", "]", "\n", "H", "=", "size", "[", "3", "]", "\n", "cut_rat", "=", "np", ".", "sqrt", "(", "1.", "-", "lam", ")", "\n", "cut_w", "=", "np", ".", "int", "(", "W", "*", "cut_rat", ")", "\n", "cut_h", "=", "np", ".", "int", "(", "H", "*", "cut_rat", ")", "\n", "\n", "# uniform", "\n", "cx", "=", "np", ".", "random", ".", "randint", "(", "W", ")", "\n", "cy", "=", "np", ".", "random", ".", "randint", "(", "H", ")", "\n", "\n", "bbx1", "=", "np", ".", "clip", "(", "cx", "-", "cut_w", "//", "2", ",", "0", ",", "W", ")", "\n", "bby1", "=", "np", ".", "clip", "(", "cy", "-", "cut_h", "//", "2", ",", "0", ",", "H", ")", "\n", "bbx2", "=", "np", ".", "clip", "(", "cx", "+", "cut_w", "//", "2", ",", "0", ",", "W", ")", "\n", "bby2", "=", "np", ".", "clip", "(", "cy", "+", "cut_h", "//", "2", ",", "0", ",", "H", ")", "\n", "\n", "return", "bbx1", ",", "bby1", ",", "bbx2", ",", "bby2", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.__init__": [[100, 150], ["log.ResultsLog.clear", "os.path.isfile", "ValueError", "log.export_args_namespace", "pandas.DataFrame", "hyperdash.Experiment", "log.ResultsLog.load", "os.remove", "pandas.DataFrame", "params._get_kwargs", "log.ResultsLog.hd_experiment.param"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.clear", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.export_args_namespace", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.load", "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.bwn.BoundedWeightNorm.remove"], ["def", "__init__", "(", "self", ",", "path", "=", "''", ",", "title", "=", "''", ",", "params", "=", "None", ",", "resume", "=", "False", ",", "data_format", "=", "'csv'", ")", ":", "\n", "        ", "\"\"\"\n        Parameters\n        ----------\n        path: string\n            path to directory to save data files\n        plot_path: string\n            path to directory to save plot files\n        title: string\n            title of HTML file\n        params: Namespace\n            optionally save parameters for results\n        resume: bool\n            resume previous logging\n        data_format: str('csv'|'json')\n            which file format to use to save the data\n        \"\"\"", "\n", "if", "data_format", "not", "in", "ResultsLog", ".", "supported_data_formats", ":", "\n", "            ", "raise", "ValueError", "(", "'data_format must of the following: '", "+", "\n", "'|'", ".", "join", "(", "[", "'{}'", ".", "format", "(", "k", ")", "for", "k", "in", "ResultsLog", ".", "supported_data_formats", "]", ")", ")", "\n", "\n", "", "if", "data_format", "==", "'json'", ":", "\n", "            ", "self", ".", "data_path", "=", "'{}.json'", ".", "format", "(", "path", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "data_path", "=", "'{}.csv'", ".", "format", "(", "path", ")", "\n", "", "if", "params", "is", "not", "None", ":", "\n", "            ", "export_args_namespace", "(", "params", ",", "'{}.json'", ".", "format", "(", "path", ")", ")", "\n", "", "self", ".", "plot_path", "=", "'{}.html'", ".", "format", "(", "path", ")", "\n", "self", ".", "results", "=", "None", "\n", "self", ".", "clear", "(", ")", "\n", "self", ".", "first_save", "=", "True", "\n", "if", "os", ".", "path", ".", "isfile", "(", "self", ".", "data_path", ")", ":", "\n", "            ", "if", "resume", ":", "\n", "                ", "self", ".", "load", "(", "self", ".", "data_path", ")", "\n", "self", ".", "first_save", "=", "False", "\n", "", "else", ":", "\n", "                ", "os", ".", "remove", "(", "self", ".", "data_path", ")", "\n", "self", ".", "results", "=", "pd", ".", "DataFrame", "(", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "results", "=", "pd", ".", "DataFrame", "(", ")", "\n", "\n", "", "self", ".", "title", "=", "title", "\n", "self", ".", "data_format", "=", "data_format", "\n", "\n", "if", "HYPERDASH_AVAILABLE", ":", "\n", "            ", "name", "=", "self", ".", "title", "if", "title", "!=", "''", "else", "path", "\n", "self", ".", "hd_experiment", "=", "hyperdash", ".", "Experiment", "(", "name", ")", "\n", "if", "params", "is", "not", "None", ":", "\n", "                ", "for", "k", ",", "v", "in", "params", ".", "_get_kwargs", "(", ")", ":", "\n", "                    ", "self", ".", "hd_experiment", ".", "param", "(", "k", ",", "v", ",", "log", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.clear": [[151, 153], ["None"], "methods", ["None"], ["", "", "", "", "def", "clear", "(", "self", ")", ":", "\n", "        ", "self", ".", "figures", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.add": [[154, 165], ["pandas.DataFrame", "log.ResultsLog.results.append", "hasattr", "kwargs.items", "kwargs.values", "kwargs.keys", "log.ResultsLog.hd_experiment.metric"], "methods", ["None"], ["", "def", "add", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"Add a new row to the dataframe\n        example:\n            resultsLog.add(epoch=epoch_num, train_loss=loss,\n                           test_loss=test_loss)\n        \"\"\"", "\n", "df", "=", "pd", ".", "DataFrame", "(", "[", "kwargs", ".", "values", "(", ")", "]", ",", "columns", "=", "kwargs", ".", "keys", "(", ")", ")", "\n", "self", ".", "results", "=", "self", ".", "results", ".", "append", "(", "df", ",", "ignore_index", "=", "True", ")", "\n", "if", "hasattr", "(", "self", ",", "'hd_experiment'", ")", ":", "\n", "            ", "for", "k", ",", "v", "in", "kwargs", ".", "items", "(", ")", ":", "\n", "                ", "self", ".", "hd_experiment", ".", "metric", "(", "k", ",", "v", ",", "log", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.smooth": [[166, 172], ["log.ResultsLog.results[].rolling().mean", "log.ResultsLog.results[].rolling"], "methods", ["None"], ["", "", "", "def", "smooth", "(", "self", ",", "column_name", ",", "window", ")", ":", "\n", "        ", "\"\"\"Select an entry to smooth over time\"\"\"", "\n", "# TODO: smooth only new data", "\n", "smoothed_column", "=", "self", ".", "results", "[", "column_name", "]", ".", "rolling", "(", "\n", "window", "=", "window", ",", "center", "=", "False", ")", ".", "mean", "(", ")", "\n", "self", ".", "results", "[", "column_name", "+", "'_smoothed'", "]", "=", "smoothed_column", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.save": [[173, 199], ["len", "os.path.isfile", "bokeh.io.output_file", "bokeh.layouts.column", "bokeh.io.save", "log.ResultsLog.clear", "log.ResultsLog.results.to_json", "log.ResultsLog.results.to_csv", "os.remove", "logging.info", "bokeh.models.Div", "os.path.abspath"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.save", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.clear", "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.bwn.BoundedWeightNorm.remove"], ["", "def", "save", "(", "self", ",", "title", "=", "None", ")", ":", "\n", "        ", "\"\"\"save the json file.\n        Parameters\n        ----------\n        title: string\n            title of the HTML file\n        \"\"\"", "\n", "title", "=", "title", "or", "self", ".", "title", "\n", "if", "len", "(", "self", ".", "figures", ")", ">", "0", ":", "\n", "            ", "if", "os", ".", "path", ".", "isfile", "(", "self", ".", "plot_path", ")", ":", "\n", "                ", "os", ".", "remove", "(", "self", ".", "plot_path", ")", "\n", "", "if", "self", ".", "first_save", ":", "\n", "                ", "self", ".", "first_save", "=", "False", "\n", "logging", ".", "info", "(", "'Plot file saved at: {}'", ".", "format", "(", "\n", "os", ".", "path", ".", "abspath", "(", "self", ".", "plot_path", ")", ")", ")", "\n", "\n", "", "output_file", "(", "self", ".", "plot_path", ",", "title", "=", "title", ")", "\n", "plot", "=", "column", "(", "\n", "Div", "(", "text", "=", "'<h1 align=\"center\">{}</h1>'", ".", "format", "(", "title", ")", ")", ",", "*", "self", ".", "figures", ")", "\n", "save", "(", "plot", ")", "\n", "self", ".", "clear", "(", ")", "\n", "\n", "", "if", "self", ".", "data_format", "==", "'json'", ":", "\n", "            ", "self", ".", "results", ".", "to_json", "(", "self", ".", "data_path", ",", "orient", "=", "'records'", ",", "lines", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "results", ".", "to_csv", "(", "self", ".", "data_path", ",", "index", "=", "False", ",", "index_label", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.load": [[200, 215], ["os.path.isfile", "ValueError", "log.ResultsLog.results.read_json", "log.ResultsLog.results.read_csv"], "methods", ["None"], ["", "", "def", "load", "(", "self", ",", "path", "=", "None", ")", ":", "\n", "        ", "\"\"\"load the data file\n        Parameters\n        ----------\n        path:\n            path to load the json|csv file from\n        \"\"\"", "\n", "path", "=", "path", "or", "self", ".", "data_path", "\n", "if", "os", ".", "path", ".", "isfile", "(", "path", ")", ":", "\n", "            ", "if", "self", ".", "data_format", "==", "'json'", ":", "\n", "                ", "self", ".", "results", ".", "read_json", "(", "path", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "results", ".", "read_csv", "(", "path", ")", "\n", "", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'{} isn'", "'t a file'", ".", "format", "(", "path", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.show": [[216, 222], ["len", "bokeh.layouts.column", "bokeh.io.show", "bokeh.models.Div"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.show"], ["", "", "def", "show", "(", "self", ",", "title", "=", "None", ")", ":", "\n", "        ", "title", "=", "title", "or", "self", ".", "title", "\n", "if", "len", "(", "self", ".", "figures", ")", ">", "0", ":", "\n", "            ", "plot", "=", "column", "(", "\n", "Div", "(", "text", "=", "'<h1 align=\"center\">{}</h1>'", ".", "format", "(", "title", ")", ")", ",", "*", "self", ".", "figures", ")", "\n", "show", "(", "plot", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.plot": [[223, 232], ["log.plot_figure", "log.ResultsLog.figures.append"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.plot_figure"], ["", "", "def", "plot", "(", "self", ",", "*", "kargs", ",", "**", "kwargs", ")", ":", "\n", "        ", "\"\"\"\n        add a new plot to the HTML file\n        example:\n            results.plot(x='epoch', y=['train_loss', 'val_loss'],\n                         'title='Loss', 'ylabel'='loss')\n        \"\"\"", "\n", "f", "=", "plot_figure", "(", "self", ".", "results", ",", "*", "kargs", ",", "**", "kwargs", ")", "\n", "self", ".", "figures", ".", "append", "(", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.image": [[233, 237], ["bokeh.plotting.figure", "bokeh.plotting.figure.image", "log.ResultsLog.figures.append"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.image"], ["", "def", "image", "(", "self", ",", "*", "kargs", ",", "**", "kwargs", ")", ":", "\n", "        ", "fig", "=", "figure", "(", ")", "\n", "fig", ".", "image", "(", "*", "kargs", ",", "**", "kwargs", ")", "\n", "self", ".", "figures", ".", "append", "(", "fig", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.end": [[238, 241], ["hasattr", "log.ResultsLog.hd_experiment.end"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.end"], ["", "def", "end", "(", "self", ")", ":", "\n", "        ", "if", "hasattr", "(", "self", ",", "'hd_experiment'", ")", ":", "\n", "            ", "self", ".", "hd_experiment", ".", "end", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.export_args_namespace": [[22, 31], ["open", "json.dump", "dict", "args._get_kwargs"], "function", ["None"], ["", "def", "export_args_namespace", "(", "args", ",", "filename", ")", ":", "\n", "    ", "\"\"\"\n    args: argparse.Namespace\n        arguments to save\n    filename: string\n        filename to save at\n    \"\"\"", "\n", "with", "open", "(", "filename", ",", "'w'", ")", "as", "fp", ":", "\n", "        ", "json", ".", "dump", "(", "dict", "(", "args", ".", "_get_kwargs", "(", ")", ")", ",", "fp", ",", "sort_keys", "=", "True", ",", "indent", "=", "4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.setup_logging": [[33, 58], ["logging.getLogger", "logging.getLogger", "logging.basicConfig", "logging.StreamHandler", "logging.StreamHandler.setLevel", "logging.Formatter", "logging.StreamHandler.setFormatter", "logging.getLogger().addHandler", "os.path.isfile", "logging.getLogger.removeHandler", "logging.getLogger"], "function", ["None"], ["", "", "def", "setup_logging", "(", "log_file", "=", "'log.txt'", ",", "resume", "=", "False", ",", "dummy", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n    Setup logging configuration\n    \"\"\"", "\n", "if", "dummy", ":", "\n", "        ", "logging", ".", "getLogger", "(", "'dummy'", ")", "\n", "", "else", ":", "\n", "        ", "if", "os", ".", "path", ".", "isfile", "(", "log_file", ")", "and", "resume", ":", "\n", "            ", "file_mode", "=", "'a'", "\n", "", "else", ":", "\n", "            ", "file_mode", "=", "'w'", "\n", "\n", "", "root_logger", "=", "logging", ".", "getLogger", "(", ")", "\n", "if", "root_logger", ".", "handlers", ":", "\n", "            ", "root_logger", ".", "removeHandler", "(", "root_logger", ".", "handlers", "[", "0", "]", ")", "\n", "", "logging", ".", "basicConfig", "(", "level", "=", "logging", ".", "DEBUG", ",", "\n", "format", "=", "\"%(asctime)s - %(levelname)s - %(message)s\"", ",", "\n", "datefmt", "=", "\"%Y-%m-%d %H:%M:%S\"", ",", "\n", "filename", "=", "log_file", ",", "\n", "filemode", "=", "file_mode", ")", "\n", "console", "=", "logging", ".", "StreamHandler", "(", ")", "\n", "console", ".", "setLevel", "(", "logging", ".", "INFO", ")", "\n", "formatter", "=", "logging", ".", "Formatter", "(", "'%(message)s'", ")", "\n", "console", ".", "setFormatter", "(", "formatter", ")", "\n", "logging", ".", "getLogger", "(", "''", ")", ".", "addHandler", "(", "console", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.plot_figure": [[60, 94], ["itertools.cycle", "enumerate", "isinstance", "len", "len", "bokeh.plotting.figure", "bokeh.plotting.figure.line", "next"], "function", ["None"], ["", "", "def", "plot_figure", "(", "data", ",", "x", ",", "y", ",", "title", "=", "None", ",", "xlabel", "=", "None", ",", "ylabel", "=", "None", ",", "legend", "=", "None", ",", "\n", "x_axis_type", "=", "'linear'", ",", "y_axis_type", "=", "'linear'", ",", "\n", "width", "=", "800", ",", "height", "=", "400", ",", "line_width", "=", "2", ",", "\n", "colors", "=", "[", "'red'", ",", "'green'", ",", "'blue'", ",", "'orange'", ",", "\n", "'black'", ",", "'purple'", ",", "'brown'", "]", ",", "\n", "tools", "=", "'pan,box_zoom,wheel_zoom,box_select,hover,reset,save'", ",", "\n", "append_figure", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    creates a new plot figures\n    example:\n        plot_figure(x='epoch', y=['train_loss', 'val_loss'],\n                        'title='Loss', 'ylabel'='loss')\n    \"\"\"", "\n", "if", "not", "isinstance", "(", "y", ",", "list", ")", ":", "\n", "        ", "y", "=", "[", "y", "]", "\n", "", "xlabel", "=", "xlabel", "or", "x", "\n", "legend", "=", "legend", "or", "y", "\n", "assert", "len", "(", "legend", ")", "==", "len", "(", "y", ")", "\n", "if", "append_figure", "is", "not", "None", ":", "\n", "        ", "f", "=", "append_figure", "\n", "", "else", ":", "\n", "        ", "f", "=", "figure", "(", "title", "=", "title", ",", "tools", "=", "tools", ",", "\n", "width", "=", "width", ",", "height", "=", "height", ",", "\n", "x_axis_label", "=", "xlabel", "or", "x", ",", "\n", "y_axis_label", "=", "ylabel", "or", "''", ",", "\n", "x_axis_type", "=", "x_axis_type", ",", "\n", "y_axis_type", "=", "y_axis_type", ")", "\n", "", "colors", "=", "cycle", "(", "colors", ")", "\n", "for", "i", ",", "yi", "in", "enumerate", "(", "y", ")", ":", "\n", "        ", "f", ".", "line", "(", "data", "[", "x", "]", ",", "data", "[", "yi", "]", ",", "\n", "line_width", "=", "line_width", ",", "\n", "line_color", "=", "next", "(", "colors", ")", ",", "legend", "=", "legend", "[", "i", "]", ")", "\n", "", "f", ".", "legend", ".", "click_policy", "=", "\"hide\"", "\n", "return", "f", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.save_checkpoint": [[243, 251], ["os.path.join", "torch.save", "shutil.copyfile", "shutil.copyfile", "os.path.join", "os.path.join"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.save"], ["", "", "", "def", "save_checkpoint", "(", "state", ",", "is_best", ",", "path", "=", "'.'", ",", "filename", "=", "'checkpoint.pth.tar'", ",", "save_all", "=", "False", ")", ":", "\n", "    ", "filename", "=", "os", ".", "path", ".", "join", "(", "path", ",", "filename", ")", "\n", "torch", ".", "save", "(", "state", ",", "filename", ")", "\n", "if", "is_best", ":", "\n", "        ", "shutil", ".", "copyfile", "(", "filename", ",", "os", ".", "path", ".", "join", "(", "path", ",", "'model_best.pth.tar'", ")", ")", "\n", "", "if", "save_all", ":", "\n", "        ", "shutil", ".", "copyfile", "(", "filename", ",", "os", ".", "path", ".", "join", "(", "\n", "path", ",", "'checkpoint_epoch_%s.pth.tar'", "%", "state", "[", "'epoch'", "]", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.absorb_bn.remove_bn_params": [[6, 11], ["bn_module.register_buffer", "bn_module.register_buffer", "bn_module.register_parameter", "bn_module.register_parameter"], "function", ["None"], ["def", "remove_bn_params", "(", "bn_module", ")", ":", "\n", "    ", "bn_module", ".", "register_buffer", "(", "'running_mean'", ",", "None", ")", "\n", "bn_module", ".", "register_buffer", "(", "'running_var'", ",", "None", ")", "\n", "bn_module", ".", "register_parameter", "(", "'weight'", ",", "None", ")", "\n", "bn_module", ".", "register_parameter", "(", "'bias'", ",", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.absorb_bn.init_bn_params": [[13, 16], ["bn_module.running_mean.fill_", "bn_module.running_var.fill_"], "function", ["None"], ["", "def", "init_bn_params", "(", "bn_module", ")", ":", "\n", "    ", "bn_module", ".", "running_mean", ".", "fill_", "(", "0", ")", "\n", "bn_module", ".", "running_var", ".", "fill_", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.absorb_bn.absorb_bn": [[17, 47], ["torch.no_grad", "torch.no_grad", "hasattr", "hasattr", "torch.zeros", "torch.zeros", "torch.Parameter", "module.register_parameter", "b.add_", "bn_module.running_var.clone().add_().pow_", "w.mul_", "b.mul_", "hasattr", "hasattr", "absorb_bn.remove_bn_params", "absorb_bn.init_bn_params", "logging.info", "bn_module.running_var.clone().add_().pow_.view", "w.mul_", "b.mul_", "b.add_", "bn_module.running_var.clone().add_", "w.size", "bn_module.weight.view", "w.size", "bn_module.running_var.clone"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.absorb_bn.remove_bn_params", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.absorb_bn.init_bn_params"], ["", "def", "absorb_bn", "(", "module", ",", "bn_module", ",", "remove_bn", "=", "True", ",", "verbose", "=", "False", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "w", "=", "module", ".", "weight", "\n", "if", "module", ".", "bias", "is", "None", ":", "\n", "            ", "zeros", "=", "torch", ".", "zeros", "(", "module", ".", "out_channels", ",", "\n", "dtype", "=", "w", ".", "dtype", ",", "device", "=", "w", ".", "device", ")", "\n", "bias", "=", "nn", ".", "Parameter", "(", "zeros", ")", "\n", "module", ".", "register_parameter", "(", "'bias'", ",", "bias", ")", "\n", "", "b", "=", "module", ".", "bias", "\n", "\n", "if", "hasattr", "(", "bn_module", ",", "'running_mean'", ")", ":", "\n", "            ", "b", ".", "add_", "(", "-", "bn_module", ".", "running_mean", ")", "\n", "", "if", "hasattr", "(", "bn_module", ",", "'running_var'", ")", ":", "\n", "            ", "invstd", "=", "bn_module", ".", "running_var", ".", "clone", "(", ")", ".", "add_", "(", "bn_module", ".", "eps", ")", ".", "pow_", "(", "-", "0.5", ")", "\n", "w", ".", "mul_", "(", "invstd", ".", "view", "(", "w", ".", "size", "(", "0", ")", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "b", ".", "mul_", "(", "invstd", ")", "\n", "\n", "", "if", "remove_bn", ":", "\n", "            ", "if", "hasattr", "(", "bn_module", ",", "'weight'", ")", ":", "\n", "                ", "w", ".", "mul_", "(", "bn_module", ".", "weight", ".", "view", "(", "w", ".", "size", "(", "0", ")", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "b", ".", "mul_", "(", "bn_module", ".", "weight", ")", "\n", "", "if", "hasattr", "(", "bn_module", ",", "'bias'", ")", ":", "\n", "                ", "b", ".", "add_", "(", "bn_module", ".", "bias", ")", "\n", "", "remove_bn_params", "(", "bn_module", ")", "\n", "", "else", ":", "\n", "            ", "init_bn_params", "(", "bn_module", ")", "\n", "\n", "", "if", "verbose", ":", "\n", "            ", "logging", ".", "info", "(", "'BN module %s was asborbed into layer %s'", "%", "\n", "(", "bn_module", ",", "module", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.absorb_bn.is_bn": [[49, 51], ["isinstance", "isinstance"], "function", ["None"], ["", "", "", "def", "is_bn", "(", "m", ")", ":", "\n", "    ", "return", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", "or", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm1d", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.absorb_bn.is_absorbing": [[53, 55], ["isinstance", "isinstance"], "function", ["None"], ["", "def", "is_absorbing", "(", "m", ")", ":", "\n", "    ", "return", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", "or", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.absorb_bn.search_absorb_bn": [[57, 64], ["torch.no_grad", "torch.no_grad", "model.children", "absorb_bn.search_absorb_bn", "absorb_bn.is_bn", "absorb_bn.is_absorbing", "absorb_bn.absorb_bn"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.absorb_bn.search_absorb_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.is_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.absorb_bn.is_absorbing", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.absorb_bn.absorb_bn"], ["", "def", "search_absorb_bn", "(", "model", ",", "prev", "=", "None", ",", "remove_bn", "=", "True", ",", "verbose", "=", "False", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "m", "in", "model", ".", "children", "(", ")", ":", "\n", "            ", "if", "is_bn", "(", "m", ")", "and", "is_absorbing", "(", "prev", ")", ":", "\n", "                ", "absorb_bn", "(", "prev", ",", "m", ",", "remove_bn", "=", "remove_bn", ",", "verbose", "=", "verbose", ")", "\n", "", "search_absorb_bn", "(", "m", ",", "remove_bn", "=", "remove_bn", ",", "verbose", "=", "verbose", ")", "\n", "prev", "=", "m", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim._EmptySchedule.__init__": [[24, 27], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "optimizer", ",", "last_epoch", "=", "-", "1", ")", ":", "\n", "        ", "super", "(", "_EmptySchedule", ",", "self", ")", ".", "__init__", "(", "optimizer", ",", "last_epoch", "=", "-", "1", ")", "\n", "self", ".", "last_epoch", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim._EmptySchedule.step": [[28, 31], ["None"], "methods", ["None"], ["", "def", "step", "(", "self", ",", "epoch", "=", "None", ")", ":", "\n", "        ", "if", "epoch", "is", "None", ":", "\n", "            ", "epoch", "=", "self", ".", "last_epoch", "+", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.ModuleFloatShadow.__init__": [[48, 53], ["torch.Module.__init__", "copy.deepcopy", "optim.ModuleFloatShadow.float_module.to"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.to"], ["    ", "def", "__init__", "(", "self", ",", "module", ")", ":", "\n", "        ", "super", "(", "ModuleFloatShadow", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "original_module", "=", "module", "\n", "self", ".", "float_module", "=", "deepcopy", "(", "module", ")", "\n", "self", ".", "float_module", ".", "to", "(", "dtype", "=", "torch", ".", "float", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.ModuleFloatShadow.parameters": [[54, 56], ["optim.ModuleFloatShadow.float_module.parameters"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.parameters"], ["", "def", "parameters", "(", "self", ",", "*", "kargs", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "self", ".", "float_module", ".", "parameters", "(", "*", "kargs", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.ModuleFloatShadow.named_parameters": [[57, 59], ["optim.ModuleFloatShadow.float_module.named_parameters"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.named_parameters"], ["", "def", "named_parameters", "(", "self", ",", "*", "kargs", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "self", ".", "float_module", ".", "named_parameters", "(", "*", "kargs", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.ModuleFloatShadow.modules": [[60, 62], ["optim.ModuleFloatShadow.float_module.modules"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.modules"], ["", "def", "modules", "(", "self", ",", "*", "kargs", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "self", ".", "float_module", ".", "modules", "(", "*", "kargs", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.ModuleFloatShadow.named_modules": [[63, 65], ["optim.ModuleFloatShadow.float_module.named_modules"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.named_modules"], ["", "def", "named_modules", "(", "self", ",", "*", "kargs", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "self", ".", "float_module", ".", "named_modules", "(", "*", "kargs", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.ModuleFloatShadow.original_parameters": [[66, 68], ["optim.ModuleFloatShadow.original_module.parameters"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.parameters"], ["", "def", "original_parameters", "(", "self", ",", "*", "kargs", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "self", ".", "original_module", ".", "parameters", "(", "*", "kargs", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.ModuleFloatShadow.original_named_parameters": [[69, 71], ["optim.ModuleFloatShadow.original_module.named_parameters"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.named_parameters"], ["", "def", "original_named_parameters", "(", "self", ",", "*", "kargs", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "self", ".", "original_module", ".", "named_parameters", "(", "*", "kargs", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.ModuleFloatShadow.original_modules": [[72, 74], ["optim.ModuleFloatShadow.original_module.modules"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.modules"], ["", "def", "original_modules", "(", "self", ",", "*", "kargs", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "self", ".", "original_module", ".", "modules", "(", "*", "kargs", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.ModuleFloatShadow.original_named_modules": [[75, 77], ["optim.ModuleFloatShadow.original_module.named_modules"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.named_modules"], ["", "def", "original_named_modules", "(", "self", ",", "*", "kargs", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "self", ".", "original_module", ".", "named_modules", "(", "*", "kargs", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.OptimRegime.__init__": [[100, 115], ["regime.Regime.__init__", "list", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "regularization.Regularizer", "optim._EmptySchedule", "param_filter.FilterParameters", "optim.ModuleFloatShadow", "list", "optim.ModuleFloatShadow.parameters", "optim.ModuleFloatShadow.original_parameters"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.parameters", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.ModuleFloatShadow.original_parameters"], ["def", "__init__", "(", "self", ",", "model", ",", "regime", ",", "defaults", "=", "{", "}", ",", "filter", "=", "None", ",", "use_float_copy", "=", "False", ",", "log", "=", "True", ")", ":", "\n", "        ", "super", "(", "OptimRegime", ",", "self", ")", ".", "__init__", "(", "regime", ",", "defaults", ")", "\n", "if", "filter", "is", "not", "None", ":", "\n", "            ", "model", "=", "FilterParameters", "(", "model", ",", "**", "filter", ")", "\n", "", "if", "use_float_copy", ":", "\n", "            ", "model", "=", "ModuleFloatShadow", "(", "model", ")", "\n", "self", ".", "_original_parameters", "=", "list", "(", "model", ".", "original_parameters", "(", ")", ")", "\n", "\n", "", "self", ".", "parameters", "=", "list", "(", "model", ".", "parameters", "(", ")", ")", "\n", "self", ".", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "self", ".", "parameters", ",", "lr", "=", "0", ")", "\n", "self", ".", "regularizer", "=", "regularization", ".", "Regularizer", "(", "model", ")", "\n", "self", ".", "use_float_copy", "=", "use_float_copy", "\n", "self", ".", "lr_scheduler", "=", "_EmptySchedule", "(", "self", ".", "optimizer", ",", "last_epoch", "=", "-", "1", ")", "\n", "self", ".", "schedule_time_frame", "=", "'epoch'", "\n", "self", ".", "log", "=", "log", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.OptimRegime.update": [[116, 141], ["super().update", "optim.OptimRegime.adjust", "isinstance", "optim.OptimRegime.lr_scheduler.step", "int", "optim.OptimRegime.get_lr", "optim.OptimRegime.lr_scheduler.step", "logging.debug", "math.floor", "optim.OptimRegime.get_lr", "optim.OptimRegime.get_lr"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.update", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.OptimRegime.adjust", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.step", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.get_lr", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.step", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.get_lr", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.get_lr"], ["", "def", "update", "(", "self", ",", "epoch", "=", "None", ",", "train_steps", "=", "None", ",", "metrics", "=", "None", ")", ":", "\n", "        ", "\"\"\"adjusts optimizer according to current epoch or steps and training regime.\n        \"\"\"", "\n", "updated", "=", "False", "\n", "if", "super", "(", "OptimRegime", ",", "self", ")", ".", "update", "(", "epoch", ",", "train_steps", ")", ":", "\n", "            ", "self", ".", "adjust", "(", "self", ".", "setting", ")", "\n", "updated", "=", "True", "\n", "", "if", "self", ".", "schedule_time_frame", "==", "'epoch'", ":", "\n", "            ", "time", "=", "int", "(", "floor", "(", "epoch", ")", ")", "+", "1", "\n", "", "elif", "self", ".", "schedule_time_frame", "==", "'step'", ":", "\n", "            ", "time", "=", "train_steps", "+", "1", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "\n", "\n", "", "if", "time", "!=", "self", ".", "lr_scheduler", ".", "last_epoch", ":", "\n", "            ", "prev_lr", "=", "self", ".", "get_lr", "(", ")", "[", "0", "]", "\n", "if", "isinstance", "(", "self", ".", "lr_scheduler", ",", "torch", ".", "optim", ".", "lr_scheduler", ".", "ReduceLROnPlateau", ")", ":", "\n", "                ", "self", ".", "lr_scheduler", ".", "step", "(", "metrics", ",", "epoch", "=", "time", ")", "\n", "", "self", ".", "lr_scheduler", ".", "step", "(", "epoch", "=", "time", ")", "\n", "updated", "=", "True", "\n", "if", "prev_lr", "!=", "self", ".", "get_lr", "(", ")", "[", "0", "]", "and", "self", ".", "log", ":", "\n", "                ", "logging", ".", "debug", "(", "'OPTIMIZER - lr scheduled = %s'", "\n", "%", "self", ".", "get_lr", "(", ")", "[", "0", "]", ")", "\n", "\n", "", "", "return", "updated", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.OptimRegime.adjust": [[142, 209], ["setting.get", "param_group.keys", "copy.deepcopy", "regularization.RegularizerList", "isinstance", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "torch.optim.SGD", "isinstance", "optim_method", "isinstance", "isinstance", "setting.get", "logging.debug", "logging.debug", "isinstance", "isinstance", "reg.pop", "regularizers.append", "isinstance", "schedule_config.pop", "schedule_config.pop", "regularizers.append", "regularizers.append", "optim._EmptySchedule", "logging.debug", "list", "hasattr", "reg", "map"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataRegime.get", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataRegime.get"], ["", "def", "adjust", "(", "self", ",", "setting", ")", ":", "\n", "        ", "\"\"\"adjusts optimizer according to a setting dict.\n        e.g: setting={optimizer': 'Adam', 'lr': 5e-4}\n        \"\"\"", "\n", "reset", "=", "setting", ".", "get", "(", "'reset'", ",", "False", ")", "\n", "if", "'optimizer'", "in", "setting", "or", "reset", ":", "\n", "            ", "optim_method", "=", "_OPTIMIZERS", "[", "setting", ".", "get", "(", "'optimizer'", ",", "'SGD'", ")", "]", "\n", "if", "reset", ":", "# reset the optimizer cache:", "\n", "                ", "self", ".", "optimizer", "=", "torch", ".", "optim", ".", "SGD", "(", "self", ".", "parameters", ",", "lr", "=", "0", ")", "\n", "if", "self", ".", "log", ":", "\n", "                    ", "logging", ".", "debug", "(", "'OPTIMIZER - reset setting'", ")", "\n", "", "", "if", "not", "isinstance", "(", "self", ".", "optimizer", ",", "optim_method", ")", ":", "\n", "                ", "self", ".", "optimizer", "=", "optim_method", "(", "self", ".", "optimizer", ".", "param_groups", ")", "\n", "if", "self", ".", "log", ":", "\n", "                    ", "logging", ".", "debug", "(", "'OPTIMIZER - setting method = %s'", "%", "\n", "setting", "[", "'optimizer'", "]", ")", "\n", "", "", "", "for", "param_group", "in", "self", ".", "optimizer", ".", "param_groups", ":", "\n", "            ", "for", "key", "in", "param_group", ".", "keys", "(", ")", ":", "\n", "                ", "if", "key", "in", "setting", ":", "\n", "                    ", "new_val", "=", "setting", "[", "key", "]", "\n", "if", "new_val", "!=", "param_group", "[", "key", "]", ":", "\n", "                        ", "if", "self", ".", "log", ":", "\n", "                            ", "logging", ".", "debug", "(", "'OPTIMIZER - setting %s = %s'", "%", "\n", "(", "key", ",", "setting", "[", "key", "]", ")", ")", "\n", "", "param_group", "[", "key", "]", "=", "setting", "[", "key", "]", "\n", "if", "key", "==", "'lr'", ":", "\n", "                            ", "param_group", "[", "'initial_lr'", "]", "=", "param_group", "[", "'lr'", "]", "\n", "base_lrs", "=", "list", "(", "map", "(", "lambda", "group", ":", "group", "[", "'lr'", "]", ",", "\n", "self", ".", "optimizer", ".", "param_groups", ")", ")", "\n", "self", ".", "lr_scheduler", ".", "base_lrs", "=", "base_lrs", "\n", "\n", "# fix for AdaBound", "\n", "if", "hasattr", "(", "self", ".", "optimizer", ",", "'base_lrs'", ")", ":", "\n", "                                ", "self", ".", "optimizer", ".", "base_lrs", "=", "base_lrs", "\n", "\n", "", "", "", "", "", "", "if", "'regularizer'", "in", "setting", ":", "\n", "            ", "reg_list", "=", "deepcopy", "(", "setting", "[", "'regularizer'", "]", ")", "\n", "if", "not", "(", "isinstance", "(", "reg_list", ",", "list", ")", "or", "isinstance", "(", "reg_list", ",", "tuple", ")", ")", ":", "\n", "                ", "reg_list", "=", "(", "reg_list", ",", ")", "\n", "", "regularizers", "=", "[", "]", "\n", "for", "reg", "in", "reg_list", ":", "\n", "                ", "if", "isinstance", "(", "reg", ",", "dict", ")", ":", "\n", "                    ", "name", "=", "reg", ".", "pop", "(", "'name'", ")", "\n", "regularizers", ".", "append", "(", "(", "regularization", ".", "__dict__", "[", "name", "]", ",", "reg", ")", ")", "\n", "", "elif", "isinstance", "(", "reg", ",", "regularization", ".", "Regularizer", ")", ":", "\n", "                    ", "regularizers", ".", "append", "(", "reg", ")", "\n", "", "else", ":", "# callable on model", "\n", "                    ", "regularizers", ".", "append", "(", "reg", "(", "self", ".", "regularizer", ".", "_model", ")", ")", "\n", "", "", "self", ".", "regularizer", "=", "regularization", ".", "RegularizerList", "(", "self", ".", "regularizer", ".", "_model", ",", "\n", "regularizers", ")", "\n", "\n", "", "if", "'lr_scheduler'", "in", "setting", ":", "\n", "            ", "schedule_config", "=", "setting", "[", "'lr_scheduler'", "]", "\n", "if", "isinstance", "(", "schedule_config", ",", "_LRScheduler", ")", ":", "\n", "                ", "self", ".", "lr_scheduler", "=", "schedule_config", "\n", "", "elif", "isinstance", "(", "schedule_config", ",", "dict", ")", ":", "\n", "                ", "name", "=", "schedule_config", ".", "pop", "(", "'name'", ")", "\n", "self", ".", "schedule_time_frame", "=", "schedule_config", ".", "pop", "(", "'time_frame'", ",", "\n", "'epoch'", ")", "\n", "schedule_config", "[", "'last_epoch'", "]", "=", "self", ".", "lr_scheduler", ".", "last_epoch", "\n", "self", ".", "lr_scheduler", "=", "_LRSCHEDULERS", "[", "name", "]", "(", "self", ".", "optimizer", ",", "\n", "**", "schedule_config", ")", "\n", "", "elif", "schedule_config", "is", "None", ":", "\n", "                ", "self", ".", "lr_scheduler", "=", "_EmptySchedule", "(", "self", ".", "optimizer", ",", "\n", "last_epoch", "=", "self", ".", "lr_scheduler", ".", "last_epoch", ")", "\n", "", "else", ":", "# invalid config", "\n", "                ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.OptimRegime.__getstate__": [[210, 214], ["optim.OptimRegime.optimizer.__getstate__"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.OptimRegime.__getstate__"], ["", "", "", "def", "__getstate__", "(", "self", ")", ":", "\n", "        ", "return", "{", "\n", "'optimizer_state'", ":", "self", ".", "optimizer", ".", "__getstate__", "(", ")", ",", "\n", "'regime'", ":", "self", ".", "regime", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.OptimRegime.__setstate__": [[216, 219], ["state.get", "optim.OptimRegime.optimizer.__setstate__", "state.get"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataRegime.get", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.OptimRegime.__setstate__", "home.repos.pwc.inspect_result.berryweinst_mms-select.None.data.SampledDataRegime.get"], ["", "def", "__setstate__", "(", "self", ",", "state", ")", ":", "\n", "        ", "self", ".", "regime", "=", "state", ".", "get", "(", "'regime'", ")", "\n", "self", ".", "optimizer", ".", "__setstate__", "(", "state", ".", "get", "(", "'optimizer_state'", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.OptimRegime.state_dict": [[220, 224], ["optim.OptimRegime.optimizer.state_dict"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.OptimRegime.state_dict"], ["", "def", "state_dict", "(", "self", ")", ":", "\n", "        ", "\"\"\"Returns the state of the optimizer as a :class:`dict`.\n        \"\"\"", "\n", "return", "self", ".", "optimizer", ".", "state_dict", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.OptimRegime.load_state_dict": [[225, 234], ["optim.OptimRegime.optimizer.load_state_dict"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.OptimRegime.load_state_dict"], ["", "def", "load_state_dict", "(", "self", ",", "state_dict", ")", ":", "\n", "        ", "\"\"\"Loads the optimizer state.\n\n        Arguments:\n            state_dict (dict): optimizer state. Should be an object returned\n                from a call to :meth:`state_dict`.\n        \"\"\"", "\n", "# deepcopy, to be consistent with module API", "\n", "self", ".", "optimizer", ".", "load_state_dict", "(", "state_dict", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.OptimRegime.zero_grad": [[235, 242], ["optim.OptimRegime.optimizer.zero_grad", "p.grad.detach().zero_", "p.grad.detach"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.zero_grad"], ["", "def", "zero_grad", "(", "self", ")", ":", "\n", "        ", "\"\"\"Clears the gradients of all optimized :class:`Variable` s.\"\"\"", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "if", "self", ".", "use_float_copy", ":", "\n", "            ", "for", "p", "in", "self", ".", "_original_parameters", ":", "\n", "                ", "if", "p", ".", "grad", "is", "not", "None", ":", "\n", "                    ", "p", ".", "grad", ".", "detach", "(", ")", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.OptimRegime.step": [[243, 254], ["optim.OptimRegime.regularizer.pre_step", "optim.OptimRegime.optimizer.step", "optim.OptimRegime.regularizer.post_step", "optim.copy_params_grad", "optim.copy_params"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.Consolidate.pre_step", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.step", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.Consolidate.post_step", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.copy_params_grad", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.copy_params"], ["", "", "", "", "def", "step", "(", "self", ")", ":", "\n", "        ", "\"\"\"Performs a single optimization step (parameter update).\n        \"\"\"", "\n", "if", "self", ".", "use_float_copy", ":", "\n", "            ", "copy_params_grad", "(", "self", ".", "parameters", ",", "self", ".", "_original_parameters", ")", "\n", "", "self", ".", "regularizer", ".", "pre_step", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "self", ".", "regularizer", ".", "post_step", "(", ")", "\n", "\n", "if", "self", ".", "use_float_copy", ":", "\n", "            ", "copy_params", "(", "self", ".", "_original_parameters", ",", "self", ".", "parameters", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.OptimRegime.pre_forward": [[255, 259], ["optim.OptimRegime.regularizer.pre_forward"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.AbsorbBN.pre_forward"], ["", "", "def", "pre_forward", "(", "self", ")", ":", "\n", "        ", "\"\"\" allows modification pre-forward pass - e.g for regularization\n        \"\"\"", "\n", "self", ".", "regularizer", ".", "pre_forward", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.OptimRegime.pre_backward": [[260, 264], ["optim.OptimRegime.regularizer.pre_backward"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.DropConnect.pre_backward"], ["", "def", "pre_backward", "(", "self", ")", ":", "\n", "        ", "\"\"\" allows modification post-forward pass and pre-backward - e.g for regularization\n        \"\"\"", "\n", "self", ".", "regularizer", ".", "pre_backward", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.OptimRegime.get_value": [[265, 267], ["None"], "methods", ["None"], ["", "def", "get_value", "(", "self", ",", "key", ")", ":", "\n", "        ", "return", "[", "group", "[", "key", "]", "for", "group", "in", "self", ".", "optimizer", ".", "param_groups", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.OptimRegime.get_lr": [[268, 270], ["optim.OptimRegime.get_value"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.get_value"], ["", "def", "get_lr", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "get_value", "(", "'lr'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.__init__": [[274, 280], ["isinstance", "optim.MultiOptimRegime.optim_regime_list.append"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "*", "optim_regime_list", ",", "log", "=", "True", ")", ":", "\n", "        ", "self", ".", "optim_regime_list", "=", "[", "]", "\n", "for", "optim_regime", "in", "optim_regime_list", ":", "\n", "            ", "assert", "isinstance", "(", "optim_regime", ",", "OptimRegime", ")", "\n", "self", ".", "optim_regime_list", ".", "append", "(", "optim_regime", ")", "\n", "", "self", ".", "log", "=", "log", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.update": [[281, 291], ["enumerate", "optim.update", "logging.debug"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.update"], ["", "def", "update", "(", "self", ",", "epoch", "=", "None", ",", "train_steps", "=", "None", ")", ":", "\n", "        ", "\"\"\"adjusts optimizer according to current epoch or steps and training regime.\n        \"\"\"", "\n", "updated", "=", "False", "\n", "for", "i", ",", "optim", "in", "enumerate", "(", "self", ".", "optim_regime_list", ")", ":", "\n", "            ", "current_updated", "=", "optim", ".", "update", "(", "epoch", ",", "train_steps", ")", "\n", "if", "current_updated", "and", "self", ".", "log", ":", "\n", "                ", "logging", ".", "debug", "(", "'OPTIMIZER #%s was updated'", "%", "i", ")", "\n", "", "updated", "=", "updated", "or", "current_updated", "\n", "", "return", "updated", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.zero_grad": [[292, 296], ["optim.zero_grad"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.zero_grad"], ["", "def", "zero_grad", "(", "self", ")", ":", "\n", "        ", "\"\"\"Clears the gradients of all optimized :class:`Variable` s.\"\"\"", "\n", "for", "optim", "in", "self", ".", "optim_regime_list", ":", "\n", "            ", "optim", ".", "zero_grad", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.step": [[297, 302], ["optim.step"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.step"], ["", "", "def", "step", "(", "self", ")", ":", "\n", "        ", "\"\"\"Performs a single optimization step (parameter update).\n        \"\"\"", "\n", "for", "optim", "in", "self", ".", "optim_regime_list", ":", "\n", "            ", "optim", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.pre_forward": [[303, 306], ["optim.pre_forward"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.AbsorbBN.pre_forward"], ["", "", "def", "pre_forward", "(", "self", ")", ":", "\n", "        ", "for", "optim", "in", "self", ".", "optim_regime_list", ":", "\n", "            ", "optim", ".", "pre_forward", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.pre_backward": [[307, 310], ["optim.pre_backward"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.DropConnect.pre_backward"], ["", "", "def", "pre_backward", "(", "self", ")", ":", "\n", "        ", "for", "optim", "in", "self", ".", "optim_regime_list", ":", "\n", "            ", "optim", ".", "pre_backward", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.__repr__": [[311, 313], ["str", "str"], "methods", ["None"], ["", "", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "str", "(", "[", "str", "(", "optim", ")", "for", "optim", "in", "self", ".", "optim_regime_list", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.get_value": [[314, 317], ["None"], "methods", ["None"], ["", "def", "get_value", "(", "self", ",", "key", ")", ":", "\n", "        ", "return", "[", "[", "group", "[", "key", "]", "for", "group", "in", "optim", ".", "optimizer", ".", "param_groups", "]", "\n", "for", "optim", "in", "self", ".", "optim_regime_list", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.get_lr": [[318, 320], ["optim.MultiOptimRegime.get_value"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.get_value"], ["", "def", "get_lr", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "get_value", "(", "'lr'", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.copy_params": [[33, 37], ["torch.no_grad", "torch.no_grad", "zip", "p_target.copy_"], "function", ["None"], ["", "", "", "def", "copy_params", "(", "param_target", ",", "param_src", ")", ":", "\n", "    ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "for", "p_src", ",", "p_target", "in", "zip", "(", "param_src", ",", "param_target", ")", ":", "\n", "            ", "p_target", ".", "copy_", "(", "p_src", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.copy_params_grad": [[39, 45], ["zip", "p_target.backward", "p_target.grad.detach().copy_", "p_src.grad.to", "p_target.grad.detach"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.UniformQuantizeGrad.backward", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.to"], ["", "", "", "def", "copy_params_grad", "(", "param_target", ",", "param_src", ")", ":", "\n", "    ", "for", "p_src", ",", "p_target", "in", "zip", "(", "param_src", ",", "param_target", ")", ":", "\n", "        ", "if", "p_target", ".", "grad", "is", "None", ":", "\n", "            ", "p_target", ".", "backward", "(", "p_src", ".", "grad", ".", "to", "(", "dtype", "=", "p_target", ".", "dtype", ")", ")", "\n", "", "else", ":", "\n", "            ", "p_target", ".", "grad", ".", "detach", "(", ")", ".", "copy_", "(", "p_src", ".", "grad", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.quantize.quantize_tensor": [[8, 30], ["int", "q_x.round().byte.clamp_().round_", "q_x.round().byte.round().byte", "QTensor", "x.min", "x.max", "q_x.round().byte.clamp_", "q_x.round().byte.round"], "function", ["None"], ["def", "quantize_tensor", "(", "x", ",", "num_bits", "=", "8", ")", ":", "\n", "    ", "qmin", "=", "0.", "\n", "qmax", "=", "2.", "**", "num_bits", "-", "1.", "\n", "min_val", ",", "max_val", "=", "x", ".", "min", "(", ")", ",", "x", ".", "max", "(", ")", "\n", "\n", "scale", "=", "(", "max_val", "-", "min_val", ")", "/", "(", "qmax", "-", "qmin", ")", "\n", "\n", "initial_zero_point", "=", "qmin", "-", "min_val", "/", "scale", "\n", "\n", "zero_point", "=", "0", "\n", "if", "initial_zero_point", "<", "qmin", ":", "\n", "        ", "zero_point", "=", "qmin", "\n", "", "elif", "initial_zero_point", ">", "qmax", ":", "\n", "        ", "zero_point", "=", "qmax", "\n", "", "else", ":", "\n", "        ", "zero_point", "=", "initial_zero_point", "\n", "\n", "", "zero_point", "=", "int", "(", "zero_point", ")", "\n", "q_x", "=", "zero_point", "+", "x", "/", "scale", "\n", "q_x", ".", "clamp_", "(", "qmin", ",", "qmax", ")", ".", "round_", "(", ")", "\n", "q_x", "=", "q_x", ".", "round", "(", ")", ".", "byte", "(", ")", "\n", "return", "QTensor", "(", "tensor", "=", "q_x", ",", "scale", "=", "scale", ",", "zero_point", "=", "zero_point", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.quantize.dequantize_tensor": [[32, 34], ["q_x.tensor.float"], "function", ["None"], ["", "def", "dequantize_tensor", "(", "q_x", ")", ":", "\n", "    ", "return", "q_x", ".", "scale", "*", "(", "q_x", ".", "tensor", ".", "float", "(", ")", "-", "q_x", ".", "zero_point", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.quantize.quantize_model": [[36, 49], ["model.state_dict().items", "model.type", "qparams.items", "quantize.quantize_tensor", "torch.FloatTensor", "torch.FloatTensor", "torch.ByteTensor", "torch.ByteTensor", "p.copy_", "model.register_buffer", "model.state_dict"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.quantize.quantize_tensor", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.OptimRegime.state_dict"], ["", "def", "quantize_model", "(", "model", ")", ":", "\n", "    ", "qparams", "=", "{", "}", "\n", "\n", "for", "n", ",", "p", "in", "model", ".", "state_dict", "(", ")", ".", "items", "(", ")", ":", "\n", "        ", "qp", "=", "quantize_tensor", "(", "p", ")", "\n", "qparams", "[", "n", "+", "'.quantization.scale'", "]", "=", "torch", ".", "FloatTensor", "(", "[", "qp", ".", "scale", "]", ")", "\n", "qparams", "[", "\n", "n", "+", "'.quantization.zero_point'", "]", "=", "torch", ".", "ByteTensor", "(", "[", "qp", ".", "zero_point", "]", ")", "\n", "p", ".", "copy_", "(", "qp", ".", "tensor", ")", "\n", "", "model", ".", "type", "(", "'torch.ByteTensor'", ")", "\n", "for", "n", ",", "p", "in", "qparams", ".", "items", "(", ")", ":", "\n", "        ", "model", ".", "register_buffer", "(", "n", ",", "p", ")", "\n", "", "model", ".", "quantized", "=", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.quantize.dequantize_model": [[51, 63], ["model.float", "model.state_dict", "model.state_dict.items", "QTensor", "p.copy_", "model.register_buffer", "model.register_buffer", "quantize.dequantize_tensor"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.OptimRegime.state_dict", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.quantize.dequantize_tensor"], ["", "def", "dequantize_model", "(", "model", ")", ":", "\n", "    ", "model", ".", "float", "(", ")", "\n", "params", "=", "model", ".", "state_dict", "(", ")", "\n", "for", "n", ",", "p", "in", "params", ".", "items", "(", ")", ":", "\n", "        ", "if", "'quantization'", "not", "in", "n", ":", "\n", "            ", "qp", "=", "QTensor", "(", "tensor", "=", "p", ",", "\n", "scale", "=", "params", "[", "n", "+", "'.quantization.scale'", "]", "[", "0", "]", ",", "\n", "zero_point", "=", "params", "[", "n", "+", "'.quantization.zero_point'", "]", "[", "0", "]", ")", "\n", "p", ".", "copy_", "(", "dequantize_tensor", "(", "qp", ")", ")", "\n", "model", ".", "register_buffer", "(", "n", "+", "'.quantization.scale'", ",", "None", ")", "\n", "model", ".", "register_buffer", "(", "n", "+", "'.quantization.zero_point'", ",", "None", ")", "\n", "", "", "model", ".", "quantized", "=", "None", "\n", "", ""]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.Regularizer.__init__": [[44, 53], ["list", "param_filter.FilterParameters().named_parameters", "logging.debug", "param_filter.FilterParameters"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.named_parameters"], ["    ", "def", "__init__", "(", "self", ",", "model", ",", "value", "=", "0", ",", "filter", "=", "{", "}", ",", "log", "=", "False", ")", ":", "\n", "        ", "self", ".", "_model", "=", "model", "\n", "self", ".", "_named_parameters", "=", "list", "(", "\n", "FilterParameters", "(", "model", ",", "**", "filter", ")", ".", "named_parameters", "(", ")", ")", "\n", "self", ".", "value", "=", "value", "\n", "self", ".", "log", "=", "log", "\n", "if", "self", ".", "log", ":", "\n", "            ", "logging", ".", "debug", "(", "'Applying regularization to parameters: %s'", ",", "\n", "[", "n", "for", "n", ",", "_", "in", "self", ".", "_named_parameters", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.Regularizer.named_parameters": [[54, 57], ["None"], "methods", ["None"], ["", "", "def", "named_parameters", "(", "self", ")", ":", "\n", "        ", "for", "n", ",", "p", "in", "self", ".", "_named_parameters", ":", "\n", "            ", "yield", "n", ",", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.Regularizer.parameters": [[58, 61], ["regularization.Regularizer.named_parameters"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.named_parameters"], ["", "", "def", "parameters", "(", "self", ")", ":", "\n", "        ", "for", "_", ",", "p", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "yield", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.Regularizer._pre_parameter_step": [[62, 64], ["None"], "methods", ["None"], ["", "", "def", "_pre_parameter_step", "(", "self", ",", "parameter", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.Regularizer._post_parameter_step": [[65, 67], ["None"], "methods", ["None"], ["", "def", "_post_parameter_step", "(", "self", ",", "parameter", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.Regularizer.pre_step": [[68, 70], ["None"], "methods", ["None"], ["", "def", "pre_step", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.Regularizer.post_step": [[71, 73], ["None"], "methods", ["None"], ["", "def", "post_step", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.Regularizer.pre_forward": [[74, 76], ["None"], "methods", ["None"], ["", "def", "pre_forward", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.Regularizer.pre_backward": [[77, 79], ["None"], "methods", ["None"], ["", "def", "pre_backward", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.RegularizerList.__init__": [[82, 91], ["regularization.Regularizer.__init__", "regularization.RegularizerList.regularization_list.append", "isinstance", "reg"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model", ",", "regularization_list", ")", ":", "\n", "        ", "\"\"\"each item must of of format (RegClass, **kwargs) or instance of Regularizer\"\"\"", "\n", "super", "(", "RegularizerList", ",", "self", ")", ".", "__init__", "(", "model", ")", "\n", "self", ".", "regularization_list", "=", "[", "]", "\n", "for", "regularizer", "in", "regularization_list", ":", "\n", "            ", "if", "not", "isinstance", "(", "regularizer", ",", "Regularizer", ")", ":", "\n", "                ", "reg", ",", "reg_params", "=", "regularizer", "\n", "regularizer", "=", "reg", "(", "model", "=", "model", ",", "**", "reg_params", ")", "\n", "", "self", ".", "regularization_list", ".", "append", "(", "regularizer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.RegularizerList.pre_step": [[92, 95], ["reg.pre_step"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.Consolidate.pre_step"], ["", "", "def", "pre_step", "(", "self", ")", ":", "\n", "        ", "for", "reg", "in", "self", ".", "regularization_list", ":", "\n", "            ", "reg", ".", "pre_step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.RegularizerList.post_step": [[96, 99], ["reg.post_step"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.Consolidate.post_step"], ["", "", "def", "post_step", "(", "self", ")", ":", "\n", "        ", "for", "reg", "in", "self", ".", "regularization_list", ":", "\n", "            ", "reg", ".", "post_step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.RegularizerList.pre_forward": [[100, 103], ["reg.pre_forward"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.AbsorbBN.pre_forward"], ["", "", "def", "pre_forward", "(", "self", ")", ":", "\n", "        ", "for", "reg", "in", "self", ".", "regularization_list", ":", "\n", "            ", "reg", ".", "pre_forward", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.RegularizerList.pre_backward": [[104, 107], ["reg.pre_backward"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.DropConnect.pre_backward"], ["", "", "def", "pre_backward", "(", "self", ")", ":", "\n", "        ", "for", "reg", "in", "self", ".", "regularization_list", ":", "\n", "            ", "reg", ".", "pre_backward", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.L2Regularization.__init__": [[110, 118], ["regularization.Regularizer.__init__"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model", ",", "value", "=", "0", ",", "\n", "filter", "=", "{", "'parameter_name'", ":", "is_not_bias", ",", "\n", "'module'", ":", "is_not_bn", "}", ",", "\n", "pre_op", "=", "True", ",", "post_op", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "L2Regularization", ",", "self", ")", ".", "__init__", "(", "\n", "model", ",", "value", ",", "filter", "=", "filter", ",", "**", "kwargs", ")", "\n", "self", ".", "pre_op", "=", "pre_op", "\n", "self", ".", "post_op", "=", "post_op", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.L2Regularization.pre_step": [[119, 127], ["torch.no_grad", "logging.debug", "p.grad.add_"], "methods", ["None"], ["", "def", "pre_step", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pre_op", ":", "\n", "            ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "for", "_", ",", "p", "in", "self", ".", "_named_parameters", ":", "\n", "                    ", "p", ".", "grad", ".", "add_", "(", "self", ".", "value", ",", "p", ")", "\n", "", "", "if", "self", ".", "log", ":", "\n", "                ", "logging", ".", "debug", "(", "'L2 penalty of %s was applied pre optimization step'", ",", "\n", "self", ".", "value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.L2Regularization.post_step": [[128, 136], ["torch.no_grad", "logging.debug", "p.add_"], "methods", ["None"], ["", "", "", "def", "post_step", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "post_op", ":", "\n", "            ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "for", "_", ",", "p", "in", "self", ".", "_named_parameters", ":", "\n", "                    ", "p", ".", "add_", "(", "-", "self", ".", "value", ",", "p", ")", "\n", "", "", "if", "self", ".", "log", ":", "\n", "                ", "logging", ".", "debug", "(", "'L2 penalty of %s was applied post optimization step'", ",", "\n", "self", ".", "value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.WeightDecay.__init__": [[139, 141], ["regularization.L2Regularization.__init__"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "kargs", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "WeightDecay", ",", "self", ")", ".", "__init__", "(", "*", "kargs", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.GradClip.__init__": [[144, 146], ["regularization.Regularizer.__init__"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "kargs", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "GradClip", ",", "self", ")", ".", "__init__", "(", "*", "kargs", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.GradClip.pre_step": [[147, 154], ["torch.no_grad", "torch.nn.utils.clip_grad_norm_", "logging.debug", "regularization.GradClip.parameters"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.parameters"], ["", "def", "pre_step", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "value", ">", "0", ":", "\n", "            ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "grad", "=", "clip_grad_norm_", "(", "self", ".", "parameters", "(", ")", ",", "self", ".", "value", ")", "\n", "", "if", "self", ".", "log", ":", "\n", "                ", "logging", ".", "debug", "(", "'Gradient norm value was clipped from %s to %s'", ",", "\n", "grad", ",", "self", ".", "value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.GradSmooth.__init__": [[157, 164], ["regularization.Regularizer.__init__"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model", ",", "value", "=", "True", ",", "momentum", "=", "0.9", ",", "filter", "=", "{", "}", ",", "log", "=", "False", ")", ":", "\n", "        ", "super", "(", "GradSmooth", ",", "self", ")", ".", "__init__", "(", "model", ",", "\n", "value", "=", "value", ",", "filter", "=", "filter", ",", "log", "=", "log", ")", "\n", "self", ".", "momentum", "=", "momentum", "\n", "self", ".", "running_norm", "=", "None", "\n", "self", ".", "enabled", "=", "value", "\n", "self", ".", "counter", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.GradSmooth.pre_step": [[165, 187], ["list", "filter", "p.grad.data.norm", "regularization.GradSmooth.parameters", "p.grad.data.norm.item", "logging.debug", "p.grad.data.mul_"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.filter", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.parameters"], ["", "def", "pre_step", "(", "self", ")", ":", "\n", "        ", "parameters", "=", "list", "(", "\n", "filter", "(", "lambda", "p", ":", "p", ".", "grad", "is", "not", "None", ",", "self", ".", "parameters", "(", ")", ")", ")", "\n", "total_norm", "=", "0", "\n", "for", "p", "in", "parameters", ":", "\n", "            ", "param_norm", "=", "p", ".", "grad", ".", "data", ".", "norm", "(", "2", ")", "\n", "total_norm", "+=", "param_norm", ".", "item", "(", ")", "**", "2", "\n", "", "total_norm", "=", "total_norm", "**", "0.5", "\n", "if", "self", ".", "running_norm", "is", "None", ":", "\n", "            ", "self", ".", "running_norm", "=", "total_norm", "\n", "", "else", ":", "\n", "            ", "self", ".", "running_norm", "=", "self", ".", "momentum", "*", "self", ".", "running_norm", "+", "(", "1", "-", "self", ".", "momentum", ")", "*", "total_norm", "\n", "if", "self", ".", "enabled", ":", "\n", "                ", "clip_coef", "=", "self", ".", "running_norm", "/", "(", "total_norm", "+", "1e-6", ")", "\n", "for", "p", "in", "parameters", ":", "\n", "                    ", "p", ".", "grad", ".", "data", ".", "mul_", "(", "clip_coef", ")", "\n", "", "", "if", "self", ".", "log", ":", "\n", "                ", "logging", ".", "debug", "(", "'Gradient norm value was clipped from %s to %s'", ",", "\n", "total_norm", ",", "self", ".", "running_norm", ")", "\n", "\n", "", "", "self", ".", "counter", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.L1Regularization.__init__": [[189, 198], ["regularization.Regularizer.__init__"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model", ",", "value", "=", "1e-3", ",", "\n", "filter", "=", "{", "'parameter_name'", ":", "is_not_bias", ",", "\n", "'module'", ":", "is_not_bn", "}", ",", "\n", "pre_op", "=", "False", ",", "post_op", "=", "True", ",", "report_sparsity", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "L1Regularization", ",", "self", ")", ".", "__init__", "(", "\n", "model", ",", "value", ",", "filter", "=", "filter", ",", "**", "kwargs", ")", "\n", "self", ".", "pre_op", "=", "pre_op", "\n", "self", ".", "post_op", "=", "post_op", "\n", "self", ".", "report_sparsity", "=", "report_sparsity", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.L1Regularization.pre_step": [[199, 209], ["torch.no_grad", "logging.debug", "p.grad.add_", "p.sign", "logging.debug", "regularization.sparsity"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.sparsity"], ["", "def", "pre_step", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "pre_op", ":", "\n", "            ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "for", "n", ",", "p", "in", "self", ".", "_named_parameters", ":", "\n", "                    ", "p", ".", "grad", ".", "add_", "(", "self", ".", "value", ",", "p", ".", "sign", "(", ")", ")", "\n", "if", "self", ".", "report_sparsity", ":", "\n", "                        ", "logging", ".", "debug", "(", "'Sparsity for %s is %s'", ",", "n", ",", "sparsity", "(", "p", ")", ")", "\n", "", "", "", "if", "self", ".", "log", ":", "\n", "                ", "logging", ".", "debug", "(", "'L1 penalty of %s was applied pre optimization step'", ",", "\n", "self", ".", "value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.L1Regularization.post_step": [[210, 220], ["torch.no_grad", "logging.debug", "p.copy_", "torch.nn.functional.softshrink", "logging.debug", "regularization.sparsity"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.sparsity"], ["", "", "", "def", "post_step", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "post_op", ":", "\n", "            ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "for", "n", ",", "p", "in", "self", ".", "_named_parameters", ":", "\n", "                    ", "p", ".", "copy_", "(", "torch", ".", "nn", ".", "functional", ".", "softshrink", "(", "p", ",", "self", ".", "value", ")", ")", "\n", "if", "self", ".", "report_sparsity", ":", "\n", "                        ", "logging", ".", "debug", "(", "'Sparsity for %s is %s'", ",", "n", ",", "sparsity", "(", "p", ")", ")", "\n", "", "", "", "if", "self", ".", "log", ":", "\n", "                ", "logging", ".", "debug", "(", "'L1 penalty of %s was applied post optimization step'", ",", "\n", "self", ".", "value", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.BoundedWeightNorm.__init__": [[223, 232], ["regularization.Regularizer.__init__"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model", ",", "\n", "filter", "=", "{", "'parameter_name'", ":", "is_not_bias", ",", "\n", "'module'", ":", "is_not_bn", "}", ",", "\n", "dim", "=", "0", ",", "p", "=", "2", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "BoundedWeightNorm", ",", "self", ")", ".", "__init__", "(", "\n", "model", ",", "0", ",", "filter", "=", "filter", ",", "**", "kwargs", ")", "\n", "self", ".", "dim", "=", "dim", "\n", "self", ".", "init_norms", "=", "None", "\n", "self", ".", "p", "=", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.BoundedWeightNorm._gather_init_norm": [[233, 239], ["torch.no_grad", "_norm().detach().mean", "_norm().detach", "regularization._norm"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm._norm"], ["", "def", "_gather_init_norm", "(", "self", ")", ":", "\n", "        ", "self", ".", "init_norms", "=", "{", "}", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "n", ",", "p", "in", "self", ".", "_named_parameters", ":", "\n", "                ", "self", ".", "init_norms", "[", "n", "]", "=", "_norm", "(", "\n", "p", ",", "self", ".", "dim", ",", "p", "=", "self", ".", "p", ")", ".", "detach", "(", ")", ".", "mean", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.BoundedWeightNorm.pre_forward": [[240, 248], ["regularization.BoundedWeightNorm._gather_init_norm", "torch.no_grad", "regularization._norm", "p.mul_"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.BoundedWeightNorm._gather_init_norm", "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm._norm"], ["", "", "", "def", "pre_forward", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "init_norms", "is", "None", ":", "\n", "            ", "self", ".", "_gather_init_norm", "(", ")", "\n", "", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "n", ",", "p", "in", "self", ".", "_named_parameters", ":", "\n", "                ", "init_norm", "=", "self", ".", "init_norms", "[", "n", "]", "\n", "new_norm", "=", "_norm", "(", "p", ",", "self", ".", "dim", ",", "p", "=", "self", ".", "p", ")", "\n", "p", ".", "mul_", "(", "init_norm", "/", "new_norm", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.BoundedWeightNorm.pre_step": [[249, 257], ["regularization._norm", "p.grad.data.clone", "p.grad.data.zero_", "p_normed.backward"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm._norm", "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.UniformQuantizeGrad.backward"], ["", "", "", "def", "pre_step", "(", "self", ")", ":", "\n", "        ", "for", "n", ",", "p", "in", "self", ".", "_named_parameters", ":", "\n", "            ", "init_norm", "=", "self", ".", "init_norms", "[", "n", "]", "\n", "norm", "=", "_norm", "(", "p", ",", "self", ".", "dim", ",", "p", "=", "self", ".", "p", ")", "\n", "curr_grad", "=", "p", ".", "grad", ".", "data", ".", "clone", "(", ")", "\n", "p", ".", "grad", ".", "data", ".", "zero_", "(", ")", "\n", "p_normed", "=", "p", "*", "(", "init_norm", "/", "norm", ")", "\n", "p_normed", ".", "backward", "(", "curr_grad", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.LARS.__init__": [[263, 273], ["regularization.Regularizer.__init__"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["def", "__init__", "(", "self", ",", "model", ",", "value", "=", "0.01", ",", "weight_decay", "=", "0", ",", "dim", "=", "None", ",", "p", "=", "2", ",", "min_scale", "=", "None", ",", "max_scale", "=", "None", ",", "\n", "filter", "=", "{", "'parameter_name'", ":", "is_not_bias", ",", "\n", "'module'", ":", "is_not_bn", "}", ",", "\n", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "LARS", ",", "self", ")", ".", "__init__", "(", "model", ",", "value", ",", "filter", "=", "filter", ",", "**", "kwargs", ")", "\n", "self", ".", "weight_decay", "=", "weight_decay", "\n", "self", ".", "dim", "=", "dim", "\n", "self", ".", "p", "=", "p", "\n", "self", ".", "min_scale", "=", "min_scale", "\n", "self", ".", "max_scale", "=", "max_scale", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.LARS.pre_step": [[274, 288], ["torch.no_grad", "param.grad.add_", "param.grad.mul_", "regularization._norm", "regularization._norm", "param.norm", "param.grad.norm", "scale.clamp_"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm._norm", "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm._norm"], ["", "def", "pre_step", "(", "self", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "_", ",", "param", "in", "self", ".", "_named_parameters", ":", "\n", "                ", "param", ".", "grad", ".", "add_", "(", "self", ".", "weight_decay", ",", "param", ")", "\n", "if", "self", ".", "dim", "is", "not", "None", ":", "\n", "                    ", "norm", "=", "_norm", "(", "param", ",", "dim", "=", "self", ".", "dim", ",", "p", "=", "self", ".", "p", ")", "\n", "grad_norm", "=", "_norm", "(", "param", ".", "grad", ",", "dim", "=", "self", ".", "dim", ",", "p", "=", "self", ".", "p", ")", "\n", "", "else", ":", "\n", "                    ", "norm", "=", "param", ".", "norm", "(", "p", "=", "self", ".", "p", ")", "\n", "grad_norm", "=", "param", ".", "grad", ".", "norm", "(", "p", "=", "self", ".", "p", ")", "\n", "", "scale", "=", "self", ".", "value", "*", "norm", "/", "grad_norm", "\n", "if", "self", ".", "min_scale", "is", "not", "None", "or", "self", ".", "max_scale", "is", "not", "None", ":", "\n", "                    ", "scale", ".", "clamp_", "(", "min", "=", "self", ".", "min_scale", ",", "max", "=", "self", ".", "max_scale", ")", "\n", "", "param", ".", "grad", ".", "mul_", "(", "scale", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.DropConnect.__init__": [[291, 298], ["regularization.Regularizer.__init__"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model", ",", "value", "=", "0", ",", "\n", "filter", "=", "{", "'parameter_name'", ":", "is_not_bias", ",", "\n", "'module'", ":", "is_not_bn", "}", ",", "\n", "shakeshake", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "DropConnect", ",", "self", ")", ".", "__init__", "(", "\n", "model", ",", "value", "=", "value", ",", "filter", "=", "filter", ",", "**", "kwargs", ")", "\n", "self", ".", "shakeshake", "=", "shakeshake", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.DropConnect._drop_parameters": [[299, 306], ["torch.no_grad", "p.clone", "torch.nn.functional.dropout"], "methods", ["None"], ["", "def", "_drop_parameters", "(", "self", ")", ":", "\n", "        ", "self", ".", "parameter_copy", "=", "{", "}", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "n", ",", "p", "in", "self", ".", "_named_parameters", ":", "\n", "                ", "self", ".", "parameter_copy", "[", "n", "]", "=", "p", ".", "clone", "(", ")", "\n", "torch", ".", "nn", ".", "functional", ".", "dropout", "(", "p", ",", "self", ".", "value", ",", "\n", "training", "=", "True", ",", "inplace", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.DropConnect._reassign_parameters": [[307, 311], ["torch.no_grad", "p.copy_", "regularization.DropConnect.parameter_copy.pop"], "methods", ["None"], ["", "", "", "def", "_reassign_parameters", "(", "self", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "n", ",", "p", "in", "self", ".", "_named_parameters", ":", "\n", "                ", "p", ".", "copy_", "(", "self", ".", "parameter_copy", ".", "pop", "(", "n", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.DropConnect.pre_forward": [[312, 314], ["regularization.DropConnect._drop_parameters"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.DropConnect._drop_parameters"], ["", "", "", "def", "pre_forward", "(", "self", ")", ":", "\n", "        ", "self", ".", "_drop_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.DropConnect.pre_backward": [[315, 318], ["regularization.DropConnect._reassign_parameters"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.DropConnect._reassign_parameters"], ["", "def", "pre_backward", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "shakeshake", ":", "\n", "            ", "self", ".", "_reassign_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.DropConnect.pre_step": [[319, 322], ["regularization.DropConnect._reassign_parameters"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.DropConnect._reassign_parameters"], ["", "", "def", "pre_step", "(", "self", ")", ":", "\n", "        ", "if", "not", "self", ".", "shakeshake", ":", "\n", "            ", "self", ".", "_reassign_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.AbsorbBN.__init__": [[325, 333], ["model.modules", "isinstance"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.modules"], ["    ", "def", "__init__", "(", "self", ",", "model", ",", "remove_bn", "=", "False", ")", ":", "\n", "        ", "self", ".", "_model", "=", "model", "\n", "if", "not", "remove_bn", ":", "\n", "            ", "for", "m", "in", "model", ".", "modules", "(", ")", ":", "\n", "                ", "if", "isinstance", "(", "m", ",", "torch", ".", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                    ", "m", ".", "momentum", "=", "1", "\n", "", "", "", "self", ".", "remove_bn", "=", "remove_bn", "\n", "self", ".", "_removed", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.AbsorbBN.pre_forward": [[334, 339], ["absorb_bn.search_absorb_bn"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.absorb_bn.search_absorb_bn"], ["", "def", "pre_forward", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "_removed", ":", "\n", "            ", "return", "\n", "", "search_absorb_bn", "(", "self", ".", "_model", ",", "remove_bn", "=", "self", ".", "remove_bn", ",", "verbose", "=", "False", ")", "\n", "self", ".", "_removed", "=", "self", ".", "remove_bn", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.Consolidate.__init__": [[345, 365], ["regularization.Regularizer.__init__", "shared_params.values", "logging.debug", "param.numel", "shared_params.setdefault", "shared_params[].append", "zip", "regularization.Consolidate.groups.append", "shared_names.append", "len"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["def", "__init__", "(", "self", ",", "model", ",", "value", "=", "0.1", ",", "force", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "Consolidate", ",", "self", ")", ".", "__init__", "(", "\n", "model", ",", "value", ",", "**", "kwargs", ")", "\n", "self", ".", "force", "=", "force", "\n", "shared_params", "=", "{", "}", "\n", "for", "name", ",", "param", "in", "self", ".", "_named_parameters", ":", "\n", "            ", "numel", "=", "param", ".", "numel", "(", ")", "\n", "shared_params", ".", "setdefault", "(", "numel", ",", "[", "]", ")", "\n", "shared_params", "[", "numel", "]", ".", "append", "(", "(", "name", ",", "param", ")", ")", "\n", "\n", "", "self", ".", "groups", "=", "[", "]", "\n", "shared_names", "=", "[", "]", "\n", "for", "shared_list", "in", "shared_params", ".", "values", "(", ")", ":", "\n", "            ", "if", "len", "(", "shared_list", ")", "<", "2", ":", "\n", "                ", "continue", "\n", "", "names", ",", "params", "=", "zip", "(", "*", "shared_list", ")", "\n", "self", ".", "groups", ".", "append", "(", "params", ")", "\n", "shared_names", ".", "append", "(", "names", ")", "\n", "\n", "", "logging", ".", "debug", "(", "'Shared parameter groups %s'", "%", "shared_names", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.Consolidate.pre_step": [[366, 375], ["torch.no_grad", "enumerate", "sum", "len", "p.grad.data.add_", "logging.debug", "float", "sum().sqrt", "sum"], "methods", ["None"], ["", "def", "pre_step", "(", "self", ")", ":", "\n", "        ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "i", ",", "group", "in", "enumerate", "(", "self", ".", "groups", ")", ":", "\n", "                ", "mean_group", "=", "sum", "(", "group", ")", "/", "len", "(", "group", ")", "\n", "for", "p", "in", "group", ":", "\n", "                    ", "p", ".", "grad", ".", "data", ".", "add_", "(", "self", ".", "value", ",", "p", "-", "mean_group", ")", "\n", "", "if", "self", ".", "log", ":", "\n", "                    ", "logging", ".", "debug", "(", "'group %s, diff norm = %s'", "%", "\n", "(", "i", ",", "float", "(", "sum", "(", "[", "(", "p", "-", "mean_group", ")", ".", "norm", "(", ")", "**", "2", "for", "p", "in", "group", "]", ")", ".", "sqrt", "(", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.Consolidate.post_step": [[376, 383], ["torch.no_grad", "enumerate", "sum", "len", "p.copy_"], "methods", ["None"], ["", "", "", "", "def", "post_step", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "force", ":", "\n", "            ", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "for", "group", "in", "enumerate", "(", "self", ".", "groups", ")", ":", "\n", "                    ", "mean_group", "=", "sum", "(", "group", ")", "/", "len", "(", "group", ")", "\n", "for", "p", "in", "group", ":", "\n", "                        ", "p", ".", "copy_", "(", "mean_group", ")", "\n", "", "", "", "", "", "", ""]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization.sparsity": [[8, 10], ["float", "p.nelement", "p.eq().sum", "p.eq"], "function", ["None"], ["def", "sparsity", "(", "p", ")", ":", "\n", "    ", "return", "float", "(", "p", ".", "eq", "(", "0", ")", ".", "sum", "(", ")", ")", "/", "p", ".", "nelement", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization._norm_exclude_dim": [[12, 15], ["tuple", "x.pow().sum().sqrt", "set", "set", "x.pow().sum", "range", "x.dim", "x.pow"], "function", ["None"], ["", "def", "_norm_exclude_dim", "(", "x", ",", "dim", "=", "0", ",", "keepdim", "=", "False", ")", ":", "\n", "    ", "dims", "=", "tuple", "(", "set", "(", "range", "(", "x", ".", "dim", "(", ")", ")", ")", "-", "set", "(", "[", "dim", "]", ")", ")", "\n", "return", "x", ".", "pow", "(", "2", ")", ".", "sum", "(", "dims", ",", "keepdim", "=", "keepdim", ")", ".", "sqrt", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization._renorm": [[17, 21], ["x.clone.div_", "x.clone.clone", "regularization._norm_exclude_dim"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization._norm_exclude_dim"], ["", "def", "_renorm", "(", "x", ",", "dim", "=", "0", ",", "inplace", "=", "False", ",", "eps", "=", "1e-12", ")", ":", "\n", "    ", "if", "not", "inplace", ":", "\n", "        ", "x", "=", "x", ".", "clone", "(", ")", "\n", "", "return", "x", ".", "div_", "(", "_norm_exclude_dim", "(", "x", ",", "dim", ",", "keepdim", "=", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.regularization._norm": [[23, 41], ["x.norm", "float", "func().view", "torch.norm", "func().view", "_norm().transpose", "x.max", "x.min", "x.max", "x.size", "regularization._norm.func"], "function", ["None"], ["", "def", "_norm", "(", "x", ",", "dim", ",", "p", "=", "2", ")", ":", "\n", "    ", "\"\"\"Computes the norm over all dimensions except dim\"\"\"", "\n", "if", "p", "==", "-", "1", ":", "\n", "        ", "def", "func", "(", "x", ",", "dim", ")", ":", "return", "x", ".", "max", "(", "dim", "=", "dim", ")", "[", "0", "]", "-", "x", ".", "min", "(", "dim", "=", "dim", ")", "[", "0", "]", "\n", "", "elif", "p", "==", "float", "(", "'inf'", ")", ":", "\n", "        ", "def", "func", "(", "x", ",", "dim", ")", ":", "return", "x", ".", "max", "(", "dim", "=", "dim", ")", "[", "0", "]", "\n", "", "else", ":", "\n", "        ", "def", "func", "(", "x", ",", "dim", ")", ":", "return", "torch", ".", "norm", "(", "x", ",", "dim", "=", "dim", ",", "p", "=", "p", ")", "\n", "", "if", "dim", "is", "None", ":", "\n", "        ", "return", "x", ".", "norm", "(", "p", "=", "p", ")", "\n", "", "elif", "dim", "==", "0", ":", "\n", "        ", "output_size", "=", "(", "x", ".", "size", "(", "0", ")", ",", ")", "+", "(", "1", ",", ")", "*", "(", "x", ".", "dim", "(", ")", "-", "1", ")", "\n", "return", "func", "(", "x", ".", "contiguous", "(", ")", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", ",", "1", ")", ".", "view", "(", "*", "output_size", ")", "\n", "", "elif", "dim", "==", "x", ".", "dim", "(", ")", "-", "1", ":", "\n", "        ", "output_size", "=", "(", "1", ",", ")", "*", "(", "x", ".", "dim", "(", ")", "-", "1", ")", "+", "(", "x", ".", "size", "(", "-", "1", ")", ",", ")", "\n", "return", "func", "(", "x", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "x", ".", "size", "(", "-", "1", ")", ")", ",", "0", ")", ".", "view", "(", "*", "output_size", ")", "\n", "", "else", ":", "\n", "        ", "return", "_norm", "(", "x", ".", "transpose", "(", "0", ",", "dim", ")", ",", "0", ")", ".", "transpose", "(", "0", ",", "dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.__init__": [[35, 46], ["isinstance", "list", "isinstance", "source.filter", "list", "param_filter.filtered_parameter_info"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.filter", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.filtered_parameter_info"], ["    ", "def", "__init__", "(", "self", ",", "source", ",", "module", "=", "None", ",", "module_name", "=", "None", ",", "parameter_name", "=", "None", ")", ":", "\n", "        ", "if", "isinstance", "(", "source", ",", "FilterParameters", ")", ":", "\n", "            ", "self", ".", "_filtered_parameter_info", "=", "list", "(", "source", ".", "filter", "(", "\n", "module", "=", "module", ",", "\n", "module_name", "=", "module_name", ",", "\n", "parameter_name", "=", "parameter_name", ")", ")", "\n", "", "elif", "isinstance", "(", "source", ",", "torch", ".", "nn", ".", "Module", ")", ":", "# source is a model", "\n", "            ", "self", ".", "_filtered_parameter_info", "=", "list", "(", "filtered_parameter_info", "(", "source", ",", "\n", "module_fn", "=", "module", ",", "\n", "module_name_fn", "=", "module_name", ",", "\n", "parameter_name_fn", "=", "parameter_name", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.named_parameters": [[47, 50], ["None"], "methods", ["None"], ["", "", "def", "named_parameters", "(", "self", ")", ":", "\n", "        ", "for", "p", "in", "self", ".", "_filtered_parameter_info", ":", "\n", "            ", "yield", "p", "[", "'named_parameter'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.parameters": [[51, 54], ["param_filter.FilterParameters.named_parameters"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.named_parameters"], ["", "", "def", "parameters", "(", "self", ")", ":", "\n", "        ", "for", "_", ",", "p", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "yield", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.filter": [[55, 61], ["module", "module_name", "parameter_name"], "methods", ["None"], ["", "", "def", "filter", "(", "self", ",", "module", "=", "None", ",", "module_name", "=", "None", ",", "parameter_name", "=", "None", ")", ":", "\n", "        ", "for", "p_info", "in", "self", ".", "_filtered_parameter_info", ":", "\n", "            ", "if", "(", "module", "is", "None", "or", "module", "(", "p_info", "[", "'named_module'", "]", "[", "1", "]", ")", "\n", "and", "(", "module_name", "is", "None", "or", "module_name", "(", "p_info", "[", "'named_module'", "]", "[", "0", "]", ")", ")", "\n", "and", "(", "parameter_name", "is", "None", "or", "parameter_name", "(", "p_info", "[", "'named_parameter'", "]", "[", "0", "]", ")", ")", ")", ":", "\n", "                ", "yield", "p_info", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.named_modules": [[62, 65], ["None"], "methods", ["None"], ["", "", "", "def", "named_modules", "(", "self", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "_filtered_parameter_info", ":", "\n", "            ", "yield", "m", "[", "'named_module'", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.modules": [[66, 69], ["param_filter.FilterParameters.named_modules"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.named_modules"], ["", "", "def", "modules", "(", "self", ")", ":", "\n", "        ", "for", "_", ",", "m", "in", "self", ".", "named_modules", "(", ")", ":", "\n", "            ", "yield", "m", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.to": [[70, 73], ["param_filter.FilterParameters.modules", "m.to"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.modules", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.to"], ["", "", "def", "to", "(", "self", ",", "*", "kargs", ",", "**", "kwargs", ")", ":", "\n", "        ", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "m", ".", "to", "(", "*", "kargs", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.is_not_bias": [[5, 7], ["name.endswith"], "function", ["None"], ["def", "is_not_bias", "(", "name", ")", ":", "\n", "    ", "return", "not", "name", ".", "endswith", "(", "'bias'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.is_bn": [[9, 11], ["isinstance", "isinstance", "isinstance"], "function", ["None"], ["", "def", "is_bn", "(", "module", ")", ":", "\n", "    ", "return", "isinstance", "(", "module", ",", "nn", ".", "BatchNorm1d", ")", "or", "isinstance", "(", "module", ",", "nn", ".", "BatchNorm2d", ")", "or", "isinstance", "(", "module", ",", "nn", ".", "BatchNorm3d", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.is_not_bn": [[13, 15], ["param_filter.is_bn"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.is_bn"], ["", "def", "is_not_bn", "(", "module", ")", ":", "\n", "    ", "return", "not", "is_bn", "(", "module", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.filtered_parameter_info": [[17, 32], ["model.named_modules", "set", "module.named_parameters", "module_fn", "module_name_fn", "set.add", "parameter_name_fn"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.named_modules", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.named_parameters", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.log.ResultsLog.add"], ["", "def", "filtered_parameter_info", "(", "model", ",", "module_fn", "=", "None", ",", "module_name_fn", "=", "None", ",", "parameter_name_fn", "=", "None", ",", "memo", "=", "None", ")", ":", "\n", "    ", "if", "memo", "is", "None", ":", "\n", "        ", "memo", "=", "set", "(", ")", "\n", "\n", "", "for", "module_name", ",", "module", "in", "model", ".", "named_modules", "(", ")", ":", "\n", "        ", "if", "module_fn", "is", "not", "None", "and", "not", "module_fn", "(", "module", ")", ":", "\n", "            ", "continue", "\n", "", "if", "module_name_fn", "is", "not", "None", "and", "not", "module_name_fn", "(", "module_name", ")", ":", "\n", "            ", "continue", "\n", "", "for", "parameter_name", ",", "param", "in", "module", ".", "named_parameters", "(", "prefix", "=", "module_name", ",", "recurse", "=", "False", ")", ":", "\n", "            ", "if", "parameter_name_fn", "is", "not", "None", "and", "not", "parameter_name_fn", "(", "parameter_name", ")", ":", "\n", "                ", "continue", "\n", "", "if", "param", "not", "in", "memo", ":", "\n", "                ", "memo", ".", "add", "(", "param", ")", "\n", "yield", "{", "'named_module'", ":", "(", "module_name", ",", "module", ")", ",", "'named_parameter'", ":", "(", "parameter_name", ",", "param", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet.DepthwiseSeparableFusedConv2d.__init__": [[41, 53], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "\n", "stride", "=", "1", ",", "padding", "=", "0", ")", ":", "\n", "        ", "super", "(", "DepthwiseSeparableFusedConv2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "components", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "in_channels", ",", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "groups", "=", "in_channels", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "in_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet.DepthwiseSeparableFusedConv2d.forward": [[55, 57], ["mobilenet.DepthwiseSeparableFusedConv2d.components"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "components", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet.MobileNet.__init__": [[61, 158], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "torchvision.Normalize", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "mobilenet.DepthwiseSeparableFusedConv2d", "mobilenet.DepthwiseSeparableFusedConv2d", "mobilenet.DepthwiseSeparableFusedConv2d", "mobilenet.DepthwiseSeparableFusedConv2d", "mobilenet.DepthwiseSeparableFusedConv2d", "mobilenet.DepthwiseSeparableFusedConv2d", "mobilenet.DepthwiseSeparableFusedConv2d", "mobilenet.DepthwiseSeparableFusedConv2d", "mobilenet.nearby_int", "mobilenet.nearby_int", "mobilenet.nearby_int", "mobilenet.nearby_int", "mobilenet.nearby_int", "mobilenet.nearby_int", "mobilenet.nearby_int", "mobilenet.nearby_int", "mobilenet.nearby_int", "mobilenet.nearby_int", "mobilenet.nearby_int", "mobilenet.nearby_int", "mobilenet.nearby_int", "mobilenet.nearby_int", "mobilenet.nearby_int", "mobilenet.DepthwiseSeparableFusedConv2d", "mobilenet.DepthwiseSeparableFusedConv2d", "mobilenet.DepthwiseSeparableFusedConv2d", "mobilenet.DepthwiseSeparableFusedConv2d", "mobilenet.DepthwiseSeparableFusedConv2d", "mobilenet.nearby_int", "mobilenet.nearby_int", "mobilenet.nearby_int", "mobilenet.nearby_int", "torchvision.Compose", "mobilenet.nearby_int", "mobilenet.nearby_int", "mobilenet.nearby_int", "mobilenet.nearby_int", "mobilenet.nearby_int", "mobilenet.nearby_int", "mobilenet.nearby_int", "mobilenet.nearby_int", "mobilenet.nearby_int", "mobilenet.nearby_int", "mobilenet.weight_decay_config", "mobilenet.weight_decay_config", "torchvision.Resize", "torchvision.RandomCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.densenet.weight_decay_config", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.densenet.weight_decay_config"], ["    ", "def", "__init__", "(", "self", ",", "width", "=", "1.", ",", "shallow", "=", "False", ",", "regime", "=", "None", ",", "num_classes", "=", "1000", ")", ":", "\n", "        ", "super", "(", "MobileNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "num_classes", "=", "num_classes", "or", "1000", "\n", "width", "=", "width", "or", "1.", "\n", "layers", "=", "[", "\n", "nn", ".", "Conv2d", "(", "3", ",", "nearby_int", "(", "width", "*", "32", ")", ",", "\n", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "nearby_int", "(", "width", "*", "32", ")", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "\n", "DepthwiseSeparableFusedConv2d", "(", "\n", "nearby_int", "(", "width", "*", "32", ")", ",", "nearby_int", "(", "width", "*", "64", ")", ",", "\n", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "DepthwiseSeparableFusedConv2d", "(", "\n", "nearby_int", "(", "width", "*", "64", ")", ",", "nearby_int", "(", "width", "*", "128", ")", ",", "\n", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "DepthwiseSeparableFusedConv2d", "(", "\n", "nearby_int", "(", "width", "*", "128", ")", ",", "nearby_int", "(", "width", "*", "128", ")", ",", "\n", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "DepthwiseSeparableFusedConv2d", "(", "\n", "nearby_int", "(", "width", "*", "128", ")", ",", "nearby_int", "(", "width", "*", "256", ")", ",", "\n", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "DepthwiseSeparableFusedConv2d", "(", "\n", "nearby_int", "(", "width", "*", "256", ")", ",", "nearby_int", "(", "width", "*", "256", ")", ",", "\n", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "DepthwiseSeparableFusedConv2d", "(", "\n", "nearby_int", "(", "width", "*", "256", ")", ",", "nearby_int", "(", "width", "*", "512", ")", ",", "\n", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "]", "\n", "if", "not", "shallow", ":", "\n", "# 5x 512->512 DW-separable convolutions", "\n", "            ", "layers", "+=", "[", "\n", "DepthwiseSeparableFusedConv2d", "(", "\n", "nearby_int", "(", "width", "*", "512", ")", ",", "nearby_int", "(", "width", "*", "512", ")", ",", "\n", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "DepthwiseSeparableFusedConv2d", "(", "\n", "nearby_int", "(", "width", "*", "512", ")", ",", "nearby_int", "(", "width", "*", "512", ")", ",", "\n", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "DepthwiseSeparableFusedConv2d", "(", "\n", "nearby_int", "(", "width", "*", "512", ")", ",", "nearby_int", "(", "width", "*", "512", ")", ",", "\n", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "DepthwiseSeparableFusedConv2d", "(", "\n", "nearby_int", "(", "width", "*", "512", ")", ",", "nearby_int", "(", "width", "*", "512", ")", ",", "\n", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "DepthwiseSeparableFusedConv2d", "(", "\n", "nearby_int", "(", "width", "*", "512", ")", ",", "nearby_int", "(", "width", "*", "512", ")", ",", "\n", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ",", "\n", "]", "\n", "", "layers", "+=", "[", "\n", "DepthwiseSeparableFusedConv2d", "(", "\n", "nearby_int", "(", "width", "*", "512", ")", ",", "nearby_int", "(", "width", "*", "1024", ")", ",", "\n", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ",", "\n", "# Paper specifies stride-2, but unchanged size.", "\n", "# Assume its a typo and use stride-1 convolution", "\n", "DepthwiseSeparableFusedConv2d", "(", "\n", "nearby_int", "(", "width", "*", "1024", ")", ",", "nearby_int", "(", "width", "*", "1024", ")", ",", "\n", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "]", "\n", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "nearby_int", "(", "width", "*", "1024", ")", ",", "num_classes", ")", "\n", "normalize", "=", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "\n", "self", ".", "data_regime", "=", "[", "{", "\n", "'transform'", ":", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "256", ")", ",", "\n", "transforms", ".", "RandomCrop", "(", "224", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", "]", ")", "\n", "}", "]", "\n", "\n", "if", "regime", "==", "'small'", ":", "\n", "            ", "scale_lr", "=", "4", "\n", "self", ".", "regime", "=", "[", "\n", "{", "'epoch'", ":", "0", ",", "'optimizer'", ":", "'SGD'", ",", "\n", "'momentum'", ":", "0.9", ",", "'lr'", ":", "scale_lr", "*", "1e-1", ",", "'regularizer'", ":", "weight_decay_config", "(", "1e-4", ")", "}", ",", "\n", "{", "'epoch'", ":", "30", ",", "'lr'", ":", "scale_lr", "*", "1e-2", "}", ",", "\n", "{", "'epoch'", ":", "60", ",", "'lr'", ":", "scale_lr", "*", "1e-3", "}", ",", "\n", "{", "'epoch'", ":", "80", ",", "'lr'", ":", "scale_lr", "*", "1e-4", "}", "\n", "]", "\n", "self", ".", "data_regime", "=", "[", "\n", "{", "'epoch'", ":", "0", ",", "'input_size'", ":", "128", ",", "'batch_size'", ":", "512", "}", ",", "\n", "{", "'epoch'", ":", "80", ",", "'input_size'", ":", "224", ",", "'batch_size'", ":", "128", "}", ",", "\n", "]", "\n", "self", ".", "data_eval_regime", "=", "[", "\n", "{", "'epoch'", ":", "0", ",", "'input_size'", ":", "128", ",", "'batch_size'", ":", "1024", "}", ",", "\n", "{", "'epoch'", ":", "80", ",", "'input_size'", ":", "224", ",", "'batch_size'", ":", "512", "}", ",", "\n", "]", "\n", "", "else", ":", "\n", "            ", "self", ".", "regime", "=", "[", "\n", "{", "'epoch'", ":", "0", ",", "'optimizer'", ":", "'SGD'", ",", "'lr'", ":", "1e-1", ",", "\n", "'momentum'", ":", "0.9", ",", "'regularizer'", ":", "weight_decay_config", "(", "1e-4", ")", "}", ",", "\n", "{", "'epoch'", ":", "30", ",", "'lr'", ":", "1e-2", "}", ",", "\n", "{", "'epoch'", ":", "60", ",", "'lr'", ":", "1e-3", "}", ",", "\n", "{", "'epoch'", ":", "80", ",", "'lr'", ":", "1e-4", "}", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet.MobileNet.forward": [[160, 166], ["mobilenet.MobileNet.features", "mobilenet.MobileNet.avg_pool", "mobilenet.MobileNet.view", "mobilenet.MobileNet.fc", "mobilenet.MobileNet.size"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.ResNet.features"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "x", "=", "self", ".", "avg_pool", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet.nearby_int": [[11, 13], ["int", "round"], "function", ["None"], ["def", "nearby_int", "(", "n", ")", ":", "\n", "    ", "return", "int", "(", "round", "(", "n", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet.init_model": [[15, 23], ["model.modules", "isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.modules"], ["", "def", "init_model", "(", "model", ")", ":", "\n", "    ", "for", "m", "in", "model", ".", "modules", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "            ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "            ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet.weight_decay_config": [[25, 36], ["isinstance", "isinstance", "n.endswith"], "function", ["None"], ["", "", "", "def", "weight_decay_config", "(", "value", "=", "1e-4", ",", "log", "=", "True", ")", ":", "\n", "    ", "def", "regularize_layer", "(", "m", ")", ":", "\n", "        ", "non_depthwise_conv", "=", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", "and", "m", ".", "groups", "!=", "m", ".", "in_channels", "\n", "return", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", "or", "non_depthwise_conv", "\n", "\n", "", "return", "{", "'name'", ":", "'WeightDecay'", ",", "\n", "'value'", ":", "value", ",", "\n", "'log'", ":", "log", ",", "\n", "'filter'", ":", "{", "'parameter_name'", ":", "lambda", "n", ":", "not", "n", ".", "endswith", "(", "'bias'", ")", ",", "\n", "'module'", ":", "regularize_layer", "}", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet.mobilenet": [[168, 179], ["config.pop", "mobilenet.MobileNet"], "function", ["None"], ["", "", "def", "mobilenet", "(", "**", "config", ")", ":", "\n", "    ", "r\"\"\"MobileNet model architecture from the `\"MobileNets:\n    Efficient Convolutional Neural Networks for Mobile Vision Applications\"\n    <https://arxiv.org/abs/1704.04861>`_ paper.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "dataset", "=", "config", ".", "pop", "(", "'dataset'", ",", "'imagenet'", ")", "\n", "assert", "dataset", "==", "'imagenet'", "\n", "return", "MobileNet", "(", "**", "config", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_v2.InceptionModule.__init__": [[20, 53], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "inception_v2.conv_bn", "inception_v2.conv_bn", "inception_v2.conv_bn", "inception_v2.conv_bn", "inception_v2.conv_bn", "inception_v2.conv_bn", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Sequential", "torch.Sequential", "torch.MaxPool2d", "torch.MaxPool2d", "inception_v2.conv_bn"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "n1x1_channels", ",", "n3x3r_channels", ",", "\n", "n3x3_channels", ",", "dn3x3r_channels", ",", "dn3x3_channels", ",", "\n", "pool_proj_channels", "=", "None", ",", "type_pool", "=", "'avg'", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "InceptionModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "n1x1_channels", "=", "n1x1_channels", "or", "0", "\n", "pool_proj_channels", "=", "pool_proj_channels", "or", "0", "\n", "self", ".", "stride", "=", "stride", "\n", "\n", "if", "n1x1_channels", ">", "0", ":", "\n", "            ", "self", ".", "conv_1x1", "=", "conv_bn", "(", "in_channels", ",", "n1x1_channels", ",", "1", ",", "stride", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "conv_1x1", "=", "None", "\n", "\n", "", "self", ".", "conv_3x3", "=", "nn", ".", "Sequential", "(", "\n", "conv_bn", "(", "in_channels", ",", "n3x3r_channels", ",", "1", ")", ",", "\n", "conv_bn", "(", "n3x3r_channels", ",", "n3x3_channels", ",", "3", ",", "stride", ",", "padding", "=", "1", ")", "\n", ")", "\n", "self", ".", "conv_d3x3", "=", "nn", ".", "Sequential", "(", "\n", "conv_bn", "(", "in_channels", ",", "dn3x3r_channels", ",", "1", ")", ",", "\n", "conv_bn", "(", "dn3x3r_channels", ",", "dn3x3_channels", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "conv_bn", "(", "dn3x3_channels", ",", "dn3x3_channels", ",", "3", ",", "stride", ",", "padding", "=", "1", ")", "\n", ")", "\n", "\n", "if", "type_pool", "==", "'avg'", ":", "\n", "            ", "self", ".", "pool", "=", "nn", ".", "AvgPool2d", "(", "3", ",", "stride", ",", "padding", "=", "1", ")", "\n", "", "elif", "type_pool", "==", "'max'", ":", "\n", "            ", "self", ".", "pool", "=", "nn", ".", "MaxPool2d", "(", "3", ",", "stride", ",", "padding", "=", "1", ")", "\n", "\n", "", "if", "pool_proj_channels", ">", "0", ":", "# Add pool projection", "\n", "            ", "self", ".", "pool", "=", "nn", ".", "Sequential", "(", "\n", "self", ".", "pool", ",", "\n", "conv_bn", "(", "in_channels", ",", "pool_proj_channels", ",", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_v2.InceptionModule.forward": [[54, 66], ["layer_outputs.append", "layer_outputs.append", "layer_outputs.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "layer_outputs.append", "inception_v2.InceptionModule.conv_3x3", "inception_v2.InceptionModule.conv_d3x3", "inception_v2.InceptionModule.pool", "inception_v2.InceptionModule.conv_1x1"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "layer_outputs", "=", "[", "]", "\n", "\n", "if", "self", ".", "conv_1x1", "is", "not", "None", ":", "\n", "            ", "layer_outputs", ".", "append", "(", "self", ".", "conv_1x1", "(", "inputs", ")", ")", "\n", "\n", "", "layer_outputs", ".", "append", "(", "self", ".", "conv_3x3", "(", "inputs", ")", ")", "\n", "layer_outputs", ".", "append", "(", "self", ".", "conv_d3x3", "(", "inputs", ")", ")", "\n", "layer_outputs", ".", "append", "(", "self", ".", "pool", "(", "inputs", ")", ")", "\n", "output", "=", "torch", ".", "cat", "(", "layer_outputs", ",", "1", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_v2.Inception_v2.__init__": [[70, 137], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "inception_v2.InceptionModule", "inception_v2.InceptionModule", "inception_v2.InceptionModule", "inception_v2.InceptionModule", "inception_v2.InceptionModule", "inception_v2.InceptionModule", "inception_v2.InceptionModule", "inception_v2.InceptionModule", "inception_v2.InceptionModule", "inception_v2.InceptionModule", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Dropout", "torch.Dropout", "torch.Conv2d", "torch.Conv2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.AvgPool2d", "torch.AvgPool2d", "inception_v2.conv_bn", "inception_v2.conv_bn", "torch.Dropout", "torch.Dropout", "torch.Conv2d", "torch.Conv2d", "torch.AvgPool2d", "torch.AvgPool2d", "inception_v2.conv_bn", "inception_v2.conv_bn", "torch.Dropout", "torch.Dropout", "torch.Conv2d", "torch.Conv2d", "torch.Module.__init__", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "inception_v2.Inception_v2.loss", "inception_v2.Inception_v2.loss", "inception_v2.Inception_v2.loss"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "1000", ",", "aux_classifiers", "=", "True", ")", ":", "\n", "        ", "super", "(", "inception_v2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "part1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "7", ",", "2", ",", "3", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "3", ",", "2", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "192", ",", "3", ",", "1", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "3", ",", "2", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "192", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", ",", "\n", "InceptionModule", "(", "192", ",", "64", ",", "64", ",", "64", ",", "64", ",", "96", ",", "32", ",", "'avg'", ")", ",", "\n", "InceptionModule", "(", "256", ",", "64", ",", "64", ",", "96", ",", "64", ",", "96", ",", "64", ",", "'avg'", ")", ",", "\n", "InceptionModule", "(", "320", ",", "0", ",", "128", ",", "160", ",", "64", ",", "96", ",", "0", ",", "'max'", ",", "2", ")", "\n", ")", "\n", "\n", "self", ".", "part2", "=", "nn", ".", "Sequential", "(", "\n", "InceptionModule", "(", "576", ",", "224", ",", "64", ",", "96", ",", "96", ",", "128", ",", "128", ",", "'avg'", ")", ",", "\n", "InceptionModule", "(", "576", ",", "192", ",", "96", ",", "128", ",", "96", ",", "128", ",", "128", ",", "'avg'", ")", ",", "\n", "InceptionModule", "(", "576", ",", "160", ",", "128", ",", "160", ",", "128", ",", "160", ",", "96", ",", "'avg'", ")", "\n", ")", "\n", "self", ".", "part3", "=", "nn", ".", "Sequential", "(", "\n", "InceptionModule", "(", "576", ",", "96", ",", "128", ",", "192", ",", "160", ",", "192", ",", "96", ",", "'avg'", ")", ",", "\n", "InceptionModule", "(", "576", ",", "0", ",", "128", ",", "192", ",", "192", ",", "256", ",", "0", ",", "'max'", ",", "2", ")", ",", "\n", "InceptionModule", "(", "1024", ",", "352", ",", "192", ",", "320", ",", "160", ",", "224", ",", "128", ",", "'avg'", ")", ",", "\n", "InceptionModule", "(", "1024", ",", "352", ",", "192", ",", "320", ",", "192", ",", "224", ",", "128", ",", "'max'", ")", "\n", ")", "\n", "\n", "self", ".", "main_classifier", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "AvgPool2d", "(", "7", ",", "1", ")", ",", "\n", "nn", ".", "Dropout", "(", "0.2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "1024", ",", "self", ".", "num_classes", ",", "1", ")", "\n", ")", "\n", "if", "aux_classifiers", ":", "\n", "            ", "self", ".", "aux_classifier1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "AvgPool2d", "(", "5", ",", "3", ")", ",", "\n", "conv_bn", "(", "576", ",", "128", ",", "1", ")", ",", "\n", "conv_bn", "(", "128", ",", "768", ",", "4", ")", ",", "\n", "nn", ".", "Dropout", "(", "0.2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "768", ",", "self", ".", "num_classes", ",", "1", ")", ",", "\n", ")", "\n", "self", ".", "aux_classifier2", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "AvgPool2d", "(", "5", ",", "3", ")", ",", "\n", "conv_bn", "(", "576", ",", "128", ",", "1", ")", ",", "\n", "conv_bn", "(", "128", ",", "768", ",", "4", ")", ",", "\n", "nn", ".", "Dropout", "(", "0.2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "768", ",", "self", ".", "num_classes", ",", "1", ")", ",", "\n", ")", "\n", "\n", "", "self", ".", "regime", "=", "[", "\n", "{", "'epoch'", ":", "0", ",", "'optimizer'", ":", "'SGD'", ",", "'lr'", ":", "1e-1", ",", "\n", "'weight_decay'", ":", "1e-4", ",", "'momentum'", ":", "0.9", "}", ",", "\n", "{", "'epoch'", ":", "30", ",", "'lr'", ":", "1e-2", "}", ",", "\n", "{", "'epoch'", ":", "60", ",", "'lr'", ":", "1e-3", ",", "'weight_decay'", ":", "0", "}", ",", "\n", "{", "'epoch'", ":", "90", ",", "'lr'", ":", "1e-4", "}", "\n", "]", "\n", "\n", "class", "aux_loss", "(", "nn", ".", "Module", ")", ":", "\n", "            ", "def", "__init__", "(", "self", ")", ":", "\n", "                ", "super", "(", "aux_loss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "loss", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "outputs", ",", "target", ")", ":", "\n", "                ", "return", "self", ".", "loss", "(", "outputs", "[", "0", "]", ",", "target", ")", "+", "0.4", "*", "(", "self", ".", "loss", "(", "outputs", "[", "1", "]", ",", "target", ")", "+", "self", ".", "loss", "(", "outputs", "[", "2", "]", ",", "target", ")", ")", "\n", "", "", "self", ".", "criterion", "=", "aux_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_v2.Inception_v2.forward": [[138, 149], ["inception_v2.Inception_v2.part1", "inception_v2.Inception_v2.part2", "inception_v2.Inception_v2.part3", "inception_v2.Inception_v2.main_classifier().view", "hasattr", "inception_v2.Inception_v2.aux_classifier1().view", "inception_v2.Inception_v2.aux_classifier2().view", "inception_v2.Inception_v2.main_classifier", "inception_v2.Inception_v2.aux_classifier1", "inception_v2.Inception_v2.aux_classifier2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "branch1", "=", "self", ".", "part1", "(", "inputs", ")", "\n", "branch2", "=", "self", ".", "part2", "(", "branch1", ")", "\n", "branch3", "=", "self", ".", "part3", "(", "branch1", ")", "\n", "\n", "output", "=", "self", ".", "main_classifier", "(", "branch3", ")", ".", "view", "(", "-", "1", ",", "self", ".", "num_classes", ")", "\n", "if", "hasattr", "(", "self", ",", "'aux_classifier1'", ")", ":", "\n", "            ", "branch1", "=", "self", ".", "aux_classifier1", "(", "branch1", ")", ".", "view", "(", "-", "1", ",", "self", ".", "num_classes", ")", "\n", "branch2", "=", "self", ".", "aux_classifier2", "(", "branch2", ")", ".", "view", "(", "-", "1", ",", "self", ".", "num_classes", ")", "\n", "output", "=", "[", "output", ",", "branch1", ",", "branch2", "]", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_v2.conv_bn": [[8, 15], ["torch.Sequential", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU"], "function", ["None"], ["def", "conv_bn", "(", "in_planes", ",", "out_planes", ",", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ":", "\n", "    ", "\"convolution with batchnorm, relu\"", "\n", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_planes", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_v2.inception_v2": [[151, 154], ["getattr", "inception_v2.Inception_v2"], "function", ["None"], ["", "", "def", "inception_v2", "(", "**", "kwargs", ")", ":", "\n", "    ", "num_classes", "=", "getattr", "(", "kwargs", ",", "'num_classes'", ",", "1000", ")", "\n", "return", "Inception_v2", "(", "num_classes", "=", "num_classes", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet_zi.BasicBlock.__init__": [[48, 59], ["torch.Module.__init__", "resnet_zi.conv3x3", "torch.ReLU", "torch.ReLU", "resnet_zi.conv3x3"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.conv3x3", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.conv3x3"], ["    ", "def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "expansion", "=", "1", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "residual_block", "=", "None", ",", "layer_depth", "=", "1", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ",", "groups", "=", "groups", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "expansion", "*", "planes", ",", "\n", "groups", "=", "groups", ",", "multiplier", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "residual_block", "=", "residual_block", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "expansion", "=", "expansion", "\n", "self", ".", "layer_depth", "=", "layer_depth", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet_zi.BasicBlock.forward": [[60, 76], ["resnet_zi.BasicBlock.conv1", "resnet_zi.BasicBlock.relu", "resnet_zi.BasicBlock.conv2", "resnet_zi.BasicBlock.relu", "resnet_zi.BasicBlock.downsample", "resnet_zi.BasicBlock.residual_block"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "residual", ")", "\n", "\n", "", "if", "self", ".", "residual_block", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "residual_block", "(", "residual", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet_zi.Bottleneck.__init__": [[80, 94], ["torch.Module.__init__", "modules.fixup.ZIConv2d", "resnet_zi.conv3x3", "modules.fixup.ZIConv2d", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.conv3x3"], ["    ", "def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "expansion", "=", "4", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "residual_block", "=", "None", ",", "layer_depth", "=", "1", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv1", "=", "ZIConv2d", "(", "\n", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ",", "stride", "=", "stride", ",", "groups", "=", "groups", ")", "\n", "self", ".", "conv3", "=", "ZIConv2d", "(", "\n", "planes", ",", "planes", "*", "expansion", ",", "kernel_size", "=", "1", ",", "multiplier", "=", "True", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "residual_block", "=", "residual_block", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "expansion", "=", "expansion", "\n", "self", ".", "layer_depth", "=", "layer_depth", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet_zi.Bottleneck.forward": [[95, 113], ["resnet_zi.Bottleneck.conv1", "resnet_zi.Bottleneck.relu", "resnet_zi.Bottleneck.conv2", "resnet_zi.Bottleneck.relu", "resnet_zi.Bottleneck.conv3", "resnet_zi.Bottleneck.relu", "resnet_zi.Bottleneck.downsample", "resnet_zi.Bottleneck.residual_block"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "residual", ")", "\n", "\n", "", "if", "self", ".", "residual_block", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "residual_block", "(", "residual", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet_zi.ResNetZI.__init__": [[117, 120], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "ResNetZI", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_layers", "=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet_zi.ResNetZI._make_layer": [[121, 141], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "modules.fixup.ZIConv2d", "residual_block.", "block", "layers.append", "block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "expansion", "=", "1", ",", "stride", "=", "1", ",", "groups", "=", "1", ",", "residual_block", "=", "None", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "out_planes", "=", "planes", "*", "expansion", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "out_planes", ":", "\n", "            ", "downsample", "=", "ZIConv2d", "(", "self", ".", "inplanes", ",", "out_planes", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", "\n", "", "if", "residual_block", "is", "not", "None", ":", "\n", "            ", "residual_block", "=", "residual_block", "(", "out_planes", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "expansion", "=", "expansion", ",", "\n", "downsample", "=", "downsample", ",", "groups", "=", "groups", ",", "residual_block", "=", "residual_block", ",", "layer_depth", "=", "self", ".", "num_layers", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "expansion", "\n", "self", ".", "num_layers", "+=", "1", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "expansion", "=", "expansion", ",", "groups", "=", "groups", ",", "\n", "residual_block", "=", "residual_block", ",", "layer_depth", "=", "self", ".", "num_layers", ")", ")", "\n", "self", ".", "num_layers", "+=", "1", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet_zi.ResNetZI.features": [[142, 153], ["resnet_zi.ResNetZI.conv1", "resnet_zi.ResNetZI.relu", "resnet_zi.ResNetZI.maxpool", "resnet_zi.ResNetZI.layer1", "resnet_zi.ResNetZI.layer2", "resnet_zi.ResNetZI.layer3", "resnet_zi.ResNetZI.layer4", "resnet_zi.ResNetZI.avgpool", "resnet_zi.ResNetZI.view", "resnet_zi.ResNetZI.size"], "methods", ["None"], ["", "def", "features", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "return", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet_zi.ResNetZI.forward": [[154, 158], ["resnet_zi.ResNetZI.features", "resnet_zi.ResNetZI.fc"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.ResNet.features"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet_zi.ResNetZI_imagenet.__init__": [[162, 247], ["resnet_zi.ResNetZI.__init__", "modules.fixup.ZIConv2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "range", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "modules.fixup.ZILinear", "resnet_zi.init_model", "len", "resnet_zi.ResNetZI_imagenet._make_layer", "setattr", "min", "modules.checkpoint.CheckpointModule", "str", "resnet_zi.weight_decay_config", "resnet_zi.ResNetZI_imagenet.__init__.ramp_up_lr"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.densenet.init_model", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.densenet.weight_decay_config"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "1000", ",", "inplanes", "=", "64", ",", "\n", "block", "=", "Bottleneck", ",", "residual_block", "=", "None", ",", "layers", "=", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "\n", "width", "=", "[", "64", ",", "128", ",", "256", ",", "512", "]", ",", "expansion", "=", "4", ",", "groups", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "\n", "regime", "=", "'normal'", ",", "scale_lr", "=", "1", ",", "checkpoint_segments", "=", "0", ")", ":", "\n", "        ", "super", "(", "ResNetZI_imagenet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "inplanes", "=", "inplanes", "\n", "self", ".", "conv1", "=", "ZIConv2d", "(", "3", ",", "self", ".", "inplanes", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "layers", ")", ")", ":", "\n", "            ", "layer", "=", "self", ".", "_make_layer", "(", "block", "=", "block", ",", "planes", "=", "width", "[", "i", "]", ",", "blocks", "=", "layers", "[", "i", "]", ",", "expansion", "=", "expansion", ",", "\n", "stride", "=", "1", "if", "i", "==", "0", "else", "2", ",", "residual_block", "=", "residual_block", ",", "groups", "=", "groups", "[", "i", "]", ")", "\n", "if", "checkpoint_segments", ">", "0", ":", "\n", "                ", "layer_checkpoint_segments", "=", "min", "(", "checkpoint_segments", ",", "layers", "[", "i", "]", ")", "\n", "layer", "=", "CheckpointModule", "(", "layer", ",", "layer_checkpoint_segments", ")", "\n", "", "setattr", "(", "self", ",", "'layer%s'", "%", "str", "(", "i", "+", "1", ")", ",", "layer", ")", "\n", "\n", "", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "fc", "=", "ZILinear", "(", "width", "[", "-", "1", "]", "*", "expansion", ",", "num_classes", ",", "\n", "bias", "=", "True", ",", "post_bias", "=", "False", ")", "\n", "\n", "init_model", "(", "self", ")", "\n", "\n", "def", "ramp_up_lr", "(", "lr0", ",", "lrT", ",", "T", ")", ":", "\n", "            ", "rate", "=", "(", "lrT", "-", "lr0", ")", "/", "T", "\n", "return", "\"lambda t: {'lr': %s + t * %s}\"", "%", "(", "lr0", ",", "rate", ")", "\n", "", "if", "regime", "==", "'normal'", ":", "\n", "            ", "self", ".", "regime", "=", "[", "\n", "{", "'epoch'", ":", "0", ",", "'optimizer'", ":", "'SGD'", ",", "'momentum'", ":", "0.9", ",", "'regularizer'", ":", "weight_decay_config", "(", "1e-4", ")", ",", "\n", "'step_lambda'", ":", "ramp_up_lr", "(", "0.1", ",", "0.1", "*", "scale_lr", ",", "5004", "*", "5", "/", "scale_lr", ")", "}", ",", "\n", "{", "'epoch'", ":", "5", ",", "'lr'", ":", "scale_lr", "*", "1e-1", "}", ",", "\n", "{", "'epoch'", ":", "30", ",", "'lr'", ":", "scale_lr", "*", "1e-2", "}", ",", "\n", "{", "'epoch'", ":", "60", ",", "'lr'", ":", "scale_lr", "*", "1e-3", "}", ",", "\n", "{", "'epoch'", ":", "80", ",", "'lr'", ":", "scale_lr", "*", "1e-4", "}", "\n", "]", "\n", "", "elif", "regime", "==", "'fast'", ":", "\n", "            ", "self", ".", "regime", "=", "[", "\n", "{", "'epoch'", ":", "0", ",", "'optimizer'", ":", "'SGD'", ",", "'momentum'", ":", "0.9", ",", "'regularizer'", ":", "weight_decay_config", "(", "1e-4", ")", ",", "\n", "'step_lambda'", ":", "ramp_up_lr", "(", "0.1", ",", "0.1", "*", "4", "*", "scale_lr", ",", "5004", "*", "4", "/", "(", "4", "*", "scale_lr", ")", ")", "}", ",", "\n", "{", "'epoch'", ":", "4", ",", "'lr'", ":", "4", "*", "scale_lr", "*", "1e-1", "}", ",", "\n", "{", "'epoch'", ":", "18", ",", "'lr'", ":", "scale_lr", "*", "1e-1", "}", ",", "\n", "{", "'epoch'", ":", "21", ",", "'lr'", ":", "scale_lr", "*", "1e-2", "}", ",", "\n", "{", "'epoch'", ":", "35", ",", "'lr'", ":", "scale_lr", "*", "1e-3", "}", ",", "\n", "{", "'epoch'", ":", "43", ",", "'lr'", ":", "scale_lr", "*", "1e-4", "}", ",", "\n", "]", "\n", "self", ".", "data_regime", "=", "[", "\n", "{", "'epoch'", ":", "0", ",", "'input_size'", ":", "128", ",", "'batch_size'", ":", "256", "}", ",", "\n", "{", "'epoch'", ":", "18", ",", "'input_size'", ":", "224", ",", "'batch_size'", ":", "64", "}", ",", "\n", "{", "'epoch'", ":", "41", ",", "'input_size'", ":", "288", ",", "'batch_size'", ":", "32", "}", ",", "\n", "]", "\n", "", "elif", "regime", "==", "'small'", ":", "\n", "            ", "scale_lr", "*=", "4", "\n", "self", ".", "regime", "=", "[", "\n", "{", "'epoch'", ":", "0", ",", "'optimizer'", ":", "'SGD'", ",", "'regularizer'", ":", "weight_decay_config", "(", "1e-4", ")", ",", "\n", "'momentum'", ":", "0.9", ",", "'lr'", ":", "scale_lr", "*", "1e-1", "}", ",", "\n", "{", "'epoch'", ":", "30", ",", "'lr'", ":", "scale_lr", "*", "1e-2", "}", ",", "\n", "{", "'epoch'", ":", "60", ",", "'lr'", ":", "scale_lr", "*", "1e-3", "}", ",", "\n", "{", "'epoch'", ":", "80", ",", "'lr'", ":", "scale_lr", "*", "1e-4", "}", "\n", "]", "\n", "self", ".", "data_regime", "=", "[", "\n", "{", "'epoch'", ":", "0", ",", "'input_size'", ":", "128", ",", "'batch_size'", ":", "256", "}", ",", "\n", "{", "'epoch'", ":", "80", ",", "'input_size'", ":", "224", ",", "'batch_size'", ":", "64", "}", ",", "\n", "]", "\n", "self", ".", "data_eval_regime", "=", "[", "\n", "{", "'epoch'", ":", "0", ",", "'input_size'", ":", "128", ",", "'batch_size'", ":", "1024", "}", ",", "\n", "{", "'epoch'", ":", "80", ",", "'input_size'", ":", "224", ",", "'batch_size'", ":", "512", "}", ",", "\n", "]", "\n", "\n", "", "elif", "regime", "==", "'small_ba'", ":", "\n", "            ", "scale_lr", "=", "1", "\n", "self", ".", "regime", "=", "[", "\n", "{", "'epoch'", ":", "0", ",", "'optimizer'", ":", "'SGD'", ",", "'regularizer'", ":", "weight_decay_config", "(", "1e-4", ")", ",", "\n", "'momentum'", ":", "0.9", ",", "'lr'", ":", "scale_lr", "*", "1e-1", "}", ",", "\n", "{", "'epoch'", ":", "20", ",", "'lr'", ":", "scale_lr", "*", "1e-2", "}", ",", "\n", "{", "'epoch'", ":", "25", ",", "'lr'", ":", "scale_lr", "*", "1e-3", "}", ",", "\n", "{", "'epoch'", ":", "28", ",", "'lr'", ":", "scale_lr", "*", "1e-4", "}", "\n", "]", "\n", "self", ".", "data_regime", "=", "[", "\n", "{", "'epoch'", ":", "0", ",", "'input_size'", ":", "128", ",", "'batch_size'", ":", "64", ",", "'duplicates'", ":", "4", "}", ",", "\n", "{", "'epoch'", ":", "25", ",", "'input_size'", ":", "224", ",", "'batch_size'", ":", "64", ",", "'duplicates'", ":", "1", "}", ",", "\n", "]", "\n", "self", ".", "data_eval_regime", "=", "[", "\n", "{", "'epoch'", ":", "0", ",", "'input_size'", ":", "224", ",", "'batch_size'", ":", "128", "}", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet_zi.ResNetZI_cifar.__init__": [[252, 279], ["resnet_zi.ResNetZI.__init__", "int", "modules.fixup.ZIConv2d", "torch.ReLU", "torch.ReLU", "resnet_zi.ResNetZI_cifar._make_layer", "resnet_zi.ResNetZI_cifar._make_layer", "resnet_zi.ResNetZI_cifar._make_layer", "torch.AvgPool2d", "torch.AvgPool2d", "modules.fixup.ZILinear", "resnet_zi.init_model", "resnet_zi.weight_decay_config"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.densenet.init_model", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.densenet.weight_decay_config"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "10", ",", "inplanes", "=", "16", ",", "\n", "block", "=", "BasicBlock", ",", "depth", "=", "18", ",", "width", "=", "[", "16", ",", "32", ",", "64", "]", ",", "\n", "groups", "=", "[", "1", ",", "1", ",", "1", "]", ",", "residual_block", "=", "None", ")", ":", "\n", "        ", "super", "(", "ResNetZI_cifar", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "inplanes", "=", "inplanes", "\n", "n", "=", "int", "(", "(", "depth", "-", "2", ")", "/", "6", ")", "\n", "self", ".", "conv1", "=", "ZIConv2d", "(", "3", ",", "self", ".", "inplanes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "lambda", "x", ":", "x", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "width", "[", "0", "]", ",", "n", ",", "groups", "=", "groups", "[", "\n", "0", "]", ",", "residual_block", "=", "residual_block", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "\n", "block", ",", "width", "[", "1", "]", ",", "n", ",", "stride", "=", "2", ",", "groups", "=", "groups", "[", "1", "]", ",", "residual_block", "=", "residual_block", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "\n", "block", ",", "width", "[", "2", "]", ",", "n", ",", "stride", "=", "2", ",", "groups", "=", "groups", "[", "2", "]", ",", "residual_block", "=", "residual_block", ")", "\n", "self", ".", "layer4", "=", "lambda", "x", ":", "x", "\n", "self", ".", "avgpool", "=", "nn", ".", "AvgPool2d", "(", "8", ")", "\n", "self", ".", "fc", "=", "ZILinear", "(", "width", "[", "-", "1", "]", ",", "num_classes", ",", "\n", "bias", "=", "True", ",", "post_bias", "=", "False", ")", "\n", "init_model", "(", "self", ")", "\n", "self", ".", "regime", "=", "[", "\n", "{", "'epoch'", ":", "0", ",", "'optimizer'", ":", "'SGD'", ",", "'lr'", ":", "1e-1", ",", "'momentum'", ":", "0.9", ",", "\n", "'regularizer'", ":", "weight_decay_config", "(", "1e-4", ")", "}", ",", "\n", "{", "'epoch'", ":", "81", ",", "'lr'", ":", "1e-2", "}", ",", "\n", "{", "'epoch'", ":", "122", ",", "'lr'", ":", "1e-3", "}", ",", "\n", "{", "'epoch'", ":", "164", ",", "'lr'", ":", "1e-4", "}", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet_zi.conv3x3": [[11, 15], ["modules.fixup.ZIConv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ",", "groups", "=", "1", ",", "bias", "=", "False", ",", "pre_bias", "=", "True", ",", "post_bias", "=", "True", ",", "multiplier", "=", "False", ")", ":", "\n", "    ", "\"3x3 convolution with padding\"", "\n", "return", "ZIConv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "groups", "=", "groups", ",", "bias", "=", "bias", ",", "pre_bias", "=", "pre_bias", ",", "post_bias", "=", "post_bias", ",", "multiplier", "=", "multiplier", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet_zi.init_model": [[17, 36], ["model.modules", "model.modules", "model.fc.weight.data.zero_", "model.fc.bias.data.zero_", "layer.weight.data.div_", "isinstance", "isinstance", "math.pow", "m.weight.data.normal_", "resnet_zi.init_model.zi"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.modules", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.modules"], ["", "def", "init_model", "(", "model", ")", ":", "\n", "    ", "def", "zi", "(", "layer", ",", "m", ",", "L", ")", ":", "\n", "        ", "layer", ".", "weight", ".", "data", ".", "div_", "(", "math", ".", "pow", "(", "L", ",", "-", "1.", "/", "(", "2", "*", "m", "-", "2", ")", ")", ")", "\n", "\n", "", "for", "m", "in", "model", ".", "modules", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "ZIConv2d", ")", ":", "\n", "            ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "", "for", "m", "in", "model", ".", "modules", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "Bottleneck", ")", ":", "\n", "            ", "zi", "(", "m", ".", "conv1", ",", "3", ",", "m", ".", "layer_depth", ")", "\n", "zi", "(", "m", ".", "conv2", ",", "3", ",", "m", ".", "layer_depth", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "conv3", ".", "weight", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "BasicBlock", ")", ":", "\n", "            ", "zi", "(", "m", ".", "conv1", ",", "2", ",", "m", ".", "layer_depth", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "conv2", ".", "weight", ",", "0", ")", "\n", "\n", "", "", "model", ".", "fc", ".", "weight", ".", "data", ".", "zero_", "(", ")", "\n", "model", ".", "fc", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet_zi.weight_decay_config": [[38, 43], ["None"], "function", ["None"], ["", "def", "weight_decay_config", "(", "value", "=", "1e-4", ",", "log", "=", "True", ")", ":", "\n", "    ", "return", "{", "'name'", ":", "'WeightDecay'", ",", "\n", "'value'", ":", "value", ",", "\n", "'log'", ":", "log", ",", "\n", "'filter'", ":", "{", "'parameter_name'", ":", "lambda", "n", ":", "'bias'", "not", "in", "n", "and", "'multiplier'", "not", "in", "n", "}", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet_zi.resnet_zi": [[282, 316], ["config.pop", "config.setdefault", "config.pop", "resnet_zi.ResNetZI_imagenet", "config.update", "config.update", "config.update", "config.update", "config.update", "config.update", "config.setdefault", "config.setdefault", "resnet_zi.ResNetZI_cifar", "dict", "dict", "dict", "dict", "dict", "dict", "config.setdefault", "config.setdefault", "resnet_zi.ResNetZI_cifar"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.update", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.update", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.update", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.update", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.update", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.update"], ["", "", "def", "resnet_zi", "(", "**", "config", ")", ":", "\n", "    ", "dataset", "=", "config", ".", "pop", "(", "'dataset'", ",", "'imagenet'", ")", "\n", "\n", "if", "'imagenet'", "in", "dataset", ":", "\n", "        ", "config", ".", "setdefault", "(", "'num_classes'", ",", "1000", ")", "\n", "depth", "=", "config", ".", "pop", "(", "'depth'", ",", "50", ")", "\n", "if", "depth", "==", "18", ":", "\n", "            ", "config", ".", "update", "(", "dict", "(", "block", "=", "BasicBlock", ",", "\n", "layers", "=", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "\n", "expansion", "=", "1", ")", ")", "\n", "", "if", "depth", "==", "34", ":", "\n", "            ", "config", ".", "update", "(", "dict", "(", "block", "=", "BasicBlock", ",", "\n", "layers", "=", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "\n", "expansion", "=", "1", ")", ")", "\n", "", "if", "depth", "==", "50", ":", "\n", "            ", "config", ".", "update", "(", "dict", "(", "block", "=", "Bottleneck", ",", "layers", "=", "[", "3", ",", "4", ",", "6", ",", "3", "]", ")", ")", "\n", "", "if", "depth", "==", "101", ":", "\n", "            ", "config", ".", "update", "(", "dict", "(", "block", "=", "Bottleneck", ",", "layers", "=", "[", "3", ",", "4", ",", "23", ",", "3", "]", ")", ")", "\n", "", "if", "depth", "==", "152", ":", "\n", "            ", "config", ".", "update", "(", "dict", "(", "block", "=", "Bottleneck", ",", "layers", "=", "[", "3", ",", "8", ",", "36", ",", "3", "]", ")", ")", "\n", "", "if", "depth", "==", "200", ":", "\n", "            ", "config", ".", "update", "(", "dict", "(", "block", "=", "Bottleneck", ",", "layers", "=", "[", "3", ",", "24", ",", "36", ",", "3", "]", ")", ")", "\n", "\n", "", "return", "ResNetZI_imagenet", "(", "**", "config", ")", "\n", "\n", "", "elif", "dataset", "==", "'cifar10'", ":", "\n", "        ", "config", ".", "setdefault", "(", "'num_classes'", ",", "10", ")", "\n", "config", ".", "setdefault", "(", "'depth'", ",", "44", ")", "\n", "return", "ResNetZI_cifar", "(", "block", "=", "BasicBlock", ",", "**", "config", ")", "\n", "\n", "", "elif", "dataset", "==", "'cifar100'", ":", "\n", "        ", "config", ".", "setdefault", "(", "'num_classes'", ",", "100", ")", "\n", "config", ".", "setdefault", "(", "'depth'", ",", "44", ")", "\n", "return", "ResNetZI_cifar", "(", "block", "=", "BasicBlock", ",", "**", "config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet_zi.resnet_zi_se": [[318, 321], ["resnet_zi.resnet_zi"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet_zi.resnet_zi"], ["", "", "def", "resnet_zi_se", "(", "**", "config", ")", ":", "\n", "    ", "config", "[", "'residual_block'", "]", "=", "SEBlock", "\n", "return", "resnet_zi", "(", "**", "config", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.vgg.VGG.__init__": [[17, 36], ["torch.Module.__init__", "vgg.VGG._make_layers", "torch.Sequential", "torch.Linear", "torch.ReLU", "torch.Dropout", "torch.Linear", "torch.ReLU", "torch.Dropout", "torch.Linear"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.vgg.VGG._make_layers"], ["    ", "def", "__init__", "(", "self", ",", "vgg_name", ",", "num_classes", "=", "10", ",", "batch_norm", "=", "False", ")", ":", "\n", "        ", "super", "(", "VGG", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "features", "=", "self", ".", "_make_layers", "(", "cfg", "[", "vgg_name", "]", ",", "batch_norm", ")", "\n", "self", ".", "classifier", "=", "self", ".", "classifier", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "512", ",", "4096", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "4096", ",", "4096", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "4096", ",", "num_classes", ")", ",", "\n", ")", "\n", "\n", "self", ".", "regime", "=", "[", "\n", "{", "'epoch'", ":", "0", ",", "'optimizer'", ":", "'SGD'", ",", "'lr'", ":", "1e-1", ",", "\n", "'weight_decay'", ":", "5e-4", ",", "'momentum'", ":", "0.9", "}", ",", "\n", "{", "'epoch'", ":", "60", ",", "'lr'", ":", "1e-1", "*", "(", "0.2", "**", "1", ")", "}", ",", "\n", "{", "'epoch'", ":", "120", ",", "'lr'", ":", "1e-1", "*", "(", "0.2", "**", "2", ")", "}", ",", "\n", "{", "'epoch'", ":", "160", ",", "'lr'", ":", "1e-1", "*", "(", "0.2", "**", "3", ")", "}", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.vgg.VGG.forward": [[38, 43], ["vgg.VGG.features", "vgg.VGG.view", "vgg.VGG.classifier", "vgg.VGG.size"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.ResNet.features"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "features", "(", "x", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "classifier", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.vgg.VGG._make_layers": [[44, 59], ["torch.Sequential", "torch.AvgPool2d", "torch.Conv2d", "torch.MaxPool2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "methods", ["None"], ["", "def", "_make_layers", "(", "self", ",", "cfg", ",", "batch_norm", "=", "False", ")", ":", "\n", "        ", "layers", "=", "[", "]", "\n", "in_channels", "=", "3", "\n", "for", "x", "in", "cfg", ":", "\n", "            ", "if", "x", "==", "'M'", ":", "\n", "                ", "layers", "+=", "[", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "]", "\n", "", "else", ":", "\n", "                ", "conv2d", "=", "nn", ".", "Conv2d", "(", "in_channels", ",", "x", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "if", "batch_norm", ":", "\n", "                    ", "layers", "+=", "[", "conv2d", ",", "nn", ".", "BatchNorm2d", "(", "x", ")", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "", "else", ":", "\n", "                    ", "layers", "+=", "[", "conv2d", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "]", "\n", "", "in_channels", "=", "x", "\n", "", "", "layers", "+=", "[", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "1", ",", "stride", "=", "1", ")", "]", "\n", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.vgg.vgg": [[61, 94], ["config.pop", "config.pop", "config.pop", "config.setdefault", "vgg.VGG", "config.setdefault", "config.setdefault", "torchvision.models.vgg.vgg11", "torchvision.models.vgg.vgg11_bn", "torchvision.models.vgg.vgg13", "torchvision.models.vgg.vgg13_bn", "torchvision.models.vgg.vgg16", "torchvision.models.vgg.vgg16_bn", "torchvision.models.vgg.vgg19", "torchvision.models.vgg.vgg19_bn", "config.setdefault"], "function", ["None"], ["", "", "def", "vgg", "(", "**", "config", ")", ":", "\n", "    ", "dataset", "=", "config", ".", "pop", "(", "'dataset'", ",", "'imagenet'", ")", "\n", "depth", "=", "config", ".", "pop", "(", "'depth'", ",", "16", ")", "\n", "bn", "=", "config", ".", "pop", "(", "'bn'", ",", "True", ")", "\n", "\n", "if", "dataset", "==", "'imagenet'", ":", "\n", "        ", "config", ".", "setdefault", "(", "'num_classes'", ",", "1000", ")", "\n", "if", "depth", "==", "11", ":", "\n", "            ", "if", "bn", "is", "False", ":", "\n", "                ", "return", "vgg11", "(", "pretrained", "=", "False", ",", "**", "config", ")", "\n", "", "else", ":", "\n", "                ", "return", "vgg11_bn", "(", "pretrained", "=", "False", ",", "**", "config", ")", "\n", "", "", "if", "depth", "==", "13", ":", "\n", "            ", "if", "bn", "is", "False", ":", "\n", "                ", "return", "vgg13", "(", "pretrained", "=", "False", ",", "**", "config", ")", "\n", "", "else", ":", "\n", "                ", "return", "vgg13_bn", "(", "pretrained", "=", "False", ",", "**", "config", ")", "\n", "", "", "if", "depth", "==", "16", ":", "\n", "            ", "if", "bn", "is", "False", ":", "\n", "                ", "return", "vgg16", "(", "pretrained", "=", "False", ",", "**", "config", ")", "\n", "", "else", ":", "\n", "                ", "return", "vgg16_bn", "(", "pretrained", "=", "False", ",", "**", "config", ")", "\n", "", "", "if", "depth", "==", "19", ":", "\n", "            ", "if", "bn", "is", "False", ":", "\n", "                ", "return", "vgg19", "(", "pretrained", "=", "False", ",", "**", "config", ")", "\n", "", "else", ":", "\n", "                ", "return", "vgg19_bn", "(", "pretrained", "=", "False", ",", "**", "config", ")", "\n", "", "", "", "elif", "dataset", "==", "'cifar10'", ":", "\n", "        ", "config", ".", "setdefault", "(", "'num_classes'", ",", "10", ")", "\n", "", "elif", "dataset", "==", "'cifar100'", ":", "\n", "        ", "config", ".", "setdefault", "(", "'num_classes'", ",", "100", ")", "\n", "", "config", ".", "setdefault", "(", "'batch_norm'", ",", "bn", ")", "\n", "return", "VGG", "(", "model_name", "[", "depth", "]", ",", "**", "config", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mnist.mnist_model.__init__": [[8, 33], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Dropout", "torch.Dropout", "torch.Conv2d", "torch.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.ReLU", "torch.ReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.ReLU", "torch.ReLU", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "mnist_model", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "feats", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "1", ",", "32", ",", "5", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "2", ",", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "32", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "32", ",", "64", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "2", ",", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "\n", "nn", ".", "Conv2d", "(", "64", ",", "128", ",", "3", ",", "1", ",", "1", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", "\n", ")", "\n", "\n", "self", ".", "classifier", "=", "nn", ".", "Conv2d", "(", "128", ",", "10", ",", "1", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AvgPool2d", "(", "6", ",", "6", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "0.5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mnist.mnist_model.forward": [[34, 41], ["mnist.mnist_model.feats", "mnist.mnist_model.dropout", "mnist.mnist_model.classifier", "mnist.mnist_model.avgpool", "out.view.view.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "out", "=", "self", ".", "feats", "(", "inputs", ")", "\n", "out", "=", "self", ".", "dropout", "(", "out", ")", "\n", "out", "=", "self", ".", "classifier", "(", "out", ")", "\n", "out", "=", "self", ".", "avgpool", "(", "out", ")", "\n", "out", "=", "out", ".", "view", "(", "-", "1", ",", "10", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mnist.mnist": [[43, 45], ["mnist.mnist_model"], "function", ["None"], ["", "", "def", "mnist", "(", "**", "kwargs", ")", ":", "\n", "    ", "return", "mnist_model", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.efficientnet.ConvBNAct.__init__": [[46, 54], ["kwargs.pop", "kwargs.setdefault", "torch.Sequential.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "modules.activations.HardSwish", "modules.activations.Swish"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "*", "kargs", ",", "**", "kwargs", ")", ":", "\n", "        ", "hard_act", "=", "kwargs", ".", "pop", "(", "'hard_act'", ",", "False", ")", "\n", "kwargs", ".", "setdefault", "(", "'bias'", ",", "False", ")", "\n", "\n", "super", "(", "ConvBNAct", ",", "self", ")", ".", "__init__", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "*", "kargs", ",", "**", "kwargs", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", "HardSwish", "(", ")", "if", "hard_act", "else", "Swish", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.efficientnet.MBConv.__init__": [[67, 83], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "efficientnet.ConvBNAct", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "efficientnet.ConvBNAct", "torch.Identity", "torch.Identity", "torch.Identity", "modules.se.SESwishBlock", "torch.Identity", "torch.Identity", "torch.Identity", "int"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "expansion", "=", "1", ",", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "padding", "=", "1", ",", "se_ratio", "=", "0.25", ",", "hard_act", "=", "False", ")", ":", "\n", "        ", "expanded", "=", "in_channels", "*", "expansion", "\n", "super", "(", "MBConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "add_res", "=", "stride", "==", "1", "and", "in_channels", "==", "out_channels", "\n", "self", ".", "block", "=", "nn", ".", "Sequential", "(", "\n", "ConvBNAct", "(", "in_channels", ",", "expanded", ",", "1", ",", "\n", "hard_act", "=", "hard_act", ")", "if", "expanded", "!=", "in_channels", "else", "nn", ".", "Identity", "(", ")", ",", "\n", "ConvBNAct", "(", "expanded", ",", "expanded", ",", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "groups", "=", "expanded", ",", "hard_act", "=", "hard_act", ")", ",", "\n", "SESwishBlock", "(", "expanded", ",", "expanded", ",", "int", "(", "in_channels", "*", "se_ratio", ")", ",", "\n", "hard_act", "=", "hard_act", ")", "if", "se_ratio", ">", "0", "else", "nn", ".", "Identity", "(", ")", ",", "\n", "nn", ".", "Conv2d", "(", "expanded", ",", "out_channels", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", "\n", ")", "\n", "self", ".", "drop_prob", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.efficientnet.MBConv.forward": [[84, 91], ["efficientnet.MBConv.block", "efficientnet.drop_connect"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.models.efficientnet.drop_connect"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "block", "(", "x", ")", "\n", "if", "self", ".", "add_res", ":", "\n", "            ", "if", "self", ".", "training", "and", "self", ".", "drop_prob", ">", "0.", ":", "\n", "                ", "x", "=", "drop_connect", "(", "x", ",", "self", ".", "drop_prob", ")", "\n", "", "out", "+=", "x", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.efficientnet.MBConvBlock.__init__": [[94, 102], ["dict", "efficientnet.MBConv", "torch.Sequential.__init__", "efficientnet.MBConv", "range"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "num", ",", "expansion", "=", "1", ",", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "padding", "=", "1", ",", "se_ratio", "=", "0.25", ",", "hard_act", "=", "False", ")", ":", "\n", "        ", "kwargs", "=", "dict", "(", "expansion", "=", "expansion", ",", "kernel_size", "=", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "se_ratio", "=", "se_ratio", ",", "hard_act", "=", "hard_act", ")", "\n", "first_conv", "=", "MBConv", "(", "in_channels", ",", "out_channels", ",", "**", "kwargs", ")", "\n", "kwargs", "[", "'stride'", "]", "=", "1", "\n", "super", "(", "MBConvBlock", ",", "self", ")", ".", "__init__", "(", "first_conv", ",", "\n", "*", "[", "MBConv", "(", "out_channels", ",", "out_channels", ",", "**", "kwargs", ")", "for", "_", "in", "range", "(", "num", "-", "1", ")", "]", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.efficientnet.EfficientNet.__init__": [[107, 190], ["torch.Module.__init__", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "efficientnet.init_model", "max", "int", "int", "efficientnet.EfficientNet.__init__.config"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.densenet.init_model"], ["    ", "def", "__init__", "(", "self", ",", "width_coeff", "=", "1", ",", "depth_coeff", "=", "1", ",", "resolution", "=", "224", ",", "se_ratio", "=", "0.25", ",", "regime", "=", "'cosine'", ",", "num_classes", "=", "1000", ",", "\n", "scale_lr", "=", "1", ",", "dropout_rate", "=", "0.2", ",", "drop_connect_rate", "=", "0.2", ",", "num_epochs", "=", "200", ",", "hard_act", "=", "False", ")", ":", "\n", "        ", "super", "(", "EfficientNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "def", "channels", "(", "base_channels", ",", "coeff", "=", "width_coeff", ",", "divisor", "=", "8", ",", "min_channels", "=", "None", ")", ":", "\n", "            ", "if", "coeff", "==", "1", ":", "\n", "                ", "return", "base_channels", "\n", "", "min_channels", "=", "min_channels", "or", "divisor", "\n", "channels", "=", "base_channels", "*", "coeff", "\n", "channels", "=", "max", "(", "min_channels", ",", "\n", "int", "(", "base_channels", "+", "divisor", "/", "2", ")", "//", "divisor", "*", "divisor", ")", "\n", "if", "channels", "<", "0.9", "*", "base_channels", ":", "\n", "                ", "channels", "+=", "divisor", "\n", "", "return", "int", "(", "channels", ")", "\n", "\n", "", "def", "repeats", "(", "repeats", ",", "coeff", "=", "depth_coeff", ")", ":", "\n", "            ", "return", "int", "(", "math", ".", "ceil", "(", "coeff", "*", "repeats", ")", ")", "\n", "\n", "", "def", "config", "(", "out_channels", ",", "num", ",", "expansion", "=", "1", ",", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "padding", "=", "None", ",", "se_ratio", "=", "se_ratio", ",", "hard_act", "=", "hard_act", ")", ":", "\n", "            ", "padding", "=", "padding", "or", "int", "(", "(", "kernel_size", "-", "1", ")", "//", "2", ")", "\n", "return", "{", "'out_channels'", ":", "channels", "(", "out_channels", ")", ",", "'num'", ":", "repeats", "(", "num", ")", ",", "\n", "'expansion'", ":", "expansion", ",", "'kernel_size'", ":", "kernel_size", ",", "'stride'", ":", "stride", ",", "\n", "'padding'", ":", "padding", ",", "'se_ratio'", ":", "se_ratio", ",", "'hard_act'", ":", "hard_act", "}", "\n", "\n", "", "stages", "=", "[", "\n", "config", "(", "16", ",", "num", "=", "1", ",", "expansion", "=", "1", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", ",", "\n", "config", "(", "24", ",", "num", "=", "2", ",", "expansion", "=", "6", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", ",", "\n", "config", "(", "40", ",", "num", "=", "2", ",", "expansion", "=", "6", ",", "kernel_size", "=", "5", ",", "stride", "=", "2", ")", ",", "\n", "config", "(", "80", ",", "num", "=", "3", ",", "expansion", "=", "6", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", ",", "\n", "config", "(", "112", ",", "num", "=", "3", ",", "expansion", "=", "6", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ")", ",", "\n", "config", "(", "192", ",", "num", "=", "4", ",", "expansion", "=", "6", ",", "kernel_size", "=", "5", ",", "stride", "=", "2", ")", ",", "\n", "config", "(", "320", ",", "num", "=", "1", ",", "expansion", "=", "6", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ")", ",", "\n", "]", "\n", "\n", "layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "stages", ")", ")", ":", "\n", "            ", "in_channel", "=", "channels", "(", "32", ")", "if", "i", "==", "0", "else", "stages", "[", "i", "-", "1", "]", "[", "'out_channels'", "]", "\n", "layers", ".", "append", "(", "MBConvBlock", "(", "in_channel", ",", "**", "stages", "[", "i", "]", ")", ")", "\n", "\n", "", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "\n", "ConvBNAct", "(", "3", ",", "channels", "(", "32", ")", ",", "3", ",", "2", ",", "1", ",", "hard_act", "=", "hard_act", ")", ",", "\n", "*", "layers", ",", "\n", "ConvBNAct", "(", "channels", "(", "320", ")", ",", "channels", "(", "1280", ")", ",", "1", ")", ",", "\n", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", ",", "\n", "nn", ".", "Dropout", "(", "dropout_rate", ",", "True", ")", "\n", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "channels", "(", "1280", ")", ",", "num_classes", ")", "\n", "\n", "init_model", "(", "self", ")", "\n", "\n", "def", "increase_drop_connect", "(", "epoch", ")", ":", "\n", "            ", "return", "lambda", ":", "modify_drop_connect_rate", "(", "self", ",", "min", "(", "drop_connect_rate", ",", "drop_connect_rate", "*", "epoch", "/", "float", "(", "num_epochs", ")", ")", ")", "\n", "\n", "", "if", "regime", "==", "'paper'", ":", "\n", "            ", "def", "config_by_epoch", "(", "epoch", ")", ":", "\n", "                ", "return", "{", "'lr'", ":", "scale_lr", "*", "0.016", "*", "(", "0.97", "**", "round", "(", "epoch", "/", "2.4", ")", ")", ",", "\n", "'execute'", ":", "increase_drop_connect", "(", "epoch", ")", "}", "\n", "\n", "", "\"\"\"RMSProp optimizer with\n            decay 0.9 and momentum 0.9;\n            weight decay 1e-5; initial learning rate 0.256 that decays\n            by 0.97 every 2.4 epochs\"\"\"", "\n", "self", ".", "regime", "=", "[", "{", "'optimizer'", ":", "'RMSprop'", ",", "'alpha'", ":", "0.9", ",", "'momentum'", ":", "0.9", ",", "'lr'", ":", "scale_lr", "*", "0.016", ",", "\n", "'regularizer'", ":", "weight_decay_config", "(", "1e-5", ")", ",", "\n", "'epoch_lambda'", ":", "config_by_epoch", "}", "]", "\n", "\n", "", "elif", "regime", "==", "'cosine'", ":", "\n", "            ", "def", "cosine_anneal_lr", "(", "epoch", ",", "base_lr", "=", "0.025", ",", "T_max", "=", "num_epochs", ",", "eta_min", "=", "1e-4", ")", ":", "\n", "                ", "return", "eta_min", "+", "(", "base_lr", "-", "eta_min", ")", "*", "(", "1", "+", "math", ".", "cos", "(", "math", ".", "pi", "*", "epoch", "/", "T_max", ")", ")", "/", "2", "\n", "\n", "", "def", "config_by_epoch", "(", "epoch", ")", ":", "\n", "                ", "return", "{", "'lr'", ":", "cosine_anneal_lr", "(", "epoch", ",", "base_lr", "=", "scale_lr", "*", "0.1", ",", "T_max", "=", "num_epochs", ")", ",", "\n", "'execute'", ":", "increase_drop_connect", "(", "epoch", ")", "}", "\n", "", "self", ".", "regime", "=", "[", "{", "'optimizer'", ":", "'SGD'", ",", "'momentum'", ":", "0.9", ",", "\n", "'regularizer'", ":", "weight_decay_config", "(", "1e-5", ")", ",", "\n", "'epoch_lambda'", ":", "config_by_epoch", "}", "]", "\n", "\n", "", "self", ".", "data_regime", "=", "[", "{", "'input_size'", ":", "resolution", ",", "'autoaugment'", ":", "True", "}", "]", "\n", "self", ".", "data_eval_regime", "=", "[", "{", "'input_size'", ":", "resolution", ",", "\n", "'scale_size'", ":", "int", "(", "resolution", "*", "8", "/", "7", ")", "}", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.efficientnet.EfficientNet.forward": [[191, 195], ["efficientnet.EfficientNet.features", "efficientnet.EfficientNet.classifier", "efficientnet.EfficientNet.flatten"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.ResNet.features"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "x", "=", "self", ".", "classifier", "(", "x", ".", "flatten", "(", "1", ",", "-", "1", ")", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.efficientnet.init_model": [[12, 20], ["model.modules", "isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.modules"], ["def", "init_model", "(", "model", ")", ":", "\n", "    ", "for", "m", "in", "model", ".", "modules", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "            ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "            ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.efficientnet.modify_drop_connect_rate": [[22, 29], ["model.modules", "hasattr", "logging.debug"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.modules"], ["", "", "", "def", "modify_drop_connect_rate", "(", "model", ",", "value", ",", "log", "=", "True", ")", ":", "\n", "    ", "for", "m", "in", "model", ".", "modules", "(", ")", ":", "\n", "        ", "if", "hasattr", "(", "m", ",", "'drop_prob'", ")", ":", "\n", "            ", "if", "log", "and", "m", ".", "drop_prob", "!=", "value", ":", "\n", "                ", "logging", ".", "debug", "(", "'Modified drop-path rate from %s to %s'", "%", "\n", "(", "m", ".", "drop_prob", ",", "value", ")", ")", "\n", "", "m", ".", "drop_prob", "=", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.efficientnet.weight_decay_config": [[31, 42], ["isinstance", "isinstance", "n.endswith"], "function", ["None"], ["", "", "", "def", "weight_decay_config", "(", "value", "=", "1e-4", ",", "log", "=", "False", ")", ":", "\n", "    ", "def", "regularize_layer", "(", "m", ")", ":", "\n", "        ", "non_depthwise_conv", "=", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", "and", "m", ".", "groups", "!=", "m", ".", "in_channels", "\n", "return", "not", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", "\n", "\n", "", "return", "{", "'name'", ":", "'WeightDecay'", ",", "\n", "'value'", ":", "value", ",", "\n", "'log'", ":", "log", ",", "\n", "'filter'", ":", "{", "'parameter_name'", ":", "lambda", "n", ":", "not", "n", ".", "endswith", "(", "'bias'", ")", ",", "\n", "'module'", ":", "regularize_layer", "}", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.efficientnet.drop_connect": [[57, 64], ["x.mul.new().bernoulli_().float", "x.new().bernoulli_().float.div_", "x.mul.mul", "x.mul.new().bernoulli_", "x.mul.new", "x.mul.size"], "function", ["None"], ["", "", "def", "drop_connect", "(", "x", ",", "drop_prob", ")", ":", "\n", "    ", "if", "drop_prob", ">", "0.", ":", "\n", "        ", "keep_prob", "=", "1.", "-", "drop_prob", "\n", "mask", "=", "x", ".", "new", "(", "x", ".", "size", "(", "0", ")", ",", "1", ",", "1", ",", "1", ")", ".", "bernoulli_", "(", "keep_prob", ")", ".", "float", "(", ")", "\n", "mask", ".", "div_", "(", "keep_prob", ")", "\n", "x", "=", "x", ".", "mul", "(", "mask", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.efficientnet.efficientnet": [[197, 217], ["config.pop", "config.pop", "efficientnet.EfficientNet", "params_dict.keys"], "function", ["None"], ["", "", "def", "efficientnet", "(", "**", "config", ")", ":", "\n", "    ", "dataset", "=", "config", ".", "pop", "(", "'dataset'", ",", "'imagenet'", ")", "\n", "assert", "dataset", "==", "'imagenet'", "\n", "\n", "scale", "=", "config", ".", "pop", "(", "'scale'", ",", "'b0'", ")", "\n", "\n", "params_dict", "=", "{", "\n", "# (width_coefficient, depth_coefficient, resolution, dropout_rate)", "\n", "'b0'", ":", "(", "1.0", ",", "1.0", ",", "224", ",", "0.2", ")", ",", "\n", "'b1'", ":", "(", "1.0", ",", "1.1", ",", "240", ",", "0.2", ")", ",", "\n", "'b2'", ":", "(", "1.1", ",", "1.2", ",", "260", ",", "0.3", ")", ",", "\n", "'b3'", ":", "(", "1.2", ",", "1.4", ",", "300", ",", "0.3", ")", ",", "\n", "'b4'", ":", "(", "1.4", ",", "1.8", ",", "380", ",", "0.4", ")", ",", "\n", "'b5'", ":", "(", "1.6", ",", "2.2", ",", "456", ",", "0.4", ")", ",", "\n", "'b6'", ":", "(", "1.8", ",", "2.6", ",", "528", ",", "0.5", ")", ",", "\n", "'b7'", ":", "(", "2.0", ",", "3.1", ",", "600", ",", "0.5", ")", ",", "\n", "}", "\n", "assert", "scale", "in", "params_dict", ".", "keys", "(", ")", "\n", "config", "[", "'width_coeff'", "]", ",", "config", "[", "'depth_coeff'", "]", ",", "config", "[", "'resolution'", "]", ",", "config", "[", "'dropout_rate'", "]", "=", "params_dict", "[", "scale", "]", "\n", "return", "EfficientNet", "(", "**", "config", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.ExpandedConv2d.__init__": [[41, 66], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU6", "torch.ReLU6", "torch.ReLU6", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU6", "torch.ReLU6", "torch.ReLU6"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "expansion", "=", "1", ",", "kernel_size", "=", "3", ",", "\n", "stride", "=", "1", ",", "padding", "=", "1", ",", "residual_block", "=", "None", ")", ":", "\n", "        ", "expanded", "=", "in_channels", "*", "expansion", "\n", "super", "(", "ExpandedConv2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "add_res", "=", "stride", "==", "1", "and", "in_channels", "==", "out_channels", "\n", "self", ".", "residual_block", "=", "residual_block", "\n", "if", "expanded", "==", "in_channels", ":", "\n", "            ", "block", "=", "[", "]", "\n", "", "else", ":", "\n", "            ", "block", "=", "[", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "expanded", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "expanded", ")", ",", "\n", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", ",", "\n", "]", "\n", "\n", "", "block", "+=", "[", "\n", "nn", ".", "Conv2d", "(", "expanded", ",", "expanded", ",", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "groups", "=", "expanded", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "expanded", ")", ",", "\n", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "expanded", ",", "out_channels", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", "\n", "]", "\n", "\n", "self", ".", "block", "=", "nn", ".", "Sequential", "(", "*", "block", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.ExpandedConv2d.forward": [[67, 74], ["mobilenet_v2.ExpandedConv2d.block", "mobilenet_v2.ExpandedConv2d.residual_block"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "self", ".", "block", "(", "x", ")", "\n", "if", "self", ".", "add_res", ":", "\n", "            ", "if", "self", ".", "residual_block", "is", "not", "None", ":", "\n", "                ", "x", "=", "self", ".", "residual_block", "(", "x", ")", "\n", "", "out", "+=", "x", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.MobileNet_v2.__init__": [[87, 149], ["torch.Module.__init__", "mobilenet_v2.nearby_int", "torch.Sequential", "torch.Sequential", "torch.Sequential", "mobilenet_v2.MobileNet_v2.features.add_module", "enumerate", "mobilenet_v2.nearby_int", "mobilenet_v2.MobileNet_v2.features.add_module", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "mobilenet_v2.init_model", "dict", "dict", "dict", "dict", "dict", "dict", "dict", "dict", "dict", "dict", "dict", "dict", "dict", "dict", "dict", "dict", "dict", "mobilenet_v2.conv", "mobilenet_v2.MobileNet_v2.features.add_module", "mobilenet_v2.conv", "torch.Dropout", "torch.Dropout", "torch.Dropout", "torch.Linear", "torch.Linear", "torch.Linear", "mobilenet_v2.ExpandedConv2d", "mobilenet_v2.weight_decay_config", "mobilenet_v2.nearby_int", "mobilenet_v2.nearby_int", "mobilenet_v2.nearby_int", "mobilenet_v2.nearby_int", "mobilenet_v2.nearby_int", "mobilenet_v2.nearby_int", "mobilenet_v2.nearby_int", "mobilenet_v2.nearby_int", "mobilenet_v2.nearby_int", "mobilenet_v2.nearby_int", "mobilenet_v2.nearby_int", "mobilenet_v2.nearby_int", "mobilenet_v2.nearby_int", "mobilenet_v2.nearby_int", "mobilenet_v2.nearby_int", "mobilenet_v2.nearby_int", "mobilenet_v2.nearby_int", "str"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.densenet.init_model", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.conv", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.conv", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.densenet.weight_decay_config", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int"], ["    ", "def", "__init__", "(", "self", ",", "width", "=", "1.", ",", "regime", "=", "None", ",", "num_classes", "=", "1000", ",", "scale_lr", "=", "1", ")", ":", "\n", "        ", "super", "(", "MobileNet_v2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "in_channels", "=", "nearby_int", "(", "width", "*", "32", ")", "\n", "\n", "layers_config", "=", "[", "\n", "dict", "(", "expansion", "=", "1", ",", "stride", "=", "1", ",", "out_channels", "=", "nearby_int", "(", "width", "*", "16", ")", ")", ",", "\n", "dict", "(", "expansion", "=", "6", ",", "stride", "=", "2", ",", "out_channels", "=", "nearby_int", "(", "width", "*", "24", ")", ")", ",", "\n", "dict", "(", "expansion", "=", "6", ",", "stride", "=", "1", ",", "out_channels", "=", "nearby_int", "(", "width", "*", "24", ")", ")", ",", "\n", "dict", "(", "expansion", "=", "6", ",", "stride", "=", "2", ",", "out_channels", "=", "nearby_int", "(", "width", "*", "32", ")", ")", ",", "\n", "dict", "(", "expansion", "=", "6", ",", "stride", "=", "1", ",", "out_channels", "=", "nearby_int", "(", "width", "*", "32", ")", ")", ",", "\n", "dict", "(", "expansion", "=", "6", ",", "stride", "=", "1", ",", "out_channels", "=", "nearby_int", "(", "width", "*", "32", ")", ")", ",", "\n", "dict", "(", "expansion", "=", "6", ",", "stride", "=", "2", ",", "out_channels", "=", "nearby_int", "(", "width", "*", "64", ")", ")", ",", "\n", "dict", "(", "expansion", "=", "6", ",", "stride", "=", "1", ",", "out_channels", "=", "nearby_int", "(", "width", "*", "64", ")", ")", ",", "\n", "dict", "(", "expansion", "=", "6", ",", "stride", "=", "1", ",", "out_channels", "=", "nearby_int", "(", "width", "*", "64", ")", ")", ",", "\n", "dict", "(", "expansion", "=", "6", ",", "stride", "=", "1", ",", "out_channels", "=", "nearby_int", "(", "width", "*", "64", ")", ")", ",", "\n", "dict", "(", "expansion", "=", "6", ",", "stride", "=", "1", ",", "out_channels", "=", "nearby_int", "(", "width", "*", "96", ")", ")", ",", "\n", "dict", "(", "expansion", "=", "6", ",", "stride", "=", "1", ",", "out_channels", "=", "nearby_int", "(", "width", "*", "96", ")", ")", ",", "\n", "dict", "(", "expansion", "=", "6", ",", "stride", "=", "1", ",", "out_channels", "=", "nearby_int", "(", "width", "*", "96", ")", ")", ",", "\n", "dict", "(", "expansion", "=", "6", ",", "stride", "=", "2", ",", "out_channels", "=", "nearby_int", "(", "width", "*", "160", ")", ")", ",", "\n", "dict", "(", "expansion", "=", "6", ",", "stride", "=", "1", ",", "out_channels", "=", "nearby_int", "(", "width", "*", "160", ")", ")", ",", "\n", "dict", "(", "expansion", "=", "6", ",", "stride", "=", "1", ",", "out_channels", "=", "nearby_int", "(", "width", "*", "160", ")", ")", ",", "\n", "dict", "(", "expansion", "=", "6", ",", "stride", "=", "1", ",", "out_channels", "=", "nearby_int", "(", "width", "*", "320", ")", ")", ",", "\n", "]", "\n", "\n", "self", ".", "features", "=", "nn", ".", "Sequential", "(", ")", "\n", "self", ".", "features", ".", "add_module", "(", "'conv0'", ",", "conv", "(", "3", ",", "in_channels", ",", "\n", "kernel", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ")", "\n", "\n", "for", "i", ",", "layer", "in", "enumerate", "(", "layers_config", ")", ":", "\n", "            ", "layer", "[", "'in_channels'", "]", "=", "in_channels", "\n", "in_channels", "=", "layer", "[", "'out_channels'", "]", "\n", "self", ".", "features", ".", "add_module", "(", "\n", "'bottleneck'", "+", "str", "(", "i", ")", ",", "ExpandedConv2d", "(", "**", "layer", ")", ")", "\n", "\n", "", "out_channels", "=", "nearby_int", "(", "width", "*", "1280", ")", "\n", "self", ".", "features", ".", "add_module", "(", "'conv1'", ",", "conv", "(", "in_channels", ",", "out_channels", ",", "\n", "kernel", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", ")", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Dropout", "(", "0.2", ",", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "out_channels", ",", "num_classes", ")", "\n", ")", "\n", "init_model", "(", "self", ")", "\n", "\n", "if", "regime", "==", "'small'", ":", "\n", "            ", "scale_lr", "*=", "4", "\n", "self", ".", "data_regime", "=", "[", "\n", "{", "'epoch'", ":", "0", ",", "'input_size'", ":", "128", ",", "'batch_size'", ":", "512", "}", ",", "\n", "{", "'epoch'", ":", "80", ",", "'input_size'", ":", "224", ",", "'batch_size'", ":", "128", "}", ",", "\n", "]", "\n", "self", ".", "data_eval_regime", "=", "[", "\n", "{", "'epoch'", ":", "0", ",", "'input_size'", ":", "128", ",", "\n", "'scale_size'", ":", "160", ",", "'batch_size'", ":", "1024", "}", ",", "\n", "{", "'epoch'", ":", "80", ",", "'input_size'", ":", "224", ",", "'batch_size'", ":", "512", "}", ",", "\n", "]", "\n", "\n", "", "self", ".", "regime", "=", "[", "\n", "{", "'epoch'", ":", "0", ",", "'optimizer'", ":", "'SGD'", ",", "'momentum'", ":", "0.9", ",", "'lr'", ":", "scale_lr", "*", "1e-1", ",", "\n", "'regularizer'", ":", "weight_decay_config", "(", "1e-4", ")", "}", ",", "\n", "{", "'epoch'", ":", "30", ",", "'lr'", ":", "scale_lr", "*", "1e-2", "}", ",", "\n", "{", "'epoch'", ":", "60", ",", "'lr'", ":", "scale_lr", "*", "1e-3", "}", ",", "\n", "{", "'epoch'", ":", "80", ",", "'lr'", ":", "scale_lr", "*", "1e-4", "}", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.MobileNet_v2.forward": [[151, 157], ["mobilenet_v2.MobileNet_v2.features", "mobilenet_v2.MobileNet_v2.avg_pool", "mobilenet_v2.MobileNet_v2.view", "mobilenet_v2.MobileNet_v2.classifier", "mobilenet_v2.MobileNet_v2.size"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.ResNet.features"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "x", "=", "self", ".", "avg_pool", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "classifier", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.nearby_int": [[11, 13], ["int", "round"], "function", ["None"], ["def", "nearby_int", "(", "n", ")", ":", "\n", "    ", "return", "int", "(", "round", "(", "n", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.init_model": [[15, 23], ["model.modules", "isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.modules"], ["", "def", "init_model", "(", "model", ")", ":", "\n", "    ", "for", "m", "in", "model", ".", "modules", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "            ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "            ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.weight_decay_config": [[25, 36], ["isinstance", "isinstance", "n.endswith"], "function", ["None"], ["", "", "", "def", "weight_decay_config", "(", "value", "=", "1e-4", ",", "log", "=", "False", ")", ":", "\n", "    ", "def", "regularize_layer", "(", "m", ")", ":", "\n", "        ", "non_depthwise_conv", "=", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", "and", "m", ".", "groups", "!=", "m", ".", "in_channels", "\n", "return", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", "or", "non_depthwise_conv", "\n", "\n", "", "return", "{", "'name'", ":", "'WeightDecay'", ",", "\n", "'value'", ":", "value", ",", "\n", "'log'", ":", "log", ",", "\n", "'filter'", ":", "{", "'parameter_name'", ":", "lambda", "n", ":", "not", "n", ".", "endswith", "(", "'bias'", ")", ",", "\n", "'module'", ":", "regularize_layer", "}", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.conv": [[76, 82], ["torch.Sequential", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU6"], "function", ["None"], ["", "", "def", "conv", "(", "in_channels", ",", "out_channels", ",", "kernel", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ":", "\n", "    ", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "kernel", ",", "\n", "stride", ",", "padding", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ",", "\n", "nn", ".", "ReLU6", "(", "inplace", "=", "True", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.mobilenet_v2.mobilenet_v2": [[159, 166], ["config.pop", "mobilenet_v2.MobileNet_v2"], "function", ["None"], ["", "", "def", "mobilenet_v2", "(", "**", "config", ")", ":", "\n", "    ", "r\"\"\"MobileNet v2 model architecture from the `\"MobileNetV2: Inverted Residuals and Linear Bottlenecks\"\n    <https://arxiv.org/abs/1801.04381>`_ paper.\n    \"\"\"", "\n", "dataset", "=", "config", ".", "pop", "(", "'dataset'", ",", "'imagenet'", ")", "\n", "assert", "dataset", "==", "'imagenet'", "\n", "return", "MobileNet_v2", "(", "**", "config", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.evolved.MultiOutputLoss.__init__": [[53, 57], ["torch.Module.__init__", "loss"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "output_weights", ",", "loss", "=", "CrossEntropyLoss", ",", "**", "loss_kwargs", ")", ":", "\n", "        ", "super", "(", "MultiOutputLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "loss", "=", "loss", "(", "**", "loss_kwargs", ")", "\n", "self", ".", "output_weights", "=", "output_weights", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.evolved.MultiOutputLoss.forward": [[58, 60], ["evolved.multi_output_loss"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.models.evolved.multi_output_loss"], ["", "def", "forward", "(", "self", ",", "outputs", ",", "target", ")", ":", "\n", "        ", "return", "multi_output_loss", "(", "outputs", ",", "target", ",", "self", ".", "output_weights", ",", "loss_fn", "=", "self", ".", "loss", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.evolved.AuxiliaryHeadCIFAR.__init__": [[64, 79], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channels", ",", "num_classes", ")", ":", "\n", "        ", "\"\"\"assuming input size 8x8\"\"\"", "\n", "super", "(", "AuxiliaryHeadCIFAR", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "# image size = 2 x 2", "\n", "nn", ".", "AvgPool2d", "(", "5", ",", "stride", "=", "3", ",", "padding", "=", "0", ",", "count_include_pad", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "channels", ",", "128", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "128", ",", "768", ",", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "768", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "768", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.evolved.AuxiliaryHeadCIFAR.forward": [[80, 84], ["evolved.AuxiliaryHeadCIFAR.features", "evolved.AuxiliaryHeadCIFAR.classifier", "evolved.AuxiliaryHeadCIFAR.view", "evolved.AuxiliaryHeadCIFAR.size"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.ResNet.features"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "x", "=", "self", ".", "classifier", "(", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.evolved.AuxiliaryHeadImageNet.__init__": [[88, 102], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channels", ",", "num_classes", ")", ":", "\n", "        ", "\"\"\"assuming input size 14x14\"\"\"", "\n", "super", "(", "AuxiliaryHeadImageNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "AvgPool2d", "(", "5", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "count_include_pad", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "channels", ",", "128", ",", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "128", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "128", ",", "768", ",", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "768", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "768", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.evolved.AuxiliaryHeadImageNet.forward": [[103, 107], ["evolved.AuxiliaryHeadImageNet.features", "evolved.AuxiliaryHeadImageNet.classifier", "evolved.AuxiliaryHeadImageNet.view", "evolved.AuxiliaryHeadImageNet.size"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.ResNet.features"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "x", "=", "self", ".", "classifier", "(", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.evolved.EvolvedNetworkCIFAR.__init__": [[110, 159], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.ModuleList", "torch.ModuleList", "range", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Linear", "torch.Linear", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "cell_fn", "evolved.AuxiliaryHeadCIFAR", "evolved.MultiOutputLoss", "evolved.cosine_anneal_lr", "evolved.weight_decay_config", "evolved.modify_drop_path_rate", "float", "float"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.evolved.cosine_anneal_lr", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.densenet.weight_decay_config", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.evolved.modify_drop_path_rate"], ["    ", "def", "__init__", "(", "self", ",", "init_channels", "=", "36", ",", "num_classes", "=", "10", ",", "layers", "=", "20", ",", "auxiliary", "=", "True", ",", "aux_weight", "=", "0.4", ",", "\n", "drop_path", "=", "0.2", ",", "num_epochs", "=", "600", ",", "init_lr", "=", "0.025", ",", "cell_fn", "=", "DARTSCell", ")", ":", "\n", "        ", "super", "(", "EvolvedNetworkCIFAR", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_layers", "=", "layers", "\n", "self", ".", "_auxiliary", "=", "auxiliary", "\n", "self", ".", "drop_path", "=", "drop_path", "\n", "\n", "stem_multiplier", "=", "3", "\n", "channels", "=", "stem_multiplier", "*", "init_channels", "\n", "self", ".", "stem", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "channels", ",", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "channels", ")", "\n", ")", "\n", "\n", "prev2_channels", ",", "prev_channels", ",", "channels", "=", "channels", ",", "channels", ",", "init_channels", "\n", "self", ".", "cells", "=", "nn", ".", "ModuleList", "(", ")", "\n", "reduction_prev", "=", "False", "\n", "for", "i", "in", "range", "(", "layers", ")", ":", "\n", "            ", "if", "i", "in", "[", "layers", "//", "3", ",", "2", "*", "layers", "//", "3", "]", ":", "\n", "                ", "channels", "*=", "2", "\n", "reduction", "=", "True", "\n", "", "else", ":", "\n", "                ", "reduction", "=", "False", "\n", "", "cell", "=", "cell_fn", "(", "prev2_channels", ",", "prev_channels", ",", "\n", "channels", ",", "reduction", ",", "reduction_prev", ")", "\n", "reduction_prev", "=", "reduction", "\n", "self", ".", "cells", "+=", "[", "cell", "]", "\n", "prev2_channels", ",", "prev_channels", "=", "prev_channels", ",", "cell", ".", "multiplier", "*", "channels", "\n", "if", "i", "==", "2", "*", "layers", "//", "3", ":", "\n", "                ", "aux_channels", "=", "prev_channels", "\n", "\n", "", "", "if", "auxiliary", ":", "\n", "            ", "self", ".", "auxiliary_head", "=", "AuxiliaryHeadCIFAR", "(", "\n", "aux_channels", ",", "num_classes", ")", "\n", "\n", "def", "loss_fn", "(", "*", "kargs", ",", "**", "kwargs", ")", ":", "\n", "                ", "return", "MultiOutputLoss", "(", "[", "1.", ",", "aux_weight", "]", ",", "*", "kargs", ",", "**", "kwargs", ")", "\n", "", "self", ".", "criterion", "=", "loss_fn", "\n", "\n", "", "self", ".", "global_pooling", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "prev_channels", ",", "num_classes", ")", "\n", "\n", "def", "config_by_epoch", "(", "epoch", ")", ":", "\n", "            ", "return", "{", "'lr'", ":", "cosine_anneal_lr", "(", "epoch", ",", "base_lr", "=", "init_lr", ",", "T_max", "=", "float", "(", "num_epochs", ")", ")", ",", "\n", "'execute'", ":", "lambda", ":", "modify_drop_path_rate", "(", "self", ",", "drop_path", "*", "epoch", "/", "float", "(", "num_epochs", ")", ")", "}", "\n", "", "self", ".", "regime", "=", "[", "{", "'optimizer'", ":", "'SGD'", ",", "'momentum'", ":", "0.9", ",", "\n", "'regularizer'", ":", "weight_decay_config", "(", "3e-4", ")", ",", "\n", "'epoch_lambda'", ":", "config_by_epoch", "}", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.evolved.EvolvedNetworkCIFAR.forward": [[160, 174], ["evolved.EvolvedNetworkCIFAR.stem", "enumerate", "evolved.EvolvedNetworkCIFAR.global_pooling", "evolved.EvolvedNetworkCIFAR.classifier", "evolved.EvolvedNetworkCIFAR.view", "cell", "evolved.EvolvedNetworkCIFAR.size", "evolved.EvolvedNetworkCIFAR.auxiliary_head"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "logits_aux", "=", "None", "\n", "s0", "=", "s1", "=", "self", ".", "stem", "(", "input", ")", "\n", "for", "i", ",", "cell", "in", "enumerate", "(", "self", ".", "cells", ")", ":", "\n", "            ", "s0", ",", "s1", "=", "s1", ",", "cell", "(", "s0", ",", "s1", ",", "self", ".", "drop_path", ")", "\n", "if", "i", "==", "2", "*", "self", ".", "_layers", "//", "3", ":", "\n", "                ", "if", "self", ".", "_auxiliary", "and", "self", ".", "training", ":", "\n", "                    ", "logits_aux", "=", "self", ".", "auxiliary_head", "(", "s1", ")", "\n", "", "", "", "out", "=", "self", ".", "global_pooling", "(", "s1", ")", "\n", "logits", "=", "self", ".", "classifier", "(", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", "\n", "if", "self", ".", "_auxiliary", ":", "\n", "            ", "return", "logits", ",", "logits_aux", "\n", "", "else", ":", "\n", "            ", "return", "logits", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.evolved.EvolvedNetworkImageNet.__init__": [[178, 229], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.ModuleList", "torch.ModuleList", "range", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Linear", "torch.Linear", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "cell_fn", "evolved.AuxiliaryHeadImageNet", "evolved.MultiOutputLoss"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "init_channels", "=", "36", ",", "num_classes", "=", "1000", ",", "layers", "=", "20", ",", "auxiliary", "=", "True", ",", "aux_weight", "=", "0.4", ",", "drop_path", "=", "0.2", ",", "cell_fn", "=", "DARTSCell", ")", ":", "\n", "        ", "super", "(", "EvolvedNetworkImageNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_layers", "=", "layers", "\n", "self", ".", "_auxiliary", "=", "auxiliary", "\n", "self", ".", "drop_path", "=", "drop_path", "\n", "\n", "self", ".", "stem0", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "init_channels", "//", "2", ",", "kernel_size", "=", "3", ",", "\n", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "init_channels", "//", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "init_channels", "//", "2", ",", "init_channels", ",", "\n", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "init_channels", ")", ",", "\n", ")", "\n", "\n", "self", ".", "stem1", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "init_channels", ",", "init_channels", ",", "3", ",", "\n", "stride", "=", "2", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "init_channels", ")", ",", "\n", ")", "\n", "\n", "prev2_channels", ",", "prev_channels", ",", "channels", "=", "init_channels", ",", "init_channels", ",", "init_channels", "\n", "\n", "self", ".", "cells", "=", "nn", ".", "ModuleList", "(", ")", "\n", "reduction_prev", "=", "True", "\n", "for", "i", "in", "range", "(", "layers", ")", ":", "\n", "            ", "if", "i", "in", "[", "layers", "//", "3", ",", "2", "*", "layers", "//", "3", "]", ":", "\n", "                ", "channels", "*=", "2", "\n", "reduction", "=", "True", "\n", "", "else", ":", "\n", "                ", "reduction", "=", "False", "\n", "", "cell", "=", "cell_fn", "(", "prev2_channels", ",", "prev_channels", ",", "\n", "channels", ",", "reduction", ",", "reduction_prev", ")", "\n", "reduction_prev", "=", "reduction", "\n", "self", ".", "cells", "+=", "[", "cell", "]", "\n", "prev2_channels", ",", "prev_channels", "=", "prev_channels", ",", "cell", ".", "multiplier", "*", "channels", "\n", "if", "i", "==", "2", "*", "layers", "//", "3", ":", "\n", "                ", "aux_channels", "=", "prev_channels", "\n", "\n", "", "", "if", "auxiliary", ":", "\n", "            ", "self", ".", "auxiliary_head", "=", "AuxiliaryHeadImageNet", "(", "\n", "aux_channels", ",", "num_classes", ")", "\n", "\n", "def", "loss_fn", "(", "*", "kargs", ",", "**", "kwargs", ")", ":", "\n", "                ", "return", "MultiOutputLoss", "(", "[", "1.", ",", "aux_weight", "]", ",", "*", "kargs", ",", "**", "kwargs", ")", "\n", "", "self", ".", "criterion", "=", "loss_fn", "\n", "", "self", ".", "global_pooling", "=", "nn", ".", "AvgPool2d", "(", "7", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "prev_channels", ",", "num_classes", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.evolved.EvolvedNetworkImageNet.forward": [[230, 245], ["evolved.EvolvedNetworkImageNet.stem0", "evolved.EvolvedNetworkImageNet.stem1", "enumerate", "evolved.EvolvedNetworkImageNet.global_pooling", "evolved.EvolvedNetworkImageNet.classifier", "evolved.EvolvedNetworkImageNet.view", "cell", "evolved.EvolvedNetworkImageNet.size", "evolved.EvolvedNetworkImageNet.auxiliary_head"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "logits_aux", "=", "None", "\n", "s0", "=", "self", ".", "stem0", "(", "input", ")", "\n", "s1", "=", "self", ".", "stem1", "(", "s0", ")", "\n", "for", "i", ",", "cell", "in", "enumerate", "(", "self", ".", "cells", ")", ":", "\n", "            ", "s0", ",", "s1", "=", "s1", ",", "cell", "(", "s0", ",", "s1", ",", "self", ".", "drop_path", ")", "\n", "if", "i", "==", "2", "*", "self", ".", "_layers", "//", "3", ":", "\n", "                ", "if", "self", ".", "_auxiliary", "and", "self", ".", "training", ":", "\n", "                    ", "logits_aux", "=", "self", ".", "auxiliary_head", "(", "s1", ")", "\n", "", "", "", "out", "=", "self", ".", "global_pooling", "(", "s1", ")", "\n", "logits", "=", "self", ".", "classifier", "(", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", "\n", "if", "self", ".", "_auxiliary", ":", "\n", "            ", "return", "logits", ",", "logits_aux", "\n", "", "else", ":", "\n", "            ", "return", "logits", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.evolved.weight_decay_config": [[16, 22], ["n.endswith", "isinstance"], "function", ["None"], ["def", "weight_decay_config", "(", "value", "=", "3e-4", ",", "log", "=", "False", ")", ":", "\n", "    ", "return", "{", "'name'", ":", "'WeightDecay'", ",", "\n", "'value'", ":", "value", ",", "\n", "'log'", ":", "log", ",", "\n", "'filter'", ":", "{", "'parameter_name'", ":", "lambda", "n", ":", "not", "n", ".", "endswith", "(", "'bias'", ")", ",", "\n", "'module'", ":", "lambda", "m", ":", "not", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", "}", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.evolved.cosine_anneal_lr": [[25, 28], ["math.cos"], "function", ["None"], ["", "def", "cosine_anneal_lr", "(", "epoch", ",", "base_lr", "=", "0.025", ",", "T_max", "=", "600.", ",", "eta_min", "=", "0.", ")", ":", "\n", "    ", "return", "eta_min", "+", "(", "base_lr", "-", "eta_min", ")", "*", "(", "1", "+", "math", ".", "cos", "(", "math", ".", "pi", "*", "epoch", "/", "T_max", ")", ")", "/", "2", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.evolved.modify_drop_path_rate": [[30, 35], ["logging.debug"], "function", ["None"], ["", "def", "modify_drop_path_rate", "(", "model", ",", "value", ",", "log", "=", "True", ")", ":", "\n", "    ", "if", "log", "and", "model", ".", "drop_path", "!=", "value", ":", "\n", "        ", "logging", ".", "debug", "(", "'Modified drop-path rate from %s to %s'", "%", "\n", "(", "model", ".", "drop_path", ",", "value", ")", ")", "\n", "", "model", ".", "drop_path", "=", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.evolved.multi_output_loss": [[37, 50], ["zip", "isinstance", "isinstance", "isinstance", "isinstance", "len", "len", "loss_fn"], "function", ["None"], ["", "def", "multi_output_loss", "(", "outputs", ",", "target", ",", "output_weights", ",", "loss_fn", "=", "cross_entropy", ",", "**", "loss_kwargs", ")", ":", "\n", "    ", "\"\"\" outputs is a list/tuple of outputs, output_weights is list of same length of output_weights\n    \"\"\"", "\n", "assert", "isinstance", "(", "outputs", ",", "list", ")", "or", "isinstance", "(", "outputs", ",", "tuple", ")", "\n", "assert", "isinstance", "(", "output_weights", ",", "list", ")", "or", "isinstance", "(", "\n", "output_weights", ",", "tuple", ")", "\n", "assert", "len", "(", "outputs", ")", "==", "len", "(", "output_weights", ")", "\n", "\n", "loss", "=", "0", "\n", "for", "y", ",", "w", "in", "zip", "(", "outputs", ",", "output_weights", ")", ":", "\n", "        ", "if", "y", "is", "not", "None", "and", "w", "is", "not", "None", "and", "w", "!=", "0.", ":", "\n", "            ", "loss", "=", "loss", "+", "w", "*", "loss_fn", "(", "y", ",", "target", ",", "**", "loss_kwargs", ")", "\n", "", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.evolved.evolved_network": [[247, 259], ["model_config.pop", "evolved.EvolvedNetworkCIFAR", "model_config.setdefault", "evolved.EvolvedNetworkImageNet", "model_config.setdefault"], "function", ["None"], ["", "", "", "def", "evolved_network", "(", "**", "model_config", ")", ":", "\n", "    ", "dataset", "=", "model_config", ".", "pop", "(", "'dataset'", ")", "\n", "\n", "if", "'cifar'", "in", "dataset", ":", "\n", "        ", "if", "dataset", "==", "'cifar10'", ":", "\n", "            ", "model_config", ".", "setdefault", "(", "'num_classes'", ",", "10", ")", "\n", "", "elif", "dataset", "==", "'cifar100'", ":", "\n", "            ", "model_config", ".", "setdefault", "(", "'num_classes'", ",", "100", ")", "\n", "", "network", "=", "EvolvedNetworkCIFAR", "(", "**", "model_config", ")", "\n", "", "elif", "'imagenet'", "in", "dataset", ":", "\n", "        ", "network", "=", "EvolvedNetworkImageNet", "(", "**", "model_config", ")", "\n", "", "return", "network", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.evolved.nasnet": [[261, 264], ["model_config.setdefault", "evolved.evolved_network"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.models.evolved.evolved_network"], ["", "def", "nasnet", "(", "**", "model_config", ")", ":", "\n", "    ", "model_config", ".", "setdefault", "(", "'cell_fn'", ",", "NasNetCell", ")", "\n", "return", "evolved_network", "(", "**", "model_config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.evolved.darts": [[266, 269], ["model_config.setdefault", "evolved.evolved_network"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.models.evolved.evolved_network"], ["", "def", "darts", "(", "**", "model_config", ")", ":", "\n", "    ", "model_config", ".", "setdefault", "(", "'cell_fn'", ",", "DARTSCell", ")", "\n", "return", "evolved_network", "(", "**", "model_config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.evolved.amoebanet": [[271, 274], ["model_config.setdefault", "evolved.evolved_network"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.models.evolved.evolved_network"], ["", "def", "amoebanet", "(", "**", "model_config", ")", ":", "\n", "    ", "model_config", ".", "setdefault", "(", "'cell_fn'", ",", "AmoebaNetCell", ")", "\n", "return", "evolved_network", "(", "**", "model_config", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.BasicBlock.__init__": [[82, 96], ["torch.Module.__init__", "resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.conv3x3", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.conv3x3"], ["    ", "def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "expansion", "=", "1", ",", "\n", "downsample", "=", "None", ",", "groups", "=", "1", ",", "residual_block", "=", "None", ",", "dropout", "=", "0.", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "dropout", "=", "0", "if", "dropout", "is", "None", "else", "dropout", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ",", "groups", "=", "groups", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "expansion", "*", "planes", ",", "groups", "=", "groups", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "expansion", "*", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "residual_block", "=", "residual_block", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "expansion", "=", "expansion", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.BasicBlock.forward": [[97, 118], ["resnet.BasicBlock.conv1", "resnet.BasicBlock.bn1", "resnet.BasicBlock.relu", "resnet.BasicBlock.dropout", "resnet.BasicBlock.conv2", "resnet.BasicBlock.bn2", "resnet.BasicBlock.relu", "resnet.BasicBlock.downsample", "resnet.BasicBlock.residual_block"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "dropout", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "residual", ")", "\n", "\n", "", "if", "self", ".", "residual_block", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "residual_block", "(", "residual", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.Bottleneck.__init__": [[122, 139], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Dropout", "torch.Dropout"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.conv3x3"], ["    ", "def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "expansion", "=", "4", ",", "downsample", "=", "None", ",", "groups", "=", "1", ",", "residual_block", "=", "None", ",", "dropout", "=", "0.", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "dropout", "=", "0", "if", "dropout", "is", "None", "else", "dropout", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "\n", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ",", "stride", "=", "stride", ",", "groups", "=", "groups", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "\n", "planes", ",", "planes", "*", "expansion", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "expansion", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "dropout", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "residual_block", "=", "residual_block", "\n", "self", ".", "stride", "=", "stride", "\n", "self", ".", "expansion", "=", "expansion", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.Bottleneck.forward": [[140, 165], ["resnet.Bottleneck.conv1", "resnet.Bottleneck.bn1", "resnet.Bottleneck.relu", "resnet.Bottleneck.dropout", "resnet.Bottleneck.conv2", "resnet.Bottleneck.bn2", "resnet.Bottleneck.relu", "resnet.Bottleneck.dropout", "resnet.Bottleneck.conv3", "resnet.Bottleneck.bn3", "resnet.Bottleneck.relu", "resnet.Bottleneck.downsample", "resnet.Bottleneck.residual_block"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "dropout", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "out", "=", "self", ".", "dropout", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "residual", ")", "\n", "\n", "", "if", "self", ".", "residual_block", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "residual_block", "(", "residual", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.ResNet.__init__": [[169, 171], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.ResNet._make_layer": [[172, 194], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "residual_block.", "block", "layers.append", "layers.append", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "block", "utils.mixup.MixUp"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "expansion", "=", "1", ",", "stride", "=", "1", ",", "groups", "=", "1", ",", "residual_block", "=", "None", ",", "dropout", "=", "None", ",", "mixup", "=", "False", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "out_planes", "=", "planes", "*", "expansion", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "out_planes", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "out_planes", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "expansion", ")", ",", "\n", ")", "\n", "", "if", "residual_block", "is", "not", "None", ":", "\n", "            ", "residual_block", "=", "residual_block", "(", "out_planes", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "expansion", "=", "expansion", ",", "\n", "downsample", "=", "downsample", ",", "groups", "=", "groups", ",", "residual_block", "=", "residual_block", ",", "dropout", "=", "dropout", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "expansion", "=", "expansion", ",", "groups", "=", "groups", ",", "\n", "residual_block", "=", "residual_block", ",", "dropout", "=", "dropout", ")", ")", "\n", "", "if", "mixup", ":", "\n", "            ", "layers", ".", "append", "(", "MixUp", "(", ")", ")", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.ResNet.features": [[195, 208], ["resnet.ResNet.conv1", "resnet.ResNet.bn1", "resnet.ResNet.relu", "resnet.ResNet.maxpool", "resnet.ResNet.layer1", "resnet.ResNet.layer2", "resnet.ResNet.layer3", "resnet.ResNet.layer4", "resnet.ResNet.avgpool", "resnet.ResNet.view", "resnet.ResNet.size"], "methods", ["None"], ["", "def", "features", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "return", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.ResNet.forward": [[209, 213], ["resnet.ResNet.features", "resnet.ResNet.fc"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.ResNet.features"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.ResNet_imagenet.__init__": [[218, 303], ["resnet.ResNet.__init__", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "range", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Linear", "torch.Linear", "resnet.init_model", "math.floor", "len", "resnet.ResNet_imagenet._make_layer", "setattr", "int", "resnet.ramp_up_fn", "resnet.ResNet_imagenet.regime.insert", "min", "modules.checkpoint.CheckpointModule", "resnet.weight_decay_config", "resnet.weight_decay_config", "resnet.mixsize_config", "str", "resnet.weight_decay_config", "resnet.ResNet_imagenet.__init__.size_config"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.densenet.init_model", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.ramp_up_fn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.densenet.weight_decay_config", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.densenet.weight_decay_config", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.mixsize_config", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.densenet.weight_decay_config"], ["def", "__init__", "(", "self", ",", "num_classes", "=", "1000", ",", "inplanes", "=", "64", ",", "\n", "block", "=", "Bottleneck", ",", "residual_block", "=", "None", ",", "layers", "=", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "\n", "width", "=", "[", "64", ",", "128", ",", "256", ",", "512", "]", ",", "expansion", "=", "4", ",", "groups", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "\n", "regime", "=", "'normal'", ",", "scale_lr", "=", "1", ",", "ramp_up_lr", "=", "True", ",", "checkpoint_segments", "=", "0", ",", "mixup", "=", "False", ",", "\n", "base_devices", "=", "4", ",", "base_device_batch", "=", "64", ",", "base_duplicates", "=", "1", ",", "base_image_size", "=", "224", ",", "mix_size_regime", "=", "'D+'", ")", ":", "\n", "        ", "super", "(", "ResNet_imagenet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "inplanes", "=", "inplanes", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "self", ".", "inplanes", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "inplanes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "layers", ")", ")", ":", "\n", "            ", "layer", "=", "self", ".", "_make_layer", "(", "block", "=", "block", ",", "planes", "=", "width", "[", "i", "]", ",", "blocks", "=", "layers", "[", "i", "]", ",", "expansion", "=", "expansion", ",", "\n", "stride", "=", "1", "if", "i", "==", "0", "else", "2", ",", "residual_block", "=", "residual_block", ",", "groups", "=", "groups", "[", "i", "]", ",", "\n", "mixup", "=", "mixup", ")", "\n", "if", "checkpoint_segments", ">", "0", ":", "\n", "                ", "layer_checkpoint_segments", "=", "min", "(", "checkpoint_segments", ",", "layers", "[", "i", "]", ")", "\n", "layer", "=", "CheckpointModule", "(", "layer", ",", "layer_checkpoint_segments", ")", "\n", "", "setattr", "(", "self", ",", "'layer%s'", "%", "str", "(", "i", "+", "1", ")", ",", "layer", ")", "\n", "\n", "", "self", ".", "avgpool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "width", "[", "-", "1", "]", "*", "expansion", ",", "num_classes", ")", "\n", "\n", "init_model", "(", "self", ")", "\n", "batch_size", "=", "base_devices", "*", "base_device_batch", "\n", "num_steps_epoch", "=", "math", ".", "floor", "(", "self", ".", "num_train_images", "/", "batch_size", ")", "\n", "\n", "# base regime", "\n", "self", ".", "regime", "=", "[", "\n", "{", "'epoch'", ":", "0", ",", "'optimizer'", ":", "'SGD'", ",", "'lr'", ":", "scale_lr", "*", "1e-1", ",", "\n", "'momentum'", ":", "0.9", ",", "'regularizer'", ":", "weight_decay_config", "(", "1e-4", ")", "}", ",", "\n", "{", "'epoch'", ":", "30", ",", "'lr'", ":", "scale_lr", "*", "1e-2", "}", ",", "\n", "{", "'epoch'", ":", "60", ",", "'lr'", ":", "scale_lr", "*", "1e-3", "}", ",", "\n", "{", "'epoch'", ":", "80", ",", "'lr'", ":", "scale_lr", "*", "1e-4", "}", "\n", "]", "\n", "\n", "if", "'cutmix'", "in", "regime", ":", "\n", "            ", "self", ".", "regime", "=", "[", "\n", "{", "'epoch'", ":", "0", ",", "'optimizer'", ":", "'SGD'", ",", "'lr'", ":", "scale_lr", "*", "1e-1", ",", "\n", "'momentum'", ":", "0.9", ",", "'regularizer'", ":", "weight_decay_config", "(", "1e-4", ")", "}", ",", "\n", "{", "'epoch'", ":", "75", ",", "'lr'", ":", "scale_lr", "*", "1e-2", "}", ",", "\n", "{", "'epoch'", ":", "150", ",", "'lr'", ":", "scale_lr", "*", "1e-3", "}", ",", "\n", "{", "'epoch'", ":", "225", ",", "'lr'", ":", "scale_lr", "*", "1e-4", "}", "\n", "]", "\n", "\n", "# Sampled regimes from \"Mix & Match: training convnets with mixed image sizes for improved accuracy, speed and scale resiliency\"", "\n", "", "if", "'sampled'", "in", "regime", ":", "\n", "# add gradient smoothing", "\n", "            ", "self", ".", "regime", "[", "0", "]", "[", "'regularizer'", "]", "=", "[", "{", "'name'", ":", "'GradSmooth'", ",", "'momentum'", ":", "0.9", ",", "'log'", ":", "False", "}", ",", "\n", "weight_decay_config", "(", "1e-4", ")", "]", "\n", "ramp_up_lr", "=", "False", "\n", "self", ".", "data_regime", "=", "None", "\n", "\n", "def", "size_config", "(", "size", ")", ":", "return", "mixsize_config", "(", "size", ",", "base_size", "=", "base_image_size", ",", "base_batch", "=", "base_device_batch", ",", "base_duplicates", "=", "base_duplicates", ",", "\n", "adapt_batch", "=", "mix_size_regime", "==", "'B+'", ",", "adapt_duplicates", "=", "mix_size_regime", "==", "'D+'", ")", "\n", "increment", "=", "int", "(", "base_image_size", "/", "7", ")", "\n", "\n", "if", "'144'", "in", "regime", ":", "\n", "                ", "self", ".", "sampled_data_regime", "=", "[", "\n", "(", "0.1", ",", "size_config", "(", "base_image_size", "+", "increment", ")", ")", ",", "\n", "(", "0.1", ",", "size_config", "(", "base_image_size", ")", ")", ",", "\n", "(", "0.6", ",", "size_config", "(", "base_image_size", "-", "3", "*", "increment", ")", ")", ",", "\n", "(", "0.2", ",", "size_config", "(", "base_image_size", "-", "4", "*", "increment", ")", ")", ",", "\n", "]", "\n", "", "else", ":", "# sampled-224", "\n", "                ", "self", ".", "sampled_data_regime", "=", "[", "\n", "(", "0.8", "/", "6", ",", "size_config", "(", "base_image_size", "-", "3", "*", "increment", ")", ")", ",", "\n", "(", "0.8", "/", "6", ",", "size_config", "(", "base_image_size", "-", "2", "*", "increment", ")", ")", ",", "\n", "(", "0.8", "/", "6", ",", "size_config", "(", "base_image_size", "-", "increment", ")", ")", ",", "\n", "(", "0.2", ",", "size_config", "(", "base_image_size", ")", ")", ",", "\n", "(", "0.8", "/", "6", ",", "size_config", "(", "base_image_size", "+", "increment", ")", ")", ",", "\n", "(", "0.8", "/", "6", ",", "size_config", "(", "base_image_size", "+", "2", "*", "increment", ")", ")", ",", "\n", "(", "0.8", "/", "6", ",", "size_config", "(", "base_image_size", "+", "3", "*", "increment", ")", ")", ",", "\n", "]", "\n", "\n", "", "self", ".", "data_eval_regime", "=", "[", "\n", "{", "'epoch'", ":", "0", ",", "'input_size'", ":", "base_image_size", "}", "\n", "]", "\n", "\n", "", "if", "ramp_up_lr", "and", "scale_lr", ">", "1", ":", "# add learning rate ramp-up", "\n", "            ", "self", ".", "regime", "[", "0", "]", "[", "'step_lambda'", "]", "=", "ramp_up_fn", "(", "0.1", ",", "0.1", "*", "scale_lr", ",", "\n", "num_steps_epoch", "*", "5", ")", "\n", "self", ".", "regime", ".", "insert", "(", "1", ",", "{", "'epoch'", ":", "5", ",", "'lr'", ":", "scale_lr", "*", "1e-1", "}", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.ResNet_cifar.__init__": [[307, 345], ["resnet.ResNet.__init__", "int", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "resnet.ResNet_cifar._make_layer", "resnet.ResNet_cifar._make_layer", "resnet.ResNet_cifar._make_layer", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Linear", "torch.Linear", "resnet.init_model", "resnet.weight_decay_config", "resnet.weight_decay_config"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.densenet.init_model", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.densenet.weight_decay_config", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.densenet.weight_decay_config"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "10", ",", "inplanes", "=", "16", ",", "\n", "block", "=", "BasicBlock", ",", "depth", "=", "18", ",", "width", "=", "[", "16", ",", "32", ",", "64", "]", ",", "\n", "groups", "=", "[", "1", ",", "1", ",", "1", "]", ",", "residual_block", "=", "None", ",", "regime", "=", "'normal'", ",", "dropout", "=", "None", ",", "mixup", "=", "False", ")", ":", "\n", "        ", "super", "(", "ResNet_cifar", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "inplanes", "=", "inplanes", "\n", "n", "=", "int", "(", "(", "depth", "-", "2", ")", "/", "6", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "self", ".", "inplanes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "inplanes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "lambda", "x", ":", "x", "\n", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "width", "[", "0", "]", ",", "n", ",", "groups", "=", "groups", "[", "\n", "0", "]", ",", "residual_block", "=", "residual_block", ",", "dropout", "=", "dropout", ",", "mixup", "=", "mixup", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "\n", "block", ",", "width", "[", "1", "]", ",", "n", ",", "stride", "=", "2", ",", "groups", "=", "groups", "[", "1", "]", ",", "residual_block", "=", "residual_block", ",", "dropout", "=", "dropout", ",", "mixup", "=", "mixup", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "\n", "block", ",", "width", "[", "2", "]", ",", "n", ",", "stride", "=", "2", ",", "groups", "=", "groups", "[", "2", "]", ",", "residual_block", "=", "residual_block", ",", "dropout", "=", "dropout", ",", "mixup", "=", "mixup", ")", "\n", "self", ".", "layer4", "=", "lambda", "x", ":", "x", "\n", "self", ".", "avgpool", "=", "nn", ".", "AvgPool2d", "(", "8", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "width", "[", "-", "1", "]", ",", "num_classes", ")", "\n", "\n", "init_model", "(", "self", ")", "\n", "if", "regime", "==", "'normal'", ":", "\n", "            ", "self", ".", "regime", "=", "[", "\n", "{", "'epoch'", ":", "0", ",", "'optimizer'", ":", "'SGD'", ",", "'lr'", ":", "1e-1", ",", "'momentum'", ":", "0.9", ",", "\n", "'regularizer'", ":", "weight_decay_config", "(", "1e-4", ")", "}", ",", "\n", "{", "'epoch'", ":", "81", ",", "'lr'", ":", "1e-2", "}", ",", "\n", "{", "'epoch'", ":", "122", ",", "'lr'", ":", "1e-3", "}", ",", "\n", "{", "'epoch'", ":", "164", ",", "'lr'", ":", "1e-4", "}", "\n", "]", "\n", "", "elif", "regime", "==", "'wide-resnet'", ":", "\n", "            ", "self", ".", "regime", "=", "[", "\n", "{", "'epoch'", ":", "0", ",", "'optimizer'", ":", "'SGD'", ",", "'lr'", ":", "1e-1", ",", "'momentum'", ":", "0.9", ",", "\n", "'regularizer'", ":", "weight_decay_config", "(", "5e-4", ")", "}", ",", "\n", "{", "'epoch'", ":", "60", ",", "'lr'", ":", "2e-2", "}", ",", "\n", "{", "'epoch'", ":", "120", ",", "'lr'", ":", "4e-3", "}", ",", "\n", "{", "'epoch'", ":", "160", ",", "'lr'", ":", "8e-4", "}", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.init_model": [[15, 31], ["model.modules", "model.modules", "model.fc.weight.data.normal_", "model.fc.bias.data.zero_", "isinstance", "isinstance", "m.weight.data.normal_", "isinstance", "torch.init.constant_", "isinstance", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_", "torch.init.constant_"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.modules", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.modules"], ["def", "init_model", "(", "model", ")", ":", "\n", "    ", "for", "m", "in", "model", ".", "modules", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "            ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "            ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "", "", "for", "m", "in", "model", ".", "modules", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "Bottleneck", ")", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn3", ".", "weight", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "BasicBlock", ")", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bn2", ".", "weight", ",", "0", ")", "\n", "\n", "", "", "model", ".", "fc", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "0.01", ")", "\n", "model", ".", "fc", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.weight_decay_config": [[33, 39], ["n.endswith", "isinstance"], "function", ["None"], ["", "def", "weight_decay_config", "(", "value", "=", "1e-4", ",", "log", "=", "False", ")", ":", "\n", "    ", "return", "{", "'name'", ":", "'WeightDecay'", ",", "\n", "'value'", ":", "value", ",", "\n", "'log'", ":", "log", ",", "\n", "'filter'", ":", "{", "'parameter_name'", ":", "lambda", "n", ":", "not", "n", ".", "endswith", "(", "'bias'", ")", ",", "\n", "'module'", ":", "lambda", "m", ":", "not", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", "}", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.mixsize_config": [[42, 66], ["max", "int", "int", "round", "round"], "function", ["None"], ["", "def", "mixsize_config", "(", "sz", ",", "base_size", ",", "base_batch", ",", "base_duplicates", ",", "adapt_batch", ",", "adapt_duplicates", ")", ":", "\n", "    ", "assert", "adapt_batch", "or", "adapt_duplicates", "or", "sz", "==", "base_size", "\n", "batch_size", "=", "base_batch", "\n", "duplicates", "=", "base_duplicates", "\n", "if", "adapt_batch", "and", "adapt_duplicates", ":", "\n", "        ", "scale", "=", "base_size", "/", "sz", "\n", "", "else", ":", "\n", "        ", "scale", "=", "(", "base_size", "/", "sz", ")", "**", "2", "\n", "\n", "", "if", "scale", "*", "duplicates", "<", "0.5", ":", "\n", "        ", "adapt_duplicates", "=", "False", "\n", "adapt_batch", "=", "True", "\n", "\n", "", "if", "adapt_batch", ":", "\n", "        ", "batch_size", "=", "int", "(", "round", "(", "scale", "*", "base_batch", ")", ")", "\n", "\n", "", "if", "adapt_duplicates", ":", "\n", "        ", "duplicates", "=", "int", "(", "round", "(", "scale", "*", "duplicates", ")", ")", "\n", "\n", "", "duplicates", "=", "max", "(", "1", ",", "duplicates", ")", "\n", "return", "{", "\n", "'input_size'", ":", "sz", ",", "\n", "'batch_size'", ":", "batch_size", ",", "\n", "'duplicates'", ":", "duplicates", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.ramp_up_fn": [[69, 72], ["None"], "function", ["None"], ["", "def", "ramp_up_fn", "(", "lr0", ",", "lrT", ",", "T", ")", ":", "\n", "    ", "rate", "=", "(", "lrT", "-", "lr0", ")", "/", "T", "\n", "return", "\"lambda t: {'lr': %s + t * %s}\"", "%", "(", "lr0", ",", "rate", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.conv3x3": [[74, 78], ["torch.Conv2d"], "function", ["None"], ["", "def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ",", "groups", "=", "1", ",", "bias", "=", "False", ")", ":", "\n", "    ", "\"3x3 convolution with padding\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "groups", "=", "groups", ",", "bias", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.resnet": [[348, 395], ["config.pop", "config.pop", "config.pop", "config.setdefault", "config.pop", "resnet.ResNet_imagenet", "config.update", "config.update", "config.update", "config.update", "config.update", "config.update", "config.setdefault", "config.setdefault", "resnet.ResNet_cifar", "dict", "dict", "dict", "dict", "dict", "dict", "config.setdefault", "config.setdefault", "resnet.ResNet_cifar"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.update", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.update", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.update", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.update", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.update", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.update"], ["", "", "", "def", "resnet", "(", "**", "config", ")", ":", "\n", "    ", "dataset", "=", "config", ".", "pop", "(", "'dataset'", ",", "'imagenet'", ")", "\n", "if", "config", ".", "pop", "(", "'quantize'", ",", "False", ")", ":", "\n", "        ", "from", ".", "modules", ".", "quantize", "import", "QConv2d", ",", "QLinear", ",", "RangeBN", "\n", "torch", ".", "nn", ".", "Linear", "=", "QLinear", "\n", "torch", ".", "nn", ".", "Conv2d", "=", "QConv2d", "\n", "torch", ".", "nn", ".", "BatchNorm2d", "=", "RangeBN", "\n", "\n", "", "bn_norm", "=", "config", ".", "pop", "(", "'bn_norm'", ",", "None", ")", "\n", "if", "bn_norm", "is", "not", "None", ":", "\n", "        ", "from", ".", "modules", ".", "lp_norm", "import", "L1BatchNorm2d", ",", "TopkBatchNorm2d", "\n", "if", "bn_norm", "==", "'L1'", ":", "\n", "            ", "torch", ".", "nn", ".", "BatchNorm2d", "=", "L1BatchNorm2d", "\n", "", "if", "bn_norm", "==", "'TopK'", ":", "\n", "            ", "torch", ".", "nn", ".", "BatchNorm2d", "=", "TopkBatchNorm2d", "\n", "\n", "", "", "if", "'imagenet'", "in", "dataset", ":", "\n", "        ", "config", ".", "setdefault", "(", "'num_classes'", ",", "1000", ")", "\n", "depth", "=", "config", ".", "pop", "(", "'depth'", ",", "50", ")", "\n", "if", "depth", "==", "18", ":", "\n", "            ", "config", ".", "update", "(", "dict", "(", "block", "=", "BasicBlock", ",", "\n", "layers", "=", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "\n", "expansion", "=", "1", ")", ")", "\n", "", "if", "depth", "==", "34", ":", "\n", "            ", "config", ".", "update", "(", "dict", "(", "block", "=", "BasicBlock", ",", "\n", "layers", "=", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "\n", "expansion", "=", "1", ")", ")", "\n", "", "if", "depth", "==", "50", ":", "\n", "            ", "config", ".", "update", "(", "dict", "(", "block", "=", "Bottleneck", ",", "layers", "=", "[", "3", ",", "4", ",", "6", ",", "3", "]", ")", ")", "\n", "", "if", "depth", "==", "101", ":", "\n", "            ", "config", ".", "update", "(", "dict", "(", "block", "=", "Bottleneck", ",", "layers", "=", "[", "3", ",", "4", ",", "23", ",", "3", "]", ")", ")", "\n", "", "if", "depth", "==", "152", ":", "\n", "            ", "config", ".", "update", "(", "dict", "(", "block", "=", "Bottleneck", ",", "layers", "=", "[", "3", ",", "8", ",", "36", ",", "3", "]", ")", ")", "\n", "", "if", "depth", "==", "200", ":", "\n", "            ", "config", ".", "update", "(", "dict", "(", "block", "=", "Bottleneck", ",", "layers", "=", "[", "3", ",", "24", ",", "36", ",", "3", "]", ")", ")", "\n", "\n", "", "return", "ResNet_imagenet", "(", "**", "config", ")", "\n", "\n", "", "elif", "dataset", "==", "'cifar10'", ":", "\n", "        ", "config", ".", "setdefault", "(", "'num_classes'", ",", "10", ")", "\n", "config", ".", "setdefault", "(", "'depth'", ",", "44", ")", "\n", "return", "ResNet_cifar", "(", "block", "=", "BasicBlock", ",", "**", "config", ")", "\n", "\n", "", "elif", "dataset", "==", "'cifar100'", ":", "\n", "        ", "config", ".", "setdefault", "(", "'num_classes'", ",", "100", ")", "\n", "config", ".", "setdefault", "(", "'depth'", ",", "44", ")", "\n", "return", "ResNet_cifar", "(", "block", "=", "BasicBlock", ",", "**", "config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.resnet_se": [[397, 400], ["resnet.resnet"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.resnet"], ["", "", "def", "resnet_se", "(", "**", "config", ")", ":", "\n", "    ", "config", "[", "'residual_block'", "]", "=", "SEBlock", "\n", "return", "resnet", "(", "**", "config", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.Concat.__init__": [[31, 33], ["torch.Sequential.__init__"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "kargs", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "Concat", ",", "self", ")", ".", "__init__", "(", "*", "kargs", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.Concat.forward": [[34, 36], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "m", "inception_resnet_v2.Concat._modules.values"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "return", "torch", ".", "cat", "(", "[", "m", "(", "inputs", ")", "for", "m", "in", "self", ".", "_modules", ".", "values", "(", ")", "]", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.block.__init__": [[40, 44], ["torch.ReLU", "torch.ReLU", "torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "scale", "=", "1.0", ",", "activation", "=", "nn", ".", "ReLU", "(", "True", ")", ")", ":", "\n", "        ", "super", "(", "block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "scale", "=", "scale", "\n", "self", ".", "activation", "=", "activation", "or", "(", "lambda", "x", ":", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.block.forward": [[45, 56], ["inception_resnet_v2.block.Branch_0", "inception_resnet_v2.block.Branch_1", "hasattr", "inception_resnet_v2.block.Conv2d_1x1", "inception_resnet_v2.block.activation", "inception_resnet_v2.block.Branch_2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "branch0", "=", "self", ".", "Branch_0", "(", "inputs", ")", "\n", "branch1", "=", "self", ".", "Branch_1", "(", "inputs", ")", "\n", "if", "hasattr", "(", "self", ",", "'Branch_2'", ")", ":", "\n", "            ", "branch2", "=", "self", ".", "Branch_2", "(", "inputs", ")", "\n", "tower_mixed", "=", "torch", ".", "cat", "(", "[", "branch0", ",", "branch1", ",", "branch2", "]", ",", "1", ")", "\n", "", "else", ":", "\n", "            ", "tower_mixed", "=", "torch", ".", "cat", "(", "[", "branch0", ",", "branch1", "]", ",", "1", ")", "\n", "", "tower_out", "=", "self", ".", "Conv2d_1x1", "(", "tower_mixed", ")", "\n", "output", "=", "self", ".", "activation", "(", "self", ".", "scale", "*", "tower_out", "+", "inputs", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.block35.__init__": [[60, 75], ["torch.ReLU", "torch.ReLU", "inception_resnet_v2.block.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "inception_resnet_v2.conv_bn", "collections.OrderedDict", "collections.OrderedDict", "collections.OrderedDict", "inception_resnet_v2.conv_bn", "inception_resnet_v2.conv_bn", "inception_resnet_v2.conv_bn", "inception_resnet_v2.conv_bn", "inception_resnet_v2.conv_bn", "inception_resnet_v2.conv_bn"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "scale", "=", "1.0", ",", "activation", "=", "nn", ".", "ReLU", "(", "True", ")", ")", ":", "\n", "        ", "super", "(", "block35", ",", "self", ")", ".", "__init__", "(", "in_planes", ",", "scale", ",", "activation", ")", "\n", "self", ".", "Branch_0", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'Conv2d_1x1'", ",", "conv_bn", "(", "in_planes", ",", "32", ",", "1", ")", ")", "\n", "]", ")", ")", "\n", "self", ".", "Branch_1", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'Conv2d_0a_1x1'", ",", "conv_bn", "(", "in_planes", ",", "32", ",", "1", ")", ")", ",", "\n", "(", "'Conv2d_0b_3x3'", ",", "conv_bn", "(", "32", ",", "32", ",", "3", ",", "padding", "=", "1", ")", ")", "\n", "]", ")", ")", "\n", "self", ".", "Branch_2", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'Conv2d_0a_1x1'", ",", "conv_bn", "(", "in_planes", ",", "32", ",", "1", ")", ")", ",", "\n", "(", "'Conv2d_0b_3x3'", ",", "conv_bn", "(", "32", ",", "48", ",", "3", ",", "padding", "=", "1", ")", ")", ",", "\n", "(", "'Conv2d_0c_3x3'", ",", "conv_bn", "(", "48", ",", "64", ",", "3", ",", "padding", "=", "1", ")", ")", "\n", "]", ")", ")", "\n", "self", ".", "Conv2d_1x1", "=", "conv_bn", "(", "128", ",", "in_planes", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.block17.__init__": [[79, 91], ["torch.ReLU", "torch.ReLU", "inception_resnet_v2.block.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "inception_resnet_v2.conv_bn", "collections.OrderedDict", "collections.OrderedDict", "inception_resnet_v2.conv_bn", "inception_resnet_v2.conv_bn", "inception_resnet_v2.conv_bn", "inception_resnet_v2.conv_bn"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "scale", "=", "1.0", ",", "activation", "=", "nn", ".", "ReLU", "(", "True", ")", ")", ":", "\n", "        ", "super", "(", "block17", ",", "self", ")", ".", "__init__", "(", "in_planes", ",", "scale", ",", "activation", ")", "\n", "\n", "self", ".", "Branch_0", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'Conv2d_1x1'", ",", "conv_bn", "(", "in_planes", ",", "192", ",", "1", ")", ")", "\n", "]", ")", ")", "\n", "self", ".", "Branch_1", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'Conv2d_0a_1x1'", ",", "conv_bn", "(", "in_planes", ",", "128", ",", "1", ")", ")", ",", "\n", "(", "'Conv2d_0b_1x7'", ",", "conv_bn", "(", "128", ",", "160", ",", "(", "1", ",", "7", ")", ",", "padding", "=", "(", "0", ",", "3", ")", ")", ")", ",", "\n", "(", "'Conv2d_0c_7x1'", ",", "conv_bn", "(", "160", ",", "192", ",", "(", "7", ",", "1", ")", ",", "padding", "=", "(", "3", ",", "0", ")", ")", ")", "\n", "]", ")", ")", "\n", "self", ".", "Conv2d_1x1", "=", "conv_bn", "(", "384", ",", "in_planes", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.block8.__init__": [[95, 107], ["torch.ReLU", "torch.ReLU", "inception_resnet_v2.block.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "inception_resnet_v2.conv_bn", "collections.OrderedDict", "collections.OrderedDict", "inception_resnet_v2.conv_bn", "inception_resnet_v2.conv_bn", "inception_resnet_v2.conv_bn", "inception_resnet_v2.conv_bn"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn"], ["    ", "def", "__init__", "(", "self", ",", "in_planes", ",", "scale", "=", "1.0", ",", "activation", "=", "nn", ".", "ReLU", "(", "True", ")", ")", ":", "\n", "        ", "super", "(", "block8", ",", "self", ")", ".", "__init__", "(", "in_planes", ",", "scale", ",", "activation", ")", "\n", "\n", "self", ".", "Branch_0", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'Conv2d_1x1'", ",", "conv_bn", "(", "in_planes", ",", "192", ",", "1", ")", ")", "\n", "]", ")", ")", "\n", "self", ".", "Branch_1", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'Conv2d_0a_1x1'", ",", "conv_bn", "(", "in_planes", ",", "192", ",", "1", ")", ")", ",", "\n", "(", "'Conv2d_0b_1x7'", ",", "conv_bn", "(", "192", ",", "224", ",", "(", "1", ",", "3", ")", ",", "padding", "=", "(", "0", ",", "1", ")", ")", ")", ",", "\n", "(", "'Conv2d_0c_7x1'", ",", "conv_bn", "(", "224", ",", "256", ",", "(", "3", ",", "1", ")", ",", "padding", "=", "(", "1", ",", "0", ")", ")", ")", "\n", "]", ")", ")", "\n", "self", ".", "Conv2d_1x1", "=", "conv_bn", "(", "448", ",", "in_planes", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.InceptionResnetV2.__init__": [[111, 239], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "inception_resnet_v2.Concat", "torch.Sequential", "torch.Sequential", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "inception_resnet_v2.Concat", "torch.Sequential", "torch.Sequential", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "inception_resnet_v2.Concat", "torch.Sequential", "torch.Sequential", "range", "inception_resnet_v2.InceptionResnetV2.blocks8.add_module", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Sequential", "torch.Sequential", "collections.OrderedDict", "collections.OrderedDict", "collections.OrderedDict", "collections.OrderedDict", "collections.OrderedDict", "collections.OrderedDict", "inception_resnet_v2.InceptionResnetV2.blocks35.add_module", "collections.OrderedDict", "collections.OrderedDict", "collections.OrderedDict", "collections.OrderedDict", "inception_resnet_v2.InceptionResnetV2.blocks17.add_module", "collections.OrderedDict", "collections.OrderedDict", "collections.OrderedDict", "collections.OrderedDict", "collections.OrderedDict", "inception_resnet_v2.InceptionResnetV2.blocks8.add_module", "inception_resnet_v2.block8", "collections.OrderedDict", "collections.OrderedDict", "inception_resnet_v2.block35", "inception_resnet_v2.block17", "inception_resnet_v2.block8", "torch.Module.__init__", "torch.CrossEntropyLoss", "torch.CrossEntropyLoss", "inception_resnet_v2.InceptionResnetV2.loss", "inception_resnet_v2.conv_bn", "inception_resnet_v2.conv_bn", "inception_resnet_v2.conv_bn", "torch.MaxPool2d", "torch.MaxPool2d", "inception_resnet_v2.conv_bn", "inception_resnet_v2.conv_bn", "torch.MaxPool2d", "torch.MaxPool2d", "inception_resnet_v2.conv_bn", "inception_resnet_v2.conv_bn", "inception_resnet_v2.conv_bn", "inception_resnet_v2.conv_bn", "inception_resnet_v2.conv_bn", "inception_resnet_v2.conv_bn", "torch.AvgPool2d", "torch.AvgPool2d", "inception_resnet_v2.conv_bn", "inception_resnet_v2.conv_bn", "inception_resnet_v2.conv_bn", "inception_resnet_v2.conv_bn", "inception_resnet_v2.conv_bn", "torch.MaxPool2d", "torch.MaxPool2d", "inception_resnet_v2.conv_bn", "inception_resnet_v2.conv_bn", "inception_resnet_v2.conv_bn", "inception_resnet_v2.conv_bn", "inception_resnet_v2.conv_bn", "inception_resnet_v2.conv_bn", "inception_resnet_v2.conv_bn", "torch.MaxPool2d", "torch.MaxPool2d", "inception_resnet_v2.conv_bn", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Dropout", "torch.Dropout", "torch.AvgPool2d", "torch.AvgPool2d", "inception_resnet_v2.conv_bn", "inception_resnet_v2.conv_bn", "torch.Dropout", "torch.Dropout", "inception_resnet_v2.conv_bn", "inception_resnet_v2.InceptionResnetV2.loss"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__", "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "1000", ")", ":", "\n", "        ", "super", "(", "InceptionResnetV2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "end_points", "=", "{", "}", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "stem", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'Conv2d_1a_3x3'", ",", "conv_bn", "(", "3", ",", "32", ",", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ")", ",", "\n", "(", "'Conv2d_2a_3x3'", ",", "conv_bn", "(", "32", ",", "32", ",", "3", ",", "padding", "=", "1", ")", ")", ",", "\n", "(", "'Conv2d_2b_3x3'", ",", "conv_bn", "(", "32", ",", "64", ",", "3", ")", ")", ",", "\n", "(", "'MaxPool_3a_3x3'", ",", "nn", ".", "MaxPool2d", "(", "3", ",", "2", ")", ")", ",", "\n", "(", "'Conv2d_3b_1x1'", ",", "conv_bn", "(", "64", ",", "80", ",", "1", ")", ")", ",", "\n", "(", "'Conv2d_4a_3x3'", ",", "conv_bn", "(", "80", ",", "192", ",", "3", ")", ")", ",", "\n", "(", "'MaxPool_5a_3x3'", ",", "nn", ".", "MaxPool2d", "(", "3", ",", "2", ")", ")", "\n", "]", ")", ")", "\n", "\n", "tower_conv", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'Conv2d_5b_b0_1x1'", ",", "conv_bn", "(", "192", ",", "96", ",", "1", ")", ")", "\n", "]", ")", ")", "\n", "tower_conv1", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'Conv2d_5b_b1_0a_1x1'", ",", "conv_bn", "(", "192", ",", "48", ",", "1", ")", ")", ",", "\n", "(", "'Conv2d_5b_b1_0b_5x5'", ",", "conv_bn", "(", "48", ",", "64", ",", "5", ",", "padding", "=", "2", ")", ")", "\n", "]", ")", ")", "\n", "tower_conv2", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'Conv2d_5b_b2_0a_1x1'", ",", "conv_bn", "(", "192", ",", "64", ",", "1", ")", ")", ",", "\n", "(", "'Conv2d_5b_b2_0b_3x3'", ",", "conv_bn", "(", "64", ",", "96", ",", "3", ",", "padding", "=", "1", ")", ")", ",", "\n", "(", "'Conv2d_5b_b2_0c_3x3'", ",", "conv_bn", "(", "96", ",", "96", ",", "3", ",", "padding", "=", "1", ")", ")", "\n", "]", ")", ")", "\n", "tower_pool3", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'AvgPool_5b_b3_0a_3x3'", ",", "nn", ".", "AvgPool2d", "(", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", ")", ",", "\n", "(", "'Conv2d_5b_b3_0b_1x1'", ",", "conv_bn", "(", "192", ",", "64", ",", "1", ")", ")", "\n", "]", ")", ")", "\n", "\n", "self", ".", "mixed_5b", "=", "Concat", "(", "OrderedDict", "(", "[", "\n", "(", "'Branch_0'", ",", "tower_conv", ")", ",", "\n", "(", "'Branch_1'", ",", "tower_conv1", ")", ",", "\n", "(", "'Branch_2'", ",", "tower_conv2", ")", ",", "\n", "(", "'Branch_3'", ",", "tower_pool3", ")", "\n", "]", ")", ")", "\n", "\n", "self", ".", "blocks35", "=", "nn", ".", "Sequential", "(", ")", "\n", "for", "i", "in", "range", "(", "10", ")", ":", "\n", "            ", "self", ".", "blocks35", ".", "add_module", "(", "'Block35.%s'", "%", "\n", "i", ",", "block35", "(", "320", ",", "scale", "=", "0.17", ")", ")", "\n", "\n", "", "tower_conv", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'Conv2d_6a_b0_0a_3x3'", ",", "conv_bn", "(", "320", ",", "384", ",", "3", ",", "stride", "=", "2", ")", ")", "\n", "]", ")", ")", "\n", "tower_conv1", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'Conv2d_6a_b1_0a_1x1'", ",", "conv_bn", "(", "320", ",", "256", ",", "1", ")", ")", ",", "\n", "(", "'Conv2d_6a_b1_0b_3x3'", ",", "conv_bn", "(", "256", ",", "256", ",", "3", ",", "padding", "=", "1", ")", ")", ",", "\n", "(", "'Conv2d_6a_b1_0c_3x3'", ",", "conv_bn", "(", "256", ",", "384", ",", "3", ",", "stride", "=", "2", ")", ")", "\n", "]", ")", ")", "\n", "tower_pool", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'MaxPool_1a_3x3'", ",", "nn", ".", "MaxPool2d", "(", "3", ",", "stride", "=", "2", ")", ")", "\n", "]", ")", ")", "\n", "\n", "self", ".", "mixed_6a", "=", "Concat", "(", "OrderedDict", "(", "[", "\n", "(", "'Branch_0'", ",", "tower_conv", ")", ",", "\n", "(", "'Branch_1'", ",", "tower_conv1", ")", ",", "\n", "(", "'Branch_2'", ",", "tower_pool", ")", "\n", "]", ")", ")", "\n", "\n", "self", ".", "blocks17", "=", "nn", ".", "Sequential", "(", ")", "\n", "for", "i", "in", "range", "(", "20", ")", ":", "\n", "            ", "self", ".", "blocks17", ".", "add_module", "(", "'Block17.%s'", "%", "\n", "i", ",", "block17", "(", "1088", ",", "scale", "=", "0.1", ")", ")", "\n", "\n", "", "tower_conv", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'Conv2d_0a_1x1'", ",", "conv_bn", "(", "1088", ",", "256", ",", "1", ")", ")", ",", "\n", "(", "'Conv2d_1a_3x3'", ",", "conv_bn", "(", "256", ",", "384", ",", "3", ",", "stride", "=", "2", ")", ")", ",", "\n", "]", ")", ")", "\n", "tower_conv1", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'Conv2d_0a_1x1'", ",", "conv_bn", "(", "1088", ",", "256", ",", "1", ")", ")", ",", "\n", "(", "'Conv2d_1a_3x3'", ",", "conv_bn", "(", "256", ",", "64", ",", "3", ",", "stride", "=", "2", ")", ")", "\n", "]", ")", ")", "\n", "tower_conv2", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'Conv2d_0a_1x1'", ",", "conv_bn", "(", "1088", ",", "256", ",", "1", ")", ")", ",", "\n", "(", "'Conv2d_0b_3x3'", ",", "conv_bn", "(", "256", ",", "288", ",", "3", ",", "padding", "=", "1", ")", ")", ",", "\n", "(", "'Conv2d_1a_3x3'", ",", "conv_bn", "(", "288", ",", "320", ",", "3", ",", "stride", "=", "2", ")", ")", "\n", "]", ")", ")", "\n", "tower_pool3", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'MaxPool_1a_3x3'", ",", "nn", ".", "MaxPool2d", "(", "3", ",", "stride", "=", "2", ")", ")", "\n", "]", ")", ")", "\n", "\n", "self", ".", "mixed_7a", "=", "Concat", "(", "OrderedDict", "(", "[", "\n", "(", "'Branch_0'", ",", "tower_conv", ")", ",", "\n", "(", "'Branch_1'", ",", "tower_conv1", ")", ",", "\n", "(", "'Branch_2'", ",", "tower_conv2", ")", ",", "\n", "(", "'Branch_3'", ",", "tower_pool3", ")", "\n", "]", ")", ")", "\n", "\n", "self", ".", "blocks8", "=", "nn", ".", "Sequential", "(", ")", "\n", "for", "i", "in", "range", "(", "9", ")", ":", "\n", "            ", "self", ".", "blocks8", ".", "add_module", "(", "'Block8.%s'", "%", "\n", "i", ",", "block8", "(", "1856", ",", "scale", "=", "0.2", ")", ")", "\n", "", "self", ".", "blocks8", ".", "add_module", "(", "'Block8.9'", ",", "block8", "(", "\n", "1856", ",", "scale", "=", "0.2", ",", "activation", "=", "None", ")", ")", "\n", "\n", "self", ".", "conv_pool", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'Conv2d_7b_1x1'", ",", "conv_bn", "(", "1856", ",", "1536", ",", "1", ")", ")", ",", "\n", "(", "'AvgPool_1a_8x8'", ",", "nn", ".", "AvgPool2d", "(", "8", ",", "1", ")", ")", ",", "\n", "(", "'Dropout'", ",", "nn", ".", "Dropout", "(", "0.2", ")", ")", "\n", "]", ")", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "1536", ",", "num_classes", ")", "\n", "\n", "self", ".", "aux_classifier", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'Conv2d_1a_3x3'", ",", "nn", ".", "AvgPool2d", "(", "5", ",", "3", ")", ")", ",", "\n", "(", "'Conv2d_1b_1x1'", ",", "conv_bn", "(", "1088", ",", "128", ",", "1", ")", ")", ",", "\n", "(", "'Conv2d_2a_5x5'", ",", "conv_bn", "(", "128", ",", "768", ",", "5", ")", ")", ",", "\n", "(", "'Dropout'", ",", "nn", ".", "Dropout", "(", "0.2", ")", ")", ",", "\n", "(", "'Logits'", ",", "conv_bn", "(", "768", ",", "num_classes", ",", "1", ")", ")", "\n", "]", ")", ")", "\n", "\n", "class", "aux_loss", "(", "nn", ".", "Module", ")", ":", "\n", "            ", "def", "__init__", "(", "self", ")", ":", "\n", "                ", "super", "(", "aux_loss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "loss", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "outputs", ",", "target", ")", ":", "\n", "                ", "return", "self", ".", "loss", "(", "outputs", "[", "0", "]", ",", "target", ")", "+", "0.4", "*", "(", "self", ".", "loss", "(", "outputs", "[", "1", "]", ",", "target", ")", ")", "\n", "", "", "self", ".", "criterion", "=", "aux_loss", "\n", "self", ".", "regime", "=", "[", "\n", "{", "'epoch'", ":", "0", ",", "'optimizer'", ":", "'SGD'", ",", "'lr'", ":", "1e-1", ",", "\n", "'weight_decay'", ":", "1e-4", ",", "'momentum'", ":", "0.9", "}", ",", "\n", "{", "'epoch'", ":", "30", ",", "'lr'", ":", "1e-2", "}", ",", "\n", "{", "'epoch'", ":", "60", ",", "'lr'", ":", "1e-3", ",", "'weight_decay'", ":", "0", "}", ",", "\n", "{", "'epoch'", ":", "90", ",", "'lr'", ":", "1e-4", "}", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.InceptionResnetV2.forward": [[241, 256], ["inception_resnet_v2.InceptionResnetV2.stem", "inception_resnet_v2.InceptionResnetV2.mixed_5b", "inception_resnet_v2.InceptionResnetV2.blocks35", "inception_resnet_v2.InceptionResnetV2.mixed_6a", "inception_resnet_v2.InceptionResnetV2.blocks17", "inception_resnet_v2.InceptionResnetV2.mixed_7a", "inception_resnet_v2.InceptionResnetV2.blocks8", "inception_resnet_v2.InceptionResnetV2.conv_pool", "x.view.view.view", "inception_resnet_v2.InceptionResnetV2.classifier", "hasattr", "inception_resnet_v2.InceptionResnetV2.aux_classifier().view", "inception_resnet_v2.InceptionResnetV2.aux_classifier"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "stem", "(", "x", ")", "# (B, 192, 35, 35)", "\n", "x", "=", "self", ".", "mixed_5b", "(", "x", ")", "# (B, 320, 35, 35)", "\n", "x", "=", "self", ".", "blocks35", "(", "x", ")", "# (B, 320, 35, 35)", "\n", "x", "=", "self", ".", "mixed_6a", "(", "x", ")", "# (B, 1088, 17, 17)", "\n", "branch1", "=", "self", ".", "blocks17", "(", "x", ")", "# (B, 1088, 17, 17)", "\n", "x", "=", "self", ".", "mixed_7a", "(", "branch1", ")", "# (B, 1856, 8, 8)", "\n", "x", "=", "self", ".", "blocks8", "(", "x", ")", "# (B, 1856, 8, 8)", "\n", "x", "=", "self", ".", "conv_pool", "(", "x", ")", "# (B, 1536, 1, 1)", "\n", "x", "=", "x", ".", "view", "(", "-", "1", ",", "1536", ")", "# (B, 1536)", "\n", "output", "=", "self", ".", "classifier", "(", "x", ")", "# (B, num_classes)", "\n", "if", "hasattr", "(", "self", ",", "'aux_classifier'", ")", ":", "\n", "            ", "branch1", "=", "self", ".", "aux_classifier", "(", "branch1", ")", ".", "view", "(", "-", "1", ",", "self", ".", "num_classes", ")", "\n", "output", "=", "[", "output", ",", "branch1", "]", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.conv_bn": [[19, 26], ["torch.Sequential", "torch.Conv2d", "torch.BatchNorm2d", "torch.ReLU"], "function", ["None"], ["def", "conv_bn", "(", "in_planes", ",", "out_planes", ",", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ":", "\n", "    ", "\"convolution with batchnorm, relu\"", "\n", "return", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_planes", ",", "eps", "=", "1e-3", ")", ",", "\n", "nn", ".", "ReLU", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.inception_resnet_v2.inception_resnet_v2": [[257, 260], ["getattr", "inception_resnet_v2.InceptionResnetV2"], "function", ["None"], ["", "", "def", "inception_resnet_v2", "(", "**", "kwargs", ")", ":", "\n", "    ", "num_classes", "=", "getattr", "(", "kwargs", ",", "'num_classes'", ",", "1000", ")", "\n", "return", "InceptionResnetV2", "(", "num_classes", "=", "num_classes", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.densenet._DenseLayer.__init__": [[32, 43], ["torch.Sequential.__init__", "densenet._DenseLayer.add_module", "densenet._DenseLayer.add_module", "densenet._DenseLayer.add_module", "densenet._DenseLayer.add_module", "densenet._DenseLayer.add_module", "densenet._DenseLayer.add_module", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_input_features", ",", "growth_rate", ",", "bn_size", ",", "drop_rate", ")", ":", "\n", "        ", "super", "(", "_DenseLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "add_module", "(", "'norm1'", ",", "nn", ".", "BatchNorm2d", "(", "num_input_features", ")", ")", ",", "\n", "self", ".", "add_module", "(", "'relu1'", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", ",", "\n", "self", ".", "add_module", "(", "'conv1'", ",", "nn", ".", "Conv2d", "(", "num_input_features", ",", "bn_size", "*", "\n", "growth_rate", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", ")", ",", "\n", "self", ".", "add_module", "(", "'norm2'", ",", "nn", ".", "BatchNorm2d", "(", "bn_size", "*", "growth_rate", ")", ")", ",", "\n", "self", ".", "add_module", "(", "'relu2'", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", ",", "\n", "self", ".", "add_module", "(", "'conv2'", ",", "nn", ".", "Conv2d", "(", "bn_size", "*", "growth_rate", ",", "growth_rate", ",", "\n", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ")", ",", "\n", "self", ".", "drop_rate", "=", "drop_rate", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.densenet._DenseLayer.forward": [[44, 50], ["super().forward", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.dropout", "torch.dropout", "torch.dropout"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.forward"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "new_features", "=", "super", "(", "_DenseLayer", ",", "self", ")", ".", "forward", "(", "x", ")", "\n", "if", "self", ".", "drop_rate", ">", "0", ":", "\n", "            ", "new_features", "=", "F", ".", "dropout", "(", "\n", "new_features", ",", "p", "=", "self", ".", "drop_rate", ",", "training", "=", "self", ".", "training", ")", "\n", "", "return", "torch", ".", "cat", "(", "[", "x", ",", "new_features", "]", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.densenet._DenseBlock.__init__": [[53, 59], ["torch.Sequential.__init__", "range", "densenet._DenseLayer", "densenet._DenseBlock.add_module"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_layers", ",", "num_input_features", ",", "bn_size", ",", "growth_rate", ",", "drop_rate", ")", ":", "\n", "        ", "super", "(", "_DenseBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "for", "i", "in", "range", "(", "num_layers", ")", ":", "\n", "            ", "layer", "=", "_DenseLayer", "(", "num_input_features", "+", "i", "*", "\n", "growth_rate", ",", "growth_rate", ",", "bn_size", ",", "drop_rate", ")", "\n", "self", ".", "add_module", "(", "'denselayer%d'", "%", "(", "i", "+", "1", ")", ",", "layer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.densenet._Transition.__init__": [[62, 69], ["torch.Sequential.__init__", "densenet._Transition.add_module", "densenet._Transition.add_module", "densenet._Transition.add_module", "densenet._Transition.add_module", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_input_features", ",", "num_output_features", ")", ":", "\n", "        ", "super", "(", "_Transition", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "add_module", "(", "'norm'", ",", "nn", ".", "BatchNorm2d", "(", "num_input_features", ")", ")", "\n", "self", ".", "add_module", "(", "'relu'", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", "\n", "self", ".", "add_module", "(", "'conv'", ",", "nn", ".", "Conv2d", "(", "num_input_features", ",", "num_output_features", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "bias", "=", "False", ")", ")", "\n", "self", ".", "add_module", "(", "'pool'", ",", "nn", ".", "AvgPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.densenet.DenseNet._create_features": [[85, 94], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "collections.OrderedDict", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d"], "methods", ["None"], ["@", "staticmethod", "\n", "def", "_create_features", "(", "num_features", ")", ":", "\n", "# First convolution", "\n", "        ", "return", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'conv0'", ",", "nn", ".", "Conv2d", "(", "3", ",", "num_features", ",", "\n", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "bias", "=", "False", ")", ")", ",", "\n", "(", "'norm0'", ",", "nn", ".", "BatchNorm2d", "(", "num_features", ")", ")", ",", "\n", "(", "'relu0'", ",", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ")", ",", "\n", "(", "'pool0'", ",", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", ")", ",", "\n", "]", ")", ")", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.densenet.DenseNet.__init__": [[96, 124], ["torch.Module.__init__", "densenet.DenseNet._create_features", "enumerate", "densenet.DenseNet.features.add_module", "torch.Linear", "torch.Linear", "torch.Linear", "densenet.init_model", "densenet._DenseBlock", "densenet.DenseNet.features.add_module", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "modules.checkpoint.CheckpointModule", "densenet._Transition", "densenet.DenseNet.features.add_module", "len"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.densenet.DenseNet_cifar._create_features", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.densenet.init_model"], ["", "def", "__init__", "(", "self", ",", "growth_rate", "=", "32", ",", "block_config", "=", "(", "6", ",", "12", ",", "24", ",", "16", ")", ",", "\n", "num_init_features", "=", "64", ",", "bn_size", "=", "4", ",", "drop_rate", "=", "0", ",", "num_classes", "=", "1000", ",", "checkpoint_segments", "=", "0", ")", ":", "\n", "\n", "        ", "super", "(", "DenseNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "features", "=", "self", ".", "_create_features", "(", "num_init_features", ")", "\n", "\n", "# Each denseblock", "\n", "num_features", "=", "num_init_features", "\n", "for", "i", ",", "num_layers", "in", "enumerate", "(", "block_config", ")", ":", "\n", "            ", "block", "=", "_DenseBlock", "(", "num_layers", "=", "num_layers", ",", "num_input_features", "=", "num_features", ",", "\n", "bn_size", "=", "bn_size", ",", "growth_rate", "=", "growth_rate", ",", "drop_rate", "=", "drop_rate", ")", "\n", "self", ".", "features", ".", "add_module", "(", "'denseblock%d'", "%", "(", "i", "+", "1", ")", ",", "block", ")", "\n", "num_features", "=", "num_features", "+", "num_layers", "*", "growth_rate", "\n", "if", "i", "!=", "len", "(", "block_config", ")", "-", "1", ":", "\n", "                ", "trans", "=", "_Transition", "(", "\n", "num_input_features", "=", "num_features", ",", "num_output_features", "=", "num_features", "//", "2", ")", "\n", "self", ".", "features", ".", "add_module", "(", "'transition%d'", "%", "(", "i", "+", "1", ")", ",", "trans", ")", "\n", "num_features", "=", "num_features", "//", "2", "\n", "\n", "# Final batch norm", "\n", "", "", "self", ".", "features", ".", "add_module", "(", "'norm5'", ",", "nn", ".", "BatchNorm2d", "(", "num_features", ")", ")", "\n", "if", "checkpoint_segments", ">", "0", ":", "\n", "            ", "self", ".", "features", "=", "CheckpointModule", "(", "\n", "self", ".", "features", ",", "checkpoint_segments", ")", "\n", "# Linear layer", "\n", "", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "num_features", ",", "num_classes", ")", "\n", "init_model", "(", "self", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.densenet.DenseNet.forward": [[125, 132], ["densenet.DenseNet.features", "torch.relu", "torch.relu", "torch.relu", "torch.avg_pool2d().view", "torch.avg_pool2d().view", "torch.avg_pool2d().view", "densenet.DenseNet.classifier", "densenet.DenseNet.size", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.ResNet.features"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "features", "=", "self", ".", "features", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "features", ",", "inplace", "=", "True", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "kernel_size", "=", "7", ",", "stride", "=", "1", ")", ".", "view", "(", "\n", "features", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "classifier", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.densenet.DenseNet_imagenet.__init__": [[135, 169], ["densenet.DenseNet.__init__", "densenet.DenseNet_imagenet.__init__.ramp_up_lr"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "growth_rate", "=", "32", ",", "block_config", "=", "(", "6", ",", "12", ",", "24", ",", "16", ")", ",", "\n", "num_init_features", "=", "64", ",", "bn_size", "=", "4", ",", "drop_rate", "=", "0", ",", "num_classes", "=", "1000", ",", "regime", "=", "'normal'", ",", "scale_lr", "=", "1", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "DenseNet_imagenet", ",", "self", ")", ".", "__init__", "(", "growth_rate", ",", "block_config", ",", "num_init_features", ",", "\n", "bn_size", ",", "drop_rate", ",", "num_classes", ",", "**", "kwargs", ")", "\n", "\n", "def", "ramp_up_lr", "(", "lr0", ",", "lrT", ",", "T", ")", ":", "\n", "            ", "rate", "=", "(", "lrT", "-", "lr0", ")", "/", "T", "\n", "return", "\"lambda t: {'lr': %s + t * %s}\"", "%", "(", "lr0", ",", "rate", ")", "\n", "", "if", "regime", "==", "'normal'", ":", "\n", "            ", "self", ".", "regime", "=", "[", "\n", "{", "'epoch'", ":", "0", ",", "'optimizer'", ":", "'SGD'", ",", "'momentum'", ":", "0.9", ",", "\n", "'step_lambda'", ":", "ramp_up_lr", "(", "0.1", ",", "0.1", "*", "scale_lr", ",", "5004", "*", "5", "/", "scale_lr", ")", ",", "\n", "'regularizer'", ":", "weight_decay_config", "(", "1e-4", ")", "}", ",", "\n", "{", "'epoch'", ":", "5", ",", "'lr'", ":", "scale_lr", "*", "1e-1", "}", ",", "\n", "{", "'epoch'", ":", "30", ",", "'lr'", ":", "scale_lr", "*", "1e-2", "}", ",", "\n", "{", "'epoch'", ":", "60", ",", "'lr'", ":", "scale_lr", "*", "1e-3", "}", ",", "\n", "{", "'epoch'", ":", "80", ",", "'lr'", ":", "scale_lr", "*", "1e-4", "}", "\n", "]", "\n", "", "elif", "regime", "==", "'small'", ":", "\n", "            ", "scale_lr", "*=", "4", "\n", "self", ".", "regime", "=", "[", "\n", "{", "'epoch'", ":", "0", ",", "'optimizer'", ":", "'SGD'", ",", "'momentum'", ":", "0.9", ",", "'lr'", ":", "scale_lr", "*", "1e-1", ",", "\n", "'regularizer'", ":", "weight_decay_config", "(", "1e-4", ")", "}", ",", "\n", "{", "'epoch'", ":", "30", ",", "'lr'", ":", "scale_lr", "*", "1e-2", "}", ",", "\n", "{", "'epoch'", ":", "60", ",", "'lr'", ":", "scale_lr", "*", "1e-3", "}", ",", "\n", "{", "'epoch'", ":", "80", ",", "'lr'", ":", "scale_lr", "*", "1e-4", "}", "\n", "]", "\n", "self", ".", "data_regime", "=", "[", "\n", "{", "'epoch'", ":", "0", ",", "'input_size'", ":", "128", ",", "'batch_size'", ":", "256", "}", ",", "\n", "{", "'epoch'", ":", "80", ",", "'input_size'", ":", "224", ",", "'batch_size'", ":", "64", "}", ",", "\n", "]", "\n", "self", ".", "data_eval_regime", "=", "[", "\n", "{", "'epoch'", ":", "0", ",", "'input_size'", ":", "128", ",", "'batch_size'", ":", "1024", "}", ",", "\n", "{", "'epoch'", ":", "80", ",", "'input_size'", ":", "224", ",", "'batch_size'", ":", "512", "}", ",", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.densenet.DenseNet_cifar._create_features": [[174, 180], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "collections.OrderedDict", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "_create_features", "(", "num_features", ")", ":", "\n", "# First convolution", "\n", "        ", "return", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'conv0'", ",", "nn", ".", "Conv2d", "(", "3", ",", "num_features", ",", "\n", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ")", "\n", "]", ")", ")", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.densenet.DenseNet_cifar.__init__": [[182, 191], ["densenet.DenseNet.__init__", "densenet.weight_decay_config"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__", "home.repos.pwc.inspect_result.berryweinst_mms-select.models.densenet.weight_decay_config"], ["", "def", "__init__", "(", "self", ",", "*", "kargs", ",", "**", "kwargs", ")", ":", "\n", "\n", "        ", "super", "(", "DenseNet_cifar", ",", "self", ")", ".", "__init__", "(", "*", "kargs", ",", "**", "kwargs", ")", "\n", "\n", "self", ".", "regime", "=", "[", "\n", "{", "'epoch'", ":", "0", ",", "'optimizer'", ":", "'SGD'", ",", "'lr'", ":", "1e-1", ",", "'momentum'", ":", "0.9", ",", "\n", "'regularizer'", ":", "weight_decay_config", "(", "1e-4", ")", "}", ",", "\n", "{", "'epoch'", ":", "150", ",", "'lr'", ":", "1e-2", "}", ",", "\n", "{", "'epoch'", ":", "225", ",", "'lr'", ":", "1e-3", "}", ",", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.densenet.DenseNet_cifar.forward": [[193, 200], ["densenet.DenseNet_cifar.features", "torch.relu", "torch.relu", "torch.relu", "torch.avg_pool2d().view", "torch.avg_pool2d().view", "torch.avg_pool2d().view", "densenet.DenseNet_cifar.classifier", "densenet.DenseNet_cifar.size", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.ResNet.features"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "features", "=", "self", ".", "features", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "features", ",", "inplace", "=", "True", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "kernel_size", "=", "8", ",", "stride", "=", "1", ")", ".", "view", "(", "\n", "features", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "classifier", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.densenet.init_model": [[10, 20], ["model.modules", "isinstance", "torch.init.kaiming_normal_", "isinstance", "torch.init.constant_", "torch.init.constant_", "isinstance", "torch.init.constant_"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.param_filter.FilterParameters.modules"], ["def", "init_model", "(", "model", ")", ":", "\n", "# Official init from torch repo.", "\n", "    ", "for", "m", "in", "model", ".", "modules", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "            ", "nn", ".", "init", ".", "kaiming_normal_", "(", "m", ".", "weight", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "weight", ",", "1", ")", "\n", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "Linear", ")", ":", "\n", "            ", "nn", ".", "init", ".", "constant_", "(", "m", ".", "bias", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.densenet.weight_decay_config": [[22, 28], ["n.endswith", "isinstance"], "function", ["None"], ["", "", "", "def", "weight_decay_config", "(", "value", "=", "1e-4", ",", "log", "=", "False", ")", ":", "\n", "    ", "return", "{", "'name'", ":", "'WeightDecay'", ",", "\n", "'value'", ":", "value", ",", "\n", "'log'", ":", "log", ",", "\n", "'filter'", ":", "{", "'parameter_name'", ":", "lambda", "n", ":", "not", "n", ".", "endswith", "(", "'bias'", ")", ",", "\n", "'module'", ":", "lambda", "m", ":", "not", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", "}", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.densenet.densenet": [[202, 245], ["config.pop", "config.pop", "config.setdefault", "config.pop", "densenet.DenseNet_imagenet", "config.update", "config.setdefault", "config.setdefault", "config.setdefault", "config.pop", "densenet.DenseNet_cifar", "dict", "config.update", "config.setdefault", "config.setdefault", "config.setdefault", "config.pop", "densenet.DenseNet_cifar", "dict", "config.update", "dict", "config.update", "dict"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.update", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.update", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.update", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.update"], ["", "", "def", "densenet", "(", "**", "config", ")", ":", "\n", "    ", "dataset", "=", "config", ".", "pop", "(", "'dataset'", ",", "'imagenet'", ")", "\n", "if", "config", ".", "pop", "(", "'quantize'", ",", "False", ")", ":", "\n", "        ", "from", ".", "modules", ".", "quantize", "import", "QConv2d", ",", "QLinear", ",", "RangeBN", "\n", "torch", ".", "nn", ".", "Linear", "=", "QLinear", "\n", "torch", ".", "nn", ".", "Conv2d", "=", "QConv2d", "\n", "torch", ".", "nn", ".", "BatchNorm2d", "=", "RangeBN", "\n", "\n", "", "if", "dataset", "==", "'imagenet'", ":", "\n", "        ", "config", ".", "setdefault", "(", "'num_classes'", ",", "1000", ")", "\n", "num", "=", "config", ".", "pop", "(", "'num'", ",", "169", ")", "\n", "if", "num", "==", "121", ":", "\n", "            ", "config", ".", "update", "(", "dict", "(", "num_init_features", "=", "64", ",", "\n", "growth_rate", "=", "32", ",", "block_config", "=", "(", "6", ",", "12", ",", "24", ",", "16", ")", ")", ")", "\n", "", "elif", "num", "==", "169", ":", "\n", "            ", "config", ".", "update", "(", "dict", "(", "num_init_features", "=", "64", ",", "\n", "growth_rate", "=", "32", ",", "block_config", "=", "(", "6", ",", "12", ",", "32", ",", "32", ")", ")", ")", "\n", "", "elif", "num", "==", "201", ":", "\n", "            ", "config", ".", "update", "(", "dict", "(", "num_init_features", "=", "64", ",", "\n", "growth_rate", "=", "32", ",", "block_config", "=", "(", "6", ",", "12", ",", "48", ",", "32", ")", ")", ")", "\n", "", "elif", "num", "==", "161", ":", "\n", "            ", "config", ".", "update", "(", "dict", "(", "num_init_features", "=", "96", ",", "\n", "growth_rate", "=", "48", ",", "block_config", "=", "(", "6", ",", "12", ",", "36", ",", "24", ")", ")", ")", "\n", "\n", "", "return", "DenseNet_imagenet", "(", "**", "config", ")", "\n", "\n", "", "elif", "dataset", "==", "'cifar10'", ":", "\n", "        ", "config", ".", "setdefault", "(", "'num_classes'", ",", "10", ")", "\n", "config", ".", "setdefault", "(", "'growth_rate'", ",", "12", ")", "\n", "config", ".", "setdefault", "(", "'num_init_features'", ",", "2", "*", "config", "[", "'growth_rate'", "]", ")", "\n", "depth", "=", "config", ".", "pop", "(", "'depth'", ",", "100", ")", "\n", "N", "=", "(", "depth", "-", "4", ")", "//", "6", "\n", "config", "[", "'block_config'", "]", "=", "(", "N", ",", "N", ",", "N", ")", "\n", "return", "DenseNet_cifar", "(", "**", "config", ")", "\n", "\n", "", "elif", "dataset", "==", "'cifar100'", ":", "\n", "        ", "config", ".", "setdefault", "(", "'num_classes'", ",", "100", ")", "\n", "config", ".", "setdefault", "(", "'growth_rate'", ",", "12", ")", "\n", "config", ".", "setdefault", "(", "'num_init_features'", ",", "2", "*", "config", "[", "'growth_rate'", "]", ")", "\n", "depth", "=", "config", ".", "pop", "(", "'depth'", ",", "100", ")", "\n", "N", "=", "(", "depth", "-", "4", ")", "//", "6", "\n", "config", "[", "'block_config'", "]", "=", "(", "N", ",", "N", ",", "N", ")", "\n", "return", "DenseNet_cifar", "(", "**", "config", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.alexnet.AlexNetOWT_BN.__init__": [[9, 68], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torchvision.Normalize", "torch.Conv2d", "torch.MaxPool2d", "torch.BatchNorm2d", "torch.ReLU", "torch.Conv2d", "torch.MaxPool2d", "torch.ReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.ReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.ReLU", "torch.BatchNorm2d", "torch.Conv2d", "torch.MaxPool2d", "torch.ReLU", "torch.BatchNorm2d", "torch.Linear", "torch.BatchNorm1d", "torch.ReLU", "torch.Dropout", "torch.Linear", "torch.BatchNorm1d", "torch.ReLU", "torch.Dropout", "torch.Linear", "torchvision.Compose", "torchvision.Compose", "torchvision.Resize", "torchvision.RandomCrop", "torchvision.RandomHorizontalFlip", "torchvision.ToTensor", "torchvision.Resize", "torchvision.CenterCrop", "torchvision.ToTensor"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "1000", ")", ":", "\n", "        ", "super", "(", "AlexNetOWT_BN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "11", ",", "stride", "=", "4", ",", "padding", "=", "2", ",", "\n", "bias", "=", "False", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "64", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "64", ",", "192", ",", "kernel_size", "=", "5", ",", "padding", "=", "2", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "192", ")", ",", "\n", "nn", ".", "Conv2d", "(", "192", ",", "384", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "384", ")", ",", "\n", "nn", ".", "Conv2d", "(", "384", ",", "256", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", ",", "\n", "nn", ".", "Conv2d", "(", "256", ",", "256", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "256", ")", "\n", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "256", "*", "6", "*", "6", ",", "4096", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "4096", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", "0.5", ")", ",", "\n", "nn", ".", "Linear", "(", "4096", ",", "4096", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm1d", "(", "4096", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Dropout", "(", "0.5", ")", ",", "\n", "nn", ".", "Linear", "(", "4096", ",", "num_classes", ")", "\n", ")", "\n", "\n", "self", ".", "regime", "=", "[", "\n", "{", "'epoch'", ":", "0", ",", "'optimizer'", ":", "'SGD'", ",", "'lr'", ":", "1e-2", ",", "\n", "'weight_decay'", ":", "5e-4", ",", "'momentum'", ":", "0.9", "}", ",", "\n", "{", "'epoch'", ":", "10", ",", "'lr'", ":", "5e-3", "}", ",", "\n", "{", "'epoch'", ":", "15", ",", "'lr'", ":", "1e-3", ",", "'weight_decay'", ":", "0", "}", ",", "\n", "{", "'epoch'", ":", "20", ",", "'lr'", ":", "5e-4", "}", ",", "\n", "{", "'epoch'", ":", "25", ",", "'lr'", ":", "1e-4", "}", "\n", "]", "\n", "normalize", "=", "transforms", ".", "Normalize", "(", "mean", "=", "[", "0.485", ",", "0.456", ",", "0.406", "]", ",", "\n", "std", "=", "[", "0.229", ",", "0.224", ",", "0.225", "]", ")", "\n", "self", ".", "data_regime", "=", "[", "{", "\n", "'transform'", ":", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "256", ")", ",", "\n", "transforms", ".", "RandomCrop", "(", "224", ")", ",", "\n", "transforms", ".", "RandomHorizontalFlip", "(", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", "]", ")", "\n", "}", "]", "\n", "self", ".", "data_eval_regime", "=", "[", "{", "\n", "'transform'", ":", "transforms", ".", "Compose", "(", "[", "\n", "transforms", ".", "Resize", "(", "256", ")", ",", "\n", "transforms", ".", "CenterCrop", "(", "224", ")", ",", "\n", "transforms", ".", "ToTensor", "(", ")", ",", "\n", "normalize", "]", ")", "\n", "}", "]", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.alexnet.AlexNetOWT_BN.forward": [[69, 74], ["alexnet.AlexNetOWT_BN.features", "alexnet.AlexNetOWT_BN.view", "alexnet.AlexNetOWT_BN.classifier"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.ResNet.features"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "-", "1", ",", "256", "*", "6", "*", "6", ")", "\n", "x", "=", "self", ".", "classifier", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.alexnet.alexnet": [[76, 79], ["getattr", "alexnet.AlexNetOWT_BN"], "function", ["None"], ["", "", "def", "alexnet", "(", "**", "kwargs", ")", ":", "\n", "    ", "num_classes", "=", "getattr", "(", "kwargs", ",", "'num_classes'", ",", "1000", ")", "\n", "return", "AlexNetOWT_BN", "(", "num_classes", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnext.ResNeXt_imagenet.__init__": [[12, 17], ["resnet.ResNet_imagenet.__init__"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "width", "=", "[", "128", ",", "256", ",", "512", ",", "1024", "]", ",", "groups", "=", "[", "32", ",", "32", ",", "32", ",", "32", "]", ",", "expansion", "=", "2", ",", "**", "kwargs", ")", ":", "\n", "        ", "kwargs", "[", "'width'", "]", "=", "width", "\n", "kwargs", "[", "'groups'", "]", "=", "groups", "\n", "kwargs", "[", "'expansion'", "]", "=", "expansion", "\n", "super", "(", "ResNeXt_imagenet", ",", "self", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnext.ResNeXt_cifar.__init__": [[20, 24], ["resnet.ResNet_cifar.__init__"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "width", "=", "[", "64", ",", "128", ",", "256", "]", ",", "groups", "=", "[", "4", ",", "8", ",", "16", "]", ",", "**", "kwargs", ")", ":", "\n", "        ", "kwargs", "[", "'width'", "]", "=", "width", "\n", "kwargs", "[", "'groups'", "]", "=", "groups", "\n", "super", "(", "ResNeXt_cifar", ",", "self", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnext.resnext": [[25, 52], ["config.pop", "config.setdefault", "config.pop", "resnext.ResNeXt_imagenet", "config.update", "config.update", "config.update", "config.update", "config.update", "config.setdefault", "config.setdefault", "resnext.ResNeXt_cifar", "dict", "dict", "dict", "dict", "dict", "config.setdefault", "config.setdefault", "resnext.ResNeXt_cifar"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.update", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.update", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.update", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.update", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.optim.MultiOptimRegime.update"], ["", "", "def", "resnext", "(", "**", "config", ")", ":", "\n", "    ", "dataset", "=", "config", ".", "pop", "(", "'dataset'", ",", "'imagenet'", ")", "\n", "if", "dataset", "==", "'imagenet'", ":", "\n", "        ", "config", ".", "setdefault", "(", "'num_classes'", ",", "1000", ")", "\n", "depth", "=", "config", ".", "pop", "(", "'depth'", ",", "50", ")", "\n", "if", "depth", "==", "18", ":", "\n", "            ", "config", ".", "update", "(", "dict", "(", "block", "=", "BasicBlock", ",", "layers", "=", "[", "2", ",", "2", ",", "2", ",", "2", "]", ")", ")", "\n", "", "if", "depth", "==", "34", ":", "\n", "            ", "config", ".", "update", "(", "dict", "(", "block", "=", "BasicBlock", ",", "layers", "=", "[", "3", ",", "4", ",", "6", ",", "3", "]", ")", ")", "\n", "", "if", "depth", "==", "50", ":", "\n", "            ", "config", ".", "update", "(", "dict", "(", "block", "=", "Bottleneck", ",", "layers", "=", "[", "3", ",", "4", ",", "6", ",", "3", "]", ")", ")", "\n", "", "if", "depth", "==", "101", ":", "\n", "            ", "config", ".", "update", "(", "dict", "(", "block", "=", "Bottleneck", ",", "layers", "=", "[", "3", ",", "4", ",", "23", ",", "3", "]", ")", ")", "\n", "", "if", "depth", "==", "152", ":", "\n", "            ", "config", ".", "update", "(", "dict", "(", "block", "=", "Bottleneck", ",", "layers", "=", "[", "3", ",", "8", ",", "36", ",", "3", "]", ")", ")", "\n", "\n", "", "return", "ResNeXt_imagenet", "(", "**", "config", ")", "\n", "\n", "", "elif", "dataset", "==", "'cifar10'", ":", "\n", "        ", "config", ".", "setdefault", "(", "'num_classes'", ",", "10", ")", "\n", "config", ".", "setdefault", "(", "'depth'", ",", "44", ")", "\n", "return", "ResNeXt_cifar", "(", "block", "=", "BasicBlock", ",", "**", "config", ")", "\n", "\n", "", "elif", "dataset", "==", "'cifar100'", ":", "\n", "        ", "config", ".", "setdefault", "(", "'num_classes'", ",", "100", ")", "\n", "config", ".", "setdefault", "(", "'depth'", ",", "44", ")", "\n", "return", "ResNeXt_cifar", "(", "block", "=", "BasicBlock", ",", "**", "config", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnext.resnext_se": [[53, 56], ["resnext.resnext"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnext.resnext"], ["", "", "def", "resnext_se", "(", "**", "config", ")", ":", "\n", "    ", "config", "[", "'residual_block'", "]", "=", "SEBlock", "\n", "return", "resnext", "(", "**", "config", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.googlenet.Inception_v1_GoogLeNet.__init__": [[13, 64], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "collections.OrderedDict", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "googlenet.InceptionModule", "googlenet.InceptionModule", "torch.MaxPool2d", "torch.MaxPool2d", "googlenet.InceptionModule", "googlenet.InceptionModule", "googlenet.InceptionModule", "googlenet.InceptionModule", "googlenet.InceptionModule", "torch.MaxPool2d", "torch.MaxPool2d", "googlenet.InceptionModule", "googlenet.InceptionModule", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Dropout", "torch.Dropout", "collections.OrderedDict", "collections.OrderedDict", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["def", "__init__", "(", "self", ",", "num_classes", "=", "1000", ")", ":", "\n", "        ", "super", "(", "Inception_v1_GoogLeNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "\n", "OrderedDict", "(", "[", "\n", "(", "'conv1'", ",", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'7x7_s2'", ",", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "(", "7", ",", "7", ")", ",", "(", "2", ",", "2", ")", ",", "(", "3", ",", "3", ")", ",", "bias", "=", "False", ")", ")", ",", "\n", "(", "'7x7_s2_bn'", ",", "nn", ".", "BatchNorm2d", "(", "64", ",", "affine", "=", "True", ")", ")", ",", "\n", "(", "'relu1'", ",", "nn", ".", "ReLU", "(", "True", ")", ")", ",", "\n", "(", "'pool1'", ",", "nn", ".", "MaxPool2d", "(", "(", "3", ",", "3", ")", ",", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", ")", "\n", "]", ")", ")", ")", ",", "\n", "\n", "(", "'conv2'", ",", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'3x3_reduce'", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "(", "1", ",", "1", ")", ",", "(", "1", ",", "1", ")", ",", "(", "0", ",", "0", ")", ",", "bias", "=", "False", ")", ")", ",", "\n", "(", "'3x3_reduce_bn'", ",", "nn", ".", "BatchNorm2d", "(", "64", ",", "affine", "=", "True", ")", ")", ",", "\n", "(", "'relu1'", ",", "nn", ".", "ReLU", "(", "True", ")", ")", ",", "\n", "(", "'3x3'", ",", "nn", ".", "Conv2d", "(", "64", ",", "192", ",", "(", "3", ",", "3", ")", ",", "(", "1", ",", "1", ")", ",", "(", "1", ",", "1", ")", ",", "bias", "=", "False", ")", ")", ",", "\n", "(", "'3x3_bn'", ",", "nn", ".", "BatchNorm2d", "(", "192", ",", "affine", "=", "True", ")", ")", ",", "\n", "(", "'relu2'", ",", "nn", ".", "ReLU", "(", "True", ")", ")", ",", "\n", "(", "'pool2'", ",", "nn", ".", "MaxPool2d", "(", "(", "3", ",", "3", ")", ",", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", ")", "\n", "]", ")", ")", ")", ",", "\n", "\n", "(", "'inception_3a'", ",", "InceptionModule", "(", "192", ",", "64", ",", "96", ",", "128", ",", "16", ",", "32", ",", "32", ")", ")", ",", "\n", "(", "'inception_3b'", ",", "InceptionModule", "(", "256", ",", "128", ",", "128", ",", "192", ",", "32", ",", "96", ",", "64", ")", ")", ",", "\n", "\n", "(", "'pool3'", ",", "nn", ".", "MaxPool2d", "(", "(", "3", ",", "3", ")", ",", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", ")", ",", "\n", "\n", "(", "'inception_4a'", ",", "InceptionModule", "(", "480", ",", "192", ",", "96", ",", "208", ",", "16", ",", "48", ",", "64", ")", ")", ",", "\n", "(", "'inception_4b'", ",", "InceptionModule", "(", "512", ",", "160", ",", "112", ",", "224", ",", "24", ",", "64", ",", "64", ")", ")", ",", "\n", "(", "'inception_4c'", ",", "InceptionModule", "(", "512", ",", "128", ",", "128", ",", "256", ",", "24", ",", "64", ",", "64", ")", ")", ",", "\n", "(", "'inception_4d'", ",", "InceptionModule", "(", "512", ",", "112", ",", "144", ",", "288", ",", "32", ",", "64", ",", "64", ")", ")", ",", "\n", "(", "'inception_4e'", ",", "InceptionModule", "(", "528", ",", "256", ",", "160", ",", "320", ",", "32", ",", "128", ",", "128", ")", ")", ",", "\n", "\n", "(", "'pool4'", ",", "nn", ".", "MaxPool2d", "(", "(", "3", ",", "3", ")", ",", "(", "2", ",", "2", ")", ",", "padding", "=", "(", "1", ",", "1", ")", ")", ")", ",", "\n", "\n", "(", "'inception_5a'", ",", "InceptionModule", "(", "832", ",", "256", ",", "160", ",", "320", ",", "32", ",", "128", ",", "128", ")", ")", ",", "\n", "(", "'inception_5b'", ",", "InceptionModule", "(", "832", ",", "384", ",", "192", ",", "384", ",", "48", ",", "128", ",", "128", ")", ")", ",", "\n", "\n", "(", "'pool5'", ",", "nn", ".", "AvgPool2d", "(", "(", "7", ",", "7", ")", ",", "(", "1", ",", "1", ")", ")", ")", ",", "\n", "\n", "(", "'drop5'", ",", "nn", ".", "Dropout", "(", "0.2", ")", ")", "\n", "]", ")", ")", "\n", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "1024", ",", "self", ".", "num_classes", ")", "\n", "\n", "self", ".", "regime", "=", "[", "\n", "{", "'epoch'", ":", "0", ",", "'optimizer'", ":", "'SGD'", ",", "'lr'", ":", "1e-1", ",", "\n", "'weight_decay'", ":", "1e-4", ",", "'momentum'", ":", "0.9", "}", ",", "\n", "{", "'epoch'", ":", "30", ",", "'lr'", ":", "1e-2", "}", ",", "\n", "{", "'epoch'", ":", "60", ",", "'lr'", ":", "1e-3", ",", "'weight_decay'", ":", "0", "}", ",", "\n", "{", "'epoch'", ":", "90", ",", "'lr'", ":", "1e-3", ",", "'optimizer'", ":", "'Adam'", "}", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.googlenet.Inception_v1_GoogLeNet.forward": [[66, 71], ["googlenet.Inception_v1_GoogLeNet.features", "googlenet.Inception_v1_GoogLeNet.view", "googlenet.Inception_v1_GoogLeNet.classifier", "googlenet.Inception_v1_GoogLeNet.size"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.models.resnet.ResNet.features"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "features", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "classifier", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.googlenet.InceptionModule.__init__": [[73, 112], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "collections.OrderedDict", "collections.OrderedDict", "collections.OrderedDict", "collections.OrderedDict", "container.named_children", "googlenet.InceptionModule.add_module", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "inplane", ",", "outplane_a1x1", ",", "outplane_b3x3_reduce", ",", "outplane_b3x3", ",", "outplane_c5x5_reduce", ",", "outplane_c5x5", ",", "\n", "outplane_pool_proj", ")", ":", "\n", "        ", "super", "(", "InceptionModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "a", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'1x1'", ",", "nn", ".", "Conv2d", "(", "inplane", ",", "outplane_a1x1", ",", "(", "1", ",", "1", ")", ",", "(", "1", ",", "1", ")", ",", "(", "0", ",", "0", ")", ",", "bias", "=", "False", ")", ")", ",", "\n", "(", "'1x1_bn'", ",", "nn", ".", "BatchNorm2d", "(", "outplane_a1x1", ",", "affine", "=", "True", ")", ")", ",", "\n", "(", "'1x1_relu'", ",", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "]", ")", ")", "\n", "\n", "b", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'3x3_reduce'", ",", "nn", ".", "Conv2d", "(", "inplane", ",", "outplane_b3x3_reduce", ",", "(", "1", ",", "1", ")", ",", "(", "1", ",", "1", ")", ",", "(", "0", ",", "0", ")", ",", "bias", "=", "False", ")", ")", ",", "\n", "(", "'3x3_reduce_bn'", ",", "nn", ".", "BatchNorm2d", "(", "outplane_b3x3_reduce", ",", "affine", "=", "True", ")", ")", ",", "\n", "(", "'3x3_relu1'", ",", "nn", ".", "ReLU", "(", "True", ")", ")", ",", "\n", "(", "'3x3'", ",", "nn", ".", "Conv2d", "(", "outplane_b3x3_reduce", ",", "outplane_b3x3", ",", "(", "3", ",", "3", ")", ",", "(", "1", ",", "1", ")", ",", "(", "1", ",", "1", ")", ",", "bias", "=", "False", ")", ")", ",", "\n", "(", "'3x3_bn'", ",", "nn", ".", "BatchNorm2d", "(", "outplane_b3x3", ",", "affine", "=", "True", ")", ")", ",", "\n", "(", "'3x3_relu2'", ",", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "]", ")", ")", "\n", "\n", "c", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'5x5_reduce'", ",", "nn", ".", "Conv2d", "(", "inplane", ",", "outplane_c5x5_reduce", ",", "(", "1", ",", "1", ")", ",", "(", "1", ",", "1", ")", ",", "(", "0", ",", "0", ")", ",", "bias", "=", "False", ")", ")", ",", "\n", "(", "'5x5_reduce_bn'", ",", "nn", ".", "BatchNorm2d", "(", "outplane_c5x5_reduce", ",", "affine", "=", "True", ")", ")", ",", "\n", "(", "'5x5_relu1'", ",", "nn", ".", "ReLU", "(", "True", ")", ")", ",", "\n", "(", "'5x5'", ",", "nn", ".", "Conv2d", "(", "outplane_c5x5_reduce", ",", "outplane_c5x5", ",", "(", "5", ",", "5", ")", ",", "(", "1", ",", "1", ")", ",", "(", "2", ",", "2", ")", ",", "bias", "=", "False", ")", ")", ",", "\n", "(", "'5x5_bn'", ",", "nn", ".", "BatchNorm2d", "(", "outplane_c5x5", ",", "affine", "=", "True", ")", ")", ",", "\n", "(", "'5x5_relu2'", ",", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "]", ")", ")", "\n", "\n", "d", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'pool_pool'", ",", "nn", ".", "MaxPool2d", "(", "(", "3", ",", "3", ")", ",", "(", "1", ",", "1", ")", ",", "(", "1", ",", "1", ")", ")", ")", ",", "\n", "(", "'pool_proj'", ",", "nn", ".", "Conv2d", "(", "inplane", ",", "outplane_pool_proj", ",", "(", "1", ",", "1", ")", ",", "(", "1", ",", "1", ")", ",", "(", "0", ",", "0", ")", ")", ")", ",", "\n", "(", "'pool_proj_bn'", ",", "nn", ".", "BatchNorm2d", "(", "outplane_pool_proj", ",", "affine", "=", "True", ")", ")", ",", "\n", "(", "'pool_relu'", ",", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "]", ")", ")", "\n", "\n", "for", "container", "in", "[", "a", ",", "b", ",", "c", ",", "d", "]", ":", "\n", "            ", "for", "name", ",", "module", "in", "container", ".", "named_children", "(", ")", ":", "\n", "                ", "self", ".", "add_module", "(", "name", ",", "module", ")", "\n", "\n", "", "", "self", ".", "branches", "=", "[", "a", ",", "b", ",", "c", ",", "d", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.googlenet.InceptionModule.forward": [[113, 115], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "branch"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "torch", ".", "cat", "(", "[", "branch", "(", "input", ")", "for", "branch", "in", "self", ".", "branches", "]", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.models.googlenet.googlenet": [[117, 120], ["getattr", "googlenet.Inception_v1_GoogLeNet"], "function", ["None"], ["", "", "def", "googlenet", "(", "**", "kwargs", ")", ":", "\n", "    ", "num_classes", "=", "getattr", "(", "kwargs", ",", "'num_classes'", ",", "1000", ")", "\n", "return", "Inception_v1_GoogLeNet", "(", "num_classes", ")", "", "", ""]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.fixed_proj.HadamardProj.__init__": [[9, 35], ["torch.Module.__init__", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "int", "scipy.linalg.hadamard", "torch.autograd.Variable", "torch.autograd.Variable", "torch.Parameter", "torch.Parameter", "math.sqrt", "torch.autograd.Variable", "torch.autograd.Variable", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "fixed_proj.HadamardProj.register_parameter", "math.ceil", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "torch.Tensor().uniform_", "math.log", "max", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "output_size", ",", "bias", "=", "True", ",", "fixed_weights", "=", "True", ",", "fixed_scale", "=", "None", ")", ":", "\n", "        ", "super", "(", "HadamardProj", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "output_size", "=", "output_size", "\n", "self", ".", "input_size", "=", "input_size", "\n", "sz", "=", "2", "**", "int", "(", "math", ".", "ceil", "(", "math", ".", "log", "(", "max", "(", "input_size", ",", "output_size", ")", ",", "2", ")", ")", ")", "\n", "mat", "=", "torch", ".", "from_numpy", "(", "hadamard", "(", "sz", ")", ")", "\n", "if", "fixed_weights", ":", "\n", "            ", "self", ".", "proj", "=", "Variable", "(", "mat", ",", "requires_grad", "=", "False", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "proj", "=", "nn", ".", "Parameter", "(", "mat", ")", "\n", "\n", "", "init_scale", "=", "1.", "/", "math", ".", "sqrt", "(", "self", ".", "output_size", ")", "\n", "\n", "if", "fixed_scale", "is", "not", "None", ":", "\n", "            ", "self", ".", "scale", "=", "Variable", "(", "torch", ".", "Tensor", "(", "\n", "[", "fixed_scale", "]", ")", ",", "requires_grad", "=", "False", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "scale", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "[", "init_scale", "]", ")", ")", "\n", "\n", "", "if", "bias", ":", "\n", "            ", "self", ".", "bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "\n", "output_size", ")", ".", "uniform_", "(", "-", "init_scale", ",", "init_scale", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "register_parameter", "(", "'bias'", ",", "None", ")", "\n", "\n", "", "self", ".", "eps", "=", "1e-8", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.fixed_proj.HadamardProj.forward": [[36, 47], ["fixed_proj.HadamardProj.proj.type_as", "isinstance", "fixed_proj.HadamardProj.scale.type_as", "torch.functional.linear", "torch.functional.linear", "x.norm", "fixed_proj.HadamardProj.bias.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "not", "isinstance", "(", "self", ".", "scale", ",", "nn", ".", "Parameter", ")", ":", "\n", "            ", "self", ".", "scale", "=", "self", ".", "scale", ".", "type_as", "(", "x", ")", "\n", "", "x", "=", "x", "/", "(", "x", ".", "norm", "(", "2", ",", "-", "1", ",", "keepdim", "=", "True", ")", "+", "self", ".", "eps", ")", "\n", "w", "=", "self", ".", "proj", ".", "type_as", "(", "x", ")", "\n", "\n", "out", "=", "-", "self", ".", "scale", "*", "nn", ".", "functional", ".", "linear", "(", "x", ",", "w", "[", ":", "self", ".", "output_size", ",", ":", "self", ".", "input_size", "]", ")", "\n", "if", "self", ".", "bias", "is", "not", "None", ":", "\n", "            ", "out", "=", "out", "+", "self", ".", "bias", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.fixed_proj.Proj.__init__": [[51, 61], ["torch.Module.__init__", "torch.autograd.Variable", "torch.autograd.Variable", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.manual_seed", "torch.init.orthogonal", "torch.init.orthogonal", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "output_size", ",", "bias", "=", "True", ",", "init_scale", "=", "10", ")", ":", "\n", "        ", "super", "(", "Proj", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "init_scale", "is", "not", "None", ":", "\n", "            ", "self", ".", "weight", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "1", ")", ".", "fill_", "(", "init_scale", ")", ")", "\n", "", "if", "bias", ":", "\n", "            ", "self", ".", "bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "output_size", ")", ".", "fill_", "(", "0", ")", ")", "\n", "", "self", ".", "proj", "=", "Variable", "(", "torch", ".", "Tensor", "(", "\n", "output_size", ",", "input_size", ")", ",", "requires_grad", "=", "False", ")", "\n", "torch", ".", "manual_seed", "(", "123", ")", "\n", "nn", ".", "init", ".", "orthogonal", "(", "self", ".", "proj", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.fixed_proj.Proj.forward": [[62, 71], ["fixed_proj.Proj.proj.type_as", "torch.functional.linear", "torch.functional.linear", "hasattr", "hasattr", "x.norm", "fixed_proj.Proj.bias.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "w", "=", "self", ".", "proj", ".", "type_as", "(", "x", ")", "\n", "x", "=", "x", "/", "x", ".", "norm", "(", "2", ",", "-", "1", ",", "keepdim", "=", "True", ")", "\n", "out", "=", "nn", ".", "functional", ".", "linear", "(", "x", ",", "w", ")", "\n", "if", "hasattr", "(", "self", ",", "'weight'", ")", ":", "\n", "            ", "out", "=", "out", "*", "self", ".", "weight", "\n", "", "if", "hasattr", "(", "self", ",", "'bias'", ")", ":", "\n", "            ", "out", "=", "out", "+", "self", ".", "bias", ".", "view", "(", "1", ",", "-", "1", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.fixed_proj.LinearFixed.__init__": [[74, 77], ["torch.Linear.__init__", "torch.Parameter", "torch.Parameter", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor().fill_", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "input_size", ",", "output_size", ",", "bias", "=", "True", ",", "init_scale", "=", "10", ")", ":", "\n", "        ", "super", "(", "LinearFixed", ",", "self", ")", ".", "__init__", "(", "input_size", ",", "output_size", ",", "bias", ")", "\n", "self", ".", "scale", "=", "nn", ".", "Parameter", "(", "torch", ".", "Tensor", "(", "1", ")", ".", "fill_", "(", "init_scale", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.fixed_proj.LinearFixed.forward": [[78, 83], ["torch.functional.linear", "torch.functional.linear", "fixed_proj.LinearFixed.weight.norm", "x.norm"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "w", "=", "self", ".", "weight", "/", "self", ".", "weight", ".", "norm", "(", "2", ",", "-", "1", ",", "keepdim", "=", "True", ")", "\n", "x", "=", "x", "/", "x", ".", "norm", "(", "2", ",", "-", "1", ",", "keepdim", "=", "True", ")", "\n", "out", "=", "nn", ".", "functional", ".", "linear", "(", "x", ",", "w", ",", "self", ".", "bias", ")", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.fixup.ZIConv2d.__init__": [[16, 33], ["torch.Conv2d.__init__", "torch.Parameter", "torch.Parameter", "fixup.ZIConv2d.register_parameter", "torch.Parameter", "torch.Parameter", "fixup.ZIConv2d.register_parameter", "torch.Parameter", "torch.Parameter", "fixup.ZIConv2d.register_parameter", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "1", ",", "\n", "padding", "=", "0", ",", "dilation", "=", "1", ",", "groups", "=", "1", ",", "bias", "=", "False", ",", "\n", "multiplier", "=", "False", ",", "pre_bias", "=", "True", ",", "post_bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "ZIConv2d", ",", "self", ")", ".", "__init__", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", ",", "\n", "padding", ",", "dilation", ",", "groups", ",", "bias", ")", "\n", "if", "pre_bias", ":", "\n", "            ", "self", ".", "pre_bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "tensor", "(", "[", "0.", "]", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "register_parameter", "(", "'pre_bias'", ",", "None", ")", "\n", "", "if", "post_bias", ":", "\n", "            ", "self", ".", "post_bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "tensor", "(", "[", "0.", "]", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "register_parameter", "(", "'post_bias'", ",", "None", ")", "\n", "", "if", "multiplier", ":", "\n", "            ", "self", ".", "multiplier", "=", "nn", ".", "Parameter", "(", "torch", ".", "tensor", "(", "[", "1.", "]", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "register_parameter", "(", "'multiplier'", ",", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.fixup.ZIConv2d.forward": [[34, 42], ["fixup._sum_tensor_scalar", "torch.functional.conv2d", "torch.functional.conv2d"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.fixup._sum_tensor_scalar"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "pre_bias", "is", "not", "None", ":", "\n", "            ", "x", "=", "x", "+", "self", ".", "pre_bias", "\n", "", "weight", "=", "self", ".", "weight", "if", "self", ".", "multiplier", "is", "None", "else", "self", ".", "weight", "*", "self", ".", "multiplier", "\n", "bias", "=", "_sum_tensor_scalar", "(", "self", ".", "bias", ",", "self", ".", "post_bias", ",", "self", ".", "out_channels", ")", "\n", "return", "nn", ".", "functional", ".", "conv2d", "(", "x", ",", "weight", ",", "bias", ",", "self", ".", "stride", ",", "\n", "self", ".", "padding", ",", "self", ".", "dilation", ",", "self", ".", "groups", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.fixup.ZILinear.__init__": [[45, 60], ["torch.Linear.__init__", "torch.Parameter", "torch.Parameter", "fixup.ZILinear.register_parameter", "torch.Parameter", "torch.Parameter", "fixup.ZILinear.register_parameter", "torch.Parameter", "torch.Parameter", "fixup.ZILinear.register_parameter", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_features", ",", "out_features", ",", "bias", "=", "False", ",", "\n", "multiplier", "=", "False", ",", "pre_bias", "=", "True", ",", "post_bias", "=", "True", ")", ":", "\n", "        ", "super", "(", "ZILinear", ",", "self", ")", ".", "__init__", "(", "in_features", ",", "out_features", ",", "bias", ")", "\n", "if", "pre_bias", ":", "\n", "            ", "self", ".", "pre_bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "tensor", "(", "[", "0.", "]", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "register_parameter", "(", "'pre_bias'", ",", "None", ")", "\n", "", "if", "post_bias", ":", "\n", "            ", "self", ".", "post_bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "tensor", "(", "[", "0.", "]", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "register_parameter", "(", "'post_bias'", ",", "None", ")", "\n", "", "if", "multiplier", ":", "\n", "            ", "self", ".", "multiplier", "=", "nn", ".", "Parameter", "(", "torch", ".", "tensor", "(", "[", "1.", "]", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "register_parameter", "(", "'multiplier'", ",", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.fixup.ZILinear.forward": [[61, 68], ["fixup._sum_tensor_scalar", "torch.functional.linear", "torch.functional.linear"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.fixup._sum_tensor_scalar"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "pre_bias", "is", "not", "None", ":", "\n", "            ", "x", "=", "x", "+", "self", ".", "pre_bias", "\n", "", "weight", "=", "self", ".", "weight", "if", "self", ".", "multiplier", "is", "None", "else", "self", ".", "weight", "*", "self", ".", "multiplier", "\n", "bias", "=", "_sum_tensor_scalar", "(", "self", ".", "bias", ",", "self", ".", "post_bias", ",", "self", ".", "out_features", ")", "\n", "return", "nn", ".", "functional", ".", "linear", "(", "x", ",", "weight", ",", "bias", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.fixup._sum_tensor_scalar": [[5, 13], ["scalar.expand().contiguous.expand().contiguous", "scalar.expand().contiguous.expand"], "function", ["None"], ["def", "_sum_tensor_scalar", "(", "tensor", ",", "scalar", ",", "expand_size", ")", ":", "\n", "    ", "if", "scalar", "is", "not", "None", ":", "\n", "        ", "scalar", "=", "scalar", ".", "expand", "(", "expand_size", ")", ".", "contiguous", "(", ")", "\n", "", "else", ":", "\n", "        ", "return", "tensor", "\n", "", "if", "tensor", "is", "None", ":", "\n", "        ", "return", "scalar", "\n", "", "return", "tensor", "+", "scalar", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.bwn.BoundedWeightNorm.__init__": [[47, 50], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "name", ",", "dim", ",", "p", ")", ":", "\n", "        ", "self", ".", "name", "=", "name", "\n", "self", ".", "dim", "=", "dim", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.bwn.BoundedWeightNorm.compute_weight": [[51, 57], ["getattr", "getattr.data.div_", "getattr", "bwn._norm", "bwn._norm"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm._norm", "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm._norm"], ["", "def", "compute_weight", "(", "self", ",", "module", ")", ":", "\n", "\n", "        ", "v", "=", "getattr", "(", "module", ",", "self", ".", "name", "+", "'_v'", ")", "\n", "v", ".", "data", ".", "div_", "(", "_norm", "(", "v", ",", "self", ".", "dim", ")", ")", "\n", "init_norm", "=", "getattr", "(", "module", ",", "self", ".", "name", "+", "'_init_norm'", ")", "\n", "return", "v", "*", "(", "init_norm", "/", "_norm", "(", "v", ",", "self", ".", "dim", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.bwn.BoundedWeightNorm.apply": [[58, 74], ["bwn.BoundedWeightNorm", "getattr", "module.register_buffer", "module.register_parameter", "setattr", "module.register_forward_pre_hook", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "bwn.BoundedWeightNorm.compute_weight", "_norm().data.mean", "bwn._norm"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.bwn.BoundedWeightNorm.compute_weight", "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm._norm"], ["", "@", "staticmethod", "\n", "def", "apply", "(", "module", ",", "name", ",", "dim", ",", "p", ")", ":", "\n", "        ", "fn", "=", "BoundedWeightNorm", "(", "name", ",", "dim", ",", "p", ")", "\n", "\n", "weight", "=", "getattr", "(", "module", ",", "name", ")", "\n", "\n", "# remove w from parameter list", "\n", "del", "module", ".", "_parameters", "[", "name", "]", "\n", "module", ".", "register_buffer", "(", "\n", "name", "+", "'_init_norm'", ",", "torch", ".", "Tensor", "(", "[", "_norm", "(", "weight", ",", "dim", ",", "p", "=", "p", ")", ".", "data", ".", "mean", "(", ")", "]", ")", ")", "\n", "module", ".", "register_parameter", "(", "name", "+", "'_v'", ",", "Parameter", "(", "weight", ".", "data", ")", ")", "\n", "setattr", "(", "module", ",", "name", ",", "fn", ".", "compute_weight", "(", "module", ")", ")", "\n", "\n", "# recompute weight before every forward()", "\n", "module", ".", "register_forward_pre_hook", "(", "fn", ")", "\n", "return", "fn", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.bwn.BoundedWeightNorm.remove": [[75, 80], ["bwn.BoundedWeightNorm.compute_weight", "delattr", "module.register_parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.bwn.BoundedWeightNorm.compute_weight"], ["", "def", "remove", "(", "self", ",", "module", ")", ":", "\n", "        ", "weight", "=", "self", ".", "compute_weight", "(", "module", ")", "\n", "delattr", "(", "module", ",", "self", ".", "name", ")", "\n", "del", "module", ".", "_parameters", "[", "self", ".", "name", "+", "'_v'", "]", "\n", "module", ".", "register_parameter", "(", "self", ".", "name", ",", "Parameter", "(", "weight", ".", "data", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.bwn.BoundedWeightNorm.__call__": [[81, 83], ["setattr", "bwn.BoundedWeightNorm.compute_weight"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.bwn.BoundedWeightNorm.compute_weight"], ["", "def", "__call__", "(", "self", ",", "module", ",", "inputs", ")", ":", "\n", "        ", "setattr", "(", "module", ",", "self", ".", "name", ",", "self", ".", "compute_weight", "(", "module", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.bwn._norm": [[11, 29], ["x.norm", "float", "func().view", "torch.norm", "torch.norm", "func().view", "_norm().transpose", "x.max", "x.min", "x.max", "x.size", "bwn._norm.func"], "function", ["None"], ["def", "_norm", "(", "x", ",", "dim", ",", "p", "=", "2", ")", ":", "\n", "    ", "\"\"\"Computes the norm over all dimensions except dim\"\"\"", "\n", "if", "p", "==", "-", "1", ":", "\n", "        ", "def", "func", "(", "x", ",", "dim", ")", ":", "return", "x", ".", "max", "(", "dim", "=", "dim", ")", "[", "0", "]", "-", "x", ".", "min", "(", "dim", "=", "dim", ")", "[", "0", "]", "\n", "", "elif", "p", "==", "float", "(", "'inf'", ")", ":", "\n", "        ", "def", "func", "(", "x", ",", "dim", ")", ":", "return", "x", ".", "max", "(", "dim", "=", "dim", ")", "[", "0", "]", "\n", "", "else", ":", "\n", "        ", "def", "func", "(", "x", ",", "dim", ")", ":", "return", "torch", ".", "norm", "(", "x", ",", "dim", "=", "dim", ",", "p", "=", "p", ")", "\n", "", "if", "dim", "is", "None", ":", "\n", "        ", "return", "x", ".", "norm", "(", "p", "=", "p", ")", "\n", "", "elif", "dim", "==", "0", ":", "\n", "        ", "output_size", "=", "(", "x", ".", "size", "(", "0", ")", ",", ")", "+", "(", "1", ",", ")", "*", "(", "x", ".", "dim", "(", ")", "-", "1", ")", "\n", "return", "func", "(", "x", ".", "contiguous", "(", ")", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", ",", "1", ")", ".", "view", "(", "*", "output_size", ")", "\n", "", "elif", "dim", "==", "x", ".", "dim", "(", ")", "-", "1", ":", "\n", "        ", "output_size", "=", "(", "1", ",", ")", "*", "(", "x", ".", "dim", "(", ")", "-", "1", ")", "+", "(", "x", ".", "size", "(", "-", "1", ")", ",", ")", "\n", "return", "func", "(", "x", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "x", ".", "size", "(", "-", "1", ")", ")", ",", "0", ")", ".", "view", "(", "*", "output_size", ")", "\n", "", "else", ":", "\n", "        ", "return", "_norm", "(", "x", ".", "transpose", "(", "0", ",", "dim", ")", ",", "0", ")", ".", "transpose", "(", "0", ",", "dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.bwn._mean": [[31, 43], ["p.mean", "p.contiguous().view().mean().view", "p.contiguous().view().mean().view", "_mean().transpose", "p.size", "p.contiguous().view().mean", "p.dim", "p.dim", "p.size", "p.contiguous().view().mean", "bwn._mean", "p.contiguous().view", "p.dim", "p.transpose", "p.size", "p.contiguous().view", "p.contiguous", "p.size", "p.contiguous"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm._mean"], ["", "", "def", "_mean", "(", "p", ",", "dim", ")", ":", "\n", "    ", "\"\"\"Computes the mean over all dimensions except dim\"\"\"", "\n", "if", "dim", "is", "None", ":", "\n", "        ", "return", "p", ".", "mean", "(", ")", "\n", "", "elif", "dim", "==", "0", ":", "\n", "        ", "output_size", "=", "(", "p", ".", "size", "(", "0", ")", ",", ")", "+", "(", "1", ",", ")", "*", "(", "p", ".", "dim", "(", ")", "-", "1", ")", "\n", "return", "p", ".", "contiguous", "(", ")", ".", "view", "(", "p", ".", "size", "(", "0", ")", ",", "-", "1", ")", ".", "mean", "(", "dim", "=", "1", ")", ".", "view", "(", "*", "output_size", ")", "\n", "", "elif", "dim", "==", "p", ".", "dim", "(", ")", "-", "1", ":", "\n", "        ", "output_size", "=", "(", "1", ",", ")", "*", "(", "p", ".", "dim", "(", ")", "-", "1", ")", "+", "(", "p", ".", "size", "(", "-", "1", ")", ",", ")", "\n", "return", "p", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "p", ".", "size", "(", "-", "1", ")", ")", ".", "mean", "(", "dim", "=", "0", ")", ".", "view", "(", "*", "output_size", ")", "\n", "", "else", ":", "\n", "        ", "return", "_mean", "(", "p", ".", "transpose", "(", "0", ",", "dim", ")", ",", "0", ")", ".", "transpose", "(", "0", ",", "dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.bwn.weight_norm": [[85, 125], ["bwn.BoundedWeightNorm.apply"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.bwn.BoundedWeightNorm.apply"], ["", "", "def", "weight_norm", "(", "module", ",", "name", "=", "'weight'", ",", "dim", "=", "0", ",", "p", "=", "2", ")", ":", "\n", "    ", "r\"\"\"Applies weight normalization to a parameter in the given module.\n\n    .. math::\n         \\mathbf{w} = g \\dfrac{\\mathbf{v}}{\\|\\mathbf{v}\\|}\n\n    Weight normalization is a reparameterization that decouples the magnitude\n    of a weight tensor from its direction. This replaces the parameter specified\n    by `name` (e.g. \"weight\") with two parameters: one specifying the magnitude\n    (e.g. \"weight_g\") and one specifying the direction (e.g. \"weight_v\").\n    Weight normalization is implemented via a hook that recomputes the weight\n    tensor from the magnitude and direction before every :meth:`~Module.forward`\n    call.\n\n    By default, with `dim=0`, the norm is computed independently per output\n    channel/plane. To compute a norm over the entire weight tensor, use\n    `dim=None`.\n\n    See https://arxiv.org/abs/1602.07868\n\n    Args:\n        module (nn.Module): containing module\n        name (str, optional): name of weight parameter\n        dim (int, optional): dimension over which to compute the norm\n\n    Returns:\n        The original module with the weight norm hook\n\n    Example::\n\n        >>> m = weight_norm(nn.Linear(20, 40), name='weight')\n        Linear (20 -> 40)\n        >>> m.weight_g.size()\n        torch.Size([40, 1])\n        >>> m.weight_v.size()\n        torch.Size([40, 20])\n\n    \"\"\"", "\n", "BoundedWeightNorm", ".", "apply", "(", "module", ",", "name", ",", "dim", ",", "p", ")", "\n", "return", "module", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.bwn.remove_weight_norm": [[127, 146], ["module._forward_pre_hooks.items", "ValueError", "isinstance", "hook.remove"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.bwn.BoundedWeightNorm.remove"], ["", "def", "remove_weight_norm", "(", "module", ",", "name", "=", "'weight'", ")", ":", "\n", "    ", "r\"\"\"Removes the weight normalization reparameterization from a module.\n\n    Args:\n        module (nn.Module): containing module\n        name (str, optional): name of weight parameter\n\n    Example:\n        >>> m = weight_norm(nn.Linear(20, 40))\n        >>> remove_weight_norm(m)\n    \"\"\"", "\n", "for", "k", ",", "hook", "in", "module", ".", "_forward_pre_hooks", ".", "items", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "hook", ",", "BoundedWeightNorm", ")", "and", "hook", ".", "name", "==", "name", ":", "\n", "            ", "hook", ".", "remove", "(", "module", ")", "\n", "del", "module", ".", "_forward_pre_hooks", "[", "k", "]", "\n", "return", "module", "\n", "\n", "", "", "raise", "ValueError", "(", "\"weight_norm of '{}' not found in {}\"", "\n", ".", "format", "(", "name", ",", "module", ")", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.batch_norm.BatchNorm1d.forward": [[23, 27], ["super().forward", "batch_norm.has_parameters", "batch_norm.has_running_stats"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.forward", "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.batch_norm.has_parameters", "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.batch_norm.has_running_stats"], ["    ", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "if", "not", "(", "has_parameters", "(", "self", ")", "or", "has_running_stats", "(", "self", ")", ")", ":", "\n", "            ", "return", "inputs", "\n", "", "return", "super", "(", "BatchNorm1d", ",", "self", ")", ".", "forward", "(", "inputs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.batch_norm.BatchNorm2d.forward": [[30, 34], ["super().forward", "batch_norm.has_parameters", "batch_norm.has_running_stats"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.forward", "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.batch_norm.has_parameters", "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.batch_norm.has_running_stats"], ["    ", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "if", "not", "(", "has_parameters", "(", "self", ")", "or", "has_running_stats", "(", "self", ")", ")", ":", "\n", "            ", "return", "inputs", "\n", "", "return", "super", "(", "BatchNorm2d", ",", "self", ")", ".", "forward", "(", "inputs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.batch_norm.BatchNorm3d.forward": [[37, 41], ["super().forward", "batch_norm.has_parameters", "batch_norm.has_running_stats"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.forward", "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.batch_norm.has_parameters", "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.batch_norm.has_running_stats"], ["    ", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "if", "not", "(", "has_parameters", "(", "self", ")", "or", "has_running_stats", "(", "self", ")", ")", ":", "\n", "            ", "return", "inputs", "\n", "", "return", "super", "(", "BatchNorm3d", ",", "self", ")", ".", "forward", "(", "inputs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.batch_norm.MeanBatchNorm2d.__init__": [[46, 55], ["torch.Module.__init__", "torch.Module.__init__", "batch_norm.MeanBatchNorm2d.register_buffer", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.Parameter", "torch.Parameter", "batch_norm.MeanBatchNorm2d.register_parameter", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__", "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["def", "__init__", "(", "self", ",", "num_features", ",", "momentum", "=", "0.1", ",", "bias", "=", "True", ")", ":", "\n", "        ", "nn", ".", "Module", ".", "__init__", "(", "self", ")", "\n", "self", ".", "register_buffer", "(", "'running_mean'", ",", "torch", ".", "zeros", "(", "num_features", ")", ")", "\n", "self", ".", "momentum", "=", "momentum", "\n", "self", ".", "num_features", "=", "num_features", "\n", "if", "bias", ":", "\n", "            ", "self", ".", "bias", "=", "nn", ".", "Parameter", "(", "torch", ".", "zeros", "(", "num_features", ")", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "register_parameter", "(", "'bias'", ",", "None", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.batch_norm.MeanBatchNorm2d.forward": [[56, 70], ["mean.view", "batch_norm.has_parameters", "batch_norm.has_running_stats", "x.size", "x.sum", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "batch_norm.MeanBatchNorm2d.running_mean.mul_().add_", "x.size", "x.size", "batch_norm.MeanBatchNorm2d.running_mean.mul_"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.batch_norm.has_parameters", "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.batch_norm.has_running_stats"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "not", "(", "has_parameters", "(", "self", ")", "or", "has_running_stats", "(", "self", ")", ")", ":", "\n", "            ", "return", "x", "\n", "", "if", "self", ".", "training", ":", "\n", "            ", "numel", "=", "x", ".", "size", "(", "0", ")", "*", "x", ".", "size", "(", "2", ")", "*", "x", ".", "size", "(", "3", ")", "\n", "mean", "=", "x", ".", "sum", "(", "(", "0", ",", "2", ",", "3", ")", ")", "/", "numel", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "self", ".", "running_mean", ".", "mul_", "(", "self", ".", "momentum", ")", ".", "add_", "(", "1", "-", "self", ".", "momentum", ",", "mean", ")", "\n", "", "", "else", ":", "\n", "            ", "mean", "=", "self", ".", "running_mean", "\n", "", "if", "self", ".", "bias", "is", "not", "None", ":", "\n", "            ", "mean", "=", "mean", "-", "self", ".", "bias", "\n", "", "return", "x", "-", "mean", ".", "view", "(", "1", ",", "-", "1", ",", "1", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.batch_norm.MeanBatchNorm2d.extra_repr": [[71, 74], ["None"], "methods", ["None"], ["", "def", "extra_repr", "(", "self", ")", ":", "\n", "        ", "return", "'{num_features}, momentum={momentum}, bias={has_bias}'", ".", "format", "(", "\n", "has_bias", "=", "self", ".", "bias", "is", "not", "None", ",", "**", "self", ".", "__dict__", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.batch_norm.has_running_stats": [[12, 15], ["getattr", "getattr"], "function", ["None"], ["def", "has_running_stats", "(", "m", ")", ":", "\n", "    ", "return", "getattr", "(", "m", ",", "'running_mean'", ",", "None", ")", "is", "not", "None", "or", "getattr", "(", "m", ",", "'running_var'", ",", "None", ")", "is", "not", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.batch_norm.has_parameters": [[17, 20], ["getattr", "getattr"], "function", ["None"], ["", "def", "has_parameters", "(", "m", ")", ":", "\n", "    ", "return", "getattr", "(", "m", ",", "'weight'", ",", "None", ")", "is", "not", "None", "or", "getattr", "(", "m", ",", "'bias'", ",", "None", ")", "is", "not", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.se.SEBlock.__init__": [[7, 20], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.ReLU", "torch.ReLU", "torch.Linear", "torch.Linear", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", "=", "None", ",", "ratio", "=", "16", ")", ":", "\n", "        ", "super", "(", "SEBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "if", "out_channels", "is", "None", ":", "\n", "            ", "out_channels", "=", "in_channels", "\n", "", "self", ".", "ratio", "=", "ratio", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "self", ".", "global_pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "transform", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "in_channels", ",", "in_channels", "//", "ratio", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "in_channels", "//", "ratio", ",", "out_channels", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.se.SEBlock.forward": [[22, 26], ["se.SEBlock.global_pool().flatten", "se.SEBlock.transform", "se.SEBlock.unsqueeze().unsqueeze", "se.SEBlock.global_pool", "se.SEBlock.unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_avg", "=", "self", ".", "global_pool", "(", "x", ")", ".", "flatten", "(", "1", ",", "-", "1", ")", "\n", "mask", "=", "self", ".", "transform", "(", "x_avg", ")", "\n", "return", "x", "*", "mask", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.se.SESwishBlock.__init__": [[31, 46], ["torch.Module.__init__", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Sequential", "torch.Sequential", "torch.Linear", "torch.Linear", "torch.Linear", "torch.Linear", "activations.HardSwish", "activations.Swish", "activations.HardSwish", "activations.Swish", "activations.HardSigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", "=", "None", ",", "interm_channels", "=", "None", ",", "ratio", "=", "None", ",", "hard_act", "=", "False", ")", ":", "\n", "        ", "super", "(", "SESwishBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "not", "(", "interm_channels", "is", "None", "and", "ratio", "is", "None", ")", "\n", "interm_channels", "=", "interm_channels", "or", "in_channels", "//", "ratio", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "if", "out_channels", "is", "None", ":", "\n", "            ", "out_channels", "=", "in_channels", "\n", "", "self", ".", "ratio", "=", "ratio", "\n", "self", ".", "activation", "=", "HardSwish", "(", ")", "if", "hard_act", "else", "Swish", "(", ")", ",", "\n", "self", ".", "global_pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "transform", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "in_channels", ",", "interm_channels", ")", ",", "\n", "HardSwish", "(", ")", "if", "hard_act", "else", "Swish", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "interm_channels", ",", "out_channels", ")", ",", "\n", "HardSigmoid", "(", ")", "if", "hard_act", "else", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.se.SESwishBlock.forward": [[48, 52], ["se.SESwishBlock.global_pool().flatten", "se.SESwishBlock.transform", "se.SESwishBlock.unsqueeze().unsqueeze", "se.SESwishBlock.global_pool", "se.SESwishBlock.unsqueeze"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x_avg", "=", "self", ".", "global_pool", "(", "x", ")", ".", "flatten", "(", "1", ",", "-", "1", ")", "\n", "mask", "=", "self", ".", "transform", "(", "x_avg", ")", "\n", "return", "x", "*", "mask", ".", "unsqueeze", "(", "-", "1", ")", ".", "unsqueeze", "(", "-", "1", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.birelu.BiReLUFunction.forward": [[8, 26], ["input.clone.chunk", "pos.clamp_", "neg.clamp_", "ctx.save_for_backward", "RuntimeError", "ctx.mark_dirty", "input.clone", "input.size", "input.size"], "methods", ["None"], ["    ", "@", "staticmethod", "\n", "def", "forward", "(", "ctx", ",", "input", ",", "inplace", "=", "False", ")", ":", "\n", "        ", "if", "input", ".", "size", "(", "1", ")", "%", "2", "!=", "0", ":", "\n", "            ", "raise", "RuntimeError", "(", "\"dimension 1 of input must be multiple of 2, \"", "\n", "\"but got {}\"", ".", "format", "(", "input", ".", "size", "(", "1", ")", ")", ")", "\n", "", "ctx", ".", "inplace", "=", "inplace", "\n", "\n", "if", "ctx", ".", "inplace", ":", "\n", "            ", "ctx", ".", "mark_dirty", "(", "input", ")", "\n", "output", "=", "input", "\n", "", "else", ":", "\n", "            ", "output", "=", "input", ".", "clone", "(", ")", "\n", "\n", "", "pos", ",", "neg", "=", "output", ".", "chunk", "(", "2", ",", "dim", "=", "1", ")", "\n", "pos", ".", "clamp_", "(", "min", "=", "0", ")", "\n", "neg", ".", "clamp_", "(", "max", "=", "0", ")", "\n", "ctx", ".", "save_for_backward", "(", "output", ")", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.birelu.BiReLUFunction.backward": [[27, 32], ["grad_output.masked_fill", "output.eq"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "backward", "(", "ctx", ",", "grad_output", ")", ":", "\n", "        ", "output", ",", "=", "ctx", ".", "saved_variables", "\n", "grad_input", "=", "grad_output", ".", "masked_fill", "(", "output", ".", "eq", "(", "0", ")", ",", "0", ")", "\n", "return", "grad_input", ",", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.birelu.BiReLU.__init__": [[41, 44], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["def", "__init__", "(", "self", ",", "inplace", "=", "False", ")", ":", "\n", "        ", "super", "(", "BiReLU", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "inplace", "=", "inplace", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.birelu.BiReLU.forward": [[45, 47], ["birelu.birelu"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.birelu.birelu"], ["", "def", "forward", "(", "self", ",", "inputs", ")", ":", "\n", "        ", "return", "birelu", "(", "inputs", ",", "inplace", "=", "self", ".", "inplace", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.birelu.birelu": [[34, 36], ["BiReLUFunction().apply", "birelu.BiReLUFunction"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.bwn.BoundedWeightNorm.apply"], ["", "", "def", "birelu", "(", "x", ",", "inplace", "=", "False", ")", ":", "\n", "    ", "return", "BiReLUFunction", "(", ")", ".", "apply", "(", "x", ",", "inplace", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.evolved_modules.ReLUConvBN.__init__": [[133, 140], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", ",", "padding", ",", "affine", "=", "True", ")", ":", "\n", "        ", "super", "(", "ReLUConvBN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "op", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "C_out", ",", "affine", "=", "affine", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.evolved_modules.ReLUConvBN.forward": [[142, 144], ["evolved_modules.ReLUConvBN.op"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "op", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.evolved_modules.DilConv.__init__": [[148, 156], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", ",", "padding", ",", "dilation", ",", "affine", "=", "True", ")", ":", "\n", "        ", "super", "(", "DilConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "op", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "C_in", ",", "C_in", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "dilation", "=", "dilation", ",", "groups", "=", "C_in", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "C_in", ",", "C_out", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "C_out", ",", "affine", "=", "affine", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.evolved_modules.DilConv.forward": [[158, 160], ["evolved_modules.DilConv.op"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "op", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.evolved_modules.SepConv.__init__": [[164, 177], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", ",", "padding", ",", "affine", "=", "True", ")", ":", "\n", "        ", "super", "(", "SepConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "op", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "C_in", ",", "C_in", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "padding", ",", "groups", "=", "C_in", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "C_in", ",", "C_in", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "C_in", ",", "affine", "=", "affine", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "C_in", ",", "C_in", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "1", ",", "\n", "padding", "=", "padding", ",", "groups", "=", "C_in", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "C_in", ",", "C_out", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "C_out", ",", "affine", "=", "affine", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.evolved_modules.SepConv.forward": [[179, 181], ["evolved_modules.SepConv.op"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "op", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.evolved_modules.Identity.__init__": [[185, 187], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Identity", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.evolved_modules.Identity.forward": [[188, 190], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.evolved_modules.FactorizedReduce.__init__": [[194, 203], ["torch.Module.__init__", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "affine", "=", "True", ")", ":", "\n", "        ", "super", "(", "FactorizedReduce", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "C_out", "%", "2", "==", "0", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", "\n", "self", ".", "conv_1", "=", "nn", ".", "Conv2d", "(", "C_in", ",", "C_out", "//", "2", ",", "1", ",", "\n", "stride", "=", "2", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv_2", "=", "nn", ".", "Conv2d", "(", "C_in", ",", "C_out", "//", "2", ",", "1", ",", "\n", "stride", "=", "2", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "C_out", ",", "affine", "=", "affine", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.evolved_modules.FactorizedReduce.forward": [[204, 209], ["evolved_modules.FactorizedReduce.relu", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "evolved_modules.FactorizedReduce.bn", "evolved_modules.FactorizedReduce.conv_1", "evolved_modules.FactorizedReduce.conv_2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "out", "=", "torch", ".", "cat", "(", "[", "self", ".", "conv_1", "(", "x", ")", ",", "self", ".", "conv_2", "(", "x", "[", ":", ",", ":", ",", "1", ":", ",", "1", ":", "]", ")", "]", ",", "dim", "=", "1", ")", "\n", "out", "=", "self", ".", "bn", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.evolved_modules.Cell.__init__": [[222, 237], ["torch.Module.__init__", "evolved_modules.ReLUConvBN", "evolved_modules.Cell._compile", "evolved_modules.FactorizedReduce", "evolved_modules.ReLUConvBN", "zip", "zip"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__", "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.evolved_modules.Cell._compile"], ["    ", "def", "__init__", "(", "self", ",", "genotype", ",", "C_prev_prev", ",", "C_prev", ",", "C", ",", "reduction", ",", "reduction_prev", ")", ":", "\n", "        ", "super", "(", "Cell", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "reduction_prev", ":", "\n", "            ", "self", ".", "preprocess0", "=", "FactorizedReduce", "(", "C_prev_prev", ",", "C", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "preprocess0", "=", "ReLUConvBN", "(", "C_prev_prev", ",", "C", ",", "1", ",", "1", ",", "0", ")", "\n", "", "self", ".", "preprocess1", "=", "ReLUConvBN", "(", "C_prev", ",", "C", ",", "1", ",", "1", ",", "0", ")", "\n", "\n", "if", "reduction", ":", "\n", "            ", "op_names", ",", "indices", "=", "zip", "(", "*", "genotype", ".", "reduce", ")", "\n", "concat", "=", "genotype", ".", "reduce_concat", "\n", "", "else", ":", "\n", "            ", "op_names", ",", "indices", "=", "zip", "(", "*", "genotype", ".", "normal", ")", "\n", "concat", "=", "genotype", ".", "normal_concat", "\n", "", "self", ".", "_compile", "(", "C", ",", "op_names", ",", "indices", ",", "concat", ",", "reduction", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.evolved_modules.Cell._compile": [[238, 250], ["len", "torch.ModuleList", "torch.ModuleList", "zip", "len", "len", "len"], "methods", ["None"], ["", "def", "_compile", "(", "self", ",", "C", ",", "op_names", ",", "indices", ",", "concat", ",", "reduction", ")", ":", "\n", "        ", "assert", "len", "(", "op_names", ")", "==", "len", "(", "indices", ")", "\n", "self", ".", "_steps", "=", "len", "(", "op_names", ")", "//", "2", "\n", "self", ".", "_concat", "=", "concat", "\n", "self", ".", "multiplier", "=", "len", "(", "concat", ")", "\n", "\n", "self", ".", "_ops", "=", "nn", ".", "ModuleList", "(", ")", "\n", "for", "name", ",", "index", "in", "zip", "(", "op_names", ",", "indices", ")", ":", "\n", "            ", "stride", "=", "2", "if", "reduction", "and", "index", "<", "2", "else", "1", "\n", "op", "=", "OPS", "[", "name", "]", "(", "C", ",", "stride", ",", "True", ")", "\n", "self", ".", "_ops", "+=", "[", "op", "]", "\n", "", "self", ".", "_indices", "=", "indices", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.evolved_modules.Cell.forward": [[251, 271], ["evolved_modules.Cell.preprocess0", "evolved_modules.Cell.preprocess1", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "op1", "op2", "isinstance", "evolved_modules.drop_path", "isinstance", "evolved_modules.drop_path"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.evolved_modules.drop_path", "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.evolved_modules.drop_path"], ["", "def", "forward", "(", "self", ",", "s0", ",", "s1", ",", "drop_prob", ")", ":", "\n", "        ", "s0", "=", "self", ".", "preprocess0", "(", "s0", ")", "\n", "s1", "=", "self", ".", "preprocess1", "(", "s1", ")", "\n", "\n", "states", "=", "[", "s0", ",", "s1", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "_steps", ")", ":", "\n", "            ", "h1", "=", "states", "[", "self", ".", "_indices", "[", "2", "*", "i", "]", "]", "\n", "h2", "=", "states", "[", "self", ".", "_indices", "[", "2", "*", "i", "+", "1", "]", "]", "\n", "op1", "=", "self", ".", "_ops", "[", "2", "*", "i", "]", "\n", "op2", "=", "self", ".", "_ops", "[", "2", "*", "i", "+", "1", "]", "\n", "h1", "=", "op1", "(", "h1", ")", "\n", "h2", "=", "op2", "(", "h2", ")", "\n", "if", "self", ".", "training", "and", "drop_prob", ">", "0.", ":", "\n", "                ", "if", "not", "isinstance", "(", "op1", ",", "Identity", ")", ":", "\n", "                    ", "h1", "=", "drop_path", "(", "h1", ",", "drop_prob", ")", "\n", "", "if", "not", "isinstance", "(", "op2", ",", "Identity", ")", ":", "\n", "                    ", "h2", "=", "drop_path", "(", "h2", ",", "drop_prob", ")", "\n", "", "", "s", "=", "h1", "+", "h2", "\n", "states", "+=", "[", "s", "]", "\n", "", "return", "torch", ".", "cat", "(", "[", "states", "[", "i", "]", "for", "i", "in", "self", ".", "_concat", "]", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.evolved_modules.NasNetCell.__init__": [[274, 276], ["evolved_modules.Cell.__init__"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "kargs", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "NasNetCell", ",", "self", ")", ".", "__init__", "(", "GENOTYPES", "[", "'NASNet'", "]", ",", "*", "kargs", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.evolved_modules.AmoebaNetCell.__init__": [[279, 282], ["evolved_modules.Cell.__init__"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "kargs", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "AmoebaNetCell", ",", "self", ")", ".", "__init__", "(", "\n", "GENOTYPES", "[", "'AmoebaNet'", "]", ",", "*", "kargs", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.evolved_modules.DARTSCell.__init__": [[285, 287], ["evolved_modules.Cell.__init__"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "*", "kargs", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "DARTSCell", ",", "self", ")", ".", "__init__", "(", "GENOTYPES", "[", "'DARTS'", "]", ",", "*", "kargs", ",", "**", "kwargs", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.evolved_modules.drop_path": [[211, 218], ["x.new().bernoulli_", "x.div_", "x.mul_", "x.new", "x.size"], "function", ["None"], ["", "", "def", "drop_path", "(", "x", ",", "drop_prob", ")", ":", "\n", "    ", "if", "drop_prob", ">", "0.", ":", "\n", "        ", "keep_prob", "=", "1.", "-", "drop_prob", "\n", "mask", "=", "x", ".", "new", "(", "x", ".", "size", "(", "0", ")", ",", "1", ",", "1", ",", "1", ")", ".", "bernoulli_", "(", "keep_prob", ")", "\n", "x", ".", "div_", "(", "keep_prob", ")", "\n", "x", ".", "mul_", "(", "mask", ")", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.activations.Swish.__init__": [[25, 27], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Swish", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.activations.Swish.forward": [[28, 30], ["activations.swish"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.activations.swish"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "swish", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.activations.HardSigmoid.__init__": [[33, 35], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "HardSigmoid", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.activations.HardSigmoid.forward": [[36, 38], ["activations.hard_sigmoid"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.activations.hard_sigmoid"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "hard_sigmoid", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.activations.HardSwish.__init__": [[41, 43], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "HardSwish", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.activations.HardSwish.forward": [[44, 46], ["activations.hard_swish"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.activations.hard_swish"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "hard_swish", "(", "x", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.activations.swish": [[6, 10], ["x.sigmoid"], "function", ["None"], ["@", "torch", ".", "jit", ".", "script", "\n", "def", "swish", "(", "x", ")", ":", "\n", "# type: (Tensor) -> Tensor", "\n", "    ", "return", "x", "*", "x", ".", "sigmoid", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.activations.hard_sigmoid": [[12, 16], ["torch.relu6().div_", "torch.relu6"], "function", ["None"], ["", "@", "torch", ".", "jit", ".", "script", "\n", "def", "hard_sigmoid", "(", "x", ")", ":", "\n", "# type: (Tensor) -> Tensor", "\n", "    ", "return", "F", ".", "relu6", "(", "x", "+", "3", ")", ".", "div_", "(", "6", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.activations.hard_swish": [[18, 22], ["activations.hard_sigmoid"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.activations.hard_sigmoid"], ["", "@", "torch", ".", "jit", ".", "script", "\n", "def", "hard_swish", "(", "x", ")", ":", "\n", "# type: (Tensor) -> Tensor", "\n", "    ", "return", "x", "*", "hard_sigmoid", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.checkpoint.CheckpointModule.__init__": [[7, 12], ["torch.Module.__init__", "isinstance"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "module", ",", "num_segments", "=", "1", ")", ":", "\n", "        ", "super", "(", "CheckpointModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "num_segments", "==", "1", "or", "isinstance", "(", "module", ",", "nn", ".", "Sequential", ")", "\n", "self", ".", "module", "=", "module", "\n", "self", ".", "num_segments", "=", "num_segments", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.checkpoint.CheckpointModule.forward": [[13, 18], ["torch.utils.checkpoint.checkpoint_sequential", "torch.utils.checkpoint.checkpoint_sequential", "torch.utils.checkpoint.checkpoint", "torch.utils.checkpoint.checkpoint"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "*", "inputs", ")", ":", "\n", "        ", "if", "self", ".", "num_segments", ">", "1", ":", "\n", "            ", "return", "checkpoint_sequential", "(", "self", ".", "module", ",", "self", ".", "num_segments", ",", "*", "inputs", ")", "\n", "", "else", ":", "\n", "            ", "return", "checkpoint", "(", "self", ".", "module", ",", "*", "inputs", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.UniformQuantize.forward": [[43, 77], ["ctx.mark_dirty", "input.clone", "quantize.calculate_qparams", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "input.clone.add_().div_", "input.clone.clamp_().round_", "input.clone.new().uniform_", "input.clone.add_", "input.clone.mul_().add_", "input.clone.add_", "input.clone.clamp_", "input.clone.new", "input.clone.mul_"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.calculate_qparams"], ["n", "+", "'.quantization.zero_point'", "]", "=", "torch", ".", "ByteTensor", "(", "[", "qp", ".", "zero_point", "]", ")", "\n", "p", ".", "copy_", "(", "qp", ".", "tensor", ")", "\n", "", "model", ".", "type", "(", "'torch.ByteTensor'", ")", "\n", "for", "n", ",", "p", "in", "qparams", ".", "items", "(", ")", ":", "\n", "        ", "model", ".", "register_buffer", "(", "n", ",", "p", ")", "\n", "", "model", ".", "quantized", "=", "True", "\n", "\n", "\n", "", "def", "dequantize_model", "(", "model", ")", ":", "\n", "    ", "model", ".", "float", "(", ")", "\n", "params", "=", "model", ".", "state_dict", "(", ")", "\n", "for", "n", ",", "p", "in", "params", ".", "items", "(", ")", ":", "\n", "        ", "if", "'quantization'", "not", "in", "n", ":", "\n", "            ", "qp", "=", "QTensor", "(", "tensor", "=", "p", ",", "\n", "scale", "=", "params", "[", "n", "+", "'.quantization.scale'", "]", "[", "0", "]", ",", "\n", "zero_point", "=", "params", "[", "n", "+", "'.quantization.zero_point'", "]", "[", "0", "]", ")", "\n", "p", ".", "copy_", "(", "dequantize_tensor", "(", "qp", ")", ")", "\n", "model", ".", "register_buffer", "(", "n", "+", "'.quantization.scale'", ",", "None", ")", "\n", "model", ".", "register_buffer", "(", "n", "+", "'.quantization.zero_point'", ",", "None", ")", "\n", "", "", "model", ".", "quantized", "=", "None", "\n", "", ""]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.UniformQuantize.backward": [[78, 83], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.UniformQuantizeGrad.forward": [[87, 99], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.UniformQuantizeGrad.backward": [[100, 113], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "quantize.quantize", "quantize.calculate_qparams"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.quantize", "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.calculate_qparams"], []], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.QuantMeasure.__init__": [[143, 157], ["torch.Module.__init__", "quantize.QuantMeasure.register_buffer", "quantize.QuantMeasure.register_buffer", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "quantize.QuantMeasure.register_buffer", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], []], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.QuantMeasure.forward": [[158, 183], ["QParams", "quantize.quantize", "quantize.calculate_qparams", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "quantize.QuantMeasure.running_zero_point.mul_().add_", "quantize.QuantMeasure.running_range.mul_().add_", "quantize.QuantMeasure.running_zero_point.mul_", "quantize.QuantMeasure.running_range.mul_"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.quantize", "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.calculate_qparams"], []], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.QConv2d.__init__": [[188, 198], ["torch.Conv2d.__init__", "quantize.QuantMeasure"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], []], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.QConv2d.forward": [[199, 221], ["quantize.QConv2d.quantize_input", "quantize.calculate_qparams", "quantize.quantize", "quantize.quantize", "torch.conv2d", "torch.conv2d", "torch.conv2d", "quantize.conv2d_biprec", "quantize.quantize_grad"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.calculate_qparams", "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.quantize", "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.quantize", "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.conv2d_biprec", "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.quantize_grad"], []], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.QLinear.__init__": [[226, 233], ["torch.Linear.__init__", "quantize.QuantMeasure"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], []], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.QLinear.forward": [[234, 254], ["quantize.QLinear.quantize_input", "quantize.calculate_qparams", "quantize.quantize", "quantize.quantize", "torch.linear", "torch.linear", "torch.linear", "quantize.linear_biprec", "quantize.quantize_grad"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.calculate_qparams", "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.quantize", "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.quantize", "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.linear_biprec", "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.quantize_grad"], []], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.RangeBN.__init__": [[259, 276], ["torch.Module.__init__", "quantize.RangeBN.register_buffer", "quantize.RangeBN.register_buffer", "quantize.QuantMeasure", "quantize.RangeBN.reset_params", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Parameter", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__", "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.RangeBN.reset_params"], []], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.RangeBN.reset_params": [[277, 282], ["quantize.RangeBN.weight.data.uniform_", "quantize.RangeBN.bias.data.zero_"], "methods", ["None"], []], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.RangeBN.forward": [[283, 331], ["quantize.RangeBN.quantize_input", "x.unsqueeze().unsqueeze.unsqueeze().unsqueeze.dim", "x.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze().unsqueeze", "x.unsqueeze().unsqueeze.unsqueeze().unsqueeze.transpose().contiguous", "y.view.view.view", "[].mean", "[].mean", "y.view.view.view().mean", "quantize.quantize_grad", "out.squeeze().squeeze.squeeze().squeeze.squeeze().squeeze", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "torch.no_grad", "quantize.RangeBN.running_mean.mul_().add_", "quantize.RangeBN.running_var.mul_().add_", "y.view.view().mean.view", "scale.view", "qweight.view", "qbias.view", "out.squeeze().squeeze.squeeze().squeeze.size", "out.squeeze().squeeze.squeeze().squeeze.size", "x.unsqueeze().unsqueeze.unsqueeze().unsqueeze.unsqueeze", "x.unsqueeze().unsqueeze.unsqueeze().unsqueeze.transpose", "y.view.view.view", "out.squeeze().squeeze.squeeze().squeeze.squeeze", "y.view.view.max", "y.view.view.min", "math.log", "quantize.RangeBN.running_mean.mul_", "quantize.RangeBN.running_var.mul_", "y.view.view.size", "math.log"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.quantize_grad"], []], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.RangeBN1d.__init__": [[336, 341], ["quantize.RangeBN.__init__", "quantize.QuantMeasure"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], []], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize._deflatten_as": [[14, 17], ["x.view", "list", "x_full.dim", "x.dim"], "function", ["None"], ["\n", "initial_zero_point", "=", "qmin", "-", "min_val", "/", "scale", "\n", "\n", "zero_point", "=", "0", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.calculate_qparams": [[19, 39], ["torch.no_grad", "torch.no_grad", "torch.no_grad", "x.flatten", "QParams", "x.flatten.dim", "quantize._deflatten_as", "quantize._deflatten_as", "quantize._deflatten_as", "quantize._deflatten_as", "x.flatten.min", "x.flatten.max", "min_values.mean.mean", "max_values.mean.mean", "x.flatten.min", "x.flatten.max", "min_values.mean.min", "max_values.mean.max"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize._deflatten_as", "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize._deflatten_as", "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize._deflatten_as", "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize._deflatten_as"], ["        ", "zero_point", "=", "qmin", "\n", "", "elif", "initial_zero_point", ">", "qmax", ":", "\n", "        ", "zero_point", "=", "qmax", "\n", "", "else", ":", "\n", "        ", "zero_point", "=", "initial_zero_point", "\n", "\n", "", "zero_point", "=", "int", "(", "zero_point", ")", "\n", "q_x", "=", "zero_point", "+", "x", "/", "scale", "\n", "q_x", ".", "clamp_", "(", "qmin", ",", "qmax", ")", ".", "round_", "(", ")", "\n", "q_x", "=", "q_x", ".", "round", "(", ")", ".", "byte", "(", ")", "\n", "return", "QTensor", "(", "tensor", "=", "q_x", ",", "scale", "=", "scale", ",", "zero_point", "=", "zero_point", ")", "\n", "\n", "\n", "", "def", "dequantize_tensor", "(", "q_x", ")", ":", "\n", "    ", "return", "q_x", ".", "scale", "*", "(", "q_x", ".", "tensor", ".", "float", "(", ")", "-", "q_x", ".", "zero_point", ")", "\n", "\n", "\n", "", "def", "quantize_model", "(", "model", ")", ":", "\n", "    ", "qparams", "=", "{", "}", "\n", "\n", "for", "n", ",", "p", "in", "model", ".", "state_dict", "(", ")", ".", "items", "(", ")", ":", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.conv2d_biprec": [[115, 122], ["torch.conv2d", "torch.conv2d", "quantize.quantize_grad", "input.detach", "weight.detach", "F.conv2d.detach", "bias.detach"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.quantize_grad"], []], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.linear_biprec": [[124, 130], ["torch.linear", "torch.linear", "quantize.quantize_grad", "input.detach", "weight.detach", "F.linear.detach", "bias.detach"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.quantize_grad"], []], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.quantize": [[132, 134], ["UniformQuantize().apply", "quantize.UniformQuantize"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.bwn.BoundedWeightNorm.apply"], []], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.quantize.quantize_grad": [[136, 138], ["UniformQuantizeGrad().apply", "quantize.UniformQuantizeGrad"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.bwn.BoundedWeightNorm.apply"], []], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.LpBatchNorm2d.__init__": [[61, 72], ["torch.Module.__init__", "lp_norm.LpBatchNorm2d.register_buffer", "lp_norm.LpBatchNorm2d.register_buffer", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "dim", "=", "1", ",", "p", "=", "2", ",", "momentum", "=", "0.1", ",", "bias", "=", "True", ",", "eps", "=", "1e-5", ",", "noise", "=", "False", ")", ":", "\n", "        ", "super", "(", "LpBatchNorm2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "register_buffer", "(", "'running_mean'", ",", "torch", ".", "zeros", "(", "num_features", ")", ")", "\n", "self", ".", "register_buffer", "(", "'running_var'", ",", "torch", ".", "zeros", "(", "num_features", ")", ")", "\n", "self", ".", "momentum", "=", "momentum", "\n", "self", ".", "dim", "=", "dim", "\n", "self", ".", "noise", "=", "noise", "\n", "self", ".", "p", "=", "p", "\n", "self", ".", "eps", "=", "eps", "\n", "self", ".", "bias", "=", "Parameter", "(", "torch", ".", "Tensor", "(", "num_features", ")", ")", "\n", "self", ".", "weight", "=", "Parameter", "(", "torch", ".", "Tensor", "(", "num_features", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.LpBatchNorm2d.forward": [[73, 108], ["x.view().mean().mean", "x.transpose", "x.transpose.contiguous", "x.transpose.contiguous.view", "lp_norm.LpBatchNorm2d.running_mean.mul_().add_", "lp_norm.LpBatchNorm2d.running_var.mul_().add_", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable.view", "torch.autograd.Variable.view", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.autograd.Variable", "torch.autograd.Variable", "x.transpose.contiguous.size", "torch.autograd.Variable.view", "torch.autograd.Variable.view", "torch.autograd.Variable.size", "torch.autograd.Variable.size", "lp_norm.LpBatchNorm2d.weight.view", "lp_norm.LpBatchNorm2d.bias.view", "x.view().mean", "lp_norm.LpBatchNorm2d.running_mean.mul_", "lp_norm.LpBatchNorm2d.running_var.mul_", "torch.autograd.Variable.size", "torch.autograd.Variable.size", "lp_norm._std", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "lp_norm.LpBatchNorm2d.weight.size", "lp_norm.LpBatchNorm2d.bias.size", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "x.view", "x.size", "x.size", "y.contiguous.view.transpose"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm._std"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "p", "=", "self", ".", "p", "\n", "if", "self", ".", "training", ":", "\n", "            ", "mean", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "x", ".", "size", "(", "self", ".", "dim", ")", ",", "-", "1", ")", ".", "mean", "(", "-", "1", ")", ".", "mean", "(", "0", ")", "\n", "y", "=", "x", ".", "transpose", "(", "0", ",", "1", ")", "\n", "z", "=", "y", ".", "contiguous", "(", ")", "\n", "t", "=", "z", ".", "view", "(", "z", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "Var", "=", "(", "torch", ".", "abs", "(", "(", "t", ".", "transpose", "(", "1", ",", "0", ")", "-", "mean", ")", ")", "**", "p", ")", ".", "mean", "(", "0", ")", "\n", "\n", "scale", "=", "(", "Var", "+", "self", ".", "eps", ")", "**", "(", "-", "1", "/", "p", ")", "\n", "\n", "self", ".", "running_mean", ".", "mul_", "(", "self", ".", "momentum", ")", ".", "add_", "(", "\n", "mean", ".", "data", "*", "(", "1", "-", "self", ".", "momentum", ")", ")", "\n", "\n", "self", ".", "running_var", ".", "mul_", "(", "self", ".", "momentum", ")", ".", "add_", "(", "\n", "scale", ".", "data", "*", "(", "1", "-", "self", ".", "momentum", ")", ")", "\n", "", "else", ":", "\n", "            ", "mean", "=", "torch", ".", "autograd", ".", "Variable", "(", "self", ".", "running_mean", ")", "\n", "scale", "=", "torch", ".", "autograd", ".", "Variable", "(", "self", ".", "running_var", ")", "\n", "\n", "", "out", "=", "(", "x", "-", "mean", ".", "view", "(", "1", ",", "mean", ".", "size", "(", "0", ")", ",", "1", ",", "1", ")", ")", "*", "scale", ".", "view", "(", "1", ",", "scale", ".", "size", "(", "0", ")", ",", "1", ",", "1", ")", "\n", "\n", "if", "self", ".", "noise", "and", "self", ".", "training", ":", "\n", "            ", "std", "=", "0.1", "*", "_std", "(", "x", ",", "self", ".", "dim", ")", ".", "data", "\n", "ones", "=", "torch", ".", "ones_like", "(", "x", ".", "data", ")", "\n", "std_noise", "=", "Variable", "(", "torch", ".", "normal", "(", "ones", ",", "ones", ")", "*", "std", ")", "\n", "out", "=", "out", "*", "std_noise", "\n", "\n", "", "if", "self", ".", "weight", "is", "not", "None", ":", "\n", "            ", "out", "=", "out", "*", "self", ".", "weight", ".", "view", "(", "1", ",", "self", ".", "weight", ".", "size", "(", "0", ")", ",", "1", ",", "1", ")", "\n", "\n", "", "if", "self", ".", "bias", "is", "not", "None", ":", "\n", "            ", "out", "=", "out", "+", "self", ".", "bias", ".", "view", "(", "1", ",", "self", ".", "bias", ".", "size", "(", "0", ")", ",", "1", ",", "1", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.TopkBatchNorm2d.__init__": [[113, 125], ["torch.Module.__init__", "lp_norm.TopkBatchNorm2d.register_buffer", "lp_norm.TopkBatchNorm2d.register_buffer", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "k", "=", "10", ",", "dim", "=", "1", ",", "momentum", "=", "0.1", ",", "bias", "=", "True", ",", "eps", "=", "1e-5", ",", "noise", "=", "False", ")", ":", "\n", "        ", "super", "(", "TopkBatchNorm2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "register_buffer", "(", "'running_mean'", ",", "torch", ".", "zeros", "(", "num_features", ")", ")", "\n", "self", ".", "register_buffer", "(", "'running_var'", ",", "torch", ".", "zeros", "(", "num_features", ")", ")", "\n", "\n", "self", ".", "momentum", "=", "momentum", "\n", "self", ".", "dim", "=", "dim", "\n", "self", ".", "noise", "=", "noise", "\n", "self", ".", "k", "=", "k", "\n", "self", ".", "eps", "=", "eps", "\n", "self", ".", "bias", "=", "Parameter", "(", "torch", ".", "Tensor", "(", "num_features", ")", ")", "\n", "self", ".", "weight", "=", "Parameter", "(", "torch", ".", "Tensor", "(", "num_features", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.TopkBatchNorm2d.forward": [[126, 164], ["x.view().mean().mean", "x.transpose", "x.transpose.contiguous", "x.transpose.contiguous.view", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "lp_norm.TopkBatchNorm2d.running_mean.mul_().add_", "lp_norm.TopkBatchNorm2d.running_var.mul_().add_", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable.view", "torch.autograd.Variable.view", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.autograd.Variable", "torch.autograd.Variable", "x.transpose.contiguous.size", "[].mean", "torch.autograd.Variable.view", "torch.autograd.Variable.view", "torch.autograd.Variable.size", "torch.autograd.Variable.size", "lp_norm.TopkBatchNorm2d.weight.view", "lp_norm.TopkBatchNorm2d.bias.view", "x.view().mean", "y.contiguous.view.transpose", "lp_norm.TopkBatchNorm2d.running_mean.mul_", "lp_norm.TopkBatchNorm2d.running_var.mul_", "torch.autograd.Variable.size", "torch.autograd.Variable.size", "lp_norm._std", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "lp_norm.TopkBatchNorm2d.weight.size", "lp_norm.TopkBatchNorm2d.bias.size", "numpy.log", "x.view", "torch.abs.size", "torch.abs.size", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "x.size", "x.size", "numpy.log"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm._std"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "training", ":", "\n", "            ", "mean", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "x", ".", "size", "(", "self", ".", "dim", ")", ",", "-", "1", ")", ".", "mean", "(", "-", "1", ")", ".", "mean", "(", "0", ")", "\n", "y", "=", "x", ".", "transpose", "(", "0", ",", "1", ")", "\n", "z", "=", "y", ".", "contiguous", "(", ")", "\n", "t", "=", "z", ".", "view", "(", "z", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "A", "=", "torch", ".", "abs", "(", "t", ".", "transpose", "(", "1", ",", "0", ")", "-", "mean", ")", "\n", "\n", "const", "=", "0.5", "*", "(", "1", "+", "(", "np", ".", "pi", "*", "np", ".", "log", "(", "4", ")", ")", "**", "0.5", ")", "/", "(", "(", "2", "*", "np", ".", "log", "(", "A", ".", "size", "(", "0", ")", ")", ")", "**", "0.5", ")", "\n", "\n", "MeanTOPK", "=", "(", "torch", ".", "topk", "(", "A", ",", "self", ".", "k", ",", "dim", "=", "0", ")", "[", "0", "]", ".", "mean", "(", "0", ")", ")", "*", "const", "\n", "scale", "=", "1", "/", "(", "MeanTOPK", "+", "self", ".", "eps", ")", "\n", "\n", "self", ".", "running_mean", ".", "mul_", "(", "self", ".", "momentum", ")", ".", "add_", "(", "\n", "mean", ".", "data", "*", "(", "1", "-", "self", ".", "momentum", ")", ")", "\n", "\n", "self", ".", "running_var", ".", "mul_", "(", "self", ".", "momentum", ")", ".", "add_", "(", "\n", "scale", ".", "data", "*", "(", "1", "-", "self", ".", "momentum", ")", ")", "\n", "", "else", ":", "\n", "            ", "mean", "=", "torch", ".", "autograd", ".", "Variable", "(", "self", ".", "running_mean", ")", "\n", "scale", "=", "torch", ".", "autograd", ".", "Variable", "(", "self", ".", "running_var", ")", "\n", "\n", "", "out", "=", "(", "x", "-", "mean", ".", "view", "(", "1", ",", "mean", ".", "size", "(", "0", ")", ",", "1", ",", "1", ")", ")", "*", "scale", ".", "view", "(", "1", ",", "scale", ".", "size", "(", "0", ")", ",", "1", ",", "1", ")", "\n", "\n", "if", "self", ".", "noise", "and", "self", ".", "training", ":", "\n", "            ", "std", "=", "0.1", "*", "_std", "(", "x", ",", "self", ".", "dim", ")", ".", "data", "\n", "ones", "=", "torch", ".", "ones_like", "(", "x", ".", "data", ")", "\n", "std_noise", "=", "Variable", "(", "torch", ".", "normal", "(", "ones", ",", "ones", ")", "*", "std", ")", "\n", "out", "=", "out", "*", "std_noise", "\n", "\n", "", "if", "self", ".", "weight", "is", "not", "None", ":", "\n", "            ", "out", "=", "out", "*", "self", ".", "weight", ".", "view", "(", "1", ",", "self", ".", "weight", ".", "size", "(", "0", ")", ",", "1", ",", "1", ")", "\n", "\n", "", "if", "self", ".", "bias", "is", "not", "None", ":", "\n", "            ", "out", "=", "out", "+", "self", ".", "bias", ".", "view", "(", "1", ",", "self", ".", "bias", ".", "size", "(", "0", ")", ",", "1", ",", "1", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.GhostTopkBatchNorm2d.__init__": [[171, 185], ["torch.Module.__init__", "lp_norm.GhostTopkBatchNorm2d.register_buffer", "lp_norm.GhostTopkBatchNorm2d.register_buffer", "lp_norm.GhostTopkBatchNorm2d.register_buffer", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_features", ",", "k", "=", "10", ",", "dim", "=", "1", ",", "momentum", "=", "0.1", ",", "bias", "=", "True", ",", "eps", "=", "1e-5", ",", "beta", "=", "0.75", ",", "noise", "=", "False", ")", ":", "\n", "        ", "super", "(", "GhostTopkBatchNorm2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "register_buffer", "(", "'running_mean'", ",", "torch", ".", "zeros", "(", "num_features", ")", ")", "\n", "self", ".", "register_buffer", "(", "'running_var'", ",", "torch", ".", "zeros", "(", "num_features", ")", ")", "\n", "\n", "self", ".", "momentum", "=", "momentum", "\n", "self", ".", "dim", "=", "dim", "\n", "self", ".", "register_buffer", "(", "'meanTOPK'", ",", "torch", ".", "zeros", "(", "num_features", ")", ")", "\n", "self", ".", "noise", "=", "noise", "\n", "self", ".", "k", "=", "k", "\n", "self", ".", "beta", "=", "0.75", "\n", "self", ".", "eps", "=", "eps", "\n", "self", ".", "bias", "=", "Parameter", "(", "torch", ".", "Tensor", "(", "num_features", ")", ")", "\n", "self", ".", "weight", "=", "Parameter", "(", "torch", ".", "Tensor", "(", "num_features", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.GhostTopkBatchNorm2d.forward": [[186, 235], ["x.view().mean().mean", "x.transpose", "x.transpose.contiguous", "x.transpose.contiguous.view", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "[].mean", "lp_norm.GhostTopkBatchNorm2d.biasTOPK.copy_", "lp_norm.GhostTopkBatchNorm2d.running_mean.mul_().add_", "lp_norm.GhostTopkBatchNorm2d.running_var.mul_().add_", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable.view", "torch.autograd.Variable.view", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.autograd.Variable", "torch.autograd.Variable", "x.transpose.contiguous.size", "torch.autograd.Variable.view", "torch.autograd.Variable.view", "torch.autograd.Variable.size", "torch.autograd.Variable.size", "lp_norm.GhostTopkBatchNorm2d.weight.view", "lp_norm.GhostTopkBatchNorm2d.bias.view", "x.view().mean", "y.contiguous.view.transpose", "torch.autograd.variable.Variable", "torch.autograd.variable.Variable", "torch.autograd.variable.Variable", "torch.autograd.variable.Variable", "lp_norm.GhostTopkBatchNorm2d.running_mean.mul_", "lp_norm.GhostTopkBatchNorm2d.running_var.mul_", "torch.autograd.Variable.size", "torch.autograd.Variable.size", "lp_norm._std", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "lp_norm.GhostTopkBatchNorm2d.weight.size", "lp_norm.GhostTopkBatchNorm2d.bias.size", "torch.topk", "torch.topk", "torch.topk", "torch.topk", "numpy.log", "x.view", "torch.abs.size", "torch.abs.size", "x.size", "x.size", "numpy.log"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm._std"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "# p=5", "\n", "        ", "if", "self", ".", "training", ":", "\n", "            ", "mean", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "x", ".", "size", "(", "self", ".", "dim", ")", ",", "-", "1", ")", ".", "mean", "(", "-", "1", ")", ".", "mean", "(", "0", ")", "\n", "y", "=", "x", ".", "transpose", "(", "0", ",", "1", ")", "\n", "z", "=", "y", ".", "contiguous", "(", ")", "\n", "t", "=", "z", ".", "view", "(", "z", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "A", "=", "torch", ".", "abs", "(", "t", ".", "transpose", "(", "1", ",", "0", ")", "-", "mean", ")", "\n", "beta", "=", "0.75", "\n", "\n", "MeanTOPK", "=", "torch", ".", "topk", "(", "A", ",", "self", ".", "k", ",", "dim", "=", "0", ")", "[", "0", "]", ".", "mean", "(", "0", ")", "\n", "meanTOPK", "=", "beta", "*", "torch", ".", "autograd", ".", "variable", ".", "Variable", "(", "\n", "self", ".", "biasTOPK", ")", "+", "(", "1", "-", "beta", ")", "*", "MeanTOPK", "\n", "\n", "const", "=", "0.5", "*", "(", "1", "+", "(", "np", ".", "pi", "*", "np", ".", "log", "(", "4", ")", ")", "**", "0.5", ")", "/", "(", "(", "2", "*", "np", ".", "log", "(", "A", ".", "size", "(", "0", ")", ")", ")", "**", "0.5", ")", "\n", "meanTOPK", "=", "meanTOPK", "*", "const", "\n", "\n", "# print(self.biasTOPK)", "\n", "self", ".", "biasTOPK", ".", "copy_", "(", "meanTOPK", ".", "data", ")", "\n", "# self.biasTOPK = MeanTOPK.data", "\n", "scale", "=", "1", "/", "(", "meanTOPK", "+", "self", ".", "eps", ")", "\n", "\n", "self", ".", "running_mean", ".", "mul_", "(", "self", ".", "momentum", ")", ".", "add_", "(", "\n", "mean", ".", "data", "*", "(", "1", "-", "self", ".", "momentum", ")", ")", "\n", "\n", "self", ".", "running_var", ".", "mul_", "(", "self", ".", "momentum", ")", ".", "add_", "(", "\n", "scale", ".", "data", "*", "(", "1", "-", "self", ".", "momentum", ")", ")", "\n", "", "else", ":", "\n", "            ", "mean", "=", "torch", ".", "autograd", ".", "Variable", "(", "self", ".", "running_mean", ")", "\n", "scale", "=", "torch", ".", "autograd", ".", "Variable", "(", "self", ".", "running_var", ")", "\n", "\n", "", "out", "=", "(", "x", "-", "mean", ".", "view", "(", "1", ",", "mean", ".", "size", "(", "0", ")", ",", "1", ",", "1", ")", ")", "*", "scale", ".", "view", "(", "1", ",", "scale", ".", "size", "(", "0", ")", ",", "1", ",", "1", ")", "\n", "# out = (x - mean.view(1, mean.size(0), 1, 1)) * final_scale.view(1, scale.size(0), 1, 1)", "\n", "\n", "if", "self", ".", "noise", "and", "self", ".", "training", ":", "\n", "            ", "std", "=", "0.1", "*", "_std", "(", "x", ",", "self", ".", "dim", ")", ".", "data", "\n", "ones", "=", "torch", ".", "ones_like", "(", "x", ".", "data", ")", "\n", "std_noise", "=", "Variable", "(", "torch", ".", "normal", "(", "ones", ",", "ones", ")", "*", "std", ")", "\n", "out", "=", "out", "*", "std_noise", "\n", "\n", "", "if", "self", ".", "weight", "is", "not", "None", ":", "\n", "            ", "out", "=", "out", "*", "self", ".", "weight", ".", "view", "(", "1", ",", "self", ".", "weight", ".", "size", "(", "0", ")", ",", "1", ",", "1", ")", "\n", "\n", "", "if", "self", ".", "bias", "is", "not", "None", ":", "\n", "            ", "out", "=", "out", "+", "self", ".", "bias", ".", "view", "(", "1", ",", "self", ".", "bias", ".", "size", "(", "0", ")", ",", "1", ",", "1", ")", "\n", "", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__": [[244, 258], ["torch.Module.__init__", "lp_norm.L1BatchNorm2d.register_buffer", "lp_norm.L1BatchNorm2d.register_buffer", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.__init__"], ["def", "__init__", "(", "self", ",", "num_features", ",", "dim", "=", "1", ",", "momentum", "=", "0.1", ",", "bias", "=", "True", ",", "normalized", "=", "True", ",", "eps", "=", "1e-5", ",", "noise", "=", "False", ")", ":", "\n", "        ", "super", "(", "L1BatchNorm2d", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "register_buffer", "(", "'running_mean'", ",", "torch", ".", "zeros", "(", "num_features", ")", ")", "\n", "self", ".", "register_buffer", "(", "'running_var'", ",", "torch", ".", "zeros", "(", "num_features", ")", ")", "\n", "self", ".", "momentum", "=", "momentum", "\n", "self", ".", "dim", "=", "dim", "\n", "self", ".", "noise", "=", "noise", "\n", "self", ".", "bias", "=", "Parameter", "(", "torch", ".", "Tensor", "(", "num_features", ")", ")", "\n", "self", ".", "weight", "=", "Parameter", "(", "torch", ".", "Tensor", "(", "num_features", ")", ")", "\n", "self", ".", "eps", "=", "eps", "\n", "if", "normalized", ":", "\n", "            ", "self", ".", "weight_fix", "=", "(", "np", ".", "pi", "/", "2", ")", "**", "0.5", "\n", "", "else", ":", "\n", "            ", "self", ".", "weight_fix", "=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm.L1BatchNorm2d.forward": [[259, 292], ["x.view().mean().mean", "x.transpose", "x.transpose.contiguous", "x.transpose.contiguous.view", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "torch.abs().mean", "lp_norm.L1BatchNorm2d.running_mean.mul_().add_", "lp_norm.L1BatchNorm2d.running_var.mul_().add_", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable", "torch.autograd.Variable.view", "torch.autograd.Variable.view", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.autograd.Variable", "torch.autograd.Variable", "x.transpose.contiguous.size", "torch.autograd.Variable.view", "torch.autograd.Variable.view", "torch.autograd.Variable.size", "torch.autograd.Variable.size", "lp_norm.L1BatchNorm2d.weight.view", "lp_norm.L1BatchNorm2d.bias.view", "x.view().mean", "torch.abs", "torch.abs", "torch.abs", "torch.abs", "lp_norm.L1BatchNorm2d.running_mean.mul_", "lp_norm.L1BatchNorm2d.running_var.mul_", "torch.autograd.Variable.size", "torch.autograd.Variable.size", "lp_norm._std", "torch.normal", "torch.normal", "torch.normal", "torch.normal", "lp_norm.L1BatchNorm2d.weight.size", "lp_norm.L1BatchNorm2d.bias.size", "x.view", "y.contiguous.view.transpose", "x.size", "x.size"], "methods", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm._std"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "p", "=", "1", "\n", "if", "self", ".", "training", ":", "\n", "            ", "mean", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "x", ".", "size", "(", "self", ".", "dim", ")", ",", "-", "1", ")", ".", "mean", "(", "-", "1", ")", ".", "mean", "(", "0", ")", "\n", "y", "=", "x", ".", "transpose", "(", "0", ",", "1", ")", "\n", "z", "=", "y", ".", "contiguous", "(", ")", "\n", "t", "=", "z", ".", "view", "(", "z", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "Var", "=", "(", "torch", ".", "abs", "(", "(", "t", ".", "transpose", "(", "1", ",", "0", ")", "-", "mean", ")", ")", ")", ".", "mean", "(", "0", ")", "\n", "scale", "=", "(", "Var", "*", "self", ".", "weight_fix", "+", "self", ".", "eps", ")", "**", "(", "-", "1", ")", "\n", "self", ".", "running_mean", ".", "mul_", "(", "self", ".", "momentum", ")", ".", "add_", "(", "\n", "mean", ".", "data", "*", "(", "1", "-", "self", ".", "momentum", ")", ")", "\n", "\n", "self", ".", "running_var", ".", "mul_", "(", "self", ".", "momentum", ")", ".", "add_", "(", "\n", "scale", ".", "data", "*", "(", "1", "-", "self", ".", "momentum", ")", ")", "\n", "", "else", ":", "\n", "            ", "mean", "=", "torch", ".", "autograd", ".", "Variable", "(", "self", ".", "running_mean", ")", "\n", "scale", "=", "torch", ".", "autograd", ".", "Variable", "(", "self", ".", "running_var", ")", "\n", "\n", "", "out", "=", "(", "x", "-", "mean", ".", "view", "(", "1", ",", "mean", ".", "size", "(", "0", ")", ",", "1", ",", "1", ")", ")", "*", "scale", ".", "view", "(", "1", ",", "scale", ".", "size", "(", "0", ")", ",", "1", ",", "1", ")", "\n", "\n", "if", "self", ".", "noise", "and", "self", ".", "training", ":", "\n", "            ", "std", "=", "0.1", "*", "_std", "(", "x", ",", "self", ".", "dim", ")", ".", "data", "\n", "ones", "=", "torch", ".", "ones_like", "(", "x", ".", "data", ")", "\n", "std_noise", "=", "Variable", "(", "torch", ".", "normal", "(", "ones", ",", "ones", ")", "*", "std", ")", "\n", "out", "=", "out", "*", "std_noise", "\n", "\n", "", "if", "self", ".", "weight", "is", "not", "None", ":", "\n", "            ", "out", "=", "out", "*", "self", ".", "weight", ".", "view", "(", "1", ",", "self", ".", "weight", ".", "size", "(", "0", ")", ",", "1", ",", "1", ")", "\n", "\n", "", "if", "self", ".", "bias", "is", "not", "None", ":", "\n", "            ", "out", "=", "out", "+", "self", ".", "bias", ".", "view", "(", "1", ",", "self", ".", "bias", ".", "size", "(", "0", ")", ",", "1", ",", "1", ")", "\n", "", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm._norm": [[8, 26], ["x.norm", "float", "func().view", "torch.norm", "torch.norm", "func().view", "_norm().transpose", "x.max", "x.min", "x.max", "x.size", "func", "x.dim", "x.dim", "x.contiguous().view", "x.size", "func", "lp_norm._norm", "x.size", "x.dim", "x.contiguous().view", "x.transpose", "x.contiguous", "x.size", "x.contiguous"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm._norm"], ["def", "_norm", "(", "x", ",", "dim", ",", "p", "=", "2", ")", ":", "\n", "    ", "\"\"\"Computes the norm over all dimensions except dim\"\"\"", "\n", "if", "p", "==", "-", "1", ":", "\n", "        ", "func", "=", "lambda", "x", ",", "dim", ":", "x", ".", "max", "(", "dim", "=", "dim", ")", "[", "0", "]", "-", "x", ".", "min", "(", "dim", "=", "dim", ")", "[", "0", "]", "\n", "", "elif", "p", "==", "float", "(", "'inf'", ")", ":", "\n", "        ", "func", "=", "lambda", "x", ",", "dim", ":", "x", ".", "max", "(", "dim", "=", "dim", ")", "[", "0", "]", "\n", "", "else", ":", "\n", "        ", "func", "=", "lambda", "x", ",", "dim", ":", "torch", ".", "norm", "(", "x", ",", "dim", "=", "dim", ",", "p", "=", "p", ")", "\n", "", "if", "dim", "is", "None", ":", "\n", "        ", "return", "x", ".", "norm", "(", "p", "=", "p", ")", "\n", "", "elif", "dim", "==", "0", ":", "\n", "        ", "output_size", "=", "(", "x", ".", "size", "(", "0", ")", ",", ")", "+", "(", "1", ",", ")", "*", "(", "x", ".", "dim", "(", ")", "-", "1", ")", "\n", "return", "func", "(", "x", ".", "contiguous", "(", ")", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", ",", "1", ")", ".", "view", "(", "*", "output_size", ")", "\n", "", "elif", "dim", "==", "x", ".", "dim", "(", ")", "-", "1", ":", "\n", "        ", "output_size", "=", "(", "1", ",", ")", "*", "(", "x", ".", "dim", "(", ")", "-", "1", ")", "+", "(", "x", ".", "size", "(", "-", "1", ")", ",", ")", "\n", "return", "func", "(", "x", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "x", ".", "size", "(", "-", "1", ")", ")", ",", "0", ")", ".", "view", "(", "*", "output_size", ")", "\n", "", "else", ":", "\n", "        ", "return", "_norm", "(", "x", ".", "transpose", "(", "0", ",", "dim", ")", ",", "0", ")", ".", "transpose", "(", "0", ",", "dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm._mean": [[28, 40], ["p.mean", "p.contiguous().view().mean().view", "p.contiguous().view().mean().view", "_mean().transpose", "p.size", "p.contiguous().view().mean", "p.dim", "p.dim", "p.size", "p.contiguous().view().mean", "lp_norm._mean", "p.contiguous().view", "p.dim", "p.transpose", "p.size", "p.contiguous().view", "p.contiguous", "p.size", "p.contiguous"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm._mean"], ["", "", "def", "_mean", "(", "p", ",", "dim", ")", ":", "\n", "    ", "\"\"\"Computes the mean over all dimensions except dim\"\"\"", "\n", "if", "dim", "is", "None", ":", "\n", "        ", "return", "p", ".", "mean", "(", ")", "\n", "", "elif", "dim", "==", "0", ":", "\n", "        ", "output_size", "=", "(", "p", ".", "size", "(", "0", ")", ",", ")", "+", "(", "1", ",", ")", "*", "(", "p", ".", "dim", "(", ")", "-", "1", ")", "\n", "return", "p", ".", "contiguous", "(", ")", ".", "view", "(", "p", ".", "size", "(", "0", ")", ",", "-", "1", ")", ".", "mean", "(", "dim", "=", "1", ")", ".", "view", "(", "*", "output_size", ")", "\n", "", "elif", "dim", "==", "p", ".", "dim", "(", ")", "-", "1", ":", "\n", "        ", "output_size", "=", "(", "1", ",", ")", "*", "(", "p", ".", "dim", "(", ")", "-", "1", ")", "+", "(", "p", ".", "size", "(", "-", "1", ")", ",", ")", "\n", "return", "p", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "p", ".", "size", "(", "-", "1", ")", ")", ".", "mean", "(", "dim", "=", "0", ")", ".", "view", "(", "*", "output_size", ")", "\n", "", "else", ":", "\n", "        ", "return", "_mean", "(", "p", ".", "transpose", "(", "0", ",", "dim", ")", ",", "0", ")", ".", "transpose", "(", "0", ",", "dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm._std": [[42, 54], ["p.std", "p.contiguous().view().std().view", "p.contiguous().view().std().view", "_std().transpose", "p.size", "p.contiguous().view().std", "p.dim", "p.dim", "p.size", "p.contiguous().view().std", "lp_norm._std", "p.contiguous().view", "p.dim", "p.transpose", "p.size", "p.contiguous().view", "p.contiguous", "p.size", "p.contiguous"], "function", ["home.repos.pwc.inspect_result.berryweinst_mms-select.utils.meters.OnlineMeter.std", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.meters.OnlineMeter.std", "home.repos.pwc.inspect_result.berryweinst_mms-select.utils.meters.OnlineMeter.std", "home.repos.pwc.inspect_result.berryweinst_mms-select.modules.lp_norm._std"], ["", "", "def", "_std", "(", "p", ",", "dim", ")", ":", "\n", "    ", "\"\"\"Computes the mean over all dimensions except dim\"\"\"", "\n", "if", "dim", "is", "None", ":", "\n", "        ", "return", "p", ".", "std", "(", ")", "\n", "", "elif", "dim", "==", "0", ":", "\n", "        ", "output_size", "=", "(", "p", ".", "size", "(", "0", ")", ",", ")", "+", "(", "1", ",", ")", "*", "(", "p", ".", "dim", "(", ")", "-", "1", ")", "\n", "return", "p", ".", "contiguous", "(", ")", ".", "view", "(", "p", ".", "size", "(", "0", ")", ",", "-", "1", ")", ".", "std", "(", "dim", "=", "1", ")", ".", "view", "(", "*", "output_size", ")", "\n", "", "elif", "dim", "==", "p", ".", "dim", "(", ")", "-", "1", ":", "\n", "        ", "output_size", "=", "(", "1", ",", ")", "*", "(", "p", ".", "dim", "(", ")", "-", "1", ")", "+", "(", "p", ".", "size", "(", "-", "1", ")", ",", ")", "\n", "return", "p", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "p", ".", "size", "(", "-", "1", ")", ")", ".", "std", "(", "dim", "=", "0", ")", ".", "view", "(", "*", "output_size", ")", "\n", "", "else", ":", "\n", "        ", "return", "_std", "(", "p", ".", "transpose", "(", "0", ",", "dim", ")", ",", "0", ")", ".", "transpose", "(", "0", ",", "dim", ")", "\n", "\n"]]}