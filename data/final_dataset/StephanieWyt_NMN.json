{"home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Load.loadfile": [[5, 16], ["print", "open", "line[].split", "range", "ret.append", "x.append", "tuple", "int"], "function", ["None"], ["def", "loadfile", "(", "fn", ",", "num", "=", "1", ")", ":", "\n", "\t", "print", "(", "'loading a file...'", "+", "fn", ")", "\n", "ret", "=", "[", "]", "\n", "with", "open", "(", "fn", ",", "encoding", "=", "'utf-8'", ")", "as", "f", ":", "\n", "\t\t", "for", "line", "in", "f", ":", "\n", "\t\t\t", "th", "=", "line", "[", ":", "-", "1", "]", ".", "split", "(", "'\\t'", ")", "\n", "x", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "num", ")", ":", "\n", "\t\t\t\t", "x", ".", "append", "(", "int", "(", "th", "[", "i", "]", ")", ")", "\n", "", "ret", ".", "append", "(", "tuple", "(", "x", ")", ")", "\n", "", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Load.get_ent2id": [[18, 26], ["open", "line[].split", "int"], "function", ["None"], ["", "def", "get_ent2id", "(", "fns", ")", ":", "\n", "\t", "ent2id", "=", "{", "}", "\n", "for", "fn", "in", "fns", ":", "\n", "\t\t", "with", "open", "(", "fn", ",", "'r'", ",", "encoding", "=", "'utf-8'", ")", "as", "f", ":", "\n", "\t\t\t", "for", "line", "in", "f", ":", "\n", "\t\t\t\t", "th", "=", "line", "[", ":", "-", "1", "]", ".", "split", "(", "'\\t'", ")", "\n", "ent2id", "[", "th", "[", "1", "]", "]", "=", "int", "(", "th", "[", "0", "]", ")", "\n", "", "", "", "return", "ent2id", "\n", "\n"]], "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Load.loadattr": [[29, 56], ["range", "numpy.zeros", "open", "sorted", "open", "line[].split", "range", "line[].split", "len", "range", "len"], "function", ["home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Init.zeros"], ["", "def", "loadattr", "(", "fns", ",", "e", ",", "ent2id", ")", ":", "\n", "\t", "cnt", "=", "{", "}", "\n", "for", "fn", "in", "fns", ":", "\n", "\t\t", "with", "open", "(", "fn", ",", "'r'", ",", "encoding", "=", "'utf-8'", ")", "as", "f", ":", "\n", "\t\t\t", "for", "line", "in", "f", ":", "\n", "\t\t\t\t", "th", "=", "line", "[", ":", "-", "1", "]", ".", "split", "(", "'\\t'", ")", "\n", "if", "th", "[", "0", "]", "not", "in", "ent2id", ":", "\n", "\t\t\t\t\t", "continue", "\n", "", "for", "i", "in", "range", "(", "1", ",", "len", "(", "th", ")", ")", ":", "\n", "\t\t\t\t\t", "if", "th", "[", "i", "]", "not", "in", "cnt", ":", "\n", "\t\t\t\t\t\t", "cnt", "[", "th", "[", "i", "]", "]", "=", "1", "\n", "", "else", ":", "\n", "\t\t\t\t\t\t", "cnt", "[", "th", "[", "i", "]", "]", "+=", "1", "\n", "", "", "", "", "", "fre", "=", "[", "(", "k", ",", "cnt", "[", "k", "]", ")", "for", "k", "in", "sorted", "(", "cnt", ",", "key", "=", "cnt", ".", "get", ",", "reverse", "=", "True", ")", "]", "\n", "attr2id", "=", "{", "}", "\n", "for", "i", "in", "range", "(", "1000", ")", ":", "\n", "\t\t", "attr2id", "[", "fre", "[", "i", "]", "[", "0", "]", "]", "=", "i", "\n", "", "attr", "=", "np", ".", "zeros", "(", "(", "e", ",", "1000", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "for", "fn", "in", "fns", ":", "\n", "\t\t", "with", "open", "(", "fn", ",", "'r'", ",", "encoding", "=", "'utf-8'", ")", "as", "f", ":", "\n", "\t\t\t", "for", "line", "in", "f", ":", "\n", "\t\t\t\t", "th", "=", "line", "[", ":", "-", "1", "]", ".", "split", "(", "'\\t'", ")", "\n", "if", "th", "[", "0", "]", "in", "ent2id", ":", "\n", "\t\t\t\t\t", "for", "i", "in", "range", "(", "1", ",", "len", "(", "th", ")", ")", ":", "\n", "\t\t\t\t\t\t", "if", "th", "[", "i", "]", "in", "attr2id", ":", "\n", "\t\t\t\t\t\t\t", "attr", "[", "ent2id", "[", "th", "[", "0", "]", "]", "]", "[", "attr2id", "[", "th", "[", "i", "]", "]", "]", "=", "1.0", "\n", "", "", "", "", "", "", "return", "attr", "\n", "", ""]], "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Test.get_hits": [[6, 36], ["numpy.array", "numpy.array", "scipy.spatial.distance.cdist", "range", "range", "print", "range", "numpy.array().reshape", "len", "sim[].argsort", "range", "candidate.append", "len", "sim[].argsort", "range", "candidate.append", "len", "print", "len", "len", "numpy.array", "numpy.where", "numpy.where", "len"], "function", ["None"], ["def", "get_hits", "(", "vec", ",", "test_pair", ",", "c", ",", "top_k", "=", "(", "1", ",", "10", ")", ")", ":", "\n", "    ", "L", "=", "np", ".", "array", "(", "[", "e1", "for", "e1", ",", "e2", "in", "test_pair", "]", ")", "\n", "R", "=", "np", ".", "array", "(", "[", "e2", "for", "e1", ",", "e2", "in", "test_pair", "]", ")", "\n", "Lvec", "=", "vec", "[", "L", "]", "\n", "Rvec", "=", "vec", "[", "R", "]", "\n", "sim", "=", "scipy", ".", "spatial", ".", "distance", ".", "cdist", "(", "Lvec", ",", "Rvec", ",", "metric", "=", "'cityblock'", ")", "\n", "top_lr", "=", "[", "0", "]", "*", "len", "(", "top_k", ")", "\n", "candidate", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "Lvec", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "rank", "=", "sim", "[", "i", ",", ":", "]", ".", "argsort", "(", ")", "\n", "rank_index", "=", "np", ".", "where", "(", "rank", "==", "i", ")", "[", "0", "]", "[", "0", "]", "\n", "for", "j", "in", "range", "(", "len", "(", "top_k", ")", ")", ":", "\n", "            ", "if", "rank_index", "<", "top_k", "[", "j", "]", ":", "\n", "                ", "top_lr", "[", "j", "]", "+=", "1", "\n", "", "", "candidate", ".", "append", "(", "R", "[", "rank", "[", "0", ":", "c", "]", "]", ")", "\n", "\n", "", "top_rl", "=", "[", "0", "]", "*", "len", "(", "top_k", ")", "\n", "for", "i", "in", "range", "(", "Rvec", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "rank", "=", "sim", "[", ":", ",", "i", "]", ".", "argsort", "(", ")", "\n", "rank_index", "=", "np", ".", "where", "(", "rank", "==", "i", ")", "[", "0", "]", "[", "0", "]", "\n", "for", "j", "in", "range", "(", "len", "(", "top_k", ")", ")", ":", "\n", "            ", "if", "rank_index", "<", "top_k", "[", "j", "]", ":", "\n", "                ", "top_rl", "[", "j", "]", "+=", "1", "\n", "", "", "candidate", ".", "append", "(", "L", "[", "rank", "[", "0", ":", "c", "]", "]", ")", "\n", "\n", "", "print", "(", "'For each left (KG structure embedding):'", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "top_lr", ")", ")", ":", "\n", "        ", "print", "(", "'Hits@%d: %.2f%%'", "%", "(", "top_k", "[", "i", "]", ",", "top_lr", "[", "i", "]", "/", "len", "(", "test_pair", ")", "*", "100", ")", ")", "\n", "\n", "", "return", "np", ".", "array", "(", "candidate", ")", ".", "reshape", "(", "(", "2", ",", "-", "1", ",", "c", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Test.get_hits_new": [[38, 65], ["len", "numpy.array", "numpy.array", "numpy.reshape", "numpy.sum", "range", "print", "range", "numpy.abs", "numpy.reshape", "len", "range", "len", "print", "len", "sim[].argsort", "range", "len", "numpy.where", "len"], "function", ["None"], ["", "def", "get_hits_new", "(", "vec", ",", "candidate", ",", "test_pair", ",", "c", ",", "top_k", "=", "(", "1", ",", "10", ")", ")", ":", "\n", "    ", "t", "=", "len", "(", "test_pair", ")", "\n", "L", "=", "np", ".", "array", "(", "[", "e1", "for", "e1", ",", "e2", "in", "test_pair", "]", ")", "\n", "R", "=", "np", ".", "array", "(", "[", "e2", "for", "e1", ",", "e2", "in", "test_pair", "]", ")", "\n", "\n", "vec", "=", "np", ".", "reshape", "(", "vec", ",", "(", "2", ",", "t", ",", "2", ",", "c", ",", "-", "1", ")", ")", "\n", "Lvec", "=", "vec", "[", "0", ",", ":", ",", "0", "]", "\n", "Rvec", "=", "vec", "[", "1", ",", ":", ",", "0", "]", "\n", "sim", "=", "np", ".", "sum", "(", "np", ".", "abs", "(", "Lvec", "-", "Rvec", ")", ",", "-", "1", ")", "\n", "candidate_L", "=", "np", ".", "reshape", "(", "candidate", ",", "(", "2", ",", "t", ",", "-", "1", ")", ")", "[", "0", "]", "\n", "\n", "top_lr", "=", "[", "0", "]", "*", "len", "(", "top_k", ")", "\n", "for", "i", "in", "range", "(", "t", ")", ":", "\n", "        ", "x", "=", "-", "1", "\n", "for", "j", "in", "range", "(", "len", "(", "candidate_L", "[", "i", "]", ")", ")", ":", "\n", "            ", "if", "R", "[", "i", "]", "==", "candidate_L", "[", "i", "]", "[", "j", "]", ":", "\n", "                ", "x", "=", "j", "\n", "", "", "if", "x", ">=", "0", ":", "\n", "            ", "rank", "=", "sim", "[", "i", "]", ".", "argsort", "(", ")", "\n", "rank_index", "=", "np", ".", "where", "(", "rank", "==", "x", ")", "[", "0", "]", "[", "0", "]", "\n", "for", "j", "in", "range", "(", "len", "(", "top_k", ")", ")", ":", "\n", "                ", "if", "rank_index", "<", "top_k", "[", "j", "]", ":", "\n", "                    ", "top_lr", "[", "j", "]", "+=", "1", "\n", "\n", "", "", "", "", "print", "(", "'For each left (NMN):'", ")", "\n", "for", "i", "in", "range", "(", "len", "(", "top_lr", ")", ")", ":", "\n", "        ", "print", "(", "'Hits@%d: %.2f%%'", "%", "(", "top_k", "[", "i", "]", ",", "top_lr", "[", "i", "]", "/", "len", "(", "test_pair", ")", "*", "100", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Init.uniform": [[9, 13], ["tensorflow.random_uniform", "tensorflow.Variable"], "function", ["None"], ["def", "uniform", "(", "shape", ",", "scale", "=", "0.05", ",", "name", "=", "None", ")", ":", "\n", "\t", "\"\"\"Uniform init.\"\"\"", "\n", "initial", "=", "tf", ".", "random_uniform", "(", "shape", ",", "minval", "=", "-", "scale", ",", "maxval", "=", "scale", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "return", "tf", ".", "Variable", "(", "initial", ",", "name", "=", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Init.glorot": [[15, 20], ["numpy.sqrt", "tensorflow.random_uniform", "tensorflow.Variable"], "function", ["None"], ["", "def", "glorot", "(", "shape", ",", "name", "=", "None", ")", ":", "\n", "\t", "\"\"\"Glorot & Bengio (AISTATS 2010) init.\"\"\"", "\n", "init_range", "=", "np", ".", "sqrt", "(", "6.0", "/", "(", "shape", "[", "0", "]", "+", "shape", "[", "1", "]", ")", ")", "\n", "initial", "=", "tf", ".", "random_uniform", "(", "shape", ",", "minval", "=", "-", "init_range", ",", "maxval", "=", "init_range", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "return", "tf", ".", "Variable", "(", "initial", ",", "name", "=", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Init.zeros": [[22, 26], ["tensorflow.zeros", "tensorflow.Variable"], "function", ["home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Init.zeros"], ["", "def", "zeros", "(", "shape", ",", "name", "=", "None", ")", ":", "\n", "\t", "\"\"\"All zeros.\"\"\"", "\n", "initial", "=", "tf", ".", "zeros", "(", "shape", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "return", "tf", ".", "Variable", "(", "initial", ",", "name", "=", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Init.ones": [[28, 32], ["tensorflow.ones", "tensorflow.Variable"], "function", ["home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Init.ones"], ["", "def", "ones", "(", "shape", ",", "name", "=", "None", ")", ":", "\n", "\t", "\"\"\"All ones.\"\"\"", "\n", "initial", "=", "tf", ".", "ones", "(", "shape", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "return", "tf", ".", "Variable", "(", "initial", ",", "name", "=", "name", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Config.Config.__init__": [[5, 53], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "d", "=", "''", ",", "l", "=", "''", ")", ":", "\n", "        ", "dataset", "=", "d", "\n", "language", "=", "l", "\n", "if", "dataset", "==", "'S-DBP15k'", ":", "\n", "            ", "prefix", "=", "'data/DBP15k/'", "+", "language", "\n", "self", ".", "kg1", "=", "prefix", "+", "'/triples_1_s'", "\n", "self", ".", "kg2", "=", "prefix", "+", "'/triples_2_s'", "\n", "", "else", ":", "\n", "            ", "prefix", "=", "'data/'", "+", "dataset", "+", "'/'", "+", "language", "\n", "self", ".", "kg1", "=", "prefix", "+", "'/triples_1'", "\n", "self", ".", "kg2", "=", "prefix", "+", "'/triples_2'", "\n", "", "self", ".", "e1", "=", "prefix", "+", "'/ent_ids_1'", "\n", "self", ".", "e2", "=", "prefix", "+", "'/ent_ids_2'", "\n", "self", ".", "ill", "=", "prefix", "+", "'/ref_ent_ids'", "\n", "self", ".", "vec", "=", "prefix", "+", "'/vectorList.json'", "\n", "self", ".", "save_suffix", "=", "dataset", "+", "'_'", "+", "language", "\n", "\n", "if", "dataset", "==", "'DWY100k'", ":", "\n", "            ", "self", ".", "epochs", "=", "200", "\n", "self", ".", "pre_epochs", "=", "50", "# epochs to train the preliminary GCN", "\n", "self", ".", "train_batchnum", "=", "10", "\n", "self", ".", "test_batchnum", "=", "50", "\n", "self", ".", "all_nbr_num", "=", "20", "\n", "", "else", ":", "\n", "            ", "self", ".", "epochs", "=", "600", "\n", "self", ".", "pre_epochs", "=", "500", "\n", "self", ".", "train_batchnum", "=", "1", "\n", "self", ".", "test_batchnum", "=", "5", "\n", "self", ".", "all_nbr_num", "=", "100", "\n", "\n", "", "self", ".", "dim", "=", "300", "\n", "self", ".", "dim_g", "=", "50", "\n", "self", ".", "act_func", "=", "tf", ".", "nn", ".", "relu", "\n", "self", ".", "gamma", "=", "1.0", "# margin based loss", "\n", "self", ".", "k", "=", "125", "# number of negative samples for each positive one", "\n", "self", ".", "seed", "=", "3", "# 30% of seeds", "\n", "self", ".", "c", "=", "20", "# size of the candidate set", "\n", "self", ".", "lr", "=", "0.001", "\n", "\n", "if", "dataset", "==", "'S-DBP15k'", ":", "\n", "            ", "if", "language", "==", "'fr_en'", ":", "\n", "                ", "self", ".", "sampled_nbr_num", "=", "10", "# number of sampled neighbors", "\n", "", "else", ":", "\n", "                ", "self", ".", "sampled_nbr_num", "=", "3", "\n", "", "self", ".", "beta", "=", "1", "# weight of the matching vector", "\n", "", "else", ":", "\n", "            ", "self", ".", "sampled_nbr_num", "=", "5", "\n", "self", ".", "beta", "=", "0.1", "\n", "\n"]], "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.get_vmat": [[8, 28], ["None"], "function", ["None"], ["def", "get_vmat", "(", "e", ",", "KG", ")", ":", "\n", "    ", "du", "=", "[", "1", "]", "*", "e", "\n", "for", "tri", "in", "KG", ":", "\n", "        ", "if", "tri", "[", "0", "]", "!=", "tri", "[", "2", "]", ":", "\n", "            ", "du", "[", "tri", "[", "0", "]", "]", "+=", "1", "\n", "du", "[", "tri", "[", "2", "]", "]", "+=", "1", "\n", "", "", "M", "=", "{", "}", "\n", "for", "tri", "in", "KG", ":", "\n", "        ", "if", "tri", "[", "0", "]", "==", "tri", "[", "2", "]", ":", "\n", "            ", "continue", "\n", "", "if", "(", "tri", "[", "0", "]", ",", "tri", "[", "2", "]", ")", "not", "in", "M", ":", "\n", "            ", "M", "[", "(", "tri", "[", "0", "]", ",", "tri", "[", "2", "]", ")", "]", "=", "1", "\n", "", "else", ":", "\n", "            ", "pass", "\n", "", "if", "(", "tri", "[", "2", "]", ",", "tri", "[", "0", "]", ")", "not", "in", "M", ":", "\n", "            ", "M", "[", "(", "tri", "[", "2", "]", ",", "tri", "[", "0", "]", ")", "]", "=", "1", "\n", "", "else", ":", "\n", "            ", "pass", "\n", "\n", "", "", "return", "M", ",", "du", "\n", "\n"]], "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.get_nbr": [[30, 48], ["range", "range", "nbr.append", "range", "mask.append", "np.asarray", "np.asarray", "nbr[].append", "len", "len", "len", "len", "len", "len"], "function", ["None"], ["", "def", "get_nbr", "(", "M", ",", "e", ",", "max_nbr", ")", ":", "\n", "    ", "nbr", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "e", ")", ":", "\n", "        ", "nbr", ".", "append", "(", "[", "]", ")", "\n", "", "for", "(", "i", ",", "j", ")", "in", "M", ":", "\n", "        ", "if", "i", "!=", "j", "and", "(", "max_nbr", "==", "-", "1", "or", "len", "(", "nbr", "[", "i", "]", ")", "<", "max_nbr", ")", ":", "\n", "            ", "nbr", "[", "i", "]", ".", "append", "(", "j", ")", "\n", "", "", "if", "max_nbr", "==", "-", "1", ":", "\n", "        ", "for", "i", "in", "range", "(", "e", ")", ":", "\n", "            ", "if", "(", "len", "(", "nbr", "[", "i", "]", ")", ">", "max_nbr", ")", ":", "\n", "                ", "max_nbr", "=", "len", "(", "nbr", "[", "i", "]", ")", "\n", "\n", "", "", "", "mask", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "e", ")", ":", "\n", "        ", "mask", ".", "append", "(", "[", "1", "]", "*", "len", "(", "nbr", "[", "i", "]", ")", "+", "[", "0", "]", "*", "(", "max_nbr", "-", "len", "(", "nbr", "[", "i", "]", ")", ")", ")", "\n", "nbr", "[", "i", "]", "+=", "[", "0", "]", "*", "(", "max_nbr", "-", "len", "(", "nbr", "[", "i", "]", ")", ")", "\n", "\n", "", "return", "np", ".", "asarray", "(", "nbr", ",", "dtype", "=", "np", ".", "int32", ")", ",", "np", ".", "asarray", "(", "mask", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.get_sparse_tensor": [[50, 62], ["print", "Model.get_vmat", "tf.SparseTensor", "ind.append", "val.append", "math.sqrt", "math.sqrt"], "function", ["home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.get_vmat"], ["", "def", "get_sparse_tensor", "(", "e", ",", "KG", ")", ":", "\n", "    ", "print", "(", "'getting a sparse tensor...'", ")", "\n", "M0", ",", "du", "=", "get_vmat", "(", "e", ",", "KG", ")", "\n", "ind", "=", "[", "]", "\n", "val", "=", "[", "]", "\n", "for", "fir", ",", "sec", "in", "M0", ":", "\n", "        ", "ind", ".", "append", "(", "(", "sec", ",", "fir", ")", ")", "\n", "val", ".", "append", "(", "M0", "[", "(", "fir", ",", "sec", ")", "]", "/", "math", ".", "sqrt", "(", "du", "[", "fir", "]", ")", "/", "math", ".", "sqrt", "(", "du", "[", "sec", "]", ")", ")", "\n", "\n", "", "M", "=", "tf", ".", "SparseTensor", "(", "indices", "=", "ind", ",", "values", "=", "val", ",", "dense_shape", "=", "[", "e", ",", "e", "]", ")", "\n", "\n", "return", "M0", ",", "M", "\n", "\n"]], "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.get_se_input_layer": [[64, 72], ["print", "tf.convert_to_tensor", "tf.Variable", "tf.nn.l2_normalize", "open", "json.load", "print", "len", "len"], "function", ["None"], ["", "def", "get_se_input_layer", "(", "e", ",", "dimension", ",", "file_path", ")", ":", "\n", "    ", "print", "(", "'adding the primal input layer...'", ")", "\n", "with", "open", "(", "file", "=", "file_path", ",", "mode", "=", "'r'", ",", "encoding", "=", "'utf-8'", ")", "as", "f", ":", "\n", "        ", "embedding_list", "=", "json", ".", "load", "(", "f", ")", "\n", "print", "(", "len", "(", "embedding_list", ")", ",", "'rows,'", ",", "len", "(", "embedding_list", "[", "0", "]", ")", ",", "'columns.'", ")", "\n", "", "input_embeddings", "=", "tf", ".", "convert_to_tensor", "(", "embedding_list", ")", "\n", "ent_embeddings", "=", "tf", ".", "Variable", "(", "input_embeddings", ")", "\n", "return", "tf", ".", "nn", ".", "l2_normalize", "(", "ent_embeddings", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.add_diag_layer": [[74, 83], ["tf.nn.dropout", "print", "init", "tf.sparse_tensor_dense_matmul", "tf.multiply", "act_func"], "function", ["None"], ["", "def", "add_diag_layer", "(", "inlayer", ",", "dimension", ",", "M", ",", "act_func", ",", "dropout", "=", "0.0", ",", "init", "=", "ones", ")", ":", "\n", "    ", "inlayer", "=", "tf", ".", "nn", ".", "dropout", "(", "inlayer", ",", "1", "-", "dropout", ")", "\n", "print", "(", "'adding a layer...'", ")", "\n", "w0", "=", "init", "(", "[", "1", ",", "dimension", "]", ")", "\n", "tosum", "=", "tf", ".", "sparse_tensor_dense_matmul", "(", "M", ",", "tf", ".", "multiply", "(", "inlayer", ",", "w0", ")", ")", "\n", "if", "act_func", "is", "None", ":", "\n", "        ", "return", "tosum", "\n", "", "else", ":", "\n", "        ", "return", "act_func", "(", "tosum", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.highway": [[85, 92], ["Init.glorot", "Init.zeros", "tf.nn.sigmoid", "tf.matmul"], "function", ["home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Init.glorot", "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Init.zeros"], ["", "", "def", "highway", "(", "layer1", ",", "layer2", ",", "dimension", ")", ":", "\n", "    ", "kernel_gate", "=", "glorot", "(", "[", "dimension", ",", "dimension", "]", ")", "\n", "bias_gate", "=", "zeros", "(", "[", "dimension", "]", ")", "\n", "transform_gate", "=", "tf", ".", "matmul", "(", "layer1", ",", "kernel_gate", ")", "+", "bias_gate", "\n", "transform_gate", "=", "tf", ".", "nn", ".", "sigmoid", "(", "transform_gate", ")", "\n", "carry_gate", "=", "1.0", "-", "transform_gate", "\n", "return", "transform_gate", "*", "layer2", "+", "carry_gate", "*", "layer1", "\n", "\n"]], "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.softmax_positiv": [[94, 99], ["tf.greater", "tf.where", "tf.reduce_sum", "tf.exp", "tf.exp", "tf.where", "tf.zeros_like"], "function", ["None"], ["", "def", "softmax_positiv", "(", "T", ")", ":", "\n", "    ", "Tsign", "=", "tf", ".", "greater", "(", "T", ",", "0", ")", "\n", "_reduce_sum", "=", "tf", ".", "reduce_sum", "(", "\n", "tf", ".", "exp", "(", "tf", ".", "where", "(", "Tsign", ",", "T", ",", "tf", ".", "zeros_like", "(", "T", ")", ")", ")", ",", "-", "1", ",", "keepdims", "=", "True", ")", "+", "math", ".", "e", "\n", "return", "tf", ".", "where", "(", "Tsign", ",", "tf", ".", "exp", "(", "T", ")", "/", "_reduce_sum", ",", "T", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.neighborhood_matching": [[101, 125], ["tf.tile", "tf.tile", "tf.transpose", "tf.transpose", "tf.reduce_sum", "tf.reduce_sum", "tf.expand_dims", "tf.expand_dims", "tf.einsum", "Model.softmax_positiv", "Model.softmax_positiv", "tf.concat", "tf.expand_dims", "tf.expand_dims", "tf.multiply", "tf.multiply", "tf.multiply", "tf.multiply", "tf.reduce_sum", "tf.reduce_sum", "tf.stack", "tf.transpose", "tf.multiply", "tf.multiply", "tf.expand_dims", "tf.expand_dims"], "function", ["home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.softmax_positiv", "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.softmax_positiv"], ["", "def", "neighborhood_matching", "(", "inlayer", ",", "mask", ",", "max_nbr", ",", "beta", ")", ":", "\n", "    ", "inlayer_ILL", "=", "tf", ".", "tile", "(", "tf", ".", "expand_dims", "(", "inlayer", "[", "0", "]", ",", "2", ")", ",", "[", "1", ",", "1", ",", "max_nbr", ",", "1", "]", ")", "\n", "inlayer_can", "=", "tf", ".", "tile", "(", "tf", ".", "expand_dims", "(", "inlayer", "[", "1", "]", ",", "2", ")", ",", "[", "1", ",", "1", ",", "max_nbr", ",", "1", "]", ")", "\n", "inlayer_ILL_trans", "=", "tf", ".", "transpose", "(", "inlayer_ILL", ",", "[", "0", ",", "2", ",", "1", ",", "3", "]", ")", "\n", "inlayer_can_trans", "=", "tf", ".", "transpose", "(", "inlayer_can", ",", "[", "0", ",", "2", ",", "1", ",", "3", "]", ")", "\n", "sim_ILL", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "multiply", "(", "inlayer_ILL", ",", "inlayer_can_trans", ")", ",", "-", "1", ")", "\n", "sim_can", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "multiply", "(", "inlayer_can", ",", "inlayer_ILL_trans", ")", ",", "-", "1", ")", "\n", "mask_ILL", "=", "tf", ".", "expand_dims", "(", "mask", "[", "0", "]", ",", "-", "1", ")", "\n", "mask_can", "=", "tf", ".", "expand_dims", "(", "mask", "[", "1", "]", ",", "1", ")", "\n", "mask_all", "=", "tf", ".", "einsum", "(", "'ijk,ikl->ijl'", ",", "mask_ILL", ",", "mask_can", ")", "\n", "\n", "a_ILL", "=", "softmax_positiv", "(", "tf", ".", "multiply", "(", "sim_ILL", ",", "mask_all", ")", ")", "\n", "a_can", "=", "softmax_positiv", "(", "tf", ".", "multiply", "(", "\n", "sim_can", ",", "tf", ".", "transpose", "(", "mask_all", ",", "[", "0", ",", "2", ",", "1", "]", ")", ")", ")", "\n", "\n", "m_ILL", "=", "inlayer", "[", "0", "]", "-", "tf", ".", "reduce_sum", "(", "tf", ".", "multiply", "(", "inlayer_can_trans", ",", "\n", "tf", ".", "expand_dims", "(", "a_ILL", ",", "-", "1", ")", ")", ",", "2", ")", "\n", "m_can", "=", "inlayer", "[", "1", "]", "-", "tf", ".", "reduce_sum", "(", "tf", ".", "multiply", "(", "inlayer_ILL_trans", ",", "\n", "tf", ".", "expand_dims", "(", "a_can", ",", "-", "1", ")", ")", ",", "2", ")", "\n", "m", "=", "tf", ".", "stack", "(", "[", "m_ILL", ",", "m_can", "]", ",", "0", ")", "*", "beta", "\n", "output_layer", "=", "tf", ".", "concat", "(", "[", "inlayer", ",", "m", "]", ",", "-", "1", ")", "\n", "return", "output_layer", "\n", "\n"]], "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.mock_neighborhood_matching": [[127, 151], ["tf.tile", "tf.tile", "tf.transpose", "tf.transpose", "tf.reduce_sum", "tf.reduce_sum", "tf.expand_dims", "tf.expand_dims", "tf.einsum", "Model.softmax_positiv", "Model.softmax_positiv", "tf.concat", "tf.expand_dims", "tf.expand_dims", "tf.multiply", "tf.multiply", "tf.multiply", "tf.multiply", "tf.reduce_sum", "tf.reduce_sum", "tf.stack", "tf.transpose", "tf.multiply", "tf.multiply", "tf.expand_dims", "tf.expand_dims"], "function", ["home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.softmax_positiv", "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.softmax_positiv"], ["", "def", "mock_neighborhood_matching", "(", "inlayer", ",", "nbr_weight", ",", "max_nbr", ",", "beta", ")", ":", "\n", "    ", "inlayer_ILL", "=", "tf", ".", "tile", "(", "tf", ".", "expand_dims", "(", "inlayer", "[", "0", "]", ",", "2", ")", ",", "[", "1", ",", "1", ",", "max_nbr", ",", "1", "]", ")", "\n", "inlayer_can", "=", "tf", ".", "tile", "(", "tf", ".", "expand_dims", "(", "inlayer", "[", "1", "]", ",", "2", ")", ",", "[", "1", ",", "1", ",", "max_nbr", ",", "1", "]", ")", "\n", "inlayer_ILL_trans", "=", "tf", ".", "transpose", "(", "inlayer_ILL", ",", "[", "0", ",", "2", ",", "1", ",", "3", "]", ")", "\n", "inlayer_can_trans", "=", "tf", ".", "transpose", "(", "inlayer_can", ",", "[", "0", ",", "2", ",", "1", ",", "3", "]", ")", "\n", "sim_ILL", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "multiply", "(", "inlayer_ILL", ",", "inlayer_can_trans", ")", ",", "-", "1", ")", "\n", "sim_can", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "multiply", "(", "inlayer_can", ",", "inlayer_ILL_trans", ")", ",", "-", "1", ")", "\n", "weight_ILL", "=", "tf", ".", "expand_dims", "(", "nbr_weight", "[", "0", "]", ",", "-", "1", ")", "\n", "weight_can", "=", "tf", ".", "expand_dims", "(", "nbr_weight", "[", "1", "]", ",", "1", ")", "\n", "weight_all", "=", "tf", ".", "einsum", "(", "'ijk,ikl->ijl'", ",", "weight_ILL", ",", "weight_can", ")", "\n", "\n", "a_ILL", "=", "softmax_positiv", "(", "tf", ".", "multiply", "(", "sim_ILL", ",", "weight_all", ")", ")", "\n", "a_can", "=", "softmax_positiv", "(", "tf", ".", "multiply", "(", "\n", "sim_can", ",", "tf", ".", "transpose", "(", "weight_all", ",", "[", "0", ",", "2", ",", "1", "]", ")", ")", ")", "\n", "\n", "m_ILL", "=", "inlayer", "[", "0", "]", "-", "tf", ".", "reduce_sum", "(", "tf", ".", "multiply", "(", "inlayer_can_trans", ",", "\n", "tf", ".", "expand_dims", "(", "a_ILL", ",", "-", "1", ")", ")", ",", "2", ")", "\n", "m_can", "=", "inlayer", "[", "1", "]", "-", "tf", ".", "reduce_sum", "(", "tf", ".", "multiply", "(", "inlayer_ILL_trans", ",", "\n", "tf", ".", "expand_dims", "(", "a_can", ",", "-", "1", ")", ")", ",", "2", ")", "\n", "m", "=", "tf", ".", "stack", "(", "[", "m_ILL", ",", "m_can", "]", ",", "0", ")", "*", "beta", "\n", "output_layer", "=", "tf", ".", "concat", "(", "[", "inlayer", ",", "m", "]", ",", "-", "1", ")", "\n", "return", "output_layer", "\n", "\n"]], "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.neighborhood_aggregation": [[153, 161], ["tf.einsum", "tf.einsum", "tf.reduce_sum", "tf.einsum", "act_func", "tf.multiply", "tf.expand_dims"], "function", ["None"], ["", "def", "neighborhood_aggregation", "(", "outlayer", ",", "mask", ",", "w_gate", ",", "w_N", ",", "act_func", ")", ":", "\n", "    ", "weight_ij", "=", "tf", ".", "einsum", "(", "'ijkl,lp->ijkp'", ",", "outlayer", ",", "w_gate", ")", "\n", "if", "act_func", "is", "not", "None", ":", "\n", "        ", "weight_ij", "=", "act_func", "(", "weight_ij", ")", "\n", "", "h_sum", "=", "tf", ".", "einsum", "(", "'ijkl,ijkl->ijkl'", ",", "outlayer", ",", "weight_ij", ")", "\n", "h_sum", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "multiply", "(", "h_sum", ",", "tf", ".", "expand_dims", "(", "mask", ",", "-", "1", ")", ")", ",", "2", ")", "\n", "h_j", "=", "tf", ".", "einsum", "(", "'ijk,kl->ijl'", ",", "h_sum", ",", "w_N", ")", "\n", "return", "h_j", "\n", "\n"]], "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.mock_neighborhood_aggregation": [[163, 172], ["tf.einsum", "tf.einsum", "tf.reduce_sum", "tf.einsum", "act_func", "tf.multiply", "tf.expand_dims"], "function", ["None"], ["", "def", "mock_neighborhood_aggregation", "(", "outlayer", ",", "nbr_weight", ",", "w_gate", ",", "w_N", ",", "act_func", ")", ":", "\n", "    ", "weight_ij", "=", "tf", ".", "einsum", "(", "'ijkl,lp->ijkp'", ",", "outlayer", ",", "w_gate", ")", "\n", "if", "act_func", "is", "not", "None", ":", "\n", "        ", "weight_ij", "=", "act_func", "(", "weight_ij", ")", "\n", "", "h_sum", "=", "tf", ".", "einsum", "(", "'ijkl,ijkl->ijkl'", ",", "outlayer", ",", "weight_ij", ")", "\n", "h_sum", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "multiply", "(", "\n", "h_sum", ",", "tf", ".", "expand_dims", "(", "nbr_weight", ",", "-", "1", ")", ")", ",", "2", ")", "\n", "h_j", "=", "tf", ".", "einsum", "(", "'ijk,kl->ijl'", ",", "h_sum", ",", "w_N", ")", "\n", "return", "h_j", "\n", "\n"]], "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.get_loss_pre": [[174, 193], ["tf.nn.embedding_lookup", "tf.nn.embedding_lookup", "tf.reduce_sum", "tf.nn.embedding_lookup", "tf.nn.embedding_lookup", "tf.reduce_sum", "tf.nn.relu", "tf.nn.embedding_lookup", "tf.nn.embedding_lookup", "tf.reduce_sum", "tf.nn.relu", "tf.abs", "tf.abs", "tf.reshape", "tf.add", "tf.abs", "tf.reshape", "tf.add", "tf.reshape", "tf.reshape", "tf.reduce_mean", "tf.reduce_mean"], "function", ["None"], ["", "def", "get_loss_pre", "(", "outlayer", ",", "ILL", ",", "gamma", ",", "k", ",", "neg_left", ",", "neg_right", ",", "neg2_left", ",", "neg2_right", ")", ":", "\n", "    ", "left", "=", "ILL", "[", ":", ",", "0", "]", "\n", "right", "=", "ILL", "[", ":", ",", "1", "]", "\n", "left_x", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "outlayer", ",", "left", ")", "\n", "right_x", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "outlayer", ",", "right", ")", "\n", "\n", "A", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "abs", "(", "left_x", "-", "right_x", ")", ",", "1", ")", "\n", "neg_l_x", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "outlayer", ",", "neg_left", ")", "\n", "neg_r_x", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "outlayer", ",", "neg_right", ")", "\n", "B", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "abs", "(", "neg_l_x", "-", "neg_r_x", ")", ",", "1", ")", "\n", "C", "=", "-", "tf", ".", "reshape", "(", "B", ",", "[", "-", "1", ",", "k", "]", ")", "\n", "D", "=", "A", "+", "gamma", "\n", "L1", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "add", "(", "C", ",", "tf", ".", "reshape", "(", "D", ",", "[", "-", "1", ",", "1", "]", ")", ")", ")", "\n", "neg_l_x", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "outlayer", ",", "neg2_left", ")", "\n", "neg_r_x", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "outlayer", ",", "neg2_right", ")", "\n", "B", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "abs", "(", "neg_l_x", "-", "neg_r_x", ")", ",", "1", ")", "\n", "C", "=", "-", "tf", ".", "reshape", "(", "B", ",", "[", "-", "1", ",", "k", "]", ")", "\n", "L2", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "add", "(", "C", ",", "tf", ".", "reshape", "(", "D", ",", "[", "-", "1", ",", "1", "]", ")", ")", ")", "\n", "return", "(", "tf", ".", "reduce_mean", "(", "L1", ")", "+", "tf", ".", "reduce_mean", "(", "L2", ")", ")", "/", "2.0", "\n", "\n"]], "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.get_loss_match": [[195, 206], ["tf.reshape", "tf.reduce_sum", "tf.reduce_sum", "tf.nn.relu", "tf.reduce_sum", "tf.nn.relu", "tf.abs", "tf.abs", "tf.reshape", "tf.add", "tf.abs", "tf.reshape", "tf.add", "tf.reshape", "tf.reshape", "tf.reduce_mean", "tf.reduce_mean"], "function", ["None"], ["", "def", "get_loss_match", "(", "outlayer", ",", "ILL", ",", "gamma", ",", "c", ",", "dimension", ")", ":", "\n", "    ", "out", "=", "tf", ".", "reshape", "(", "outlayer", ",", "[", "2", ",", "-", "1", ",", "2", ",", "c", ",", "dimension", "]", ")", "\n", "A", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "abs", "(", "out", "[", "0", ",", ":", ",", "0", ",", "0", "]", "-", "out", "[", "1", ",", ":", ",", "0", ",", "0", "]", ")", ",", "-", "1", ")", "\n", "B", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "abs", "(", "out", "[", "0", ",", ":", ",", "0", ",", "1", ":", "c", "]", "-", "out", "[", "1", ",", ":", ",", "0", ",", "1", ":", "c", "]", ")", ",", "-", "1", ")", "\n", "C", "=", "-", "tf", ".", "reshape", "(", "B", ",", "[", "-", "1", ",", "c", "-", "1", "]", ")", "\n", "D", "=", "A", "+", "gamma", "\n", "L1", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "add", "(", "C", ",", "tf", ".", "reshape", "(", "D", ",", "[", "-", "1", ",", "1", "]", ")", ")", ")", "\n", "B", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "abs", "(", "out", "[", "0", ",", ":", ",", "1", ",", "1", ":", "c", "]", "-", "out", "[", "1", ",", ":", ",", "1", ",", "1", ":", "c", "]", ")", ",", "-", "1", ")", "\n", "C", "=", "-", "tf", ".", "reshape", "(", "B", ",", "[", "-", "1", ",", "c", "-", "1", "]", ")", "\n", "L2", "=", "tf", ".", "nn", ".", "relu", "(", "tf", ".", "add", "(", "C", ",", "tf", ".", "reshape", "(", "D", ",", "[", "-", "1", ",", "1", "]", ")", ")", ")", "\n", "return", "(", "tf", ".", "reduce_mean", "(", "L1", ")", "+", "tf", ".", "reduce_mean", "(", "L2", ")", ")", "/", "2.0", "\n", "\n"]], "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.get_loss_w": [[208, 237], ["tf.gather", "tf.gather", "tf.concat", "tf.gather", "tf.gather", "tf.to_float", "tf.gather", "tf.einsum", "tf.reshape", "tf.reshape", "tf.reshape", "tf.gather", "Model.mock_neighborhood_matching", "Model.mock_neighborhood_aggregation", "tf.concat", "tf.concat", "tf.reduce_sum", "tf.reduce_mean", "tf.gather", "tf.matmul", "tf.transpose", "Model.softmax_positiv", "tf.abs", "tf.multiply"], "function", ["home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.mock_neighborhood_matching", "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.mock_neighborhood_aggregation", "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.softmax_positiv"], ["", "def", "get_loss_w", "(", "select_train", ",", "outlayer", ",", "nbr_all", ",", "\n", "mask_all", ",", "sample_w", ",", "w_gate", ",", "w_N", ",", "\n", "ILL", ",", "max_nbr_all", ",", "beta", ")", ":", "\n", "    ", "left", "=", "tf", ".", "gather", "(", "ILL", "[", ":", ",", "0", "]", ",", "select_train", ")", "\n", "right", "=", "tf", ".", "gather", "(", "ILL", "[", ":", ",", "1", "]", ",", "select_train", ")", "\n", "t", "=", "10", "\n", "idx", "=", "tf", ".", "concat", "(", "[", "left", ",", "right", "]", ",", "axis", "=", "0", ")", "\n", "\n", "outlayer_idx", "=", "tf", ".", "gather", "(", "outlayer", ",", "idx", ")", "\n", "nbr_idx", "=", "tf", ".", "gather", "(", "nbr_all", ",", "idx", ")", "\n", "mask_idx", "=", "tf", ".", "to_float", "(", "tf", ".", "gather", "(", "mask_all", ",", "idx", ")", ")", "\n", "outlayer_nbr_idx", "=", "tf", ".", "gather", "(", "outlayer", ",", "nbr_idx", ")", "\n", "out_sim", "=", "tf", ".", "einsum", "(", "'ij,ijk->ik'", ",", "tf", ".", "matmul", "(", "outlayer_idx", ",", "sample_w", ")", ",", "\n", "tf", ".", "transpose", "(", "outlayer_nbr_idx", ",", "[", "0", ",", "2", ",", "1", "]", ")", ")", "\n", "nbr_weight", "=", "tf", ".", "reshape", "(", "softmax_positiv", "(", "tf", ".", "multiply", "(", "\n", "out_sim", ",", "mask_idx", ")", ")", ",", "(", "2", ",", "t", ",", "-", "1", ")", ")", "\n", "\n", "outlayer_idx", "=", "tf", ".", "reshape", "(", "outlayer_idx", ",", "(", "2", ",", "t", ",", "-", "1", ")", ")", "\n", "nbr_idx", "=", "tf", ".", "reshape", "(", "nbr_idx", ",", "(", "2", ",", "t", ",", "-", "1", ")", ")", "\n", "outlayer_nbr_idx", "=", "tf", ".", "gather", "(", "outlayer", ",", "nbr_idx", ")", "\n", "mock_hat_h", "=", "mock_neighborhood_matching", "(", "\n", "outlayer_nbr_idx", ",", "nbr_weight", ",", "max_nbr_all", ",", "beta", ")", "\n", "mock_g", "=", "mock_neighborhood_aggregation", "(", "\n", "mock_hat_h", ",", "nbr_weight", ",", "w_gate", ",", "w_N", ",", "tf", ".", "sigmoid", ")", "\n", "left_x", "=", "tf", ".", "concat", "(", "[", "outlayer_idx", "[", "0", "]", ",", "mock_g", "[", "0", "]", "]", ",", "axis", "=", "-", "1", ")", "\n", "right_x", "=", "tf", ".", "concat", "(", "[", "outlayer_idx", "[", "1", "]", ",", "mock_g", "[", "1", "]", "]", ",", "axis", "=", "-", "1", ")", "\n", "\n", "A", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "abs", "(", "left_x", "-", "right_x", ")", ",", "1", ")", "\n", "return", "tf", ".", "reduce_mean", "(", "A", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.build": [[239, 305], ["tf.reset_default_graph", "Model.get_se_input_layer", "Model.get_sparse_tensor", "Model.get_nbr", "print", "Model.add_diag_layer", "Model.highway", "Model.add_diag_layer", "Model.highway", "print", "tf.placeholder", "tf.placeholder", "tf.placeholder", "tf.placeholder", "tf.placeholder", "tf.reshape", "tf.stack", "tf.gather", "tf.gather", "tf.nn.embedding_lookup", "tf.nn.embedding_lookup", "Init.glorot", "Init.glorot", "print", "Model.neighborhood_matching", "print", "print", "Model.neighborhood_aggregation", "tf.concat", "print", "print", "tf.placeholder", "tf.placeholder", "tf.placeholder", "tf.placeholder", "Model.get_loss_pre", "print", "Model.get_loss_match", "tf.placeholder", "print", "tf.placeholder", "tf.Variable", "Model.get_loss_w", "highway.get_shape", "tf.transpose", "neighborhood_matching.get_shape", "tf.concat.get_shape", "tf.eye", "tf.reshape", "tf.reshape", "tf.reshape", "tf.reshape", "tf.tile", "tf.expand_dims"], "function", ["home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.get_se_input_layer", "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.get_sparse_tensor", "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.get_nbr", "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.add_diag_layer", "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.highway", "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.add_diag_layer", "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.highway", "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Init.glorot", "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Init.glorot", "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.neighborhood_matching", "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.neighborhood_aggregation", "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.get_loss_pre", "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.get_loss_match", "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.get_loss_w"], ["", "def", "build", "(", "dimension", ",", "dimension_g", ",", "act_func", ",", "gamma", ",", "k", ",", "vec_path", ",", "e", ",", "all_nbr_num", ",", "sampled_nbr_num", ",", "beta", ",", "KG", ")", ":", "\n", "    ", "tf", ".", "reset_default_graph", "(", ")", "\n", "input_layer", "=", "get_se_input_layer", "(", "e", ",", "dimension", ",", "vec_path", ")", "\n", "M0", ",", "M", "=", "get_sparse_tensor", "(", "e", ",", "KG", ")", "\n", "nbr_all", ",", "mask_all", "=", "get_nbr", "(", "M0", ",", "e", ",", "all_nbr_num", ")", "\n", "\n", "print", "(", "'KG structure embedding'", ")", "\n", "hidden_layer_1", "=", "add_diag_layer", "(", "\n", "input_layer", ",", "dimension", ",", "M", ",", "act_func", ",", "dropout", "=", "0.0", ")", "\n", "hidden_layer", "=", "highway", "(", "input_layer", ",", "hidden_layer_1", ",", "dimension", ")", "\n", "hidden_layer_2", "=", "add_diag_layer", "(", "\n", "hidden_layer", ",", "dimension", ",", "M", ",", "act_func", ",", "dropout", "=", "0.0", ")", "\n", "output_h", "=", "highway", "(", "hidden_layer", ",", "hidden_layer_2", ",", "dimension", ")", "\n", "print", "(", "'shape of output_h: '", ",", "output_h", ".", "get_shape", "(", ")", ")", "\n", "\n", "c", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "None", ",", "\"c\"", ")", "\n", "nbr_sampled", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "e", ",", "sampled_nbr_num", "]", ",", "\"nbr_sampled\"", ")", "\n", "mask_sampled", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "e", ",", "sampled_nbr_num", "]", ",", "\"mask_sampled\"", ")", "\n", "ILL", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", ",", "2", "]", ",", "\"ILL\"", ")", "\n", "candidate", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", "]", ",", "\"candidate\"", ")", "\n", "candidate", "=", "tf", ".", "reshape", "(", "tf", ".", "transpose", "(", "\n", "tf", ".", "reshape", "(", "candidate", ",", "(", "2", ",", "-", "1", ",", "c", ")", ")", ",", "(", "1", ",", "0", ",", "2", ")", ")", ",", "[", "-", "1", "]", ")", "\n", "idx_pair", "=", "tf", ".", "stack", "(", "\n", "[", "tf", ".", "reshape", "(", "tf", ".", "tile", "(", "tf", ".", "expand_dims", "(", "ILL", ",", "-", "1", ")", ",", "(", "1", ",", "1", ",", "c", ")", ")", ",", "[", "-", "1", "]", ")", ",", "candidate", "]", ")", "\n", "nbr_pair", "=", "tf", ".", "gather", "(", "nbr_sampled", ",", "idx_pair", ")", "\n", "mask_pair", "=", "tf", ".", "gather", "(", "mask_sampled", ",", "idx_pair", ")", "\n", "h_ctr", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "output_h", ",", "idx_pair", ")", "\n", "h_nbr", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "\n", "output_h", ",", "nbr_pair", ")", "\n", "\n", "w_gate", "=", "glorot", "(", "[", "dimension", "*", "2", ",", "dimension", "*", "2", "]", ")", "\n", "w_N", "=", "glorot", "(", "[", "dimension", "*", "2", ",", "dimension_g", "]", ")", "\n", "\n", "print", "(", "'neighborhood matching'", ")", "\n", "output_hat_h", "=", "neighborhood_matching", "(", "h_nbr", ",", "mask_pair", ",", "sampled_nbr_num", ",", "beta", ")", "\n", "print", "(", "'shape of output_hat_h: '", ",", "output_hat_h", ".", "get_shape", "(", ")", ")", "\n", "\n", "print", "(", "'neighborhood aggregation'", ")", "\n", "output_g", "=", "neighborhood_aggregation", "(", "\n", "output_hat_h", ",", "mask_pair", ",", "w_gate", ",", "w_N", ",", "tf", ".", "sigmoid", ")", "\n", "output_h_match", "=", "tf", ".", "concat", "(", "[", "tf", ".", "reshape", "(", "\n", "h_ctr", ",", "[", "-", "1", ",", "dimension", "]", ")", ",", "tf", ".", "reshape", "(", "output_g", ",", "[", "-", "1", ",", "dimension_g", "]", ")", "]", ",", "-", "1", ")", "\n", "dimension3", "=", "dimension", "+", "dimension_g", "\n", "print", "(", "'shape of output_h_match: '", ",", "output_h_match", ".", "get_shape", "(", ")", ")", "\n", "\n", "print", "(", "\"compute pre-training loss\"", ")", "\n", "neg_left", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", "]", ",", "\"neg_left\"", ")", "\n", "neg_right", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", "]", ",", "\"neg_right\"", ")", "\n", "neg2_left", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", "]", ",", "\"neg2_left\"", ")", "\n", "neg2_right", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "None", "]", ",", "\"neg2_right\"", ")", "\n", "loss_pre", "=", "get_loss_pre", "(", "output_h", ",", "ILL", ",", "gamma", ",", "k", ",", "neg_left", ",", "\n", "neg_right", ",", "neg2_left", ",", "neg2_right", ")", "\n", "\n", "print", "(", "\"compute overall loss\"", ")", "\n", "loss_match", "=", "get_loss_match", "(", "output_h_match", ",", "ILL", ",", "gamma", ",", "c", ",", "dimension3", ")", "\n", "alpha", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ",", "None", ",", "\"alpha\"", ")", "\n", "loss_all", "=", "(", "1", "-", "alpha", ")", "*", "loss_pre", "+", "alpha", "*", "loss_match", "\n", "\n", "print", "(", "\"compute sampling process loss\"", ")", "\n", "select_train", "=", "tf", ".", "placeholder", "(", "tf", ".", "int32", ",", "[", "10", "]", ",", "\"select_train\"", ")", "\n", "sample_w", "=", "tf", ".", "Variable", "(", "tf", ".", "eye", "(", "dimension", ",", "name", "=", "\"sample_w\"", ")", ")", "\n", "loss_w", "=", "get_loss_w", "(", "select_train", ",", "output_h", ",", "nbr_all", ",", "\n", "mask_all", ",", "sample_w", ",", "w_gate", ",", "w_N", ",", "\n", "ILL", ",", "all_nbr_num", ",", "beta", ")", "\n", "\n", "return", "output_h", ",", "output_h_match", ",", "loss_all", ",", "sample_w", ",", "loss_w", ",", "M0", ",", "nbr_all", ",", "mask_all", "\n", "\n"]], "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.get_neg": [[307, 328], ["len", "np.array", "np.array", "range", "np.array", "neg.reshape.reshape", "int", "scipy.spatial.distance.cdist", "range", "int", "sim[].argsort", "neg.reshape.append"], "function", ["None"], ["", "def", "get_neg", "(", "ILL", ",", "output_layer", ",", "k", ",", "batchnum", ")", ":", "\n", "    ", "neg", "=", "[", "]", "\n", "t", "=", "len", "(", "ILL", ")", "\n", "ILL_vec", "=", "np", ".", "array", "(", "[", "output_layer", "[", "e1", "]", "for", "e1", "in", "ILL", "]", ")", "\n", "KG_vec", "=", "np", ".", "array", "(", "output_layer", ")", "\n", "for", "p", "in", "range", "(", "batchnum", ")", ":", "\n", "        ", "head", "=", "int", "(", "t", "/", "batchnum", "*", "p", ")", "\n", "if", "p", "==", "batchnum", "-", "1", ":", "\n", "            ", "tail", "=", "t", "\n", "", "else", ":", "\n", "            ", "tail", "=", "int", "(", "t", "/", "batchnum", "*", "(", "p", "+", "1", ")", ")", "\n", "", "sim", "=", "scipy", ".", "spatial", ".", "distance", ".", "cdist", "(", "\n", "ILL_vec", "[", "head", ":", "tail", "]", ",", "KG_vec", ",", "metric", "=", "'cityblock'", ")", "\n", "for", "i", "in", "range", "(", "tail", "-", "head", ")", ":", "\n", "            ", "rank", "=", "sim", "[", "i", ",", ":", "]", ".", "argsort", "(", ")", "\n", "neg", ".", "append", "(", "rank", "[", "0", ":", "k", "]", ")", "\n", "\n", "", "", "neg", "=", "np", ".", "array", "(", "neg", ")", "\n", "neg", "=", "neg", ".", "reshape", "(", "(", "t", "*", "k", ",", ")", ")", "\n", "\n", "return", "neg", "\n", "\n"]], "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.np_softmax": [[330, 333], ["np.max", "np.exp", "np.sum", "np.exp"], "function", ["None"], ["", "def", "np_softmax", "(", "x", ",", "T", "=", "0.1", ")", ":", "\n", "    ", "x", "=", "x", "-", "np", ".", "max", "(", "x", ",", "axis", "=", "-", "1", ",", "keepdims", "=", "True", ")", "\n", "return", "np", ".", "exp", "(", "x", "/", "T", ")", "/", "np", ".", "sum", "(", "np", ".", "exp", "(", "x", "/", "T", ")", ",", "axis", "=", "-", "1", ",", "keepdims", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.sample_nbr": [[335, 363], ["range", "int", "np.dot", "np.tile().transpose", "range", "int", "np.dot", "out.transpose", "Model.np_softmax", "np.sum", "np.tile", "np.sum", "nbr.append", "nbr.append", "np.arange", "np.random.choice"], "function", ["home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.np_softmax"], ["", "def", "sample_nbr", "(", "out", ",", "nbr_all", ",", "mask_all", ",", "e", ",", "max_nbr", ",", "w", ",", "batchnum", ")", ":", "\n", "    ", "nbr", "=", "[", "]", "\n", "for", "p", "in", "range", "(", "batchnum", ")", ":", "\n", "        ", "head", "=", "int", "(", "e", "/", "batchnum", "*", "p", ")", "\n", "if", "p", "==", "batchnum", "-", "1", ":", "\n", "            ", "tail", "=", "e", "\n", "", "else", ":", "\n", "            ", "tail", "=", "int", "(", "e", "/", "batchnum", "*", "(", "p", "+", "1", ")", ")", "\n", "", "mask_p", "=", "mask_all", "[", "head", ":", "tail", "]", "\n", "nbr_p", "=", "nbr_all", "[", "head", ":", "tail", "]", "\n", "sim", "=", "np", ".", "dot", "(", "np", ".", "dot", "(", "out", "[", "head", ":", "tail", "]", ",", "w", ")", ",", "out", ".", "transpose", "(", ")", ")", "\n", "x_axis_index", "=", "np", ".", "tile", "(", "np", ".", "arange", "(", "tail", "-", "head", ")", ",", "\n", "(", "nbr_all", ".", "shape", "[", "1", "]", ",", "1", ")", ")", ".", "transpose", "(", ")", "\n", "\n", "eps", "=", "1e-8", "\n", "prob", "=", "sim", "[", "x_axis_index", ",", "nbr_p", "]", "-", "1e8", "*", "(", "1", "-", "mask_p", ")", "\n", "prob", "=", "np_softmax", "(", "prob", ")", "+", "eps", "*", "mask_p", "\n", "prob", "=", "prob", "/", "np", ".", "sum", "(", "prob", ",", "axis", "=", "1", ",", "keepdims", "=", "True", ")", "\n", "\n", "for", "i", "in", "range", "(", "tail", "-", "head", ")", ":", "\n", "            ", "if", "np", ".", "sum", "(", "mask_p", "[", "i", "]", ")", ">", "max_nbr", ":", "\n", "                ", "nbr", ".", "append", "(", "nbr_p", "[", "i", ",", "np", ".", "random", ".", "choice", "(", "\n", "nbr_all", ".", "shape", "[", "1", "]", ",", "max_nbr", ",", "replace", "=", "False", ",", "p", "=", "prob", "[", "i", "]", ")", "]", ")", "\n", "", "else", ":", "\n", "                ", "nbr", ".", "append", "(", "nbr_p", "[", "i", ",", "0", ":", "max_nbr", "]", ")", "\n", "", "", "", "mask", "=", "mask_all", "[", ":", ",", "0", ":", "max_nbr", "]", "\n", "\n", "return", "nbr", ",", "mask", "\n", "\n"]], "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.mask_candidate": [[365, 373], ["np.zeros", "np.zeros"], "function", ["home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Init.zeros", "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Init.zeros"], ["", "def", "mask_candidate", "(", "e", ",", "e1", ",", "e2", ")", ":", "\n", "    ", "mask_e1", "=", "np", ".", "zeros", "(", "e", ")", "\n", "mask_e2", "=", "np", ".", "zeros", "(", "e", ")", "\n", "for", "x", "in", "e1", ":", "\n", "        ", "mask_e1", "[", "x", "]", "=", "1", "\n", "", "for", "x", "in", "e2", ":", "\n", "        ", "mask_e2", "[", "x", "]", "=", "1", "\n", "", "return", "mask_e1", ",", "mask_e2", "\n", "\n"]], "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.sample_candidate": [[375, 401], ["len", "len", "np.array", "np.array", "range", "np.concatenate", "candidate.reshape.reshape", "int", "scipy.spatial.distance.cdist", "np.zeros", "range", "Model.np_softmax", "range", "int", "np.tile", "neg.append", "np.expand_dims", "np.asarray", "np.random.choice"], "function", ["home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Init.zeros", "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.np_softmax"], ["", "def", "sample_candidate", "(", "ILL", ",", "ILL_true", ",", "out", ",", "k", ",", "mask_e", ",", "batchnum", ")", ":", "\n", "    ", "t", "=", "len", "(", "ILL", ")", "\n", "e", "=", "len", "(", "out", ")", "\n", "ILL_vec", "=", "np", ".", "array", "(", "[", "out", "[", "x", "]", "for", "x", "in", "ILL", "]", ")", "\n", "KG_vec", "=", "np", ".", "array", "(", "out", ")", "\n", "neg", "=", "[", "]", "\n", "for", "p", "in", "range", "(", "batchnum", ")", ":", "\n", "        ", "head", "=", "int", "(", "t", "/", "batchnum", "*", "p", ")", "\n", "if", "p", "==", "batchnum", "-", "1", ":", "\n", "            ", "tail", "=", "t", "\n", "", "else", ":", "\n", "            ", "tail", "=", "int", "(", "t", "/", "batchnum", "*", "(", "p", "+", "1", ")", ")", "\n", "", "sim", "=", "scipy", ".", "spatial", ".", "distance", ".", "cdist", "(", "\n", "ILL_vec", "[", "head", ":", "tail", "]", ",", "KG_vec", ",", "metric", "=", "'cityblock'", ")", "\n", "mask_gold", "=", "np", ".", "zeros", "(", "(", "tail", "-", "head", ",", "e", ")", ")", "\n", "for", "i", "in", "range", "(", "tail", "-", "head", ")", ":", "\n", "            ", "mask_gold", "[", "i", "]", "[", "ILL_true", "[", "i", "+", "head", "]", "]", "=", "1", "\n", "", "mask", "=", "np", ".", "tile", "(", "mask_e", ",", "(", "tail", "-", "head", ",", "1", ")", ")", "+", "mask_gold", "\n", "prob", "=", "np_softmax", "(", "-", "sim", "-", "1e8", "*", "mask_gold", ")", "\n", "for", "i", "in", "range", "(", "tail", "-", "head", ")", ":", "\n", "            ", "neg", ".", "append", "(", "np", ".", "random", ".", "choice", "(", "e", ",", "k", "-", "1", ",", "replace", "=", "False", ",", "p", "=", "prob", "[", "i", "]", ")", ")", "\n", "\n", "", "", "candidate", "=", "np", ".", "concatenate", "(", "\n", "(", "np", ".", "expand_dims", "(", "ILL_true", ",", "-", "1", ")", ",", "np", ".", "asarray", "(", "neg", ")", ")", ",", "axis", "=", "1", ")", "\n", "candidate", "=", "candidate", ".", "reshape", "(", "(", "t", "*", "k", ",", ")", ")", "\n", "return", "candidate", "\n", "\n"]], "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.training": [[403, 530], ["tf.train.AdamOptimizer().minimize", "tf.train.AdamOptimizer().minimize", "print", "tf.train.Saver", "tf.global_variables_initializer", "tf.Session", "tf.Session.run", "print", "np.array", "len", "np.reshape", "L.reshape", "L.reshape", "Model.get_nbr", "Model.mask_candidate", "np.reshape", "np.identity", "os.path.exists", "range", "tf.Session.close", "np.ones", "ILL[].reshape", "np.ones", "ILL[].reshape", "np.array", "os.path.exists", "os.makedirs", "tf.train.Saver.restore", "range", "tf.train.AdamOptimizer", "tf.train.AdamOptimizer", "tf.Session.run", "print", "Model.get_neg", "Model.get_neg", "print", "Model.sample_candidate", "Model.sample_candidate", "np.reshape", "print", "Model.sample_nbr", "int", "candidate[].reshape", "[].reshape", "[].reshape", "[].reshape", "[].reshape", "tf.Session.run", "tf.train.Saver.save", "print", "print", "tf.Session.run", "get_hits", "print", "range", "tf.Session.run", "np.concatenate", "np.reshape.reshape", "int", "range", "get_hits_new", "np.random.choice", "range", "print", "len", "int", "tf.Session.run", "len", "tf.Session.run", "L.reshape.reshape", "get_neg.reshape", "get_neg.reshape", "L.reshape.reshape", "len", "int", "test_can[].reshape", "sess.run.reshape", "np.concatenate", "len", "sess.run.reshape", "len"], "function", ["home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.get_nbr", "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.mask_candidate", "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Init.ones", "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Init.ones", "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.get_neg", "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.get_neg", "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.sample_candidate", "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.sample_candidate", "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Model.sample_nbr", "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Test.get_hits", "home.repos.pwc.inspect_result.StephanieWyt_NMN.include.Test.get_hits_new"], ["", "def", "training", "(", "output_h", ",", "output_h_match", ",", "loss_all", ",", "sample_w", ",", "loss_w", ",", "learning_rate", ",", "\n", "epochs", ",", "pre_epochs", ",", "ILL", ",", "e", ",", "k", ",", "sampled_nbr_num", ",", "save_suffix", ",", "dimension", ",", "dimension_g", ",", "c", ",", "\n", "train_batchnum", ",", "test_batchnum", ",", "\n", "test", ",", "M0", ",", "e1", ",", "e2", ",", "nbr_all", ",", "mask_all", ")", ":", "\n", "    ", "from", "include", ".", "Test", "import", "get_hits", ",", "get_hits_new", "\n", "train_step", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "learning_rate", ")", ".", "minimize", "(", "loss_all", ")", "\n", "train_step_w", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "\n", "learning_rate", ")", ".", "minimize", "(", "loss_w", ",", "var_list", "=", "[", "sample_w", "]", ")", "\n", "print", "(", "'initializing...'", ")", "\n", "saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "\n", "init", "=", "tf", ".", "global_variables_initializer", "(", ")", "\n", "sess", "=", "tf", ".", "Session", "(", ")", "\n", "sess", ".", "run", "(", "init", ")", "\n", "print", "(", "'running...'", ")", "\n", "J", "=", "[", "]", "\n", "ILL", "=", "np", ".", "array", "(", "ILL", ")", "\n", "t", "=", "len", "(", "ILL", ")", "\n", "ILL_reshape", "=", "np", ".", "reshape", "(", "ILL", ",", "2", "*", "t", ",", "order", "=", "'F'", ")", "\n", "L", "=", "np", ".", "ones", "(", "(", "t", ",", "k", ")", ")", "*", "(", "ILL", "[", ":", ",", "0", "]", ".", "reshape", "(", "(", "t", ",", "1", ")", ")", ")", "\n", "neg_left", "=", "L", ".", "reshape", "(", "(", "t", "*", "k", ",", ")", ")", "\n", "L", "=", "np", ".", "ones", "(", "(", "t", ",", "k", ")", ")", "*", "(", "ILL", "[", ":", ",", "1", "]", ".", "reshape", "(", "(", "t", ",", "1", ")", ")", ")", "\n", "neg2_right", "=", "L", ".", "reshape", "(", "(", "t", "*", "k", ",", ")", ")", "\n", "\n", "nbr_sampled", ",", "mask_sampled", "=", "get_nbr", "(", "M0", ",", "e", ",", "sampled_nbr_num", ")", "\n", "mask_e1", ",", "mask_e2", "=", "mask_candidate", "(", "e", ",", "e1", ",", "e2", ")", "\n", "test_reshape", "=", "np", ".", "reshape", "(", "np", ".", "array", "(", "test", ")", ",", "-", "1", ",", "order", "=", "'F'", ")", "\n", "sample_w_vec", "=", "np", ".", "identity", "(", "dimension", ")", "\n", "test_can_num", "=", "50", "\n", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "\"model/\"", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "\"model/\"", ")", "\n", "\n", "", "if", "os", ".", "path", ".", "exists", "(", "\"model/save_\"", "+", "save_suffix", "+", "\".ckpt.meta\"", ")", ":", "\n", "        ", "saver", ".", "restore", "(", "sess", ",", "\"model/save_\"", "+", "save_suffix", "+", "\".ckpt\"", ")", "\n", "start_epoch", "=", "pre_epochs", "\n", "", "else", ":", "\n", "        ", "start_epoch", "=", "0", "\n", "\n", "", "for", "i", "in", "range", "(", "start_epoch", ",", "epochs", ")", ":", "\n", "        ", "if", "i", "%", "50", "==", "0", ":", "\n", "            ", "out", "=", "sess", ".", "run", "(", "output_h", ")", "\n", "print", "(", "'get negative pairs'", ")", "\n", "neg2_left", "=", "get_neg", "(", "ILL", "[", ":", ",", "1", "]", ",", "out", ",", "k", ",", "train_batchnum", ")", "\n", "neg_right", "=", "get_neg", "(", "ILL", "[", ":", ",", "0", "]", ",", "out", ",", "k", ",", "train_batchnum", ")", "\n", "print", "(", "'sample candidates'", ")", "\n", "c_left", "=", "sample_candidate", "(", "ILL", "[", ":", ",", "1", "]", ",", "ILL", "[", ":", ",", "0", "]", ",", "out", ",", "c", ",", "mask_e2", ",", "train_batchnum", ")", "\n", "c_right", "=", "sample_candidate", "(", "ILL", "[", ":", ",", "0", "]", ",", "ILL", "[", ":", ",", "1", "]", ",", "out", ",", "c", ",", "mask_e1", ",", "train_batchnum", ")", "\n", "candidate", "=", "np", ".", "reshape", "(", "np", ".", "concatenate", "(", "\n", "(", "c_right", ",", "c_left", ")", ",", "axis", "=", "0", ")", ",", "(", "2", ",", "len", "(", "ILL", ")", ",", "c", ")", ")", "\n", "print", "(", "'sample neighborhood'", ")", "\n", "nbr_sampled", ",", "mask_sampled", "=", "sample_nbr", "(", "\n", "out", ",", "nbr_all", ",", "mask_all", ",", "e", ",", "sampled_nbr_num", ",", "sample_w_vec", ",", "test_batchnum", ")", "\n", "feeddict", "=", "{", "\"ILL:0\"", ":", "ILL", ",", "\n", "\"candidate:0\"", ":", "candidate", ".", "reshape", "(", "(", "-", "1", ",", ")", ")", ",", "\n", "\"neg_left:0\"", ":", "neg_left", ",", "\n", "\"neg_right:0\"", ":", "neg_right", ",", "\n", "\"neg2_left:0\"", ":", "neg2_left", ",", "\n", "\"neg2_right:0\"", ":", "neg2_right", ",", "\n", "\"nbr_sampled:0\"", ":", "nbr_sampled", ",", "\n", "\"mask_sampled:0\"", ":", "mask_sampled", ",", "\n", "\"c:0\"", ":", "c", "}", "\n", "\n", "if", "i", "<", "pre_epochs", ":", "\n", "                ", "feeddict", "[", "\"alpha:0\"", "]", "=", "0", "\n", "", "else", ":", "\n", "                ", "feeddict", "[", "\"alpha:0\"", "]", "=", "1", "\n", "\n", "", "", "for", "j", "in", "range", "(", "train_batchnum", ")", ":", "\n", "            ", "beg", "=", "int", "(", "t", "/", "train_batchnum", "*", "j", ")", "\n", "if", "j", "==", "train_batchnum", "-", "1", ":", "\n", "                ", "end", "=", "t", "\n", "", "else", ":", "\n", "                ", "end", "=", "int", "(", "t", "/", "train_batchnum", "*", "(", "j", "+", "1", ")", ")", "\n", "", "feeddict", "[", "\"ILL:0\"", "]", "=", "ILL", "[", "beg", ":", "end", "]", "\n", "feeddict", "[", "\"candidate:0\"", "]", "=", "candidate", "[", ":", ",", "beg", ":", "end", "]", ".", "reshape", "(", "(", "-", "1", ",", ")", ")", "\n", "feeddict", "[", "\"neg_left:0\"", "]", "=", "neg_left", ".", "reshape", "(", "\n", "(", "t", ",", "k", ")", ")", "[", "beg", ":", "end", "]", ".", "reshape", "(", "(", "-", "1", ",", ")", ")", "\n", "feeddict", "[", "\"neg_right:0\"", "]", "=", "neg_right", ".", "reshape", "(", "\n", "(", "t", ",", "k", ")", ")", "[", "beg", ":", "end", "]", ".", "reshape", "(", "(", "-", "1", ",", ")", ")", "\n", "feeddict", "[", "\"neg2_left:0\"", "]", "=", "neg2_left", ".", "reshape", "(", "\n", "(", "t", ",", "k", ")", ")", "[", "beg", ":", "end", "]", ".", "reshape", "(", "(", "-", "1", ",", ")", ")", "\n", "feeddict", "[", "\"neg2_right:0\"", "]", "=", "neg2_right", ".", "reshape", "(", "\n", "(", "t", ",", "k", ")", ")", "[", "beg", ":", "end", "]", ".", "reshape", "(", "(", "-", "1", ",", ")", ")", "\n", "_", "=", "sess", ".", "run", "(", "[", "train_step", "]", ",", "feed_dict", "=", "feeddict", ")", "\n", "\n", "", "if", "i", "==", "pre_epochs", "-", "1", ":", "\n", "            ", "save_path", "=", "saver", ".", "save", "(", "sess", ",", "\"model/save_\"", "+", "save_suffix", "+", "\".ckpt\"", ")", "\n", "print", "(", "\"Save to path: \"", ",", "save_path", ")", "\n", "\n", "", "if", "i", "%", "10", "==", "0", ":", "\n", "            ", "print", "(", "'%d/%d'", "%", "(", "i", "+", "1", ",", "epochs", ")", ",", "'epochs...'", ")", "\n", "outvec", "=", "sess", ".", "run", "(", "output_h", ",", "feed_dict", "=", "feeddict", ")", "\n", "test_can", "=", "get_hits", "(", "outvec", ",", "test", ",", "test_can_num", ")", "\n", "if", "i", ">=", "pre_epochs", ":", "\n", "                ", "for", "j", "in", "range", "(", "test_batchnum", ")", ":", "\n", "                    ", "beg", "=", "int", "(", "len", "(", "test", ")", "/", "test_batchnum", "*", "j", ")", "\n", "if", "j", "==", "test_batchnum", "-", "1", ":", "\n", "                        ", "end", "=", "len", "(", "test", ")", "\n", "", "else", ":", "\n", "                        ", "end", "=", "int", "(", "len", "(", "test", ")", "/", "test_batchnum", "*", "(", "j", "+", "1", ")", ")", "\n", "", "feeddict_test", "=", "{", "\"ILL:0\"", ":", "test", "[", "beg", ":", "end", "]", ",", "\n", "\"candidate:0\"", ":", "test_can", "[", ":", ",", "beg", ":", "end", "]", ".", "reshape", "(", "(", "-", "1", ",", ")", ")", ",", "\n", "\"nbr_sampled:0\"", ":", "nbr_sampled", ",", "\n", "\"mask_sampled:0\"", ":", "mask_sampled", ",", "\n", "\"c:0\"", ":", "test_can_num", "}", "\n", "outvec_h_match", "=", "sess", ".", "run", "(", "\n", "output_h_match", ",", "feed_dict", "=", "feeddict_test", ")", "\n", "if", "j", "==", "0", ":", "\n", "                        ", "outvec_h_match_all", "=", "outvec_h_match", ".", "reshape", "(", "(", "2", ",", "-", "1", ",", "dimension", "+", "dimension_g", ")", ")", "\n", "", "else", ":", "\n", "                        ", "outvec_h_match_all", "=", "np", ".", "concatenate", "(", "\n", "[", "outvec_h_match_all", ",", "outvec_h_match", ".", "reshape", "(", "(", "2", ",", "-", "1", ",", "dimension", "+", "dimension_g", ")", ")", "]", ",", "axis", "=", "1", ")", "\n", "", "", "get_hits_new", "(", "outvec_h_match_all", ",", "test_can", ",", "test", ",", "test_can_num", ")", "\n", "\n", "", "", "if", "i", ">=", "pre_epochs", "and", "i", "%", "50", "==", "49", ":", "\n", "            ", "print", "(", "'train sample w'", ")", "\n", "for", "_", "in", "range", "(", "10", ")", ":", "\n", "                ", "select_train", "=", "np", ".", "random", ".", "choice", "(", "len", "(", "ILL", ")", ",", "10", ")", "\n", "feeddict", "[", "\"select_train:0\"", "]", "=", "select_train", "\n", "for", "j", "in", "range", "(", "5", ")", ":", "\n", "                    ", "_", ",", "thw", "=", "sess", ".", "run", "(", "[", "train_step_w", ",", "loss_w", "]", ",", "\n", "feed_dict", "=", "feeddict", ")", "\n", "", "print", "(", "thw", ")", "\n", "", "sample_w_vec", "=", "sess", ".", "run", "(", "sample_w", ",", "feed_dict", "=", "feeddict", ")", "\n", "\n", "", "", "sess", ".", "close", "(", ")", "\n", "return", "outvec", ",", "J", "\n", "", ""]]}