{"home.repos.pwc.inspect_result.RayyanRiaz_EVGAE.None.main.train": [[14, 34], ["model.train", "optimizer.zero_grad", "model.encode", "model.node_decoder", "torch_geometric.utils.negative_sampling", "model.recon_loss_without_reduction", "model.kl_losses", "loss.backward", "optimizer.step", "x.size", "l_a_pos.mean", "l_a_neg.mean", "l_q.mean", "l_kl.sum().mean", "l_kl.sum"], "function", ["home.repos.pwc.inspect_result.RayyanRiaz_EVGAE.None.main.train", "home.repos.pwc.inspect_result.RayyanRiaz_EVGAE.None.model.EpitomeVGAE.recon_loss_without_reduction", "home.repos.pwc.inspect_result.RayyanRiaz_EVGAE.None.model.EpitomeVGAE.kl_losses"], ["def", "train", "(", ")", ":", "\n", "    ", "model", ".", "train", "(", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "z", "=", "model", ".", "encode", "(", "x", ",", "train_pos_edge_index", ")", "\n", "# x_hat = model.node_decoder(z, train_pos_edge_index)", "\n", "x_hat", "=", "model", ".", "node_decoder", "(", "z", ")", "\n", "neg_edge_index", "=", "negative_sampling", "(", "train_pos_edge_index", ",", "x", ".", "size", "(", "0", ")", ")", "\n", "\n", "l_a_pos", ",", "l_a_neg", "=", "model", ".", "recon_loss_without_reduction", "(", "z", ",", "train_pos_edge_index", ",", "neg_edge_index", ")", "\n", "l_a", "=", "l_a_pos", ".", "mean", "(", ")", "+", "l_a_neg", ".", "mean", "(", ")", "\n", "\n", "l_kl", ",", "l_q", "=", "model", ".", "kl_losses", "(", "x", ",", "train_pos_edge_index", ")", "\n", "# l_kl *= (1 / data.num_nodes)", "\n", "# l_x *= 0", "\n", "l_x", "=", "0", "\n", "loss", "=", "l_a", "+", "l_kl", ".", "sum", "(", "1", ")", ".", "mean", "(", ")", "+", "l_q", ".", "mean", "(", ")", "+", "l_x", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "return", "z", ",", "neg_edge_index", ",", "l_a", ",", "l_a_pos", ",", "l_a_neg", ",", "l_x", ",", "l_kl", ",", "l_q", "\n", "\n"]], "home.repos.pwc.inspect_result.RayyanRiaz_EVGAE.None.main.test": [[36, 45], ["model.eval", "model.test_model", "model.test", "torch.no_grad", "model.encode"], "function", ["home.repos.pwc.inspect_result.RayyanRiaz_EVGAE.None.model.EpitomeVGAE.test_model", "home.repos.pwc.inspect_result.RayyanRiaz_EVGAE.None.main.test"], ["", "def", "test", "(", "pos_edge_index", ",", "neg_edge_index", ")", ":", "\n", "    ", "model", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "        ", "z", "=", "model", ".", "encode", "(", "x", ",", "train_pos_edge_index", ")", "\n", "\n", "", "class_acc", "=", "model", ".", "test_model", "(", "z", "[", "train_mask", "]", ",", "Y", "[", "train_mask", "]", ",", "z", "[", "test_mask", "]", ",", "Y", "[", "test_mask", "]", ",", "max_iter", "=", "150", ")", "\n", "auc", ",", "ap", "=", "model", ".", "test", "(", "z", ",", "pos_edge_index", ",", "neg_edge_index", ")", "\n", "\n", "return", "auc", ",", "ap", ",", "class_acc", "\n", "\n"]], "home.repos.pwc.inspect_result.RayyanRiaz_EVGAE.None.modules.FCNet.__init__": [[6, 19], ["torch.nn.Module.__init__", "range", "torch.nn.Sequential", "len", "net.append", "torch.nn.Linear", "net.append", "len", "net.append", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.RayyanRiaz_EVGAE.analysis.base.VAEAnalyser.__init__"], ["    ", "def", "__init__", "(", "self", ",", "sizes", ",", "last_layer_activation", ")", ":", "\n", "        ", "super", "(", "FCNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "net", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "sizes", ")", ")", ":", "\n", "            ", "net", ".", "append", "(", "nn", ".", "Linear", "(", "sizes", "[", "i", "-", "1", "]", ",", "sizes", "[", "i", "]", ")", ")", "\n", "if", "i", "==", "len", "(", "sizes", ")", "-", "1", ":", "\n", "                ", "if", "last_layer_activation", "is", "not", "None", ":", "\n", "                    ", "net", ".", "append", "(", "last_layer_activation", ")", "\n", "", "", "else", ":", "\n", "\n", "                ", "net", ".", "append", "(", "nn", ".", "ReLU", "(", ")", ")", "\n", "", "", "self", ".", "net", "=", "nn", ".", "Sequential", "(", "*", "net", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.RayyanRiaz_EVGAE.None.modules.FCNet.forward": [[20, 22], ["modules.FCNet.net"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "return", "self", ".", "net", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.RayyanRiaz_EVGAE.None.modules.GCNNet.__init__": [[25, 31], ["torch.nn.Module.__init__", "range", "len", "modules.GCNNet.layers.append", "layer_type"], "methods", ["home.repos.pwc.inspect_result.RayyanRiaz_EVGAE.analysis.base.VAEAnalyser.__init__"], ["    ", "def", "__init__", "(", "self", ",", "sizes", ",", "layer_type", "=", "GATConv", ",", "last_layer_activation", "=", "None", ",", "**", "layer_args", ")", ":", "\n", "        ", "super", "(", "GCNNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "layers", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "1", ",", "len", "(", "sizes", ")", ")", ":", "\n", "            ", "self", ".", "layers", ".", "append", "(", "layer_type", "(", "in_channels", "=", "sizes", "[", "i", "-", "1", "]", ",", "out_channels", "=", "sizes", "[", "i", "]", ",", "**", "layer_args", ")", ")", "\n", "", "self", ".", "last_layer_activation", "=", "last_layer_activation", "\n", "\n"]], "home.repos.pwc.inspect_result.RayyanRiaz_EVGAE.None.modules.GCNNet.forward": [[32, 40], ["range", "len", "torch.nn.ReLU", "len", "modules.GCNNet.last_layer_activation"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "edge_index", ")", ":", "\n", "        ", "for", "i", "in", "range", "(", "len", "(", "self", ".", "layers", ")", ")", ":", "\n", "            ", "x", "=", "self", ".", "layers", "[", "i", "]", "(", "x", ",", "edge_index", ")", "\n", "if", "i", "==", "len", "(", "self", ".", "layers", ")", "-", "1", ":", "\n", "                ", "if", "self", ".", "last_layer_activation", "is", "not", "None", ":", "\n", "                    ", "x", "=", "self", ".", "last_layer_activation", "(", "x", ")", "\n", "", "", "else", ":", "\n", "                ", "x", "=", "nn", ".", "ReLU", "(", "self", ".", "layers", "[", "i", "]", "(", "x", ",", "edge_index", ")", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.RayyanRiaz_EVGAE.None.model.Encoder.__init__": [[16, 21], ["super().__init__", "torch_geometric.nn.GCNConv", "torch_geometric.nn.GCNConv", "torch_geometric.nn.GCNConv"], "methods", ["home.repos.pwc.inspect_result.RayyanRiaz_EVGAE.analysis.base.VAEAnalyser.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ")", ":", "\n", "        ", "super", "(", "Encoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "GCNConv", "(", "in_channels", ",", "2", "*", "out_channels", ",", "cached", "=", "True", ")", "\n", "self", ".", "conv_mu", "=", "GCNConv", "(", "2", "*", "out_channels", ",", "out_channels", ",", "cached", "=", "True", ")", "\n", "self", ".", "conv_logvar", "=", "GCNConv", "(", "2", "*", "out_channels", ",", "out_channels", ",", "cached", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.RayyanRiaz_EVGAE.None.model.Encoder.forward": [[22, 26], ["torch.relu", "torch.relu", "model.Encoder.conv1", "model.Encoder.conv_mu", "model.Encoder.conv_logvar"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "edge_index", ")", ":", "\n", "        ", "x", "=", "F", ".", "relu", "(", "self", ".", "conv1", "(", "x", ",", "edge_index", ")", ")", "\n", "\n", "return", "self", ".", "conv_mu", "(", "x", ",", "edge_index", ")", ",", "self", ".", "conv_logvar", "(", "x", ",", "edge_index", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.RayyanRiaz_EVGAE.None.model.QyGivenX.__init__": [[29, 33], ["super().__init__", "torch_geometric.nn.GCNConv", "torch_geometric.nn.GCNConv"], "methods", ["home.repos.pwc.inspect_result.RayyanRiaz_EVGAE.analysis.base.VAEAnalyser.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "out_channels", ")", ":", "\n", "        ", "super", "(", "QyGivenX", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "GCNConv", "(", "in_channels", ",", "2", "*", "out_channels", ",", "cached", "=", "True", ")", "\n", "self", ".", "conv2", "=", "GCNConv", "(", "2", "*", "out_channels", ",", "out_channels", ",", "cached", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.RayyanRiaz_EVGAE.None.model.QyGivenX.forward": [[34, 37], ["torch.relu", "torch.relu", "torch.softmax", "torch.softmax", "torch.softmax", "torch.softmax", "model.QyGivenX.conv1", "model.QyGivenX.conv2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "edge_index", ")", ":", "\n", "        ", "x", "=", "F", ".", "relu", "(", "self", ".", "conv1", "(", "x", ",", "edge_index", ")", ")", "\n", "return", "torch", ".", "softmax", "(", "self", ".", "conv2", "(", "x", ",", "edge_index", ")", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.RayyanRiaz_EVGAE.None.model.EpitomeVGAE.__init__": [[40, 60], ["torch_geometric.nn.VGAE.__init__", "torch.nn.Parameter", "torch.nn.Parameter", "modules.FCNet", "model.Encoder", "modules.FCNet", "torch.eye().repeat_interleave", "torch.eye().repeat_interleave", "torch.eye().repeat_interleave", "torch.eye().repeat_interleave", "torch.roll", "torch.roll", "torch.roll", "torch.roll", "int", "torch.nn.Softmax", "torch.nn.Softmax", "torch.nn.Sigmoid", "torch.nn.Sigmoid", "torch.eye", "torch.eye", "torch.eye", "torch.eye"], "methods", ["home.repos.pwc.inspect_result.RayyanRiaz_EVGAE.analysis.base.VAEAnalyser.__init__"], ["    ", "def", "__init__", "(", "self", ",", "x_dim", ",", "z_dim", ",", "encoder", "=", "None", ",", "edge_decoder", "=", "None", ",", "node_decoder", "=", "None", ",", "num_epitomes", "=", "4", ",", "shifts", "=", "0", ")", ":", "\n", "        ", "if", "encoder", "is", "None", ":", "\n", "            ", "enc", "=", "Encoder", "(", "in_channels", "=", "x_dim", ",", "out_channels", "=", "z_dim", ")", "\n", "", "else", ":", "\n", "            ", "enc", "=", "encoder", "\n", "", "super", "(", "EpitomeVGAE", ",", "self", ")", ".", "__init__", "(", "enc", ",", "edge_decoder", ")", "\n", "if", "node_decoder", ":", "\n", "            ", "self", ".", "node_decoder", "=", "node_decoder", "\n", "", "else", ":", "\n", "            ", "self", ".", "node_decoder", "=", "FCNet", "(", "sizes", "=", "[", "z_dim", ",", "10", "*", "z_dim", ",", "5", "*", "z_dim", ",", "x_dim", "]", ",", "last_layer_activation", "=", "nn", ".", "Sigmoid", "(", ")", ")", "\n", "\n", "", "self", ".", "z_dim", "=", "z_dim", "\n", "\n", "self", ".", "epitomes", "=", "nn", ".", "Parameter", "(", "torch", ".", "eye", "(", "num_epitomes", ")", ".", "repeat_interleave", "(", "int", "(", "z_dim", "/", "num_epitomes", ")", ",", "1", ")", ",", "requires_grad", "=", "False", ")", "\n", "self", ".", "epitomes", ".", "data", "=", "self", ".", "epitomes", "+", "torch", ".", "roll", "(", "self", ".", "epitomes", ",", "shifts", "=", "shifts", ",", "dims", "=", "1", ")", "\n", "self", ".", "epitomes", ".", "data", "=", "(", "self", ".", "epitomes", ">", "0", ")", ".", "float", "(", ")", "\n", "# self.epitomes = nn.Parameter(((1 - torch.eye(num_epitomes)) * 1e-0 + torch.eye(num_epitomes)).repeat_interleave(int(z_dim / num_epitomes), 1),", "\n", "#                              requires_grad=False)", "\n", "# TODO try with a GCN here too!", "\n", "self", ".", "qy_given_x", "=", "FCNet", "(", "sizes", "=", "(", "[", "x_dim", ",", "z_dim", "*", "2", ",", "num_epitomes", "]", ")", ",", "last_layer_activation", "=", "nn", ".", "Softmax", "(", "dim", "=", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.RayyanRiaz_EVGAE.None.model.EpitomeVGAE.kl_losses": [[62, 69], ["model.EpitomeVGAE.qy_given_x", "torch.distributions.kl_divergence", "torch.distributions.kl_divergence", "torch.distributions.Categorical", "torch.distributions.Categorical", "torch.distributions.Categorical", "torch.distributions.Categorical", "model.EpitomeVGAE.__logvar__.exp", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like"], "methods", ["None"], ["", "def", "kl_losses", "(", "self", ",", "x", ",", "edge_index", ")", ":", "\n", "        ", "l_kl", "=", "-", "0.5", "*", "(", "1", "+", "self", ".", "__logvar__", "-", "self", ".", "__mu__", "**", "2", "-", "self", ".", "__logvar__", ".", "exp", "(", ")", ")", "\n", "\n", "qy_given_x", "=", "self", ".", "qy_given_x", "(", "x", ")", "\n", "l_kl", "=", "(", "qy_given_x", "[", ":", ",", ":", ",", "None", "]", "*", "self", ".", "epitomes", "[", "None", ",", ":", ",", ":", "]", "*", "l_kl", "[", ":", ",", "None", ",", ":", "]", ")", ".", "sum", "(", "dim", "=", "1", ")", "\n", "l_q", "=", "kl_divergence", "(", "Categorical", "(", "qy_given_x", ")", ",", "Categorical", "(", "torch", ".", "ones_like", "(", "qy_given_x", ")", ")", ")", "\n", "return", "l_kl", ",", "l_q", "\n", "\n"]], "home.repos.pwc.inspect_result.RayyanRiaz_EVGAE.None.model.EpitomeVGAE.test_model": [[70, 76], ["sklearn.linear_model.LogisticRegression().fit", "sklearn.linear_model.LogisticRegression().fit.score", "train_z.detach().cpu().numpy", "train_y.detach().cpu().numpy", "test_z.detach().cpu().numpy", "test_y.detach().cpu().numpy", "sklearn.linear_model.LogisticRegression", "train_z.detach().cpu", "train_y.detach().cpu", "test_z.detach().cpu", "test_y.detach().cpu", "train_z.detach", "train_y.detach", "test_z.detach", "test_y.detach"], "methods", ["None"], ["", "def", "test_model", "(", "self", ",", "train_z", ",", "train_y", ",", "test_z", ",", "test_y", ",", "solver", "=", "'lbfgs'", ",", "multi_class", "=", "'auto'", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "\n", "        ", "clf", "=", "LogisticRegression", "(", "solver", "=", "solver", ",", "multi_class", "=", "multi_class", ",", "*", "args", ",", "**", "kwargs", ")", ".", "fit", "(", "\n", "train_z", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "train_y", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "\n", "return", "clf", ".", "score", "(", "test_z", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ",", "test_y", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.RayyanRiaz_EVGAE.None.model.EpitomeVGAE.split_edges": [[77, 138], ["int", "int", "torch.randperm", "torch.randperm", "torch.randperm", "torch.randperm", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch_geometric.utils.to_undirected", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "neg_adj_mask.triu().to.triu().to.triu().to", "neg_adj_mask.triu().to.triu().to.nonzero().t", "random.sample", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "perm.to.to.to", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "math.floor", "math.floor", "row.size", "range", "min", "neg_adj_mask.triu().to.triu().to.triu", "neg_adj_mask.triu().to.triu().to.nonzero", "neg_row.size", "neg_row.size", "row.size", "row.size"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "split_edges", "(", "data", ",", "val_ratio", "=", "0.05", ",", "test_ratio", "=", "0.1", ")", ":", "\n", "        ", "r\"\"\" Copied from pytorch 1.4 - Splits the edges of a :obj:`torch_geometric.data.Data` object\n        into positve and negative train/val/test edges.\n\n        Args:\n            data (Data): The data object.\n            val_ratio (float, optional): The ratio of positive validation\n                edges. (default: :obj:`0.05`)\n            test_ratio (float, optional): The ratio of positive test\n                edges. (default: :obj:`0.1`)\n        \"\"\"", "\n", "\n", "assert", "'batch'", "not", "in", "data", "# No batch-mode.", "\n", "\n", "row", ",", "col", "=", "data", ".", "edge_index", "\n", "data", ".", "edge_index", "=", "None", "\n", "\n", "# Return upper triangular portion.", "\n", "mask", "=", "row", "<", "col", "\n", "row", ",", "col", "=", "row", "[", "mask", "]", ",", "col", "[", "mask", "]", "\n", "\n", "n_v", "=", "int", "(", "math", ".", "floor", "(", "val_ratio", "*", "row", ".", "size", "(", "0", ")", ")", ")", "\n", "n_t", "=", "int", "(", "math", ".", "floor", "(", "test_ratio", "*", "row", ".", "size", "(", "0", ")", ")", ")", "\n", "\n", "# Positive edges.", "\n", "perm", "=", "torch", ".", "randperm", "(", "row", ".", "size", "(", "0", ")", ")", "\n", "row", ",", "col", "=", "row", "[", "perm", "]", ",", "col", "[", "perm", "]", "\n", "\n", "r", ",", "c", "=", "row", "[", ":", "n_v", "]", ",", "col", "[", ":", "n_v", "]", "\n", "data", ".", "val_pos_edge_index", "=", "torch", ".", "stack", "(", "[", "r", ",", "c", "]", ",", "dim", "=", "0", ")", "\n", "r", ",", "c", "=", "row", "[", "n_v", ":", "n_v", "+", "n_t", "]", ",", "col", "[", "n_v", ":", "n_v", "+", "n_t", "]", "\n", "data", ".", "test_pos_edge_index", "=", "torch", ".", "stack", "(", "[", "r", ",", "c", "]", ",", "dim", "=", "0", ")", "\n", "\n", "r", ",", "c", "=", "row", "[", "n_v", "+", "n_t", ":", "]", ",", "col", "[", "n_v", "+", "n_t", ":", "]", "\n", "data", ".", "train_pos_edge_index", "=", "torch", ".", "stack", "(", "[", "r", ",", "c", "]", ",", "dim", "=", "0", ")", "\n", "data", ".", "train_pos_edge_index", "=", "to_undirected", "(", "data", ".", "train_pos_edge_index", ")", "\n", "\n", "# Negative edges.", "\n", "num_nodes", "=", "data", ".", "num_nodes", "\n", "neg_adj_mask", "=", "torch", ".", "ones", "(", "num_nodes", ",", "num_nodes", ",", "dtype", "=", "torch", ".", "uint8", ")", "\n", "neg_adj_mask", "=", "neg_adj_mask", ".", "triu", "(", "diagonal", "=", "1", ")", ".", "to", "(", "torch", ".", "bool", ")", "\n", "neg_adj_mask", "[", "row", ",", "col", "]", "=", "0", "\n", "\n", "neg_row", ",", "neg_col", "=", "neg_adj_mask", ".", "nonzero", "(", ")", ".", "t", "(", ")", "\n", "perm", "=", "random", ".", "sample", "(", "range", "(", "neg_row", ".", "size", "(", "0", ")", ")", ",", "\n", "min", "(", "n_v", "+", "n_t", ",", "neg_row", ".", "size", "(", "0", ")", ")", ")", "\n", "perm", "=", "torch", ".", "tensor", "(", "perm", ")", "\n", "perm", "=", "perm", ".", "to", "(", "torch", ".", "long", ")", "\n", "neg_row", ",", "neg_col", "=", "neg_row", "[", "perm", "]", ",", "neg_col", "[", "perm", "]", "\n", "\n", "neg_adj_mask", "[", "neg_row", ",", "neg_col", "]", "=", "0", "\n", "data", ".", "train_neg_adj_mask", "=", "neg_adj_mask", "\n", "\n", "row", ",", "col", "=", "neg_row", "[", ":", "n_v", "]", ",", "neg_col", "[", ":", "n_v", "]", "\n", "data", ".", "val_neg_edge_index", "=", "torch", ".", "stack", "(", "[", "row", ",", "col", "]", ",", "dim", "=", "0", ")", "\n", "\n", "row", ",", "col", "=", "neg_row", "[", "n_v", ":", "n_v", "+", "n_t", "]", ",", "neg_col", "[", "n_v", ":", "n_v", "+", "n_t", "]", "\n", "data", ".", "test_neg_edge_index", "=", "torch", ".", "stack", "(", "[", "row", ",", "col", "]", ",", "dim", "=", "0", ")", "\n", "\n", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.RayyanRiaz_EVGAE.None.model.EpitomeVGAE.recon_loss_without_reduction": [[140, 148], ["torch.log", "torch.log", "torch.log", "torch.log", "torch_geometric.utils.negative_sampling", "torch.log", "torch.log", "torch.log", "torch.log", "z.size", "model.EpitomeVGAE.decoder", "model.EpitomeVGAE.decoder"], "methods", ["None"], ["", "def", "recon_loss_without_reduction", "(", "self", ",", "z", ",", "pos_edge_index", ",", "neg_edge_index", "=", "None", ")", ":", "\n", "\n", "        ", "pos_loss", "=", "-", "torch", ".", "log", "(", "self", ".", "decoder", "(", "z", ",", "pos_edge_index", ",", "sigmoid", "=", "True", ")", "+", "1e-15", ")", "\n", "if", "neg_edge_index", "is", "None", ":", "\n", "            ", "neg_edge_index", "=", "negative_sampling", "(", "pos_edge_index", ",", "z", ".", "size", "(", "0", ")", ")", "\n", "", "neg_loss", "=", "-", "torch", ".", "log", "(", "1", "-", "self", ".", "decoder", "(", "z", ",", "neg_edge_index", ",", "sigmoid", "=", "True", ")", "+", "1e-15", ")", "\n", "\n", "return", "pos_loss", ",", "neg_loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.RayyanRiaz_EVGAE.None.helpers.map_labels": [[9, 17], ["numpy.zeros", "range", "scipy.optimize.linear_sum_assignment", "max", "Y_pred.max", "Y.max", "np.zeros.max"], "function", ["None"], ["def", "map_labels", "(", "Y_pred", ",", "Y", ")", ":", "\n", "    ", "assert", "Y_pred", ".", "size", "==", "Y", ".", "size", "\n", "D", "=", "max", "(", "Y_pred", ".", "max", "(", ")", ",", "Y", ".", "max", "(", ")", ")", "+", "1", "\n", "w", "=", "np", ".", "zeros", "(", "(", "D", ",", "D", ")", ",", "dtype", "=", "np", ".", "int64", ")", "\n", "for", "i", "in", "range", "(", "Y_pred", ".", "size", ")", ":", "\n", "        ", "w", "[", "Y_pred", "[", "i", "]", ",", "Y", "[", "i", "]", "]", "+=", "1", "\n", "", "ind", "=", "linear_sum_assignment", "(", "w", ".", "max", "(", ")", "-", "w", ")", "\n", "return", "ind", "\n", "\n"]], "home.repos.pwc.inspect_result.RayyanRiaz_EVGAE.None.helpers.get_planetoid_dataset": [[19, 25], ["os.join", "torch_geometric.datasets.Planetoid", "os.dirname", "torch_geometric.NormalizeFeatures", "os.realpath"], "function", ["None"], ["", "def", "get_planetoid_dataset", "(", "name", ")", ":", "\n", "    ", "path", "=", "osp", ".", "join", "(", "\n", "osp", ".", "dirname", "(", "osp", ".", "realpath", "(", "__file__", ")", ")", ",", "'..'", ",", "'data'", ",", "name", ")", "\n", "dataset", "=", "Planetoid", "(", "path", ",", "name", ",", "T", ".", "NormalizeFeatures", "(", ")", ")", "\n", "\n", "return", "dataset", "\n", "", ""]], "home.repos.pwc.inspect_result.RayyanRiaz_EVGAE.analysis.base.Analyser.__init__": [[10, 18], ["datetime.datetime.datetime.now().strftime", "os.path.join", "torch.utils.tensorboard.SummaryWriter", "os.path.exists", "os.makedirs", "datetime.datetime.datetime.now"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "options", "=", "kwargs", "\n", "LOGS_DIR_TIMESTAMP", "=", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "'%Y-%m-%d %H:%M:%S'", ")", "\n", "self", ".", "options", "[", "\"logdir\"", "]", "=", "os", ".", "path", ".", "join", "(", "(", "self", ".", "options", "[", "\"logdir\"", "]", "if", "\"logdir\"", "in", "self", ".", "options", "else", "\"results\"", ")", ",", "LOGS_DIR_TIMESTAMP", "+", "(", "self", ".", "options", "[", "\"comment\"", "]", "if", "\"comment\"", "in", "self", ".", "options", "else", "\"\"", ")", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "options", "[", "\"logdir\"", "]", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "self", ".", "options", "[", "\"logdir\"", "]", ")", "\n", "", "self", ".", "writer", "=", "SummaryWriter", "(", "log_dir", "=", "self", ".", "options", "[", "\"logdir\"", "]", ",", "flush_secs", "=", "self", ".", "options", "[", "\"flush_secs\"", "]", "if", "\"flush_secs\"", "in", "self", ".", "options", "else", "120", ")", "\n", "self", ".", "scalars", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.RayyanRiaz_EVGAE.analysis.base.Analyser.refresh": [[19, 21], ["None"], "methods", ["None"], ["", "def", "refresh", "(", "self", ")", ":", "\n", "        ", "self", ".", "scalars", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.RayyanRiaz_EVGAE.analysis.base.Analyser.add_to_scalars": [[22, 25], ["kwargs.keys"], "methods", ["None"], ["", "def", "add_to_scalars", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "for", "k", "in", "kwargs", ".", "keys", "(", ")", ":", "\n", "            ", "self", ".", "scalars", "[", "k", "]", "=", "(", "self", ".", "scalars", "[", "k", "]", "+", "kwargs", "[", "k", "]", ")", "if", "k", "in", "self", ".", "scalars", "else", "kwargs", "[", "k", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.RayyanRiaz_EVGAE.analysis.base.Analyser.write_scalars": [[26, 29], ["base.Analyser.scalars.keys", "base.Analyser.writer.add_scalar"], "methods", ["None"], ["", "", "def", "write_scalars", "(", "self", ",", "epoch", ")", ":", "\n", "        ", "for", "k", "in", "self", ".", "scalars", ".", "keys", "(", ")", ":", "\n", "            ", "self", ".", "writer", ".", "add_scalar", "(", "k", ",", "self", ".", "scalars", "[", "k", "]", ",", "epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.RayyanRiaz_EVGAE.analysis.base.Analyser.save_weights": [[30, 32], ["torch.save", "model.state_dict", "str"], "methods", ["None"], ["", "", "def", "save_weights", "(", "self", ",", "model", ",", "epoch", ")", ":", "\n", "        ", "torch", ".", "save", "(", "model", ".", "state_dict", "(", ")", ",", "self", ".", "options", "[", "\"logdir\"", "]", "+", "\"/model_weights_\"", "+", "str", "(", "epoch", ")", "+", "\".pk\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.RayyanRiaz_EVGAE.analysis.base.Analyser.update_str": [[33, 37], ["base.Analyser.scalars.keys", "base.Analyser.scalars.values"], "methods", ["None"], ["", "def", "update_str", "(", "self", ",", "epoch", ",", "epoch_time", "=", "None", ")", ":", "\n", "        ", "losses_str", "=", "(", "\": {:4.5f}\\t\\t\"", ".", "join", "(", "self", ".", "scalars", ".", "keys", "(", ")", ")", "+", "\": {:4.5f}\"", ")", ".", "format", "(", "*", "[", "x", "for", "x", "in", "self", ".", "scalars", ".", "values", "(", ")", "]", ")", "\n", "epoch_str", "=", "\"Epoch:{:3d}\\t[time={:3.2f}s]\\t\\t\"", ".", "format", "(", "epoch", ",", "epoch_time", ")", "if", "epoch_time", "is", "not", "None", "else", "\"Epoch:{:3d}\\t\\t\"", ".", "format", "(", "epoch", ")", "\n", "return", "epoch_str", "+", "losses_str", "\n", "\n"]], "home.repos.pwc.inspect_result.RayyanRiaz_EVGAE.analysis.base.Analyser.write_scalars_to_file": [[38, 52], ["open", "print", "current_dict.update", "base.Analyser.update_str", "open", "pickle.load", "open", "pickle.dump", "base.Analyser.writer.get_logdir", "base.Analyser.writer.get_logdir", "base.Analyser.writer.get_logdir"], "methods", ["home.repos.pwc.inspect_result.RayyanRiaz_EVGAE.analysis.base.Analyser.update_str"], ["", "def", "write_scalars_to_file", "(", "self", ",", "epoch", ",", "filename", "=", "None", ")", ":", "\n", "        ", "filename", "=", "\"results\"", "if", "filename", "is", "None", "else", "filename", "\n", "with", "open", "(", "self", ".", "writer", ".", "get_logdir", "(", ")", "+", "\"/\"", "+", "filename", "+", "\".txt\"", ",", "'a'", ")", "as", "f", ":", "\n", "            ", "print", "(", "self", ".", "update_str", "(", "epoch", ")", ",", "file", "=", "f", ")", "\n", "\n", "", "try", ":", "\n", "            ", "with", "open", "(", "self", ".", "writer", ".", "get_logdir", "(", ")", "+", "\"/\"", "+", "filename", "+", "\".pk\"", ",", "'rb'", ")", "as", "f", ":", "\n", "                ", "current_dict", ":", "dict", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "current_dict", ".", "update", "(", "{", "epoch", ":", "self", ".", "scalars", "}", ")", "\n", "", "except", ":", "\n", "            ", "current_dict", "=", "{", "epoch", ":", "self", ".", "scalars", "}", "\n", "", "finally", ":", "\n", "            ", "with", "open", "(", "self", ".", "writer", ".", "get_logdir", "(", ")", "+", "\"/\"", "+", "filename", "+", "\".pk\"", ",", "'wb'", ")", "as", "f", ":", "\n", "                ", "pickle", ".", "dump", "(", "current_dict", ",", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.RayyanRiaz_EVGAE.analysis.base.VAEAnalyser.__init__": [[55, 57], ["base.Analyser.__init__"], "methods", ["home.repos.pwc.inspect_result.RayyanRiaz_EVGAE.analysis.base.VAEAnalyser.__init__"], ["    ", "def", "__init__", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", "VAEAnalyser", ",", "self", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.RayyanRiaz_EVGAE.analysis.base.VAEAnalyser.write_scalars_per_component": [[58, 61], ["base.VAEAnalyser.writer.add_scalars", "str", "dict().items", "dict", "enumerate", "values.detach().cpu().numpy", "values.detach().cpu", "values.detach"], "methods", ["None"], ["", "def", "write_scalars_per_component", "(", "self", ",", "epoch", ",", "values", ",", "tag", ")", ":", "\n", "        ", "scalars_dict", "=", "{", "str", "(", "k", ")", ":", "v", "for", "k", ",", "v", "in", "dict", "(", "enumerate", "(", "values", ".", "detach", "(", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ")", ")", ".", "items", "(", ")", "}", "\n", "self", ".", "writer", ".", "add_scalars", "(", "tag", ",", "scalars_dict", ",", "epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.RayyanRiaz_EVGAE.analysis.base.VAEAnalyser.write_unit_activity_scalars": [[62, 88], ["base.VAEAnalyser.model.cpu", "base.VAEAnalyser.model.encode", "base.VAEAnalyser.model.decoder", "base.VAEAnalyser.model.l_x", "range", "base.VAEAnalyser.summary_writer.add_scalars", "base.VAEAnalyser.summary_writer.add_scalars", "torch.ones", "base.VAEAnalyser.model.decoder", "F.binary_cross_entropy", "F.binary_cross_entropy", "deviations_from_x_hat.append", "deviations_from_x.append", "str", "str", "torch.abs().sum().mean().item", "torch.abs().sum().mean().item", "zip", "zip", "list", "list", "torch.abs().sum().mean", "torch.abs().sum().mean", "range", "range", "torch.abs().sum", "torch.abs().sum", "torch.abs", "torch.abs"], "methods", ["None"], ["", "def", "write_unit_activity_scalars", "(", "self", ",", "epoch", ")", ":", "\n", "        ", "self", ".", "model", ".", "cpu", "(", ")", "\n", "x", ",", "y", "=", "self", ".", "DL", ".", "dataset", ".", "tensors", "\n", "z", ",", "mu", ",", "logvar", "=", "self", ".", "model", ".", "encode", "(", "x", ")", "\n", "\n", "x_hat", "=", "self", ".", "model", ".", "decoder", "(", "z", ")", "\n", "l_x", "=", "self", ".", "model", ".", "l_x", "(", "x", ",", "x_hat", ")", "\n", "deviations_from_x_hat", "=", "[", "]", "\n", "deviations_from_x", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "z", ".", "shape", "[", "1", "]", ")", ":", "\n", "            ", "mask", "=", "torch", ".", "ones", "(", "z", ".", "shape", "[", "1", "]", ")", "\n", "mask", "[", "i", "]", "=", "0", "\n", "z_masked", "=", "z", "*", "mask", "[", "None", ",", ":", "]", "\n", "x_hat_masked", "=", "self", ".", "model", ".", "decoder", "(", "z_masked", ")", "\n", "deviation_from_x_hat", "=", "F", ".", "binary_cross_entropy", "(", "x_hat_masked", ",", "x_hat", ",", "reduction", "=", "'none'", ")", "\n", "deviation_from_x", "=", "F", ".", "binary_cross_entropy", "(", "x_hat_masked", ",", "x", ",", "reduction", "=", "'none'", ")", "\n", "# TODO: also compare the deviation with original x instead of x_hat", "\n", "# deviations_from_x_hat.append(deviation_from_x_hat.sum(1).mean().item())", "\n", "# deviations_from_x.append(deviation_from_x.sum(1).mean().item())", "\n", "deviations_from_x_hat", ".", "append", "(", "torch", ".", "abs", "(", "deviation_from_x_hat", "-", "l_x", ")", ".", "sum", "(", "1", ")", ".", "mean", "(", ")", ".", "item", "(", ")", ")", "\n", "deviations_from_x", ".", "append", "(", "torch", ".", "abs", "(", "deviation_from_x", "-", "l_x", ")", ".", "sum", "(", "1", ")", ".", "mean", "(", ")", ".", "item", "(", ")", ")", "\n", "\n", "", "deviations_from_x_hat_dict", "=", "{", "str", "(", "k", ")", ":", "v", "for", "k", ",", "v", "in", "zip", "(", "list", "(", "range", "(", "mu", ".", "shape", "[", "1", "]", ")", ")", ",", "deviations_from_x_hat", ")", "}", "\n", "deviations_from_x_dict", "=", "{", "str", "(", "k", ")", ":", "v", "for", "k", ",", "v", "in", "zip", "(", "list", "(", "range", "(", "mu", ".", "shape", "[", "1", "]", ")", ")", ",", "deviations_from_x", ")", "}", "\n", "self", ".", "summary_writer", ".", "add_scalars", "(", "\"deviations from x-hat\"", ",", "deviations_from_x_hat_dict", ",", "epoch", ")", "\n", "self", ".", "summary_writer", ".", "add_scalars", "(", "\"deviations from x\"", ",", "deviations_from_x_dict", ",", "epoch", ")", "\n", "\n"]]}