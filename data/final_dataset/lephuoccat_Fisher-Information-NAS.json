{"home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_taskonomy.CustomDataSet.__init__": [[45, 51], ["os.listdir", "os.listdir"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "source_dir", ",", "target_dir", ",", "transform", ")", ":", "\n", "        ", "self", ".", "source_dir", "=", "source_dir", "\n", "self", ".", "target_dir", "=", "target_dir", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "source_imgs", "=", "os", ".", "listdir", "(", "source_dir", ")", "\n", "self", ".", "target_imgs", "=", "os", ".", "listdir", "(", "target_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_taskonomy.CustomDataSet.__len__": [[52, 54], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "source_imgs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_taskonomy.CustomDataSet.__getitem__": [[55, 81], ["torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "os.path.join", "skimage.io.imread", "os.path.join", "skimage.io.imread", "PIL.Image.fromarray", "idx.tolist.tolist.tolist", "train_task_taskonomy.CustomDataSet.astype", "train_task_taskonomy.CustomDataSet.transform", "train_task_taskonomy.CustomDataSet.transform"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "torch", ".", "is_tensor", "(", "idx", ")", ":", "\n", "            ", "idx", "=", "idx", ".", "tolist", "(", ")", "\n", "\n", "", "source_img_loc", "=", "os", ".", "path", ".", "join", "(", "self", ".", "source_dir", ",", "self", ".", "source_imgs", "[", "idx", "]", ")", "\n", "source_image", "=", "io", ".", "imread", "(", "source_img_loc", ")", "\n", "\n", "target_img_loc", "=", "os", ".", "path", ".", "join", "(", "self", ".", "target_dir", ",", "self", ".", "target_imgs", "[", "idx", "]", ")", "\n", "target_image", "=", "io", ".", "imread", "(", "target_img_loc", ")", "\n", "\n", "# preprocess target image to 3 channel", "\n", "# target_image = target_image.astype(np.float32)", "\n", "# target_image = np.tile(target_image[:, :, None], [1, 1, 3])", "\n", "\n", "target_image", "=", "Image", ".", "fromarray", "(", "target_image", ".", "astype", "(", "'uint8'", ")", ",", "'RGB'", ")", "\n", "\n", "\n", "sample", "=", "{", "'source'", ":", "source_image", ",", "'target'", ":", "target_image", "}", "\n", "\n", "if", "self", ".", "transform", ":", "\n", "            ", "source_image", "=", "self", ".", "transform", "(", "source_image", ")", "\n", "target_image", "=", "self", ".", "transform", "(", "target_image", ")", "\n", "\n", "", "sample", "=", "{", "'source'", ":", "source_image", ",", "'target'", ":", "target_image", "}", "\n", "\n", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_taskonomy.Flatten.__init__": [[102, 106], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["def", "__init__", "(", "self", ",", "start_dim", "=", "1", ",", "end_dim", "=", "-", "1", ")", ":", "\n", "        ", "super", "(", "Flatten", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "start_dim", "=", "start_dim", "\n", "self", ".", "end_dim", "=", "end_dim", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_taskonomy.Flatten.forward": [[107, 109], ["input.flatten"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "input", ".", "flatten", "(", "self", ".", "start_dim", ",", "self", ".", "end_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_taskonomy.NN.__init__": [[113, 128], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "train_task_taskonomy.Flatten", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "NN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "encoder", "=", "nn", ".", "Sequential", "(", "\n", "Flatten", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "3", "*", "128", "*", "128", ",", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "512", ",", "128", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "# self.encoder = nn.DataParallel(self.encoder)", "\n", "\n", "self", ".", "decoder", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "128", ",", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "512", ",", "3", "*", "128", "*", "128", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "# self.decoder = nn.DataParallel(self.decoder)", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_taskonomy.NN.forward": [[130, 135], ["train_task_taskonomy.NN.encoder", "train_task_taskonomy.NN.decoder", "X.view.view.view", "X.view.view.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "X", "=", "self", ".", "encoder", "(", "X", ")", "\n", "X", "=", "self", ".", "decoder", "(", "X", ")", "\n", "X", "=", "X", ".", "view", "(", "X", ".", "size", "(", "0", ")", ",", "3", ",", "128", ",", "128", ")", "\n", "return", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_taskonomy.resize2d": [[41, 43], ["torch.adaptive_avg_pool2d", "torch.autograd.Variable"], "function", ["None"], ["def", "resize2d", "(", "img", ",", "size", ")", ":", "\n", "    ", "return", "(", "F", ".", "adaptive_avg_pool2d", "(", "Variable", "(", "img", ",", "volatile", "=", "False", ")", ",", "size", ")", ")", ".", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_taskonomy.show_landmarks": [[83, 90], ["print", "print", "matplotlib.figure", "matplotlib.imshow", "matplotlib.figure", "matplotlib.imshow", "torchvision.utils.make_grid().permute", "torchvision.utils.make_grid().permute", "torchvision.utils.make_grid().permute", "torchvision.utils.make_grid().permute", "torchvision.utils.make_grid", "torchvision.utils.make_grid", "torchvision.utils.make_grid", "torchvision.utils.make_grid"], "function", ["None"], ["", "", "def", "show_landmarks", "(", "source", ",", "target", ")", ":", "\n", "    ", "print", "(", "source", ")", "\n", "print", "(", "target", ")", "\n", "plt", ".", "figure", "(", "0", ")", "\n", "plt", ".", "imshow", "(", "torchvision", ".", "utils", ".", "make_grid", "(", "target", ",", "nrow", "=", "5", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "plt", ".", "figure", "(", "1", ")", "\n", "plt", ".", "imshow", "(", "torchvision", ".", "utils", ".", "make_grid", "(", "source", ",", "nrow", "=", "5", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_taskonomy.fit": [[138, 175], ["torch.optim.Adam", "torch.optim.Adam", "torch.nn.MSELoss", "model.train", "range", "model.parameters", "enumerate", "print", "print", "torch.save", "torch.save", "train_task_taskonomy.resize2d", "inputs.to.to", "train_task_taskonomy.resize2d", "targets.to.to", "torch.optim.Adam.zero_grad", "model", "nn.MSELoss.", "error.backward", "torch.optim.Adam.step", "error.item", "len", "model.state_dict", "os.path.isdir", "os.mkdir", "str"], "function", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher_distance_taskonomy.resize2d", "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher_distance_taskonomy.resize2d"], ["", "", "def", "fit", "(", "model", ",", "train_loader", ",", "save_flag", ",", "i", ")", ":", "\n", "    ", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ")", "\n", "# error = nn.CrossEntropyLoss()", "\n", "error", "=", "nn", ".", "MSELoss", "(", ")", "\n", "EPOCHS", "=", "args", ".", "num_epoch", "\n", "model", ".", "train", "(", ")", "\n", "for", "epoch", "in", "range", "(", "EPOCHS", ")", ":", "\n", "        ", "total_loss", "=", "0", "\n", "for", "batch_idx", ",", "data", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "            ", "inputs", "=", "resize2d", "(", "data", "[", "'source'", "]", ",", "(", "128", ",", "128", ")", ")", "\n", "inputs", "=", "inputs", ".", "to", "(", "device", ")", "\n", "targets", "=", "resize2d", "(", "data", "[", "'target'", "]", ",", "(", "128", ",", "128", ")", ")", "\n", "targets", "=", "targets", ".", "to", "(", "device", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "output", "=", "model", "(", "inputs", ")", "\n", "loss", "=", "error", "(", "output", ",", "targets", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "# Total loss", "\n", "total_loss", "+=", "loss", ".", "item", "(", ")", "\n", "# print(\"batch : {}, loss = {:.6f}\".format(batch_idx, total_loss))", "\n", "\n", "", "total_loss", "=", "total_loss", "/", "len", "(", "train_loader", ")", "\n", "print", "(", "\"epoch : {}/{}, loss = {:.6f}\"", ".", "format", "(", "epoch", "+", "1", ",", "EPOCHS", ",", "total_loss", ")", ")", "\n", "\n", "", "if", "(", "save_flag", "==", "True", ")", ":", "\n", "# Save the pretrained network", "\n", "        ", "print", "(", "'Saving..'", ")", "\n", "state", "=", "{", "\n", "'net'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'acc'", ":", "total_loss", ",", "\n", "}", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "'checkpoint'", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "'checkpoint'", ")", "\n", "", "torch", ".", "save", "(", "state", ",", "'./checkpoint/taskonomy_principal_curvature.t'", "+", "str", "(", "i", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.NAS_FUSE.Cell.__init__": [[77, 89], ["torch.nn.Module.__init__", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.Linear", "torch.nn.Linear", "operation.draw_operation", "operation.draw_operation", "operation.draw_operation", "operation.draw_operation", "operation.draw_operation", "operation.draw_operation"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__", "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.operation.draw_operation", "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.operation.draw_operation", "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.operation.draw_operation", "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.operation.draw_operation", "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.operation.draw_operation", "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.operation.draw_operation"], ["    ", "def", "__init__", "(", "self", ",", "dim", ",", "num_node", "=", "4", ",", "reduction", "=", "0", ",", "channel", "=", "3", ")", ":", "\n", "        ", "super", "(", "Cell", ",", "self", ")", ".", "__init__", "(", ")", "\n", "stride", "=", "2", "if", "reduction", "==", "1", "else", "1", "\n", "\n", "self", ".", "op_0_1", "=", "nn", ".", "DataParallel", "(", "OPS", "[", "draw_operation", "(", "9", ")", "]", "(", "channel", ",", "stride", ",", "affine", "=", "False", ")", ")", "\n", "self", ".", "op_0_2", "=", "nn", ".", "DataParallel", "(", "OPS", "[", "draw_operation", "(", "9", ")", "]", "(", "channel", ",", "stride", ",", "affine", "=", "False", ")", ")", "\n", "self", ".", "op_0_3", "=", "nn", ".", "DataParallel", "(", "OPS", "[", "draw_operation", "(", "9", ")", "]", "(", "channel", ",", "stride", ",", "affine", "=", "False", ")", ")", "\n", "self", ".", "op_1_2", "=", "nn", ".", "DataParallel", "(", "OPS", "[", "draw_operation", "(", "9", ")", "]", "(", "channel", ",", "stride", ",", "affine", "=", "False", ")", ")", "\n", "self", ".", "op_1_3", "=", "nn", ".", "DataParallel", "(", "OPS", "[", "draw_operation", "(", "9", ")", "]", "(", "channel", ",", "stride", ",", "affine", "=", "False", ")", ")", "\n", "self", ".", "op_2_3", "=", "nn", ".", "DataParallel", "(", "OPS", "[", "draw_operation", "(", "9", ")", "]", "(", "channel", ",", "stride", ",", "affine", "=", "False", ")", ")", "\n", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "3", "*", "3", "*", "32", "*", "32", ",", "dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.NAS_FUSE.Cell.forward": [[90, 104], ["NAS_FUSE.Cell.op_0_1", "NAS_FUSE.Cell.op_0_2", "NAS_FUSE.Cell.op_0_3", "NAS_FUSE.Cell.op_1_2", "NAS_FUSE.Cell.op_1_3", "NAS_FUSE.Cell.op_2_3", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.relu", "torch.relu", "NAS_FUSE.Cell.classifier", "torch.flatten", "torch.flatten", "torch.flatten", "torch.flatten"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "s01", "=", "self", ".", "op_0_1", "(", "X", ")", "\n", "s02", "=", "self", ".", "op_0_2", "(", "X", ")", "\n", "s03", "=", "self", ".", "op_0_3", "(", "X", ")", "\n", "s12", "=", "self", ".", "op_1_2", "(", "s01", ")", "\n", "s13", "=", "self", ".", "op_1_3", "(", "s01", ")", "\n", "\n", "s2", "=", "s02", "+", "s12", "\n", "s23", "=", "self", ".", "op_2_3", "(", "s2", ")", "\n", "\n", "cat_out", "=", "torch", ".", "cat", "(", "[", "s03", ",", "s13", ",", "s23", "]", ",", "dim", "=", "1", ")", "\n", "f_out", "=", "F", ".", "relu", "(", "torch", ".", "flatten", "(", "cat_out", ",", "1", ")", ")", "\n", "out", "=", "self", ".", "classifier", "(", "f_out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.NAS_FUSE.weight_reset": [[43, 46], ["isinstance", "isinstance", "model.reset_parameters"], "function", ["None"], ["", "def", "weight_reset", "(", "model", ")", ":", "\n", "    ", "if", "isinstance", "(", "model", ",", "nn", ".", "Conv2d", ")", "or", "isinstance", "(", "model", ",", "nn", ".", "Linear", ")", ":", "\n", "        ", "model", ".", "reset_parameters", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.NAS_FUSE.weight_init": [[47, 50], ["isinstance", "torch.nn.init.xavier_uniform_", "torch.nn.init.xavier_uniform_"], "function", ["None"], ["", "", "def", "weight_init", "(", "model", ")", ":", "\n", "    ", "if", "isinstance", "(", "model", ",", "nn", ".", "Conv2d", ")", ":", "\n", "        ", "torch", ".", "nn", ".", "init", ".", "xavier_uniform_", "(", "model", ".", "weight", ".", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.NAS_FUSE.fit": [[106, 130], ["torch.optim.Adam", "torch.optim.Adam", "torch.nn.CrossEntropyLoss", "model.train", "range", "model.parameters", "enumerate", "inputs.to.to", "targets.long().to.long().to", "torch.optim.Adam.zero_grad", "model", "nn.CrossEntropyLoss.", "error.backward", "torch.optim.Adam.step", "torch.max", "torch.max", "print", "targets.long().to.long", "len", "float", "float"], "function", ["None"], ["", "", "def", "fit", "(", "model", ",", "train_loader", ")", ":", "\n", "    ", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ")", "\n", "# optimizer = torch.optim.SGD(model.parameters(), lr=0.001, momentum=0.9)", "\n", "error", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "EPOCHS", "=", "args", ".", "num_epoch", "\n", "model", ".", "train", "(", ")", "\n", "for", "epoch", "in", "range", "(", "EPOCHS", ")", ":", "\n", "        ", "correct", "=", "0", "\n", "for", "batch_idx", ",", "(", "inputs", ",", "targets", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "            ", "inputs", "=", "inputs", ".", "to", "(", "device", ")", "\n", "targets", "=", "targets", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "output", "=", "model", "(", "inputs", ")", "\n", "loss", "=", "error", "(", "output", ",", "targets", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "# Total correct predictions", "\n", "predicted", "=", "torch", ".", "max", "(", "output", ".", "data", ",", "1", ")", "[", "1", "]", "\n", "correct", "+=", "(", "predicted", "==", "targets", ")", ".", "sum", "(", ")", "\n", "if", "batch_idx", "%", "200", "==", "0", ":", "\n", "                ", "print", "(", "'Epoch : {} ({:.0f}%)\\t Accuracy:{:.3f}%'", ".", "format", "(", "\n", "epoch", ",", "100.", "*", "batch_idx", "/", "len", "(", "train_loader", ")", ",", "float", "(", "correct", "*", "100", ")", "/", "float", "(", "args", ".", "batch_size_train", "*", "(", "batch_idx", "+", "1", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.NAS_FUSE.evaluate": [[134, 157], ["print", "test_imgs.to.to", "test_labels.long().to.long().to", "model", "print", "torch.save", "torch.save", "float", "len", "torch.max", "torch.max", "model.state_dict", "os.path.isdir", "os.mkdir", "test_labels.long().to.long", "float", "len", "str"], "function", ["None"], ["def", "evaluate", "(", "model", ",", "test_loader", ",", "label", ",", "save_flag", ",", "index", ")", ":", "\n", "    ", "global", "best_acc", "\n", "correct", "=", "0", "\n", "for", "test_imgs", ",", "test_labels", "in", "test_loader", ":", "\n", "        ", "test_imgs", "=", "test_imgs", ".", "to", "(", "device", ")", "\n", "test_labels", "=", "test_labels", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "\n", "output", "=", "model", "(", "test_imgs", ")", "\n", "predicted", "=", "torch", ".", "max", "(", "output", ",", "1", ")", "[", "1", "]", "\n", "correct", "+=", "(", "predicted", "==", "test_labels", ")", ".", "sum", "(", ")", "\n", "", "print", "(", "\"Test accuracy:{:.3f}% \\n\"", ".", "format", "(", "float", "(", "correct", "*", "100", ")", "/", "len", "(", "label", ")", ")", ")", "\n", "\n", "if", "(", "save_flag", "==", "True", ")", ":", "\n", "# Save the pretrained network", "\n", "        ", "print", "(", "'Saving..'", ")", "\n", "state", "=", "{", "\n", "'net'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'acc'", ":", "correct", ",", "\n", "}", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "'checkpoint'", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "'checkpoint'", ")", "\n", "", "torch", ".", "save", "(", "state", ",", "'./checkpoint/bestnet'", "+", "str", "(", "index", ")", "+", "'.t1'", ")", "\n", "", "best_acc", "=", "float", "(", "correct", "*", "100", ")", "/", "len", "(", "label", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.NAS_FUSE.child_train": [[161, 195], ["torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.optim.Adam", "torch.nn.CrossEntropyLoss", "model1.train", "model2.train", "model3.train", "range", "model1.parameters", "model2.parameters", "model3.parameters", "enumerate", "inputs.to.to", "targets.long().to.long().to", "model1", "model2", "model3", "nn.CrossEntropyLoss.", "torch.optim.Adam.zero_grad", "torch.optim.Adam.zero_grad", "torch.optim.Adam.zero_grad", "error.backward", "torch.optim.Adam.step", "torch.optim.Adam.step", "torch.optim.Adam.step", "torch.sum", "torch.sum", "torch.max", "torch.max", "targets.long().to.long", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp"], "function", ["None"], ["", "def", "child_train", "(", "coef", ",", "model1", ",", "model2", ",", "model3", ",", "trainloader", ")", ":", "\n", "    ", "optimizer1", "=", "torch", ".", "optim", ".", "Adam", "(", "model1", ".", "parameters", "(", ")", ")", "\n", "optimizer2", "=", "torch", ".", "optim", ".", "Adam", "(", "model2", ".", "parameters", "(", ")", ")", "\n", "optimizer3", "=", "torch", ".", "optim", ".", "Adam", "(", "model3", ".", "parameters", "(", ")", ")", "\n", "error", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "\n", "model1", ".", "train", "(", ")", "\n", "model2", ".", "train", "(", ")", "\n", "model3", ".", "train", "(", ")", "\n", "for", "epoch", "in", "range", "(", "args", ".", "num_epoch_child", ")", ":", "\n", "        ", "correct", "=", "0", "\n", "for", "batch_idx", ",", "(", "inputs", ",", "targets", ")", "in", "enumerate", "(", "trainloader", ")", ":", "\n", "            ", "inputs", "=", "inputs", ".", "to", "(", "device", ")", "\n", "targets", "=", "targets", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "\n", "output1", "=", "model1", "(", "inputs", ")", "\n", "output2", "=", "model2", "(", "inputs", ")", "\n", "output3", "=", "model3", "(", "inputs", ")", "\n", "output", "=", "(", "torch", ".", "exp", "(", "coef", "[", "0", ",", "0", "]", ")", "*", "output1", "+", "torch", ".", "exp", "(", "coef", "[", "0", ",", "1", "]", ")", "*", "output2", "+", "torch", ".", "exp", "(", "coef", "[", "0", ",", "2", "]", ")", "*", "output3", ")", "/", "torch", ".", "sum", "(", "torch", ".", "exp", "(", "coef", ")", ")", "\n", "loss", "=", "error", "(", "output", ",", "targets", ")", "\n", "\n", "optimizer1", ".", "zero_grad", "(", ")", "\n", "optimizer2", ".", "zero_grad", "(", ")", "\n", "optimizer3", ".", "zero_grad", "(", ")", "\n", "\n", "loss", ".", "backward", "(", ")", "\n", "\n", "optimizer1", ".", "step", "(", ")", "\n", "optimizer2", ".", "step", "(", ")", "\n", "optimizer3", ".", "step", "(", ")", "\n", "\n", "# Total correct predictions", "\n", "predicted", "=", "torch", ".", "max", "(", "output", ".", "data", ",", "1", ")", "[", "1", "]", "\n", "correct", "+=", "(", "predicted", "==", "targets", ")", ".", "sum", "(", ")", "\n", "#print(correct)", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.NAS_FUSE.coef_train": [[202, 220], ["torch.optim.Adam", "torch.optim.Adam", "torch.nn.CrossEntropyLoss", "range", "enumerate", "inputs.to.to", "targets.long().to.long().to", "torch.optim.Adam.zero_grad", "model1", "model2", "model3", "nn.CrossEntropyLoss.", "error.backward", "torch.optim.Adam.step", "torch.sum", "torch.sum", "targets.long().to.long", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.exp"], "function", ["None"], ["", "", "", "def", "coef_train", "(", "coef", ",", "model1", ",", "model2", ",", "model3", ",", "testloader", ")", ":", "\n", "    ", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "[", "coef", "]", ")", "\n", "error", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "for", "epoch", "in", "range", "(", "args", ".", "num_epoch_coef", ")", ":", "\n", "# correct = 0", "\n", "        ", "for", "batch_idx", ",", "(", "inputs", ",", "targets", ")", "in", "enumerate", "(", "testloader", ")", ":", "\n", "            ", "inputs", "=", "inputs", ".", "to", "(", "device", ")", "\n", "targets", "=", "targets", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "output1", "=", "model1", "(", "inputs", ")", "\n", "output2", "=", "model2", "(", "inputs", ")", "\n", "output3", "=", "model3", "(", "inputs", ")", "\n", "output", "=", "(", "torch", ".", "exp", "(", "coef", "[", "0", ",", "0", "]", ")", "*", "output1", "+", "torch", ".", "exp", "(", "coef", "[", "0", ",", "1", "]", ")", "*", "output2", "+", "torch", ".", "exp", "(", "coef", "[", "0", ",", "2", "]", ")", "*", "output3", ")", "/", "torch", ".", "sum", "(", "torch", ".", "exp", "(", "coef", ")", ")", "\n", "\n", "loss", "=", "error", "(", "output", ",", "targets", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.NAS_FUSE.FUSE": [[227, 271], ["torch.manual_seed", "torch.manual_seed", "child1.apply", "child1.to", "torch.manual_seed", "torch.manual_seed", "NAS_FUSE.Cell", "Cell.to", "torch.manual_seed", "torch.manual_seed", "NAS_FUSE.Cell", "Cell.to", "torch.ones", "torch.ones", "coef.to().requires_grad_.to().requires_grad_", "range", "torch.max", "torch.max", "print", "print", "NAS_FUSE.child_train", "print", "NAS_FUSE.coef_train", "print", "coef.to().requires_grad_.to"], "function", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.NAS_FUSE.child_train", "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.NAS_FUSE.coef_train"], ["", "", "", "def", "FUSE", "(", "child1", ",", "dim", ",", "train_loader", ",", "test_loader", ",", "test_label", ")", ":", "\n", "# reset best_model weights", "\n", "    ", "torch", ".", "manual_seed", "(", "0", ")", "\n", "child1", ".", "apply", "(", "weight_init", ")", "\n", "child1", ".", "to", "(", "device", ")", "\n", "# print(\"Child network 1:\")", "\n", "# print(child1)", "\n", "# print(\"\\n\")", "\n", "\n", "# generate child 2 and 3", "\n", "torch", ".", "manual_seed", "(", "0", ")", "\n", "child2", "=", "Cell", "(", "dim", ")", "\n", "child2", ".", "to", "(", "device", ")", "\n", "# print(\"Child network 2:\")", "\n", "# print(child2)", "\n", "# print(\"\\n\")", "\n", "\n", "torch", ".", "manual_seed", "(", "0", ")", "\n", "child3", "=", "Cell", "(", "dim", ")", "\n", "child3", ".", "to", "(", "device", ")", "\n", "# print(\"Child network 3:\")", "\n", "# print(child3)", "\n", "# print(\"\\n\")", "\n", "child_network", "=", "[", "child1", ",", "child2", ",", "child3", "]", "\n", "\n", "# coefficient for child networks", "\n", "# coef = Variable(torch.ones(1, args.num_child), requires_grad=True)", "\n", "coef", "=", "torch", ".", "ones", "(", "1", ",", "args", ".", "num_child", ")", "\n", "coef", "=", "coef", ".", "to", "(", "device", ")", ".", "requires_grad_", "(", "True", ")", "\n", "\n", "# jointly train child networks and coef", "\n", "for", "i", "in", "range", "(", "10", ")", ":", "\n", "        ", "print", "(", "\"Training Stage: {}\"", ".", "format", "(", "i", ")", ")", "\n", "print", "(", "\"Training child networks...\"", ")", "\n", "child_train", "(", "coef", ",", "child1", ",", "child2", ",", "child3", ",", "train_loader", ")", "\n", "print", "(", "\"Training coefficients...\"", ")", "\n", "coef_train", "(", "coef", ",", "child1", ",", "child2", ",", "child3", ",", "test_loader", ")", "\n", "print", "(", "coef", ")", "\n", "\n", "# Choose the best of child network", "\n", "", "values", ",", "indices", "=", "torch", ".", "max", "(", "coef", ",", "1", ")", "\n", "current_best", "=", "child_network", "[", "indices", "]", "\n", "\n", "return", "current_best", ",", "indices", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.NAS_FUSE.main": [[277, 334], ["torch.autograd.set_detect_anomaly", "torch.autograd.set_detect_anomaly", "numpy.array", "data_loader.CIFAR_multi_indicator_dataset", "torch.manual_seed", "torch.manual_seed", "NAS_FUSE.Cell", "Cell.to", "print", "range", "torch.manual_seed", "torch.manual_seed", "Cell.apply", "NAS_FUSE.fit", "NAS_FUSE.evaluate", "print", "print", "print", "print", "print", "NAS_FUSE.FUSE"], "function", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.data_loader.CIFAR_multi_indicator_dataset", "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.fit", "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.evaluate", "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.NAS_FUSE.FUSE"], ["", "def", "main", "(", ")", ":", "\n", "    ", "torch", ".", "autograd", ".", "set_detect_anomaly", "(", "False", ")", "\n", "# task id", "\n", "taskID", "=", "50", "\n", "\n", "dataset", "=", "'CIFAR10'", "\n", "\n", "base_task_list", "=", "np", ".", "array", "(", "[", "[", "1", ",", "3", ",", "8", "]", ",", "[", "3", ",", "8", ",", "9", "]", ",", "[", "2", ",", "6", ",", "7", "]", ",", "[", "10", "]", "]", ")", "\n", "target", "=", "2", "\n", "out_dim", "=", "4", "\n", "\n", "# load the train and test data for indicator task", "\n", "trainloader", ",", "testloader", ",", "train_label", ",", "test_label", "=", "CIFAR_multi_indicator_dataset", "(", "dataset", ",", "base_task_list", "[", "target", "]", ",", "args", ")", "\n", "\n", "# Train and evaluate the seed network", "\n", "torch", ".", "manual_seed", "(", "0", ")", "\n", "best_model", "=", "Cell", "(", "out_dim", ")", "\n", "best_model", ".", "to", "(", "device", ")", "\n", "print", "(", "best_model", ")", "\n", "# fit(best_model, trainloader)", "\n", "# evaluate(best_model, testloader, test_label, False, taskID)", "\n", "# print(\"The current best accuracy:{:.3f} \\n\".format( float(best_acc * 100) / len(test_label)))", "\n", "\n", "# Generate new child network", "\n", "for", "iter", "in", "range", "(", "100", ")", ":", "\n", "        ", "print", "(", "\"NAS Stage: {}\"", ".", "format", "(", "iter", ")", ")", "\n", "\n", "# Generate and choose the best child", "\n", "best_model", ",", "idx", "=", "FUSE", "(", "best_model", ",", "out_dim", ",", "trainloader", ",", "testloader", ",", "test_label", ")", "\n", "\n", "# if (idx != 0):", "\n", "# Train and evaluate the best child", "\n", "# fit(best_model, trainloader)", "\n", "# evaluate(best_model, testloader, test_label, False, taskID)", "\n", "\n", "# print(\"Best index: {}\".format(idx))", "\n", "# print(\"The current best network:\")", "\n", "# print(best_model)", "\n", "# print(\"\\n\")", "\n", "# print(\"------------------------------------------------------------\")", "\n", "# print(\"\\n\")", "\n", "# print(\"The current best accuracy: {:.3f} \\n\".format(best_acc))", "\n", "\n", "\n", "\n", "# reset best_model", "\n", "", "torch", ".", "manual_seed", "(", "0", ")", "\n", "best_model", ".", "apply", "(", "weight_init", ")", "\n", "\n", "# train and evaluate", "\n", "fit", "(", "best_model", ",", "trainloader", ")", "\n", "evaluate", "(", "best_model", ",", "testloader", ",", "test_label", ",", "False", ",", "taskID", ")", "\n", "\n", "print", "(", "\"The best network:\"", ")", "\n", "print", "(", "best_model", ")", "\n", "print", "(", "\"\\n\"", ")", "\n", "print", "(", "\"The current best accuracy: {:.3f} \\n\"", ".", "format", "(", "best_acc", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher_distance_taskonomy.CustomDataSet.__init__": [[46, 52], ["os.listdir", "os.listdir"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "source_dir", ",", "target_dir", ",", "transform", ")", ":", "\n", "        ", "self", ".", "source_dir", "=", "source_dir", "\n", "self", ".", "target_dir", "=", "target_dir", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "source_imgs", "=", "os", ".", "listdir", "(", "source_dir", ")", "\n", "self", ".", "target_imgs", "=", "os", ".", "listdir", "(", "target_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher_distance_taskonomy.CustomDataSet.__len__": [[53, 55], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "source_imgs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher_distance_taskonomy.CustomDataSet.__getitem__": [[56, 81], ["torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "torch.is_tensor", "os.path.join", "skimage.io.imread", "os.path.join", "skimage.io.imread", "fisher_distance_taskonomy.CustomDataSet.astype", "numpy.tile", "PIL.Image.fromarray", "idx.tolist.tolist.tolist", "fisher_distance_taskonomy.CustomDataSet.astype", "fisher_distance_taskonomy.CustomDataSet.transform", "fisher_distance_taskonomy.CustomDataSet.transform"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "torch", ".", "is_tensor", "(", "idx", ")", ":", "\n", "            ", "idx", "=", "idx", ".", "tolist", "(", ")", "\n", "\n", "", "source_img_loc", "=", "os", ".", "path", ".", "join", "(", "self", ".", "source_dir", ",", "self", ".", "source_imgs", "[", "idx", "]", ")", "\n", "source_image", "=", "io", ".", "imread", "(", "source_img_loc", ")", "\n", "\n", "target_img_loc", "=", "os", ".", "path", ".", "join", "(", "self", ".", "target_dir", ",", "self", ".", "target_imgs", "[", "idx", "]", ")", "\n", "target_image", "=", "io", ".", "imread", "(", "target_img_loc", ")", "\n", "# preprocess target image to 3 channel", "\n", "target_image", "=", "target_image", ".", "astype", "(", "np", ".", "float32", ")", "\n", "target_image", "=", "np", ".", "tile", "(", "target_image", "[", ":", ",", ":", ",", "None", "]", ",", "[", "1", ",", "1", ",", "3", "]", ")", "\n", "\n", "target_image", "=", "Image", ".", "fromarray", "(", "target_image", ".", "astype", "(", "'uint8'", ")", ",", "'RGB'", ")", "\n", "\n", "\n", "sample", "=", "{", "'source'", ":", "source_image", ",", "'target'", ":", "target_image", "}", "\n", "\n", "if", "self", ".", "transform", ":", "\n", "            ", "source_image", "=", "self", ".", "transform", "(", "source_image", ")", "\n", "target_image", "=", "self", ".", "transform", "(", "target_image", ")", "\n", "\n", "", "sample", "=", "{", "'source'", ":", "source_image", ",", "'target'", ":", "target_image", "}", "\n", "\n", "return", "sample", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher_distance_taskonomy.Flatten.__init__": [[95, 99], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["def", "__init__", "(", "self", ",", "start_dim", "=", "1", ",", "end_dim", "=", "-", "1", ")", ":", "\n", "        ", "super", "(", "Flatten", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "start_dim", "=", "start_dim", "\n", "self", ".", "end_dim", "=", "end_dim", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher_distance_taskonomy.Flatten.forward": [[100, 102], ["input.flatten"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "input", ".", "flatten", "(", "self", ".", "start_dim", ",", "self", ".", "end_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher_distance_taskonomy.NN.__init__": [[110, 126], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Sequential", "fisher_distance_taskonomy.Flatten", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "NN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "encoder", "=", "nn", ".", "Sequential", "(", "\n", "Flatten", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "3", "*", "128", "*", "128", ",", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "512", ",", "128", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "\n", "\n", "# c is the number of class label", "\n", "self", ".", "decoder", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "128", ",", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "512", ",", "3", "*", "128", "*", "128", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher_distance_taskonomy.NN.forward": [[128, 133], ["fisher_distance_taskonomy.NN.encoder", "fisher_distance_taskonomy.NN.decoder", "X.view.view.view", "X.view.view.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "X", "=", "self", ".", "encoder", "(", "X", ")", "\n", "X", "=", "self", ".", "decoder", "(", "X", ")", "\n", "X", "=", "X", ".", "view", "(", "X", ".", "size", "(", "0", ")", ",", "3", ",", "128", ",", "128", ")", "\n", "return", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher_distance_taskonomy.resize2d": [[42, 44], ["torch.nn.functional.adaptive_avg_pool2d", "torch.autograd.Variable"], "function", ["None"], ["def", "resize2d", "(", "img", ",", "size", ")", ":", "\n", "    ", "return", "(", "F", ".", "adaptive_avg_pool2d", "(", "Variable", "(", "img", ",", "volatile", "=", "False", ")", ",", "size", ")", ")", ".", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher_distance_taskonomy.variable": [[103, 107], ["torch.autograd.Variable", "torch.cuda.is_available", "torch.cuda.is_available", "t.cuda.cuda"], "function", ["None"], ["", "", "def", "variable", "(", "t", ":", "torch", ".", "Tensor", ",", "use_cuda", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "and", "use_cuda", ":", "\n", "        ", "t", "=", "t", ".", "cuda", "(", ")", "\n", "", "return", "Variable", "(", "t", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher_distance_taskonomy.diag_fisher": [[136, 163], ["copy.deepcopy().items", "model.eval", "torch.nn.MSELoss", "enumerate", "p.data.zero_", "fisher_distance_taskonomy.variable", "fisher_distance_taskonomy.resize2d", "inputs.to.to", "fisher_distance_taskonomy.resize2d", "targets.to.to", "model.zero_grad", "model", "nn.MSELoss.", "error.backward", "model.named_parameters", "model.named_parameters", "copy.deepcopy", "precision_matrices.items"], "function", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher-distance.variable", "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher_distance_taskonomy.resize2d", "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher_distance_taskonomy.resize2d"], ["", "", "def", "diag_fisher", "(", "model", ",", "data", ")", ":", "\n", "    ", "precision_matrices", "=", "{", "}", "\n", "params", "=", "{", "n", ":", "p", "for", "n", ",", "p", "in", "model", ".", "named_parameters", "(", ")", "if", "p", ".", "requires_grad", "}", "\n", "for", "n", ",", "p", "in", "deepcopy", "(", "params", ")", ".", "items", "(", ")", ":", "\n", "        ", "p", ".", "data", ".", "zero_", "(", ")", "\n", "precision_matrices", "[", "n", "]", "=", "variable", "(", "p", ".", "data", ")", "\n", "\n", "", "model", ".", "eval", "(", ")", "\n", "error", "=", "nn", ".", "MSELoss", "(", ")", "\n", "for", "batch_idx", ",", "data", "in", "enumerate", "(", "data", ")", ":", "\n", "        ", "inputs", "=", "resize2d", "(", "data", "[", "'source'", "]", ",", "(", "128", ",", "128", ")", ")", "\n", "inputs", "=", "inputs", ".", "to", "(", "device", ")", "\n", "targets", "=", "resize2d", "(", "data", "[", "'target'", "]", ",", "(", "128", ",", "128", ")", ")", "\n", "targets", "=", "targets", ".", "to", "(", "device", ")", "\n", "\n", "model", ".", "zero_grad", "(", ")", "\n", "output", "=", "model", "(", "inputs", ")", "\n", "\n", "loss", "=", "error", "(", "output", ",", "targets", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "\n", "for", "n", ",", "p", "in", "model", ".", "named_parameters", "(", ")", ":", "\n", "            ", "precision_matrices", "[", "n", "]", ".", "data", "+=", "(", "p", ".", "grad", ".", "data", "**", "2", ")", ".", "mean", "(", "0", ")", "\n", "\n", "", "", "precision_matrices", "=", "{", "n", ":", "p", "for", "n", ",", "p", "in", "precision_matrices", ".", "items", "(", ")", "}", "\n", "\n", "return", "precision_matrices", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.data_loader_cifar.feature_Dataset.__init__": [[29, 33], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "images", ",", "labels", "=", "None", ",", "transforms", "=", "None", ")", ":", "\n", "        ", "self", ".", "X", "=", "images", "\n", "self", ".", "y", "=", "labels", "\n", "self", ".", "transforms", "=", "transforms", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.data_loader_cifar.feature_Dataset.__len__": [[34, 36], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "(", "len", "(", "self", ".", "X", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.data_loader_cifar.feature_Dataset.__getitem__": [[37, 48], ["numpy.asarray().astype().reshape", "data_loader_cifar.feature_Dataset.transforms", "numpy.asarray().astype", "numpy.asarray"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "i", ")", ":", "\n", "        ", "data", "=", "self", ".", "X", "[", "i", ",", ":", "]", "\n", "data", "=", "np", ".", "asarray", "(", "data", ")", ".", "astype", "(", "np", ".", "uint8", ")", ".", "reshape", "(", "28", ",", "28", ")", "\n", "\n", "if", "self", ".", "transforms", ":", "\n", "            ", "data", "=", "self", ".", "transforms", "(", "data", ")", "\n", "\n", "", "if", "self", ".", "y", "is", "not", "None", ":", "\n", "            ", "return", "(", "data", ",", "self", ".", "y", "[", "i", "]", ")", "\n", "", "else", ":", "\n", "            ", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.data_loader_cifar.CIFAR10_indicator_dataset": [[51, 119], ["print", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "numpy.array", "sum", "range", "print", "np.array.tolist", "torch.utils.data.DataLoader", "numpy.array", "sum", "range", "print", "np.array.tolist", "torch.utils.data.DataLoader", "len", "sum", "len", "sum"], "function", ["None"], ["", "", "", "def", "CIFAR10_indicator_dataset", "(", "dataset", ",", "num", ",", "args", ")", ":", "\n", "    ", "print", "(", "\"Loading full CIFAR10 dataset...\"", ")", "\n", "data_train", "=", "CIFAR10", "(", "root", "=", "'./data'", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "\n", "data_test", "=", "CIFAR10", "(", "root", "=", "'./data'", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "\n", "\n", "# -------------------------", "\n", "# train batch", "\n", "# -------------------------", "\n", "train_label", "=", "np", ".", "array", "(", "data_train", ".", "targets", ")", "\n", "train_label", "[", "train_label", "==", "num", "[", "0", "]", "]", "=", "10", "\n", "train_label", "[", "train_label", "==", "num", "[", "1", "]", "]", "=", "10", "\n", "train_label", "[", "train_label", "==", "num", "[", "2", "]", "]", "=", "10", "\n", "train_label", "[", "train_label", "!=", "10", "]", "=", "0", "\n", "train_label", "[", "train_label", "==", "10", "]", "=", "1", "\n", "\n", "# select only 15,000 datapoint with label 0", "\n", "idx_1", "=", "(", "train_label", "==", "1", ")", "\n", "idx_0", "=", "(", "train_label", "==", "0", ")", "\n", "sum_idx_0", "=", "0", "\n", "total", "=", "sum", "(", "idx_1", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "idx_0", ")", ")", ":", "\n", "        ", "sum_idx_0", "+=", "idx_0", "[", "i", "]", "\n", "\n", "if", "sum_idx_0", "==", "total", ":", "\n", "            ", "idx_0", "[", "i", "+", "1", ":", "]", "=", "False", "\n", "break", "\n", "# all index 0 and 1", "\n", "", "", "idx", "=", "idx_0", "+", "idx_1", "\n", "print", "(", "sum", "(", "idx", ")", ")", "\n", "# update data_train data and label", "\n", "train_label", "=", "train_label", "[", "idx", "]", "\n", "data_train", ".", "targets", "=", "train_label", ".", "tolist", "(", ")", "\n", "data_train", ".", "data", "=", "data_train", ".", "data", "[", "idx", "]", "\n", "trainloader", "=", "DataLoader", "(", "data_train", ",", "batch_size", "=", "args", ".", "batch_size_train", ",", "shuffle", "=", "False", ")", "\n", "\n", "# -------------------------", "\n", "# test batch", "\n", "# -------------------------", "\n", "test_label", "=", "np", ".", "array", "(", "data_test", ".", "targets", ")", "\n", "test_label", "[", "test_label", "==", "num", "[", "0", "]", "]", "=", "10", "\n", "test_label", "[", "test_label", "==", "num", "[", "1", "]", "]", "=", "10", "\n", "test_label", "[", "test_label", "==", "num", "[", "2", "]", "]", "=", "10", "\n", "test_label", "[", "test_label", "!=", "10", "]", "=", "0", "\n", "test_label", "[", "test_label", "==", "10", "]", "=", "1", "\n", "\n", "# select only 3,000 datapoint with label 0", "\n", "idx_1", "=", "(", "test_label", "==", "1", ")", "\n", "idx_0", "=", "(", "test_label", "==", "0", ")", "\n", "sum_idx_0", "=", "0", "\n", "total", "=", "sum", "(", "idx_1", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "idx_0", ")", ")", ":", "\n", "        ", "sum_idx_0", "+=", "idx_0", "[", "i", "]", "\n", "\n", "if", "sum_idx_0", "==", "total", ":", "\n", "            ", "idx_0", "[", "i", "+", "1", ":", "]", "=", "False", "\n", "break", "\n", "# all index 0 and 1", "\n", "", "", "idx", "=", "idx_0", "+", "idx_1", "\n", "print", "(", "sum", "(", "idx", ")", ")", "\n", "# update data_train data and label", "\n", "test_label", "=", "test_label", "[", "idx", "]", "\n", "data_test", ".", "targets", "=", "test_label", ".", "tolist", "(", ")", "\n", "data_test", ".", "data", "=", "data_test", ".", "data", "[", "idx", "]", "\n", "testloader", "=", "DataLoader", "(", "data_test", ",", "batch_size", "=", "args", ".", "batch_size_train", ",", "shuffle", "=", "False", ")", "\n", "\n", "return", "trainloader", ",", "testloader", ",", "train_label", ",", "test_label", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar100.BinaryNN.__init__": [[34, 37], ["torch.nn.Module.__init__", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["    ", "def", "__init__", "(", "self", ",", "c", ")", ":", "\n", "        ", "super", "(", "BinaryNN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "10", ",", "c", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar100.BinaryNN.forward": [[38, 41], ["train_task_cifar100.BinaryNN.classifier"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "X", "=", "self", ".", "classifier", "(", "X", ")", "\n", "return", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar100.fit": [[44, 68], ["torch.optim.Adam", "torch.nn.CrossEntropyLoss", "model.train", "range", "model.parameters", "enumerate", "inputs.to.to", "targets.long().to.long().to", "torch.optim.Adam.zero_grad", "model", "nn.CrossEntropyLoss.", "error.backward", "torch.optim.Adam.step", "torch.max", "print", "targets.long().to.long", "len", "float", "float"], "function", ["None"], ["", "", "def", "fit", "(", "model", ",", "train_loader", ")", ":", "\n", "    ", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ")", "\n", "error", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "EPOCHS", "=", "args", ".", "num_epoch", "\n", "model", ".", "train", "(", ")", "\n", "for", "epoch", "in", "range", "(", "EPOCHS", ")", ":", "\n", "        ", "correct", "=", "0", "\n", "for", "batch_idx", ",", "(", "inputs", ",", "targets", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "            ", "inputs", "=", "inputs", ".", "to", "(", "device", ")", "\n", "targets", "=", "targets", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "output", "=", "model", "(", "inputs", ")", "\n", "loss", "=", "error", "(", "output", ",", "targets", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "# Total correct predictions", "\n", "predicted", "=", "torch", ".", "max", "(", "output", ".", "data", ",", "1", ")", "[", "1", "]", "\n", "correct", "+=", "(", "predicted", "==", "targets", ")", ".", "sum", "(", ")", "\n", "#print(correct)", "\n", "if", "batch_idx", "%", "50", "==", "0", ":", "\n", "                ", "print", "(", "'Epoch : {} ({:.0f}%) \\t\\t Accuracy:{:.3f}%'", ".", "format", "(", "\n", "epoch", ",", "100.", "*", "batch_idx", "/", "len", "(", "train_loader", ")", ",", "float", "(", "correct", "*", "100", ")", "/", "float", "(", "args", ".", "batch_size_train", "*", "(", "batch_idx", "+", "1", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar100.evaluate": [[72, 95], ["print", "test_imgs.to.to", "test_labels.long().to.long().to", "model", "print", "torch.save", "torch.max", "model.state_dict", "os.path.isdir", "os.mkdir", "test_labels.long().to.long", "float", "len", "str", "str"], "function", ["None"], ["def", "evaluate", "(", "model", ",", "test_loader", ",", "label", ",", "save_flag", ",", "index", ",", "i", ")", ":", "\n", "    ", "global", "best_acc", "\n", "correct", "=", "0", "\n", "for", "test_imgs", ",", "test_labels", "in", "test_loader", ":", "\n", "        ", "test_imgs", "=", "test_imgs", ".", "to", "(", "device", ")", "\n", "test_labels", "=", "test_labels", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "\n", "output", "=", "model", "(", "test_imgs", ")", "\n", "predicted", "=", "torch", ".", "max", "(", "output", ",", "1", ")", "[", "1", "]", "\n", "correct", "+=", "(", "predicted", "==", "test_labels", ")", ".", "sum", "(", ")", "\n", "", "print", "(", "\"Test accuracy:{:.3f}% \\n\"", ".", "format", "(", "float", "(", "correct", "*", "100", ")", "/", "len", "(", "label", ")", ")", ")", "\n", "\n", "if", "(", "save_flag", "==", "True", ")", ":", "\n", "# Save the pretrained network", "\n", "        ", "print", "(", "'Saving..'", ")", "\n", "state", "=", "{", "\n", "'net'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'acc'", ":", "correct", ",", "\n", "}", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "'checkpoint'", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "'checkpoint'", ")", "\n", "", "torch", ".", "save", "(", "state", ",", "'./checkpoint/cifar100_task'", "+", "str", "(", "index", ")", "+", "'.t'", "+", "str", "(", "i", ")", ")", "\n", "", "best_acc", "=", "correct", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.data_loader.feature_Dataset.__init__": [[32, 36], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "images", ",", "labels", "=", "None", ",", "transforms", "=", "None", ")", ":", "\n", "        ", "self", ".", "X", "=", "images", "\n", "self", ".", "y", "=", "labels", "\n", "self", ".", "transforms", "=", "transforms", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.data_loader.feature_Dataset.__len__": [[37, 39], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "(", "len", "(", "self", ".", "X", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.data_loader.feature_Dataset.__getitem__": [[40, 51], ["numpy.asarray().astype().reshape", "data_loader.feature_Dataset.transforms", "numpy.asarray().astype", "numpy.asarray"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "i", ")", ":", "\n", "        ", "data", "=", "self", ".", "X", "[", "i", ",", ":", "]", "\n", "data", "=", "np", ".", "asarray", "(", "data", ")", ".", "astype", "(", "np", ".", "uint8", ")", ".", "reshape", "(", "28", ",", "28", ")", "\n", "\n", "if", "self", ".", "transforms", ":", "\n", "            ", "data", "=", "self", ".", "transforms", "(", "data", ")", "\n", "\n", "", "if", "self", ".", "y", "is", "not", "None", ":", "\n", "            ", "return", "(", "data", ",", "self", ".", "y", "[", "i", "]", ")", "\n", "", "else", ":", "\n", "            ", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.data_loader.full_class_dataset": [[54, 121], ["print", "torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "print", "torchvision.datasets.FashionMNIST.targets.cpu().detach().numpy", "torch.utils.data.DataLoader", "print", "torchvision.datasets.FashionMNIST.targets.cpu().detach().numpy", "torch.utils.data.DataLoader", "print", "torchvision.datasets.FashionMNIST", "torchvision.datasets.FashionMNIST", "print", "range", "data_loader.feature_Dataset", "torch.utils.data.DataLoader", "data_loader.feature_Dataset", "torch.utils.data.DataLoader", "len", "numpy.load", "numpy.concatenate", "numpy.concatenate", "torchvision.datasets.FashionMNIST.targets.cpu().detach", "torchvision.datasets.FashionMNIST.targets.cpu().detach", "numpy.concatenate", "numpy.concatenate", "torchvision.datasets.FashionMNIST.targets.cpu", "torchvision.datasets.FashionMNIST.targets.cpu", "numpy.ones", "numpy.ones"], "function", ["None"], ["", "", "", "def", "full_class_dataset", "(", "dataset", ",", "limit", ",", "class_object", ",", "args", ")", ":", "\n", "    ", "if", "(", "dataset", "==", "'MNIST'", ")", ":", "\n", "        ", "print", "(", "\"Loading full MNIST dataset...\"", ")", "\n", "data_train", "=", "MNIST", "(", "root", "=", "'./data'", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "\n", "data_test", "=", "MNIST", "(", "root", "=", "'./data'", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "\n", "", "elif", "(", "dataset", "==", "'fMNIST'", ")", ":", "\n", "        ", "print", "(", "\"Loading full Fashion-MNIST dataset...\"", ")", "\n", "data_train", "=", "FashionMNIST", "(", "root", "=", "'./data'", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "\n", "data_test", "=", "FashionMNIST", "(", "root", "=", "'./data'", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"Loading full QuickDraw! dataset...\"", ")", "\n", "train_data", "=", "[", "]", "\n", "train_label", "=", "[", "]", "\n", "test_data", "=", "[", "]", "\n", "test_label", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "class_object", ")", ")", ":", "\n", "# load npy file and concatenate data", "\n", "            ", "ob", "=", "np", ".", "load", "(", "'./data/quickdraw/full_numpy_bitmap_'", "+", "class_object", "[", "i", "]", "+", "'.npy'", ")", "\n", "# choose train size and test size", "\n", "train", "=", "ob", "[", "0", ":", "5000", ",", "]", "\n", "test", "=", "ob", "[", "5000", ":", "6000", ",", "]", "\n", "train_label", "=", "np", ".", "concatenate", "(", "(", "train_label", ",", "i", "*", "np", ".", "ones", "(", "train", ".", "shape", "[", "0", "]", ")", ")", ",", "axis", "=", "0", ")", "\n", "test_label", "=", "np", ".", "concatenate", "(", "(", "test_label", ",", "i", "*", "np", ".", "ones", "(", "test", ".", "shape", "[", "0", "]", ")", ")", ",", "axis", "=", "0", ")", "\n", "\n", "if", "i", "==", "0", ":", "\n", "                ", "train_data", "=", "train", "\n", "test_data", "=", "test", "\n", "", "else", ":", "\n", "                ", "train_data", "=", "np", ".", "concatenate", "(", "(", "train_data", ",", "train", ")", ",", "axis", "=", "0", ")", "\n", "test_data", "=", "np", ".", "concatenate", "(", "(", "test_data", ",", "test", ")", ",", "axis", "=", "0", ")", "\n", "\n", "# generate dataloader", "\n", "", "", "trainset", "=", "feature_Dataset", "(", "train_data", ",", "train_label", ",", "transform", ")", "\n", "trainloader", "=", "DataLoader", "(", "trainset", ",", "batch_size", "=", "args", ".", "batch_size_train", ",", "shuffle", "=", "True", ")", "\n", "\n", "testset", "=", "feature_Dataset", "(", "test_data", ",", "test_label", ",", "transform", ")", "\n", "testloader", "=", "DataLoader", "(", "testset", ",", "batch_size", "=", "args", ".", "batch_size_test", ",", "shuffle", "=", "False", ")", "\n", "\n", "\n", "", "if", "(", "dataset", "==", "'MNIST'", "or", "dataset", "==", "'fMNIST'", ")", ":", "\n", "# train batch", "\n", "        ", "idx", "=", "(", "data_train", ".", "targets", "<", "limit", ")", "\n", "data_train", ".", "targets", "=", "data_train", ".", "targets", "[", "idx", "]", "\n", "\n", "print", "(", "\"Changing label...\"", ")", "\n", "data_train", ".", "targets", "[", "data_train", ".", "targets", "==", "1", "]", "=", "10", "\n", "data_train", ".", "targets", "[", "data_train", ".", "targets", "==", "6", "]", "=", "1", "\n", "data_train", ".", "targets", "[", "data_train", ".", "targets", "==", "10", "]", "=", "6", "\n", "\n", "\n", "data_train", ".", "data", "=", "data_train", ".", "data", "[", "idx", "]", "\n", "train_label", "=", "data_train", ".", "targets", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "trainloader", "=", "DataLoader", "(", "data_train", ",", "batch_size", "=", "args", ".", "batch_size_train", ",", "shuffle", "=", "True", ")", "\n", "# test batch", "\n", "idx", "=", "(", "data_test", ".", "targets", "<", "limit", ")", "\n", "data_test", ".", "targets", "=", "data_test", ".", "targets", "[", "idx", "]", "\n", "\n", "print", "(", "\"Changing label...\"", ")", "\n", "data_test", ".", "targets", "[", "data_test", ".", "targets", "==", "1", "]", "=", "10", "\n", "data_test", ".", "targets", "[", "data_test", ".", "targets", "==", "6", "]", "=", "1", "\n", "data_test", ".", "targets", "[", "data_test", ".", "targets", "==", "10", "]", "=", "6", "\n", "\n", "data_test", ".", "data", "=", "data_test", ".", "data", "[", "idx", "]", "\n", "test_label", "=", "data_test", ".", "targets", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "testloader", "=", "DataLoader", "(", "data_test", ",", "batch_size", "=", "args", ".", "batch_size_test", ",", "shuffle", "=", "False", ")", "\n", "\n", "", "return", "trainloader", ",", "testloader", ",", "train_label", ",", "test_label", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.data_loader.indicator_dataset": [[124, 246], ["print", "torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "print", "sum", "range", "print", "torchvision.datasets.FashionMNIST.targets.cpu().detach().numpy", "torch.utils.data.DataLoader", "print", "print", "range", "print", "torchvision.datasets.FashionMNIST.targets.cpu().detach().numpy", "torch.utils.data.DataLoader", "print", "torchvision.datasets.FashionMNIST", "torchvision.datasets.FashionMNIST", "print", "range", "data_loader.feature_Dataset", "torch.utils.data.DataLoader", "data_loader.feature_Dataset", "torch.utils.data.DataLoader", "len", "sum", "sum", "len", "sum", "len", "numpy.load", "numpy.concatenate", "numpy.concatenate", "np.concatenate.astype", "np.concatenate.astype", "torchvision.datasets.FashionMNIST.targets.cpu().detach", "torchvision.datasets.FashionMNIST.targets.cpu().detach", "numpy.concatenate", "numpy.concatenate", "torchvision.datasets.FashionMNIST.targets.cpu", "torchvision.datasets.FashionMNIST.targets.cpu", "numpy.ones", "numpy.ones"], "function", ["None"], ["", "def", "indicator_dataset", "(", "dataset", ",", "num", ",", "limit", ",", "class_object", ",", "args", ")", ":", "\n", "    ", "if", "(", "dataset", "==", "'MNIST'", ")", ":", "\n", "        ", "print", "(", "\"Loading {}-indicator for MNIST dataset...\"", ".", "format", "(", "num", ")", ")", "\n", "data_train", "=", "MNIST", "(", "root", "=", "'./data'", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "\n", "data_test", "=", "MNIST", "(", "root", "=", "'./data'", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "\n", "", "elif", "(", "dataset", "==", "'fMNIST'", ")", ":", "\n", "        ", "print", "(", "\"Loading full Fashion-MNIST dataset...\"", ")", "\n", "data_train", "=", "FashionMNIST", "(", "root", "=", "'./data'", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "\n", "data_test", "=", "FashionMNIST", "(", "root", "=", "'./data'", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"Loading full QuickDraw! dataset...\"", ")", "\n", "train_data", "=", "[", "]", "\n", "train_label", "=", "[", "]", "\n", "test_data", "=", "[", "]", "\n", "test_label", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "class_object", ")", ")", ":", "\n", "# load npy file and concatenate data", "\n", "            ", "ob", "=", "np", ".", "load", "(", "'./data/quickdraw/full_numpy_bitmap_'", "+", "class_object", "[", "i", "]", "+", "'.npy'", ")", "\n", "# choose train size and test size", "\n", "train", "=", "ob", "[", "0", ":", "5000", ",", "]", "\n", "test", "=", "ob", "[", "5000", ":", "6000", ",", "]", "\n", "train_label", "=", "np", ".", "concatenate", "(", "(", "train_label", ",", "i", "*", "np", ".", "ones", "(", "train", ".", "shape", "[", "0", "]", ")", ")", ",", "axis", "=", "0", ")", "\n", "test_label", "=", "np", ".", "concatenate", "(", "(", "test_label", ",", "i", "*", "np", ".", "ones", "(", "test", ".", "shape", "[", "0", "]", ")", ")", ",", "axis", "=", "0", ")", "\n", "\n", "if", "i", "==", "0", ":", "\n", "                ", "train_data", "=", "train", "\n", "test_data", "=", "test", "\n", "", "else", ":", "\n", "                ", "train_data", "=", "np", ".", "concatenate", "(", "(", "train_data", ",", "train", ")", ",", "axis", "=", "0", ")", "\n", "test_data", "=", "np", ".", "concatenate", "(", "(", "test_data", ",", "test", ")", ",", "axis", "=", "0", ")", "\n", "\n", "", "", "train_label", "[", "train_label", "!=", "num", "]", "=", "-", "1", "\n", "train_label", "[", "train_label", "==", "num", "]", "=", "1", "\n", "train_label", "[", "train_label", "==", "-", "1", "]", "=", "0", "\n", "\n", "test_label", "[", "test_label", "!=", "num", "]", "=", "-", "1", "\n", "test_label", "[", "test_label", "==", "num", "]", "=", "1", "\n", "test_label", "[", "test_label", "==", "-", "1", "]", "=", "0", "\n", "\n", "# generate dataloader", "\n", "trainset", "=", "feature_Dataset", "(", "train_data", ",", "train_label", ".", "astype", "(", "int", ")", ",", "transform", ")", "\n", "trainloader", "=", "DataLoader", "(", "trainset", ",", "batch_size", "=", "args", ".", "batch_size_train", ",", "shuffle", "=", "True", ")", "\n", "\n", "testset", "=", "feature_Dataset", "(", "test_data", ",", "test_label", ".", "astype", "(", "int", ")", ",", "transform", ")", "\n", "testloader", "=", "DataLoader", "(", "testset", ",", "batch_size", "=", "args", ".", "batch_size_test", ",", "shuffle", "=", "False", ")", "\n", "\n", "", "if", "(", "dataset", "==", "'MNIST'", "or", "dataset", "==", "'fMNIST'", ")", ":", "\n", "# train batch", "\n", "        ", "idx", "=", "(", "data_train", ".", "targets", "<", "limit", ")", "\n", "data_train", ".", "targets", "=", "data_train", ".", "targets", "[", "idx", "]", "\n", "data_train", ".", "data", "=", "data_train", ".", "data", "[", "idx", "]", "\n", "\n", "print", "(", "\"Changing label...\"", ")", "\n", "data_train", ".", "targets", "[", "data_train", ".", "targets", "==", "1", "]", "=", "10", "\n", "data_train", ".", "targets", "[", "data_train", ".", "targets", "==", "6", "]", "=", "1", "\n", "data_train", ".", "targets", "[", "data_train", ".", "targets", "==", "10", "]", "=", "6", "\n", "\n", "for", "i", "in", "num", ":", "\n", "            ", "data_train", ".", "targets", "[", "data_train", ".", "targets", "==", "i", "]", "=", "10", "\n", "\n", "", "data_train", ".", "targets", "[", "data_train", ".", "targets", "!=", "10", "]", "=", "0", "\n", "data_train", ".", "targets", "[", "data_train", ".", "targets", "==", "10", "]", "=", "1", "\n", "\n", "idx_0", "=", "(", "data_train", ".", "targets", "==", "0", ")", "\n", "idx_1", "=", "(", "data_train", ".", "targets", "==", "1", ")", "\n", "sum_idx_0", "=", "0", "\n", "total", "=", "sum", "(", "idx_1", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "idx_0", ")", ")", ":", "\n", "            ", "sum_idx_0", "+=", "idx_0", "[", "i", "]", "\n", "\n", "if", "sum_idx_0", "==", "total", ":", "\n", "                ", "idx_0", "[", "i", "+", "1", ":", "]", "=", "False", "\n", "break", "\n", "\n", "", "", "idx", "=", "idx_0", "+", "idx_1", "\n", "print", "(", "sum", "(", "idx", ")", ")", "\n", "data_train", ".", "targets", "=", "data_train", ".", "targets", "[", "idx", "]", "\n", "data_train", ".", "data", "=", "data_train", ".", "data", "[", "idx", "]", "\n", "\n", "train_label", "=", "data_train", ".", "targets", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "trainloader", "=", "DataLoader", "(", "data_train", ",", "batch_size", "=", "args", ".", "batch_size_train", ",", "shuffle", "=", "True", ")", "\n", "\n", "# test batch", "\n", "idx", "=", "(", "data_test", ".", "targets", "<", "limit", ")", "\n", "data_test", ".", "targets", "=", "data_test", ".", "targets", "[", "idx", "]", "\n", "data_test", ".", "data", "=", "data_test", ".", "data", "[", "idx", "]", "\n", "\n", "print", "(", "\"Changing label...\"", ")", "\n", "data_test", ".", "targets", "[", "data_test", ".", "targets", "==", "1", "]", "=", "10", "\n", "data_test", ".", "targets", "[", "data_test", ".", "targets", "==", "6", "]", "=", "1", "\n", "data_test", ".", "targets", "[", "data_test", ".", "targets", "==", "10", "]", "=", "6", "\n", "\n", "for", "i", "in", "num", ":", "\n", "            ", "data_test", ".", "targets", "[", "data_test", ".", "targets", "==", "i", "]", "=", "10", "\n", "\n", "", "data_test", ".", "targets", "[", "data_test", ".", "targets", "!=", "10", "]", "=", "0", "\n", "data_test", ".", "targets", "[", "data_test", ".", "targets", "==", "10", "]", "=", "1", "\n", "\n", "idx_0", "=", "(", "data_test", ".", "targets", "==", "0", ")", "\n", "idx_1", "=", "(", "data_test", ".", "targets", "==", "1", ")", "\n", "sum_idx_0", "=", "0", "\n", "print", "(", "sum", "(", "idx_1", ")", ")", "\n", "# total = sum(idx_1)", "\n", "total", "=", "1042", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "idx_0", ")", ")", ":", "\n", "            ", "sum_idx_0", "+=", "idx_0", "[", "i", "]", "\n", "\n", "if", "sum_idx_0", "==", "total", ":", "\n", "                ", "idx_0", "[", "i", "+", "1", ":", "]", "=", "False", "\n", "break", "\n", "\n", "", "", "idx", "=", "idx_0", "+", "idx_1", "\n", "print", "(", "sum", "(", "idx", ")", ")", "\n", "data_test", ".", "targets", "=", "data_test", ".", "targets", "[", "idx", "]", "\n", "data_test", ".", "data", "=", "data_test", ".", "data", "[", "idx", "]", "\n", "\n", "test_label", "=", "data_test", ".", "targets", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "testloader", "=", "DataLoader", "(", "data_test", ",", "batch_size", "=", "args", ".", "batch_size_test", ",", "shuffle", "=", "False", ")", "\n", "\n", "", "return", "trainloader", ",", "testloader", ",", "train_label", ",", "test_label", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.data_loader.odd_even_dataset": [[249, 279], ["torchvision.datasets.FashionMNIST.targets.cpu().detach().numpy", "torch.utils.data.DataLoader", "torchvision.datasets.FashionMNIST.targets.cpu().detach().numpy", "torch.utils.data.DataLoader", "print", "torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "print", "torchvision.datasets.FashionMNIST", "torchvision.datasets.FashionMNIST", "torchvision.datasets.FashionMNIST.targets.cpu().detach", "torchvision.datasets.FashionMNIST.targets.cpu().detach", "torchvision.datasets.FashionMNIST.targets.cpu", "torchvision.datasets.FashionMNIST.targets.cpu"], "function", ["None"], ["", "def", "odd_even_dataset", "(", "dataset", ",", "limit", ",", "args", ")", ":", "\n", "    ", "if", "(", "dataset", "==", "'MNIST'", ")", ":", "\n", "        ", "print", "(", "\"Loading odd vs even MNIST dataset...\"", ")", "\n", "data_train", "=", "MNIST", "(", "root", "=", "'./data'", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "\n", "data_test", "=", "MNIST", "(", "root", "=", "'./data'", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"Loading odd vs even Fashion-MNIST dataset...\"", ")", "\n", "data_train", "=", "FashionMNIST", "(", "root", "=", "'./data'", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "\n", "data_test", "=", "FashionMNIST", "(", "root", "=", "'./data'", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "\n", "\n", "# train batch", "\n", "", "idx", "=", "(", "data_train", ".", "targets", "<", "limit", ")", "\n", "data_train", ".", "targets", "=", "data_train", ".", "targets", "[", "idx", "]", "\n", "data_train", ".", "data", "=", "data_train", ".", "data", "[", "idx", "]", "\n", "data_train", ".", "targets", "[", "(", "data_train", ".", "targets", "%", "2", ")", "==", "0", "]", "=", "10", "\n", "data_train", ".", "targets", "[", "(", "data_train", ".", "targets", "%", "2", ")", "!=", "0", "]", "=", "0", "\n", "data_train", ".", "targets", "[", "data_train", ".", "targets", "==", "10", "]", "=", "1", "\n", "train_label", "=", "data_train", ".", "targets", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "trainloader", "=", "DataLoader", "(", "data_train", ",", "batch_size", "=", "args", ".", "batch_size_train", ",", "shuffle", "=", "True", ")", "\n", "# test batch", "\n", "idx", "=", "(", "data_test", ".", "targets", "<", "limit", ")", "\n", "data_test", ".", "targets", "=", "data_test", ".", "targets", "[", "idx", "]", "\n", "data_test", ".", "data", "=", "data_test", ".", "data", "[", "idx", "]", "\n", "data_test", ".", "targets", "[", "(", "data_test", ".", "targets", "%", "2", ")", "==", "0", "]", "=", "10", "\n", "data_test", ".", "targets", "[", "(", "data_test", ".", "targets", "%", "2", ")", "!=", "0", "]", "=", "0", "\n", "data_test", ".", "targets", "[", "data_test", ".", "targets", "==", "10", "]", "=", "1", "\n", "test_label", "=", "data_test", ".", "targets", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "testloader", "=", "DataLoader", "(", "data_test", ",", "batch_size", "=", "args", ".", "batch_size_test", ",", "shuffle", "=", "False", ")", "\n", "\n", "return", "trainloader", ",", "testloader", ",", "train_label", ",", "test_label", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.data_loader.multi_indicator_dataset": [[284, 368], ["print", "torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "range", "print", "torchvision.datasets.FashionMNIST.targets.cpu().detach().numpy", "torch.utils.data.DataLoader", "print", "range", "print", "torchvision.datasets.FashionMNIST.targets.cpu().detach().numpy", "torch.utils.data.DataLoader", "print", "torchvision.datasets.FashionMNIST", "torchvision.datasets.FashionMNIST", "print", "print", "sum", "len", "len", "sum", "sum", "len", "sum", "len", "sum", "torchvision.datasets.FashionMNIST.targets.cpu().detach", "torchvision.datasets.FashionMNIST.targets.cpu().detach", "torchvision.datasets.FashionMNIST.targets.cpu", "torchvision.datasets.FashionMNIST.targets.cpu"], "function", ["None"], ["", "def", "multi_indicator_dataset", "(", "dataset", ",", "num", ",", "limit", ",", "class_object", ",", "args", ")", ":", "\n", "    ", "if", "(", "dataset", "==", "'MNIST'", ")", ":", "\n", "        ", "print", "(", "\"Loading {}-multi-indicator for MNIST dataset...\"", ".", "format", "(", "num", ")", ")", "\n", "data_train", "=", "MNIST", "(", "root", "=", "'./data'", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "\n", "data_test", "=", "MNIST", "(", "root", "=", "'./data'", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "\n", "", "elif", "(", "dataset", "==", "'fMNIST'", ")", ":", "\n", "        ", "print", "(", "\"Loading full Fashion-MNIST dataset...\"", ")", "\n", "data_train", "=", "FashionMNIST", "(", "root", "=", "'./data'", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "\n", "data_test", "=", "FashionMNIST", "(", "root", "=", "'./data'", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "transform", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"Loading full QuickDraw! dataset...\"", ")", "\n", "\n", "\n", "", "if", "(", "dataset", "==", "'MNIST'", "or", "dataset", "==", "'fMNIST'", ")", ":", "\n", "# train batch", "\n", "        ", "idx", "=", "(", "data_train", ".", "targets", "<", "limit", ")", "\n", "data_train", ".", "targets", "=", "data_train", ".", "targets", "[", "idx", "]", "\n", "data_train", ".", "data", "=", "data_train", ".", "data", "[", "idx", "]", "\n", "\n", "idx", "=", "1", "\n", "for", "i", "in", "num", ":", "\n", "            ", "data_train", ".", "targets", "[", "data_train", ".", "targets", "==", "i", "]", "=", "10", "+", "idx", "\n", "print", "(", "'adding...'", ")", "\n", "idx", "+=", "1", "\n", "\n", "", "data_train", ".", "targets", "[", "data_train", ".", "targets", "<", "10", "]", "=", "0", "\n", "data_train", ".", "targets", "[", "data_train", ".", "targets", ">", "10", "]", "-=", "10", "\n", "\n", "idx_0", "=", "(", "data_train", ".", "targets", "==", "0", ")", "\n", "idx_1", "=", "(", "data_train", ".", "targets", "!=", "0", ")", "\n", "sum_idx_0", "=", "0", "\n", "total", "=", "sum", "(", "idx_1", ")", "//", "len", "(", "num", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "idx_0", ")", ")", ":", "\n", "            ", "sum_idx_0", "+=", "idx_0", "[", "i", "]", "\n", "\n", "if", "sum_idx_0", "==", "total", ":", "\n", "                ", "idx_0", "[", "i", "+", "1", ":", "]", "=", "False", "\n", "break", "\n", "\n", "", "", "idx", "=", "idx_0", "+", "idx_1", "\n", "print", "(", "sum", "(", "idx", ")", ")", "\n", "data_train", ".", "targets", "=", "data_train", ".", "targets", "[", "idx", "]", "\n", "data_train", ".", "data", "=", "data_train", ".", "data", "[", "idx", "]", "\n", "\n", "train_label", "=", "data_train", ".", "targets", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "trainloader", "=", "DataLoader", "(", "data_train", ",", "batch_size", "=", "args", ".", "batch_size_train", ",", "shuffle", "=", "True", ")", "\n", "\n", "# test batch", "\n", "idx", "=", "(", "data_test", ".", "targets", "<", "limit", ")", "\n", "data_test", ".", "targets", "=", "data_test", ".", "targets", "[", "idx", "]", "\n", "data_test", ".", "data", "=", "data_test", ".", "data", "[", "idx", "]", "\n", "\n", "idx", "=", "1", "\n", "for", "i", "in", "num", ":", "\n", "            ", "data_test", ".", "targets", "[", "data_test", ".", "targets", "==", "i", "]", "=", "10", "+", "idx", "\n", "idx", "+=", "1", "\n", "\n", "", "data_test", ".", "targets", "[", "data_test", ".", "targets", "<", "10", "]", "=", "0", "\n", "data_test", ".", "targets", "[", "data_test", ".", "targets", ">", "10", "]", "-=", "10", "\n", "\n", "idx_0", "=", "(", "data_test", ".", "targets", "==", "0", ")", "\n", "idx_1", "=", "(", "data_test", ".", "targets", "!=", "0", ")", "\n", "sum_idx_0", "=", "0", "\n", "total", "=", "sum", "(", "idx_1", ")", "//", "len", "(", "num", ")", "\n", "print", "(", "sum", "(", "idx_1", ")", ")", "\n", "# total = 843", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "idx_0", ")", ")", ":", "\n", "            ", "sum_idx_0", "+=", "idx_0", "[", "i", "]", "\n", "\n", "if", "sum_idx_0", "==", "total", ":", "\n", "                ", "idx_0", "[", "i", "+", "1", ":", "]", "=", "False", "\n", "break", "\n", "\n", "", "", "idx", "=", "idx_0", "+", "idx_1", "\n", "print", "(", "sum", "(", "idx", ")", ")", "\n", "data_test", ".", "targets", "=", "data_test", ".", "targets", "[", "idx", "]", "\n", "data_test", ".", "data", "=", "data_test", ".", "data", "[", "idx", "]", "\n", "\n", "test_label", "=", "data_test", ".", "targets", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "testloader", "=", "DataLoader", "(", "data_test", ",", "batch_size", "=", "args", ".", "batch_size_test", ",", "shuffle", "=", "False", ")", "\n", "\n", "", "return", "trainloader", ",", "testloader", ",", "train_label", ",", "test_label", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.data_loader.CIFAR_dataset": [[390, 413], ["numpy.array", "torch.utils.data.DataLoader", "numpy.array", "torch.utils.data.DataLoader", "print", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "print", "torchvision.datasets.CIFAR100", "torchvision.datasets.CIFAR100"], "function", ["None"], ["def", "CIFAR_dataset", "(", "dataset", ",", "args", ")", ":", "\n", "    ", "if", "(", "dataset", "==", "'CIFAR10'", ")", ":", "\n", "        ", "print", "(", "\"Loading full CIFAR10 dataset...\"", ")", "\n", "data_train", "=", "CIFAR10", "(", "root", "=", "'./data'", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "transform_train", ")", "\n", "data_test", "=", "CIFAR10", "(", "root", "=", "'./data'", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "transform_test", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"Loading full CIFAR100 dataset...\"", ")", "\n", "data_train", "=", "CIFAR100", "(", "root", "=", "'./data'", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "transform_train", ")", "\n", "data_test", "=", "CIFAR100", "(", "root", "=", "'./data'", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "transform_test", ")", "\n", "\n", "# -------------------------", "\n", "# train batch", "\n", "# -------------------------", "\n", "", "train_label", "=", "np", ".", "array", "(", "data_train", ".", "targets", ")", "\n", "trainloader", "=", "DataLoader", "(", "data_train", ",", "batch_size", "=", "args", ".", "batch_size_train", ",", "shuffle", "=", "True", ")", "\n", "\n", "# -------------------------", "\n", "# test batch", "\n", "# -------------------------", "\n", "test_label", "=", "np", ".", "array", "(", "data_test", ".", "targets", ")", "\n", "testloader", "=", "DataLoader", "(", "data_test", ",", "batch_size", "=", "args", ".", "batch_size_test", ",", "shuffle", "=", "False", ")", "\n", "\n", "return", "trainloader", ",", "testloader", ",", "train_label", ",", "test_label", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.data_loader.CIFAR_indicator_dataset": [[415, 491], ["numpy.array", "sum", "range", "print", "np.array.tolist", "torch.utils.data.DataLoader", "numpy.array", "sum", "range", "print", "np.array.tolist", "torch.utils.data.DataLoader", "print", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "print", "torchvision.datasets.CIFAR100", "torchvision.datasets.CIFAR100", "len", "sum", "len", "sum"], "function", ["None"], ["", "def", "CIFAR_indicator_dataset", "(", "dataset", ",", "num", ",", "args", ")", ":", "\n", "    ", "if", "(", "dataset", "==", "'CIFAR10'", ")", ":", "\n", "        ", "print", "(", "\"Loading indicator CIFAR10 dataset...\"", ")", "\n", "data_train", "=", "CIFAR10", "(", "root", "=", "'./data'", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "transform_train", ")", "\n", "data_test", "=", "CIFAR10", "(", "root", "=", "'./data'", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "transform_test", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"Loading indicator CIFAR100 dataset...\"", ")", "\n", "data_train", "=", "CIFAR100", "(", "root", "=", "'./data'", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "transform_train", ")", "\n", "data_test", "=", "CIFAR100", "(", "root", "=", "'./data'", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "transform_test", ")", "\n", "\n", "# -------------------------", "\n", "# train batch", "\n", "# -------------------------", "\n", "", "train_label", "=", "np", ".", "array", "(", "data_train", ".", "targets", ")", "\n", "for", "i", "in", "num", ":", "\n", "        ", "train_label", "[", "train_label", "==", "i", "]", "=", "100", "\n", "\n", "", "train_label", "[", "train_label", "!=", "100", "]", "=", "0", "\n", "train_label", "[", "train_label", "==", "100", "]", "=", "1", "\n", "\n", "# select only X datapoint with label 0 to obtain balanced dataset", "\n", "idx_1", "=", "(", "train_label", "==", "1", ")", "\n", "idx_0", "=", "(", "train_label", "==", "0", ")", "\n", "sum_idx_0", "=", "0", "\n", "total", "=", "sum", "(", "idx_1", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "idx_0", ")", ")", ":", "\n", "        ", "sum_idx_0", "+=", "idx_0", "[", "i", "]", "\n", "\n", "if", "sum_idx_0", "==", "total", ":", "\n", "            ", "idx_0", "[", "i", "+", "1", ":", "]", "=", "False", "\n", "break", "\n", "\n", "# all index 0 and 1", "\n", "", "", "idx", "=", "idx_0", "+", "idx_1", "\n", "print", "(", "sum", "(", "idx", ")", ")", "\n", "\n", "# update data_train data and label", "\n", "train_label", "=", "train_label", "[", "idx", "]", "\n", "data_train", ".", "targets", "=", "train_label", ".", "tolist", "(", ")", "\n", "data_train", ".", "data", "=", "data_train", ".", "data", "[", "idx", "]", "\n", "trainloader", "=", "DataLoader", "(", "data_train", ",", "batch_size", "=", "args", ".", "batch_size_train", ",", "shuffle", "=", "True", ")", "\n", "\n", "# -------------------------", "\n", "# test batch", "\n", "# -------------------------", "\n", "test_label", "=", "np", ".", "array", "(", "data_test", ".", "targets", ")", "\n", "for", "i", "in", "num", ":", "\n", "        ", "test_label", "[", "test_label", "==", "i", "]", "=", "100", "\n", "\n", "", "test_label", "[", "test_label", "!=", "100", "]", "=", "0", "\n", "test_label", "[", "test_label", "==", "100", "]", "=", "1", "\n", "\n", "# select only 3,000 datapoint with label 0", "\n", "idx_1", "=", "(", "test_label", "==", "1", ")", "\n", "idx_0", "=", "(", "test_label", "==", "0", ")", "\n", "sum_idx_0", "=", "0", "\n", "total", "=", "sum", "(", "idx_1", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "idx_0", ")", ")", ":", "\n", "        ", "sum_idx_0", "+=", "idx_0", "[", "i", "]", "\n", "\n", "if", "sum_idx_0", "==", "total", ":", "\n", "            ", "idx_0", "[", "i", "+", "1", ":", "]", "=", "False", "\n", "break", "\n", "# all index 0 and 1", "\n", "", "", "idx", "=", "idx_0", "+", "idx_1", "\n", "print", "(", "sum", "(", "idx", ")", ")", "\n", "\n", "# update data_train data and label", "\n", "test_label", "=", "test_label", "[", "idx", "]", "\n", "data_test", ".", "targets", "=", "test_label", ".", "tolist", "(", ")", "\n", "data_test", ".", "data", "=", "data_test", ".", "data", "[", "idx", "]", "\n", "testloader", "=", "DataLoader", "(", "data_test", ",", "batch_size", "=", "args", ".", "batch_size_test", ",", "shuffle", "=", "False", ")", "\n", "\n", "return", "trainloader", ",", "testloader", ",", "train_label", ",", "test_label", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.data_loader.CIFAR_multi_indicator_dataset": [[494, 571], ["numpy.array", "range", "print", "np.array.tolist", "torch.utils.data.DataLoader", "numpy.array", "range", "print", "np.array.tolist", "torch.utils.data.DataLoader", "print", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "print", "torchvision.datasets.CIFAR100", "torchvision.datasets.CIFAR100", "sum", "len", "len", "sum", "sum", "len", "len", "sum"], "function", ["None"], ["", "def", "CIFAR_multi_indicator_dataset", "(", "dataset", ",", "num", ",", "args", ")", ":", "\n", "    ", "if", "(", "dataset", "==", "'CIFAR10'", ")", ":", "\n", "        ", "print", "(", "\"Loading multi-class CIFAR10 dataset...\"", ")", "\n", "data_train", "=", "CIFAR10", "(", "root", "=", "'./data'", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "transform_train", ")", "\n", "data_test", "=", "CIFAR10", "(", "root", "=", "'./data'", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "transform_test", ")", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"Loading multi-class CIFAR100 dataset...\"", ")", "\n", "data_train", "=", "CIFAR100", "(", "root", "=", "'./data'", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "transform_train", ")", "\n", "data_test", "=", "CIFAR100", "(", "root", "=", "'./data'", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "transform_test", ")", "\n", "\n", "# -------------------------", "\n", "# train batch", "\n", "# -------------------------", "\n", "", "train_label", "=", "np", ".", "array", "(", "data_train", ".", "targets", ")", "\n", "idx", "=", "1", "\n", "for", "i", "in", "num", ":", "\n", "        ", "train_label", "[", "train_label", "==", "i", "]", "=", "100", "+", "idx", "\n", "idx", "+=", "1", "\n", "\n", "", "train_label", "[", "train_label", "<", "100", "]", "=", "0", "\n", "train_label", "[", "train_label", ">", "100", "]", "-=", "100", "\n", "\n", "# select only 15,000 datapoint with label 0", "\n", "idx_1", "=", "(", "train_label", "!=", "0", ")", "\n", "idx_0", "=", "(", "train_label", "==", "0", ")", "\n", "sum_idx_0", "=", "0", "\n", "total", "=", "sum", "(", "idx_1", ")", "/", "len", "(", "num", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "idx_0", ")", ")", ":", "\n", "        ", "sum_idx_0", "+=", "idx_0", "[", "i", "]", "\n", "\n", "if", "sum_idx_0", "==", "total", ":", "\n", "            ", "idx_0", "[", "i", "+", "1", ":", "]", "=", "False", "\n", "break", "\n", "# all index 0 and 1", "\n", "", "", "idx", "=", "idx_0", "+", "idx_1", "\n", "print", "(", "sum", "(", "idx", ")", ")", "\n", "# update data_train data and label", "\n", "train_label", "=", "train_label", "[", "idx", "]", "\n", "data_train", ".", "targets", "=", "train_label", ".", "tolist", "(", ")", "\n", "data_train", ".", "data", "=", "data_train", ".", "data", "[", "idx", "]", "\n", "trainloader", "=", "DataLoader", "(", "data_train", ",", "batch_size", "=", "args", ".", "batch_size_train", ",", "shuffle", "=", "True", ")", "\n", "\n", "# -------------------------", "\n", "# test batch", "\n", "# -------------------------", "\n", "test_label", "=", "np", ".", "array", "(", "data_test", ".", "targets", ")", "\n", "idx", "=", "1", "\n", "for", "i", "in", "num", ":", "\n", "        ", "test_label", "[", "test_label", "==", "i", "]", "=", "100", "+", "idx", "\n", "idx", "+=", "1", "\n", "\n", "", "test_label", "[", "test_label", "<", "100", "]", "=", "0", "\n", "test_label", "[", "test_label", ">", "100", "]", "-=", "100", "\n", "\n", "# select only 3,000 datapoint with label 0", "\n", "idx_1", "=", "(", "test_label", "!=", "0", ")", "\n", "idx_0", "=", "(", "test_label", "==", "0", ")", "\n", "sum_idx_0", "=", "0", "\n", "total", "=", "sum", "(", "idx_1", ")", "/", "len", "(", "num", ")", "\n", "\n", "for", "i", "in", "range", "(", "len", "(", "idx_0", ")", ")", ":", "\n", "        ", "sum_idx_0", "+=", "idx_0", "[", "i", "]", "\n", "\n", "if", "sum_idx_0", "==", "total", ":", "\n", "            ", "idx_0", "[", "i", "+", "1", ":", "]", "=", "False", "\n", "break", "\n", "# all index 0 and 1", "\n", "", "", "idx", "=", "idx_0", "+", "idx_1", "\n", "print", "(", "sum", "(", "idx", ")", ")", "\n", "# update data_train data and label", "\n", "test_label", "=", "test_label", "[", "idx", "]", "\n", "data_test", ".", "targets", "=", "test_label", ".", "tolist", "(", ")", "\n", "data_test", ".", "data", "=", "data_test", ".", "data", "[", "idx", "]", "\n", "testloader", "=", "DataLoader", "(", "data_test", ",", "batch_size", "=", "args", ".", "batch_size_test", ",", "shuffle", "=", "False", ")", "\n", "\n", "return", "trainloader", ",", "testloader", ",", "train_label", ",", "test_label", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher_distance_mnist.Flatten.__init__": [[42, 46], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["def", "__init__", "(", "self", ",", "start_dim", "=", "1", ",", "end_dim", "=", "-", "1", ")", ":", "\n", "        ", "super", "(", "Flatten", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "start_dim", "=", "start_dim", "\n", "self", ".", "end_dim", "=", "end_dim", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher_distance_mnist.Flatten.forward": [[47, 49], ["input.flatten"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "input", ".", "flatten", "(", "self", ".", "start_dim", ",", "self", ".", "end_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher_distance_mnist.PreNN.__init__": [[57, 60], ["torch.nn.Module.__init__", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "PreNN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "encoder", "=", "nn", ".", "Conv2d", "(", "1", ",", "3", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher_distance_mnist.PreNN.forward": [[61, 64], ["fisher_distance_mnist.PreNN.encoder"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "X", "=", "self", ".", "encoder", "(", "X", ")", "\n", "return", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher_distance_mnist.BinaryNN.__init__": [[77, 84], ["torch.nn.Module.__init__", "torch.nn.Linear", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "BinaryNN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# self.classifier = nn.Sequential(", "\n", "#     nn.Linear(10,128),", "\n", "#     nn.ReLU(True),", "\n", "#     nn.Linear(128,2))", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "10", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher_distance_mnist.BinaryNN.forward": [[85, 88], ["fisher_distance_mnist.BinaryNN.classifier"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "X", "=", "self", ".", "classifier", "(", "X", ")", "\n", "return", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher_distance_mnist.Binary4NN.__init__": [[90, 97], ["torch.nn.Module.__init__", "torch.nn.Linear", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Binary4NN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# self.classifier = nn.Sequential(", "\n", "#     nn.Linear(10,128),", "\n", "#     nn.ReLU(True),", "\n", "#     nn.Linear(128,2))", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "10", ",", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher_distance_mnist.Binary4NN.forward": [[98, 101], ["fisher_distance_mnist.Binary4NN.classifier"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "X", "=", "self", ".", "classifier", "(", "X", ")", "\n", "return", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher_distance_mnist.NN1.__init__": [[104, 120], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU", "fisher_distance_mnist.Flatten", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["    ", "def", "__init__", "(", "self", ",", "c", ")", ":", "\n", "        ", "super", "(", "NN1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "encoder", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "1", ",", "16", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "# nn.MaxPool2d(2, stride=2),", "\n", "nn", ".", "Conv2d", "(", "16", ",", "32", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "# nn.MaxPool2d(2, stride=2),", "\n", "Flatten", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "32", "*", "28", "*", "28", ",", "1024", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "1024", ",", "128", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "# c is the number of class label", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "128", ",", "c", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher_distance_mnist.NN1.forward": [[121, 125], ["fisher_distance_mnist.NN1.encoder", "fisher_distance_mnist.NN1.classifier"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "X", "=", "self", ".", "encoder", "(", "X", ")", "\n", "X", "=", "self", ".", "classifier", "(", "X", ")", "\n", "return", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher_distance_mnist.NN2.__init__": [[127, 141], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Linear", "torch.nn.Linear", "fisher_distance_mnist.Flatten", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["    ", "def", "__init__", "(", "self", ",", "c", ")", ":", "\n", "        ", "super", "(", "NN2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "encoder", "=", "nn", ".", "Sequential", "(", "\n", "Flatten", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "28", "*", "28", ",", "1024", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "1024", ",", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "512", ",", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "128", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "# c is the number of class label", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "128", ",", "c", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher_distance_mnist.NN2.forward": [[142, 146], ["fisher_distance_mnist.NN2.encoder", "fisher_distance_mnist.NN2.classifier"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "X", "=", "self", ".", "encoder", "(", "X", ")", "\n", "X", "=", "self", ".", "classifier", "(", "X", ")", "\n", "return", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher_distance_mnist.NN3.__init__": [[148, 165], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.MaxPool2d", "torch.nn.MaxPool2d", "fisher_distance_mnist.Flatten", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["    ", "def", "__init__", "(", "self", ",", "c", ")", ":", "\n", "        ", "super", "(", "NN3", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "encoder", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "1", ",", "16", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "16", ",", "32", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "32", ",", "64", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ")", ",", "\n", "Flatten", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "64", "*", "14", "*", "14", ",", "1024", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "1024", ",", "128", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "# c is the number of class label", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "128", ",", "c", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher_distance_mnist.NN3.forward": [[166, 170], ["fisher_distance_mnist.NN3.encoder", "fisher_distance_mnist.NN3.classifier"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "X", "=", "self", ".", "encoder", "(", "X", ")", "\n", "X", "=", "self", ".", "classifier", "(", "X", ")", "\n", "return", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher_distance_mnist.variable": [[50, 54], ["torch.autograd.Variable", "torch.cuda.is_available", "torch.cuda.is_available", "t.cuda.cuda"], "function", ["None"], ["", "", "def", "variable", "(", "t", "=", "torch", ".", "Tensor", ",", "use_cuda", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "and", "use_cuda", ":", "\n", "        ", "t", "=", "t", ".", "cuda", "(", ")", "\n", "", "return", "Variable", "(", "t", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher_distance_mnist.diag_fisher_binary": [[171, 200], ["copy.deepcopy().items", "model.eval", "torch.nn.CrossEntropyLoss", "p.data.zero_", "fisher_distance_mnist.variable", "model.zero_grad", "model", "torch.zeros", "torch.zeros", "torch.zeros.cuda", "nn.CrossEntropyLoss.", "error.backward", "model.named_parameters", "model.named_parameters", "copy.deepcopy", "inputs.to", "labels.to", "precision_matrices.items"], "function", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher-distance.variable"], ["", "", "def", "diag_fisher_binary", "(", "model", ",", "data", ")", ":", "\n", "    ", "precision_matrices", "=", "{", "}", "\n", "params", "=", "{", "n", ":", "p", "for", "n", ",", "p", "in", "model", ".", "named_parameters", "(", ")", "if", "p", ".", "requires_grad", "}", "\n", "for", "n", ",", "p", "in", "deepcopy", "(", "params", ")", ".", "items", "(", ")", ":", "\n", "        ", "p", ".", "data", ".", "zero_", "(", ")", "\n", "precision_matrices", "[", "n", "]", "=", "variable", "(", "p", ".", "data", ")", "\n", "\n", "", "model", ".", "eval", "(", ")", "\n", "error", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "for", "inputs", ",", "labels", "in", "data", ":", "\n", "        ", "inputs", ",", "labels", "=", "inputs", ".", "to", "(", "device", ")", ",", "labels", ".", "to", "(", "device", ")", "\n", "model", ".", "zero_grad", "(", ")", "\n", "output", "=", "model", "(", "inputs", ")", "\n", "\n", "tensor_target", "=", "torch", ".", "zeros", "(", "args", ".", "batch_size_test", ",", "10", ")", "\n", "tensor_target", "[", ":", ",", ":", "2", "]", "=", "output", "\n", "output", "=", "tensor_target", ".", "cuda", "(", ")", "\n", "\n", "# print(output.shape)", "\n", "\n", "loss", "=", "error", "(", "output", ",", "labels", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "\n", "for", "n", ",", "p", "in", "model", ".", "named_parameters", "(", ")", ":", "\n", "            ", "precision_matrices", "[", "n", "]", ".", "data", "+=", "(", "p", ".", "grad", ".", "data", "**", "2", ")", ".", "mean", "(", "0", ")", "\n", "\n", "", "", "precision_matrices", "=", "{", "n", ":", "p", "for", "n", ",", "p", "in", "precision_matrices", ".", "items", "(", ")", "}", "\n", "\n", "return", "precision_matrices", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher_distance_mnist.diag_fisher": [[202, 226], ["copy.deepcopy().items", "model.eval", "torch.nn.CrossEntropyLoss", "p.data.zero_", "fisher_distance_mnist.variable", "model.zero_grad", "model", "nn.CrossEntropyLoss.", "error.backward", "model.named_parameters", "model.named_parameters", "copy.deepcopy", "inputs.to", "labels.to", "precision_matrices.items"], "function", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher-distance.variable"], ["", "def", "diag_fisher", "(", "model", ",", "data", ")", ":", "\n", "    ", "precision_matrices", "=", "{", "}", "\n", "params", "=", "{", "n", ":", "p", "for", "n", ",", "p", "in", "model", ".", "named_parameters", "(", ")", "if", "p", ".", "requires_grad", "}", "\n", "for", "n", ",", "p", "in", "deepcopy", "(", "params", ")", ".", "items", "(", ")", ":", "\n", "        ", "p", ".", "data", ".", "zero_", "(", ")", "\n", "precision_matrices", "[", "n", "]", "=", "variable", "(", "p", ".", "data", ")", "\n", "\n", "", "model", ".", "eval", "(", ")", "\n", "error", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "for", "inputs", ",", "labels", "in", "data", ":", "\n", "        ", "inputs", ",", "labels", "=", "inputs", ".", "to", "(", "device", ")", ",", "labels", ".", "to", "(", "device", ")", "\n", "model", ".", "zero_grad", "(", ")", "\n", "output", "=", "model", "(", "inputs", ")", "\n", "# print(output.shape)", "\n", "\n", "loss", "=", "error", "(", "output", ",", "labels", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "\n", "for", "n", ",", "p", "in", "model", ".", "named_parameters", "(", ")", ":", "\n", "            ", "precision_matrices", "[", "n", "]", ".", "data", "+=", "(", "p", ".", "grad", ".", "data", "**", "2", ")", ".", "mean", "(", "0", ")", "\n", "\n", "", "", "precision_matrices", "=", "{", "n", ":", "p", "for", "n", ",", "p", "in", "precision_matrices", ".", "items", "(", ")", "}", "\n", "\n", "return", "precision_matrices", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.model_generation.Cell.__init__": [[38, 47], ["torch.nn.Module.__init__", "torch.nn.Linear", "operation.draw_operation", "operation.draw_operation", "operation.draw_operation"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__", "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.operation.draw_operation", "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.operation.draw_operation", "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.operation.draw_operation"], ["    ", "def", "__init__", "(", "self", ",", "dim", ",", "num_node", "=", "3", ",", "reduction", "=", "0", ",", "channel", "=", "1", ")", ":", "\n", "        ", "super", "(", "Cell", ",", "self", ")", ".", "__init__", "(", ")", "\n", "stride", "=", "2", "if", "reduction", "==", "1", "else", "1", "\n", "\n", "self", ".", "op_0_1", "=", "OPS", "[", "draw_operation", "(", "9", ")", "]", "(", "channel", ",", "stride", ",", "affine", "=", "False", ")", "\n", "self", ".", "op_0_2", "=", "OPS", "[", "draw_operation", "(", "9", ")", "]", "(", "channel", ",", "stride", ",", "affine", "=", "False", ")", "\n", "self", ".", "op_1_2", "=", "OPS", "[", "draw_operation", "(", "9", ")", "]", "(", "channel", ",", "stride", ",", "affine", "=", "False", ")", "\n", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "2", "*", "28", "*", "28", ",", "dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.model_generation.Cell.forward": [[48, 58], ["model_generation.Cell.op_0_1", "model_generation.Cell.op_0_2", "model_generation.Cell.op_1_2", "torch.cat", "torch.flatten", "model_generation.Cell.classifier"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "s01", "=", "self", ".", "op_0_1", "(", "X", ")", "\n", "s02", "=", "self", ".", "op_0_2", "(", "X", ")", "\n", "s12", "=", "self", ".", "op_1_2", "(", "s01", ")", "\n", "\n", "# out = s02 + s12", "\n", "out", "=", "torch", ".", "cat", "(", "[", "s02", ",", "s12", "]", ",", "dim", "=", "1", ")", "\n", "out", "=", "torch", ".", "flatten", "(", "out", ",", "1", ")", "\n", "out", "=", "self", ".", "classifier", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.model_generation.fit": [[61, 85], ["torch.optim.Adam", "torch.nn.CrossEntropyLoss", "model.train", "range", "model.parameters", "enumerate", "inputs.to.to", "targets.long().to.long().to", "torch.optim.Adam.zero_grad", "model", "nn.CrossEntropyLoss.", "error.backward", "torch.optim.Adam.step", "torch.max", "print", "targets.long().to.long", "len", "float", "float"], "function", ["None"], ["", "", "def", "fit", "(", "model", ",", "train_loader", ")", ":", "\n", "    ", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ")", "\n", "error", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "EPOCHS", "=", "args", ".", "num_epoch", "\n", "model", ".", "train", "(", ")", "\n", "for", "epoch", "in", "range", "(", "EPOCHS", ")", ":", "\n", "        ", "correct", "=", "0", "\n", "for", "batch_idx", ",", "(", "inputs", ",", "targets", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "            ", "inputs", "=", "inputs", ".", "to", "(", "device", ")", "\n", "targets", "=", "targets", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "output", "=", "model", "(", "inputs", ")", "\n", "loss", "=", "error", "(", "output", ",", "targets", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "# Total correct predictions", "\n", "predicted", "=", "torch", ".", "max", "(", "output", ".", "data", ",", "1", ")", "[", "1", "]", "\n", "correct", "+=", "(", "predicted", "==", "targets", ")", ".", "sum", "(", ")", "\n", "#print(correct)", "\n", "if", "batch_idx", "%", "50", "==", "0", ":", "\n", "                ", "print", "(", "'Epoch : {} ({:.0f}%)\\t Accuracy:{:.3f}%'", ".", "format", "(", "\n", "epoch", ",", "100.", "*", "batch_idx", "/", "len", "(", "train_loader", ")", ",", "float", "(", "correct", "*", "100", ")", "/", "float", "(", "args", ".", "batch_size_train", "*", "(", "batch_idx", "+", "1", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.model_generation.evaluate": [[89, 112], ["print", "test_imgs.to.to", "test_labels.long().to.long().to", "model", "print", "torch.save", "torch.max", "model.state_dict", "os.path.isdir", "os.mkdir", "test_labels.long().to.long", "float", "len", "str"], "function", ["None"], ["def", "evaluate", "(", "model", ",", "test_loader", ",", "label", ",", "save_flag", ",", "index", ")", ":", "\n", "    ", "global", "best_acc", "\n", "correct", "=", "0", "\n", "for", "test_imgs", ",", "test_labels", "in", "test_loader", ":", "\n", "        ", "test_imgs", "=", "test_imgs", ".", "to", "(", "device", ")", "\n", "test_labels", "=", "test_labels", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "\n", "output", "=", "model", "(", "test_imgs", ")", "\n", "predicted", "=", "torch", ".", "max", "(", "output", ",", "1", ")", "[", "1", "]", "\n", "correct", "+=", "(", "predicted", "==", "test_labels", ")", ".", "sum", "(", ")", "\n", "", "print", "(", "\"Test accuracy:{:.3f}% \\n\"", ".", "format", "(", "float", "(", "correct", "*", "100", ")", "/", "len", "(", "label", ")", ")", ")", "\n", "\n", "if", "(", "save_flag", "==", "True", ")", ":", "\n", "# Save the pretrained network", "\n", "        ", "print", "(", "'Saving..'", ")", "\n", "state", "=", "{", "\n", "'net'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'acc'", ":", "correct", ",", "\n", "}", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "'checkpoint'", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "'checkpoint'", ")", "\n", "", "torch", ".", "save", "(", "state", ",", "'./checkpoint/indicator'", "+", "str", "(", "index", ")", "+", "'.t1'", ")", "\n", "", "best_acc", "=", "correct", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher_distance_cifar.Flatten.__init__": [[42, 46], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["def", "__init__", "(", "self", ",", "start_dim", "=", "1", ",", "end_dim", "=", "-", "1", ")", ":", "\n", "        ", "super", "(", "Flatten", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "start_dim", "=", "start_dim", "\n", "self", ".", "end_dim", "=", "end_dim", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher_distance_cifar.Flatten.forward": [[47, 49], ["input.flatten"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "input", ".", "flatten", "(", "self", ".", "start_dim", ",", "self", ".", "end_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher_distance_cifar.BinaryNN.__init__": [[57, 64], ["torch.nn.Module.__init__", "torch.nn.Linear", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "BinaryNN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# self.classifier = nn.Sequential(", "\n", "#     nn.Linear(10,128),", "\n", "#     nn.ReLU(True),", "\n", "#     nn.Linear(128,2))", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "10", ",", "4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher_distance_cifar.BinaryNN.forward": [[65, 68], ["fisher_distance_cifar.BinaryNN.classifier"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "X", "=", "self", ".", "classifier", "(", "X", ")", "\n", "return", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher_distance_cifar.Binary4NN.__init__": [[70, 77], ["torch.nn.Module.__init__", "torch.nn.Linear", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "Binary4NN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# self.classifier = nn.Sequential(", "\n", "#     nn.Linear(10,128),", "\n", "#     nn.ReLU(True),", "\n", "#     nn.Linear(128,2))", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "10", ",", "10", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher_distance_cifar.Binary4NN.forward": [[78, 81], ["fisher_distance_cifar.Binary4NN.classifier"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "X", "=", "self", ".", "classifier", "(", "X", ")", "\n", "return", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher_distance_cifar.variable": [[50, 54], ["torch.autograd.Variable", "torch.cuda.is_available", "torch.cuda.is_available", "t.cuda.cuda"], "function", ["None"], ["", "", "def", "variable", "(", "t", ":", "torch", ".", "Tensor", ",", "use_cuda", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "and", "use_cuda", ":", "\n", "        ", "t", "=", "t", ".", "cuda", "(", ")", "\n", "", "return", "Variable", "(", "t", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher_distance_cifar.diag_fisher_binary": [[83, 112], ["copy.deepcopy().items", "model.eval", "torch.nn.CrossEntropyLoss", "p.data.zero_", "fisher_distance_cifar.variable", "model.zero_grad", "model", "torch.zeros", "torch.zeros", "torch.zeros.cuda", "nn.CrossEntropyLoss.", "error.backward", "model.named_parameters", "model.named_parameters", "copy.deepcopy", "inputs.to", "labels.to", "precision_matrices.items"], "function", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher-distance.variable"], ["", "", "def", "diag_fisher_binary", "(", "model", ",", "data", ")", ":", "\n", "    ", "precision_matrices", "=", "{", "}", "\n", "params", "=", "{", "n", ":", "p", "for", "n", ",", "p", "in", "model", ".", "named_parameters", "(", ")", "if", "p", ".", "requires_grad", "}", "\n", "for", "n", ",", "p", "in", "deepcopy", "(", "params", ")", ".", "items", "(", ")", ":", "\n", "        ", "p", ".", "data", ".", "zero_", "(", ")", "\n", "precision_matrices", "[", "n", "]", "=", "variable", "(", "p", ".", "data", ")", "\n", "\n", "", "model", ".", "eval", "(", ")", "\n", "error", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "for", "inputs", ",", "labels", "in", "data", ":", "\n", "        ", "inputs", ",", "labels", "=", "inputs", ".", "to", "(", "device", ")", ",", "labels", ".", "to", "(", "device", ")", "\n", "model", ".", "zero_grad", "(", ")", "\n", "output", "=", "model", "(", "inputs", ")", "\n", "\n", "tensor_target", "=", "torch", ".", "zeros", "(", "10", ",", "21", ")", "\n", "tensor_target", "[", ":", ",", ":", "2", "]", "=", "output", "\n", "output", "=", "tensor_target", ".", "cuda", "(", ")", "\n", "\n", "# print(output.shape)", "\n", "\n", "loss", "=", "error", "(", "output", ",", "labels", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "\n", "for", "n", ",", "p", "in", "model", ".", "named_parameters", "(", ")", ":", "\n", "            ", "precision_matrices", "[", "n", "]", ".", "data", "+=", "(", "p", ".", "grad", ".", "data", "**", "2", ")", ".", "mean", "(", "0", ")", "\n", "\n", "", "", "precision_matrices", "=", "{", "n", ":", "p", "for", "n", ",", "p", "in", "precision_matrices", ".", "items", "(", ")", "}", "\n", "\n", "return", "precision_matrices", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher_distance_cifar.diag_fisher": [[114, 138], ["copy.deepcopy().items", "model.eval", "torch.nn.CrossEntropyLoss", "p.data.zero_", "fisher_distance_cifar.variable", "model.zero_grad", "model", "nn.CrossEntropyLoss.", "error.backward", "model.named_parameters", "model.named_parameters", "copy.deepcopy", "inputs.to", "labels.to", "precision_matrices.items"], "function", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher-distance.variable"], ["", "def", "diag_fisher", "(", "model", ",", "data", ")", ":", "\n", "    ", "precision_matrices", "=", "{", "}", "\n", "params", "=", "{", "n", ":", "p", "for", "n", ",", "p", "in", "model", ".", "named_parameters", "(", ")", "if", "p", ".", "requires_grad", "}", "\n", "for", "n", ",", "p", "in", "deepcopy", "(", "params", ")", ".", "items", "(", ")", ":", "\n", "        ", "p", ".", "data", ".", "zero_", "(", ")", "\n", "precision_matrices", "[", "n", "]", "=", "variable", "(", "p", ".", "data", ")", "\n", "\n", "", "model", ".", "eval", "(", ")", "\n", "error", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "for", "inputs", ",", "labels", "in", "data", ":", "\n", "        ", "inputs", ",", "labels", "=", "inputs", ".", "to", "(", "device", ")", ",", "labels", ".", "to", "(", "device", ")", "\n", "model", ".", "zero_grad", "(", ")", "\n", "output", "=", "model", "(", "inputs", ")", "\n", "# print(output.shape)", "\n", "\n", "loss", "=", "error", "(", "output", ",", "labels", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "\n", "for", "n", ",", "p", "in", "model", ".", "named_parameters", "(", ")", ":", "\n", "            ", "precision_matrices", "[", "n", "]", ".", "data", "+=", "(", "p", ".", "grad", ".", "data", "**", "2", ")", ".", "mean", "(", "0", ")", "\n", "\n", "", "", "precision_matrices", "=", "{", "n", ":", "p", "for", "n", ",", "p", "in", "precision_matrices", ".", "items", "(", ")", "}", "\n", "\n", "return", "precision_matrices", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task.Flatten.__init__": [[40, 44], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["def", "__init__", "(", "self", ",", "start_dim", "=", "1", ",", "end_dim", "=", "-", "1", ")", ":", "\n", "        ", "super", "(", "Flatten", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "start_dim", "=", "start_dim", "\n", "self", ".", "end_dim", "=", "end_dim", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task.Flatten.forward": [[45, 47], ["input.flatten"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "input", ".", "flatten", "(", "self", ".", "start_dim", ",", "self", ".", "end_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task.NN.__init__": [[65, 75], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Linear", "torch.nn.Conv2d", "torch.nn.ReLU", "train_task.Flatten", "torch.nn.Linear", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["    ", "def", "__init__", "(", "self", ",", "c", ")", ":", "\n", "        ", "super", "(", "NN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "encoder", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "1", ",", "32", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "Flatten", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "28", "*", "28", "*", "32", ",", "1024", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "# c is the number of class label", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "1024", ",", "c", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task.NN.forward": [[76, 80], ["train_task.NN.encoder", "train_task.NN.classifier"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "X", "=", "self", ".", "encoder", "(", "X", ")", "\n", "X", "=", "self", ".", "classifier", "(", "X", ")", "\n", "return", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task.fit": [[83, 107], ["torch.optim.Adam", "torch.nn.CrossEntropyLoss", "model.train", "range", "model.parameters", "enumerate", "inputs.to.to", "targets.long().to.long().to", "torch.optim.Adam.zero_grad", "model", "nn.CrossEntropyLoss.", "error.backward", "torch.optim.Adam.step", "torch.max", "print", "targets.long().to.long", "len", "float", "float"], "function", ["None"], ["", "", "def", "fit", "(", "model", ",", "train_loader", ")", ":", "\n", "    ", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ")", "\n", "error", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "EPOCHS", "=", "args", ".", "num_epoch", "\n", "model", ".", "train", "(", ")", "\n", "for", "epoch", "in", "range", "(", "EPOCHS", ")", ":", "\n", "        ", "correct", "=", "0", "\n", "for", "batch_idx", ",", "(", "inputs", ",", "targets", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "            ", "inputs", "=", "inputs", ".", "to", "(", "device", ")", "\n", "targets", "=", "targets", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "output", "=", "model", "(", "inputs", ")", "\n", "loss", "=", "error", "(", "output", ",", "targets", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "# Total correct predictions", "\n", "predicted", "=", "torch", ".", "max", "(", "output", ".", "data", ",", "1", ")", "[", "1", "]", "\n", "correct", "+=", "(", "predicted", "==", "targets", ")", ".", "sum", "(", ")", "\n", "#print(correct)", "\n", "if", "batch_idx", "%", "50", "==", "0", ":", "\n", "                ", "print", "(", "'Epoch : {} ({:.0f}%)\\t Accuracy:{:.3f}%'", ".", "format", "(", "\n", "epoch", ",", "100.", "*", "batch_idx", "/", "len", "(", "train_loader", ")", ",", "float", "(", "correct", "*", "100", ")", "/", "float", "(", "args", ".", "batch_size_train", "*", "(", "batch_idx", "+", "1", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task.evaluate": [[111, 134], ["print", "test_imgs.to.to", "test_labels.long().to.long().to", "model", "print", "torch.save", "torch.max", "model.state_dict", "os.path.isdir", "os.mkdir", "test_labels.long().to.long", "float", "len", "str"], "function", ["None"], ["def", "evaluate", "(", "model", ",", "test_loader", ",", "label", ",", "save_flag", ",", "index", ")", ":", "\n", "    ", "global", "best_acc", "\n", "correct", "=", "0", "\n", "for", "test_imgs", ",", "test_labels", "in", "test_loader", ":", "\n", "        ", "test_imgs", "=", "test_imgs", ".", "to", "(", "device", ")", "\n", "test_labels", "=", "test_labels", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "\n", "output", "=", "model", "(", "test_imgs", ")", "\n", "predicted", "=", "torch", ".", "max", "(", "output", ",", "1", ")", "[", "1", "]", "\n", "correct", "+=", "(", "predicted", "==", "test_labels", ")", ".", "sum", "(", ")", "\n", "", "print", "(", "\"Test accuracy:{:.3f}% \\n\"", ".", "format", "(", "float", "(", "correct", "*", "100", ")", "/", "len", "(", "label", ")", ")", ")", "\n", "\n", "if", "(", "save_flag", "==", "True", ")", ":", "\n", "# Save the pretrained network", "\n", "        ", "print", "(", "'Saving..'", ")", "\n", "state", "=", "{", "\n", "'net'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'acc'", ":", "correct", ",", "\n", "}", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "'checkpoint'", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "'checkpoint'", ")", "\n", "", "torch", ".", "save", "(", "state", ",", "'./checkpoint/task'", "+", "str", "(", "index", ")", "+", "'.t1'", ")", "\n", "", "best_acc", "=", "correct", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task.extract_feature": [[137, 154], ["print", "torch.no_grad", "model.eval", "enumerate", "numpy.concatenate", "print", "print", "inputs.to.to", "model.encoder().cpu().detach().numpy", "np.concatenate.append", "model.encoder().cpu().detach", "model.encoder().cpu", "model.encoder"], "function", ["None"], ["", "def", "extract_feature", "(", "model", ",", "args", ",", "dataloader", ")", ":", "\n", "    ", "print", "(", "'==> start extracting features:'", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "# Extract Feature", "\n", "        ", "model", ".", "eval", "(", ")", "\n", "features", "=", "[", "]", "\n", "\n", "for", "index", ",", "(", "inputs", ",", "_", ")", "in", "enumerate", "(", "dataloader", ")", ":", "\n", "            ", "inputs", "=", "inputs", ".", "to", "(", "device", ")", "\n", "feature", "=", "model", ".", "encoder", "(", "inputs", ")", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "features", ".", "append", "(", "feature", ")", "\n", "\n", "", "features", "=", "np", ".", "concatenate", "(", "features", ",", "axis", "=", "0", ")", "\n", "print", "(", "\"Size of extracted features:\"", ")", "\n", "print", "(", "features", ".", "shape", ")", "\n", "\n", "", "return", "features", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher-distance.Flatten.__init__": [[38, 42], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["def", "__init__", "(", "self", ",", "start_dim", "=", "1", ",", "end_dim", "=", "-", "1", ")", ":", "\n", "        ", "super", "(", "Flatten", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "start_dim", "=", "start_dim", "\n", "self", ".", "end_dim", "=", "end_dim", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher-distance.Flatten.forward": [[43, 45], ["input.flatten"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "input", ".", "flatten", "(", "self", ".", "start_dim", ",", "self", ".", "end_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher-distance.CNN.__init__": [[55, 65], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.ReLU", "fisher-distance.Flatten", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["    ", "def", "__init__", "(", "self", ",", "c", ")", ":", "\n", "        ", "super", "(", "CNN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "encoder", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "1", ",", "32", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "Flatten", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "28", "*", "28", "*", "32", ",", "1024", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "# c is the number of class label", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "1024", ",", "c", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher-distance.CNN.forward": [[66, 70], ["fisher-distance.CNN.encoder", "fisher-distance.CNN.classifier"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "X", "=", "self", ".", "encoder", "(", "X", ")", "\n", "X", "=", "self", ".", "classifier", "(", "X", ")", "\n", "return", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher-distance.variable": [[46, 50], ["torch.autograd.Variable", "torch.cuda.is_available", "torch.cuda.is_available", "t.cuda.cuda"], "function", ["None"], ["", "", "def", "variable", "(", "t", ":", "torch", ".", "Tensor", ",", "use_cuda", "=", "True", ",", "**", "kwargs", ")", ":", "\n", "    ", "if", "torch", ".", "cuda", ".", "is_available", "(", ")", "and", "use_cuda", ":", "\n", "        ", "t", "=", "t", ".", "cuda", "(", ")", "\n", "", "return", "Variable", "(", "t", ",", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher-distance.diag_fisher": [[72, 95], ["copy.deepcopy().items", "model.eval", "torch.nn.CrossEntropyLoss", "p.data.zero_", "fisher-distance.variable", "model.zero_grad", "model", "nn.CrossEntropyLoss.", "error.backward", "model.named_parameters", "model.named_parameters", "copy.deepcopy", "inputs.to", "labels.to", "precision_matrices.items"], "function", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.fisher-distance.variable"], ["", "", "def", "diag_fisher", "(", "model", ",", "data", ")", ":", "\n", "    ", "precision_matrices", "=", "{", "}", "\n", "params", "=", "{", "n", ":", "p", "for", "n", ",", "p", "in", "model", ".", "named_parameters", "(", ")", "if", "p", ".", "requires_grad", "}", "\n", "for", "n", ",", "p", "in", "deepcopy", "(", "params", ")", ".", "items", "(", ")", ":", "\n", "        ", "p", ".", "data", ".", "zero_", "(", ")", "\n", "precision_matrices", "[", "n", "]", "=", "variable", "(", "p", ".", "data", ")", "\n", "\n", "", "model", ".", "eval", "(", ")", "\n", "error", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "for", "inputs", ",", "labels", "in", "data", ":", "\n", "        ", "inputs", ",", "labels", "=", "inputs", ".", "to", "(", "device", ")", ",", "labels", ".", "to", "(", "device", ")", "\n", "model", ".", "zero_grad", "(", ")", "\n", "output", "=", "model", "(", "inputs", ")", "\n", "\n", "loss", "=", "error", "(", "output", ",", "labels", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "\n", "for", "n", ",", "p", "in", "model", ".", "named_parameters", "(", ")", ":", "\n", "            ", "precision_matrices", "[", "n", "]", ".", "data", "+=", "(", "p", ".", "grad", ".", "data", "**", "2", ")", ".", "mean", "(", "0", ")", "\n", "\n", "", "", "precision_matrices", "=", "{", "n", ":", "p", "for", "n", ",", "p", "in", "precision_matrices", ".", "items", "(", ")", "}", "\n", "\n", "return", "precision_matrices", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.operation.ReLUConvBN.__init__": [[38, 44], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", ",", "padding", ",", "affine", "=", "True", ")", ":", "\n", "    ", "super", "(", "ReLUConvBN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "op", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "C_out", ",", "affine", "=", "affine", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.operation.ReLUConvBN.forward": [[46, 48], ["operation.ReLUConvBN.op"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "op", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.operation.DilConv.__init__": [[50, 57], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", ",", "padding", ",", "dilation", ",", "affine", "=", "True", ")", ":", "\n", "    ", "super", "(", "DilConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "op", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "C_in", ",", "C_in", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "dilation", "=", "dilation", ",", "groups", "=", "C_in", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "C_in", ",", "C_out", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "C_out", ",", "affine", "=", "affine", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.operation.DilConv.forward": [[59, 61], ["operation.DilConv.op"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "op", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.operation.SepConv.__init__": [[64, 75], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "kernel_size", ",", "stride", ",", "padding", ",", "affine", "=", "True", ")", ":", "\n", "    ", "super", "(", "SepConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "op", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "C_in", ",", "C_in", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "stride", ",", "padding", "=", "padding", ",", "groups", "=", "C_in", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "C_in", ",", "C_in", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "C_in", ",", "affine", "=", "affine", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "C_in", ",", "C_in", ",", "kernel_size", "=", "kernel_size", ",", "stride", "=", "1", ",", "padding", "=", "padding", ",", "groups", "=", "C_in", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "Conv2d", "(", "C_in", ",", "C_out", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "C_out", ",", "affine", "=", "affine", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.operation.SepConv.forward": [[77, 79], ["operation.SepConv.op"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "self", ".", "op", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.operation.Identity.__init__": [[82, 84], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["  ", "def", "__init__", "(", "self", ")", ":", "\n", "    ", "super", "(", "Identity", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.operation.Identity.forward": [[85, 87], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.operation.Zero.__init__": [[90, 93], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["  ", "def", "__init__", "(", "self", ",", "stride", ")", ":", "\n", "    ", "super", "(", "Zero", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.operation.Zero.forward": [[94, 98], ["x[].mul", "x.mul"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "if", "self", ".", "stride", "==", "1", ":", "\n", "      ", "return", "x", ".", "mul", "(", "0.", ")", "\n", "", "return", "x", "[", ":", ",", ":", ",", ":", ":", "self", ".", "stride", ",", ":", ":", "self", ".", "stride", "]", ".", "mul", "(", "0.", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.operation.FactorizedReduce.__init__": [[101, 108], ["torch.nn.Module.__init__", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.Conv2d", "torch.nn.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["  ", "def", "__init__", "(", "self", ",", "C_in", ",", "C_out", ",", "affine", "=", "True", ")", ":", "\n", "    ", "super", "(", "FactorizedReduce", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "C_out", "%", "2", "==", "0", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", "\n", "self", ".", "conv_1", "=", "nn", ".", "Conv2d", "(", "C_in", ",", "C_out", "//", "2", ",", "1", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv_2", "=", "nn", ".", "Conv2d", "(", "C_in", ",", "C_out", "//", "2", ",", "1", ",", "stride", "=", "2", ",", "padding", "=", "0", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn", "=", "nn", ".", "BatchNorm2d", "(", "C_out", ",", "affine", "=", "affine", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.operation.FactorizedReduce.forward": [[109, 114], ["operation.FactorizedReduce.relu", "torch.cat", "operation.FactorizedReduce.bn", "operation.FactorizedReduce.conv_1", "operation.FactorizedReduce.conv_2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "    ", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "out", "=", "torch", ".", "cat", "(", "[", "self", ".", "conv_1", "(", "x", ")", ",", "self", ".", "conv_2", "(", "x", "[", ":", ",", ":", ",", "1", ":", ",", "1", ":", "]", ")", "]", ",", "dim", "=", "1", ")", "\n", "out", "=", "self", ".", "bn", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.operation.draw_operation": [[116, 141], ["random.randint"], "function", ["None"], ["", "", "def", "draw_operation", "(", "num_op", ")", ":", "\n", "    ", "index", "=", "rd", ".", "randint", "(", "0", ",", "num_op", ")", "\n", "if", "index", "==", "0", ":", "\n", "# return 'none'", "\n", "        ", "return", "'sep_conv_3x3'", "\n", "", "elif", "index", "==", "1", ":", "\n", "# return 'avg_pool_3x3'", "\n", "        ", "return", "'max_pool_3x3'", "\n", "", "elif", "index", "==", "2", ":", "\n", "        ", "return", "'max_pool_3x3'", "\n", "", "elif", "index", "==", "3", ":", "\n", "        ", "return", "'skip_connect'", "\n", "", "elif", "index", "==", "4", ":", "\n", "        ", "return", "'sep_conv_3x3'", "\n", "", "elif", "index", "==", "5", ":", "\n", "        ", "return", "'sep_conv_5x5'", "\n", "", "elif", "index", "==", "6", ":", "\n", "# return 'sep_conv_7x7'", "\n", "        ", "return", "'dil_conv_3x3'", "\n", "", "elif", "index", "==", "7", ":", "\n", "        ", "return", "'dil_conv_3x3'", "\n", "", "elif", "index", "==", "8", ":", "\n", "        ", "return", "'dil_conv_5x5'", "\n", "", "else", ":", "\n", "        ", "return", "'conv_7x1_1x7'", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar.Flatten.__init__": [[42, 46], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["def", "__init__", "(", "self", ",", "start_dim", "=", "1", ",", "end_dim", "=", "-", "1", ")", ":", "\n", "        ", "super", "(", "Flatten", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "start_dim", "=", "start_dim", "\n", "self", ".", "end_dim", "=", "end_dim", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar.Flatten.forward": [[47, 49], ["input.flatten"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "input", ".", "flatten", "(", "self", ".", "start_dim", ",", "self", ".", "end_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar.BinaryNN.__init__": [[53, 60], ["torch.nn.Module.__init__", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "BinaryNN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# self.classifier = nn.Sequential(", "\n", "#     nn.Linear(10,128),", "\n", "#     nn.ReLU(True),", "\n", "#     nn.Linear(128,2))", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "10", ",", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar.BinaryNN.forward": [[61, 64], ["train_task_cifar.BinaryNN.classifier"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "X", "=", "self", ".", "classifier", "(", "X", ")", "\n", "return", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar.NN.__init__": [[68, 84], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Linear", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.MaxPool2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.MaxPool2d", "train_task_cifar.Flatten", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.Linear", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["    ", "def", "__init__", "(", "self", ",", "c", ")", ":", "\n", "        ", "super", "(", "NN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "encoder", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "16", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "16", ",", "32", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ")", ",", "\n", "Flatten", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "32", "*", "8", "*", "8", ",", "1024", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "1024", ",", "128", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "# c is the number of class label", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "128", ",", "c", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar.NN.forward": [[85, 89], ["train_task_cifar.NN.encoder", "train_task_cifar.NN.classifier"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "X", "=", "self", ".", "encoder", "(", "X", ")", "\n", "X", "=", "self", ".", "classifier", "(", "X", ")", "\n", "return", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar.rSubset": [[33, 38], ["list", "itertools.combinations"], "function", ["None"], ["def", "rSubset", "(", "arr", ",", "r", ")", ":", "\n", "# return list of all subsets of length r ", "\n", "# to deal with duplicate subsets use  ", "\n", "# set(list(combinations(arr, r))) ", "\n", "    ", "return", "list", "(", "combinations", "(", "arr", ",", "r", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar.fit": [[92, 116], ["torch.optim.Adam", "torch.nn.CrossEntropyLoss", "model.train", "range", "model.parameters", "enumerate", "inputs.to.to", "targets.long().to.long().to", "torch.optim.Adam.zero_grad", "model", "nn.CrossEntropyLoss.", "error.backward", "torch.optim.Adam.step", "torch.max", "print", "targets.long().to.long", "len", "float", "float"], "function", ["None"], ["", "", "def", "fit", "(", "model", ",", "train_loader", ")", ":", "\n", "    ", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ")", "\n", "error", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "EPOCHS", "=", "args", ".", "num_epoch", "\n", "model", ".", "train", "(", ")", "\n", "for", "epoch", "in", "range", "(", "EPOCHS", ")", ":", "\n", "        ", "correct", "=", "0", "\n", "for", "batch_idx", ",", "(", "inputs", ",", "targets", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "            ", "inputs", "=", "inputs", ".", "to", "(", "device", ")", "\n", "targets", "=", "targets", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "output", "=", "model", "(", "inputs", ")", "\n", "loss", "=", "error", "(", "output", ",", "targets", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "# Total correct predictions", "\n", "predicted", "=", "torch", ".", "max", "(", "output", ".", "data", ",", "1", ")", "[", "1", "]", "\n", "correct", "+=", "(", "predicted", "==", "targets", ")", ".", "sum", "(", ")", "\n", "#print(correct)", "\n", "if", "batch_idx", "%", "50", "==", "0", ":", "\n", "                ", "print", "(", "'Epoch : {} ({:.0f}%) \\t\\t Accuracy:{:.3f}%'", ".", "format", "(", "\n", "epoch", ",", "100.", "*", "batch_idx", "/", "len", "(", "train_loader", ")", ",", "float", "(", "correct", "*", "100", ")", "/", "float", "(", "args", ".", "batch_size_train", "*", "(", "batch_idx", "+", "1", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar.evaluate": [[120, 143], ["print", "test_imgs.to.to", "test_labels.long().to.long().to", "model", "print", "torch.save", "torch.max", "model.state_dict", "os.path.isdir", "os.mkdir", "test_labels.long().to.long", "float", "len", "str"], "function", ["None"], ["def", "evaluate", "(", "model", ",", "test_loader", ",", "label", ",", "save_flag", ",", "index", ")", ":", "\n", "    ", "global", "best_acc", "\n", "correct", "=", "0", "\n", "for", "test_imgs", ",", "test_labels", "in", "test_loader", ":", "\n", "        ", "test_imgs", "=", "test_imgs", ".", "to", "(", "device", ")", "\n", "test_labels", "=", "test_labels", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "\n", "output", "=", "model", "(", "test_imgs", ")", "\n", "predicted", "=", "torch", ".", "max", "(", "output", ",", "1", ")", "[", "1", "]", "\n", "correct", "+=", "(", "predicted", "==", "test_labels", ")", ".", "sum", "(", ")", "\n", "", "print", "(", "\"Test accuracy:{:.3f}% \\n\"", ".", "format", "(", "float", "(", "correct", "*", "100", ")", "/", "len", "(", "label", ")", ")", ")", "\n", "\n", "if", "(", "save_flag", "==", "True", ")", ":", "\n", "# Save the pretrained network", "\n", "        ", "print", "(", "'Saving..'", ")", "\n", "state", "=", "{", "\n", "'net'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'acc'", ":", "correct", ",", "\n", "}", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "'checkpoint'", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "'checkpoint'", ")", "\n", "", "torch", ".", "save", "(", "state", ",", "'./checkpoint/cifar10_task'", "+", "str", "(", "index", ")", "+", "'.t10'", ")", "\n", "", "best_acc", "=", "correct", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_best_cell.Cell.__init__": [[36, 46], ["torch.nn.Module.__init__", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.DataParallel"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["    ", "def", "__init__", "(", "self", ",", "out_dim", "=", "10", ",", "num_node", "=", "4", ",", "reduction", "=", "0", ",", "channel", "=", "3", ")", ":", "\n", "        ", "super", "(", "Cell", ",", "self", ")", ".", "__init__", "(", ")", "\n", "stride", "=", "2", "if", "reduction", "==", "1", "else", "1", "\n", "\n", "self", ".", "op_0_1", "=", "nn", ".", "DataParallel", "(", "OPS", "[", "'sep_conv_3x3'", "]", "(", "channel", ",", "stride", ",", "affine", "=", "False", ")", ")", "\n", "self", ".", "op_0_2", "=", "nn", ".", "DataParallel", "(", "OPS", "[", "'sep_conv_7x7'", "]", "(", "channel", ",", "stride", ",", "affine", "=", "False", ")", ")", "\n", "self", ".", "op_0_3", "=", "nn", ".", "DataParallel", "(", "OPS", "[", "'sep_conv_3x3'", "]", "(", "channel", ",", "stride", ",", "affine", "=", "False", ")", ")", "\n", "self", ".", "op_1_2", "=", "nn", ".", "DataParallel", "(", "OPS", "[", "'sep_conv_3x3'", "]", "(", "channel", ",", "stride", ",", "affine", "=", "False", ")", ")", "\n", "self", ".", "op_1_3", "=", "nn", ".", "DataParallel", "(", "OPS", "[", "'max_pool_3x3'", "]", "(", "channel", ",", "stride", ",", "affine", "=", "False", ")", ")", "\n", "self", ".", "op_2_3", "=", "nn", ".", "DataParallel", "(", "OPS", "[", "'sep_conv_3x3'", "]", "(", "channel", ",", "stride", ",", "affine", "=", "False", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_best_cell.Cell.forward": [[49, 64], ["train_best_cell.Cell.op_0_1", "train_best_cell.Cell.op_0_2", "train_best_cell.Cell.op_0_3", "train_best_cell.Cell.op_1_2", "train_best_cell.Cell.op_1_3", "train_best_cell.Cell.op_2_3"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "s01", "=", "self", ".", "op_0_1", "(", "X", ")", "\n", "s02", "=", "self", ".", "op_0_2", "(", "X", ")", "\n", "s03", "=", "self", ".", "op_0_3", "(", "X", ")", "\n", "s12", "=", "self", ".", "op_1_2", "(", "s01", ")", "\n", "s13", "=", "self", ".", "op_1_3", "(", "s01", ")", "\n", "\n", "s2", "=", "s02", "+", "s12", "\n", "s23", "=", "self", ".", "op_2_3", "(", "s2", ")", "\n", "\n", "# cat_out = torch.cat([s03, s13, s23], dim=1)", "\n", "# f_out = F.relu(torch.flatten(cat_out, 1))", "\n", "# out = self.classifier(f_out)", "\n", "out", "=", "s03", "+", "s13", "+", "s23", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_best_cell.Flatten.__init__": [[68, 72], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["def", "__init__", "(", "self", ",", "start_dim", "=", "1", ",", "end_dim", "=", "-", "1", ")", ":", "\n", "        ", "super", "(", "Flatten", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "start_dim", "=", "start_dim", "\n", "self", ".", "end_dim", "=", "end_dim", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_best_cell.Flatten.forward": [[73, 75], ["input.flatten"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "input", ".", "flatten", "(", "self", ".", "start_dim", ",", "self", ".", "end_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_best_cell.LinearNN.__init__": [[77, 86], ["torch.nn.Module.__init__", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.Sequential", "torch.nn.Sequential", "train_best_cell.Flatten", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.Linear", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["    ", "def", "__init__", "(", "self", ",", "c", ")", ":", "\n", "        ", "super", "(", "LinearNN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "DataParallel", "(", "nn", ".", "Sequential", "(", "\n", "Flatten", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "3", "*", "32", "*", "32", ",", "1024", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "1024", ",", "128", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "128", ",", "c", ")", "\n", ")", ")", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_best_cell.LinearNN.forward": [[88, 91], ["train_best_cell.LinearNN.classifier"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "X", "=", "self", ".", "classifier", "(", "X", ")", "\n", "return", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_best_cell.PoolingNN.__init__": [[93, 98], ["torch.nn.Module.__init__", "torch.nn.DataParallel", "torch.nn.DataParallel", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.ReLU", "torch.nn.ReLU", "torch.nn.MaxPool2d", "torch.nn.MaxPool2d"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "PoolingNN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "pool", "=", "nn", ".", "DataParallel", "(", "nn", ".", "Sequential", "(", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "False", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", ")", ")", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_best_cell.PoolingNN.forward": [[100, 103], ["train_best_cell.PoolingNN.pool"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "X", "=", "self", ".", "pool", "(", "X", ")", "\n", "return", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_best_cell.MyModule.__init__": [[162, 165], ["torch.nn.Module.__init__", "torch.nn.ModuleList", "torch.nn.ModuleList", "train_best_cell.Cell", "range"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_cell", ")", ":", "\n", "        ", "super", "(", "MyModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "cells", "=", "nn", ".", "ModuleList", "(", "[", "Cell", "(", "channel", "=", "3", ")", "for", "i", "in", "range", "(", "num_cell", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_best_cell.MyModule.forward": [[166, 171], ["enumerate"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "for", "i", ",", "l", "in", "enumerate", "(", "self", ".", "cells", ")", ":", "\n", "            ", "X", "=", "self", ".", "cells", "[", "i", "]", "(", "X", ")", "\n", "\n", "", "return", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_best_cell.fit": [[105, 129], ["torch.optim.Adam", "torch.optim.Adam", "torch.nn.CrossEntropyLoss", "model.train", "range", "model.parameters", "enumerate", "inputs.to.to", "targets.long().to.long().to", "torch.optim.Adam.zero_grad", "model", "nn.CrossEntropyLoss.", "error.backward", "torch.optim.Adam.step", "torch.max", "torch.max", "print", "targets.long().to.long", "len", "float", "float"], "function", ["None"], ["", "", "def", "fit", "(", "model", ",", "train_loader", ")", ":", "\n", "    ", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ")", "\n", "error", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "EPOCHS", "=", "args", ".", "num_epoch", "\n", "model", ".", "train", "(", ")", "\n", "for", "epoch", "in", "range", "(", "EPOCHS", ")", ":", "\n", "        ", "correct", "=", "0", "\n", "for", "batch_idx", ",", "(", "inputs", ",", "targets", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "            ", "inputs", "=", "inputs", ".", "to", "(", "device", ")", "\n", "targets", "=", "targets", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "output", "=", "model", "(", "inputs", ")", "\n", "loss", "=", "error", "(", "output", ",", "targets", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "# Total correct predictions", "\n", "predicted", "=", "torch", ".", "max", "(", "output", ".", "data", ",", "1", ")", "[", "1", "]", "\n", "correct", "+=", "(", "predicted", "==", "targets", ")", ".", "sum", "(", ")", "\n", "#print(correct)", "\n", "if", "batch_idx", "%", "50", "==", "0", ":", "\n", "                ", "print", "(", "'Epoch : {} ({:.0f}%) \\t\\t Accuracy:{:.3f}%'", ".", "format", "(", "\n", "epoch", ",", "100.", "*", "batch_idx", "/", "len", "(", "train_loader", ")", ",", "float", "(", "correct", "*", "100", ")", "/", "float", "(", "args", ".", "batch_size_train", "*", "(", "batch_idx", "+", "1", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_best_cell.evaluate": [[133, 156], ["print", "test_imgs.to.to", "test_labels.long().to.long().to", "model", "print", "torch.save", "torch.save", "torch.max", "torch.max", "model.state_dict", "os.path.isdir", "os.mkdir", "test_labels.long().to.long", "float", "len", "str", "str"], "function", ["None"], ["def", "evaluate", "(", "model", ",", "test_loader", ",", "label", ",", "save_flag", ",", "index", ",", "i", ")", ":", "\n", "    ", "global", "best_acc", "\n", "correct", "=", "0", "\n", "for", "test_imgs", ",", "test_labels", "in", "test_loader", ":", "\n", "        ", "test_imgs", "=", "test_imgs", ".", "to", "(", "device", ")", "\n", "test_labels", "=", "test_labels", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "\n", "output", "=", "model", "(", "test_imgs", ")", "\n", "predicted", "=", "torch", ".", "max", "(", "output", ",", "1", ")", "[", "1", "]", "\n", "correct", "+=", "(", "predicted", "==", "test_labels", ")", ".", "sum", "(", ")", "\n", "", "print", "(", "\"Test accuracy:{:.3f}% \\n\"", ".", "format", "(", "float", "(", "correct", "*", "100", ")", "/", "len", "(", "label", ")", ")", ")", "\n", "\n", "if", "(", "save_flag", "==", "True", ")", ":", "\n", "# Save the pretrained network", "\n", "        ", "print", "(", "'Saving..'", ")", "\n", "state", "=", "{", "\n", "'net'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'acc'", ":", "correct", ",", "\n", "}", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "'checkpoint'", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "'checkpoint'", ")", "\n", "", "torch", ".", "save", "(", "state", ",", "'./checkpoint/cell'", "+", "str", "(", "index", ")", "+", "'.t'", "+", "str", "(", "i", ")", ")", "\n", "", "best_acc", "=", "correct", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_mnist.Flatten.__init__": [[42, 46], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["def", "__init__", "(", "self", ",", "start_dim", "=", "1", ",", "end_dim", "=", "-", "1", ")", ":", "\n", "        ", "super", "(", "Flatten", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "start_dim", "=", "start_dim", "\n", "self", ".", "end_dim", "=", "end_dim", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_mnist.Flatten.forward": [[47, 49], ["input.flatten"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "input", ".", "flatten", "(", "self", ".", "start_dim", ",", "self", ".", "end_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_mnist.NN1.__init__": [[53, 69], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Linear", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.ReLU", "train_task_mnist.Flatten", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.Linear", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["    ", "def", "__init__", "(", "self", ",", "c", ")", ":", "\n", "        ", "super", "(", "NN1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "encoder", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "1", ",", "16", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "# nn.MaxPool2d(2, stride=2),", "\n", "nn", ".", "Conv2d", "(", "16", ",", "32", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "# nn.MaxPool2d(2, stride=2),", "\n", "Flatten", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "32", "*", "28", "*", "28", ",", "1024", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "1024", ",", "128", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "# c is the number of class label", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "128", ",", "c", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_mnist.NN1.forward": [[70, 74], ["train_task_mnist.NN1.encoder", "train_task_mnist.NN1.classifier"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "X", "=", "self", ".", "encoder", "(", "X", ")", "\n", "X", "=", "self", ".", "classifier", "(", "X", ")", "\n", "return", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_mnist.NN2.__init__": [[76, 90], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Linear", "train_task_mnist.Flatten", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.Linear", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["    ", "def", "__init__", "(", "self", ",", "c", ")", ":", "\n", "        ", "super", "(", "NN2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "encoder", "=", "nn", ".", "Sequential", "(", "\n", "Flatten", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "28", "*", "28", ",", "1024", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "1024", ",", "512", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "512", ",", "256", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "256", ",", "128", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "# c is the number of class label", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "128", ",", "c", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_mnist.NN2.forward": [[91, 95], ["train_task_mnist.NN2.encoder", "train_task_mnist.NN2.classifier"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "X", "=", "self", ".", "encoder", "(", "X", ")", "\n", "X", "=", "self", ".", "classifier", "(", "X", ")", "\n", "return", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_mnist.NN3.__init__": [[97, 114], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Linear", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.MaxPool2d", "train_task_mnist.Flatten", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.Linear", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["    ", "def", "__init__", "(", "self", ",", "c", ")", ":", "\n", "        ", "super", "(", "NN3", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "encoder", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "1", ",", "16", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "16", ",", "32", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "32", ",", "64", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ")", ",", "\n", "Flatten", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "64", "*", "14", "*", "14", ",", "1024", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "1024", ",", "128", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "# c is the number of class label", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "128", ",", "c", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_mnist.NN3.forward": [[115, 119], ["train_task_mnist.NN3.encoder", "train_task_mnist.NN3.classifier"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "X", "=", "self", ".", "encoder", "(", "X", ")", "\n", "X", "=", "self", ".", "classifier", "(", "X", ")", "\n", "return", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_mnist.PreNN.__init__": [[122, 125], ["torch.nn.Module.__init__", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "PreNN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "encoder", "=", "nn", ".", "Conv2d", "(", "1", ",", "3", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_mnist.PreNN.forward": [[126, 129], ["train_task_mnist.PreNN.encoder"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "X", "=", "self", ".", "encoder", "(", "X", ")", "\n", "return", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_mnist.BinaryNN.__init__": [[131, 134], ["torch.nn.Module.__init__", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["    ", "def", "__init__", "(", "self", ",", "c", ")", ":", "\n", "        ", "super", "(", "BinaryNN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "10", ",", "c", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_mnist.BinaryNN.forward": [[135, 138], ["train_task_mnist.BinaryNN.classifier"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "X", "=", "self", ".", "classifier", "(", "X", ")", "\n", "return", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_mnist.rSubset": [[33, 38], ["list", "itertools.combinations"], "function", ["None"], ["def", "rSubset", "(", "arr", ",", "r", ")", ":", "\n", "# return list of all subsets of length r ", "\n", "# to deal with duplicate subsets use  ", "\n", "# set(list(combinations(arr, r))) ", "\n", "    ", "return", "list", "(", "combinations", "(", "arr", ",", "r", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_mnist.fit": [[141, 165], ["torch.optim.Adam", "torch.nn.CrossEntropyLoss", "model.train", "range", "model.parameters", "enumerate", "inputs.to.to", "targets.long().to.long().to", "torch.optim.Adam.zero_grad", "model", "nn.CrossEntropyLoss.", "error.backward", "torch.optim.Adam.step", "torch.max", "print", "targets.long().to.long", "len", "float", "float"], "function", ["None"], ["", "", "def", "fit", "(", "model", ",", "train_loader", ")", ":", "\n", "    ", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ")", "\n", "error", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "EPOCHS", "=", "args", ".", "num_epoch", "\n", "model", ".", "train", "(", ")", "\n", "for", "epoch", "in", "range", "(", "EPOCHS", ")", ":", "\n", "        ", "correct", "=", "0", "\n", "for", "batch_idx", ",", "(", "inputs", ",", "targets", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "            ", "inputs", "=", "inputs", ".", "to", "(", "device", ")", "\n", "targets", "=", "targets", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "output", "=", "model", "(", "inputs", ")", "\n", "loss", "=", "error", "(", "output", ",", "targets", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "# Total correct predictions", "\n", "predicted", "=", "torch", ".", "max", "(", "output", ".", "data", ",", "1", ")", "[", "1", "]", "\n", "correct", "+=", "(", "predicted", "==", "targets", ")", ".", "sum", "(", ")", "\n", "#print(correct)", "\n", "if", "batch_idx", "%", "50", "==", "0", ":", "\n", "                ", "print", "(", "'Epoch : {} ({:.0f}%) \\t\\t Accuracy:{:.3f}%'", ".", "format", "(", "\n", "epoch", ",", "100.", "*", "batch_idx", "/", "len", "(", "train_loader", ")", ",", "float", "(", "correct", "*", "100", ")", "/", "float", "(", "args", ".", "batch_size_train", "*", "(", "batch_idx", "+", "1", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_mnist.evaluate": [[169, 192], ["print", "test_imgs.to.to", "test_labels.long().to.long().to", "model", "print", "torch.save", "torch.max", "model.state_dict", "os.path.isdir", "os.mkdir", "test_labels.long().to.long", "float", "len", "str", "str"], "function", ["None"], ["def", "evaluate", "(", "model", ",", "test_loader", ",", "label", ",", "save_flag", ",", "index", ",", "i", ")", ":", "\n", "    ", "global", "best_acc", "\n", "correct", "=", "0", "\n", "for", "test_imgs", ",", "test_labels", "in", "test_loader", ":", "\n", "        ", "test_imgs", "=", "test_imgs", ".", "to", "(", "device", ")", "\n", "test_labels", "=", "test_labels", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "\n", "output", "=", "model", "(", "test_imgs", ")", "\n", "predicted", "=", "torch", ".", "max", "(", "output", ",", "1", ")", "[", "1", "]", "\n", "correct", "+=", "(", "predicted", "==", "test_labels", ")", ".", "sum", "(", ")", "\n", "", "print", "(", "\"Test accuracy:{:.3f}% \\n\"", ".", "format", "(", "float", "(", "correct", "*", "100", ")", "/", "len", "(", "label", ")", ")", ")", "\n", "\n", "if", "(", "save_flag", "==", "True", ")", ":", "\n", "# Save the pretrained network", "\n", "        ", "print", "(", "'Saving..'", ")", "\n", "state", "=", "{", "\n", "'net'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'acc'", ":", "correct", ",", "\n", "}", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "'checkpoint'", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "'checkpoint'", ")", "\n", "", "torch", ".", "save", "(", "state", ",", "'./checkpoint/mnist_task'", "+", "str", "(", "index", ")", "+", "'.t'", "+", "str", "(", "i", ")", ")", "\n", "", "best_acc", "=", "correct", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.Flatten.__init__": [[42, 46], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["def", "__init__", "(", "self", ",", "start_dim", "=", "1", ",", "end_dim", "=", "-", "1", ")", ":", "\n", "        ", "super", "(", "Flatten", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "start_dim", "=", "start_dim", "\n", "self", ".", "end_dim", "=", "end_dim", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.Flatten.forward": [[47, 49], ["input.flatten"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "input", ".", "flatten", "(", "self", ".", "start_dim", ",", "self", ".", "end_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.BinaryNN.__init__": [[53, 60], ["torch.nn.Module.__init__", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["    ", "def", "__init__", "(", "self", ",", "c", ")", ":", "\n", "        ", "super", "(", "BinaryNN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# self.classifier = nn.Sequential(", "\n", "#     nn.Linear(10,128),", "\n", "#     nn.ReLU(True),", "\n", "#     nn.Linear(128,2))", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "10", ",", "c", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.BinaryNN.forward": [[61, 64], ["train_task_cifar_repeat.BinaryNN.classifier"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "X", "=", "self", ".", "classifier", "(", "X", ")", "\n", "return", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__": [[68, 84], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Linear", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.MaxPool2d", "torch.nn.Conv2d", "torch.nn.ReLU", "torch.nn.MaxPool2d", "train_task_cifar_repeat.Flatten", "torch.nn.Linear", "torch.nn.ReLU", "torch.nn.Linear", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.__init__"], ["    ", "def", "__init__", "(", "self", ",", "c", ")", ":", "\n", "        ", "super", "(", "NN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "encoder", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "3", ",", "16", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "16", ",", "32", ",", "kernel_size", "=", "5", ",", "stride", "=", "1", ",", "padding", "=", "2", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "MaxPool2d", "(", "2", ",", "stride", "=", "2", ")", ",", "\n", "Flatten", "(", ")", ",", "\n", "nn", ".", "Linear", "(", "32", "*", "8", "*", "8", ",", "1024", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ",", "\n", "nn", ".", "Linear", "(", "1024", ",", "128", ")", ",", "\n", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "# c is the number of class label", "\n", "self", ".", "classifier", "=", "nn", ".", "Linear", "(", "128", ",", "c", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.NN.forward": [[85, 89], ["train_task_cifar_repeat.NN.encoder", "train_task_cifar_repeat.NN.classifier"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "X", ")", ":", "\n", "        ", "X", "=", "self", ".", "encoder", "(", "X", ")", "\n", "X", "=", "self", ".", "classifier", "(", "X", ")", "\n", "return", "X", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.rSubset": [[33, 38], ["list", "itertools.combinations"], "function", ["None"], ["def", "rSubset", "(", "arr", ",", "r", ")", ":", "\n", "# return list of all subsets of length r ", "\n", "# to deal with duplicate subsets use  ", "\n", "# set(list(combinations(arr, r))) ", "\n", "    ", "return", "list", "(", "combinations", "(", "arr", ",", "r", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.fit": [[92, 116], ["torch.optim.Adam", "torch.nn.CrossEntropyLoss", "model.train", "range", "model.parameters", "enumerate", "inputs.to.to", "targets.long().to.long().to", "torch.optim.Adam.zero_grad", "model", "nn.CrossEntropyLoss.", "error.backward", "torch.optim.Adam.step", "torch.max", "print", "targets.long().to.long", "len", "float", "float"], "function", ["None"], ["", "", "def", "fit", "(", "model", ",", "train_loader", ")", ":", "\n", "    ", "optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "model", ".", "parameters", "(", ")", ")", "\n", "error", "=", "nn", ".", "CrossEntropyLoss", "(", ")", "\n", "EPOCHS", "=", "args", ".", "num_epoch", "\n", "model", ".", "train", "(", ")", "\n", "for", "epoch", "in", "range", "(", "EPOCHS", ")", ":", "\n", "        ", "correct", "=", "0", "\n", "for", "batch_idx", ",", "(", "inputs", ",", "targets", ")", "in", "enumerate", "(", "train_loader", ")", ":", "\n", "            ", "inputs", "=", "inputs", ".", "to", "(", "device", ")", "\n", "targets", "=", "targets", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "output", "=", "model", "(", "inputs", ")", "\n", "loss", "=", "error", "(", "output", ",", "targets", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "# Total correct predictions", "\n", "predicted", "=", "torch", ".", "max", "(", "output", ".", "data", ",", "1", ")", "[", "1", "]", "\n", "correct", "+=", "(", "predicted", "==", "targets", ")", ".", "sum", "(", ")", "\n", "#print(correct)", "\n", "if", "batch_idx", "%", "50", "==", "0", ":", "\n", "                ", "print", "(", "'Epoch : {} ({:.0f}%) \\t\\t Accuracy:{:.3f}%'", ".", "format", "(", "\n", "epoch", ",", "100.", "*", "batch_idx", "/", "len", "(", "train_loader", ")", ",", "float", "(", "correct", "*", "100", ")", "/", "float", "(", "args", ".", "batch_size_train", "*", "(", "batch_idx", "+", "1", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.lephuoccat_Fisher-Information-NAS.None.train_task_cifar_repeat.evaluate": [[120, 143], ["print", "test_imgs.to.to", "test_labels.long().to.long().to", "model", "print", "torch.save", "torch.max", "model.state_dict", "os.path.isdir", "os.mkdir", "test_labels.long().to.long", "float", "len", "str", "str"], "function", ["None"], ["def", "evaluate", "(", "model", ",", "test_loader", ",", "label", ",", "save_flag", ",", "index", ",", "i", ")", ":", "\n", "    ", "global", "best_acc", "\n", "correct", "=", "0", "\n", "for", "test_imgs", ",", "test_labels", "in", "test_loader", ":", "\n", "        ", "test_imgs", "=", "test_imgs", ".", "to", "(", "device", ")", "\n", "test_labels", "=", "test_labels", ".", "long", "(", ")", ".", "to", "(", "device", ")", "\n", "\n", "output", "=", "model", "(", "test_imgs", ")", "\n", "predicted", "=", "torch", ".", "max", "(", "output", ",", "1", ")", "[", "1", "]", "\n", "correct", "+=", "(", "predicted", "==", "test_labels", ")", ".", "sum", "(", ")", "\n", "", "print", "(", "\"Test accuracy:{:.3f}% \\n\"", ".", "format", "(", "float", "(", "correct", "*", "100", ")", "/", "len", "(", "label", ")", ")", ")", "\n", "\n", "if", "(", "save_flag", "==", "True", ")", ":", "\n", "# Save the pretrained network", "\n", "        ", "print", "(", "'Saving..'", ")", "\n", "state", "=", "{", "\n", "'net'", ":", "model", ".", "state_dict", "(", ")", ",", "\n", "'acc'", ":", "correct", ",", "\n", "}", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "'checkpoint'", ")", ":", "\n", "            ", "os", ".", "mkdir", "(", "'checkpoint'", ")", "\n", "", "torch", ".", "save", "(", "state", ",", "'./checkpoint/cifar10_task'", "+", "str", "(", "index", ")", "+", "'b.t'", "+", "str", "(", "i", ")", ")", "\n", "", "best_acc", "=", "correct", "\n", "\n"]]}