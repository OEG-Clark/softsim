{"home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.dataloader.acdc_dataset.ACDCDataset.__init__": [[19, 25], ["contrastyou.augment.sequential_wrapper.SequentialWrapper", "contrastyou.dataloader._seg_datset.ContrastDataset.__init__", "numpy.load().item", "isinstance", "numpy.load", "len", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["def", "__init__", "(", "self", ",", "root_dir", ":", "str", ",", "mode", ":", "str", ",", "transforms", ":", "SequentialWrapper", "=", "SequentialWrapper", "(", ")", ",", "\n", "verbose", "=", "True", ",", "*", "args", ",", "**", "kwargs", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "root_dir", ",", "mode", ",", "[", "\"img\"", ",", "\"gt\"", "]", ",", "transforms", ",", "verbose", ")", "\n", "self", ".", "_acdc_info", "=", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "self", ".", "_root_dir", ",", "\"acdc_info.npy\"", ")", ",", "allow_pickle", "=", "True", ")", ".", "item", "(", ")", "\n", "assert", "isinstance", "(", "self", ".", "_acdc_info", ",", "dict", ")", "and", "len", "(", "self", ".", "_acdc_info", ")", "==", "200", "\n", "self", ".", "_transform", "=", "transforms", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.dataloader.acdc_dataset.ACDCDataset.__getitem__": [[26, 33], ["acdc_dataset.ACDCDataset._getitem_index", "acdc_dataset.ACDCDataset._transform", "acdc_dataset.ACDCDataset._get_partition", "acdc_dataset.ACDCDataset._get_group", "pathlib.Path"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.dataloader._seg_datset.ContrastDataset._get_partition", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.dataloader._seg_datset.ContrastDataset._get_group"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", "->", "Tuple", "[", "List", "[", "Tensor", "]", ",", "str", ",", "str", ",", "str", "]", ":", "\n", "        ", "[", "img_png", ",", "target_png", "]", ",", "filename_list", "=", "self", ".", "_getitem_index", "(", "index", ")", "\n", "filename", "=", "Path", "(", "filename_list", "[", "0", "]", ")", ".", "stem", "\n", "data", "=", "self", ".", "_transform", "(", "imgs", "=", "[", "img_png", "]", ",", "targets", "=", "[", "target_png", "]", ",", ")", "\n", "partition", "=", "self", ".", "_get_partition", "(", "filename", ")", "\n", "group", "=", "self", ".", "_get_group", "(", "filename", ")", "\n", "return", "data", ",", "filename", ",", "partition", ",", "group", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.dataloader.acdc_dataset.ACDCDataset._get_group": [[34, 36], ["str", "acdc_dataset.ACDCDataset._get_group_name"], "methods", ["None"], ["", "def", "_get_group", "(", "self", ",", "filename", ")", "->", "Union", "[", "str", ",", "int", "]", ":", "\n", "        ", "return", "str", "(", "self", ".", "_get_group_name", "(", "filename", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.dataloader.acdc_dataset.ACDCDataset._get_partition": [[37, 47], ["int", "str", "str", "str", "acdc_dataset.ACDCDataset._get_group_name", "re.compile().findall", "re.compile"], "methods", ["None"], ["", "def", "_get_partition", "(", "self", ",", "filename", ")", "->", "Union", "[", "str", ",", "int", "]", ":", "\n", "# set partition", "\n", "        ", "max_len_given_group", "=", "self", ".", "_acdc_info", "[", "self", ".", "_get_group_name", "(", "filename", ")", "]", "\n", "cutting_point", "=", "max_len_given_group", "//", "3", "\n", "cur_index", "=", "int", "(", "re", ".", "compile", "(", "r\"\\d+\"", ")", ".", "findall", "(", "filename", ")", "[", "-", "1", "]", ")", "\n", "if", "cur_index", "<=", "cutting_point", "-", "1", ":", "\n", "            ", "return", "str", "(", "0", ")", "\n", "", "if", "cur_index", "<=", "2", "*", "cutting_point", ":", "\n", "            ", "return", "str", "(", "1", ")", "\n", "", "return", "str", "(", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.dataloader.acdc_dataset.ACDCDataset.show_paritions": [[48, 50], ["acdc_dataset.ACDCDataset._get_partition", "list", "acdc_dataset.ACDCDataset._filenames.values"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.dataloader._seg_datset.ContrastDataset._get_partition"], ["", "def", "show_paritions", "(", "self", ")", "->", "List", "[", "Union", "[", "str", ",", "int", "]", "]", ":", "\n", "        ", "return", "[", "self", ".", "_get_partition", "(", "f", ")", "for", "f", "in", "list", "(", "self", ".", "_filenames", ".", "values", "(", ")", ")", "[", "0", "]", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.dataloader.acdc_dataset.ACDCDataset.show_groups": [[51, 53], ["acdc_dataset.ACDCDataset._get_group", "list", "acdc_dataset.ACDCDataset._filenames.values"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.dataloader._seg_datset.ContrastDataset._get_group"], ["", "def", "show_groups", "(", "self", ")", "->", "List", "[", "Union", "[", "str", ",", "int", "]", "]", ":", "\n", "        ", "return", "[", "self", ".", "_get_group", "(", "f", ")", "for", "f", "in", "list", "(", "self", ".", "_filenames", ".", "values", "(", ")", ")", "[", "0", "]", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.dataloader.acdc_dataset.ACDCSemiInterface.__init__": [[57, 61], ["deepclustering2.dataset.ACDCSemiInterface.__init__"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["    ", "def", "__init__", "(", "self", ",", "root_dir", ",", "labeled_data_ratio", ":", "float", "=", "0.2", ",", "unlabeled_data_ratio", ":", "float", "=", "0.8", ",", "\n", "seed", ":", "int", "=", "0", ",", "verbose", ":", "bool", "=", "True", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "root_dir", ",", "labeled_data_ratio", ",", "unlabeled_data_ratio", ",", "seed", ",", "verbose", ")", "\n", "self", ".", "DataClass", "=", "ACDCDataset", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.dataloader._seg_datset.ContrastDataset._get_partition": [[17, 21], ["None"], "methods", ["None"], ["@", "abstractmethod", "\n", "def", "_get_partition", "(", "self", ",", "*", "args", ")", "->", "Union", "[", "str", ",", "int", "]", ":", "\n", "        ", "\"\"\"get the partition of a 2D slice given its index or filename\"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.dataloader._seg_datset.ContrastDataset._get_group": [[22, 26], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "_get_group", "(", "self", ",", "*", "args", ")", "->", "Union", "[", "str", ",", "int", "]", ":", "\n", "        ", "\"\"\"get the group name of a 2D slice given its index or filename\"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.dataloader._seg_datset.ContrastDataset.show_paritions": [[27, 31], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "show_paritions", "(", "self", ")", "->", "List", "[", "Union", "[", "str", ",", "int", "]", "]", ":", "\n", "        ", "\"\"\"show all groups of 2D slices in the dataset\"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.dataloader._seg_datset.ContrastDataset.show_parition_set": [[32, 35], ["set", "_seg_datset.ContrastDataset.show_paritions"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.dataloader._seg_datset.ContrastDataset.show_paritions"], ["", "def", "show_parition_set", "(", "self", ")", "->", "Set", "[", "Union", "[", "str", ",", "int", "]", "]", ":", "\n", "        ", "\"\"\"show all groups of 2D slices in the dataset\"\"\"", "\n", "return", "set", "(", "self", ".", "show_paritions", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.dataloader._seg_datset.ContrastDataset.show_groups": [[36, 40], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "show_groups", "(", "self", ")", "->", "List", "[", "Union", "[", "str", ",", "int", "]", "]", ":", "\n", "        ", "\"\"\"show all groups of 2D slices in the dataset\"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.dataloader._seg_datset.ContrastDataset.show_group_set": [[41, 44], ["set", "_seg_datset.ContrastDataset.show_groups"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.dataloader._seg_datset.ContrastDataset.show_groups"], ["", "def", "show_group_set", "(", "self", ")", "->", "Set", "[", "Union", "[", "str", ",", "int", "]", "]", ":", "\n", "        ", "\"\"\"show all groups of 2D slices in the dataset\"\"\"", "\n", "return", "set", "(", "self", ".", "show_groups", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.dataloader._seg_datset.ContrastBatchSampler.__init__": [[83, 102], ["copy.deepcopy", "enumerate", "dataset._get_group", "group2index[].append", "dataset._get_partition", "partiton2index[].append", "list", "dataset._filenames.values"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.dataloader._seg_datset.ContrastDataset._get_group", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.dataloader._seg_datset.ContrastDataset._get_partition"], ["", "", "def", "__init__", "(", "self", ",", "dataset", ":", "ContrastDataset", ",", "group_sample_num", "=", "4", ",", "partition_sample_num", "=", "1", ",", "shuffle", "=", "False", ")", "->", "None", ":", "\n", "        ", "self", ".", "_dataset", "=", "dataset", "\n", "filenames", "=", "dcp", "(", "list", "(", "dataset", ".", "_filenames", ".", "values", "(", ")", ")", "[", "0", "]", ")", "\n", "group2index", "=", "{", "}", "\n", "partiton2index", "=", "{", "}", "\n", "for", "i", ",", "filename", "in", "enumerate", "(", "filenames", ")", ":", "\n", "            ", "group", "=", "dataset", ".", "_get_group", "(", "filename", ")", "\n", "if", "group", "not", "in", "group2index", ":", "\n", "                ", "group2index", "[", "group", "]", "=", "[", "]", "\n", "", "group2index", "[", "group", "]", ".", "append", "(", "i", ")", "\n", "partition", "=", "dataset", ".", "_get_partition", "(", "filename", ")", "\n", "if", "partition", "not", "in", "partiton2index", ":", "\n", "                ", "partiton2index", "[", "partition", "]", "=", "[", "]", "\n", "", "partiton2index", "[", "partition", "]", ".", "append", "(", "i", ")", "\n", "", "self", ".", "_group2index", "=", "group2index", "\n", "self", ".", "_partition2index", "=", "partiton2index", "\n", "self", ".", "_group_sample_num", "=", "group_sample_num", "\n", "self", ".", "_partition_sample_num", "=", "partition_sample_num", "\n", "self", ".", "_shuffle", "=", "shuffle", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.dataloader._seg_datset.ContrastBatchSampler.__iter__": [[103, 106], ["_seg_datset.ContrastBatchSampler._SamplerIterator"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_SamplerIterator", "(", "self", ".", "_group2index", ",", "self", ".", "_partition2index", ",", "self", ".", "_group_sample_num", ",", "\n", "self", ".", "_partition_sample_num", ",", "shuffle", "=", "self", ".", "_shuffle", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.dataloader._seg_datset.ContrastBatchSampler.__len__": [[107, 109], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", "->", "int", ":", "\n", "        ", "return", "len", "(", "self", ".", "_dataset", ")", "# type: ignore", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInteractMixin.tracking_status": [[16, 34], ["v.detailed_summary", "v.summary", "meter_interface.MeterInteractMixin.meters.items", "v.detailed_summary", "v.summary", "meter_interface.MeterInteractMixin.meters.items"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.kappa.KappaMetrics.detailed_summary", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.kappa.KappaMetrics.summary", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.IICLossWrapper.items", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.kappa.KappaMetrics.detailed_summary", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.kappa.KappaMetrics.summary", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.IICLossWrapper.items"], ["def", "tracking_status", "(", "\n", "self", ",", "group_name", "=", "None", ",", "detailed_summary", "=", "False", "\n", ")", "->", "Dict", "[", "str", ",", "_Record_Type", "]", ":", "\n", "        ", "\"\"\"\n        return current training status from \"ind_meters\"\n        :param group_name:\n        :return:\n        \"\"\"", "\n", "if", "group_name", ":", "\n", "            ", "assert", "group_name", "in", "self", ".", "group", "\n", "return", "{", "\n", "k", ":", "v", ".", "detailed_summary", "(", ")", "if", "detailed_summary", "else", "v", ".", "summary", "(", ")", "\n", "for", "k", ",", "v", "in", "self", ".", "meters", ".", "items", "(", ")", "\n", "if", "k", "in", "self", ".", "_group_dicts", "[", "group_name", "]", "\n", "}", "\n", "", "return", "{", "\n", "k", ":", "v", ".", "detailed_summary", "(", ")", "if", "detailed_summary", "else", "v", ".", "summary", "(", ")", "\n", "for", "k", ",", "v", "in", "self", ".", "meters", ".", "items", "(", ")", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInteractMixin.reset": [[36, 43], ["meter_interface.MeterInteractMixin._ind_meter_dicts.values", "v.reset"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.reset"], ["", "def", "reset", "(", "self", ")", "->", "None", ":", "\n", "        ", "\"\"\"\n        reset individual meters\n        :return: None\n        \"\"\"", "\n", "for", "v", "in", "self", ".", "_ind_meter_dicts", ".", "values", "(", ")", ":", "\n", "            ", "v", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInterface.__init__": [[51, 57], ["collections.OrderedDict", "collections.OrderedDict"], "methods", ["None"], ["def", "__init__", "(", "self", ")", "->", "None", ":", "\n", "        ", "\"\"\"\n        :param meter_config: a dict of individual meter configurations\n        \"\"\"", "\n", "self", ".", "_ind_meter_dicts", ":", "Dict", "[", "str", ",", "_Metric", "]", "=", "OrderedDict", "(", ")", "\n", "self", ".", "_group_dicts", ":", "Dict", "[", "str", ",", "List", "[", "str", "]", "]", "=", "OrderedDict", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInterface.__getitem__": [[58, 63], ["KeyError"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "meter_name", ":", "str", ")", "->", "_Metric", ":", "\n", "        ", "try", ":", "\n", "            ", "return", "self", ".", "_ind_meter_dicts", "[", "meter_name", "]", "\n", "", "except", "KeyError", "as", "e", ":", "\n", "            ", "raise", "KeyError", "(", "f\"meter_interface.meter_names:{self.meter_names} with error {e}\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInterface.register_meter": [[64, 75], ["isinstance", "isinstance", "meter_interface.MeterInterface._group_dicts[].append"], "methods", ["None"], ["", "", "def", "register_meter", "(", "self", ",", "name", ":", "str", ",", "meter", ":", "_Metric", ",", "group_name", "=", "None", ")", "->", "None", ":", "\n", "        ", "assert", "isinstance", "(", "name", ",", "str", ")", ",", "name", "\n", "assert", "isinstance", "(", "\n", "meter", ",", "_Metric", "\n", ")", ",", "f\"{meter.__class__.__name__} should be a subclass of {_Metric.__class__.__name__}, given {meter}.\"", "\n", "# add meters", "\n", "self", ".", "_ind_meter_dicts", "[", "name", "]", "=", "meter", "\n", "if", "group_name", "is", "not", "None", ":", "\n", "            ", "if", "group_name", "not", "in", "self", ".", "_group_dicts", ":", "\n", "                ", "self", ".", "_group_dicts", "[", "group_name", "]", "=", "[", "]", "\n", "", "self", ".", "_group_dicts", "[", "group_name", "]", ".", "append", "(", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInterface.delete_meter": [[76, 84], ["meter_interface.MeterInterface._group_dicts.items", "meter_namelist.remove"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.IICLossWrapper.items"], ["", "", "def", "delete_meter", "(", "self", ",", "name", ":", "str", ")", "->", "None", ":", "\n", "        ", "assert", "(", "\n", "name", "in", "self", ".", "meter_names", "\n", ")", ",", "f\"{name} should be in `meter_names`: {self.meter_names}, given {name}.\"", "\n", "del", "self", ".", "_ind_meter_dicts", "[", "name", "]", "\n", "for", "group", ",", "meter_namelist", "in", "self", ".", "_group_dicts", ".", "items", "(", ")", ":", "\n", "            ", "if", "name", "in", "meter_namelist", ":", "\n", "                ", "meter_namelist", ".", "remove", "(", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInterface.delete_meters": [[85, 91], ["isinstance", "meter_interface.MeterInterface.delete_meter"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInterface.delete_meter"], ["", "", "", "def", "delete_meters", "(", "self", ",", "name_list", ":", "List", "[", "str", "]", ")", ":", "\n", "        ", "assert", "isinstance", "(", "\n", "name_list", ",", "list", "\n", ")", ",", "f\" name_list must be a list of str, given {name_list}.\"", "\n", "for", "name", "in", "name_list", ":", "\n", "            ", "self", ".", "delete_meter", "(", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInterface.meter_names": [[92, 96], ["hasattr", "list", "meter_interface.MeterInterface._ind_meter_dicts.keys"], "methods", ["None"], ["", "", "@", "property", "\n", "def", "meter_names", "(", "self", ")", "->", "List", "[", "str", "]", ":", "\n", "        ", "if", "hasattr", "(", "self", ",", "\"_ind_meter_dicts\"", ")", ":", "\n", "            ", "return", "list", "(", "self", ".", "_ind_meter_dicts", ".", "keys", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInterface.meters": [[97, 101], ["hasattr"], "methods", ["None"], ["", "", "@", "property", "\n", "def", "meters", "(", "self", ")", "->", "Optional", "[", "Dict", "[", "str", ",", "_Metric", "]", "]", ":", "\n", "        ", "if", "hasattr", "(", "self", ",", "\"_ind_meter_dicts\"", ")", ":", "\n", "            ", "return", "self", ".", "_ind_meter_dicts", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInterface.group": [[102, 105], ["sorted", "meter_interface.MeterInterface._group_dicts.keys"], "methods", ["None"], ["", "", "@", "property", "\n", "def", "group", "(", "self", ")", "->", "List", "[", "str", "]", ":", "\n", "        ", "return", "sorted", "(", "self", ".", "_group_dicts", ".", "keys", "(", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters._metric._Metric.reset": [[10, 13], ["None"], "methods", ["None"], ["@", "abstractmethod", "\n", "def", "reset", "(", "self", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters._metric._Metric.add": [[14, 17], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "add", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters._metric._Metric.summary": [[22, 25], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "summary", "(", "self", ")", "->", "dict", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters._metric._Metric.detailed_summary": [[26, 29], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "detailed_summary", "(", "self", ")", "->", "dict", ":", "\n", "        ", "pass", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.iou.IoU.__init__": [[26, 42], ["_metric._Metric.__init__", "confusionmatrix.ConfusionMatrix", "isinstance", "tuple", "ValueError"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["def", "__init__", "(", "self", ",", "num_classes", ",", "normalized", "=", "False", ",", "ignore_index", "=", "255", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "conf_metric", "=", "ConfusionMatrix", "(", "\n", "num_classes", ",", "ignore_index", "=", "ignore_index", ",", "normalized", "=", "normalized", "\n", ")", "\n", "\n", "if", "ignore_index", "is", "None", ":", "\n", "            ", "self", ".", "ignore_index", "=", "None", "\n", "", "elif", "isinstance", "(", "ignore_index", ",", "int", ")", ":", "\n", "            ", "self", ".", "ignore_index", "=", "(", "ignore_index", ",", ")", "\n", "", "else", ":", "\n", "            ", "try", ":", "\n", "                ", "self", ".", "ignore_index", "=", "tuple", "(", "ignore_index", ")", "\n", "", "except", "TypeError", ":", "\n", "                ", "raise", "ValueError", "(", "\"'ignore_index' must be an int or iterable\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.iou.IoU.reset": [[43, 45], ["iou.IoU.conf_metric.reset"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.reset"], ["", "", "", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "conf_metric", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.iou.IoU.add": [[46, 76], ["iou.IoU.conf_metric.add", "predicted.size", "target.size", "predicted.dim", "predicted.max", "predicted.view", "target.long().view", "predicted.dim", "predicted.dim", "target.dim", "target.dim", "target.long"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.add"], ["", "def", "add", "(", "self", ",", "predicted", ",", "target", ")", ":", "\n", "        ", "\"\"\"Adds the predicted and target pair to the IoU metric.\n\n        Keyword arguments:\n        - predicted (Tensor): Can be a (N, K, H, W) tensor of\n        predicted scores obtained from the model for N examples and K classes,\n        or (N, H, W) tensor of integer values between 0 and K-1.\n        - target (Tensor): Can be a (N, K, H, W) tensor of\n        target scores for N examples and K classes, or (N, H, W) tensor of\n        integer values between 0 and K-1.\n\n        \"\"\"", "\n", "# Dimensions check", "\n", "assert", "predicted", ".", "size", "(", "0", ")", "==", "target", ".", "size", "(", "\n", "0", "\n", ")", ",", "\"number of targets and predicted outputs do not match\"", "\n", "assert", "(", "\n", "predicted", ".", "dim", "(", ")", "==", "3", "or", "predicted", ".", "dim", "(", ")", "==", "4", "\n", ")", ",", "\"predictions must be of dimension (N, H, W) or (N, K, H, W)\"", "\n", "assert", "(", "\n", "target", ".", "dim", "(", ")", "==", "3", "or", "target", ".", "dim", "(", ")", "==", "4", "\n", ")", ",", "\"targets must be of dimension (N, H, W) or (N, K, H, W)\"", "\n", "\n", "# If the tensor is in categorical format convert it to integer format", "\n", "if", "predicted", ".", "dim", "(", ")", "==", "4", ":", "\n", "            ", "_", ",", "predicted", "=", "predicted", ".", "max", "(", "1", ")", "\n", "# if target.dim() == 4:", "\n", "#     _, target = target.max(1)", "\n", "\n", "", "self", ".", "conf_metric", ".", "add", "(", "predicted", ".", "view", "(", "-", "1", ")", ",", "target", ".", "long", "(", ")", ".", "view", "(", "-", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.iou.IoU.value": [[77, 121], ["iou.IoU.conf_metric.value", "numpy.nanmean", "numpy.nanmean", "numpy.diag().sum", "iou.IoU.sum", "numpy.diag", "iou.IoU.sum", "iou.IoU.sum", "iou.IoU.sum", "iou.IoU.sum", "numpy.nanmean", "torch.from_numpy().float", "numpy.diag", "numpy.diag", "numpy.diag", "torch.from_numpy", "iou.IoU.sum", "iou.IoU.sum"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.value"], ["", "def", "value", "(", "self", ")", ":", "\n", "        ", "\"\"\"Computes the IoU and mean IoU.\n\n        The mean computation ignores NaN elements of the IoU array.\n\n        Returns:\n            Tuple: (IoU, mIoU). The first output is the per class IoU,\n            for K classes it's numpy.ndarray with K elements. The second output,\n            is the mean IoU.\n        \"\"\"", "\n", "hist", "=", "self", ".", "conf_metric", ".", "value", "(", ")", "\n", "# if self.ignore_index is not None:", "\n", "#     for index in self.ignore_index:", "\n", "#         conf_matrix[:, self.ignore_index] = 0", "\n", "#         conf_matrix[self.ignore_index, :] = 0", "\n", "# true_positive = np.diag(conf_matrix)", "\n", "# false_positive = np.sum(conf_matrix, 0) - true_positive", "\n", "# false_negative = np.sum(conf_matrix, 1) - true_positive", "\n", "#", "\n", "# # Just in case we get a division by 0, ignore/hide the error", "\n", "# with np.errstate(divide='ignore', invalid='ignore'):", "\n", "#     iou = true_positive / (true_positive + false_positive + false_negative)", "\n", "#", "\n", "# ## this mean_iou doesn't consider whether the class has been in the gt.", "\n", "\n", "acc", "=", "np", ".", "diag", "(", "hist", ")", ".", "sum", "(", ")", "/", "hist", ".", "sum", "(", ")", "\n", "acc_cls", "=", "np", ".", "diag", "(", "hist", ")", "/", "hist", ".", "sum", "(", "axis", "=", "1", ")", "\n", "acc_cls", "=", "np", ".", "nanmean", "(", "acc_cls", ")", "\n", "iu", "=", "(", "np", ".", "diag", "(", "hist", ")", "+", "1e-16", ")", "/", "(", "\n", "hist", ".", "sum", "(", "axis", "=", "1", ")", "+", "hist", ".", "sum", "(", "axis", "=", "0", ")", "-", "np", ".", "diag", "(", "hist", ")", "+", "1e-16", "\n", ")", "\n", "valid", "=", "hist", ".", "sum", "(", "axis", "=", "1", ")", ">", "0", "# added  \u6a2a\u7740\u52a0", "\n", "mean_iu", "=", "np", ".", "nanmean", "(", "iu", "[", "valid", "]", ")", "# gt \u51fa\u73b0\u8fc7\u7684mean_iu", "\n", "freq", "=", "hist", ".", "sum", "(", "axis", "=", "1", ")", "/", "hist", ".", "sum", "(", ")", "\n", "fwavacc", "=", "(", "freq", "[", "freq", ">", "0", "]", "*", "iu", "[", "freq", ">", "0", "]", ")", ".", "sum", "(", ")", "\n", "# cls_iu = dict(zip(range(n_class), iu))", "\n", "cls_iu", "=", "iu", "\n", "return", "{", "\n", "\"Overall_Acc\"", ":", "acc", ",", "\n", "\"Mean_Acc\"", ":", "acc_cls", ",", "\n", "\"FreqW_Acc\"", ":", "fwavacc", ",", "\n", "\"Validated_Mean_IoU\"", ":", "mean_iu", ",", "\n", "\"Mean_IoU\"", ":", "np", ".", "nanmean", "(", "iu", ")", ",", "\n", "\"Class_IoU\"", ":", "torch", ".", "from_numpy", "(", "cls_iu", ")", ".", "float", "(", ")", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.iou.IoU.summary": [[123, 127], ["zip", "range", "iou.IoU.value"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.value"], ["", "def", "summary", "(", "self", ")", "->", "dict", ":", "\n", "        ", "return", "{", "\n", "f\"{k}\"", ":", "v", "\n", "for", "k", ",", "v", "in", "zip", "(", "range", "(", "self", ".", "num_classes", ")", ",", "self", ".", "value", "(", ")", "[", "\"Class_IoU\"", "]", ")", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.cache.Cache.__init__": [[12, 15], ["_metric._Metric.__init__"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["def", "__init__", "(", "self", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "log", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.cache.Cache.reset": [[16, 18], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "log", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.cache.Cache.add": [[19, 21], ["cache.Cache.log.append"], "methods", ["None"], ["", "def", "add", "(", "self", ",", "input", ")", ":", "\n", "        ", "self", ".", "log", ".", "append", "(", "input", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.cache.Cache.value": [[22, 24], ["len"], "methods", ["None"], ["", "def", "value", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "log", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.cache.Cache.summary": [[25, 27], ["cache.Cache.log.__len__"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.LocalClusterWrappaer.__len__"], ["", "def", "summary", "(", "self", ")", "->", "dict", ":", "\n", "        ", "return", "{", "\"total elements\"", ":", "self", ".", "log", ".", "__len__", "(", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.cache.Cache.detailed_summary": [[28, 30], ["cache.Cache.summary"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.kappa.KappaMetrics.summary"], ["", "def", "detailed_summary", "(", "self", ")", "->", "dict", ":", "\n", "        ", "return", "self", ".", "summary", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.cache.AveragewithStd.add": [[37, 47], ["torch.is_tensor", "cache.Cache.add", "isinstance", "input.cpu().item.cpu().item.cpu().item", "isinstance", "isinstance", "input.cpu().item.cpu().item.shape.__len__", "input.cpu().item.cpu().item.shape.__len__", "input.cpu().item.cpu().item.cpu"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.add", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.LocalClusterWrappaer.__len__", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.LocalClusterWrappaer.__len__"], ["def", "add", "(", "self", ",", "input", ")", ":", "\n", "        ", "assert", "(", "\n", "isinstance", "(", "input", ",", "Number", ")", "\n", "or", "(", "isinstance", "(", "input", ",", "torch", ".", "Tensor", ")", "and", "input", ".", "shape", ".", "__len__", "(", ")", "<=", "1", ")", "\n", "or", "(", "isinstance", "(", "input", ",", "np", ".", "ndarray", ")", "and", "input", ".", "shape", ".", "__len__", "(", ")", "<=", "1", ")", "\n", ")", "\n", "if", "torch", ".", "is_tensor", "(", "input", ")", ":", "\n", "            ", "input", "=", "input", ".", "cpu", "(", ")", ".", "item", "(", ")", "\n", "\n", "", "super", "(", ")", ".", "add", "(", "input", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.cache.AveragewithStd.value": [[48, 50], ["torch.Tensor().mean().item", "torch.Tensor().mean", "torch.Tensor"], "methods", ["None"], ["", "def", "value", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "torch", ".", "Tensor", "(", "self", ".", "log", ")", ".", "mean", "(", ")", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.cache.AveragewithStd.summary": [[51, 59], ["torch.Tensor", "torch.Tensor.mean", "torch.Tensor.std", "torch.Tensor.mean.item", "torch.Tensor.mean.item", "torch.Tensor.std.item", "torch.Tensor.mean.item", "torch.Tensor.std.item"], "methods", ["None"], ["", "def", "summary", "(", "self", ")", "->", "dict", ":", "\n", "        ", "torch_log", "=", "torch", ".", "Tensor", "(", "self", ".", "log", ")", "\n", "mean", "=", "torch_log", ".", "mean", "(", ")", "\n", "std", "=", "torch_log", ".", "std", "(", ")", "\n", "return", "{", "\n", "\"mean\"", ":", "mean", ".", "item", "(", ")", ",", "\n", "\"lstd\"", ":", "mean", ".", "item", "(", ")", "-", "std", ".", "item", "(", ")", ",", "\n", "\"hstd\"", ":", "mean", ".", "item", "(", ")", "+", "std", ".", "item", "(", ")", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.surface_meter.SurfaceMeter.__init__": [[29, 48], ["deepclustering2.meters2._metric._Metric.__init__", "list", "surface_meter.SurfaceMeter.reset", "isinstance", "range", "surface_meter.SurfaceMeter.meter_choices.keys", "type", "max"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.reset"], ["def", "__init__", "(", "self", ",", "C", "=", "4", ",", "report_axises", "=", "None", ",", "metername", ":", "str", "=", "\"hausdorff\"", ")", "->", "None", ":", "\n", "        ", "super", "(", "SurfaceMeter", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "report_axises", "is", "None", "or", "isinstance", "(", "\n", "report_axises", ",", "(", "list", ",", "tuple", ")", "\n", ")", ",", "f\"`report_axises` should be either None or an iterator, given {type(report_axises)}\"", "\n", "if", "report_axises", "is", "not", "None", ":", "\n", "            ", "assert", "max", "(", "report_axises", ")", "<=", "C", ",", "(", "\n", "\"Incompatible parameter of `C`={} and \"", "\n", "\"`report_axises`={}\"", ".", "format", "(", "C", ",", "report_axises", ")", "\n", ")", "\n", "", "self", ".", "_C", "=", "C", "\n", "self", ".", "_report_axis", "=", "list", "(", "range", "(", "self", ".", "_C", ")", ")", "\n", "if", "report_axises", "is", "not", "None", ":", "\n", "            ", "self", ".", "_report_axis", "=", "report_axises", "\n", "", "assert", "metername", "in", "self", ".", "meter_choices", ".", "keys", "(", ")", "\n", "self", ".", "_surface_name", "=", "metername", "\n", "self", ".", "_abbr", "=", "self", ".", "abbr", "[", "metername", "]", "\n", "self", ".", "_surface_function", "=", "self", ".", "meter_choices", "[", "metername", "]", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.surface_meter.SurfaceMeter.reset": [[49, 52], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "_mhd", "=", "[", "]", "\n", "self", ".", "_n", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.surface_meter.SurfaceMeter.add": [[53, 79], ["surface_meter.SurfaceMeter._convert2onehot", "surface_meter.SurfaceMeter._evalue", "surface_meter.SurfaceMeter._mhd.append", "len"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.general_dice_meter.UniversalDice._convert2onehot", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.surface_meter.SurfaceMeter._evalue"], ["", "def", "add", "(", "\n", "self", ",", "\n", "pred", ":", "Tensor", ",", "\n", "target", ":", "Tensor", ",", "\n", "voxelspacing", ":", "Union", "[", "List", "[", "float", "]", ",", "float", "]", "=", "None", ",", "\n", ")", ":", "\n", "        ", "\"\"\"\n        add pred and target\n        :param pred: class- or onehot-coded tensor of the same shape as the target\n        :param target: class- or onehot-coded tensor of the same shape as the pred\n        : res: resolution for different dimension\n        :return:\n        \"\"\"", "\n", "assert", "pred", ".", "shape", "==", "target", ".", "shape", ",", "(", "\n", "f\"incompatible shape of `pred` and `target`, given \"", "\n", "f\"{pred.shape} and {target.shape}.\"", "\n", ")", "\n", "assert", "not", "pred", ".", "requires_grad", "and", "not", "target", ".", "requires_grad", "\n", "\n", "onehot_pred", ",", "onehot_target", "=", "self", ".", "_convert2onehot", "(", "pred", ",", "target", ")", "\n", "B", ",", "C", ",", "*", "hw", "=", "onehot_pred", ".", "shape", "\n", "assert", "C", "==", "self", ".", "_C", ",", "C", "\n", "mhd", "=", "self", ".", "_evalue", "(", "onehot_pred", ",", "onehot_target", ",", "voxelspacing", ")", "\n", "assert", "mhd", ".", "shape", "==", "(", "B", ",", "len", "(", "self", ".", "_report_axis", ")", ")", "\n", "self", ".", "_mhd", ".", "append", "(", "mhd", ")", "\n", "self", ".", "_n", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.surface_meter.SurfaceMeter.value": [[80, 85], ["numpy.concatenate", "numpy.concatenate.mean", "numpy.concatenate.std"], "methods", ["None"], ["", "def", "value", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "self", ".", "_n", "==", "0", ":", "\n", "            ", "return", "(", "[", "np", ".", "nan", "]", "*", "self", ".", "_C", ",", "[", "np", ".", "nan", "]", "*", "self", ".", "_C", ")", "\n", "", "mhd", "=", "np", ".", "concatenate", "(", "self", ".", "_mhd", ",", "axis", "=", "0", ")", "\n", "return", "(", "mhd", ".", "mean", "(", "0", ")", ",", "mhd", ".", "std", "(", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.surface_meter.SurfaceMeter.summary": [[86, 91], ["surface_meter.SurfaceMeter.value", "deepclustering2.utils.to_float", "enumerate"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.value"], ["", "def", "summary", "(", "self", ")", "->", "dict", ":", "\n", "        ", "means", ",", "stds", "=", "self", ".", "value", "(", ")", "\n", "return", "{", "\n", "f\"{self._abbr}{i}\"", ":", "to_float", "(", "means", "[", "num", "]", ")", "\n", "for", "num", ",", "i", "in", "enumerate", "(", "self", ".", "_report_axis", ")", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.surface_meter.SurfaceMeter.detailed_summary": [[93, 103], ["surface_meter.SurfaceMeter.value", "deepclustering2.utils.to_float", "deepclustering2.utils.to_float", "enumerate", "stds[].item", "enumerate"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.value"], ["", "def", "detailed_summary", "(", "self", ")", "->", "dict", ":", "\n", "        ", "means", ",", "stds", "=", "self", ".", "value", "(", ")", "\n", "return", "{", "\n", "**", "{", "\n", "f\"{self._abbr}{i}\"", ":", "to_float", "(", "means", "[", "num", "]", ")", "\n", "for", "num", ",", "i", "in", "enumerate", "(", "self", ".", "_report_axis", ")", "\n", "}", ",", "\n", "**", "{", "\n", "f\"{self._abbr}{i}\"", ":", "to_float", "(", "stds", "[", "num", "]", ".", "item", "(", ")", ")", "\n", "for", "num", ",", "i", "in", "enumerate", "(", "self", ".", "_report_axis", ")", "\n", "}", ",", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.surface_meter.SurfaceMeter._evalue": [[106, 126], ["numpy.zeros", "enumerate", "deepclustering2.utils.one_hot", "deepclustering2.utils.one_hot", "zip", "enumerate", "len", "zip", "surface_meter.SurfaceMeter._surface_function"], "methods", ["None"], ["", "def", "_evalue", "(", "self", ",", "pred", ":", "Tensor", ",", "target", ":", "Tensor", ",", "voxelspacing", ")", ":", "\n", "        ", "\"\"\"\n        return the B\\times C list\n        :param pred: onehot pred\n        :param target: onehot target\n        :return: tensor of size B x C of type np.array\n        \"\"\"", "\n", "assert", "pred", ".", "shape", "==", "target", ".", "shape", "\n", "assert", "one_hot", "(", "pred", ",", "axis", "=", "1", ")", "and", "one_hot", "(", "target", ",", "axis", "=", "1", ")", "\n", "B", ",", "C", ",", "*", "hw", "=", "pred", ".", "shape", "\n", "result", "=", "np", ".", "zeros", "(", "[", "B", ",", "len", "(", "self", ".", "_report_axis", ")", "]", ")", "\n", "for", "b", ",", "(", "one_batch_img", ",", "one_batch_gt", ")", "in", "enumerate", "(", "zip", "(", "pred", ",", "target", ")", ")", ":", "\n", "            ", "for", "c", ",", "(", "one_slice_img", ",", "one_slice_gt", ")", "in", "enumerate", "(", "\n", "zip", "(", "one_batch_img", "[", "self", ".", "_report_axis", "]", ",", "one_batch_gt", "[", "self", ".", "_report_axis", "]", ")", "\n", ")", ":", "\n", "                ", "mhd", "=", "self", ".", "_surface_function", "(", "\n", "one_slice_img", ",", "one_slice_gt", ",", "voxelspacing", "=", "voxelspacing", "\n", ")", "\n", "result", "[", "b", ",", "c", "]", "=", "mhd", "\n", "", "", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.surface_meter.SurfaceMeter._convert2onehot": [[127, 137], ["deepclustering2.utils.simplex", "deepclustering2.utils.one_hot", "deepclustering2.utils.class2one_hot().long", "deepclustering2.utils.class2one_hot().long", "deepclustering2.utils.probs2one_hot().long", "target.long", "deepclustering2.utils.class2one_hot", "deepclustering2.utils.class2one_hot", "deepclustering2.utils.probs2one_hot"], "methods", ["None"], ["", "def", "_convert2onehot", "(", "self", ",", "pred", ":", "Tensor", ",", "target", ":", "Tensor", ")", ":", "\n", "# only two possibility: both onehot or both class-coded.", "\n", "        ", "assert", "pred", ".", "shape", "==", "target", ".", "shape", "\n", "# if they are onehot-coded:", "\n", "if", "simplex", "(", "pred", ",", "1", ")", "and", "one_hot", "(", "target", ")", ":", "\n", "            ", "return", "probs2one_hot", "(", "pred", ")", ".", "long", "(", ")", ",", "target", ".", "long", "(", ")", "\n", "# here the pred and target are labeled long", "\n", "", "return", "(", "\n", "class2one_hot", "(", "pred", ",", "self", ".", "_C", ")", ".", "long", "(", ")", ",", "\n", "class2one_hot", "(", "target", ",", "self", ".", "_C", ")", ".", "long", "(", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.surface_meter.SurfaceMeter.get_plot_names": [[139, 141], ["enumerate"], "methods", ["None"], ["", "def", "get_plot_names", "(", "self", ")", "->", "List", "[", "str", "]", ":", "\n", "        ", "return", "[", "f\"{self._abbr}{i}\"", "for", "num", ",", "i", "in", "enumerate", "(", "self", ".", "_report_axis", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.surface_meter.SurfaceMeter.__repr__": [[142, 146], ["surface_meter.SurfaceMeter.summary().items", "surface_meter.SurfaceMeter.summary"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.IICLossWrapper.items", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.kappa.KappaMetrics.summary"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "string", "=", "f\"C={self._C}, report_axis={self._report_axis}\\n\"", "\n", "return", "(", "\n", "string", "+", "\"\\t\"", "+", "\"\\t\"", ".", "join", "(", "[", "f\"{k}:{v}\"", "for", "k", ",", "v", "in", "self", ".", "summary", "(", ")", ".", "items", "(", ")", "]", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.dicemeter._DiceMeter.__init__": [[32, 47], ["_metric._Metric.__init__", "list", "isinstance", "range", "max"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["    ", "def", "__init__", "(", "self", ",", "call_function", ",", "C", "=", "4", ",", "report_axises", "=", "None", ")", "->", "None", ":", "\n", "        ", "super", "(", "_DiceMeter", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "report_axises", "is", "None", "or", "isinstance", "(", "report_axises", ",", "(", "list", ",", "tuple", ")", ")", "\n", "if", "report_axises", "is", "not", "None", ":", "\n", "            ", "assert", "max", "(", "report_axises", ")", "<=", "C", ",", "(", "\n", "\"Incompatible parameter of `C`={} and \"", "\n", "\"`report_axises`={}\"", ".", "format", "(", "C", ",", "report_axises", ")", "\n", ")", "\n", "", "self", ".", "_C", "=", "C", "\n", "self", ".", "_report_axis", "=", "list", "(", "range", "(", "self", ".", "_C", ")", ")", "\n", "if", "report_axises", "is", "not", "None", ":", "\n", "            ", "self", ".", "_report_axis", "=", "report_axises", "\n", "", "self", ".", "_diceCallFunction", "=", "call_function", "\n", "self", ".", "_diceLog", "=", "[", "]", "# type: ignore", "\n", "self", ".", "_n", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.dicemeter._DiceMeter.reset": [[48, 51], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "_diceLog", "=", "[", "]", "# type: ignore", "\n", "self", ".", "_n", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.dicemeter._DiceMeter.add": [[52, 69], ["dicemeter._DiceMeter._diceCallFunction", "dicemeter._DiceMeter._diceLog.append", "pred_logit.shape.__len__", "gt.squeeze.squeeze.shape.__len__", "gt.squeeze.squeeze.squeeze", "gt.squeeze.squeeze.shape.__len__", "dice_value.unsqueeze.unsqueeze.shape.__len__", "dice_value.unsqueeze.unsqueeze.unsqueeze", "dice_value.unsqueeze.unsqueeze.shape.__len__", "dicemeter.toOneHot"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.LocalClusterWrappaer.__len__", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.LocalClusterWrappaer.__len__", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.LocalClusterWrappaer.__len__", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.LocalClusterWrappaer.__len__", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.LocalClusterWrappaer.__len__", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.dicemeter.toOneHot"], ["", "def", "add", "(", "self", ",", "pred_logit", ":", "Tensor", ",", "gt", ":", "Tensor", ")", ":", "\n", "        ", "\"\"\"\n        call class2one_hot to convert onehot to input.\n        :param pred_logit: predicton, can be simplex or logit with shape b, c, h, w\n        :param gt: ground truth label with shape b, h, w or b, 1, h, w\n        :return:\n        \"\"\"", "\n", "assert", "pred_logit", ".", "shape", ".", "__len__", "(", ")", "==", "4", ",", "f\"pred_logit shape:{pred_logit.shape}\"", "\n", "if", "gt", ".", "shape", ".", "__len__", "(", ")", "==", "4", ":", "\n", "            ", "gt", "=", "gt", ".", "squeeze", "(", "2", ")", "\n", "", "assert", "gt", ".", "shape", ".", "__len__", "(", ")", "==", "3", "\n", "dice_value", "=", "self", ".", "_diceCallFunction", "(", "*", "toOneHot", "(", "pred_logit", ",", "gt", ")", ")", "\n", "if", "dice_value", ".", "shape", ".", "__len__", "(", ")", "==", "1", ":", "\n", "            ", "dice_value", "=", "dice_value", ".", "unsqueeze", "(", "0", ")", "\n", "", "assert", "dice_value", ".", "shape", ".", "__len__", "(", ")", "==", "2", "\n", "self", ".", "_diceLog", ".", "append", "(", "dice_value", ")", "\n", "self", ".", "_n", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.dicemeter._DiceMeter.value": [[70, 81], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.mean", "torch.cat.mean", "torch.cat.std", "torch.cat.std", "log[].mean", "log[].mean.std", "log[].mean.mean"], "methods", ["None"], ["", "def", "value", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "_n", ">", "0", ":", "\n", "            ", "log", "=", "torch", ".", "cat", "(", "self", ".", "_diceLog", ")", "\n", "means", "=", "log", ".", "mean", "(", "0", ")", "\n", "stds", "=", "log", ".", "std", "(", "0", ")", "\n", "report_means", "=", "log", "[", ":", ",", "self", ".", "_report_axis", "]", ".", "mean", "(", "1", ")", "\n", "report_std", "=", "report_means", ".", "std", "(", ")", "\n", "report_mean", "=", "report_means", ".", "mean", "(", ")", "\n", "return", "(", "report_mean", ",", "report_std", ")", ",", "(", "means", ",", "stds", ")", "\n", "", "else", ":", "\n", "            ", "return", "(", "np", ".", "nan", ",", "np", ".", "nan", ")", ",", "(", "[", "np", ".", "nan", "]", "*", "self", ".", "_C", ",", "[", "np", ".", "nan", "]", "*", "self", ".", "_C", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.dicemeter._DiceMeter.detailed_summary": [[82, 85], ["dicemeter._DiceMeter.value", "deepclustering2.utils.typecheckconvert.to_float", "range", "len"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.value"], ["", "", "def", "detailed_summary", "(", "self", ")", "->", "dict", ":", "\n", "        ", "_", ",", "(", "means", ",", "_", ")", "=", "self", ".", "value", "(", ")", "\n", "return", "{", "f\"DSC{i}\"", ":", "to_float", "(", "means", "[", "i", "]", ")", "for", "i", "in", "range", "(", "len", "(", "means", ")", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.dicemeter._DiceMeter.summary": [[86, 89], ["dicemeter._DiceMeter.value", "deepclustering2.utils.typecheckconvert.to_float"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.value"], ["", "def", "summary", "(", "self", ")", "->", "dict", ":", "\n", "        ", "_", ",", "(", "means", ",", "_", ")", "=", "self", ".", "value", "(", ")", "\n", "return", "{", "f\"DSC{i}\"", ":", "to_float", "(", "means", "[", "i", "]", ")", "for", "i", "in", "self", ".", "_report_axis", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.dicemeter._DiceMeter.get_plot_names": [[90, 92], ["None"], "methods", ["None"], ["", "def", "get_plot_names", "(", "self", ")", "->", "List", "[", "str", "]", ":", "\n", "        ", "return", "[", "f\"DSC{i}\"", "for", "i", "in", "self", ".", "_report_axis", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.dicemeter._DiceMeter.__repr__": [[93, 97], ["dicemeter._DiceMeter.summary().items", "dicemeter._DiceMeter.summary"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.IICLossWrapper.items", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.kappa.KappaMetrics.summary"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "string", "=", "f\"C={self._C}, report_axis={self._report_axis}\\n\"", "\n", "return", "(", "\n", "string", "+", "\"\\t\"", "+", "\"\\t\"", ".", "join", "(", "[", "f\"{k}:{v}\"", "for", "k", ",", "v", "in", "self", ".", "summary", "(", ")", ".", "items", "(", ")", "]", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.dicemeter.SliceDiceMeter.__init__": [[105, 107], ["dicemeter._DiceMeter.__init__"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["def", "__init__", "(", "self", ",", "C", "=", "4", ",", "report_axises", "=", "None", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "call_function", "=", "dice_coef", ",", "report_axises", "=", "report_axises", ",", "C", "=", "C", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.dicemeter.BatchDiceMeter.__init__": [[114, 116], ["dicemeter._DiceMeter.__init__"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["def", "__init__", "(", "self", ",", "C", "=", "4", ",", "report_axises", "=", "None", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "call_function", "=", "dice_batch", ",", "report_axises", "=", "report_axises", ",", "C", "=", "C", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.dicemeter.toOneHot": [[19, 29], ["deepclustering2.utils.probs2one_hot", "deepclustering2.utils.class2one_hot", "torch.softmax", "mask.squeeze"], "function", ["None"], ["def", "toOneHot", "(", "pred_logit", ",", "mask", ")", ":", "\n", "    ", "\"\"\"\n    :param pred_logit: logit with b,c, h, w. it is fine to pass simplex prediction or onehot.\n    :param mask: gt mask with b,h,w\n    :return: onehot presentation of prediction and mask, pred.shape == mask.shape == b,c, h , w\n    \"\"\"", "\n", "oh_predmask", "=", "probs2one_hot", "(", "F", ".", "softmax", "(", "pred_logit", ",", "1", ")", ")", "\n", "oh_mask", "=", "class2one_hot", "(", "mask", ".", "squeeze", "(", "1", ")", ",", "C", "=", "pred_logit", ".", "shape", "[", "1", "]", ")", "\n", "assert", "oh_predmask", ".", "shape", "==", "oh_mask", ".", "shape", "\n", "return", "oh_predmask", ",", "oh_mask", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.hausdorff.HaussdorffDistance.__init__": [[18, 23], ["_metric._Metric.__init__"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["def", "__init__", "(", "self", ",", "C", "=", "None", ",", "report_axises", "=", "None", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_haussdorff_log", ":", "List", "[", "Tensor", "]", "=", "[", "]", "\n", "self", ".", "_C", "=", "C", "\n", "self", ".", "_report_axises", "=", "report_axises", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.hausdorff.HaussdorffDistance.reset": [[24, 26], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "_haussdorff_log", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.hausdorff.HaussdorffDistance.add": [[27, 73], ["deepclustering2.utils.one_hot", "deepclustering2.utils.one_hot", "torch.zeros", "pred.cpu().numpy", "label.cpu().numpy", "range", "hausdorff.HaussdorffDistance._haussdorff_log.append", "len", "range", "pred.cpu", "label.cpu", "hausdorff.numpy_haussdorf", "hausdorff.numpy_haussdorf"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.hausdorff.numpy_haussdorf", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.hausdorff.numpy_haussdorf"], ["", "def", "add", "(", "\n", "self", ",", "\n", "pred", ":", "Tensor", ",", "\n", "label", ":", "Tensor", ",", "\n", "voxelspacing", ":", "Union", "[", "float", ",", "List", "[", "float", "]", "]", "=", "None", ",", "\n", ")", "->", "None", ":", "\n", "        ", "\"\"\"\n        Add function to add torch.Tensor for pred and label, which are all one-hot matrices.\n        :param pred: one-hot prediction matrix\n        :param label: one-hot label matrix\n        :param voxelspacing: voxel space for 2D slices\n        :return: None\n        \"\"\"", "\n", "assert", "one_hot", "(", "pred", ")", ",", "pred", "\n", "assert", "one_hot", "(", "label", ")", ",", "label", "\n", "assert", "(", "\n", "len", "(", "pred", ".", "shape", ")", "==", "4", "\n", ")", ",", "f\"Input tensor is restricted to 4-D tensor, given {pred.shape}.\"", "\n", "assert", "pred", ".", "shape", "==", "label", ".", "shape", ",", "(", "\n", "f\"The shape of pred and label should be the same, \"", "\n", "f\"given {pred.shape, label.shape}\"", "\n", ")", "\n", "B", ",", "C", ",", "_", ",", "_", "=", "pred", ".", "shape", "# here we only accept 4 dimensional input.", "\n", "if", "self", ".", "_C", "is", "None", ":", "\n", "            ", "self", ".", "_C", "=", "C", "\n", "", "else", ":", "\n", "            ", "assert", "(", "\n", "self", ".", "_C", "==", "C", "\n", ")", ",", "f\"Input dimension C: {C} is not consistent with the registered C:{self._C}\"", "\n", "\n", "", "res", "=", "torch", ".", "zeros", "(", "(", "B", ",", "C", ")", ",", "dtype", "=", "torch", ".", "float32", ",", "device", "=", "pred", ".", "device", ")", "\n", "n_pred", "=", "pred", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "n_target", "=", "label", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "for", "b", "in", "range", "(", "B", ")", ":", "\n", "            ", "if", "C", "==", "2", ":", "\n", "                ", "res", "[", "b", ",", ":", "]", "=", "numpy_haussdorf", "(", "\n", "n_pred", "[", "b", ",", "0", "]", ",", "n_target", "[", "b", ",", "0", "]", ",", "voxelspacing", "=", "voxelspacing", "\n", ")", "\n", "continue", "\n", "\n", "", "for", "c", "in", "range", "(", "C", ")", ":", "\n", "                ", "res", "[", "b", ",", "c", "]", "=", "numpy_haussdorf", "(", "\n", "n_pred", "[", "b", ",", "c", "]", ",", "n_target", "[", "b", ",", "c", "]", ",", "voxelspacing", "=", "voxelspacing", "\n", ")", "\n", "\n", "", "", "self", ".", "_haussdorff_log", ".", "append", "(", "res", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.hausdorff.HaussdorffDistance.value": [[74, 86], ["log.mean", "log.std", "report_means.std", "report_means.mean", "log.mean", "log[].mean"], "methods", ["None"], ["", "def", "value", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "log", ":", "Tensor", "=", "self", ".", "log", "\n", "means", "=", "log", ".", "mean", "(", "0", ")", "\n", "stds", "=", "log", ".", "std", "(", "0", ")", "\n", "report_means", "=", "(", "\n", "log", ".", "mean", "(", "1", ")", "\n", "if", "self", ".", "_report_axises", "==", "\"all\"", "\n", "else", "log", "[", ":", ",", "self", ".", "_report_axises", "]", ".", "mean", "(", "1", ")", "\n", ")", "\n", "report_std", "=", "report_means", ".", "std", "(", ")", "\n", "report_mean", "=", "report_means", ".", "mean", "(", ")", "\n", "return", "(", "report_mean", ",", "report_std", ")", ",", "(", "means", ",", "stds", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.hausdorff.HaussdorffDistance.summary": [[87, 98], ["hausdorff.HaussdorffDistance.value", "means[].item", "range"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.value"], ["", "def", "summary", "(", "self", ")", "->", "dict", ":", "\n", "        ", "if", "self", ".", "_report_axises", "is", "None", ":", "\n", "            ", "self", ".", "_report_axises", "=", "[", "\n", "i", "\n", "for", "i", "in", "range", "(", "\n", "self", ".", "_C", "if", "self", ".", "_C", "is", "not", "None", "else", "self", ".", "default_class_num", "\n", ")", "\n", "]", "\n", "\n", "", "_", ",", "(", "means", ",", "_", ")", "=", "self", ".", "value", "(", ")", "\n", "return", "{", "f\"HD{i}\"", ":", "means", "[", "i", "]", ".", "item", "(", ")", "for", "i", "in", "self", ".", "_report_axises", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.hausdorff.HaussdorffDistance.detailed_summary": [[99, 109], ["hausdorff.HaussdorffDistance.value", "means[].item", "range", "range", "len"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.value"], ["", "def", "detailed_summary", "(", "self", ")", "->", "dict", ":", "\n", "        ", "if", "self", ".", "_report_axises", "is", "None", ":", "\n", "            ", "self", ".", "_report_axises", "=", "[", "\n", "i", "\n", "for", "i", "in", "range", "(", "\n", "self", ".", "_C", "if", "self", ".", "_C", "is", "not", "None", "else", "self", ".", "default_class_num", "\n", ")", "\n", "]", "\n", "", "_", ",", "(", "means", ",", "_", ")", "=", "self", ".", "value", "(", ")", "\n", "return", "{", "f\"HD{i}\"", ":", "means", "[", "i", "]", ".", "item", "(", ")", "for", "i", "in", "range", "(", "len", "(", "means", ")", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.hausdorff.HaussdorffDistance.log": [[110, 129], ["torch.cat", "len", "warnings.warn", "torch.Tensor", "log.unsqueeze.unsqueeze.unsqueeze", "tuple", "range"], "methods", ["None"], ["", "@", "property", "\n", "def", "log", "(", "self", ")", ":", "\n", "        ", "try", ":", "\n", "            ", "log", "=", "torch", ".", "cat", "(", "self", ".", "_haussdorff_log", ")", "\n", "", "except", "RuntimeError", ":", "\n", "            ", "warnings", ".", "warn", "(", "f\"No log has been found\"", ",", "RuntimeWarning", ")", "\n", "log", "=", "torch", ".", "Tensor", "(", "\n", "tuple", "(", "\n", "[", "\n", "0", "\n", "for", "_", "in", "range", "(", "\n", "self", ".", "_C", "if", "self", ".", "_C", "is", "not", "None", "else", "self", ".", "default_class_num", "\n", ")", "\n", "]", "\n", ")", "\n", ")", "\n", "log", "=", "log", ".", "unsqueeze", "(", "0", ")", "\n", "", "assert", "len", "(", "log", ".", "shape", ")", "==", "2", "\n", "return", "log", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.hausdorff.numpy_haussdorf": [[131, 143], ["len", "medpy.metric.binary.hd"], "function", ["None"], ["", "", "def", "numpy_haussdorf", "(", "\n", "pred", ":", "np", ".", "ndarray", ",", "target", ":", "np", ".", "ndarray", ",", "voxelspacing", ":", "Union", "[", "float", ",", "List", "[", "float", "]", "]", "=", "None", "\n", ")", "->", "float", ":", "\n", "    ", "assert", "len", "(", "pred", ".", "shape", ")", "==", "2", "\n", "assert", "pred", ".", "shape", "==", "target", ".", "shape", "\n", "\n", "# h = max(directed_hausdorff(pred, target)[0], directed_hausdorff(target, pred)[0])", "\n", "try", ":", "\n", "        ", "h", "=", "hd", "(", "pred", ",", "target", ",", "voxelspacing", ")", "\n", "", "except", "RuntimeError", ":", "\n", "        ", "h", "=", "0", "\n", "", "return", "h", "\n", "", ""]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.surface_distance.hausdorff_distance": [[9, 15], ["medpy.metric.binary.__surface_distances", "medpy.metric.binary.__surface_distances", "max", "deepclustering.utils.typecheckconvert.to_numpy", "deepclustering.utils.typecheckconvert.to_numpy", "medpy.metric.binary.__surface_distances.max", "medpy.metric.binary.__surface_distances.max"], "function", ["None"], ["def", "hausdorff_distance", "(", "data1", ",", "data2", ",", "voxelspacing", "=", "None", ")", ":", "\n", "    ", "data1", ",", "data2", "=", "to_numpy", "(", "data1", ")", ",", "to_numpy", "(", "data2", ")", "\n", "hd1", "=", "__surface_distances", "(", "data1", ",", "data2", ",", "voxelspacing", ",", "connectivity", "=", "1", ")", "\n", "hd2", "=", "__surface_distances", "(", "data2", ",", "data1", ",", "voxelspacing", ",", "connectivity", "=", "1", ")", "\n", "hd", "=", "max", "(", "hd1", ".", "max", "(", ")", ",", "hd2", ".", "max", "(", ")", ")", "\n", "return", "hd", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.surface_distance.mod_hausdorff_distance": [[17, 25], ["medpy.metric.binary.__surface_distances", "medpy.metric.binary.__surface_distances", "numpy.percentile", "numpy.percentile", "max", "deepclustering.utils.typecheckconvert.to_numpy", "deepclustering.utils.typecheckconvert.to_numpy"], "function", ["None"], ["", "def", "mod_hausdorff_distance", "(", "data1", ",", "data2", ",", "voxelspacing", "=", "None", ",", "percentile", "=", "95", ")", ":", "\n", "    ", "data1", ",", "data2", "=", "to_numpy", "(", "data1", ")", ",", "to_numpy", "(", "data2", ")", "\n", "hd1", "=", "__surface_distances", "(", "data1", ",", "data2", ",", "voxelspacing", ",", "connectivity", "=", "1", ")", "\n", "hd2", "=", "__surface_distances", "(", "data2", ",", "data1", ",", "voxelspacing", ",", "connectivity", "=", "1", ")", "\n", "hd95_1", "=", "np", ".", "percentile", "(", "hd1", ",", "percentile", ")", "\n", "hd95_2", "=", "np", ".", "percentile", "(", "hd2", ",", "percentile", ")", "\n", "mhd", "=", "max", "(", "hd95_1", ",", "hd95_2", ")", "\n", "return", "mhd", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.surface_distance.average_surface_distance": [[27, 30], ["medpy.metric.assd", "deepclustering.utils.typecheckconvert.to_numpy", "deepclustering.utils.typecheckconvert.to_numpy"], "function", ["None"], ["", "def", "average_surface_distance", "(", "data1", ",", "data2", ",", "voxelspacing", "=", "None", ")", ":", "\n", "    ", "data1", ",", "data2", "=", "to_numpy", "(", "data1", ")", ",", "to_numpy", "(", "data2", ")", "\n", "return", "assd", "(", "data1", ",", "data2", ",", "voxelspacing", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.averagemeter.AverageValueMeter.__init__": [[9, 13], ["_metric._Metric.__init__", "averagemeter.AverageValueMeter.reset"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.reset"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "AverageValueMeter", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "reset", "(", ")", "\n", "self", ".", "val", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.averagemeter.AverageValueMeter.add": [[14, 32], ["numpy.sqrt", "float"], "methods", ["None"], ["", "def", "add", "(", "self", ",", "value", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "value", "\n", "self", ".", "sum", "+=", "value", "\n", "self", ".", "var", "+=", "value", "*", "value", "\n", "self", ".", "n", "+=", "n", "\n", "\n", "if", "self", ".", "n", "==", "0", ":", "\n", "            ", "self", ".", "mean", ",", "self", ".", "std", "=", "np", ".", "nan", ",", "np", ".", "nan", "\n", "", "elif", "self", ".", "n", "==", "1", ":", "\n", "            ", "self", ".", "mean", "=", "0.0", "+", "self", ".", "sum", "# This is to force a copy in torch/numpy", "\n", "self", ".", "std", "=", "np", ".", "inf", "\n", "self", ".", "mean_old", "=", "self", ".", "mean", "\n", "self", ".", "m_s", "=", "0.0", "\n", "", "else", ":", "\n", "            ", "self", ".", "mean", "=", "self", ".", "mean_old", "+", "(", "value", "-", "n", "*", "self", ".", "mean_old", ")", "/", "float", "(", "self", ".", "n", ")", "\n", "self", ".", "m_s", "+=", "(", "value", "-", "self", ".", "mean_old", ")", "*", "(", "value", "-", "self", ".", "mean", ")", "\n", "self", ".", "mean_old", "=", "self", ".", "mean", "\n", "self", ".", "std", "=", "np", ".", "sqrt", "(", "self", ".", "m_s", "/", "(", "self", ".", "n", "-", "1.0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.averagemeter.AverageValueMeter.value": [[33, 35], ["None"], "methods", ["None"], ["", "", "def", "value", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "mean", ",", "self", ".", "std", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.averagemeter.AverageValueMeter.reset": [[36, 45], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "n", "=", "0", "\n", "self", ".", "sum", "=", "0.0", "\n", "self", ".", "var", "=", "0.0", "\n", "self", ".", "val", "=", "0.0", "\n", "self", ".", "mean", "=", "np", ".", "nan", "\n", "self", ".", "mean_old", "=", "0.0", "\n", "self", ".", "m_s", "=", "0.0", "\n", "self", ".", "std", "=", "0.0", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.averagemeter.AverageValueMeter.summary": [[46, 49], ["averagemeter.AverageValueMeter.value"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.value"], ["", "def", "summary", "(", "self", ")", "->", "dict", ":", "\n", "# this function returns a dict and tends to aggregate the historical results.", "\n", "        ", "return", "{", "\"mean\"", ":", "self", ".", "value", "(", ")", "[", "0", "]", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.averagemeter.AverageValueMeter.detailed_summary": [[50, 53], ["averagemeter.AverageValueMeter.value", "averagemeter.AverageValueMeter.value"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.value", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.value"], ["", "def", "detailed_summary", "(", "self", ")", "->", "dict", ":", "\n", "# this function returns a dict and tends to aggregate the historical results.", "\n", "        ", "return", "{", "\"mean\"", ":", "self", ".", "value", "(", ")", "[", "0", "]", ",", "\"val\"", ":", "self", ".", "value", "(", ")", "[", "1", "]", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.averagemeter.AverageValueMeter.__repr__": [[54, 59], ["averagemeter.AverageValueMeter.__repr__._dict2str"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "def", "_dict2str", "(", "value_dict", ":", "dict", ")", ":", "\n", "            ", "return", "\"\\t\"", ".", "join", "(", "[", "f\"{k}:{v}\"", "for", "k", ",", "v", "in", "value_dict", ".", "items", "(", ")", "]", ")", "\n", "\n", "", "return", "f\"{self.__class__.__name__}: n={self.n} \\n \\t {_dict2str(self.detailed_summary())}\"", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.averagemeter.AverageValueMeter.get_plot_names": [[60, 62], ["None"], "methods", ["None"], ["", "def", "get_plot_names", "(", "self", ")", "->", "List", "[", "str", "]", ":", "\n", "        ", "return", "[", "\"mean\"", "]", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.general_dice_meter.UniversalDice.__init__": [[21, 36], ["_metric._Metric.__init__", "list", "general_dice_meter.UniversalDice.reset", "isinstance", "range", "type", "max"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.reset"], ["    ", "def", "__init__", "(", "self", ",", "C", "=", "4", ",", "report_axises", "=", "None", ")", "->", "None", ":", "\n", "        ", "super", "(", "UniversalDice", ",", "self", ")", ".", "__init__", "(", ")", "\n", "assert", "report_axises", "is", "None", "or", "isinstance", "(", "\n", "report_axises", ",", "(", "list", ",", "tuple", ")", "\n", ")", ",", "f\"`report_axises` should be either None or an iterator, given {type(report_axises)}\"", "\n", "if", "report_axises", "is", "not", "None", ":", "\n", "            ", "assert", "max", "(", "report_axises", ")", "<=", "C", ",", "(", "\n", "\"Incompatible parameter of `C`={} and \"", "\n", "\"`report_axises`={}\"", ".", "format", "(", "C", ",", "report_axises", ")", "\n", ")", "\n", "", "self", ".", "_C", "=", "C", "\n", "self", ".", "_report_axis", "=", "list", "(", "range", "(", "self", ".", "_C", ")", ")", "\n", "if", "report_axises", "is", "not", "None", ":", "\n", "            ", "self", ".", "_report_axis", "=", "report_axises", "\n", "", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.general_dice_meter.UniversalDice.reset": [[37, 42], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "_intersections", "=", "[", "]", "\n", "self", ".", "_unions", "=", "[", "]", "\n", "self", ".", "_group_names", "=", "[", "]", "\n", "self", ".", "_n", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.general_dice_meter.UniversalDice.add": [[43, 94], ["general_dice_meter.UniversalDice._convert2onehot", "isinstance", "general_dice_meter.UniversalDice._intersections.append", "general_dice_meter.UniversalDice._unions.append", "general_dice_meter.UniversalDice._group_names.extend", "isinstance", "general_dice_meter.UniversalDice._intersaction", "general_dice_meter.UniversalDice._union", "isinstance", "isinstance", "str", "range", "isinstance", "TypeError", "len", "type"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.general_dice_meter.UniversalDice._convert2onehot", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.general_dice_meter.UniversalDice._intersaction", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.general_dice_meter.UniversalDice._union"], ["", "def", "add", "(", "\n", "self", ",", "pred", ":", "Tensor", ",", "target", ":", "Tensor", ",", "group_name", ":", "Union", "[", "str", ",", "List", "[", "str", "]", "]", "=", "None", "\n", ")", ":", "\n", "        ", "\"\"\"\n        add pred and target\n        :param pred: class- or onehot-coded tensor of the same shape as the target\n        :param target: class- or onehot-coded tensor of the same shape as the pred\n        :param group_name: List of names, or a string of a name, or None.\n                        indicating 2D slice dice, batch-based dice\n        :return:\n        \"\"\"", "\n", "\n", "assert", "pred", ".", "shape", "==", "target", ".", "shape", ",", "(", "\n", "f\"incompatible shape of `pred` and `target`, given \"", "\n", "f\"{pred.shape} and {target.shape}.\"", "\n", ")", "\n", "\n", "assert", "not", "pred", ".", "requires_grad", "and", "not", "target", ".", "requires_grad", "\n", "\n", "if", "group_name", "is", "not", "None", ":", "\n", "            ", "if", "not", "isinstance", "(", "group_name", ",", "str", ")", ":", "\n", "                ", "if", "isinstance", "(", "group_name", ",", "Iterable", ")", ":", "\n", "                    ", "assert", "(", "\n", "len", "(", "group_name", ")", "==", "pred", ".", "shape", "[", "0", "]", "\n", ")", "# number of group name should be the same as the pred batch size", "\n", "assert", "isinstance", "(", "group_name", "[", "0", "]", ",", "str", ")", "\n", "", "else", ":", "\n", "                    ", "raise", "TypeError", "(", "f\"type of `group_name` wrong {type(group_name)}\"", ")", "\n", "\n", "", "", "", "onehot_pred", ",", "onehot_target", "=", "self", ".", "_convert2onehot", "(", "pred", ",", "target", ")", "\n", "B", ",", "C", ",", "*", "hw", "=", "onehot_pred", ".", "shape", "\n", "assert", "C", "==", "self", ".", "_C", ",", "C", "\n", "\n", "# current group name:", "\n", "current_group_name", "=", "[", "\n", "str", "(", "self", ".", "_n", ")", "+", "f\"_{i:03d}\"", "for", "i", "in", "range", "(", "B", ")", "\n", "]", "# make it like slice based dice", "\n", "if", "group_name", "is", "not", "None", ":", "\n", "            ", "current_group_name", "=", "group_name", "\n", "if", "isinstance", "(", "group_name", ",", "str", ")", ":", "\n", "# this is too make 3D dice.", "\n", "                ", "current_group_name", "=", "[", "group_name", "]", "*", "B", "\n", "", "", "assert", "isinstance", "(", "current_group_name", ",", "list", ")", "\n", "interaction", ",", "union", "=", "(", "\n", "self", ".", "_intersaction", "(", "onehot_pred", ",", "onehot_target", ")", ",", "\n", "self", ".", "_union", "(", "onehot_pred", ",", "onehot_target", ")", ",", "\n", ")", "\n", "self", ".", "_intersections", ".", "append", "(", "interaction", ")", "\n", "self", ".", "_unions", ".", "append", "(", "union", ")", "\n", "self", ".", "_group_names", ".", "extend", "(", "current_group_name", ")", "\n", "self", ".", "_n", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.general_dice_meter.UniversalDice.log": [[95, 111], ["torch.cat", "torch.cat", "numpy.asarray", "torch.stack", "torch.stack.append", "union_array[].sum", "interaction_array[].sum"], "methods", ["None"], ["", "@", "property", "\n", "def", "log", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "_n", ">", "0", ":", "\n", "            ", "group_names", "=", "self", ".", "group_names", "\n", "interaction_array", "=", "torch", ".", "cat", "(", "self", ".", "_intersections", ",", "dim", "=", "0", ")", "\n", "union_array", "=", "torch", ".", "cat", "(", "self", ".", "_unions", ",", "dim", "=", "0", ")", "\n", "group_name_array", "=", "np", ".", "asarray", "(", "self", ".", "_group_names", ")", "\n", "resulting_dice", "=", "[", "]", "\n", "for", "unique_name", "in", "group_names", ":", "\n", "                ", "index", "=", "group_name_array", "==", "unique_name", "\n", "group_dice", "=", "(", "2", "*", "interaction_array", "[", "index", "]", ".", "sum", "(", "0", ")", "+", "1e-6", ")", "/", "(", "\n", "union_array", "[", "index", "]", ".", "sum", "(", "0", ")", "+", "1e-6", "\n", ")", "\n", "resulting_dice", ".", "append", "(", "group_dice", ")", "\n", "", "resulting_dice", "=", "torch", ".", "stack", "(", "resulting_dice", ",", "dim", "=", "0", ")", "\n", "return", "resulting_dice", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.general_dice_meter.UniversalDice.value": [[112, 118], ["resulting_dice.mean", "resulting_dice.std"], "methods", ["None"], ["", "", "def", "value", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "if", "self", ".", "_n", "==", "0", ":", "\n", "            ", "return", "(", "[", "np", ".", "nan", "]", "*", "self", ".", "_C", ",", "[", "np", ".", "nan", "]", "*", "self", ".", "_C", ")", "\n", "\n", "", "resulting_dice", "=", "self", ".", "log", "\n", "return", "(", "resulting_dice", ".", "mean", "(", "0", ")", ",", "resulting_dice", ".", "std", "(", "0", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.general_dice_meter.UniversalDice.summary": [[119, 124], ["general_dice_meter.UniversalDice.value", "report_dict.update", "deepclustering2.type.to_float", "deepclustering2.utils.iter_average", "report_dict.values"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.value"], ["", "def", "summary", "(", "self", ")", "->", "dict", ":", "\n", "        ", "means", ",", "stds", "=", "self", ".", "value", "(", ")", "\n", "report_dict", "=", "{", "f\"DSC{i}\"", ":", "to_float", "(", "means", "[", "i", "]", ")", "for", "i", "in", "self", ".", "_report_axis", "}", "\n", "report_dict", ".", "update", "(", "{", "\"DSC_mean\"", ":", "average_list", "(", "report_dict", ".", "values", "(", ")", ")", "}", ")", "\n", "return", "report_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.general_dice_meter.UniversalDice.detailed_summary": [[125, 135], ["general_dice_meter.UniversalDice.value", "deepclustering2.type.to_float", "deepclustering2.utils.iter_average", "deepclustering2.type.to_float", "deepclustering2.type.to_float"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.value"], ["", "def", "detailed_summary", "(", "self", ")", "->", "dict", ":", "\n", "        ", "means", ",", "stds", "=", "self", ".", "value", "(", ")", "\n", "return", "{", "\n", "**", "{", "f\"DSC{i}\"", ":", "to_float", "(", "means", "[", "i", "]", ")", "for", "i", "in", "self", ".", "_report_axis", "}", ",", "\n", "**", "{", "\n", "f\"DSC_mean\"", ":", "average_list", "(", "\n", "[", "to_float", "(", "means", "[", "i", "]", ")", "for", "i", "in", "self", ".", "_report_axis", "]", "\n", ")", "\n", "}", ",", "\n", "**", "{", "f\"DSC_std{i}\"", ":", "to_float", "(", "stds", "[", "i", "]", ")", "for", "i", "in", "self", ".", "_report_axis", "}", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.general_dice_meter.UniversalDice.group_names": [[137, 140], ["sorted", "set"], "methods", ["None"], ["", "@", "property", "\n", "def", "group_names", "(", "self", ")", ":", "\n", "        ", "return", "sorted", "(", "set", "(", "self", ".", "_group_names", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.general_dice_meter.UniversalDice._intersaction": [[141, 156], ["deepclustering2.utils.one_hot", "deepclustering2.utils.one_hot", "list", "range", "len"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_intersaction", "(", "pred", ":", "Tensor", ",", "target", ":", "Tensor", ")", ":", "\n", "        ", "\"\"\"\n        return the interaction, supposing the two inputs are onehot-coded.\n        :param pred: onehot pred\n        :param target: onehot target\n        :return: tensor of intersaction over classes\n        \"\"\"", "\n", "assert", "pred", ".", "shape", "==", "target", ".", "shape", "\n", "assert", "one_hot", "(", "pred", ")", "and", "one_hot", "(", "target", ")", "\n", "\n", "B", ",", "C", ",", "*", "hw", "=", "pred", ".", "shape", "\n", "intersect", "=", "(", "pred", "*", "target", ")", ".", "sum", "(", "list", "(", "range", "(", "2", ",", "2", "+", "len", "(", "hw", ")", ")", ")", ")", "\n", "assert", "intersect", ".", "shape", "==", "(", "B", ",", "C", ")", "\n", "return", "intersect", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.general_dice_meter.UniversalDice._union": [[157, 172], ["deepclustering2.utils.one_hot", "deepclustering2.utils.one_hot", "list", "range", "len"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_union", "(", "pred", ":", "Tensor", ",", "target", ":", "Tensor", ")", ":", "\n", "        ", "\"\"\"\n        return the union, supposing the two inputs are onehot-coded.\n        :param pred: onehot pred\n        :param target: onehot target\n        :return: tensor of intersaction over classes\n        \"\"\"", "\n", "assert", "pred", ".", "shape", "==", "target", ".", "shape", "\n", "assert", "one_hot", "(", "pred", ")", "and", "one_hot", "(", "target", ")", "\n", "\n", "B", ",", "C", ",", "*", "hw", "=", "pred", ".", "shape", "\n", "union", "=", "(", "pred", "+", "target", ")", ".", "sum", "(", "list", "(", "range", "(", "2", ",", "2", "+", "len", "(", "hw", ")", ")", ")", ")", "\n", "assert", "union", ".", "shape", "==", "(", "B", ",", "C", ")", "\n", "return", "union", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.general_dice_meter.UniversalDice._convert2onehot": [[173, 183], ["deepclustering2.utils.simplex", "deepclustering2.utils.one_hot", "deepclustering2.utils.class2one_hot().long", "deepclustering2.utils.class2one_hot().long", "deepclustering2.utils.probs2one_hot().long", "target.long", "deepclustering2.utils.class2one_hot", "deepclustering2.utils.class2one_hot", "deepclustering2.utils.probs2one_hot"], "methods", ["None"], ["", "def", "_convert2onehot", "(", "self", ",", "pred", ":", "Tensor", ",", "target", ":", "Tensor", ")", ":", "\n", "# only two possibility: both onehot or both class-coded.", "\n", "        ", "assert", "pred", ".", "shape", "==", "target", ".", "shape", "\n", "# if they are onehot-coded:", "\n", "if", "simplex", "(", "pred", ",", "1", ")", "and", "one_hot", "(", "target", ")", ":", "\n", "            ", "return", "probs2one_hot", "(", "pred", ")", ".", "long", "(", ")", ",", "target", ".", "long", "(", ")", "\n", "# here the pred and target are labeled long", "\n", "", "return", "(", "\n", "class2one_hot", "(", "pred", ",", "self", ".", "_C", ")", ".", "long", "(", ")", ",", "\n", "class2one_hot", "(", "target", ",", "self", ".", "_C", ")", ".", "long", "(", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.general_dice_meter.UniversalDice.get_plot_names": [[185, 187], ["None"], "methods", ["None"], ["", "def", "get_plot_names", "(", "self", ")", "->", "List", "[", "str", "]", ":", "\n", "        ", "return", "[", "f\"DSC{i}\"", "for", "i", "in", "self", ".", "_report_axis", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.general_dice_meter.UniversalDice.__repr__": [[188, 192], ["general_dice_meter.UniversalDice.summary().items", "general_dice_meter.UniversalDice.summary"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.IICLossWrapper.items", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.kappa.KappaMetrics.summary"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "string", "=", "f\"C={self._C}, report_axis={self._report_axis}\\n\"", "\n", "return", "(", "\n", "string", "+", "\"\\t\"", "+", "\"\\t\"", ".", "join", "(", "[", "f\"{k}:{v}\"", "for", "k", ",", "v", "in", "self", ".", "summary", "(", ")", ".", "items", "(", ")", "]", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.instance.InstanceValue.__init__": [[8, 11], ["_metric._Metric.__init__"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["    ", "def", "__init__", "(", "self", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "instance_value", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.instance.InstanceValue.reset": [[12, 14], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "instance_value", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.instance.InstanceValue.add": [[15, 17], ["None"], "methods", ["None"], ["", "def", "add", "(", "self", ",", "value", ")", ":", "\n", "        ", "self", ".", "instance_value", "=", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.instance.InstanceValue.value": [[18, 20], ["None"], "methods", ["None"], ["", "def", "value", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "self", ".", "instance_value", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.instance.InstanceValue.summary": [[21, 23], ["None"], "methods", ["None"], ["", "def", "summary", "(", "self", ")", "->", "dict", ":", "\n", "        ", "return", "{", "\"value\"", ":", "self", ".", "instance_value", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.instance.InstanceValue.detailed_summary": [[24, 26], ["None"], "methods", ["None"], ["", "def", "detailed_summary", "(", "self", ")", "->", "dict", ":", "\n", "        ", "return", "{", "\"value\"", ":", "self", ".", "instance_value", "}", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.confusionmatrix.ConfusionMatrix.__init__": [[22, 30], ["_metric._Metric.__init__", "numpy.ndarray", "confusionmatrix.ConfusionMatrix.reset"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.reset"], ["def", "__init__", "(", "self", ",", "num_classes", ",", "ignore_index", "=", "255", ",", "normalized", "=", "False", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conf", "=", "np", ".", "ndarray", "(", "(", "num_classes", ",", "num_classes", ")", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "self", ".", "normalized", "=", "normalized", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "self", ".", "ignore_index", "=", "ignore_index", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.confusionmatrix.ConfusionMatrix.reset": [[31, 33], ["confusionmatrix.ConfusionMatrix.conf.fill"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "conf", ".", "fill", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.confusionmatrix.ConfusionMatrix.add": [[34, 87], ["torch.is_tensor", "torch.is_tensor", "numpy.bincount", "numpy.bincount.reshape", "predicted.cpu().numpy.cpu().numpy.cpu().numpy", "target.cpu().numpy.cpu().numpy.cpu().numpy", "x.astype", "predicted.cpu().numpy.cpu().numpy.cpu", "target.cpu().numpy.cpu().numpy.cpu"], "methods", ["None"], ["", "def", "add", "(", "self", ",", "predicted", ",", "target", ")", ":", "\n", "        ", "\"\"\"Computes the confusion matrix\n\n        The shape of the confusion matrix is K x K, where K is the number\n        of classes.\n\n        Keyword arguments:\n        - predicted (Tensor or numpy.ndarray): Can be an N x K tensor/array of\n        predicted scores obtained from the model for N examples and K classes,\n        or an N-tensor/array of integer values between 0 and K-1.\n        - target (Tensor or numpy.ndarray): Can be an N x K tensor/array of\n        ground-truth classes for N examples and K classes, or an N-tensor/array\n        of integer values between 0 and K-1.\n\n        \"\"\"", "\n", "# If target and/or predicted are tensors, convert them to numpy arrays", "\n", "if", "torch", ".", "is_tensor", "(", "predicted", ")", ":", "\n", "            ", "predicted", "=", "predicted", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "", "if", "torch", ".", "is_tensor", "(", "target", ")", ":", "\n", "            ", "target", "=", "target", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "", "assert", "predicted", ".", "shape", "==", "target", ".", "shape", "\n", "# assert predicted.shape[0] == target.shape[0], \\", "\n", "#     'number of targets and predicted outputs do not match'", "\n", "#", "\n", "# if np.ndim(predicted) != 1:", "\n", "#     assert predicted.shape[1] == self.num_classes, \\", "\n", "#         'number of predictions does not match size of confusion matrix'", "\n", "#     predicted = np.argmax(predicted, 1)", "\n", "# else:", "\n", "#     assert (predicted.max() < self.num_classes) and (predicted.min() >= 0), \\", "\n", "#         'predicted values are not between 0 and k-1'", "\n", "#", "\n", "# if np.ndim(target) != 1:", "\n", "#     assert target.shape[1] == self.num_classes, \\", "\n", "#         'Onehot target does not match size of confusion matrix'", "\n", "#     assert (target >= 0).all() and (target <= 1).all(), \\", "\n", "#         'in one-hot encoding, target values should be 0 or 1'", "\n", "#     assert (target.sum(1) == 1).all(), \\", "\n", "#         'multi-label setting is not supported'", "\n", "#     target = np.argmax(target, 1)", "\n", "# else:", "\n", "#     assert (target.max() < self.num_classes) and (target.min() >= 0), \\", "\n", "#         'target values are not between 0 and k-1'", "\n", "\n", "mask", "=", "(", "target", ">=", "0", ")", "&", "(", "target", "<", "self", ".", "num_classes", ")", "\n", "\n", "# hack for bincounting 2 arrays together", "\n", "x", "=", "predicted", "[", "mask", "]", "+", "self", ".", "num_classes", "*", "target", "[", "mask", "]", "\n", "bincount_2d", "=", "np", ".", "bincount", "(", "x", ".", "astype", "(", "np", ".", "int32", ")", ",", "minlength", "=", "self", ".", "num_classes", "**", "2", ")", "\n", "assert", "bincount_2d", ".", "size", "==", "self", ".", "num_classes", "**", "2", "\n", "conf", "=", "bincount_2d", ".", "reshape", "(", "(", "self", ".", "num_classes", ",", "self", ".", "num_classes", ")", ")", "\n", "\n", "self", ".", "conf", "+=", "conf", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.confusionmatrix.ConfusionMatrix.value": [[88, 100], ["confusionmatrix.ConfusionMatrix.conf.astype", "confusionmatrix.ConfusionMatrix.sum().clip", "confusionmatrix.ConfusionMatrix.sum"], "methods", ["None"], ["", "def", "value", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Returns:\n            Confustion matrix of K rows and K columns, where rows corresponds\n            to ground-truth targets and columns corresponds to predicted\n            targets.\n        \"\"\"", "\n", "if", "self", ".", "normalized", ":", "\n", "            ", "conf", "=", "self", ".", "conf", ".", "astype", "(", "np", ".", "float32", ")", "\n", "return", "conf", "/", "conf", ".", "sum", "(", "1", ")", ".", "clip", "(", "min", "=", "1e-12", ")", "[", ":", ",", "None", "]", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "conf", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.confusionmatrix.ConfusionMatrix.summary": [[101, 106], ["warnings.catch_warnings", "warnings.filterwarnings", "numpy.diag().sum", "numpy.sum", "numpy.diag"], "methods", ["None"], ["", "", "def", "summary", "(", "self", ")", "->", "dict", ":", "\n", "        ", "with", "warnings", ".", "catch_warnings", "(", ")", ":", "\n", "            ", "warnings", ".", "filterwarnings", "(", "\"ignore\"", ")", "\n", "acc", "=", "np", ".", "diag", "(", "self", ".", "conf", ")", ".", "sum", "(", ")", "/", "np", ".", "sum", "(", "self", ".", "conf", ")", "\n", "", "return", "{", "\"acc\"", ":", "acc", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.confusionmatrix.ConfusionMatrix.detailed_summary": [[107, 110], ["numpy.diag().sum", "numpy.sum", "numpy.diag"], "methods", ["None"], ["", "def", "detailed_summary", "(", "self", ")", "->", "dict", ":", "\n", "        ", "acc", "=", "np", ".", "diag", "(", "self", ".", "conf", ")", ".", "sum", "(", ")", "/", "np", ".", "sum", "(", "self", ".", "conf", ")", "\n", "return", "{", "\"acc\"", ":", "acc", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.confusionmatrix.ConfusionMatrix.log": [[111, 113], ["None"], "methods", ["None"], ["", "def", "log", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "conf", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.kappa.KappaMetrics.__init__": [[14, 17], ["_metric._Metric.__init__"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["def", "__init__", "(", "self", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "kappa", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.kappa.KappaMetrics.add": [[18, 30], ["target.detach().data.cpu().numpy().ravel.detach().data.cpu().numpy().ravel.detach().data.cpu().numpy().ravel", "kappa.KappaMetrics.kappa.append", "predict.detach().data.cpu().numpy().ravel", "sklearn.metrics.cohen_kappa_score", "target.detach().data.cpu().numpy().ravel.detach().data.cpu().numpy().ravel.detach().data.cpu().numpy", "predict.detach().data.cpu().numpy", "target.detach().data.cpu().numpy().ravel.detach().data.cpu().numpy().ravel.detach().data.cpu", "predict.detach().data.cpu", "target.detach().data.cpu().numpy().ravel.detach().data.cpu().numpy().ravel.detach", "predict.detach"], "methods", ["None"], ["", "def", "add", "(", "\n", "self", ",", "predicts", ":", "List", "[", "Tensor", "]", ",", "target", ":", "Tensor", ",", "considered_classes", ":", "List", "[", "int", "]", "\n", ")", ":", "\n", "        ", "for", "predict", "in", "predicts", ":", "\n", "            ", "assert", "predict", ".", "shape", "==", "target", ".", "shape", "\n", "", "predicts", "=", "[", "predict", ".", "detach", "(", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "ravel", "(", ")", "for", "predict", "in", "predicts", "]", "\n", "target", "=", "target", ".", "detach", "(", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "ravel", "(", ")", "\n", "mask", "=", "[", "t", "in", "considered_classes", "for", "t", "in", "target", "]", "\n", "predicts", "=", "[", "predict", "[", "mask", "]", "for", "predict", "in", "predicts", "]", "\n", "target", "=", "target", "[", "mask", "]", "\n", "kappa_score", "=", "[", "cohen_kappa_score", "(", "predict", ",", "target", ")", "for", "predict", "in", "predicts", "]", "\n", "self", ".", "kappa", ".", "append", "(", "kappa_score", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.kappa.KappaMetrics.reset": [[31, 33], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "kappa", "=", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.kappa.KappaMetrics.value": [[34, 36], ["torch.Tensor().mean", "torch.Tensor"], "methods", ["None"], ["", "def", "value", "(", "self", ")", ":", "\n", "        ", "return", "torch", ".", "Tensor", "(", "self", ".", "kappa", ")", ".", "mean", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.kappa.KappaMetrics.summary": [[37, 39], ["[].item", "range", "len", "kappa.KappaMetrics.value", "kappa.KappaMetrics.value"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.value", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.value"], ["", "def", "summary", "(", "self", ")", ":", "\n", "        ", "return", "{", "f\"kappa{i}\"", ":", "self", ".", "value", "(", ")", "[", "i", "]", ".", "item", "(", ")", "for", "i", "in", "range", "(", "len", "(", "self", ".", "value", "(", ")", ")", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.kappa.KappaMetrics.detailed_summary": [[40, 42], ["[].item", "range", "len", "kappa.KappaMetrics.value", "kappa.KappaMetrics.value"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.value", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.value"], ["", "def", "detailed_summary", "(", "self", ")", ":", "\n", "        ", "return", "{", "f\"kappa{i}\"", ":", "self", ".", "value", "(", ")", "[", "i", "]", ".", "item", "(", ")", "for", "i", "in", "range", "(", "len", "(", "self", ".", "value", "(", ")", ")", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.kappa.Kappa2Annotator.__init__": [[45, 47], ["kappa.KappaMetrics.__init__"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["    ", "def", "__init__", "(", "self", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.kappa.Kappa2Annotator.add": [[48, 67], ["gt.data.cpu().numpy().ravel.data.cpu().numpy().ravel.data.cpu().numpy().ravel", "predict1.detach().data.cpu().numpy().ravel.detach().data.cpu().numpy().ravel.detach().data.cpu().numpy().ravel", "predict2.detach().data.cpu().numpy().ravel.detach().data.cpu().numpy().ravel.detach().data.cpu().numpy().ravel", "sklearn.metrics.cohen_kappa_score", "sklearn.metrics.cohen_kappa_score.Kappa2Annotator.kappa.append", "gt.data.cpu().numpy().ravel.data.cpu().numpy().ravel.data.cpu().numpy", "predict1.detach().data.cpu().numpy().ravel.detach().data.cpu().numpy().ravel.detach().data.cpu().numpy", "predict2.detach().data.cpu().numpy().ravel.detach().data.cpu().numpy().ravel.detach().data.cpu().numpy", "gt.data.cpu().numpy().ravel.data.cpu().numpy().ravel.data.cpu", "predict1.detach().data.cpu().numpy().ravel.detach().data.cpu().numpy().ravel.detach().data.cpu", "predict2.detach().data.cpu().numpy().ravel.detach().data.cpu().numpy().ravel.detach().data.cpu", "predict1.detach().data.cpu().numpy().ravel.detach().data.cpu().numpy().ravel.detach", "predict2.detach().data.cpu().numpy().ravel.detach().data.cpu().numpy().ravel.detach"], "methods", ["None"], ["", "def", "add", "(", "\n", "self", ",", "\n", "predict1", ":", "Tensor", ",", "\n", "predict2", ":", "Tensor", ",", "\n", "gt", "=", "Tensor", ",", "\n", "considered_classes", "=", "[", "1", ",", "2", ",", "3", "]", ",", "\n", ")", ":", "\n", "        ", "assert", "predict1", ".", "shape", "==", "predict2", ".", "shape", "\n", "gt", "=", "gt", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "ravel", "(", ")", "\n", "predict1", "=", "predict1", ".", "detach", "(", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "ravel", "(", ")", "\n", "predict2", "=", "predict2", ".", "detach", "(", ")", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", ".", "ravel", "(", ")", "\n", "\n", "if", "considered_classes", "is", "not", "None", ":", "\n", "            ", "mask", "=", "[", "t", "in", "considered_classes", "for", "t", "in", "gt", "]", "\n", "predict1", "=", "predict1", "[", "mask", "]", "\n", "predict2", "=", "predict2", "[", "mask", "]", "\n", "\n", "", "kappa", "=", "cohen_kappa_score", "(", "y1", "=", "predict1", ",", "y2", "=", "predict2", ")", "\n", "self", ".", "kappa", ".", "append", "(", "kappa", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.kappa.Kappa2Annotator.value": [[68, 70], ["torch.Tensor().mean", "torch.Tensor"], "methods", ["None"], ["", "def", "value", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "torch", ".", "Tensor", "(", "self", ".", "kappa", ")", ".", "mean", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.aucmeter.AUCMeter.__init__": [[23, 26], ["meter.Meter.__init__", "aucmeter.AUCMeter.reset"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "AUCMeter", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.aucmeter.AUCMeter.reset": [[27, 30], ["torch.DoubleTensor().numpy", "torch.LongTensor().numpy", "torch.DoubleTensor", "torch.LongTensor", "torch.DoubleStorage", "torch.LongStorage"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "scores", "=", "torch", ".", "DoubleTensor", "(", "torch", ".", "DoubleStorage", "(", ")", ")", ".", "numpy", "(", ")", "\n", "self", ".", "targets", "=", "torch", ".", "LongTensor", "(", "torch", ".", "LongStorage", "(", ")", ")", ".", "numpy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.aucmeter.AUCMeter.add": [[31, 49], ["torch.is_tensor", "torch.is_tensor", "numpy.all", "numpy.append", "numpy.append", "output.cpu().squeeze().numpy.cpu().squeeze().numpy.cpu().squeeze().numpy", "numpy.asarray.cpu().squeeze().numpy", "isinstance", "numpy.ndim", "numpy.ndim", "numpy.add", "numpy.asarray", "numpy.equal", "numpy.equal", "output.cpu().squeeze().numpy.cpu().squeeze().numpy.cpu().squeeze", "numpy.asarray.cpu().squeeze", "output.cpu().squeeze().numpy.cpu().squeeze().numpy.cpu", "numpy.asarray.cpu"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.add"], ["", "def", "add", "(", "self", ",", "output", ",", "target", ")", ":", "\n", "        ", "if", "torch", ".", "is_tensor", "(", "output", ")", ":", "\n", "            ", "output", "=", "output", ".", "cpu", "(", ")", ".", "squeeze", "(", ")", ".", "numpy", "(", ")", "\n", "", "if", "torch", ".", "is_tensor", "(", "target", ")", ":", "\n", "            ", "target", "=", "target", ".", "cpu", "(", ")", ".", "squeeze", "(", ")", ".", "numpy", "(", ")", "\n", "", "elif", "isinstance", "(", "target", ",", "numbers", ".", "Number", ")", ":", "\n", "            ", "target", "=", "np", ".", "asarray", "(", "[", "target", "]", ")", "\n", "", "assert", "np", ".", "ndim", "(", "output", ")", "==", "1", ",", "\"wrong output size (1D expected)\"", "\n", "assert", "np", ".", "ndim", "(", "target", ")", "==", "1", ",", "\"wrong target size (1D expected)\"", "\n", "assert", "(", "\n", "output", ".", "shape", "[", "0", "]", "==", "target", ".", "shape", "[", "0", "]", "\n", ")", ",", "\"number of outputs and targets does not match\"", "\n", "assert", "np", ".", "all", "(", "\n", "np", ".", "add", "(", "np", ".", "equal", "(", "target", ",", "1", ")", ",", "np", ".", "equal", "(", "target", ",", "0", ")", ")", "\n", ")", ",", "\"targets should be binary (0, 1)\"", "\n", "\n", "self", ".", "scores", "=", "np", ".", "append", "(", "self", ".", "scores", ",", "output", ")", "\n", "self", ".", "targets", "=", "np", ".", "append", "(", "self", ".", "targets", ",", "target", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.aucmeter.AUCMeter.value": [[50, 86], ["torch.sort", "scores.numpy.numpy.numpy", "sortind.numpy.numpy.numpy", "numpy.zeros", "numpy.zeros", "range", "numpy.zeros", "torch.from_numpy", "aucmeter.AUCMeter.targets.sum"], "methods", ["None"], ["", "def", "value", "(", "self", ")", ":", "\n", "# case when number of elements added are 0", "\n", "        ", "if", "self", ".", "scores", ".", "shape", "[", "0", "]", "==", "0", ":", "\n", "            ", "return", "(", "0.5", ",", "0.0", ",", "0.0", ")", "\n", "\n", "# sorting the arrays", "\n", "", "scores", ",", "sortind", "=", "torch", ".", "sort", "(", "\n", "torch", ".", "from_numpy", "(", "self", ".", "scores", ")", ",", "dim", "=", "0", ",", "descending", "=", "True", "\n", ")", "\n", "scores", "=", "scores", ".", "numpy", "(", ")", "\n", "sortind", "=", "sortind", ".", "numpy", "(", ")", "\n", "\n", "# creating the roc curve", "\n", "tpr", "=", "np", ".", "zeros", "(", "shape", "=", "(", "scores", ".", "size", "+", "1", ")", ",", "dtype", "=", "np", ".", "float64", ")", "\n", "fpr", "=", "np", ".", "zeros", "(", "shape", "=", "(", "scores", ".", "size", "+", "1", ")", ",", "dtype", "=", "np", ".", "float64", ")", "\n", "\n", "for", "i", "in", "range", "(", "1", ",", "scores", ".", "size", "+", "1", ")", ":", "\n", "            ", "if", "self", ".", "targets", "[", "sortind", "[", "i", "-", "1", "]", "]", "==", "1", ":", "\n", "                ", "tpr", "[", "i", "]", "=", "tpr", "[", "i", "-", "1", "]", "+", "1", "\n", "fpr", "[", "i", "]", "=", "fpr", "[", "i", "-", "1", "]", "\n", "", "else", ":", "\n", "                ", "tpr", "[", "i", "]", "=", "tpr", "[", "i", "-", "1", "]", "\n", "fpr", "[", "i", "]", "=", "fpr", "[", "i", "-", "1", "]", "+", "1", "\n", "\n", "", "", "tpr", "/=", "self", ".", "targets", ".", "sum", "(", ")", "*", "1.0", "\n", "fpr", "/=", "(", "self", ".", "targets", "-", "1.0", ")", ".", "sum", "(", ")", "*", "-", "1.0", "\n", "\n", "# calculating area under curve using trapezoidal rule", "\n", "n", "=", "tpr", ".", "shape", "[", "0", "]", "\n", "h", "=", "fpr", "[", "1", ":", "n", "]", "-", "fpr", "[", "0", ":", "n", "-", "1", "]", "\n", "sum_h", "=", "np", ".", "zeros", "(", "fpr", ".", "shape", ")", "\n", "sum_h", "[", "0", ":", "n", "-", "1", "]", "=", "h", "\n", "sum_h", "[", "1", ":", "n", "]", "+=", "h", "\n", "area", "=", "(", "sum_h", "*", "tpr", ")", ".", "sum", "(", ")", "/", "2.0", "\n", "\n", "return", "(", "area", ",", "tpr", ",", "fpr", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.mapmeter.mAPMeter.__init__": [[19, 22], ["meter.Meter.__init__", "APMeter"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "mAPMeter", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "apmeter", "=", "APMeter", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.mapmeter.mAPMeter.reset": [[23, 25], ["mapmeter.mAPMeter.apmeter.reset"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.reset"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "apmeter", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.mapmeter.mAPMeter.add": [[26, 28], ["mapmeter.mAPMeter.apmeter.add"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.add"], ["", "def", "add", "(", "self", ",", "output", ",", "target", ",", "weight", "=", "None", ")", ":", "\n", "        ", "self", ".", "apmeter", ".", "add", "(", "output", ",", "target", ",", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.mapmeter.mAPMeter.value": [[29, 31], ["mapmeter.mAPMeter.apmeter.value().mean", "mapmeter.mAPMeter.apmeter.value"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.value"], ["", "def", "value", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "apmeter", ".", "value", "(", ")", ".", "mean", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.movingaveragevaluemeter.MovingAverageValueMeter.__init__": [[7, 12], ["meter.Meter.__init__", "torch.Tensor", "movingaveragevaluemeter.MovingAverageValueMeter.reset"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.reset"], ["    ", "def", "__init__", "(", "self", ",", "windowsize", ")", ":", "\n", "        ", "super", "(", "MovingAverageValueMeter", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "windowsize", "=", "windowsize", "\n", "self", ".", "valuequeue", "=", "torch", ".", "Tensor", "(", "windowsize", ")", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.movingaveragevaluemeter.MovingAverageValueMeter.reset": [[13, 18], ["movingaveragevaluemeter.MovingAverageValueMeter.valuequeue.fill_"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "sum", "=", "0.0", "\n", "self", ".", "n", "=", "0", "\n", "self", ".", "var", "=", "0.0", "\n", "self", ".", "valuequeue", ".", "fill_", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.movingaveragevaluemeter.MovingAverageValueMeter.add": [[19, 26], ["None"], "methods", ["None"], ["", "def", "add", "(", "self", ",", "value", ")", ":", "\n", "        ", "queueid", "=", "self", ".", "n", "%", "self", ".", "windowsize", "\n", "oldvalue", "=", "self", ".", "valuequeue", "[", "queueid", "]", "\n", "self", ".", "sum", "+=", "value", "-", "oldvalue", "\n", "self", ".", "var", "+=", "value", "*", "value", "-", "oldvalue", "*", "oldvalue", "\n", "self", ".", "valuequeue", "[", "queueid", "]", "=", "value", "\n", "self", ".", "n", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.movingaveragevaluemeter.MovingAverageValueMeter.value": [[27, 32], ["min", "math.sqrt", "max", "max", "max"], "methods", ["None"], ["", "def", "value", "(", "self", ")", ":", "\n", "        ", "n", "=", "min", "(", "self", ".", "n", ",", "self", ".", "windowsize", ")", "\n", "mean", "=", "self", ".", "sum", "/", "max", "(", "1", ",", "n", ")", "\n", "std", "=", "math", ".", "sqrt", "(", "max", "(", "(", "self", ".", "var", "-", "n", "*", "mean", "*", "mean", ")", "/", "max", "(", "1", ",", "n", "-", "1", ")", ",", "0", ")", ")", "\n", "return", "mean", ",", "std", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.confusionmeter.ConfusionMeter.__init__": [[19, 25], ["meter.Meter.__init__", "numpy.ndarray", "confusionmeter.ConfusionMeter.reset"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.reset"], ["def", "__init__", "(", "self", ",", "k", ",", "normalized", "=", "False", ")", ":", "\n", "        ", "super", "(", "ConfusionMeter", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conf", "=", "np", ".", "ndarray", "(", "(", "k", ",", "k", ")", ",", "dtype", "=", "np", ".", "int32", ")", "\n", "self", ".", "normalized", "=", "normalized", "\n", "self", ".", "k", "=", "k", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.confusionmeter.ConfusionMeter.reset": [[26, 28], ["confusionmeter.ConfusionMeter.conf.fill"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "conf", ".", "fill", "(", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.confusionmeter.ConfusionMeter.add": [[29, 80], ["numpy.argmax.cpu().numpy", "numpy.argmax.cpu().numpy", "numpy.bincount", "numpy.bincount.reshape", "numpy.ndim", "numpy.argmax", "numpy.ndim", "numpy.argmax", "x.astype", "numpy.argmax.cpu", "numpy.argmax.cpu", "numpy.argmax.max", "numpy.argmax.min", "numpy.argmax.max", "numpy.argmax.min", "numpy.argmax.sum"], "methods", ["None"], ["", "def", "add", "(", "self", ",", "predicted", ",", "target", ")", ":", "\n", "        ", "\"\"\"Computes the confusion matrix of K x K size where K is no of classes\n\n        Args:\n            predicted (tensor): Can be an N x K tensor of predicted scores obtained from\n                the model for N examples and K classes or an N-tensor of\n                integer values between 0 and K-1.\n            target (tensor): Can be a N-tensor of integer values assumed to be integer\n                values between 0 and K-1 or N x K tensor, where targets are\n                assumed to be provided as one-hot vectors\n\n        \"\"\"", "\n", "predicted", "=", "predicted", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "target", "=", "target", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "\n", "assert", "(", "\n", "predicted", ".", "shape", "[", "0", "]", "==", "target", ".", "shape", "[", "0", "]", "\n", ")", ",", "\"number of targets and predicted outputs do not match\"", "\n", "\n", "if", "np", ".", "ndim", "(", "predicted", ")", "!=", "1", ":", "\n", "            ", "assert", "(", "\n", "predicted", ".", "shape", "[", "1", "]", "==", "self", ".", "k", "\n", ")", ",", "\"number of predictions does not match size of confusion matrix\"", "\n", "predicted", "=", "np", ".", "argmax", "(", "predicted", ",", "1", ")", "\n", "", "else", ":", "\n", "            ", "assert", "(", "predicted", ".", "max", "(", ")", "<", "self", ".", "k", ")", "and", "(", "\n", "predicted", ".", "min", "(", ")", ">=", "0", "\n", ")", ",", "\"predicted values are not between 1 and k\"", "\n", "\n", "", "onehot_target", "=", "np", ".", "ndim", "(", "target", ")", "!=", "1", "\n", "if", "onehot_target", ":", "\n", "            ", "assert", "(", "\n", "target", ".", "shape", "[", "1", "]", "==", "self", ".", "k", "\n", ")", ",", "\"Onehot target does not match size of confusion matrix\"", "\n", "assert", "(", "target", ">=", "0", ")", ".", "all", "(", ")", "and", "(", "\n", "target", "<=", "1", "\n", ")", ".", "all", "(", ")", ",", "\"in one-hot encoding, target values should be 0 or 1\"", "\n", "assert", "(", "target", ".", "sum", "(", "1", ")", "==", "1", ")", ".", "all", "(", ")", ",", "\"multi-label setting is not supported\"", "\n", "target", "=", "np", ".", "argmax", "(", "target", ",", "1", ")", "\n", "", "else", ":", "\n", "            ", "assert", "(", "predicted", ".", "max", "(", ")", "<", "self", ".", "k", ")", "and", "(", "\n", "predicted", ".", "min", "(", ")", ">=", "0", "\n", ")", ",", "\"predicted values are not between 0 and k-1\"", "\n", "\n", "# hack for bincounting 2 arrays together", "\n", "", "x", "=", "predicted", "+", "self", ".", "k", "*", "target", "\n", "bincount_2d", "=", "np", ".", "bincount", "(", "x", ".", "astype", "(", "np", ".", "int32", ")", ",", "minlength", "=", "self", ".", "k", "**", "2", ")", "\n", "assert", "bincount_2d", ".", "size", "==", "self", ".", "k", "**", "2", "\n", "conf", "=", "bincount_2d", ".", "reshape", "(", "(", "self", ".", "k", ",", "self", ".", "k", ")", ")", "\n", "\n", "self", ".", "conf", "+=", "conf", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.confusionmeter.ConfusionMeter.value": [[81, 93], ["confusionmeter.ConfusionMeter.conf.astype", "confusionmeter.ConfusionMeter.sum().clip", "confusionmeter.ConfusionMeter.sum"], "methods", ["None"], ["", "def", "value", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Returns:\n            Confustion matrix of K rows and K columns, where rows corresponds\n            to ground-truth targets and columns corresponds to predicted\n            targets.\n        \"\"\"", "\n", "if", "self", ".", "normalized", ":", "\n", "            ", "conf", "=", "self", ".", "conf", ".", "astype", "(", "np", ".", "float32", ")", "\n", "return", "conf", "/", "conf", ".", "sum", "(", "1", ")", ".", "clip", "(", "min", "=", "1e-12", ")", "[", ":", ",", "None", "]", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "conf", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.meter.Meter.reset": [[8, 11], ["None"], "methods", ["None"], ["def", "reset", "(", "self", ")", ":", "\n", "        ", "\"\"\"Resets the meter to default settings.\"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.meter.Meter.add": [[12, 20], ["None"], "methods", ["None"], ["", "def", "add", "(", "self", ",", "value", ")", ":", "\n", "        ", "\"\"\"Log a new value to the meter\n\n        Args:\n            value: Next restult to include.\n\n        \"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.meter.Meter.value": [[21, 24], ["None"], "methods", ["None"], ["", "def", "value", "(", "self", ")", ":", "\n", "        ", "\"\"\"Get the value of the meter in the current state.\"\"\"", "\n", "pass", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.timemeter.TimeMeter.__init__": [[21, 25], ["meter.Meter.__init__", "timemeter.TimeMeter.reset"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.reset"], ["def", "__init__", "(", "self", ",", "unit", ")", ":", "\n", "        ", "super", "(", "TimeMeter", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "unit", "=", "unit", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.timemeter.TimeMeter.add": [[26, 28], ["None"], "methods", ["None"], ["", "def", "add", "(", "self", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "n", "+=", "n", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.timemeter.TimeMeter.reset": [[29, 32], ["time.time"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "n", "=", "0", "\n", "self", ".", "time", "=", "time", ".", "time", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.timemeter.TimeMeter.value": [[33, 40], ["ValueError", "time.time", "time.time"], "methods", ["None"], ["", "def", "value", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "unit", "and", "self", ".", "n", "==", "0", ":", "\n", "            ", "raise", "ValueError", "(", "\"Trying to divide by zero in TimeMeter\"", ")", "\n", "", "elif", "self", ".", "unit", ":", "\n", "            ", "return", "(", "time", ".", "time", "(", ")", "-", "self", ".", "time", ")", "/", "self", ".", "n", "\n", "", "else", ":", "\n", "            ", "return", "time", ".", "time", "(", ")", "-", "self", ".", "time", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.classerrormeter.ClassErrorMeter.__init__": [[8, 13], ["meter.Meter.__init__", "numpy.sort", "classerrormeter.ClassErrorMeter.reset"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.reset"], ["    ", "def", "__init__", "(", "self", ",", "topk", "=", "[", "1", "]", ",", "accuracy", "=", "False", ")", ":", "\n", "        ", "super", "(", "ClassErrorMeter", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "topk", "=", "np", ".", "sort", "(", "topk", ")", "\n", "self", ".", "accuracy", "=", "accuracy", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.classerrormeter.ClassErrorMeter.reset": [[14, 17], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "sum", "=", "{", "v", ":", "0", "for", "v", "in", "self", ".", "topk", "}", "\n", "self", ".", "n", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.classerrormeter.ClassErrorMeter.add": [[18, 41], ["torch.is_tensor", "torch.is_tensor", "int", "[].numpy", "output.cpu().squeeze().numpy.cpu().squeeze().numpy.cpu().squeeze().numpy", "numpy.atleast_1d", "isinstance", "numpy.ndim", "target[].repeat", "numpy.asarray.cpu().squeeze().numpy", "numpy.asarray", "numpy.ndim", "numpy.ndim", "correct[].sum", "output.cpu().squeeze().numpy.cpu().squeeze().numpy.cpu().squeeze", "torch.from_numpy().topk", "numpy.asarray.cpu().squeeze", "output.cpu().squeeze().numpy.cpu().squeeze().numpy.cpu", "torch.from_numpy", "numpy.asarray.cpu"], "methods", ["None"], ["", "def", "add", "(", "self", ",", "output", ",", "target", ")", ":", "\n", "        ", "if", "torch", ".", "is_tensor", "(", "output", ")", ":", "\n", "            ", "output", "=", "output", ".", "cpu", "(", ")", ".", "squeeze", "(", ")", ".", "numpy", "(", ")", "\n", "", "if", "torch", ".", "is_tensor", "(", "target", ")", ":", "\n", "            ", "target", "=", "np", ".", "atleast_1d", "(", "target", ".", "cpu", "(", ")", ".", "squeeze", "(", ")", ".", "numpy", "(", ")", ")", "\n", "", "elif", "isinstance", "(", "target", ",", "numbers", ".", "Number", ")", ":", "\n", "            ", "target", "=", "np", ".", "asarray", "(", "[", "target", "]", ")", "\n", "", "if", "np", ".", "ndim", "(", "output", ")", "==", "1", ":", "\n", "            ", "output", "=", "output", "[", "np", ".", "newaxis", "]", "\n", "", "else", ":", "\n", "            ", "assert", "np", ".", "ndim", "(", "output", ")", "==", "2", ",", "\"wrong output size (1D or 2D expected)\"", "\n", "assert", "np", ".", "ndim", "(", "target", ")", "==", "1", ",", "\"target and output do not match\"", "\n", "", "assert", "target", ".", "shape", "[", "0", "]", "==", "output", ".", "shape", "[", "0", "]", ",", "\"target and output do not match\"", "\n", "topk", "=", "self", ".", "topk", "\n", "maxk", "=", "int", "(", "topk", "[", "-", "1", "]", ")", "# seems like Python3 wants int and not np.int64", "\n", "no", "=", "output", ".", "shape", "[", "0", "]", "\n", "\n", "pred", "=", "torch", ".", "from_numpy", "(", "output", ")", ".", "topk", "(", "maxk", ",", "1", ",", "True", ",", "True", ")", "[", "1", "]", ".", "numpy", "(", ")", "\n", "correct", "=", "pred", "==", "target", "[", ":", ",", "np", ".", "newaxis", "]", ".", "repeat", "(", "pred", ".", "shape", "[", "1", "]", ",", "1", ")", "\n", "\n", "for", "k", "in", "topk", ":", "\n", "            ", "self", ".", "sum", "[", "k", "]", "+=", "no", "-", "correct", "[", ":", ",", "0", ":", "k", "]", ".", "sum", "(", ")", "\n", "", "self", ".", "n", "+=", "no", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.classerrormeter.ClassErrorMeter.value": [[42, 53], ["classerrormeter.ClassErrorMeter.sum.keys", "classerrormeter.ClassErrorMeter.value", "float", "float"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.value"], ["", "def", "value", "(", "self", ",", "k", "=", "-", "1", ")", ":", "\n", "        ", "if", "k", "!=", "-", "1", ":", "\n", "            ", "assert", "(", "\n", "k", "in", "self", ".", "sum", ".", "keys", "(", ")", "\n", ")", ",", "\"invalid k (this k was not provided at construction time)\"", "\n", "if", "self", ".", "accuracy", ":", "\n", "                ", "return", "(", "1.0", "-", "float", "(", "self", ".", "sum", "[", "k", "]", ")", "/", "self", ".", "n", ")", "*", "100.0", "\n", "", "else", ":", "\n", "                ", "return", "float", "(", "self", ".", "sum", "[", "k", "]", ")", "/", "self", ".", "n", "*", "100.0", "\n", "", "", "else", ":", "\n", "            ", "return", "[", "self", ".", "value", "(", "k_", ")", "for", "k_", "in", "self", ".", "topk", "]", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.msemeter.MSEMeter.__init__": [[7, 11], ["meter.Meter.__init__", "msemeter.MSEMeter.reset"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.reset"], ["    ", "def", "__init__", "(", "self", ",", "root", "=", "False", ")", ":", "\n", "        ", "super", "(", "MSEMeter", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "reset", "(", ")", "\n", "self", ".", "root", "=", "root", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.msemeter.MSEMeter.reset": [[12, 15], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "n", "=", "0", "\n", "self", ".", "sesum", "=", "0.0", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.msemeter.MSEMeter.add": [[16, 22], ["torch.from_numpy.numel", "torch.sum", "torch.from_numpy", "torch.from_numpy", "torch.is_tensor", "torch.is_tensor"], "methods", ["None"], ["", "def", "add", "(", "self", ",", "output", ",", "target", ")", ":", "\n", "        ", "if", "not", "torch", ".", "is_tensor", "(", "output", ")", "and", "not", "torch", ".", "is_tensor", "(", "target", ")", ":", "\n", "            ", "output", "=", "torch", ".", "from_numpy", "(", "output", ")", "\n", "target", "=", "torch", ".", "from_numpy", "(", "target", ")", "\n", "", "self", ".", "n", "+=", "output", ".", "numel", "(", ")", "\n", "self", ".", "sesum", "+=", "torch", ".", "sum", "(", "(", "output", "-", "target", ")", "**", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.msemeter.MSEMeter.value": [[23, 26], ["max", "math.sqrt"], "methods", ["None"], ["", "def", "value", "(", "self", ")", ":", "\n", "        ", "mse", "=", "self", ".", "sesum", "/", "max", "(", "1", ",", "self", ".", "n", ")", "\n", "return", "math", ".", "sqrt", "(", "mse", ")", "if", "self", ".", "root", "else", "mse", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.apmeter.APMeter.__init__": [[22, 25], ["meter.Meter.__init__", "apmeter.APMeter.reset"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.reset"], ["def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "APMeter", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "reset", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.apmeter.APMeter.reset": [[26, 31], ["torch.FloatTensor", "torch.LongTensor", "torch.FloatTensor", "torch.FloatStorage", "torch.LongStorage", "torch.FloatStorage"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "\"\"\"Resets the meter with empty member variables\"\"\"", "\n", "self", ".", "scores", "=", "torch", ".", "FloatTensor", "(", "torch", ".", "FloatStorage", "(", ")", ")", "\n", "self", ".", "targets", "=", "torch", ".", "LongTensor", "(", "torch", ".", "LongStorage", "(", ")", ")", "\n", "self", ".", "weights", "=", "torch", ".", "FloatTensor", "(", "torch", ".", "FloatStorage", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.apmeter.APMeter.add": [[32, 102], ["torch.equal", "apmeter.APMeter.scores.resize_", "apmeter.APMeter.targets.resize_", "apmeter.APMeter.scores.narrow().copy_", "apmeter.APMeter.targets.narrow().copy_", "torch.is_tensor", "torch.from_numpy", "torch.is_tensor", "torch.from_numpy", "torch.from_numpy.squeeze", "output.view.view.dim", "output.view.view.view", "target.view.view.dim", "target.view.view.view", "apmeter.APMeter.scores.numel", "apmeter.APMeter.scores.storage().size", "math.ceil", "math.ceil", "apmeter.APMeter.scores.storage().resize_", "apmeter.APMeter.targets.storage().resize_", "apmeter.APMeter.scores.size", "output.view.view.size", "target.view.view.size", "apmeter.APMeter.weights.resize_", "apmeter.APMeter.weights.narrow().copy_", "torch.is_tensor", "torch.from_numpy", "output.view.view.dim", "target.view.view.dim", "torch.from_numpy.dim", "torch.from_numpy.numel", "target.view.view.size", "torch.min", "target.view.view.size", "apmeter.APMeter.targets.size", "apmeter.APMeter.scores.numel", "output.view.view.numel", "int", "int", "apmeter.APMeter.weights.storage().resize_", "apmeter.APMeter.scores.dim", "output.view.view.size", "target.view.view.size", "apmeter.APMeter.scores.narrow", "apmeter.APMeter.targets.narrow", "apmeter.APMeter.scores.storage", "apmeter.APMeter.scores.storage().size", "apmeter.APMeter.weights.storage().size", "apmeter.APMeter.scores.storage", "apmeter.APMeter.targets.storage", "int", "output.view.view.size", "target.view.view.size", "torch.from_numpy.size", "apmeter.APMeter.weights.narrow", "output.view.view.numel", "output.view.view.numel", "apmeter.APMeter.weights.storage", "torch.from_numpy.size", "apmeter.APMeter.scores.storage", "apmeter.APMeter.weights.storage", "output.view.view.size"], "methods", ["None"], ["", "def", "add", "(", "self", ",", "output", ",", "target", ",", "weight", "=", "None", ")", ":", "\n", "        ", "\"\"\"Add a new observation\n\n        Args:\n            output (Tensor): NxK tensor that for each of the N examples\n                indicates the probability of the example belonging to each of\n                the K classes, according to the model. The probabilities should\n                sum to one over all classes\n            target (Tensor): binary NxK tensort that encodes which of the K\n                classes are associated with the N-th input\n                (eg: a row [0, 1, 0, 1] indicates that the example is\n                associated with classes 2 and 4)\n            weight (optional, Tensor): Nx1 tensor representing the weight for\n                each example (each weight > 0)\n\n        \"\"\"", "\n", "if", "not", "torch", ".", "is_tensor", "(", "output", ")", ":", "\n", "            ", "output", "=", "torch", ".", "from_numpy", "(", "output", ")", "\n", "", "if", "not", "torch", ".", "is_tensor", "(", "target", ")", ":", "\n", "            ", "target", "=", "torch", ".", "from_numpy", "(", "target", ")", "\n", "\n", "", "if", "weight", "is", "not", "None", ":", "\n", "            ", "if", "not", "torch", ".", "is_tensor", "(", "weight", ")", ":", "\n", "                ", "weight", "=", "torch", ".", "from_numpy", "(", "weight", ")", "\n", "", "weight", "=", "weight", ".", "squeeze", "(", ")", "\n", "", "if", "output", ".", "dim", "(", ")", "==", "1", ":", "\n", "            ", "output", "=", "output", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "", "else", ":", "\n", "            ", "assert", "(", "\n", "output", ".", "dim", "(", ")", "==", "2", "\n", ")", ",", "\"wrong output size (should be 1D or 2D with one column \\\n                per class)\"", "\n", "", "if", "target", ".", "dim", "(", ")", "==", "1", ":", "\n", "            ", "target", "=", "target", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "", "else", ":", "\n", "            ", "assert", "(", "\n", "target", ".", "dim", "(", ")", "==", "2", "\n", ")", ",", "\"wrong target size (should be 1D or 2D with one column \\\n                per class)\"", "\n", "", "if", "weight", "is", "not", "None", ":", "\n", "            ", "assert", "weight", ".", "dim", "(", ")", "==", "1", ",", "\"Weight dimension should be 1\"", "\n", "assert", "weight", ".", "numel", "(", ")", "==", "target", ".", "size", "(", "\n", "0", "\n", ")", ",", "\"Weight dimension 1 should be the same as that of target\"", "\n", "assert", "torch", ".", "min", "(", "weight", ")", ">=", "0", ",", "\"Weight should be non-negative only\"", "\n", "", "assert", "torch", ".", "equal", "(", "target", "**", "2", ",", "target", ")", ",", "\"targets should be binary (0 or 1)\"", "\n", "if", "self", ".", "scores", ".", "numel", "(", ")", ">", "0", ":", "\n", "            ", "assert", "target", ".", "size", "(", "1", ")", "==", "self", ".", "targets", ".", "size", "(", "\n", "1", "\n", ")", ",", "\"dimensions for output should match previously added examples.\"", "\n", "\n", "# make sure storage is of sufficient size", "\n", "", "if", "self", ".", "scores", ".", "storage", "(", ")", ".", "size", "(", ")", "<", "self", ".", "scores", ".", "numel", "(", ")", "+", "output", ".", "numel", "(", ")", ":", "\n", "            ", "new_size", "=", "math", ".", "ceil", "(", "self", ".", "scores", ".", "storage", "(", ")", ".", "size", "(", ")", "*", "1.5", ")", "\n", "new_weight_size", "=", "math", ".", "ceil", "(", "self", ".", "weights", ".", "storage", "(", ")", ".", "size", "(", ")", "*", "1.5", ")", "\n", "self", ".", "scores", ".", "storage", "(", ")", ".", "resize_", "(", "int", "(", "new_size", "+", "output", ".", "numel", "(", ")", ")", ")", "\n", "self", ".", "targets", ".", "storage", "(", ")", ".", "resize_", "(", "int", "(", "new_size", "+", "output", ".", "numel", "(", ")", ")", ")", "\n", "if", "weight", "is", "not", "None", ":", "\n", "                ", "self", ".", "weights", ".", "storage", "(", ")", ".", "resize_", "(", "int", "(", "new_weight_size", "+", "output", ".", "size", "(", "0", ")", ")", ")", "\n", "\n", "# store scores and targets", "\n", "", "", "offset", "=", "self", ".", "scores", ".", "size", "(", "0", ")", "if", "self", ".", "scores", ".", "dim", "(", ")", ">", "0", "else", "0", "\n", "self", ".", "scores", ".", "resize_", "(", "offset", "+", "output", ".", "size", "(", "0", ")", ",", "output", ".", "size", "(", "1", ")", ")", "\n", "self", ".", "targets", ".", "resize_", "(", "offset", "+", "target", ".", "size", "(", "0", ")", ",", "target", ".", "size", "(", "1", ")", ")", "\n", "self", ".", "scores", ".", "narrow", "(", "0", ",", "offset", ",", "output", ".", "size", "(", "0", ")", ")", ".", "copy_", "(", "output", ")", "\n", "self", ".", "targets", ".", "narrow", "(", "0", ",", "offset", ",", "target", ".", "size", "(", "0", ")", ")", ".", "copy_", "(", "target", ")", "\n", "\n", "if", "weight", "is", "not", "None", ":", "\n", "            ", "self", ".", "weights", ".", "resize_", "(", "offset", "+", "weight", ".", "size", "(", "0", ")", ")", "\n", "self", ".", "weights", ".", "narrow", "(", "0", ",", "offset", ",", "weight", ".", "size", "(", "0", ")", ")", ".", "copy_", "(", "weight", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.apmeter.APMeter.value": [[103, 146], ["torch.zeros", "hasattr", "range", "apmeter.APMeter.scores.numel", "apmeter.APMeter.scores.size", "torch.arange().float", "torch.range().float", "apmeter.APMeter.weights.numel", "apmeter.APMeter.weights.new", "apmeter.APMeter.weights.new", "apmeter.APMeter.scores.size", "torch.sort", "truth.float().cumsum.div", "apmeter.APMeter.weights.size", "apmeter.APMeter.weights.size", "apmeter.APMeter.weights.numel", "apmeter.APMeter.cumsum", "apmeter.APMeter.weights.numel", "apmeter.APMeter.cumsum", "truth.float().cumsum", "precision[].sum", "max", "torch.arange", "torch.range", "truth.float", "float", "apmeter.APMeter.scores.size", "truth.float", "truth.sum", "apmeter.APMeter.scores.size", "truth.bool"], "methods", ["None"], ["", "", "def", "value", "(", "self", ")", ":", "\n", "        ", "\"\"\"Returns the model's average precision for each class\n\n        Return:\n            ap (FloatTensor): 1xK tensor, with avg precision for each class k\n\n        \"\"\"", "\n", "\n", "if", "self", ".", "scores", ".", "numel", "(", ")", "==", "0", ":", "\n", "            ", "return", "0", "\n", "", "ap", "=", "torch", ".", "zeros", "(", "self", ".", "scores", ".", "size", "(", "1", ")", ")", "\n", "if", "hasattr", "(", "torch", ",", "\"arange\"", ")", ":", "\n", "            ", "rg", "=", "torch", ".", "arange", "(", "1", ",", "self", ".", "scores", ".", "size", "(", "0", ")", "+", "1", ")", ".", "float", "(", ")", "\n", "", "else", ":", "\n", "            ", "rg", "=", "torch", ".", "range", "(", "1", ",", "self", ".", "scores", ".", "size", "(", "0", ")", ")", ".", "float", "(", ")", "\n", "", "if", "self", ".", "weights", ".", "numel", "(", ")", ">", "0", ":", "\n", "            ", "weight", "=", "self", ".", "weights", ".", "new", "(", "self", ".", "weights", ".", "size", "(", ")", ")", "\n", "weighted_truth", "=", "self", ".", "weights", ".", "new", "(", "self", ".", "weights", ".", "size", "(", ")", ")", "\n", "\n", "# compute average precision for each class", "\n", "", "for", "k", "in", "range", "(", "self", ".", "scores", ".", "size", "(", "1", ")", ")", ":", "\n", "# sort scores", "\n", "            ", "scores", "=", "self", ".", "scores", "[", ":", ",", "k", "]", "\n", "targets", "=", "self", ".", "targets", "[", ":", ",", "k", "]", "\n", "_", ",", "sortind", "=", "torch", ".", "sort", "(", "scores", ",", "0", ",", "True", ")", "\n", "truth", "=", "targets", "[", "sortind", "]", "\n", "if", "self", ".", "weights", ".", "numel", "(", ")", ">", "0", ":", "\n", "                ", "weight", "=", "self", ".", "weights", "[", "sortind", "]", "\n", "weighted_truth", "=", "truth", ".", "float", "(", ")", "*", "weight", "\n", "rg", "=", "weight", ".", "cumsum", "(", "0", ")", "\n", "\n", "# compute true positive sums", "\n", "", "if", "self", ".", "weights", ".", "numel", "(", ")", ">", "0", ":", "\n", "                ", "tp", "=", "weighted_truth", ".", "cumsum", "(", "0", ")", "\n", "", "else", ":", "\n", "                ", "tp", "=", "truth", ".", "float", "(", ")", ".", "cumsum", "(", "0", ")", "\n", "\n", "# compute precision curve", "\n", "", "precision", "=", "tp", ".", "div", "(", "rg", ")", "\n", "\n", "# compute average precision", "\n", "ap", "[", "k", "]", "=", "precision", "[", "truth", ".", "bool", "(", ")", "]", ".", "sum", "(", ")", "/", "max", "(", "float", "(", "truth", ".", "sum", "(", ")", ")", ",", "1", ")", "\n", "", "return", "ap", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.__init__": [[6, 10], ["meter.Meter.__init__", "averagevaluemeter.AverageValueMeter.reset"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.reset"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "super", "(", "AverageValueMeter", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "reset", "(", ")", "\n", "self", ".", "val", "=", "0", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.add": [[11, 29], ["ValueError", "numpy.sqrt", "float"], "methods", ["None"], ["", "def", "add", "(", "self", ",", "value", ",", "n", "=", "1", ")", ":", "\n", "        ", "self", ".", "val", "=", "value", "\n", "self", ".", "sum", "+=", "value", "*", "n", "\n", "if", "n", "<=", "0", ":", "\n", "            ", "raise", "ValueError", "(", "\"Cannot use a non-positive weight for the running stat.\"", ")", "\n", "", "elif", "self", ".", "n", "==", "0", ":", "\n", "            ", "self", ".", "mean", "=", "0.0", "+", "value", "# This is to force a copy in torch/numpy", "\n", "self", ".", "std", "=", "np", ".", "inf", "\n", "self", ".", "mean_old", "=", "self", ".", "mean", "\n", "self", ".", "m_s", "=", "0.0", "\n", "", "else", ":", "\n", "            ", "self", ".", "mean", "=", "self", ".", "mean_old", "+", "n", "*", "(", "value", "-", "self", ".", "mean_old", ")", "/", "float", "(", "self", ".", "n", "+", "n", ")", "\n", "self", ".", "m_s", "+=", "n", "*", "(", "value", "-", "self", ".", "mean_old", ")", "*", "(", "value", "-", "self", ".", "mean", ")", "\n", "self", ".", "mean_old", "=", "self", ".", "mean", "\n", "self", ".", "std", "=", "np", ".", "sqrt", "(", "self", ".", "m_s", "/", "(", "self", ".", "n", "+", "n", "-", "1.0", ")", ")", "\n", "", "self", ".", "var", "=", "self", ".", "std", "**", "2", "\n", "\n", "self", ".", "n", "+=", "n", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.value": [[30, 32], ["None"], "methods", ["None"], ["", "def", "value", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "mean", ",", "self", ".", "std", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.reset": [[33, 42], ["None"], "methods", ["None"], ["", "def", "reset", "(", "self", ")", ":", "\n", "        ", "self", ".", "n", "=", "0", "\n", "self", ".", "sum", "=", "0.0", "\n", "self", ".", "var", "=", "0.0", "\n", "self", ".", "val", "=", "0.0", "\n", "self", ".", "mean", "=", "np", ".", "nan", "\n", "self", ".", "mean_old", "=", "0.0", "\n", "self", ".", "m_s", "=", "0.0", "\n", "self", ".", "std", "=", "np", ".", "nan", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher._utils.GlobalLabelGenerator.__init__": [[54, 57], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "contrastive_on_patient", "=", "False", ",", "contrastive_on_partition", "=", "True", ")", "->", "None", ":", "\n", "        ", "self", ".", "_contrastive_on_patient", "=", "contrastive_on_patient", "\n", "self", ".", "_contrastive_on_partition", "=", "contrastive_on_partition", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher._utils.GlobalLabelGenerator.__call__": [[58, 70], ["len", "_utils.unique_mapping", "len", "len", "len", "len", "_utils._string_list_adding", "_utils._string_list_adding"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher._utils.unique_mapping", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher._utils._string_list_adding", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher._utils._string_list_adding"], ["", "def", "__call__", "(", "self", ",", "partition_list", ":", "List", "[", "str", "]", ",", "patient_list", ":", "List", "[", "str", "]", ")", "->", "List", "[", "int", "]", ":", "\n", "        ", "assert", "len", "(", "partition_list", ")", "==", "len", "(", "patient_list", ")", ",", "(", "len", "(", "partition_list", ")", ",", "len", "(", "patient_list", ")", ")", "\n", "batch_size", "=", "len", "(", "partition_list", ")", "\n", "\n", "final_string", "=", "[", "\"\"", "]", "*", "batch_size", "\n", "if", "self", ".", "_contrastive_on_patient", ":", "\n", "            ", "final_string", "=", "_string_list_adding", "(", "final_string", ",", "patient_list", ")", "\n", "\n", "", "if", "self", ".", "_contrastive_on_partition", ":", "\n", "            ", "final_string", "=", "_string_list_adding", "(", "final_string", ",", "partition_list", ")", "\n", "\n", "", "return", "unique_mapping", "(", "final_string", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher._utils.LocalLabelGenerator.__init__": [[74, 76], ["_utils.GlobalLabelGenerator.__init__"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["    ", "def", "__init__", "(", "self", ",", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "True", ",", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher._utils.LocalLabelGenerator.__call__": [[77, 87], ["int", "_utils.GlobalLabelGenerator.__call__", "str", "str", "str", "len", "len", "_utils._string_list_adding", "len", "len"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.augment.sequential_wrapper.SequentialWrapperTwice.__call__", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher._utils._string_list_adding"], ["", "def", "__call__", "(", "self", ",", "partition_list", ":", "List", "[", "str", "]", ",", "patient_list", ":", "List", "[", "str", "]", ",", "location_list", ":", "List", "[", "str", "]", ")", "->", "List", "[", "int", "]", ":", "\n", "        ", "partition_list", "=", "[", "str", "(", "x", ")", "for", "x", "in", "partition_list", "]", "\n", "patient_list", "=", "[", "str", "(", "x", ")", "for", "x", "in", "patient_list", "]", "\n", "location_list", "=", "[", "str", "(", "x", ")", "for", "x", "in", "location_list", "]", "\n", "mul_factor", "=", "int", "(", "len", "(", "location_list", ")", "//", "len", "(", "patient_list", ")", ")", "\n", "partition_list", "=", "partition_list", "*", "mul_factor", "\n", "patient_list", "=", "patient_list", "*", "mul_factor", "\n", "assert", "len", "(", "location_list", ")", "==", "len", "(", "partition_list", ")", "\n", "\n", "return", "super", "(", ")", ".", "__call__", "(", "_string_list_adding", "(", "patient_list", ",", "partition_list", ")", ",", "location_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher._utils.unique_mapping": [[12, 18], ["numpy.unique", "enumerate"], "function", ["None"], ["def", "unique_mapping", "(", "name_list", ")", ":", "\n", "    ", "unique_map", "=", "np", ".", "unique", "(", "name_list", ")", "\n", "mapping", "=", "{", "}", "\n", "for", "i", ",", "u", "in", "enumerate", "(", "unique_map", ")", ":", "\n", "        ", "mapping", "[", "u", "]", "=", "i", "\n", "", "return", "[", "mapping", "[", "n", "]", "for", "n", "in", "name_list", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher._utils._string_list_adding": [[20, 23], ["len", "len", "zip"], "function", ["None"], ["", "def", "_string_list_adding", "(", "list1", ",", "list2", ")", ":", "\n", "    ", "assert", "len", "(", "list1", ")", "==", "len", "(", "list2", ")", "\n", "return", "[", "x", "+", "\"_\"", "+", "y", "for", "x", ",", "y", "in", "zip", "(", "list1", ",", "list2", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher._utils.preprocess_input_with_twice_transformation": [[25, 29], ["deepclustering2.type.to_device"], "function", ["None"], ["", "def", "preprocess_input_with_twice_transformation", "(", "data", ",", "device", ",", "non_blocking", "=", "True", ")", ":", "\n", "    ", "[", "(", "image", ",", "target", ")", ",", "(", "image_tf", ",", "target_tf", ")", "]", ",", "filename", ",", "partition_list", ",", "group_list", "=", "to_device", "(", "data", "[", "0", "]", ",", "device", ",", "non_blocking", ")", ",", "data", "[", "1", "]", ",", "data", "[", "2", "]", ",", "data", "[", "3", "]", "\n", "return", "(", "image", ",", "target", ")", ",", "(", "image_tf", ",", "target_tf", ")", ",", "filename", ",", "partition_list", ",", "group_list", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher._utils.preprocess_input_with_single_transformation": [[31, 34], ["[].to", "[].to"], "function", ["None"], ["", "def", "preprocess_input_with_single_transformation", "(", "data", ",", "device", ",", "non_blocking", "=", "True", ")", ":", "\n", "    ", "return", "data", "[", "0", "]", "[", "0", "]", ".", "to", "(", "device", ",", "non_blocking", "=", "non_blocking", ")", ",", "data", "[", "0", "]", "[", "1", "]", ".", "to", "(", "device", ",", "non_blocking", "=", "non_blocking", ")", ",", "data", "[", "1", "]", ",", "data", "[", "2", "]", ",", "data", "[", "3", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher._utils.unfold_position": [[36, 50], ["deepclustering2.type.torch.arange", "deepclustering2.type.torch.arange", "deepclustering2.type.torch.cat", "result.append", "range", "result_flag.append", "int", "int"], "function", ["None"], ["", "def", "unfold_position", "(", "features", ":", "torch", ".", "Tensor", ",", "partition_num", "=", "(", "4", ",", "4", ")", ",", ")", ":", "\n", "    ", "b", ",", "c", ",", "h", ",", "w", "=", "features", ".", "shape", "\n", "block_h", "=", "h", "//", "partition_num", "[", "0", "]", "\n", "block_w", "=", "w", "//", "partition_num", "[", "1", "]", "\n", "h_index", "=", "torch", ".", "arange", "(", "0", ",", "h", "-", "block_h", "+", "1", ",", "block_h", ")", "\n", "w_index", "=", "torch", ".", "arange", "(", "0", ",", "w", "-", "block_w", "+", "1", ",", "block_w", ")", "\n", "result", "=", "[", "]", "\n", "result_flag", "=", "[", "]", "\n", "for", "h", "in", "h_index", ":", "\n", "        ", "for", "w", "in", "w_index", ":", "\n", "            ", "result", ".", "append", "(", "features", "[", ":", ",", ":", ",", "h", ":", "h", "+", "block_h", ",", "w", ":", "w", "+", "block_w", "]", ")", "\n", "for", "_", "in", "range", "(", "b", ")", ":", "\n", "                ", "result_flag", ".", "append", "(", "(", "int", "(", "h", ")", ",", "int", "(", "w", ")", ")", ")", "\n", "", "", "", "return", "torch", ".", "cat", "(", "result", ",", "dim", "=", "0", ")", ",", "result_flag", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher._utils._write_single_png": [[89, 97], ["mask.cpu().detach().numpy.cpu().detach().numpy", "mask.cpu().detach().numpy.shape.__len__", "os.path.exists", "os.mkdir", "warnings.catch_warnings", "warnings.simplefilter", "skimage.io.imsave", "mask.cpu().detach().numpy.cpu().detach", "os.path.join", "mask.cpu().detach().numpy.astype", "mask.cpu().detach().numpy.cpu"], "function", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.LocalClusterWrappaer.__len__"], ["", "", "def", "_write_single_png", "(", "mask", ":", "Tensor", ",", "save_dir", ":", "str", ",", "filename", ":", "str", ")", ":", "\n", "    ", "assert", "mask", ".", "shape", ".", "__len__", "(", ")", "==", "2", ",", "mask", ".", "shape", "\n", "mask", "=", "mask", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "save_dir", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "save_dir", ")", "\n", "", "with", "warnings", ".", "catch_warnings", "(", "record", "=", "True", ")", "as", "w", ":", "\n", "        ", "warnings", ".", "simplefilter", "(", "\"always\"", ")", "\n", "imsave", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "(", "filename", "+", "\".png\"", ")", ")", ",", "mask", ".", "astype", "(", "np", ".", "uint8", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher._utils.write_predict": [[99, 107], ["isinstance", "zip", "len", "len", "len", "predict_logit.max", "_utils._write_single_png", "os.path.join"], "function", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher._utils._write_single_png"], ["", "", "def", "write_predict", "(", "predict_logit", ":", "Tensor", ",", "save_dir", ":", "str", ",", "filenames", ":", "Union", "[", "str", ",", "List", "[", "str", "]", "]", ")", ":", "\n", "    ", "assert", "len", "(", "predict_logit", ".", "shape", ")", "==", "4", ",", "predict_logit", ".", "shape", "\n", "if", "isinstance", "(", "filenames", ",", "str", ")", ":", "\n", "        ", "filenames", "=", "[", "filenames", ",", "]", "\n", "", "assert", "len", "(", "filenames", ")", "==", "len", "(", "predict_logit", ")", "\n", "predict_mask", "=", "predict_logit", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "for", "m", ",", "f", "in", "zip", "(", "predict_mask", ",", "filenames", ")", ":", "\n", "        ", "_write_single_png", "(", "m", ",", "os", ".", "path", ".", "join", "(", "save_dir", ",", "\"pred\"", ")", ",", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher._utils.write_img_target": [[109, 119], ["isinstance", "image.squeeze.squeeze", "target.squeeze.squeeze", "zip", "zip", "_utils._write_single_png", "_utils._write_single_png", "os.path.join", "os.path.join"], "function", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher._utils._write_single_png", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher._utils._write_single_png"], ["", "", "def", "write_img_target", "(", "image", ":", "Tensor", ",", "target", ":", "Tensor", ",", "save_dir", ":", "str", ",", "filenames", ":", "Union", "[", "str", ",", "List", "[", "str", "]", "]", ")", ":", "\n", "    ", "if", "isinstance", "(", "filenames", ",", "str", ")", ":", "\n", "        ", "filenames", "=", "[", "filenames", ",", "]", "\n", "", "image", "=", "image", ".", "squeeze", "(", ")", "\n", "target", "=", "target", ".", "squeeze", "(", ")", "\n", "assert", "image", ".", "shape", "==", "target", ".", "shape", "\n", "for", "img", ",", "f", "in", "zip", "(", "image", ",", "filenames", ")", ":", "\n", "        ", "_write_single_png", "(", "img", "*", "255", ",", "os", ".", "path", ".", "join", "(", "save_dir", ",", "\"img\"", ")", ",", "f", ")", "\n", "", "for", "targ", ",", "f", "in", "zip", "(", "target", ",", "filenames", ")", ":", "\n", "        ", "_write_single_png", "(", "targ", ",", "os", ".", "path", ".", "join", "(", "save_dir", ",", "\"gt\"", ")", ",", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.base_epocher.EvalEpoch.__init__": [[23, 38], ["deepclustering2.epoch._Epocher.__init__", "isinstance", "callable"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model", ":", "Union", "[", "Model", ",", "nn", ".", "Module", "]", ",", "val_loader", ":", "DataLoader", ",", "sup_criterion", ":", "T_loss", ",", "cur_epoch", "=", "0", ",", "\n", "device", "=", "\"cpu\"", ")", "->", "None", ":", "\n", "        ", "\"\"\"\n        :param model: Model or nn.Module instance, network\n        :param val_loader: validation loader that is an instance of DataLoader, without infinitesampler\n        :param sup_criterion: Supervised loss to record the val_loss\n        :param cur_epoch: current epoch to record\n        :param device: cuda or cpu\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "model", ",", "cur_epoch", ",", "device", ")", "\n", "assert", "isinstance", "(", "val_loader", ",", "DataLoader", ")", ",", "f\"`val_loader` should be an instance of `DataLoader`, \"", "f\"given {val_loader.__class__.__name__}\"", "\n", "assert", "callable", "(", "sup_criterion", ")", ",", "f\"sup_criterion must be callable, given {sup_criterion.__class__.__name__}\"", "\n", "self", ".", "_val_loader", "=", "val_loader", "\n", "self", ".", "_sup_criterion", "=", "sup_criterion", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.base_epocher.EvalEpoch.create_from_trainer": [[39, 42], ["None"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "create_from_trainer", "(", "cls", ",", "trainer", ")", ":", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.base_epocher.EvalEpoch._configure_meters": [[43, 47], ["meters.register_meter", "meters.register_meter", "deepclustering2.meters2.AverageValueMeter", "deepclustering2.meters2.UniversalDice"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInterface.register_meter", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInterface.register_meter"], ["", "def", "_configure_meters", "(", "self", ",", "meters", ":", "MeterInterface", ")", "->", "MeterInterface", ":", "\n", "        ", "meters", ".", "register_meter", "(", "\"sup_loss\"", ",", "AverageValueMeter", "(", ")", ")", "\n", "meters", ".", "register_meter", "(", "\"ds\"", ",", "UniversalDice", "(", "4", ",", "[", "1", ",", "2", ",", "3", "]", ")", ")", "\n", "return", "meters", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.base_epocher.EvalEpoch._run": [[48, 65], ["torch.no_grad", "base_epocher.EvalEpoch._model.eval", "base_epocher.EvalEpoch.meters.tracking_status", "deepclustering2.tqdm.tqdm().set_desc_from_epocher", "enumerate", "base_epocher.EvalEpoch._preprocess_data", "base_epocher.EvalEpoch._model", "deepclustering2.utils.class2one_hot", "base_epocher.EvalEpoch._sup_criterion", "base_epocher.EvalEpoch.meters[].add", "base_epocher.EvalEpoch.meters[].add", "base_epocher.EvalEpoch.meters.tracking_status", "indicator.set_postfix_dict", "deepclustering2.tqdm.tqdm", "deepclustering2.loss.simplex", "targets.squeeze", "base_epocher.EvalEpoch.softmax", "base_epocher.EvalEpoch.item", "targets.squeeze", "base_epocher.EvalEpoch.max", "list"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInteractMixin.tracking_status", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.contrast_epocher.PretrainEncoderEpoch._preprocess_data", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.add", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.add", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInteractMixin.tracking_status"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "_run", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", "->", "Tuple", "[", "EpochResultDict", ",", "float", "]", ":", "\n", "        ", "self", ".", "_model", ".", "eval", "(", ")", "\n", "assert", "not", "self", ".", "_model", ".", "training", ",", "self", ".", "_model", ".", "training", "\n", "with", "tqdm", "(", "self", ".", "_val_loader", ")", ".", "set_desc_from_epocher", "(", "self", ")", "as", "indicator", ":", "\n", "            ", "for", "i", ",", "data", "in", "enumerate", "(", "indicator", ")", ":", "\n", "                ", "images", ",", "targets", ",", "filename", ",", "partiton_list", ",", "group_list", "=", "self", ".", "_preprocess_data", "(", "data", ",", "self", ".", "_device", ")", "\n", "predict_logits", "=", "self", ".", "_model", "(", "images", ")", "\n", "assert", "not", "simplex", "(", "predict_logits", ")", ",", "predict_logits", ".", "shape", "\n", "onehot_targets", "=", "class2one_hot", "(", "targets", ".", "squeeze", "(", "1", ")", ",", "4", ")", "\n", "loss", "=", "self", ".", "_sup_criterion", "(", "predict_logits", ".", "softmax", "(", "1", ")", ",", "onehot_targets", ",", "disable_assert", "=", "True", ")", "\n", "self", ".", "meters", "[", "\"sup_loss\"", "]", ".", "add", "(", "loss", ".", "item", "(", ")", ")", "\n", "self", ".", "meters", "[", "\"ds\"", "]", ".", "add", "(", "predict_logits", ".", "max", "(", "1", ")", "[", "1", "]", ",", "targets", ".", "squeeze", "(", "1", ")", ",", "group_name", "=", "list", "(", "group_list", ")", ")", "\n", "report_dict", "=", "self", ".", "meters", ".", "tracking_status", "(", ")", "\n", "indicator", ".", "set_postfix_dict", "(", "report_dict", ")", "\n", "", "", "report_dict", "=", "self", ".", "meters", ".", "tracking_status", "(", ")", "\n", "return", "report_dict", ",", "report_dict", "[", "\"ds\"", "]", "[", "\"DSC_mean\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.base_epocher.EvalEpoch._preprocess_data": [[66, 69], ["_utils.preprocess_input_with_single_transformation"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher._utils.preprocess_input_with_single_transformation"], ["", "@", "staticmethod", "\n", "def", "_preprocess_data", "(", "data", ",", "device", ",", "non_blocking", "=", "True", ")", ":", "\n", "        ", "return", "preprocess_input_with_single_transformation", "(", "data", ",", "device", ",", "non_blocking", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.base_epocher.SimpleFineTuneEpoch.__init__": [[72, 81], ["deepclustering2.epoch._Epocher.__init__", "callable", "isinstance"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model", ":", "nn", ".", "Module", ",", "optimizer", ":", "T_optim", ",", "labeled_loader", ":", "T_loader", ",", "num_batches", ":", "int", "=", "100", ",", "\n", "sup_criterion", ":", "T_loss", "=", "None", ",", "cur_epoch", "=", "0", ",", "device", "=", "\"cpu\"", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "model", ",", "cur_epoch", ",", "device", ")", "\n", "assert", "isinstance", "(", "num_batches", ",", "int", ")", "and", "num_batches", ">", "0", ",", "num_batches", "\n", "assert", "callable", "(", "sup_criterion", ")", ",", "sup_criterion", "\n", "self", ".", "_labeled_loader", "=", "labeled_loader", "\n", "self", ".", "_sup_criterion", "=", "sup_criterion", "\n", "self", ".", "_num_batches", "=", "num_batches", "\n", "self", ".", "_optimizer", "=", "optimizer", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.base_epocher.SimpleFineTuneEpoch.create_from_trainer": [[82, 88], ["cls"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "create_from_trainer", "(", "cls", ",", "trainer", ")", ":", "\n", "        ", "return", "cls", "(", "\n", "model", "=", "trainer", ".", "_model", ",", "optimizer", "=", "trainer", ".", "_optimizer", ",", "labeled_loader", "=", "trainer", ".", "_fine_tune_loader_iter", ",", "\n", "sup_criterion", "=", "trainer", ".", "_sup_criterion", ",", "num_batches", "=", "trainer", ".", "_num_batches", ",", "cur_epoch", "=", "trainer", ".", "_cur_epoch", ",", "\n", "device", "=", "trainer", ".", "_device", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.base_epocher.SimpleFineTuneEpoch._configure_meters": [[90, 95], ["meters.register_meter", "meters.register_meter", "meters.register_meter", "deepclustering2.meters2.AverageValueMeter", "deepclustering2.meters2.AverageValueMeter", "deepclustering2.meters2.UniversalDice"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInterface.register_meter", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInterface.register_meter", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInterface.register_meter"], ["", "def", "_configure_meters", "(", "self", ",", "meters", ":", "MeterInterface", ")", "->", "MeterInterface", ":", "\n", "        ", "meters", ".", "register_meter", "(", "\"lr\"", ",", "AverageValueMeter", "(", ")", ")", "\n", "meters", ".", "register_meter", "(", "\"sup_loss\"", ",", "AverageValueMeter", "(", ")", ")", "\n", "meters", ".", "register_meter", "(", "\"ds\"", ",", "UniversalDice", "(", "4", ",", "[", "1", ",", "2", ",", "3", "]", ")", ")", "\n", "return", "meters", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.base_epocher.SimpleFineTuneEpoch._run": [[96, 123], ["base_epocher.SimpleFineTuneEpoch._model.train", "base_epocher.SimpleFineTuneEpoch.meters[].add", "deepclustering2.tqdm.tqdm().set_desc_from_epocher", "zip", "base_epocher.SimpleFineTuneEpoch.meters.tracking_status", "deepclustering2.optim.get_lrs_from_optimizer", "base_epocher.SimpleFineTuneEpoch._preprocess_data", "base_epocher.SimpleFineTuneEpoch._model", "deepclustering2.utils.class2one_hot", "base_epocher.SimpleFineTuneEpoch._sup_criterion", "base_epocher.SimpleFineTuneEpoch._optimizer.zero_grad", "base_epocher.SimpleFineTuneEpoch.backward", "base_epocher.SimpleFineTuneEpoch._optimizer.step", "deepclustering2.tqdm.tqdm", "deepclustering2.loss.simplex", "labeltarget.squeeze", "base_epocher.SimpleFineTuneEpoch.softmax", "torch.no_grad", "base_epocher.SimpleFineTuneEpoch.meters[].add", "base_epocher.SimpleFineTuneEpoch.meters[].add", "base_epocher.SimpleFineTuneEpoch.meters.tracking_status", "indicator.set_postfix_dict", "range", "base_epocher.SimpleFineTuneEpoch.item", "labeltarget.squeeze", "base_epocher.SimpleFineTuneEpoch.max", "list"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.add", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInteractMixin.tracking_status", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.contrast_epocher.PretrainEncoderEpoch._preprocess_data", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.add", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.add", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInteractMixin.tracking_status"], ["", "def", "_run", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", "->", "EpochResultDict", ":", "\n", "        ", "self", ".", "_model", ".", "train", "(", ")", "\n", "assert", "self", ".", "_model", ".", "training", ",", "self", ".", "_model", ".", "training", "\n", "report_dict", ":", "EpochResultDict", "\n", "self", ".", "meters", "[", "\"lr\"", "]", ".", "add", "(", "get_lrs_from_optimizer", "(", "self", ".", "_optimizer", ")", "[", "0", "]", ")", "\n", "with", "tqdm", "(", "range", "(", "self", ".", "_num_batches", ")", ")", ".", "set_desc_from_epocher", "(", "self", ")", "as", "indicator", ":", "\n", "            ", "for", "i", ",", "label_data", "in", "zip", "(", "indicator", ",", "self", ".", "_labeled_loader", ")", ":", "\n", "                ", "(", "labelimage", ",", "labeltarget", ")", ",", "_", ",", "filename", ",", "partition_list", ",", "group_list", "=", "self", ".", "_preprocess_data", "(", "label_data", ",", "self", ".", "_device", ")", "\n", "predict_logits", "=", "self", ".", "_model", "(", "labelimage", ")", "\n", "assert", "not", "simplex", "(", "predict_logits", ")", ",", "predict_logits", "\n", "\n", "onehot_ltarget", "=", "class2one_hot", "(", "labeltarget", ".", "squeeze", "(", "1", ")", ",", "4", ")", "\n", "sup_loss", "=", "self", ".", "_sup_criterion", "(", "predict_logits", ".", "softmax", "(", "1", ")", ",", "onehot_ltarget", ")", "\n", "\n", "self", ".", "_optimizer", ".", "zero_grad", "(", ")", "\n", "sup_loss", ".", "backward", "(", ")", "\n", "self", ".", "_optimizer", ".", "step", "(", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "self", ".", "meters", "[", "\"sup_loss\"", "]", ".", "add", "(", "sup_loss", ".", "item", "(", ")", ")", "\n", "self", ".", "meters", "[", "\"ds\"", "]", ".", "add", "(", "predict_logits", ".", "max", "(", "1", ")", "[", "1", "]", ",", "labeltarget", ".", "squeeze", "(", "1", ")", ",", "\n", "group_name", "=", "list", "(", "group_list", ")", ")", "\n", "report_dict", "=", "self", ".", "meters", ".", "tracking_status", "(", ")", "\n", "indicator", ".", "set_postfix_dict", "(", "report_dict", ")", "\n", "", "", "report_dict", "=", "self", ".", "meters", ".", "tracking_status", "(", ")", "\n", "", "return", "report_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.base_epocher.SimpleFineTuneEpoch._preprocess_data": [[124, 127], ["_utils.preprocess_input_with_twice_transformation"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher._utils.preprocess_input_with_twice_transformation"], ["", "@", "staticmethod", "\n", "def", "_preprocess_data", "(", "data", ",", "device", ")", ":", "\n", "        ", "return", "preprocess_input_with_twice_transformation", "(", "data", ",", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.base_epocher.MeanTeacherEpocher.__init__": [[131, 145], ["base_epocher.SimpleFineTuneEpoch.__init__", "callable", "deepclustering2.augment.tensor_augment.TensorRandomFlip", "print", "float"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model", ":", "nn", ".", "Module", ",", "teacher_model", ":", "nn", ".", "Module", ",", "optimizer", ":", "T_optim", ",", "labeled_loader", ":", "T_loader", ",", "\n", "tra_loader", ":", "T_loader", ",", "num_batches", ":", "int", "=", "100", ",", "sup_criterion", ":", "T_loss", "=", "None", ",", "\n", "reg_criterion", ":", "T_loss", "=", "None", ",", "cur_epoch", "=", "0", ",", "device", "=", "\"cpu\"", ",", "transform_axis", "=", "None", ",", "\n", "reg_weight", ":", "float", "=", "0.0", ",", "ema_updater", "=", "None", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "model", ",", "optimizer", ",", "labeled_loader", ",", "num_batches", ",", "sup_criterion", ",", "cur_epoch", ",", "device", ")", "\n", "self", ".", "_teacher_model", "=", "teacher_model", "\n", "assert", "callable", "(", "reg_criterion", ")", ",", "reg_weight", "\n", "self", ".", "_reg_criterion", "=", "reg_criterion", "\n", "self", ".", "_tra_loader", "=", "tra_loader", "\n", "self", ".", "_transformer", "=", "TensorRandomFlip", "(", "transform_axis", ")", "\n", "print", "(", "self", ".", "_transformer", ")", "\n", "self", ".", "_reg_weight", "=", "float", "(", "reg_weight", ")", "\n", "assert", "ema_updater", "\n", "self", ".", "_ema_updater", "=", "ema_updater", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.base_epocher.MeanTeacherEpocher.create_from_trainer": [[146, 154], ["cls"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "create_from_trainer", "(", "cls", ",", "trainer", ")", ":", "\n", "        ", "return", "cls", "(", "model", "=", "trainer", ".", "_model", ",", "teacher_model", "=", "trainer", ".", "_teacher_model", ",", "optimizer", "=", "trainer", ".", "_optimizer", ",", "\n", "labeled_loader", "=", "trainer", ".", "_fine_tune_loader_iter", ",", "tra_loader", "=", "trainer", ".", "_pretrain_loader", ",", "\n", "sup_criterion", "=", "trainer", ".", "_sup_criterion", ",", "reg_criterion", "=", "trainer", ".", "_reg_criterion", ",", "\n", "num_batches", "=", "trainer", ".", "_num_batches", ",", "\n", "cur_epoch", "=", "trainer", ".", "_cur_epoch", ",", "device", "=", "trainer", ".", "_device", ",", "transform_axis", "=", "trainer", ".", "_transform_axis", ",", "\n", "reg_weight", "=", "trainer", ".", "_reg_weight", ",", "ema_updater", "=", "trainer", ".", "_ema_updater", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.base_epocher.MeanTeacherEpocher._configure_meters": [[155, 160], ["base_epocher.SimpleFineTuneEpoch._configure_meters", "super()._configure_meters.register_meter", "super()._configure_meters.register_meter", "deepclustering2.meters2.AverageValueMeter", "deepclustering2.meters2.AverageValueMeter"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher._configure_meters", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInterface.register_meter", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInterface.register_meter"], ["", "def", "_configure_meters", "(", "self", ",", "meters", ":", "MeterInterface", ")", "->", "MeterInterface", ":", "\n", "        ", "meters", "=", "super", "(", ")", ".", "_configure_meters", "(", "meters", ")", "\n", "meters", ".", "register_meter", "(", "\"reg_loss\"", ",", "AverageValueMeter", "(", ")", ")", "\n", "meters", ".", "register_meter", "(", "\"reg_weight\"", ",", "AverageValueMeter", "(", ")", ")", "\n", "return", "meters", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.base_epocher.MeanTeacherEpocher._run": [[161, 217], ["base_epocher.MeanTeacherEpocher._model.train", "base_epocher.MeanTeacherEpocher._teacher_model.train", "base_epocher.MeanTeacherEpocher.meters[].add", "base_epocher.MeanTeacherEpocher.meters[].add", "deepclustering2.tqdm.tqdm().set_desc_from_epocher", "zip", "base_epocher.MeanTeacherEpocher.meters.tracking_status", "base_epocher.MeanTeacherEpocher._preprocess_data", "base_epocher.MeanTeacherEpocher._preprocess_data", "random.randint", "base_epocher.MeanTeacherEpocher._model", "deepclustering2.loss.simplex", "deepclustering2.utils.class2one_hot", "base_epocher.MeanTeacherEpocher._sup_criterion", "base_epocher.MeanTeacherEpocher._reg_criterion", "base_epocher.MeanTeacherEpocher._optimizer.zero_grad", "total_loss.backward", "base_epocher.MeanTeacherEpocher._optimizer.step", "base_epocher.MeanTeacherEpocher._ema_updater", "deepclustering2.tqdm.tqdm", "int", "deepclustering2.decorator.FixRandomSeed", "torch.stack", "torch.cat", "RuntimeError", "torch.no_grad", "base_epocher.MeanTeacherEpocher._teacher_model", "deepclustering2.decorator.FixRandomSeed", "torch.stack", "labeltarget.squeeze", "student_sup_logits.softmax", "student_unlabel_logits_tf.softmax", "torch.stack.detach().softmax", "torch.no_grad", "base_epocher.MeanTeacherEpocher.meters[].add", "base_epocher.MeanTeacherEpocher.meters[].add", "base_epocher.MeanTeacherEpocher.meters[].add", "base_epocher.MeanTeacherEpocher.meters.tracking_status", "indicator.set_postfix_dict", "range", "base_epocher.MeanTeacherEpocher.item", "base_epocher.MeanTeacherEpocher.item", "labeltarget.squeeze", "base_epocher.MeanTeacherEpocher._transformer", "len", "len", "base_epocher.MeanTeacherEpocher._transformer", "torch.stack.detach", "student_sup_logits.max", "list"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.add", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.add", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInteractMixin.tracking_status", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.contrast_epocher.PretrainEncoderEpoch._preprocess_data", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.contrast_epocher.PretrainEncoderEpoch._preprocess_data", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.add", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.add", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.add", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInteractMixin.tracking_status"], ["", "def", "_run", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", "->", "EpochResultDict", ":", "\n", "        ", "self", ".", "_model", ".", "train", "(", ")", "\n", "self", ".", "_teacher_model", ".", "train", "(", ")", "\n", "assert", "self", ".", "_model", ".", "training", ",", "self", ".", "_model", ".", "training", "\n", "assert", "self", ".", "_teacher_model", ".", "training", ",", "self", ".", "_teacher_model", ".", "training", "\n", "self", ".", "meters", "[", "\"lr\"", "]", ".", "add", "(", "self", ".", "_optimizer", ".", "param_groups", "[", "0", "]", "[", "\"lr\"", "]", ")", "\n", "self", ".", "meters", "[", "\"reg_weight\"", "]", ".", "add", "(", "self", ".", "_reg_weight", ")", "\n", "report_dict", ":", "EpochResultDict", "\n", "\n", "with", "tqdm", "(", "range", "(", "self", ".", "_num_batches", ")", ")", ".", "set_desc_from_epocher", "(", "self", ")", "as", "indicator", ":", "\n", "            ", "for", "i", ",", "label_data", ",", "all_data", "in", "zip", "(", "indicator", ",", "self", ".", "_labeled_loader", ",", "self", ".", "_tra_loader", ")", ":", "\n", "                ", "(", "labelimage", ",", "labeltarget", ")", ",", "_", ",", "filename", ",", "partition_list", ",", "group_list", "=", "self", ".", "_preprocess_data", "(", "label_data", ",", "self", ".", "_device", ")", "\n", "(", "unlabelimage", ",", "_", ")", ",", "*", "_", "=", "self", ".", "_preprocess_data", "(", "label_data", ",", "self", ".", "_device", ")", "\n", "\n", "seed", "=", "random", ".", "randint", "(", "0", ",", "int", "(", "1e6", ")", ")", "\n", "with", "FixRandomSeed", "(", "seed", ")", ":", "\n", "                    ", "unlabelimage_tf", "=", "torch", ".", "stack", "(", "[", "self", ".", "_transformer", "(", "x", ")", "for", "x", "in", "unlabelimage", "]", ",", "dim", "=", "0", ")", "\n", "", "assert", "unlabelimage_tf", ".", "shape", "==", "unlabelimage", ".", "shape", "\n", "\n", "student_logits", "=", "self", ".", "_model", "(", "torch", ".", "cat", "(", "[", "labelimage", ",", "unlabelimage_tf", "]", ",", "dim", "=", "0", ")", ")", "\n", "if", "simplex", "(", "student_logits", ")", ":", "\n", "                    ", "raise", "RuntimeError", "(", "\"output of the model should be logits, instead of simplex\"", ")", "\n", "", "student_sup_logits", ",", "student_unlabel_logits_tf", "=", "student_logits", "[", ":", "len", "(", "labelimage", ")", "]", ",", "student_logits", "[", "len", "(", "labelimage", ")", ":", "]", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "teacher_unlabel_logits", "=", "self", ".", "_teacher_model", "(", "unlabelimage", ")", "\n", "", "with", "FixRandomSeed", "(", "seed", ")", ":", "\n", "                    ", "teacher_unlabel_logits_tf", "=", "torch", ".", "stack", "(", "[", "self", ".", "_transformer", "(", "x", ")", "for", "x", "in", "teacher_unlabel_logits", "]", ")", "\n", "", "assert", "teacher_unlabel_logits", ".", "shape", "==", "teacher_unlabel_logits_tf", ".", "shape", "\n", "\n", "# calcul the loss", "\n", "onehot_ltarget", "=", "class2one_hot", "(", "labeltarget", ".", "squeeze", "(", "1", ")", ",", "4", ")", "\n", "sup_loss", "=", "self", ".", "_sup_criterion", "(", "student_sup_logits", ".", "softmax", "(", "1", ")", ",", "onehot_ltarget", ")", "\n", "\n", "reg_loss", "=", "self", ".", "_reg_criterion", "(", "student_unlabel_logits_tf", ".", "softmax", "(", "1", ")", ",", "\n", "teacher_unlabel_logits_tf", ".", "detach", "(", ")", ".", "softmax", "(", "1", ")", ")", "\n", "total_loss", "=", "sup_loss", "+", "self", ".", "_reg_weight", "*", "reg_loss", "\n", "\n", "self", ".", "_optimizer", ".", "zero_grad", "(", ")", "\n", "total_loss", ".", "backward", "(", ")", "\n", "self", ".", "_optimizer", ".", "step", "(", ")", "\n", "\n", "# update ema", "\n", "self", ".", "_ema_updater", "(", "ema_model", "=", "self", ".", "_teacher_model", ",", "student_model", "=", "self", ".", "_model", ")", "\n", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "self", ".", "meters", "[", "\"sup_loss\"", "]", ".", "add", "(", "sup_loss", ".", "item", "(", ")", ")", "\n", "self", ".", "meters", "[", "\"reg_loss\"", "]", ".", "add", "(", "reg_loss", ".", "item", "(", ")", ")", "\n", "self", ".", "meters", "[", "\"ds\"", "]", ".", "add", "(", "student_sup_logits", ".", "max", "(", "1", ")", "[", "1", "]", ",", "labeltarget", ".", "squeeze", "(", "1", ")", ",", "\n", "group_name", "=", "list", "(", "group_list", ")", ")", "\n", "report_dict", "=", "self", ".", "meters", ".", "tracking_status", "(", ")", "\n", "indicator", ".", "set_postfix_dict", "(", "report_dict", ")", "\n", "", "", "report_dict", "=", "self", ".", "meters", ".", "tracking_status", "(", ")", "\n", "", "return", "report_dict", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.contrast_epocher.PretrainEncoderEpoch.__init__": [[24, 53], ["deepclustering2.epoch._Epocher.__init__", "contrast_epocher.PretrainEncoderEpoch._init_label_generator", "isinstance", "isinstance", "isinstance"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.contrast_epocher.PretrainDecoderEpoch._init_label_generator"], ["def", "__init__", "(", "self", ",", "model", ":", "nn", ".", "Module", ",", "projection_head", ":", "nn", ".", "Module", ",", "optimizer", ":", "optim", ".", "Optimizer", ",", "\n", "pretrain_encoder_loader", ":", "T_loader", ",", "contrastive_criterion", ":", "T_loss", ",", "num_batches", ":", "int", "=", "0", ",", "\n", "cur_epoch", "=", "0", ",", "device", "=", "\"cpu\"", ",", "group_option", ":", "str", "=", "None", ",", "\n", "feature_extractor", ":", "UNetFeatureExtractor", "=", "None", ")", "->", "None", ":", "\n", "        ", "\"\"\"\n        PretrainEncoder Epocher\n        :param model: nn.Module for a model\n        :param projection_head: shallow projection head\n        :param optimizer: optimizer for both network and shallow projection head.\n        :param pretrain_encoder_loader: dataloader for epocher\n        :param contrastive_criterion: contrastive loss, can be any loss given the normalized norm.\n        :param num_batches: num_batches to be used\n        :param cur_epoch: current epoch\n        :param device: device for images\n        :param group_option: group option for contrastive loss\n        :param feature_extractor: feature extractor defined in trainer\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "model", ",", "cur_epoch", ",", "device", ")", "\n", "self", ".", "_projection_head", "=", "projection_head", "\n", "self", ".", "_optimizer", "=", "optimizer", "\n", "self", ".", "_pretrain_encoder_loader", "=", "pretrain_encoder_loader", "\n", "self", ".", "_contrastive_criterion", "=", "contrastive_criterion", "\n", "assert", "isinstance", "(", "num_batches", ",", "int", ")", "and", "num_batches", ">", "0", ",", "num_batches", "\n", "self", ".", "_num_batches", "=", "num_batches", "\n", "assert", "isinstance", "(", "group_option", ",", "str", ")", "and", "group_option", "in", "(", "\"partition\"", ",", "\"patient\"", ",", "\"both\"", ")", ",", "group_option", "\n", "self", ".", "_group_option", "=", "group_option", "\n", "self", ".", "_init_label_generator", "(", "self", ".", "_group_option", ")", "\n", "assert", "isinstance", "(", "feature_extractor", ",", "UNetFeatureExtractor", ")", ",", "feature_extractor", "\n", "self", ".", "_feature_extractor", "=", "feature_extractor", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.contrast_epocher.PretrainEncoderEpoch._init_label_generator": [[54, 68], ["_utils.GlobalLabelGenerator"], "methods", ["None"], ["", "def", "_init_label_generator", "(", "self", ",", "group_option", ")", ":", "\n", "        ", "contrastive_on_partition", "=", "False", "\n", "contrastive_on_patient", "=", "False", "\n", "\n", "if", "group_option", "==", "\"partition\"", ":", "\n", "            ", "contrastive_on_partition", "=", "True", "\n", "", "if", "group_option", "==", "\"patient\"", ":", "\n", "            ", "contrastive_on_patient", "=", "True", "\n", "", "if", "group_option", "==", "\"both\"", ":", "\n", "            ", "contrastive_on_patient", "=", "True", "\n", "contrastive_on_partition", "=", "True", "\n", "", "self", ".", "_global_contrastive_label_generator", "=", "GlobalLabelGenerator", "(", "\n", "contrastive_on_partition", "=", "contrastive_on_partition", ",", "\n", "contrastive_on_patient", "=", "contrastive_on_patient", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.contrast_epocher.PretrainEncoderEpoch.create_from_trainer": [[70, 74], ["None"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "create_from_trainer", "(", "cls", ",", "trainer", ")", ":", "\n", "# todo: complete the code here", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.contrast_epocher.PretrainEncoderEpoch._configure_meters": [[75, 79], ["meters.register_meter", "meters.register_meter", "deepclustering2.meters2.AverageValueMeter", "deepclustering2.meters2.AverageValueMeter"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInterface.register_meter", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInterface.register_meter"], ["", "def", "_configure_meters", "(", "self", ",", "meters", ":", "MeterInterface", ")", "->", "MeterInterface", ":", "\n", "        ", "meters", ".", "register_meter", "(", "\"contrastive_loss\"", ",", "AverageValueMeter", "(", ")", ")", "\n", "meters", ".", "register_meter", "(", "\"lr\"", ",", "AverageValueMeter", "(", ")", ")", "\n", "return", "meters", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.contrast_epocher.PretrainEncoderEpoch._run": [[80, 105], ["contrast_epocher.PretrainEncoderEpoch._model.train", "contrast_epocher.PretrainEncoderEpoch.meters[].add", "deepclustering2.tqdm.tqdm().set_desc_from_epocher", "zip", "deepclustering2.optim.get_lrs_from_optimizer", "contrast_epocher.PretrainEncoderEpoch._preprocess_data", "contrast_epocher.PretrainEncoderEpoch._model", "torch.chunk", "contrast_epocher.PretrainEncoderEpoch._label_generation", "contrast_epocher.PretrainEncoderEpoch._contrastive_criterion", "contrast_epocher.PretrainEncoderEpoch._optimizer.zero_grad", "contrast_epocher.PretrainEncoderEpoch.backward", "contrast_epocher.PretrainEncoderEpoch._optimizer.step", "deepclustering2.tqdm.tqdm", "torch.cat", "contrast_epocher.PretrainEncoderEpoch._feature_extractor", "torch.nn.functional.normalize", "torch.stack", "torch.no_grad", "contrast_epocher.PretrainEncoderEpoch.meters[].add", "contrast_epocher.PretrainEncoderEpoch.meters.tracking_status", "indicator.set_postfix_dict", "range", "contrast_epocher.PretrainEncoderEpoch._projection_head", "contrast_epocher.PretrainEncoderEpoch.item"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.add", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.contrast_epocher.PretrainEncoderEpoch._preprocess_data", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.contrast_epocher.PretrainDecoderEpoch._label_generation", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.add", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInteractMixin.tracking_status"], ["", "def", "_run", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", "->", "EpochResultDict", ":", "\n", "        ", "self", ".", "_model", ".", "train", "(", ")", "\n", "assert", "self", ".", "_model", ".", "training", ",", "self", ".", "_model", ".", "training", "\n", "self", ".", "meters", "[", "\"lr\"", "]", ".", "add", "(", "get_lrs_from_optimizer", "(", "self", ".", "_optimizer", ")", "[", "0", "]", ")", "\n", "\n", "with", "tqdm", "(", "range", "(", "self", ".", "_num_batches", ")", ")", ".", "set_desc_from_epocher", "(", "self", ")", "as", "indicator", ":", "# noqa", "\n", "            ", "for", "i", ",", "data", "in", "zip", "(", "indicator", ",", "self", ".", "_pretrain_encoder_loader", ")", ":", "\n", "                ", "(", "img", ",", "_", ")", ",", "(", "img_tf", ",", "_", ")", ",", "filename", ",", "partition_list", ",", "group_list", "=", "self", ".", "_preprocess_data", "(", "data", ",", "self", ".", "_device", ")", "\n", "_", ",", "*", "features", "=", "self", ".", "_model", "(", "torch", ".", "cat", "(", "[", "img", ",", "img_tf", "]", ",", "dim", "=", "0", ")", ",", "return_features", "=", "True", ")", "\n", "en", "=", "self", ".", "_feature_extractor", "(", "features", ")", "[", "0", "]", "\n", "global_enc", ",", "global_tf_enc", "=", "torch", ".", "chunk", "(", "F", ".", "normalize", "(", "self", ".", "_projection_head", "(", "en", ")", ",", "dim", "=", "1", ")", ",", "chunks", "=", "2", ",", "dim", "=", "0", ")", "\n", "labels", "=", "self", ".", "_label_generation", "(", "partition_list", ",", "group_list", ")", "\n", "contrastive_loss", "=", "self", ".", "_contrastive_criterion", "(", "\n", "torch", ".", "stack", "(", "[", "global_enc", ",", "global_tf_enc", "]", ",", "dim", "=", "1", ")", ",", "\n", "labels", "=", "labels", "\n", ")", "\n", "self", ".", "_optimizer", ".", "zero_grad", "(", ")", "\n", "contrastive_loss", ".", "backward", "(", ")", "\n", "self", ".", "_optimizer", ".", "step", "(", ")", "\n", "# todo: meter recording.", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "self", ".", "meters", "[", "\"contrastive_loss\"", "]", ".", "add", "(", "contrastive_loss", ".", "item", "(", ")", ")", "\n", "report_dict", "=", "self", ".", "meters", ".", "tracking_status", "(", ")", "\n", "indicator", ".", "set_postfix_dict", "(", "report_dict", ")", "\n", "", "", "", "return", "report_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.contrast_epocher.PretrainEncoderEpoch._preprocess_data": [[106, 109], ["_utils.preprocess_input_with_twice_transformation"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher._utils.preprocess_input_with_twice_transformation"], ["", "@", "staticmethod", "\n", "def", "_preprocess_data", "(", "data", ",", "device", ")", ":", "\n", "        ", "return", "preprocess_input_with_twice_transformation", "(", "data", ",", "device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.contrast_epocher.PretrainEncoderEpoch._label_generation": [[110, 114], ["contrast_epocher.PretrainEncoderEpoch._global_contrastive_label_generator"], "methods", ["None"], ["", "def", "_label_generation", "(", "self", ",", "partition_list", ":", "List", "[", "str", "]", ",", "group_list", ":", "List", "[", "str", "]", ")", ":", "\n", "        ", "\"\"\"override this to provide more mask \"\"\"", "\n", "return", "self", ".", "_global_contrastive_label_generator", "(", "partition_list", "=", "partition_list", ",", "\n", "patient_list", "=", "group_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.contrast_epocher.PretrainDecoderEpoch.__init__": [[119, 126], ["contrast_epocher.PretrainEncoderEpoch.__init__", "deepclustering2.augment.tensor_augment.TensorRandomFlip"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["def", "__init__", "(", "self", ",", "model", ":", "nn", ".", "Module", ",", "projection_head", ":", "nn", ".", "Module", ",", "optimizer", ":", "optim", ".", "Optimizer", ",", "\n", "pretrain_decoder_loader", ":", "T_loader", ",", "contrastive_criterion", ":", "T_loss", ",", "num_batches", ":", "int", "=", "0", ",", "cur_epoch", "=", "0", ",", "\n", "device", "=", "\"cpu\"", ",", "feature_extractor", ":", "UNetFeatureExtractor", "=", "None", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "model", ",", "projection_head", ",", "optimizer", ",", "pretrain_decoder_loader", ",", "contrastive_criterion", ",", "num_batches", ",", "\n", "cur_epoch", ",", "device", ",", "\"both\"", ",", "feature_extractor", ")", "\n", "self", ".", "_pretrain_decoder_loader", "=", "self", ".", "_pretrain_encoder_loader", "\n", "self", ".", "_transformer", "=", "TensorRandomFlip", "(", "axis", "=", "[", "1", ",", "2", "]", ",", "threshold", "=", "0.5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.contrast_epocher.PretrainDecoderEpoch._init_label_generator": [[127, 129], ["_utils.LocalLabelGenerator"], "methods", ["None"], ["", "def", "_init_label_generator", "(", "self", ",", "group_option", ")", ":", "\n", "        ", "self", ".", "_local_contrastive_label_generator", "=", "LocalLabelGenerator", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.contrast_epocher.PretrainDecoderEpoch._run": [[130, 173], ["contrast_epocher.PretrainDecoderEpoch._model.train", "contrast_epocher.PretrainDecoderEpoch.meters[].add", "deepclustering2.tqdm.tqdm().set_desc_from_epocher", "zip", "deepclustering2.optim.get_lrs_from_optimizer", "contrast_epocher.PretrainDecoderEpoch._preprocess_data", "random.randint", "contrast_epocher.PretrainDecoderEpoch._model", "torch.chunk", "torch.cat", "torch.chunk", "_utils.unfold_position", "_utils.unfold_position", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "contrast_epocher.PretrainDecoderEpoch._label_generation", "contrast_epocher.PretrainDecoderEpoch._contrastive_criterion", "torch.isnan", "contrast_epocher.PretrainDecoderEpoch._optimizer.zero_grad", "contrast_epocher.PretrainDecoderEpoch.backward", "contrast_epocher.PretrainDecoderEpoch._optimizer.step", "deepclustering2.tqdm.tqdm", "int", "deepclustering2.decorator.FixRandomSeed", "torch.stack", "torch.cat", "contrast_epocher.PretrainDecoderEpoch._feature_extractor", "deepclustering2.decorator.FixRandomSeed", "torch.stack", "contrast_epocher.PretrainDecoderEpoch._projection_head", "local_enc_unfold.view", "local_tf_enc_unfold.view", "torch.stack", "RuntimeError", "torch.no_grad", "contrast_epocher.PretrainDecoderEpoch.meters[].add", "contrast_epocher.PretrainDecoderEpoch.meters.tracking_status", "indicator.set_postfix_dict", "range", "contrast_epocher.PretrainDecoderEpoch.item", "contrast_epocher.PretrainDecoderEpoch._transformer", "contrast_epocher.PretrainDecoderEpoch._transformer"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.add", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.contrast_epocher.PretrainEncoderEpoch._preprocess_data", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher._utils.unfold_position", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher._utils.unfold_position", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.contrast_epocher.PretrainDecoderEpoch._label_generation", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.add", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInteractMixin.tracking_status"], ["", "def", "_run", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", "->", "EpochResultDict", ":", "\n", "        ", "self", ".", "_model", ".", "train", "(", ")", "\n", "assert", "self", ".", "_model", ".", "training", ",", "self", ".", "_model", ".", "training", "\n", "self", ".", "meters", "[", "\"lr\"", "]", ".", "add", "(", "get_lrs_from_optimizer", "(", "self", ".", "_optimizer", ")", "[", "0", "]", ")", "\n", "\n", "with", "tqdm", "(", "range", "(", "self", ".", "_num_batches", ")", ")", ".", "set_desc_from_epocher", "(", "self", ")", "as", "indicator", ":", "# noqa", "\n", "            ", "for", "i", ",", "data", "in", "zip", "(", "indicator", ",", "self", ".", "_pretrain_decoder_loader", ")", ":", "\n", "                ", "(", "img", ",", "_", ")", ",", "(", "img_ctf", ",", "_", ")", ",", "filename", ",", "partition_list", ",", "group_list", "=", "self", ".", "_preprocess_data", "(", "data", ",", "self", ".", "_device", ")", "\n", "seed", "=", "random", ".", "randint", "(", "0", ",", "int", "(", "1e5", ")", ")", "\n", "with", "FixRandomSeed", "(", "seed", ")", ":", "\n", "                    ", "img_gtf", "=", "torch", ".", "stack", "(", "[", "self", ".", "_transformer", "(", "x", ")", "for", "x", "in", "img", "]", ",", "dim", "=", "0", ")", "\n", "", "assert", "img_gtf", ".", "shape", "==", "img", ".", "shape", ",", "(", "img_gtf", ".", "shape", ",", "img", ".", "shape", ")", "\n", "_", ",", "*", "features", "=", "self", ".", "_model", "(", "torch", ".", "cat", "(", "[", "img_gtf", ",", "img_ctf", "]", ",", "dim", "=", "0", ")", ",", "return_features", "=", "True", ")", "\n", "dn", "=", "self", ".", "_feature_extractor", "(", "features", ")", "[", "0", "]", "\n", "dn_gtf", ",", "dn_ctf", "=", "torch", ".", "chunk", "(", "dn", ",", "chunks", "=", "2", ",", "dim", "=", "0", ")", "\n", "with", "FixRandomSeed", "(", "seed", ")", ":", "\n", "                    ", "dn_ctf_gtf", "=", "torch", ".", "stack", "(", "[", "self", ".", "_transformer", "(", "x", ")", "for", "x", "in", "dn_ctf", "]", ",", "dim", "=", "0", ")", "\n", "", "assert", "dn_ctf_gtf", ".", "shape", "==", "dn_ctf", ".", "shape", ",", "(", "dn_ctf_gtf", ".", "shape", ",", "dn_ctf", ".", "shape", ")", "\n", "dn_tf", "=", "torch", ".", "cat", "(", "[", "dn_gtf", ",", "dn_ctf_gtf", "]", ")", "\n", "local_enc_tf", ",", "local_enc_tf_ctf", "=", "torch", ".", "chunk", "(", "self", ".", "_projection_head", "(", "dn_tf", ")", ",", "chunks", "=", "2", ",", "dim", "=", "0", ")", "\n", "# todo: convert representation to distance", "\n", "local_enc_unfold", ",", "_", "=", "unfold_position", "(", "local_enc_tf", ",", "partition_num", "=", "(", "2", ",", "2", ")", ")", "\n", "local_tf_enc_unfold", ",", "_fold_partition", "=", "unfold_position", "(", "local_enc_tf_ctf", ",", "partition_num", "=", "(", "2", ",", "2", ")", ")", "\n", "b", ",", "*", "_", "=", "local_enc_unfold", ".", "shape", "\n", "local_enc_unfold_norm", "=", "F", ".", "normalize", "(", "local_enc_unfold", ".", "view", "(", "b", ",", "-", "1", ")", ",", "p", "=", "2", ",", "dim", "=", "1", ")", "\n", "local_tf_enc_unfold_norm", "=", "F", ".", "normalize", "(", "local_tf_enc_unfold", ".", "view", "(", "b", ",", "-", "1", ")", ",", "p", "=", "2", ",", "dim", "=", "1", ")", "\n", "\n", "labels", "=", "self", ".", "_label_generation", "(", "partition_list", ",", "group_list", ",", "_fold_partition", ")", "\n", "contrastive_loss", "=", "self", ".", "_contrastive_criterion", "(", "\n", "torch", ".", "stack", "(", "[", "local_enc_unfold_norm", ",", "local_tf_enc_unfold_norm", "]", ",", "dim", "=", "1", ")", ",", "\n", "labels", "=", "labels", "\n", ")", "\n", "if", "torch", ".", "isnan", "(", "contrastive_loss", ")", ":", "\n", "                    ", "raise", "RuntimeError", "(", "contrastive_loss", ")", "\n", "", "self", ".", "_optimizer", ".", "zero_grad", "(", ")", "\n", "contrastive_loss", ".", "backward", "(", ")", "\n", "self", ".", "_optimizer", ".", "step", "(", ")", "\n", "# todo: meter recording.", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "self", ".", "meters", "[", "\"contrastive_loss\"", "]", ".", "add", "(", "contrastive_loss", ".", "item", "(", ")", ")", "\n", "report_dict", "=", "self", ".", "meters", ".", "tracking_status", "(", ")", "\n", "indicator", ".", "set_postfix_dict", "(", "report_dict", ")", "\n", "", "", "", "return", "report_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.contrast_epocher.PretrainDecoderEpoch._label_generation": [[174, 177], ["contrast_epocher.PretrainDecoderEpoch._local_contrastive_label_generator"], "methods", ["None"], ["", "def", "_label_generation", "(", "self", ",", "partition_list", ":", "List", "[", "str", "]", ",", "patient_list", ":", "List", "[", "str", "]", ",", "location_list", ":", "List", "[", "str", "]", ")", ":", "# noqa", "\n", "        ", "return", "self", ".", "_local_contrastive_label_generator", "(", "partition_list", "=", "partition_list", ",", "patient_list", "=", "patient_list", ",", "\n", "location_list", "=", "location_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.IIC_epocher.IICPretrainEcoderEpoch.__init__": [[23, 46], ["contrast_epocher.PretrainEncoderEpoch.__init__", "losses.iic_loss.IIDLoss"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model", ":", "nn", ".", "Module", ",", "projection_head", ":", "nn", ".", "Module", ",", "projection_classifier", ":", "nn", ".", "Module", ",", "\n", "optimizer", ":", "optim", ".", "Optimizer", ",", "pretrain_encoder_loader", ":", "T_loader", ",", "contrastive_criterion", ":", "T_loss", ",", "\n", "num_batches", ":", "int", "=", "0", ",", "cur_epoch", "=", "0", ",", "device", "=", "\"cpu\"", ",", "group_option", ":", "str", "=", "\"partition\"", ",", "\n", "feature_extractor", ":", "UNetFeatureExtractor", "=", "None", ",", "iic_weight", "=", "1", ",", "disable_contrastive", "=", "False", ")", "->", "None", ":", "\n", "        ", "\"\"\"\n        :param model:\n        :param projection_head:\n        :param projection_classifier: classification head\n        :param optimizer:\n        :param pretrain_encoder_loader: infinite dataloader with `total freedom = True`\n        :param contrastive_criterion:\n        :param num_batches:\n        :param cur_epoch:\n        :param device:\n        :param iic_weight: iic weight_ratio\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "model", ",", "projection_head", ",", "optimizer", ",", "pretrain_encoder_loader", ",", "contrastive_criterion", ",", "num_batches", ",", "\n", "cur_epoch", ",", "device", ",", "group_option", ",", "feature_extractor", ")", "\n", "assert", "pretrain_encoder_loader", "is", "not", "None", "\n", "self", ".", "_projection_classifier", "=", "projection_classifier", "\n", "self", ".", "_iic_criterion", "=", "IIDLoss", "(", ")", "\n", "self", ".", "_iic_weight", "=", "iic_weight", "\n", "self", ".", "_disable_contrastive", "=", "disable_contrastive", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.IIC_epocher.IICPretrainEcoderEpoch._configure_meters": [[47, 52], ["super()._configure_meters.register_meter", "super()._configure_meters.register_meter", "super()._configure_meters", "deepclustering2.meters2.AverageValueMeter", "deepclustering2.meters2.AverageValueMeter"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInterface.register_meter", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInterface.register_meter", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher._configure_meters"], ["", "def", "_configure_meters", "(", "self", ",", "meters", ":", "MeterInterface", ")", "->", "MeterInterface", ":", "\n", "        ", "meters", ".", "register_meter", "(", "\"reg_weight\"", ",", "AverageValueMeter", "(", ")", ")", "\n", "meters", ".", "register_meter", "(", "\"iic_loss\"", ",", "AverageValueMeter", "(", ")", ")", "\n", "meters", "=", "super", "(", ")", ".", "_configure_meters", "(", "meters", ")", "\n", "return", "meters", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.IIC_epocher.IICPretrainEcoderEpoch._run": [[53, 88], ["IIC_epocher.IICPretrainEcoderEpoch._model.train", "IIC_epocher.IICPretrainEcoderEpoch.meters[].add", "IIC_epocher.IICPretrainEcoderEpoch.meters[].add", "deepclustering2.tqdm.tqdm().set_desc_from_epocher", "zip", "deepclustering2.optim.get_lrs_from_optimizer", "IIC_epocher.IICPretrainEcoderEpoch._preprocess_data", "IIC_epocher.IICPretrainEcoderEpoch._model", "torch.chunk", "list", "IIC_epocher.IICPretrainEcoderEpoch._label_generation", "IIC_epocher.IICPretrainEcoderEpoch._contrastive_criterion", "contrastyou.helper.average_iter", "IIC_epocher.IICPretrainEcoderEpoch._optimizer.zero_grad", "total_loss.backward", "IIC_epocher.IICPretrainEcoderEpoch._optimizer.step", "deepclustering2.tqdm.tqdm", "torch.cat", "IIC_epocher.IICPretrainEcoderEpoch._feature_extractor", "torch.nn.functional.normalize", "zip", "torch.stack", "torch.no_grad", "IIC_epocher.IICPretrainEcoderEpoch.meters[].add", "IIC_epocher.IICPretrainEcoderEpoch.meters[].add", "IIC_epocher.IICPretrainEcoderEpoch.meters.tracking_status", "indicator.set_postfix_dict", "range", "IIC_epocher.IICPretrainEcoderEpoch._projection_head", "IIC_epocher.IICPretrainEcoderEpoch._iic_criterion", "zip", "IIC_epocher.IICPretrainEcoderEpoch.item", "contrastyou.helper.average_iter.item", "torch.chunk", "IIC_epocher.IICPretrainEcoderEpoch._projection_classifier"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.add", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.add", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.contrast_epocher.PretrainEncoderEpoch._preprocess_data", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.contrast_epocher.PretrainDecoderEpoch._label_generation", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.helper.utils.average_iter", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.add", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.add", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInteractMixin.tracking_status"], ["", "def", "_run", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", "->", "EpochResultDict", ":", "\n", "        ", "self", ".", "_model", ".", "train", "(", ")", "\n", "assert", "self", ".", "_model", ".", "training", ",", "self", ".", "_model", ".", "training", "\n", "self", ".", "meters", "[", "\"lr\"", "]", ".", "add", "(", "get_lrs_from_optimizer", "(", "self", ".", "_optimizer", ")", "[", "0", "]", ")", "\n", "self", ".", "meters", "[", "\"reg_weight\"", "]", ".", "add", "(", "self", ".", "_iic_weight", ")", "\n", "\n", "with", "tqdm", "(", "range", "(", "self", ".", "_num_batches", ")", ")", ".", "set_desc_from_epocher", "(", "self", ")", "as", "indicator", ":", "# noqa", "\n", "            ", "for", "i", ",", "data", "in", "zip", "(", "indicator", ",", "self", ".", "_pretrain_encoder_loader", ")", ":", "\n", "                ", "(", "img", ",", "_", ")", ",", "(", "img_tf", ",", "_", ")", ",", "filename", ",", "partition_list", ",", "group_list", "=", "self", ".", "_preprocess_data", "(", "data", ",", "self", ".", "_device", ")", "\n", "_", ",", "*", "features", "=", "self", ".", "_model", "(", "torch", ".", "cat", "(", "[", "img", ",", "img_tf", "]", ",", "dim", "=", "0", ")", ",", "return_features", "=", "True", ")", "\n", "en", "=", "self", ".", "_feature_extractor", "(", "features", ")", "[", "0", "]", "\n", "global_enc", ",", "global_tf_enc", "=", "torch", ".", "chunk", "(", "F", ".", "normalize", "(", "self", ".", "_projection_head", "(", "en", ")", ",", "dim", "=", "1", ")", ",", "chunks", "=", "2", ",", "dim", "=", "0", ")", "\n", "# projection_classifier gives a list of probabilities", "\n", "global_probs", ",", "global_tf_probs", "=", "list", "(", "\n", "zip", "(", "*", "[", "torch", ".", "chunk", "(", "x", ",", "chunks", "=", "2", ",", "dim", "=", "0", ")", "for", "x", "in", "self", ".", "_projection_classifier", "(", "en", ")", "]", ")", ")", "\n", "# fixme: here lack of some code for IIC", "\n", "labels", "=", "self", ".", "_label_generation", "(", "partition_list", ",", "group_list", ")", "\n", "contrastive_loss", "=", "self", ".", "_contrastive_criterion", "(", "torch", ".", "stack", "(", "[", "global_enc", ",", "global_tf_enc", "]", ",", "dim", "=", "1", ")", ",", "\n", "labels", "=", "labels", ")", "\n", "iic_loss_list", "=", "[", "self", ".", "_iic_criterion", "(", "x", ",", "y", ")", "[", "0", "]", "for", "x", ",", "y", "in", "zip", "(", "global_probs", ",", "global_tf_probs", ")", "]", "\n", "iic_loss", "=", "average_iter", "(", "iic_loss_list", ")", "\n", "if", "self", ".", "_disable_contrastive", ":", "\n", "                    ", "total_loss", "=", "iic_loss", "\n", "", "else", ":", "\n", "                    ", "total_loss", "=", "self", ".", "_iic_weight", "*", "iic_loss", "+", "contrastive_loss", "\n", "", "self", ".", "_optimizer", ".", "zero_grad", "(", ")", "\n", "total_loss", ".", "backward", "(", ")", "\n", "self", ".", "_optimizer", ".", "step", "(", ")", "\n", "# todo: meter recording.", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "self", ".", "meters", "[", "\"contrastive_loss\"", "]", ".", "add", "(", "contrastive_loss", ".", "item", "(", ")", ")", "\n", "self", ".", "meters", "[", "\"iic_loss\"", "]", ".", "add", "(", "iic_loss", ".", "item", "(", ")", ")", "\n", "report_dict", "=", "self", ".", "meters", ".", "tracking_status", "(", ")", "\n", "indicator", ".", "set_postfix_dict", "(", "report_dict", ")", "\n", "", "", "", "return", "report_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.IIC_epocher.IICPretrainDecoderEpoch.__init__": [[92, 102], ["contrast_epocher.PretrainDecoderEpoch.__init__"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model", ":", "nn", ".", "Module", ",", "projection_head", ":", "nn", ".", "Module", ",", "projection_classifier", ":", "nn", ".", "Module", ",", "\n", "optimizer", ":", "optim", ".", "Optimizer", ",", "pretrain_decoder_loader", ":", "T_loader", ",", "contrastive_criterion", ":", "T_loss", ",", "\n", "iicseg_criterion", ":", "T_loss", ",", "num_batches", ":", "int", "=", "0", ",", "cur_epoch", "=", "0", ",", "device", "=", "\"cpu\"", ",", "disable_contrastive", "=", "False", ",", "\n", "iic_weight", "=", "0.01", ",", "feature_extractor", ":", "UNetFeatureExtractor", "=", "None", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "model", ",", "projection_head", ",", "optimizer", ",", "pretrain_decoder_loader", ",", "contrastive_criterion", ",", "num_batches", ",", "\n", "cur_epoch", ",", "device", ",", "feature_extractor", ")", "\n", "self", ".", "_projection_classifier", "=", "projection_classifier", "\n", "self", ".", "_iic_criterion", "=", "iicseg_criterion", "\n", "self", ".", "_disable_contrastive", "=", "disable_contrastive", "\n", "self", ".", "_iic_weight", "=", "iic_weight", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.IIC_epocher.IICPretrainDecoderEpoch._configure_meters": [[103, 108], ["super()._configure_meters.register_meter", "super()._configure_meters.register_meter", "super()._configure_meters", "deepclustering2.meters2.AverageValueMeter", "deepclustering2.meters2.AverageValueMeter"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInterface.register_meter", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInterface.register_meter", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher._configure_meters"], ["", "def", "_configure_meters", "(", "self", ",", "meters", ":", "MeterInterface", ")", "->", "MeterInterface", ":", "\n", "        ", "meters", ".", "register_meter", "(", "\"reg_weight\"", ",", "AverageValueMeter", "(", ")", ")", "\n", "meters", ".", "register_meter", "(", "\"iic_loss\"", ",", "AverageValueMeter", "(", ")", ")", "\n", "meters", "=", "super", "(", ")", ".", "_configure_meters", "(", "meters", ")", "\n", "return", "meters", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.IIC_epocher.IICPretrainDecoderEpoch._run": [[109, 170], ["IIC_epocher.IICPretrainDecoderEpoch._model.train", "IIC_epocher.IICPretrainDecoderEpoch.meters[].add", "IIC_epocher.IICPretrainDecoderEpoch.meters[].add", "deepclustering2.tqdm.tqdm().set_desc_from_epocher", "zip", "deepclustering2.optim.get_lrs_from_optimizer", "IIC_epocher.IICPretrainDecoderEpoch._preprocess_data", "random.randint", "IIC_epocher.IICPretrainDecoderEpoch._model", "torch.chunk", "torch.cat", "torch.chunk", "list", "contrastyou.helper.average_iter", "contrastyou.epocher._utils.unfold_position", "contrastyou.epocher._utils.unfold_position", "torch.nn.functional.normalize", "torch.nn.functional.normalize", "IIC_epocher.IICPretrainDecoderEpoch._label_generation", "IIC_epocher.IICPretrainDecoderEpoch._contrastive_criterion", "torch.isnan", "torch.isnan", "IIC_epocher.IICPretrainDecoderEpoch._optimizer.zero_grad", "total_loss.backward", "IIC_epocher.IICPretrainDecoderEpoch._optimizer.step", "deepclustering2.tqdm.tqdm", "int", "deepclustering2.decorator.FixRandomSeed", "torch.stack", "torch.cat", "IIC_epocher.IICPretrainDecoderEpoch._feature_extractor", "deepclustering2.decorator.FixRandomSeed", "torch.stack", "IIC_epocher.IICPretrainDecoderEpoch._projection_head", "zip", "IIC_epocher.IICPretrainDecoderEpoch._iic_criterion", "local_enc_unfold.view", "local_tf_enc_unfold.view", "torch.stack", "RuntimeError", "RuntimeError", "torch.no_grad", "IIC_epocher.IICPretrainDecoderEpoch.meters[].add", "IIC_epocher.IICPretrainDecoderEpoch.meters[].add", "IIC_epocher.IICPretrainDecoderEpoch.meters.tracking_status", "indicator.set_postfix_dict", "range", "zip", "IIC_epocher.IICPretrainDecoderEpoch.item", "contrastyou.helper.average_iter.item", "IIC_epocher.IICPretrainDecoderEpoch._transformer", "IIC_epocher.IICPretrainDecoderEpoch._transformer", "torch.chunk", "IIC_epocher.IICPretrainDecoderEpoch._projection_classifier"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.add", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.add", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.contrast_epocher.PretrainEncoderEpoch._preprocess_data", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.helper.utils.average_iter", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher._utils.unfold_position", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher._utils.unfold_position", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.contrast_epocher.PretrainDecoderEpoch._label_generation", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.add", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.add", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInteractMixin.tracking_status"], ["", "def", "_run", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", "->", "EpochResultDict", ":", "\n", "        ", "self", ".", "_model", ".", "train", "(", ")", "\n", "assert", "self", ".", "_model", ".", "training", ",", "self", ".", "_model", ".", "training", "\n", "self", ".", "meters", "[", "\"lr\"", "]", ".", "add", "(", "get_lrs_from_optimizer", "(", "self", ".", "_optimizer", ")", "[", "0", "]", ")", "\n", "self", ".", "meters", "[", "\"reg_weight\"", "]", ".", "add", "(", "self", ".", "_iic_weight", ")", "\n", "\n", "with", "tqdm", "(", "range", "(", "self", ".", "_num_batches", ")", ")", ".", "set_desc_from_epocher", "(", "self", ")", "as", "indicator", ":", "# noqa", "\n", "            ", "for", "i", ",", "data", "in", "zip", "(", "indicator", ",", "self", ".", "_pretrain_decoder_loader", ")", ":", "\n", "                ", "(", "img", ",", "_", ")", ",", "(", "img_ctf", ",", "_", ")", ",", "filename", ",", "partition_list", ",", "group_list", "=", "self", ".", "_preprocess_data", "(", "data", ",", "self", ".", "_device", ")", "\n", "seed", "=", "random", ".", "randint", "(", "0", ",", "int", "(", "1e5", ")", ")", "\n", "with", "FixRandomSeed", "(", "seed", ")", ":", "\n", "                    ", "img_gtf", "=", "torch", ".", "stack", "(", "[", "self", ".", "_transformer", "(", "x", ")", "for", "x", "in", "img", "]", ",", "dim", "=", "0", ")", "\n", "", "assert", "img_gtf", ".", "shape", "==", "img", ".", "shape", ",", "(", "img_gtf", ".", "shape", ",", "img", ".", "shape", ")", "\n", "\n", "_", ",", "*", "features", "=", "self", ".", "_model", "(", "torch", ".", "cat", "(", "[", "img_gtf", ",", "img_ctf", "]", ",", "dim", "=", "0", ")", ",", "return_features", "=", "True", ")", "\n", "dn", "=", "self", ".", "_feature_extractor", "(", "features", ")", "[", "0", "]", "\n", "dn_gtf", ",", "dn_ctf", "=", "torch", ".", "chunk", "(", "dn", ",", "chunks", "=", "2", ",", "dim", "=", "0", ")", "\n", "with", "FixRandomSeed", "(", "seed", ")", ":", "\n", "                    ", "dn_ctf_gtf", "=", "torch", ".", "stack", "(", "[", "self", ".", "_transformer", "(", "x", ")", "for", "x", "in", "dn_ctf", "]", ",", "dim", "=", "0", ")", "\n", "", "assert", "dn_ctf_gtf", ".", "shape", "==", "dn_ctf", ".", "shape", ",", "(", "dn_ctf_gtf", ".", "shape", ",", "dn_ctf", ".", "shape", ")", "\n", "dn_tf", "=", "torch", ".", "cat", "(", "[", "dn_gtf", ",", "dn_ctf_gtf", "]", ")", "\n", "local_enc_tf", ",", "local_enc_tf_ctf", "=", "torch", ".", "chunk", "(", "self", ".", "_projection_head", "(", "dn_tf", ")", ",", "chunks", "=", "2", ",", "dim", "=", "0", ")", "\n", "\n", "# IIC part", "\n", "local_probs", ",", "local_tf_probs", "=", "list", "(", "\n", "zip", "(", "*", "[", "torch", ".", "chunk", "(", "x", ",", "chunks", "=", "2", ",", "dim", "=", "0", ")", "for", "x", "in", "self", ".", "_projection_classifier", "(", "dn_tf", ")", "]", ")", ")", "\n", "iic_loss_list", "=", "[", "self", ".", "_iic_criterion", "(", "x", ",", "y", ")", "for", "x", ",", "y", "in", "zip", "(", "local_probs", ",", "local_tf_probs", ")", "]", "\n", "iic_loss", "=", "average_iter", "(", "iic_loss_list", ")", "\n", "# IIC part ends", "\n", "\n", "local_enc_unfold", ",", "_", "=", "unfold_position", "(", "local_enc_tf", ",", "partition_num", "=", "(", "2", ",", "2", ")", ")", "\n", "local_tf_enc_unfold", ",", "_fold_partition", "=", "unfold_position", "(", "local_enc_tf_ctf", ",", "partition_num", "=", "(", "2", ",", "2", ")", ")", "\n", "b", ",", "*", "_", "=", "local_enc_unfold", ".", "shape", "\n", "local_enc_unfold_norm", "=", "F", ".", "normalize", "(", "local_enc_unfold", ".", "view", "(", "b", ",", "-", "1", ")", ",", "p", "=", "2", ",", "dim", "=", "1", ")", "\n", "local_tf_enc_unfold_norm", "=", "F", ".", "normalize", "(", "local_tf_enc_unfold", ".", "view", "(", "b", ",", "-", "1", ")", ",", "p", "=", "2", ",", "dim", "=", "1", ")", "\n", "\n", "labels", "=", "self", ".", "_label_generation", "(", "partition_list", ",", "group_list", ",", "_fold_partition", ")", "\n", "contrastive_loss", "=", "self", ".", "_contrastive_criterion", "(", "\n", "torch", ".", "stack", "(", "[", "local_enc_unfold_norm", ",", "local_tf_enc_unfold_norm", "]", ",", "dim", "=", "1", ")", ",", "\n", "labels", "=", "labels", "\n", ")", "\n", "if", "torch", ".", "isnan", "(", "contrastive_loss", ")", ":", "\n", "                    ", "raise", "RuntimeError", "(", "contrastive_loss", ")", "\n", "", "if", "torch", ".", "isnan", "(", "iic_loss", ")", ":", "\n", "                    ", "raise", "RuntimeError", "(", "iic_loss", ")", "\n", "\n", "", "if", "self", ".", "_disable_contrastive", ":", "\n", "                    ", "total_loss", "=", "iic_loss", "\n", "", "else", ":", "\n", "                    ", "total_loss", "=", "self", ".", "_iic_weight", "*", "iic_loss", "+", "contrastive_loss", "\n", "\n", "", "self", ".", "_optimizer", ".", "zero_grad", "(", ")", "\n", "total_loss", ".", "backward", "(", ")", "\n", "self", ".", "_optimizer", ".", "step", "(", ")", "\n", "# todo: meter recording.", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "self", ".", "meters", "[", "\"contrastive_loss\"", "]", ".", "add", "(", "contrastive_loss", ".", "item", "(", ")", ")", "\n", "self", ".", "meters", "[", "\"iic_loss\"", "]", ".", "add", "(", "iic_loss", ".", "item", "(", ")", ")", "\n", "report_dict", "=", "self", ".", "meters", ".", "tracking_status", "(", ")", "\n", "indicator", ".", "set_postfix_dict", "(", "report_dict", ")", "\n", "", "", "", "return", "report_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.helper.utils.flatten_dict": [[8, 17], ["d.items", "dict", "isinstance", "items.extend", "items.append", "flatten_dict().items", "utils.flatten_dict"], "function", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.IICLossWrapper.items", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.IICLossWrapper.items", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.helper.utils.flatten_dict"], ["def", "flatten_dict", "(", "d", ",", "parent_key", "=", "\"\"", ",", "sep", "=", "\"_\"", ")", ":", "\n", "    ", "items", "=", "[", "]", "\n", "for", "k", ",", "v", "in", "d", ".", "items", "(", ")", ":", "\n", "        ", "new_key", "=", "parent_key", "+", "sep", "+", "k", "if", "parent_key", "else", "k", "\n", "if", "isinstance", "(", "v", ",", "collections", ".", "MutableMapping", ")", ":", "\n", "            ", "items", ".", "extend", "(", "flatten_dict", "(", "v", ",", "new_key", ",", "sep", "=", "sep", ")", ".", "items", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "items", ".", "append", "(", "(", "new_key", ",", "v", ")", ")", "\n", "", "", "return", "dict", "(", "items", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.helper.utils.toDataLoaderIterator": [[19, 24], ["isinstance", "TypeError", "isinstance", "iter"], "function", ["None"], ["", "def", "toDataLoaderIterator", "(", "loader_or_iter", ":", "Union", "[", "DataLoader", ",", "_BaseDataLoaderIter", "]", ")", ":", "\n", "    ", "if", "not", "isinstance", "(", "loader_or_iter", ",", "(", "_BaseDataLoaderIter", ",", "DataLoader", ")", ")", ":", "\n", "        ", "raise", "TypeError", "(", "f\"{loader_or_iter} should an instance of DataLoader or _BaseDataLoaderIter, \"", "\n", "f\"given {loader_or_iter.__class__.__name__}.\"", ")", "\n", "", "return", "loader_or_iter", "if", "isinstance", "(", "loader_or_iter", ",", "_BaseDataLoaderIter", ")", "else", "iter", "(", "loader_or_iter", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.helper.utils.nice_dict": [[27, 44], ["isinstance", "input_dict.items", "isinstance", "utils.flatten_dict", "type", "flat_dict.items"], "function", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.IICLossWrapper.items", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.helper.utils.flatten_dict", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.IICLossWrapper.items"], ["", "def", "nice_dict", "(", "input_dict", ":", "Dict", "[", "str", ",", "Union", "[", "int", ",", "float", "]", "]", ")", "->", "str", ":", "\n", "    ", "\"\"\"\n    this function is to return a nice string to dictionary displace propose.\n    :param input_dict: dictionary\n    :return: string\n    \"\"\"", "\n", "assert", "isinstance", "(", "\n", "input_dict", ",", "dict", "\n", ")", ",", "f\"{input_dict} should be a dict, given {type(input_dict)}.\"", "\n", "is_flat_dict", "=", "True", "\n", "for", "k", ",", "v", "in", "input_dict", ".", "items", "(", ")", ":", "\n", "        ", "if", "isinstance", "(", "v", ",", "dict", ")", ":", "\n", "            ", "is_flat_dict", "=", "False", "\n", "break", "\n", "", "", "flat_dict", "=", "input_dict", "if", "is_flat_dict", "else", "flatten_dict", "(", "input_dict", ",", "sep", "=", "\"\"", ")", "\n", "string_list", "=", "[", "f\"{k}:{v:.3f}\"", "for", "k", ",", "v", "in", "flat_dict", ".", "items", "(", ")", "]", "\n", "return", "\", \"", ".", "join", "(", "string_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.helper.utils.average_iter": [[46, 48], ["sum", "float", "len"], "function", ["None"], ["", "def", "average_iter", "(", "a_list", ")", ":", "\n", "    ", "return", "sum", "(", "a_list", ")", "/", "float", "(", "len", "(", "a_list", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.helper.utils.multiply_iter": [[50, 52], ["zip"], "function", ["None"], ["", "def", "multiply_iter", "(", "iter_a", ",", "iter_b", ")", ":", "\n", "    ", "return", "[", "x", "*", "y", "for", "x", ",", "y", "in", "zip", "(", "iter_a", ",", "iter_b", ")", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.helper.utils.weighted_average_iter": [[54, 57], ["sum", "sum", "utils.multiply_iter"], "function", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.helper.utils.multiply_iter"], ["", "def", "weighted_average_iter", "(", "a_list", ",", "weight_list", ")", ":", "\n", "    ", "sum_weight", "=", "sum", "(", "weight_list", ")", "+", "1e-16", "\n", "return", "sum", "(", "multiply_iter", "(", "a_list", ",", "weight_list", ")", ")", "/", "sum_weight", "\n", "", ""]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.vgg.VGG11.__init__": [[8, 17], ["torch.nn.Module.__init__", "torchvision.models.vgg11", "torch.nn.Sequential", "torch.nn.Linear", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["    ", "def", "__init__", "(", "self", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "_vgg", "=", "vgg11", "(", ")", "\n", "self", ".", "_features", "=", "Sequential", "(", "\n", "_vgg", ".", "features", ",", "\n", "_vgg", ".", "avgpool", ",", "\n", ")", "\n", "self", ".", "_projection", "=", "nn", ".", "Linear", "(", "512", "*", "7", "*", "7", ",", "256", ")", "\n", "self", ".", "_prediction", "=", "nn", ".", "Linear", "(", "256", ",", "256", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.vgg.VGG11.forward": [[18, 29], ["vgg.VGG11._features", "vgg.VGG11._projection", "vgg.VGG11._prediction", "NotImplementedError", "torch.flatten"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "img", ",", "return_features", "=", "False", ",", "return_projection", "=", "False", ",", "return_prediction", "=", "False", ")", ":", "\n", "        ", "features", "=", "self", ".", "_features", "(", "img", ")", "\n", "if", "return_features", ":", "\n", "            ", "return", "features", "\n", "", "projection", "=", "self", ".", "_projection", "(", "torch", ".", "flatten", "(", "features", ",", "1", ")", ")", "\n", "if", "return_projection", ":", "\n", "            ", "return", "projection", "\n", "", "prediction", "=", "self", ".", "_prediction", "(", "projection", ")", "\n", "if", "return_prediction", ":", "\n", "            ", "return", "prediction", "\n", "", "raise", "NotImplementedError", "(", "\"variables should be set to True\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.vgg.ClassifyHead.__init__": [[32, 37], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["    ", "def", "__init__", "(", "self", ",", "num_classes", "=", "10", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "classifier", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Linear", "(", "512", "*", "7", "*", "7", ",", "10", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.vgg.ClassifyHead.forward": [[40, 42], ["vgg.ClassifyHead.classifier"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "features", ")", ":", "\n", "        ", "return", "self", ".", "classifier", "(", "features", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.conv_block.__init__": [[11, 21], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", ",", "out_ch", ")", ":", "\n", "        ", "super", "(", "conv_block", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "conv", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_ch", ",", "out_ch", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_ch", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "out_ch", ",", "out_ch", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_ch", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.conv_block.forward": [[23, 26], ["unet.conv_block.conv"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.up_conv.__init__": [[29, 36], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Upsample", "torch.nn.Conv2d", "torch.nn.BatchNorm2d", "torch.nn.ReLU"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_ch", ",", "out_ch", ")", ":", "\n", "        ", "super", "(", "up_conv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "up", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Upsample", "(", "scale_factor", "=", "2", ")", ",", "\n", "nn", ".", "Conv2d", "(", "in_ch", ",", "out_ch", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "out_ch", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.up_conv.forward": [[38, 41], ["unet.up_conv.up"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "up", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.UNet.__init__": [[56, 85], ["torch.nn.Module.__init__", "torch.nn.MaxPool2d", "torch.nn.MaxPool2d", "torch.nn.MaxPool2d", "torch.nn.MaxPool2d", "unet.conv_block", "unet.conv_block", "unet.conv_block", "unet.conv_block", "unet.conv_block", "unet.up_conv", "unet.conv_block", "unet.up_conv", "unet.conv_block", "unet.up_conv", "unet.conv_block", "unet.up_conv", "unet.conv_block", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["def", "__init__", "(", "self", ",", "input_dim", "=", "3", ",", "num_classes", "=", "1", ")", ":", "\n", "        ", "super", "(", "UNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "input_dim", "=", "input_dim", "\n", "self", ".", "num_classes", "=", "num_classes", "\n", "\n", "self", ".", "Maxpool1", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "self", ".", "Maxpool2", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "self", ".", "Maxpool3", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "self", ".", "Maxpool4", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "2", ",", "stride", "=", "2", ")", "\n", "\n", "self", ".", "Conv1", "=", "conv_block", "(", "in_ch", "=", "input_dim", ",", "out_ch", "=", "16", ")", "\n", "self", ".", "Conv2", "=", "conv_block", "(", "in_ch", "=", "16", ",", "out_ch", "=", "32", ")", "\n", "self", ".", "Conv3", "=", "conv_block", "(", "in_ch", "=", "32", ",", "out_ch", "=", "64", ")", "\n", "self", ".", "Conv4", "=", "conv_block", "(", "in_ch", "=", "64", ",", "out_ch", "=", "128", ")", "\n", "self", ".", "Conv5", "=", "conv_block", "(", "in_ch", "=", "128", ",", "out_ch", "=", "256", ")", "\n", "\n", "self", ".", "Up5", "=", "up_conv", "(", "in_ch", "=", "256", ",", "out_ch", "=", "128", ")", "\n", "self", ".", "Up_conv5", "=", "conv_block", "(", "in_ch", "=", "256", ",", "out_ch", "=", "128", ")", "\n", "\n", "self", ".", "Up4", "=", "up_conv", "(", "in_ch", "=", "128", ",", "out_ch", "=", "64", ")", "\n", "self", ".", "Up_conv4", "=", "conv_block", "(", "in_ch", "=", "128", ",", "out_ch", "=", "64", ")", "\n", "\n", "self", ".", "Up3", "=", "up_conv", "(", "in_ch", "=", "64", ",", "out_ch", "=", "32", ")", "\n", "self", ".", "Up_conv3", "=", "conv_block", "(", "in_ch", "=", "64", ",", "out_ch", "=", "32", ")", "\n", "\n", "self", ".", "Up2", "=", "up_conv", "(", "in_ch", "=", "32", ",", "out_ch", "=", "16", ")", "\n", "self", ".", "Up_conv2", "=", "conv_block", "(", "in_ch", "=", "32", ",", "out_ch", "=", "16", ")", "\n", "\n", "self", ".", "DeConv_1x1", "=", "nn", ".", "Conv2d", "(", "16", ",", "num_classes", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.UNet.forward": [[86, 134], ["unet.UNet.Conv1", "unet.UNet.Maxpool1", "unet.UNet.Conv2", "unet.UNet.Maxpool2", "unet.UNet.Conv3", "unet.UNet.Maxpool3", "unet.UNet.Conv4", "unet.UNet.Maxpool4", "unet.UNet.Conv5", "unet.UNet.Up5", "torch.cat", "unet.UNet.Up_conv5", "unet.UNet.Up4", "torch.cat", "unet.UNet.Up_conv4", "unet.UNet.Up3", "torch.cat", "unet.UNet.Up_conv3", "unet.UNet.Up2", "torch.cat", "unet.UNet.Up_conv2", "unet.UNet.DeConv_1x1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "return_features", "=", "False", ")", ":", "\n", "# encoding path", "\n", "        ", "e1", "=", "self", ".", "Conv1", "(", "x", ")", "# 16 224 224", "\n", "# e1-> Conv1", "\n", "\n", "e2", "=", "self", ".", "Maxpool1", "(", "e1", ")", "\n", "e2", "=", "self", ".", "Conv2", "(", "e2", ")", "# 32 112 112", "\n", "# e2 -> Conv2", "\n", "\n", "e3", "=", "self", ".", "Maxpool2", "(", "e2", ")", "\n", "e3", "=", "self", ".", "Conv3", "(", "e3", ")", "# 64 56 56", "\n", "# e3->Conv3", "\n", "\n", "e4", "=", "self", ".", "Maxpool3", "(", "e3", ")", "\n", "e4", "=", "self", ".", "Conv4", "(", "e4", ")", "# 128 28 28", "\n", "# e4->Conv4", "\n", "\n", "e5", "=", "self", ".", "Maxpool4", "(", "e4", ")", "\n", "e5", "=", "self", ".", "Conv5", "(", "e5", ")", "# 256 14 14", "\n", "# e5->Conv5", "\n", "\n", "# decoding + concat path", "\n", "d5", "=", "self", ".", "Up5", "(", "e5", ")", "\n", "d5", "=", "torch", ".", "cat", "(", "(", "e4", ",", "d5", ")", ",", "dim", "=", "1", ")", "\n", "\n", "d5", "=", "self", ".", "Up_conv5", "(", "d5", ")", "# 128 28 28", "\n", "# d5->Up5+Up_conv5", "\n", "\n", "d4", "=", "self", ".", "Up4", "(", "d5", ")", "\n", "d4", "=", "torch", ".", "cat", "(", "(", "e3", ",", "d4", ")", ",", "dim", "=", "1", ")", "\n", "d4", "=", "self", ".", "Up_conv4", "(", "d4", ")", "# 64 56 56", "\n", "# d4->Up4+Up_conv4", "\n", "\n", "d3", "=", "self", ".", "Up3", "(", "d4", ")", "\n", "d3", "=", "torch", ".", "cat", "(", "(", "e2", ",", "d3", ")", ",", "dim", "=", "1", ")", "\n", "d3", "=", "self", ".", "Up_conv3", "(", "d3", ")", "# 32 112 112", "\n", "# d3->Up3+upconv3", "\n", "\n", "d2", "=", "self", ".", "Up2", "(", "d3", ")", "\n", "d2", "=", "torch", ".", "cat", "(", "(", "e1", ",", "d2", ")", ",", "dim", "=", "1", ")", "\n", "d2", "=", "self", ".", "Up_conv2", "(", "d2", ")", "# 16 224 224", "\n", "# d2->up2+upconv2", "\n", "\n", "d1", "=", "self", ".", "DeConv_1x1", "(", "d2", ")", "# 4 224 224", "\n", "# d1->Decov1x1", "\n", "if", "return_features", ":", "\n", "            ", "return", "d1", ",", "(", "e5", ",", "e4", ",", "e3", ",", "e2", ",", "e1", ")", ",", "(", "d5", ",", "d4", ",", "d3", ",", "d2", ")", "\n", "", "return", "d1", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.UNet.disable_grad_encoder": [[135, 137], ["unet.UNet._set_grad"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.UNet._set_grad"], ["", "def", "disable_grad_encoder", "(", "self", ")", ":", "\n", "        ", "self", ".", "_set_grad", "(", "self", ".", "encoder_names", ",", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.UNet.enable_grad_encoder": [[138, 140], ["unet.UNet._set_grad"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.UNet._set_grad"], ["", "def", "enable_grad_encoder", "(", "self", ")", ":", "\n", "        ", "self", ".", "_set_grad", "(", "self", ".", "encoder_names", ",", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.UNet.disable_grad_decoder": [[141, 143], ["unet.UNet._set_grad"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.UNet._set_grad"], ["", "def", "disable_grad_decoder", "(", "self", ")", ":", "\n", "        ", "self", ".", "_set_grad", "(", "self", ".", "decoder_names", ",", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.UNet.enable_grad_decoder": [[144, 146], ["unet.UNet._set_grad"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.UNet._set_grad"], ["", "def", "enable_grad_decoder", "(", "self", ")", ":", "\n", "        ", "self", ".", "_set_grad", "(", "self", ".", "decoder_names", ",", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.UNet.enable_grad_util": [[147, 151], ["unet.UNet.component_names.index", "unet.UNet._set_grad"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.UNet._set_grad"], ["", "def", "enable_grad_util", "(", "self", ",", "name", ":", "str", ")", ":", "\n", "        ", "assert", "name", "in", "self", ".", "component_names", ",", "name", "\n", "index", "=", "self", ".", "component_names", ".", "index", "(", "name", ")", "\n", "self", ".", "_set_grad", "(", "self", ".", "component_names", "[", ":", "index", "+", "1", "]", ",", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.UNet.disable_grad_util": [[152, 156], ["unet.UNet.component_names.index", "unet.UNet._set_grad"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.UNet._set_grad"], ["", "def", "disable_grad_util", "(", "self", ",", "name", ")", ":", "\n", "        ", "assert", "name", "in", "self", ".", "component_names", ",", "name", "\n", "index", "=", "self", ".", "component_names", ".", "index", "(", "name", ")", "\n", "self", ".", "_set_grad", "(", "self", ".", "component_names", "[", ":", "index", "+", "1", "]", ",", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.UNet.enable_grad_all": [[157, 159], ["unet.UNet._set_grad"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.UNet._set_grad"], ["", "def", "enable_grad_all", "(", "self", ")", ":", "\n", "        ", "self", ".", "_set_grad", "(", "self", ".", "component_names", ",", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.UNet.disable_grad_all": [[160, 162], ["unet.UNet._set_grad"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.UNet._set_grad"], ["", "def", "disable_grad_all", "(", "self", ")", ":", "\n", "        ", "self", ".", "_set_grad", "(", "self", ".", "component_names", ",", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.UNet.enable_grad": [[163, 170], ["unet.UNet.component_names.index", "unet.UNet.component_names.index", "unet.UNet._set_grad"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.UNet._set_grad"], ["", "def", "enable_grad", "(", "self", ",", "from_", ":", "str", ",", "util", ":", "str", ")", ":", "\n", "        ", "assert", "from_", "in", "self", ".", "component_names", ",", "from_", "\n", "assert", "util", "in", "self", ".", "component_names", ",", "util", "\n", "from_index", "=", "self", ".", "component_names", ".", "index", "(", "from_", ")", "\n", "util_index", "=", "self", ".", "component_names", ".", "index", "(", "util", ")", "\n", "assert", "from_index", "<=", "util_index", ",", "(", "from_", ",", "util", ")", "\n", "self", ".", "_set_grad", "(", "self", ".", "component_names", "[", "from_index", ":", "util_index", "+", "1", "]", ",", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.UNet.disable_grad": [[171, 178], ["unet.UNet.component_names.index", "unet.UNet.component_names.index", "unet.UNet._set_grad"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.UNet._set_grad"], ["", "def", "disable_grad", "(", "self", ",", "from_", ":", "str", ",", "util", ":", "str", ")", ":", "\n", "        ", "assert", "from_", "in", "self", ".", "component_names", ",", "from_", "\n", "assert", "util", "in", "self", ".", "component_names", ",", "util", "\n", "from_index", "=", "self", ".", "component_names", ".", "index", "(", "from_", ")", "\n", "util_index", "=", "self", ".", "component_names", ".", "index", "(", "util", ")", "\n", "assert", "from_index", "<=", "util_index", ",", "(", "from_", ",", "util", ")", "\n", "self", ".", "_set_grad", "(", "self", ".", "component_names", "[", "from_index", ":", "util_index", "+", "1", "]", ",", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.UNet._set_grad": [[179, 183], ["getattr().parameters", "getattr"], "methods", ["None"], ["", "def", "_set_grad", "(", "self", ",", "name_list", ",", "requires_grad", "=", "False", ")", ":", "\n", "        ", "for", "n", "in", "name_list", ":", "\n", "            ", "for", "parameter", "in", "getattr", "(", "self", ",", "n", ")", ".", "parameters", "(", ")", ":", "\n", "                ", "parameter", ".", "requires_grad", "=", "requires_grad", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.UNet.encoder_names": [[184, 187], ["None"], "methods", ["None"], ["", "", "", "@", "property", "\n", "def", "encoder_names", "(", "self", ")", ":", "\n", "        ", "return", "[", "\"Conv1\"", ",", "\"Conv2\"", ",", "\"Conv3\"", ",", "\"Conv4\"", ",", "\"Conv5\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.UNet.decoder_names": [[188, 191], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "decoder_names", "(", "self", ")", ":", "\n", "        ", "return", "[", "\"Up5\"", ",", "\"Up_conv5\"", ",", "\"Up4\"", ",", "\"Up_conv4\"", ",", "\"Up3\"", ",", "\"Up_conv3\"", ",", "\"Up2\"", ",", "\"Up_conv2\"", ",", "\"DeConv_1x1\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.UNet.component_names": [[192, 195], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "component_names", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "encoder_names", "+", "self", ".", "decoder_names", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.UNet.weight_norm": [[196, 201], ["collections.OrderedDict", "unet.UNet.named_parameters", "p.norm().item", "p.norm"], "methods", ["None"], ["", "def", "weight_norm", "(", "self", ")", ":", "\n", "        ", "weights", "=", "OrderedDict", "(", ")", "\n", "for", "name", ",", "p", "in", "self", ".", "named_parameters", "(", ")", ":", "\n", "            ", "weights", "[", "name", "]", "=", "p", ".", "norm", "(", ")", ".", "item", "(", ")", "\n", "", "return", "weights", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.FeatureExtractor.__init__": [[208, 214], ["isinstance"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "feature_names", ":", "Union", "[", "List", "[", "str", "]", ",", "str", "]", ")", "->", "None", ":", "\n", "        ", "if", "isinstance", "(", "feature_names", ",", "str", ")", ":", "\n", "            ", "feature_names", "=", "[", "feature_names", ",", "]", "\n", "", "for", "f", "in", "feature_names", ":", "\n", "            ", "assert", "f", "in", "self", ".", "names", ",", "f", "\n", "", "self", ".", "_feature_names", ":", "List", "[", "str", "]", "=", "feature_names", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.FeatureExtractor.feature_names": [[215, 218], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "feature_names", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_feature_names", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.FeatureExtractor.__call__": [[219, 231], ["unet.FeatureExtractor.encoder_names.index", "return_list.append", "unet.FeatureExtractor.decoder_names.index", "return_list.append", "locals", "locals"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "features", ")", "->", "List", "[", "torch", ".", "Tensor", "]", ":", "\n", "        ", "(", "e5", ",", "e4", ",", "e3", ",", "e2", ",", "e1", ")", ",", "(", "d5", ",", "d4", ",", "d3", ",", "d2", ")", "=", "features", "\n", "return_list", "=", "[", "]", "\n", "\n", "for", "f", "in", "self", ".", "_feature_names", ":", "\n", "            ", "if", "f", "in", "self", ".", "encoder_names", ":", "\n", "                ", "index", "=", "self", ".", "encoder_names", ".", "index", "(", "f", ")", "\n", "return_list", ".", "append", "(", "locals", "(", ")", "[", "f\"e{index + 1}\"", "]", ")", "\n", "", "else", ":", "\n", "                ", "index", "=", "self", ".", "decoder_names", ".", "index", "(", "f", ")", "\n", "return_list", ".", "append", "(", "locals", "(", ")", "[", "f\"d{5 - index}\"", "]", ")", "\n", "", "", "return", "return_list", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.FeatureExtractor.__repr__": [[232, 240], ["len", "str", "unet.FeatureExtractor.__repr__.list2string"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "def", "list2string", "(", "a_list", ")", ":", "\n", "            ", "if", "len", "(", "a_list", ")", "==", "1", ":", "\n", "                ", "return", "str", "(", "a_list", "[", "0", "]", ")", "\n", "", "else", ":", "\n", "                ", "return", "\", \"", ".", "join", "(", "a_list", ")", "\n", "\n", "", "", "return", "f\"{self.__class__.__name__} with features to be extracted at {list2string(self._feature_names)}.\"", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.trainer.contrast_trainer.ContrastTrainer.__init__": [[26, 63], ["deepclustering2.trainer.Trainer.__init__", "contrast_trainer.ContrastTrainer._register_buffer", "contrast_trainer.ContrastTrainer._register_buffer", "contrast_trainer.ContrastTrainer._register_buffer", "contrast_trainer.ContrastTrainer._register_buffer", "deepclustering2.meters2.Storage", "deepclustering2.meters2.Storage", "deepclustering2.meters2.Storage", "os.path.join", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["def", "__init__", "(", "self", ",", "model", ":", "nn", ".", "Module", ",", "pretrain_loader", ":", "T_loader", ",", "fine_tune_loader", ":", "T_loader", ",", "val_loader", ":", "DataLoader", ",", "\n", "save_dir", ":", "str", "=", "\"base\"", ",", "max_epoch_train_encoder", ":", "int", "=", "100", ",", "max_epoch_train_decoder", ":", "int", "=", "100", ",", "\n", "max_epoch_train_finetune", ":", "int", "=", "100", ",", "num_batches", ":", "int", "=", "256", ",", "device", ":", "str", "=", "\"cpu\"", ",", "configuration", "=", "None", ",", "\n", "train_encoder", ":", "bool", "=", "True", ",", "train_decoder", ":", "bool", "=", "True", ")", ":", "\n", "        ", "\"\"\"\n        ContrastTraining Trainer\n        :param model: nn.module network to be pretrained\n        :param pretrain_loader: all unlabeled data under ContrastiveBatchSampler\n        :param fine_tune_loader: a fraction of labeled data for finetuning, with InfiniteSampler\n        :param val_loader: validation data\n        :param save_dir: main save_die\n        :param max_epoch_train_encoder: max_epoch to be trained for encoder training\n        :param max_epoch_train_decoder: max_epoch to be trained for decoder training\n        :param max_epoch_train_finetune: max_epoch to be trained for finetuning\n        :param num_batches:  num_batches used in training\n        :param device: cpu or cuda\n        :param configuration: configuration dict\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "model", ",", "save_dir", ",", "None", ",", "num_batches", ",", "device", ",", "configuration", ")", "# noqa", "\n", "self", ".", "_pretrain_loader", "=", "pretrain_loader", "\n", "self", ".", "_fine_tune_loader", "=", "fine_tune_loader", "\n", "self", ".", "_val_loader", "=", "val_loader", "\n", "\n", "self", ".", "_max_epoch_train_encoder", "=", "max_epoch_train_encoder", "\n", "self", ".", "_max_epoch_train_decoder", "=", "max_epoch_train_decoder", "\n", "self", ".", "_max_epoch_train_finetune", "=", "max_epoch_train_finetune", "\n", "\n", "self", ".", "_register_buffer", "(", "\"train_encoder\"", ",", "train_encoder", ")", "\n", "self", ".", "_register_buffer", "(", "\"train_decoder\"", ",", "train_decoder", ")", "\n", "self", ".", "_register_buffer", "(", "\"train_encoder_done\"", ",", "False", ")", "\n", "self", ".", "_register_buffer", "(", "\"train_decoder_done\"", ",", "False", ")", "\n", "\n", "self", ".", "_pretrain_encoder_storage", "=", "Storage", "(", "csv_save_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "_save_dir", ",", "\"pretrain_encoder\"", ")", ",", "\n", "csv_name", "=", "\"encoder.csv\"", ")", "\n", "self", ".", "_pretrain_decoder_storage", "=", "Storage", "(", "csv_save_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "_save_dir", ",", "\"pretrain_decoder\"", ")", ",", "\n", "csv_name", "=", "\"decoder.csv\"", ")", "\n", "self", ".", "_finetune_storage", "=", "Storage", "(", "csv_save_dir", "=", "os", ".", "path", ".", "join", "(", "self", ".", "_save_dir", ",", "\"finetune\"", ")", ",", "csv_name", "=", "\"finetune.csv\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.trainer.contrast_trainer.ContrastTrainer.pretrain_encoder_init": [[64, 95], ["contrastyou.arch.UNetFeatureExtractor", "contrastyou.trainer._utils.ProjectionHead", "torch.optim.Adam", "torch.optim.lr_scheduler.CosineAnnealingLR", "deepclustering2.schedulers.GradualWarmupScheduler", "hasattr", "iter", "contrastyou.losses.contrast_loss.SupConLoss", "itertools.chain", "contrast_trainer.ContrastTrainer._model.parameters", "contrast_trainer.ContrastTrainer._projector.parameters"], "methods", ["None"], ["", "def", "pretrain_encoder_init", "(", "self", ",", "group_option", ":", "str", ",", "lr", "=", "1e-6", ",", "weight_decay", "=", "1e-5", ",", "multiplier", "=", "300", ",", "warmup_max", "=", "10", ",", "\n", "ptype", "=", "\"mlp\"", ",", "extract_position", "=", "\"Conv5\"", ")", ":", "\n", "# adding optimizer and scheduler", "\n", "        ", "self", ".", "_extract_position", "=", "extract_position", "\n", "self", ".", "_feature_extractor", "=", "UNetFeatureExtractor", "(", "self", ".", "_extract_position", ")", "\n", "self", ".", "_projector", "=", "ProjectionHead", "(", "\n", "input_dim", "=", "UNet", ".", "dimension_dict", "[", "self", ".", "_extract_position", "]", ",", "\n", "output_dim", "=", "256", ",", "\n", "head_type", "=", "ptype", "\n", ")", "# noqa", "\n", "self", ".", "_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "\n", "itertools", ".", "chain", "(", "self", ".", "_model", ".", "parameters", "(", ")", ",", "# noqa", "\n", "self", ".", "_projector", ".", "parameters", "(", ")", ")", ",", "# noqa", "\n", "lr", "=", "lr", ",", "weight_decay", "=", "weight_decay", "\n", ")", "# noqa", "\n", "self", ".", "_scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "CosineAnnealingLR", "(", "\n", "self", ".", "_optimizer", ",", "# noqa", "\n", "self", ".", "_max_epoch_train_encoder", "-", "warmup_max", ",", "\n", "0", "\n", ")", "\n", "self", ".", "_scheduler", "=", "GradualWarmupScheduler", "(", "self", ".", "_optimizer", ",", "multiplier", ",", "warmup_max", ",", "self", ".", "_scheduler", ")", "# noqa", "\n", "\n", "self", ".", "_group_option", "=", "group_option", "# noqa", "\n", "\n", "# set augmentation method as `total_freedom = True`", "\n", "assert", "hasattr", "(", "self", ".", "_pretrain_loader", ".", "dataset", ".", "_transform", ",", "\"_total_freedom\"", ")", "# noqa", "\n", "self", ".", "_pretrain_loader", ".", "dataset", ".", "_transform", ".", "_total_freedom", "=", "True", "# noqa", "\n", "self", ".", "_pretrain_loader_iter", "=", "iter", "(", "self", ".", "_pretrain_loader", ")", "# noqa", "\n", "\n", "# contrastive loss", "\n", "self", ".", "_contrastive_criterion", "=", "SupConLoss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.trainer.contrast_trainer.ContrastTrainer.pretrain_encoder_run": [[96, 115], ["contrast_trainer.ContrastTrainer.to", "contrast_trainer.ContrastTrainer._model.disable_grad_all", "contrast_trainer.ContrastTrainer._model.enable_grad", "range", "contrastyou.epocher.PretrainEncoderEpoch().run", "contrast_trainer.ContrastTrainer._scheduler.step", "deepclustering2.meters2.StorageIncomeDict", "contrast_trainer.ContrastTrainer._pretrain_encoder_storage.put_from_dict", "contrast_trainer.ContrastTrainer._writer.add_scalar_with_StorageDict", "contrast_trainer.ContrastTrainer._save_to", "contrastyou.epocher.PretrainEncoderEpoch", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.UNet.disable_grad_all", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.UNet.enable_grad"], ["", "def", "pretrain_encoder_run", "(", "self", ")", ":", "\n", "        ", "self", ".", "to", "(", "self", ".", "_device", ")", "\n", "self", ".", "_model", ".", "disable_grad_all", "(", ")", "\n", "self", ".", "_model", ".", "enable_grad", "(", "from_", "=", "\"Conv1\"", ",", "util", "=", "self", ".", "_extract_position", ")", "\n", "\n", "for", "self", ".", "_cur_epoch", "in", "range", "(", "self", ".", "_start_epoch", ",", "self", ".", "_max_epoch_train_encoder", ")", ":", "\n", "            ", "pretrain_encoder_dict", "=", "PretrainEncoderEpoch", "(", "\n", "model", "=", "self", ".", "_model", ",", "projection_head", "=", "self", ".", "_projector", ",", "\n", "optimizer", "=", "self", ".", "_optimizer", ",", "\n", "pretrain_encoder_loader", "=", "self", ".", "_pretrain_loader_iter", ",", "\n", "contrastive_criterion", "=", "self", ".", "_contrastive_criterion", ",", "num_batches", "=", "self", ".", "_num_batches", ",", "\n", "cur_epoch", "=", "self", ".", "_cur_epoch", ",", "device", "=", "self", ".", "_device", ",", "group_option", "=", "self", ".", "_group_option", ",", "\n", "feature_extractor", "=", "self", ".", "_feature_extractor", "\n", ")", ".", "run", "(", ")", "\n", "self", ".", "_scheduler", ".", "step", "(", ")", "\n", "storage_dict", "=", "StorageIncomeDict", "(", "PRETRAIN_ENCODER", "=", "pretrain_encoder_dict", ",", ")", "\n", "self", ".", "_pretrain_encoder_storage", ".", "put_from_dict", "(", "storage_dict", ",", "epoch", "=", "self", ".", "_cur_epoch", ")", "\n", "self", ".", "_writer", ".", "add_scalar_with_StorageDict", "(", "storage_dict", ",", "self", ".", "_cur_epoch", ")", "\n", "self", ".", "_save_to", "(", "\"last.pth\"", ",", "path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "_save_dir", ",", "\"pretrain_encoder\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.trainer.contrast_trainer.ContrastTrainer.pretrain_decoder_init": [[116, 143], ["contrastyou.arch.UNetFeatureExtractor", "contrastyou.trainer._utils.LocalProjectionHead", "torch.optim.Adam", "torch.optim.lr_scheduler.CosineAnnealingLR", "deepclustering2.schedulers.GradualWarmupScheduler", "hasattr", "iter", "contrastyou.losses.contrast_loss.SupConLoss", "itertools.chain", "contrast_trainer.ContrastTrainer._model.parameters", "contrast_trainer.ContrastTrainer._projector.parameters"], "methods", ["None"], ["", "", "def", "pretrain_decoder_init", "(", "self", ",", "lr", ":", "float", "=", "1e-6", ",", "weight_decay", ":", "float", "=", "0.0", ",", "\n", "multiplier", ":", "int", "=", "300", ",", "warmup_max", "=", "10", ",", "ptype", "=", "\"mlp\"", ",", "\n", "extract_position", "=", "\"Up_conv3\"", ",", "enable_grad_from", "=", "\"Up5\"", ",", ")", ":", "\n", "# feature_exactor", "\n", "        ", "self", ".", "_extract_position", "=", "extract_position", "\n", "self", ".", "_feature_extractor", "=", "UNetFeatureExtractor", "(", "self", ".", "_extract_position", ")", "\n", "projector_input_dim", "=", "UNet", ".", "dimension_dict", "[", "extract_position", "]", "\n", "# if disable_encoder's gradient", "\n", "self", ".", "_enable_grad_from", "=", "enable_grad_from", "\n", "\n", "self", ".", "_projector", "=", "LocalProjectionHead", "(", "projector_input_dim", ",", "head_type", "=", "ptype", ",", "output_size", "=", "(", "4", ",", "4", ")", ")", "# noqa", "\n", "self", ".", "_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "itertools", ".", "chain", "(", "self", ".", "_model", ".", "parameters", "(", ")", ",", "self", ".", "_projector", ".", "parameters", "(", ")", ")", ",", "\n", "lr", "=", "lr", ",", "weight_decay", "=", "weight_decay", ")", "\n", "self", ".", "_scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "CosineAnnealingLR", "(", "\n", "self", ".", "_optimizer", ",", "\n", "self", ".", "_max_epoch_train_decoder", "-", "warmup_max", ",", "\n", "0", "\n", ")", "\n", "self", ".", "_scheduler", "=", "GradualWarmupScheduler", "(", "self", ".", "_optimizer", ",", "multiplier", ",", "warmup_max", ",", "self", ".", "_scheduler", ")", "\n", "\n", "# set augmentation method as `total_freedom = False`", "\n", "assert", "hasattr", "(", "self", ".", "_pretrain_loader", ".", "dataset", ".", "_transform", ",", "\"_total_freedom\"", ")", "# noqa", "\n", "self", ".", "_pretrain_loader", ".", "dataset", ".", "_transform", ".", "_total_freedom", "=", "False", "# noqa", "\n", "self", ".", "_pretrain_loader_iter", "=", "iter", "(", "self", ".", "_pretrain_loader", ")", "# noqa", "\n", "\n", "# contrastive loss", "\n", "self", ".", "_contrastive_criterion", "=", "SupConLoss", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.trainer.contrast_trainer.ContrastTrainer.pretrain_decoder_run": [[144, 162], ["contrast_trainer.ContrastTrainer._model.disable_grad_all", "contrast_trainer.ContrastTrainer._model.enable_grad", "contrast_trainer.ContrastTrainer.to", "range", "contrastyou.epocher.PretrainDecoderEpoch().run", "contrast_trainer.ContrastTrainer._scheduler.step", "deepclustering2.meters2.StorageIncomeDict", "contrast_trainer.ContrastTrainer._pretrain_encoder_storage.put_from_dict", "contrast_trainer.ContrastTrainer._writer.add_scalar_with_StorageDict", "contrast_trainer.ContrastTrainer._save_to", "contrastyou.epocher.PretrainDecoderEpoch", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.UNet.disable_grad_all", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.UNet.enable_grad"], ["", "def", "pretrain_decoder_run", "(", "self", ")", ":", "\n", "        ", "self", ".", "_model", ".", "disable_grad_all", "(", ")", "\n", "self", ".", "_model", ".", "enable_grad", "(", "from_", "=", "self", ".", "_enable_grad_from", ",", "util", "=", "self", ".", "_extract_position", ")", "\n", "self", ".", "to", "(", "self", ".", "_device", ")", "\n", "\n", "for", "self", ".", "_cur_epoch", "in", "range", "(", "self", ".", "_start_epoch", ",", "self", ".", "_max_epoch_train_decoder", ")", ":", "\n", "            ", "pretrain_decoder_dict", "=", "PretrainDecoderEpoch", "(", "\n", "model", "=", "self", ".", "_model", ",", "projection_head", "=", "self", ".", "_projector", ",", "\n", "optimizer", "=", "self", ".", "_optimizer", ",", "\n", "pretrain_decoder_loader", "=", "self", ".", "_pretrain_loader_iter", ",", "\n", "contrastive_criterion", "=", "self", ".", "_contrastive_criterion", ",", "num_batches", "=", "self", ".", "_num_batches", ",", "\n", "cur_epoch", "=", "self", ".", "_cur_epoch", ",", "device", "=", "self", ".", "_device", ",", "feature_extractor", "=", "self", ".", "_feature_extractor", "\n", ")", ".", "run", "(", ")", "\n", "self", ".", "_scheduler", ".", "step", "(", ")", "\n", "storage_dict", "=", "StorageIncomeDict", "(", "PRETRAIN_DECODER", "=", "pretrain_decoder_dict", ",", ")", "\n", "self", ".", "_pretrain_encoder_storage", ".", "put_from_dict", "(", "storage_dict", ",", "epoch", "=", "self", ".", "_cur_epoch", ")", "\n", "self", ".", "_writer", ".", "add_scalar_with_StorageDict", "(", "storage_dict", ",", "self", ".", "_cur_epoch", ")", "\n", "self", ".", "_save_to", "(", "\"last.pth\"", ",", "path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "_save_dir", ",", "\"pretrain_decoder\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.trainer.contrast_trainer.ContrastTrainer.finetune_network_init": [[163, 178], ["torch.optim.Adam", "torch.optim.lr_scheduler.CosineAnnealingLR", "deepclustering2.schedulers.GradualWarmupScheduler", "deepclustering2.loss.KL_div", "hasattr", "iter", "contrast_trainer.ContrastTrainer._model.parameters"], "methods", ["None"], ["", "", "def", "finetune_network_init", "(", "self", ",", "lr", ":", "float", "=", "1e-7", ",", "weight_decay", ":", "float", "=", "1e-5", ",", "multiplier", ":", "int", "=", "200", ",", "warmup_max", "=", "10", ")", ":", "\n", "\n", "        ", "self", ".", "_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "self", ".", "_model", ".", "parameters", "(", ")", ",", "lr", "=", "lr", ",", "weight_decay", "=", "weight_decay", ")", "\n", "self", ".", "_scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "CosineAnnealingLR", "(", "\n", "self", ".", "_optimizer", ",", "\n", "self", ".", "_max_epoch_train_finetune", "-", "warmup_max", ",", "\n", "5e-7", "\n", ")", "\n", "self", ".", "_scheduler", "=", "GradualWarmupScheduler", "(", "self", ".", "_optimizer", ",", "multiplier", ",", "warmup_max", ",", "self", ".", "_scheduler", ")", "\n", "self", ".", "_sup_criterion", "=", "KL_div", "(", ")", "\n", "\n", "# set augmentation method as `total_freedom = True`", "\n", "assert", "hasattr", "(", "self", ".", "_fine_tune_loader", ".", "dataset", ".", "_transform", ",", "\"_total_freedom\"", ")", "# noqa", "\n", "self", ".", "_fine_tune_loader", ".", "dataset", ".", "_transform", ".", "_total_freedom", "=", "True", "# noqa", "\n", "self", ".", "_fine_tune_loader_iter", "=", "iter", "(", "self", ".", "_fine_tune_loader", ")", "# noqa", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.trainer.contrast_trainer.ContrastTrainer.finetune_network_run": [[179, 193], ["contrast_trainer.ContrastTrainer.to", "contrast_trainer.ContrastTrainer._model.enable_grad_encoder", "contrast_trainer.ContrastTrainer._model.enable_grad_decoder", "range", "epocher_type.create_from_trainer().run", "contrastyou.epocher.base_epocher.EvalEpoch().run", "contrast_trainer.ContrastTrainer._scheduler.step", "deepclustering2.meters2.StorageIncomeDict", "contrast_trainer.ContrastTrainer._finetune_storage.put_from_dict", "contrast_trainer.ContrastTrainer._writer.add_scalar_with_StorageDict", "contrast_trainer.ContrastTrainer.save", "os.path.join", "epocher_type.create_from_trainer", "contrastyou.epocher.base_epocher.EvalEpoch"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.UNet.enable_grad_encoder", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.UNet.enable_grad_decoder", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.contrast_epocher.PretrainEncoderEpoch.create_from_trainer"], ["", "def", "finetune_network_run", "(", "self", ",", "epocher_type", "=", "SimpleFineTuneEpoch", ")", ":", "\n", "        ", "self", ".", "to", "(", "self", ".", "_device", ")", "\n", "self", ".", "_model", ".", "enable_grad_encoder", "(", ")", "# noqa", "\n", "self", ".", "_model", ".", "enable_grad_decoder", "(", ")", "# noqa", "\n", "\n", "for", "self", ".", "_cur_epoch", "in", "range", "(", "self", ".", "_start_epoch", ",", "self", ".", "_max_epoch_train_finetune", ")", ":", "\n", "            ", "finetune_dict", "=", "epocher_type", ".", "create_from_trainer", "(", "self", ")", ".", "run", "(", ")", "\n", "val_dict", ",", "cur_score", "=", "EvalEpoch", "(", "self", ".", "_model", ",", "val_loader", "=", "self", ".", "_val_loader", ",", "sup_criterion", "=", "self", ".", "_sup_criterion", ",", "\n", "cur_epoch", "=", "self", ".", "_cur_epoch", ",", "device", "=", "self", ".", "_device", ")", ".", "run", "(", ")", "\n", "self", ".", "_scheduler", ".", "step", "(", ")", "\n", "storage_dict", "=", "StorageIncomeDict", "(", "finetune", "=", "finetune_dict", ",", "val", "=", "val_dict", ")", "\n", "self", ".", "_finetune_storage", ".", "put_from_dict", "(", "storage_dict", ",", "epoch", "=", "self", ".", "_cur_epoch", ")", "\n", "self", ".", "_writer", ".", "add_scalar_with_StorageDict", "(", "storage_dict", ",", "self", ".", "_cur_epoch", ")", "\n", "self", ".", "save", "(", "cur_score", ",", "os", ".", "path", ".", "join", "(", "self", ".", "_save_dir", ",", "\"finetune\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.trainer.contrast_trainer.ContrastTrainer.start_training": [[194, 233], ["deepclustering2.writer.SummaryWriter", "contrast_trainer.ContrastTrainer.finetune_network_init", "contrast_trainer.ContrastTrainer.finetune_network_run", "str", "contrast_trainer.ContrastTrainer.pretrain_encoder_init", "contrast_trainer.ContrastTrainer.pretrain_encoder_run", "contrast_trainer.ContrastTrainer.pretrain_decoder_init", "contrast_trainer.ContrastTrainer.pretrain_decoder_run", "contrast_trainer.ContrastTrainer.load_state_dict_from_path", "contrast_trainer.ContrastTrainer.load_state_dict_from_path", "contrast_trainer.ContrastTrainer.load_state_dict_from_path", "os.path.join", "print", "os.path.join", "RuntimeError", "os.path.join", "print"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.trainer.contrast_trainer.ContrastTrainerMT.finetune_network_init", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.trainer.contrast_trainer.ContrastTrainerMT.finetune_network_run", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.trainer.iic_trainer.IICContrastTrainer.pretrain_encoder_init", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.trainer.iic_trainer.IICContrastTrainer.pretrain_encoder_run", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.trainer.iic_trainer.IICContrastTrainer.pretrain_decoder_init", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.trainer.iic_trainer.IICContrastTrainer.pretrain_decoder_run"], ["", "", "def", "start_training", "(", "\n", "self", ",", "checkpoint", ":", "str", "=", "None", ",", "\n", "pretrain_encoder_init_options", "=", "None", ",", "\n", "pretrain_decoder_init_options", "=", "None", ",", "\n", "finetune_network_init_options", "=", "None", "\n", ")", ":", "\n", "\n", "        ", "if", "finetune_network_init_options", "is", "None", ":", "\n", "            ", "finetune_network_init_options", "=", "{", "}", "\n", "", "if", "pretrain_decoder_init_options", "is", "None", ":", "\n", "            ", "pretrain_decoder_init_options", "=", "{", "}", "\n", "", "if", "pretrain_encoder_init_options", "is", "None", ":", "\n", "            ", "pretrain_encoder_init_options", "=", "{", "}", "\n", "", "with", "SummaryWriter", "(", "str", "(", "self", ".", "_save_dir", ")", ")", "as", "self", ".", "_writer", ":", "# noqa", "\n", "            ", "if", "self", ".", "train_encoder", ":", "\n", "                ", "self", ".", "pretrain_encoder_init", "(", "**", "pretrain_encoder_init_options", ")", "\n", "if", "checkpoint", "is", "not", "None", ":", "\n", "                    ", "try", ":", "\n", "                        ", "self", ".", "load_state_dict_from_path", "(", "os", ".", "path", ".", "join", "(", "checkpoint", ",", "\"pretrain_encoder\"", ")", ")", "\n", "", "except", "Exception", "as", "e", ":", "\n", "                        ", "raise", "RuntimeError", "(", "f\"loading pretrain_encoder_checkpoint failed with {e}, \"", ")", "\n", "", "", "self", ".", "pretrain_encoder_run", "(", ")", "\n", "\n", "", "if", "self", ".", "train_decoder", ":", "\n", "                ", "self", ".", "pretrain_decoder_init", "(", "**", "pretrain_decoder_init_options", ")", "\n", "if", "checkpoint", "is", "not", "None", ":", "\n", "                    ", "try", ":", "\n", "                        ", "self", ".", "load_state_dict_from_path", "(", "os", ".", "path", ".", "join", "(", "checkpoint", ",", "\"pretrain_decoder\"", ")", ")", "\n", "", "except", "Exception", "as", "e", ":", "\n", "                        ", "print", "(", "f\"loading pretrain_decoder_checkpoint failed with {e}, \"", ")", "\n", "", "", "self", ".", "pretrain_decoder_run", "(", ")", "\n", "\n", "", "self", ".", "finetune_network_init", "(", "**", "finetune_network_init_options", ")", "\n", "if", "checkpoint", "is", "not", "None", ":", "\n", "                ", "try", ":", "\n", "                    ", "self", ".", "load_state_dict_from_path", "(", "os", ".", "path", ".", "join", "(", "checkpoint", ",", "\"finetune\"", ")", ")", "\n", "", "except", "Exception", "as", "e", ":", "\n", "                    ", "print", "(", "f\"loading finetune_checkpoint failed with {e}, \"", ")", "\n", "", "", "self", ".", "finetune_network_run", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.trainer.contrast_trainer.ContrastTrainerMT.finetune_network_init": [[237, 253], ["contrast_trainer.ContrastTrainer.finetune_network_init", "torch.nn.MSELoss", "contrastyou.arch.UNet", "contrast_trainer.ContrastTrainerMT._teacher_model.parameters", "contrast_trainer.ContrastTrainerMT._teacher_model.train", "ema_updater", "param.detach_"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.trainer.contrast_trainer.ContrastTrainerMT.finetune_network_init"], ["    ", "def", "finetune_network_init", "(", "self", ",", "lr", ":", "float", "=", "1e-7", ",", "weight_decay", ":", "float", "=", "1e-5", ",", "multiplier", ":", "int", "=", "200", ",", "warmup_max", "=", "10", ",", "\n", "transform_axis", "=", "[", "1", ",", "2", "]", ",", "reg_weight", ":", "float", "=", "10.0", ")", ":", "\n", "        ", "super", "(", ")", ".", "finetune_network_init", "(", "lr", ",", "weight_decay", ",", "multiplier", ",", "warmup_max", ")", "\n", "\n", "self", ".", "_reg_weight", "=", "reg_weight", "\n", "self", ".", "_reg_criterion", "=", "nn", ".", "MSELoss", "(", ")", "\n", "self", ".", "_transform_axis", "=", "transform_axis", "\n", "\n", "from", "contrastyou", ".", "arch", "import", "UNet", "\n", "from", "deepclustering2", ".", "models", "import", "ema_updater", "\n", "# here we initialize the MT", "\n", "self", ".", "_teacher_model", "=", "UNet", "(", "**", "self", ".", "_configuration", "[", "\"Arch\"", "]", ")", "\n", "for", "param", "in", "self", ".", "_teacher_model", ".", "parameters", "(", ")", ":", "\n", "            ", "param", ".", "detach_", "(", ")", "\n", "", "self", ".", "_teacher_model", ".", "train", "(", ")", "\n", "self", ".", "_ema_updater", "=", "ema_updater", "(", "alpha", "=", "0.999", ",", "justify_alpha", "=", "True", ",", "weight_decay", "=", "1e-6", ",", "update_bn", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.trainer.contrast_trainer.ContrastTrainerMT.finetune_network_run": [[254, 269], ["contrast_trainer.ContrastTrainerMT.to", "contrast_trainer.ContrastTrainerMT._model.enable_grad_decoder", "contrast_trainer.ContrastTrainerMT._model.enable_grad_encoder", "range", "epocher_type.create_from_trainer().run", "contrastyou.epocher.base_epocher.EvalEpoch().run", "contrast_trainer.ContrastTrainerMT._scheduler.step", "deepclustering2.meters2.StorageIncomeDict", "contrast_trainer.ContrastTrainerMT._finetune_storage.put_from_dict", "contrast_trainer.ContrastTrainerMT._writer.add_scalar_with_StorageDict", "contrast_trainer.ContrastTrainerMT.save", "os.path.join", "epocher_type.create_from_trainer", "contrastyou.epocher.base_epocher.EvalEpoch"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.UNet.enable_grad_decoder", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.UNet.enable_grad_encoder", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher.contrast_epocher.PretrainEncoderEpoch.create_from_trainer"], ["", "def", "finetune_network_run", "(", "self", ",", "epocher_type", "=", "MeanTeacherEpocher", ")", ":", "\n", "        ", "self", ".", "to", "(", "self", ".", "_device", ")", "\n", "self", ".", "_model", ".", "enable_grad_decoder", "(", ")", "# noqa", "\n", "self", ".", "_model", ".", "enable_grad_encoder", "(", ")", "# noqa", "\n", "\n", "for", "self", ".", "_cur_epoch", "in", "range", "(", "self", ".", "_start_epoch", ",", "self", ".", "_max_epoch_train_finetune", ")", ":", "\n", "            ", "finetune_dict", "=", "epocher_type", ".", "create_from_trainer", "(", "self", ")", ".", "run", "(", ")", "\n", "val_dict", ",", "cur_score", "=", "EvalEpoch", "(", "self", ".", "_teacher_model", ",", "val_loader", "=", "self", ".", "_val_loader", ",", "\n", "sup_criterion", "=", "self", ".", "_sup_criterion", ",", "\n", "cur_epoch", "=", "self", ".", "_cur_epoch", ",", "device", "=", "self", ".", "_device", ")", ".", "run", "(", ")", "\n", "self", ".", "_scheduler", ".", "step", "(", ")", "\n", "storage_dict", "=", "StorageIncomeDict", "(", "finetune", "=", "finetune_dict", ",", "val", "=", "val_dict", ")", "\n", "self", ".", "_finetune_storage", ".", "put_from_dict", "(", "storage_dict", ",", "epoch", "=", "self", ".", "_cur_epoch", ")", "\n", "self", ".", "_writer", ".", "add_scalar_with_StorageDict", "(", "storage_dict", ",", "self", ".", "_cur_epoch", ")", "\n", "self", ".", "save", "(", "cur_score", ",", "os", ".", "path", ".", "join", "(", "self", ".", "_save_dir", ",", "\"finetune\"", ")", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.trainer._utils.Flatten.__init__": [[7, 9], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["from", "torch", "import", "Tensor", "\n", "\n", "from", "deepclustering2", ".", "type", "import", "to_device", ",", "torch", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.trainer._utils.Flatten.forward": [[10, 13], ["features.view"], "methods", ["None"], ["\n", "\n", "def", "unique_mapping", "(", "name_list", ")", ":", "\n", "    ", "unique_map", "=", "np", ".", "unique", "(", "name_list", ")", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.trainer._utils.SoftmaxWithT.__init__": [[17, 20], ["torch.nn.Softmax.__init__"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["", "return", "[", "mapping", "[", "n", "]", "for", "n", "in", "name_list", "]", "\n", "\n", "\n", "", "def", "_string_list_adding", "(", "list1", ",", "list2", ")", ":", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.trainer._utils.SoftmaxWithT.forward": [[21, 24], ["super().forward"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.IIDLoss.forward"], ["    ", "assert", "len", "(", "list1", ")", "==", "len", "(", "list2", ")", "\n", "return", "[", "x", "+", "\"_\"", "+", "y", "for", "x", ",", "y", "in", "zip", "(", "list1", ",", "list2", ")", "]", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.trainer._utils.Normalize.__init__": [[28, 30], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["return", "(", "image", ",", "target", ")", ",", "(", "image_tf", ",", "target_tf", ")", ",", "filename", ",", "partition_list", ",", "group_list", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.trainer._utils.Normalize.forward": [[31, 33], ["torch.nn.functional.normalize"], "methods", ["None"], ["", "def", "preprocess_input_with_single_transformation", "(", "data", ",", "device", ",", "non_blocking", "=", "True", ")", ":", "\n", "    ", "return", "data", "[", "0", "]", "[", "0", "]", ".", "to", "(", "device", ",", "non_blocking", "=", "non_blocking", ")", ",", "data", "[", "0", "]", "[", "1", "]", ".", "to", "(", "device", ",", "non_blocking", "=", "non_blocking", ")", ",", "data", "[", "1", "]", ",", "data", "[", "2", "]", ",", "data", "[", "3", "]", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.trainer._utils.Identical.__init__": [[37, 39], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["    ", "b", ",", "c", ",", "h", ",", "w", "=", "features", ".", "shape", "\n", "block_h", "=", "h", "//", "partition_num", "[", "0", "]", "\n", "block_w", "=", "w", "//", "partition_num", "[", "1", "]", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.trainer._utils.Identical.forward": [[40, 42], ["None"], "methods", ["None"], ["h_index", "=", "torch", ".", "arange", "(", "0", ",", "h", "-", "block_h", "+", "1", ",", "block_h", ")", "\n", "w_index", "=", "torch", ".", "arange", "(", "0", ",", "w", "-", "block_w", "+", "1", ",", "block_w", ")", "\n", "result", "=", "[", "]", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.trainer._utils.ProjectionHead.__init__": [[46, 62], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.AdaptiveAvgPool2d", "_utils.Flatten", "torch.nn.Linear", "torch.nn.LeakyReLU", "torch.nn.Linear", "torch.nn.AdaptiveAvgPool2d", "_utils.Flatten", "torch.nn.Linear"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["            ", "result", ".", "append", "(", "features", "[", ":", ",", ":", ",", "h", ":", "h", "+", "block_h", ",", "w", ":", "w", "+", "block_w", "]", ")", "\n", "for", "_", "in", "range", "(", "b", ")", ":", "\n", "                ", "result_flag", ".", "append", "(", "(", "int", "(", "h", ")", ",", "int", "(", "w", ")", ")", ")", "\n", "", "", "", "return", "torch", ".", "cat", "(", "result", ",", "dim", "=", "0", ")", ",", "result_flag", "\n", "\n", "\n", "", "class", "GlobalLabelGenerator", ":", "\n", "\n", "    ", "def", "__init__", "(", "self", ",", "contrastive_on_patient", "=", "False", ",", "contrastive_on_partition", "=", "True", ")", "->", "None", ":", "\n", "        ", "self", ".", "_contrastive_on_patient", "=", "contrastive_on_patient", "\n", "self", ".", "_contrastive_on_partition", "=", "contrastive_on_partition", "\n", "\n", "", "def", "__call__", "(", "self", ",", "partition_list", ":", "List", "[", "str", "]", ",", "patient_list", ":", "List", "[", "str", "]", ")", "->", "List", "[", "int", "]", ":", "\n", "        ", "assert", "len", "(", "partition_list", ")", "==", "len", "(", "patient_list", ")", ",", "(", "len", "(", "partition_list", ")", ",", "len", "(", "patient_list", ")", ")", "\n", "batch_size", "=", "len", "(", "partition_list", ")", "\n", "\n", "final_string", "=", "[", "\"\"", "]", "*", "batch_size", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.trainer._utils.ProjectionHead.forward": [[64, 66], ["_utils.ProjectionHead._header"], "methods", ["None"], ["            ", "final_string", "=", "_string_list_adding", "(", "final_string", ",", "patient_list", ")", "\n", "\n", "", "if", "self", ".", "_contrastive_on_partition", ":", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.trainer._utils.LocalProjectionHead.__init__": [[73, 86], ["torch.nn.Module.__init__", "torch.nn.Sequential", "torch.nn.Sequential", "torch.nn.Conv2d", "torch.nn.LeakyReLU", "torch.nn.Conv2d", "torch.nn.Conv2d"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["\n", "    ", "def", "__init__", "(", "self", ",", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "True", ",", "True", ")", "\n", "\n", "", "def", "__call__", "(", "self", ",", "partition_list", ":", "List", "[", "str", "]", ",", "patient_list", ":", "List", "[", "str", "]", ",", "location_list", ":", "List", "[", "str", "]", ")", "->", "List", "[", "int", "]", ":", "\n", "        ", "partition_list", "=", "[", "str", "(", "x", ")", "for", "x", "in", "partition_list", "]", "\n", "patient_list", "=", "[", "str", "(", "x", ")", "for", "x", "in", "patient_list", "]", "\n", "location_list", "=", "[", "str", "(", "x", ")", "for", "x", "in", "location_list", "]", "\n", "mul_factor", "=", "int", "(", "len", "(", "location_list", ")", "//", "len", "(", "patient_list", ")", ")", "\n", "partition_list", "=", "partition_list", "*", "mul_factor", "\n", "patient_list", "=", "patient_list", "*", "mul_factor", "\n", "assert", "len", "(", "location_list", ")", "==", "len", "(", "partition_list", ")", "\n", "\n", "return", "super", "(", ")", ".", "__call__", "(", "_string_list_adding", "(", "patient_list", ",", "partition_list", ")", ",", "location_list", ")", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.trainer._utils.LocalProjectionHead.forward": [[88, 93], ["_utils.LocalProjectionHead._projector", "torch.nn.functional.adaptive_max_pool2d"], "methods", ["None"], ["\n", "", "", "def", "_write_single_png", "(", "mask", ":", "Tensor", ",", "save_dir", ":", "str", ",", "filename", ":", "str", ")", ":", "\n", "    ", "assert", "mask", ".", "shape", ".", "__len__", "(", ")", "==", "2", ",", "mask", ".", "shape", "\n", "mask", "=", "mask", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "save_dir", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "save_dir", ")", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.trainer._utils.ClusterHead.__init__": [[97, 132], ["torch.nn.Module.__init__", "torch.nn.ModuleList", "_utils.ClusterHead.__init__.init_sub_header"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["\n", "\n", "", "", "def", "write_predict", "(", "predict_logit", ":", "Tensor", ",", "save_dir", ":", "str", ",", "filenames", ":", "Union", "[", "str", ",", "List", "[", "str", "]", "]", ")", ":", "\n", "    ", "assert", "len", "(", "predict_logit", ".", "shape", ")", "==", "4", ",", "predict_logit", ".", "shape", "\n", "if", "isinstance", "(", "filenames", ",", "str", ")", ":", "\n", "        ", "filenames", "=", "[", "filenames", ",", "]", "\n", "", "assert", "len", "(", "filenames", ")", "==", "len", "(", "predict_logit", ")", "\n", "predict_mask", "=", "predict_logit", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "for", "m", ",", "f", "in", "zip", "(", "predict_mask", ",", "filenames", ")", ":", "\n", "        ", "_write_single_png", "(", "m", ",", "os", ".", "path", ".", "join", "(", "save_dir", ",", "\"pred\"", ")", ",", "f", ")", "\n", "\n", "\n", "", "", "def", "write_img_target", "(", "image", ":", "Tensor", ",", "target", ":", "Tensor", ",", "save_dir", ":", "str", ",", "filenames", ":", "Union", "[", "str", ",", "List", "[", "str", "]", "]", ")", ":", "\n", "    ", "if", "isinstance", "(", "filenames", ",", "str", ")", ":", "\n", "        ", "filenames", "=", "[", "filenames", ",", "]", "\n", "", "image", "=", "image", ".", "squeeze", "(", ")", "\n", "target", "=", "target", ".", "squeeze", "(", ")", "\n", "assert", "image", ".", "shape", "==", "target", ".", "shape", "\n", "for", "img", ",", "f", "in", "zip", "(", "image", ",", "filenames", ")", ":", "\n", "        ", "_write_single_png", "(", "img", "*", "255", ",", "os", ".", "path", ".", "join", "(", "save_dir", ",", "\"img\"", ")", ",", "f", ")", "\n", "", "for", "targ", ",", "f", "in", "zip", "(", "target", ",", "filenames", ")", ":", "\n", "        ", "_write_single_png", "(", "targ", ",", "os", ".", "path", ".", "join", "(", "save_dir", ",", "\"gt\"", ")", ",", "f", ")", "\n", "\n", "\n", "", "", "if", "__name__", "==", "'__main__'", ":", "\n", "    ", "features", "=", "torch", ".", "randn", "(", "10", ",", "3", ",", "256", ",", "256", ",", "requires_grad", "=", "True", ")", "\n", "\n", "a", "=", "unfold_position", "(", "features", ",", "partition_num", "=", "(", "3", ",", "3", ")", ")", "\n", "print", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.trainer._utils.ClusterHead.forward": [[133, 135], ["x"], "methods", ["None"], []], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.trainer._utils.LocalClusterHead.__init__": [[142, 166], ["torch.nn.Module.__init__", "torch.nn.ModuleList", "_utils.LocalClusterHead.__init__.init_sub_header"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], []], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.trainer._utils.LocalClusterHead.forward": [[167, 169], ["x"], "methods", ["None"], []], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.trainer.iic_trainer.IICContrastTrainer.pretrain_encoder_init": [[18, 62], ["contrastyou.arch.UNetFeatureExtractor", "contrastyou.trainer._utils.ProjectionHead", "contrastyou.trainer._utils.ClusterHead", "torch.optim.Adam", "torch.optim.lr_scheduler.CosineAnnealingLR", "deepclustering2.schedulers.GradualWarmupScheduler", "hasattr", "iter", "contrastyou.losses.contrast_loss.SupConLoss", "itertools.chain", "iic_trainer.IICContrastTrainer._model.parameters", "iic_trainer.IICContrastTrainer._projector_contrastive.parameters", "iic_trainer.IICContrastTrainer._projector_iic.parameters"], "methods", ["None"], ["    ", "def", "pretrain_encoder_init", "(", "self", ",", "group_option", ":", "str", ",", "lr", "=", "1e-6", ",", "weight_decay", "=", "1e-5", ",", "multiplier", "=", "300", ",", "warmup_max", "=", "10", ",", "\n", "\n", "num_clusters", "=", "10", ",", "num_subheads", "=", "10", ",", "iic_weight", "=", "1", ",", "disable_contrastive", "=", "False", ",", "ctemperature", "=", "1", ",", "\n", "ctype", ":", "str", "=", "\"linear\"", ",", "ptype", ":", "str", "=", "\"mlp\"", ",", "extract_position", ":", "str", "=", "\"Conv5\"", ",", "\n", "\n", ")", ":", "\n", "# adding optimizer and scheduler", "\n", "        ", "self", ".", "_extract_position", "=", "extract_position", "\n", "self", ".", "_feature_extractor", "=", "UNetFeatureExtractor", "(", "self", ".", "_extract_position", ")", "\n", "self", ".", "_projector_contrastive", "=", "ProjectionHead", "(", "\n", "input_dim", "=", "UNet", ".", "dimension_dict", "[", "self", ".", "_extract_position", "]", ",", "\n", "output_dim", "=", "256", ",", "\n", "head_type", "=", "ptype", "\n", ")", "# noqa", "\n", "self", ".", "_projector_iic", "=", "ClusterHead", "(", "\n", "input_dim", "=", "UNet", ".", "dimension_dict", "[", "self", ".", "_extract_position", "]", ",", "\n", "num_clusters", "=", "num_clusters", ",", "head_type", "=", "ctype", ",", "T", "=", "ctemperature", ",", "num_subheads", "=", "num_subheads", "\n", ")", "\n", "self", ".", "_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "\n", "itertools", ".", "chain", "(", "self", ".", "_model", ".", "parameters", "(", ")", ",", "# noqa", "\n", "self", ".", "_projector_contrastive", ".", "parameters", "(", ")", ",", "\n", "self", ".", "_projector_iic", ".", "parameters", "(", ")", ")", ",", "# noqa", "\n", "lr", "=", "lr", ",", "weight_decay", "=", "weight_decay", "\n", ")", "# noqa", "\n", "self", ".", "_scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "CosineAnnealingLR", "(", "\n", "self", ".", "_optimizer", ",", "# noqa", "\n", "self", ".", "_max_epoch_train_encoder", "-", "warmup_max", ",", "\n", "0", "\n", ")", "\n", "self", ".", "_scheduler", "=", "GradualWarmupScheduler", "(", "self", ".", "_optimizer", ",", "multiplier", ",", "warmup_max", ",", "self", ".", "_scheduler", ")", "# noqa", "\n", "\n", "self", ".", "_group_option", "=", "group_option", "# noqa", "\n", "self", ".", "_disable_contrastive", "=", "disable_contrastive", "\n", "\n", "# set augmentation method as `total_freedom = True`", "\n", "assert", "hasattr", "(", "self", ".", "_pretrain_loader", ".", "dataset", ".", "_transform", ",", "\"_total_freedom\"", ")", "# noqa", "\n", "self", ".", "_pretrain_loader", ".", "dataset", ".", "_transform", ".", "_total_freedom", "=", "True", "# noqa", "\n", "self", ".", "_pretrain_loader_iter", "=", "iter", "(", "self", ".", "_pretrain_loader", ")", "# noqa", "\n", "\n", "# contrastive loss", "\n", "self", ".", "_contrastive_criterion", "=", "SupConLoss", "(", ")", "\n", "\n", "# iic weight", "\n", "self", ".", "_iic_weight", "=", "iic_weight", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.trainer.iic_trainer.IICContrastTrainer.pretrain_encoder_run": [[63, 82], ["iic_trainer.IICContrastTrainer.to", "iic_trainer.IICContrastTrainer._model.disable_grad_all", "iic_trainer.IICContrastTrainer._model.enable_grad", "range", "contrastyou.epocher.IIC_epocher.IICPretrainEcoderEpoch().run", "iic_trainer.IICContrastTrainer._scheduler.step", "deepclustering2.meters2.StorageIncomeDict", "iic_trainer.IICContrastTrainer._pretrain_encoder_storage.put_from_dict", "iic_trainer.IICContrastTrainer._writer.add_scalar_with_StorageDict", "iic_trainer.IICContrastTrainer._save_to", "contrastyou.epocher.IIC_epocher.IICPretrainEcoderEpoch", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.UNet.disable_grad_all", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.UNet.enable_grad"], ["", "def", "pretrain_encoder_run", "(", "self", ")", ":", "\n", "        ", "self", ".", "to", "(", "self", ".", "_device", ")", "\n", "self", ".", "_model", ".", "disable_grad_all", "(", ")", "\n", "self", ".", "_model", ".", "enable_grad", "(", "from_", "=", "\"Conv1\"", ",", "util", "=", "self", ".", "_extract_position", ")", "\n", "\n", "for", "self", ".", "_cur_epoch", "in", "range", "(", "self", ".", "_start_epoch", ",", "self", ".", "_max_epoch_train_encoder", ")", ":", "\n", "            ", "pretrain_encoder_dict", "=", "IICPretrainEcoderEpoch", "(", "\n", "model", "=", "self", ".", "_model", ",", "projection_head", "=", "self", ".", "_projector_contrastive", ",", "\n", "projection_classifier", "=", "self", ".", "_projector_iic", ",", "optimizer", "=", "self", ".", "_optimizer", ",", "\n", "pretrain_encoder_loader", "=", "self", ".", "_pretrain_loader_iter", ",", "contrastive_criterion", "=", "self", ".", "_contrastive_criterion", ",", "\n", "num_batches", "=", "self", ".", "_num_batches", ",", "cur_epoch", "=", "self", ".", "_cur_epoch", ",", "device", "=", "self", ".", "_device", ",", "\n", "group_option", "=", "self", ".", "_group_option", ",", "feature_extractor", "=", "self", ".", "_feature_extractor", ",", "iic_weight", "=", "self", ".", "_iic_weight", ",", "\n", "disable_contrastive", "=", "self", ".", "_disable_contrastive", ",", "\n", ")", ".", "run", "(", ")", "\n", "self", ".", "_scheduler", ".", "step", "(", ")", "\n", "storage_dict", "=", "StorageIncomeDict", "(", "PRETRAIN_ENCODER", "=", "pretrain_encoder_dict", ")", "\n", "self", ".", "_pretrain_encoder_storage", ".", "put_from_dict", "(", "storage_dict", ",", "epoch", "=", "self", ".", "_cur_epoch", ")", "\n", "self", ".", "_writer", ".", "add_scalar_with_StorageDict", "(", "storage_dict", ",", "self", ".", "_cur_epoch", ")", "\n", "self", ".", "_save_to", "(", "\"last.pth\"", ",", "path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "_save_dir", ",", "\"pretrain_encoder\"", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.trainer.iic_trainer.IICContrastTrainer.pretrain_decoder_init": [[83, 138], ["contrastyou.arch.UNetFeatureExtractor", "contrastyou.trainer._utils.LocalProjectionHead", "contrastyou.trainer._utils.LocalClusterHead", "torch.optim.Adam", "torch.optim.lr_scheduler.CosineAnnealingLR", "deepclustering2.schedulers.GradualWarmupScheduler", "hasattr", "iter", "contrastyou.losses.contrast_loss.SupConLoss", "contrastyou.losses.iic_loss.IIDSegmentationSmallPathLoss", "print", "itertools.chain", "iic_trainer.IICContrastTrainer._model.parameters", "iic_trainer.IICContrastTrainer._projector_contrastive.parameters", "iic_trainer.IICContrastTrainer._projector_iic.parameters"], "methods", ["None"], ["", "", "def", "pretrain_decoder_init", "(", "self", ",", "lr", ":", "float", "=", "1e-6", ",", "weight_decay", ":", "float", "=", "0.0", ",", "\n", "multiplier", ":", "int", "=", "300", ",", "warmup_max", "=", "10", ",", "\n", "\n", "num_clusters", "=", "20", ",", "ctemperature", "=", "1", ",", "num_subheads", "=", "10", ",", "\n", "extract_position", "=", "\"Up_conv3\"", ",", "\n", "enable_grad_from", "=", "\"Conv1\"", ",", "ptype", "=", "\"mlp\"", ",", "ctype", "=", "\"mlp\"", ",", "iic_weight", "=", "1", ",", "\n", "disable_contrastive", "=", "False", ",", "\n", "padding", "=", "0", ",", "patch_size", "=", "512", ",", "\n", "\n", ")", ":", "\n", "# feature_exactor", "\n", "        ", "self", ".", "_extract_position", "=", "extract_position", "\n", "self", ".", "_feature_extractor", "=", "UNetFeatureExtractor", "(", "self", ".", "_extract_position", ")", "\n", "projector_input_dim", "=", "UNet", ".", "dimension_dict", "[", "extract_position", "]", "\n", "# if disable_encoder's gradient", "\n", "self", ".", "_enable_grad_from", "=", "enable_grad_from", "\n", "\n", "# adding optimizer and scheduler", "\n", "self", ".", "_projector_contrastive", "=", "LocalProjectionHead", "(", "\n", "projector_input_dim", ",", "\n", "head_type", "=", "ptype", ",", "\n", "output_size", "=", "(", "4", ",", "4", ")", "\n", ")", "\n", "self", ".", "_projector_iic", "=", "LocalClusterHead", "(", "\n", "projector_input_dim", ",", "\n", "num_clusters", "=", "num_clusters", ",", "\n", "num_subheads", "=", "num_subheads", ",", "\n", "head_type", "=", "ctype", ",", "T", "=", "ctemperature", "\n", ")", "\n", "self", ".", "_optimizer", "=", "torch", ".", "optim", ".", "Adam", "(", "\n", "itertools", ".", "chain", "(", "\n", "self", ".", "_model", ".", "parameters", "(", ")", ",", "\n", "self", ".", "_projector_contrastive", ".", "parameters", "(", ")", ",", "\n", "self", ".", "_projector_iic", ".", "parameters", "(", ")", ",", "\n", ")", ",", "\n", "lr", "=", "lr", ",", "\n", "weight_decay", "=", "weight_decay", "\n", ")", "\n", "self", ".", "_scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "CosineAnnealingLR", "(", "self", ".", "_optimizer", ",", "\n", "self", ".", "_max_epoch_train_decoder", "-", "warmup_max", ",", "0", ")", "\n", "self", ".", "_scheduler", "=", "GradualWarmupScheduler", "(", "self", ".", "_optimizer", ",", "multiplier", ",", "warmup_max", ",", "self", ".", "_scheduler", ")", "\n", "\n", "# set augmentation method as `total_freedom = False`", "\n", "assert", "hasattr", "(", "self", ".", "_pretrain_loader", ".", "dataset", ".", "_transform", ",", "\"_total_freedom\"", ")", "# noqa", "\n", "self", ".", "_pretrain_loader", ".", "dataset", ".", "_transform", ".", "_total_freedom", "=", "False", "# noqa", "\n", "self", ".", "_pretrain_loader_iter", "=", "iter", "(", "self", ".", "_pretrain_loader", ")", "# noqa", "\n", "\n", "# contrastive_loss", "\n", "self", ".", "_contrastive_criterion", "=", "SupConLoss", "(", ")", "\n", "self", ".", "_disable_contrastive", "=", "disable_contrastive", "\n", "self", ".", "_iicseg_criterion", "=", "IIDSegmentationSmallPathLoss", "(", "padding", "=", "padding", ",", "patch_size", "=", "patch_size", ")", "\n", "print", "(", "self", ".", "_iicseg_criterion", ")", "\n", "\n", "# iic weight", "\n", "self", ".", "_iic_weight", "=", "iic_weight", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.trainer.iic_trainer.IICContrastTrainer.pretrain_decoder_run": [[139, 158], ["iic_trainer.IICContrastTrainer._model.disable_grad_all", "iic_trainer.IICContrastTrainer._model.enable_grad", "iic_trainer.IICContrastTrainer.to", "range", "contrastyou.epocher.IIC_epocher.IICPretrainDecoderEpoch().run", "iic_trainer.IICContrastTrainer._scheduler.step", "deepclustering2.meters2.StorageIncomeDict", "iic_trainer.IICContrastTrainer._pretrain_encoder_storage.put_from_dict", "iic_trainer.IICContrastTrainer._writer.add_scalar_with_StorageDict", "iic_trainer.IICContrastTrainer._save_to", "contrastyou.epocher.IIC_epocher.IICPretrainDecoderEpoch", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.UNet.disable_grad_all", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.arch.unet.UNet.enable_grad"], ["", "def", "pretrain_decoder_run", "(", "self", ")", ":", "\n", "        ", "self", ".", "_model", ".", "disable_grad_all", "(", ")", "\n", "self", ".", "_model", ".", "enable_grad", "(", "from_", "=", "self", ".", "_enable_grad_from", ",", "util", "=", "self", ".", "_extract_position", ")", "\n", "self", ".", "to", "(", "self", ".", "_device", ")", "\n", "\n", "for", "self", ".", "_cur_epoch", "in", "range", "(", "self", ".", "_start_epoch", ",", "self", ".", "_max_epoch_train_decoder", ")", ":", "\n", "            ", "pretrain_decoder_dict", "=", "IICPretrainDecoderEpoch", "(", "\n", "model", "=", "self", ".", "_model", ",", "projection_head", "=", "self", ".", "_projector_contrastive", ",", "\n", "projection_classifier", "=", "self", ".", "_projector_iic", ",", "optimizer", "=", "self", ".", "_optimizer", ",", "\n", "pretrain_decoder_loader", "=", "self", ".", "_pretrain_loader_iter", ",", "contrastive_criterion", "=", "self", ".", "_contrastive_criterion", ",", "\n", "iicseg_criterion", "=", "self", ".", "_iicseg_criterion", ",", "num_batches", "=", "self", ".", "_num_batches", ",", "cur_epoch", "=", "self", ".", "_cur_epoch", ",", "\n", "device", "=", "self", ".", "_device", ",", "disable_contrastive", "=", "self", ".", "_disable_contrastive", ",", "iic_weight", "=", "self", ".", "_iic_weight", ",", "\n", "feature_extractor", "=", "self", ".", "_feature_extractor", ",", "\n", ")", ".", "run", "(", ")", "\n", "self", ".", "_scheduler", ".", "step", "(", ")", "\n", "storage_dict", "=", "StorageIncomeDict", "(", "PRETRAIN_DECODER", "=", "pretrain_decoder_dict", ",", ")", "\n", "self", ".", "_pretrain_encoder_storage", ".", "put_from_dict", "(", "storage_dict", ",", "epoch", "=", "self", ".", "_cur_epoch", ")", "\n", "self", ".", "_writer", ".", "add_scalar_with_StorageDict", "(", "storage_dict", ",", "self", ".", "_cur_epoch", ")", "\n", "self", ".", "_save_to", "(", "\"last.pth\"", ",", "path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "_save_dir", ",", "\"pretrain_decoder\"", ")", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.losses.iic_loss.IIDLoss.__init__": [[32, 42], ["torch.nn.Module.__init__", "print", "float", "float", "termcolor.colored"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["    ", "def", "__init__", "(", "self", ",", "lamb", ":", "float", "=", "1.0", ",", "eps", ":", "float", "=", "sys", ".", "float_info", ".", "epsilon", ")", ":", "\n", "        ", "\"\"\"\n        :param lamb:\n        :param eps:\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", ")", "\n", "print", "(", "colored", "(", "f\"Initialize {self.__class__.__name__}.\"", ",", "\"green\"", ")", ")", "\n", "self", ".", "lamb", "=", "float", "(", "lamb", ")", "\n", "self", ".", "eps", "=", "float", "(", "eps", ")", "\n", "self", ".", "torch_vision", "=", "torch", ".", "__version__", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.losses.iic_loss.IIDLoss.forward": [[43, 72], ["deepclustering2.utils.simplex", "deepclustering2.utils.simplex", "x_out.size", "iic_loss.compute_joint", "compute_joint.sum().view().expand", "compute_joint.sum().view().expand", "loss.sum.sum.sum", "loss_no_lamb.sum.sum.sum", "compute_joint.size", "compute_joint.sum().view", "compute_joint.sum().view", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "compute_joint.sum", "compute_joint.sum", "torch.log"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.losses.iic_loss.compute_joint", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.confusionmatrix.ConfusionMatrix.log", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.confusionmatrix.ConfusionMatrix.log", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.confusionmatrix.ConfusionMatrix.log", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.confusionmatrix.ConfusionMatrix.log", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.confusionmatrix.ConfusionMatrix.log", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.confusionmatrix.ConfusionMatrix.log"], ["", "def", "forward", "(", "self", ",", "x_out", ":", "Tensor", ",", "x_tf_out", ":", "Tensor", ")", ":", "\n", "        ", "\"\"\"\n        return the inverse of the MI. if the x_out == y_out, return the inverse of Entropy\n        :param x_out:\n        :param x_tf_out:\n        :return:\n        \"\"\"", "\n", "assert", "simplex", "(", "x_out", ")", ",", "f\"x_out not normalized.\"", "\n", "assert", "simplex", "(", "x_tf_out", ")", ",", "f\"x_tf_out not normalized.\"", "\n", "_", ",", "k", "=", "x_out", ".", "size", "(", ")", "\n", "p_i_j", "=", "compute_joint", "(", "x_out", ",", "x_tf_out", ")", "\n", "assert", "p_i_j", ".", "size", "(", ")", "==", "(", "k", ",", "k", ")", "\n", "\n", "p_i", "=", "(", "\n", "p_i_j", ".", "sum", "(", "dim", "=", "1", ")", ".", "view", "(", "k", ",", "1", ")", ".", "expand", "(", "k", ",", "k", ")", "\n", ")", "# p_i should be the mean of the x_out", "\n", "p_j", "=", "p_i_j", ".", "sum", "(", "dim", "=", "0", ")", ".", "view", "(", "1", ",", "k", ")", ".", "expand", "(", "k", ",", "k", ")", "# but should be same, symmetric", "\n", "\n", "# p_i = x_out.mean(0).view(k, 1).expand(k, k)", "\n", "# p_j = x_tf_out.mean(0).view(1, k).expand(k, k)", "\n", "#", "\n", "\n", "loss", "=", "-", "p_i_j", "*", "(", "\n", "torch", ".", "log", "(", "p_i_j", "+", "1e-10", ")", "-", "self", ".", "lamb", "*", "torch", ".", "log", "(", "p_j", "+", "1e-10", ")", "-", "self", ".", "lamb", "*", "torch", ".", "log", "(", "p_i", "+", "1e-10", ")", "\n", ")", "\n", "loss", "=", "loss", ".", "sum", "(", ")", "\n", "loss_no_lamb", "=", "-", "p_i_j", "*", "(", "torch", ".", "log", "(", "p_i_j", "+", "1e-10", ")", "-", "torch", ".", "log", "(", "p_j", "+", "1e-10", ")", "-", "torch", ".", "log", "(", "p_i", "+", "1e-10", ")", ")", "\n", "loss_no_lamb", "=", "loss_no_lamb", ".", "sum", "(", ")", "\n", "return", "loss", ",", "loss_no_lamb", ",", "p_i_j", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.losses.iic_loss.IIDSegmentationLoss.__init__": [[98, 106], ["torch.nn.Module.__init__", "print", "termcolor.colored"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "lamda", "=", "1.0", ",", "padding", "=", "7", ",", "eps", ":", "float", "=", "sys", ".", "float_info", ".", "epsilon", "\n", ")", "->", "None", ":", "\n", "        ", "super", "(", "IIDSegmentationLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "print", "(", "colored", "(", "f\"Initialize {self.__class__.__name__}.\"", ",", "\"green\"", ")", ")", "\n", "self", ".", "lamda", "=", "lamda", "\n", "self", ".", "padding", "=", "padding", "\n", "self", ".", "eps", "=", "eps", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.losses.iic_loss.IIDSegmentationLoss.__call__": [[107, 150], ["deepclustering2.utils.simplex", "x_out.permute().contiguous.permute().contiguous.permute().contiguous", "x_tf_out.permute().contiguous.permute().contiguous.permute().contiguous", "torch.nn.functional.conv2d", "p_i_j.permute.permute.permute", "p_i_j.permute.permute.sum().repeat", "p_i_j.permute.permute.sum().repeat", "torch.isnan", "p_i_j.permute.permute.sum().sum", "RuntimeError", "x_out.permute().contiguous.permute().contiguous.permute", "x_tf_out.permute().contiguous.permute().contiguous.permute", "p_i_j.permute.permute.min().detach", "p_i_j.permute.permute.permute", "p_i_j.permute.permute.sum", "p_i_j.permute.permute.sum", "p_i_j.permute.permute.sum", "p_i_j.permute.permute.min", "torch.log", "torch.log", "torch.log"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.confusionmatrix.ConfusionMatrix.log", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.confusionmatrix.ConfusionMatrix.log", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.confusionmatrix.ConfusionMatrix.log"], ["", "def", "__call__", "(", "\n", "self", ",", "x_out", ":", "Tensor", ",", "x_tf_out", ":", "Tensor", ",", "mask", ":", "Tensor", "=", "None", "\n", ")", "->", "Tensor", ":", "\n", "        ", "assert", "x_out", ".", "requires_grad", "and", "x_tf_out", ".", "requires_grad", "\n", "if", "mask", "is", "not", "None", ":", "\n", "            ", "assert", "not", "mask", ".", "requires_grad", "\n", "", "assert", "simplex", "(", "x_out", ")", "\n", "assert", "x_out", ".", "shape", "==", "x_tf_out", ".", "shape", "\n", "bn", ",", "k", ",", "h", ",", "w", "=", "x_tf_out", ".", "shape", "\n", "if", "mask", "is", "not", "None", ":", "\n", "            ", "x_out", "=", "x_out", "*", "mask", "\n", "x_tf_out", "=", "x_tf_out", "*", "mask", "\n", "\n", "", "x_out", "=", "x_out", ".", "permute", "(", "1", ",", "0", ",", "2", ",", "3", ")", ".", "contiguous", "(", ")", "# k, ni, h, w", "\n", "x_tf_out", "=", "x_tf_out", ".", "permute", "(", "1", ",", "0", ",", "2", ",", "3", ")", ".", "contiguous", "(", ")", "# k, ni, h, w", "\n", "# k, k, 2 * half_T_side_dense + 1,2 * half_T_side_dense + 1", "\n", "p_i_j", "=", "F", ".", "conv2d", "(", "x_out", ",", "weight", "=", "x_tf_out", ",", "padding", "=", "(", "self", ".", "padding", ",", "self", ".", "padding", ")", ")", "\n", "p_i_j", "=", "p_i_j", "-", "p_i_j", ".", "min", "(", ")", ".", "detach", "(", ")", "+", "1e-16", "\n", "T_side_dense", "=", "self", ".", "padding", "*", "2", "+", "1", "\n", "\n", "# T x T x k x k", "\n", "p_i_j", "=", "p_i_j", ".", "permute", "(", "2", ",", "3", ",", "0", ",", "1", ")", "\n", "p_i_j", "=", "p_i_j", "/", "p_i_j", ".", "sum", "(", "dim", "=", "3", ",", "keepdim", "=", "True", ")", ".", "sum", "(", "dim", "=", "2", ",", "keepdim", "=", "True", ")", "# norm", "\n", "\n", "# symmetrise, transpose the k x k part", "\n", "p_i_j", "=", "(", "p_i_j", "+", "p_i_j", ".", "permute", "(", "0", ",", "1", ",", "3", ",", "2", ")", ")", "/", "2.0", "\n", "\n", "# T x T x k x k", "\n", "p_i_mat", "=", "p_i_j", ".", "sum", "(", "dim", "=", "2", ",", "keepdim", "=", "True", ")", ".", "repeat", "(", "1", ",", "1", ",", "k", ",", "1", ")", "\n", "p_j_mat", "=", "p_i_j", ".", "sum", "(", "dim", "=", "3", ",", "keepdim", "=", "True", ")", ".", "repeat", "(", "1", ",", "1", ",", "1", ",", "k", ")", "\n", "\n", "# maximise information", "\n", "loss", "=", "(", "\n", "-", "p_i_j", "\n", "*", "(", "\n", "torch", ".", "log", "(", "p_i_j", "+", "1e-16", ")", "\n", "-", "self", ".", "lamda", "*", "torch", ".", "log", "(", "p_i_mat", "+", "1e-16", ")", "\n", "-", "self", ".", "lamda", "*", "torch", ".", "log", "(", "p_j_mat", "+", "1e-16", ")", "\n", ")", "\n", ")", ".", "sum", "(", ")", "/", "(", "T_side_dense", "*", "T_side_dense", ")", "\n", "if", "torch", ".", "isnan", "(", "loss", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "loss", ")", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.losses.iic_loss.IIDSegmentationSmallPathLoss.__init__": [[166, 170], ["iic_loss.IIDSegmentationLoss.__init__", "_pair", "_pair"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["    ", "def", "__init__", "(", "self", ",", "lamda", "=", "1.0", ",", "padding", "=", "7", ",", "eps", ":", "float", "=", "sys", ".", "float_info", ".", "epsilon", ",", "patch_size", "=", "32", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "lamda", ",", "padding", ",", "eps", ")", "\n", "self", ".", "_patch_size", "=", "_pair", "(", "patch_size", ")", "\n", "self", ".", "_step_size", "=", "_pair", "(", "patch_size", "//", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.losses.iic_loss.IIDSegmentationSmallPathLoss.__call__": [[171, 187], ["any", "contrastyou.helper.average_iter", "RuntimeError", "iic_loss.IIDSegmentationLoss.__call__", "iic_loss.IIDSegmentationLoss.__call__", "torch.isnan", "zip", "zip", "iic_loss.patch_generator", "iic_loss.patch_generator", "iic_loss.patch_generator", "iic_loss.patch_generator", "iic_loss.patch_generator"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.helper.utils.average_iter", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.augment.sequential_wrapper.SequentialWrapperTwice.__call__", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.augment.sequential_wrapper.SequentialWrapperTwice.__call__", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.losses.iic_loss.patch_generator", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.losses.iic_loss.patch_generator", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.losses.iic_loss.patch_generator", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.losses.iic_loss.patch_generator", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.losses.iic_loss.patch_generator"], ["", "def", "__call__", "(", "self", ",", "x_out", ":", "Tensor", ",", "x_tf_out", ":", "Tensor", ",", "mask", ":", "Tensor", "=", "None", ")", ":", "\n", "        ", "assert", "x_out", ".", "shape", "==", "x_tf_out", ".", "shape", ",", "(", "x_out", ".", "shape", ",", "x_tf_out", ".", "shape", ")", "\n", "if", "mask", "is", "None", ":", "\n", "            ", "iic_patch_list", "=", "[", "super", "(", "IIDSegmentationSmallPathLoss", ",", "self", ")", ".", "__call__", "(", "x", ",", "y", ")", "for", "x", ",", "y", "in", "zip", "(", "\n", "patch_generator", "(", "x_out", ",", "self", ".", "_patch_size", ",", "self", ".", "_step_size", ")", ",", "\n", "patch_generator", "(", "x_tf_out", ",", "self", ".", "_patch_size", ",", "self", ".", "_step_size", ")", "\n", ")", "]", "\n", "", "else", ":", "\n", "            ", "iic_patch_list", "=", "[", "super", "(", "IIDSegmentationSmallPathLoss", ",", "self", ")", ".", "__call__", "(", "x", ",", "y", ",", "m", ")", "for", "x", ",", "y", ",", "m", "in", "zip", "(", "\n", "patch_generator", "(", "x_out", ",", "self", ".", "_patch_size", ",", "self", ".", "_step_size", ")", ",", "\n", "patch_generator", "(", "x_tf_out", ",", "self", ".", "_patch_size", ",", "self", ".", "_step_size", ")", ",", "\n", "patch_generator", "(", "mask", ",", "self", ".", "_patch_size", ",", "self", ".", "_step_size", ")", "\n", ")", "]", "\n", "", "if", "any", "(", "[", "torch", ".", "isnan", "(", "x", ")", "for", "x", "in", "iic_patch_list", "]", ")", ":", "\n", "            ", "raise", "RuntimeError", "(", "iic_patch_list", ")", "\n", "", "return", "average_iter", "(", "iic_patch_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.losses.iic_loss.IIDSegmentationSmallPathLoss.__repr__": [[188, 190], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "f\"{self.__class__.__name__} with patch_size={self._patch_size} and padding={self.padding}.\"", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.losses.iic_loss._ntuple": [[16, 23], ["isinstance", "tuple", "itertools.repeat"], "function", ["None"], ["def", "_ntuple", "(", "n", ")", ":", "\n", "    ", "def", "parse", "(", "x", ")", ":", "\n", "        ", "if", "isinstance", "(", "x", ",", "container_abcs", ".", "Iterable", ")", ":", "\n", "            ", "return", "x", "\n", "", "return", "tuple", "(", "repeat", "(", "x", ",", "n", ")", ")", "\n", "\n", "", "return", "parse", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.losses.iic_loss.compute_joint": [[74, 95], ["deepclustering2.utils.simplex", "deepclustering2.utils.simplex", "p_i_j.sum.sum", "p_i_j.sum.sum", "x_out.unsqueeze", "x_tf_out.unsqueeze", "x_tf_out.size", "x_tf_out.size", "p_i_j.sum.t"], "function", ["None"], ["", "", "def", "compute_joint", "(", "x_out", ":", "Tensor", ",", "x_tf_out", ":", "Tensor", ",", "symmetric", "=", "True", ")", "->", "Tensor", ":", "\n", "    ", "r\"\"\"\n    return joint probability\n    :param x_out: p1, simplex\n    :param x_tf_out: p2, simplex\n    :return: joint probability\n    \"\"\"", "\n", "# produces variable that requires grad (since args require grad)", "\n", "assert", "simplex", "(", "x_out", ")", ",", "f\"x_out not normalized.\"", "\n", "assert", "simplex", "(", "x_tf_out", ")", ",", "f\"x_tf_out not normalized.\"", "\n", "\n", "bn", ",", "k", "=", "x_out", ".", "shape", "\n", "assert", "x_tf_out", ".", "size", "(", "0", ")", "==", "bn", "and", "x_tf_out", ".", "size", "(", "1", ")", "==", "k", "\n", "\n", "p_i_j", "=", "x_out", ".", "unsqueeze", "(", "2", ")", "*", "x_tf_out", ".", "unsqueeze", "(", "1", ")", "# bn, k, k", "\n", "p_i_j", "=", "p_i_j", ".", "sum", "(", "dim", "=", "0", ")", "# k, k aggregated over one batch", "\n", "if", "symmetric", ":", "\n", "        ", "p_i_j", "=", "(", "p_i_j", "+", "p_i_j", ".", "t", "(", ")", ")", "/", "2.0", "# symmetric", "\n", "", "p_i_j", "/=", "p_i_j", ".", "sum", "(", ")", "# normalise", "\n", "\n", "return", "p_i_j", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.losses.iic_loss.patch_generator": [[152, 161], ["numpy.arange", "numpy.append", "numpy.arange", "numpy.append", "max", "max", "min", "min"], "function", ["None"], ["", "", "def", "patch_generator", "(", "feature_map", ",", "patch_size", "=", "(", "32", ",", "32", ")", ",", "step_size", "=", "(", "16", ",", "16", ")", ")", ":", "\n", "    ", "b", ",", "c", ",", "h", ",", "w", "=", "feature_map", ".", "shape", "\n", "hs", "=", "np", ".", "arange", "(", "0", ",", "h", "-", "patch_size", "[", "0", "]", ",", "step_size", "[", "0", "]", ")", "\n", "hs", "=", "np", ".", "append", "(", "hs", ",", "max", "(", "h", "-", "patch_size", "[", "0", "]", ",", "0", ")", ")", "\n", "ws", "=", "np", ".", "arange", "(", "0", ",", "w", "-", "patch_size", "[", "1", "]", ",", "step_size", "[", "1", "]", ")", "\n", "ws", "=", "np", ".", "append", "(", "ws", ",", "max", "(", "w", "-", "patch_size", "[", "1", "]", ",", "0", ")", ")", "\n", "for", "_h", "in", "hs", ":", "\n", "        ", "for", "_w", "in", "ws", ":", "\n", "            ", "yield", "feature_map", "[", ":", ",", ":", ",", "_h", ":", "min", "(", "_h", "+", "patch_size", "[", "0", "]", ",", "h", ")", ",", "_w", ":", "min", "(", "_w", "+", "patch_size", "[", "1", "]", ",", "w", ")", "]", "\n", "# yield [_h, min(_h + patch_size[0], h), _w, min(_w + patch_size[1], w)]", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.losses.contrast_loss.SupConLoss.__init__": [[14, 20], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["def", "__init__", "(", "self", ",", "temperature", "=", "0.07", ",", "contrast_mode", "=", "'all'", ",", "\n", "base_temperature", "=", "0.07", ")", ":", "\n", "        ", "super", "(", "SupConLoss", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "temperature", "=", "temperature", "\n", "self", ".", "contrast_mode", "=", "contrast_mode", "\n", "self", ".", "base_temperature", "=", "base_temperature", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.losses.contrast_loss.SupConLoss.forward": [[21, 101], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.div", "torch.div", "torch.div", "torch.div", "torch.max", "torch.max", "torch.max", "torch.max", "mask.float().to.float().to.repeat", "torch.scatter", "torch.scatter", "torch.scatter", "torch.scatter", "loss.view().mean.view().mean.view().mean", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "len", "ValueError", "len", "features.view.view.view", "ValueError", "torch.unbind", "torch.unbind", "torch.unbind", "torch.unbind", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "logits_max.detach", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.arange().view().to", "torch.arange().view().to", "torch.arange().view().to", "torch.arange().view().to", "torch.exp", "torch.exp", "torch.exp", "torch.exp", "torch.log", "torch.log", "torch.log", "torch.log", "mask.float().to.float().to.sum", "torch.eye().to", "torch.eye().to", "torch.eye().to", "torch.eye().to", "ValueError", "torch.cat.t", "torch.cat.t", "loss.view().mean.view().mean.view", "isinstance", "torch.Tensor().long.contiguous().view", "torch.Tensor().long.contiguous().view", "torch.eq().float().to", "torch.eq().float().to", "torch.eq().float().to", "torch.eq().float().to", "mask.float().to.float().to.float().to", "torch.arange().view", "torch.arange().view", "torch.arange().view", "torch.arange().view", "exp_logits.sum", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.Tensor().long", "torch.Tensor().long", "torch.Tensor().long", "torch.Tensor().long", "ValueError", "torch.Tensor().long.contiguous", "torch.Tensor().long.contiguous", "torch.eq().float", "torch.eq().float", "torch.eq().float", "torch.eq().float", "mask.float().to.float().to.float", "torch.arange", "torch.arange", "torch.arange", "torch.arange", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.eq", "torch.eq", "torch.eq", "torch.eq", "torch.Tensor().long.t", "torch.Tensor().long.t"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.confusionmatrix.ConfusionMatrix.log", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.confusionmatrix.ConfusionMatrix.log", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.confusionmatrix.ConfusionMatrix.log", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.confusionmatrix.ConfusionMatrix.log"], ["", "def", "forward", "(", "self", ",", "features", ",", "labels", "=", "None", ",", "mask", "=", "None", ")", ":", "\n", "        ", "\"\"\"Compute loss for model. If both `labels` and `mask` are None,\n        it degenerates to SimCLR unsupervised loss:\n        https://arxiv.org/pdf/2002.05709.pdf\n\n        Args:\n            features: hidden vector of shape [bsz, n_views, ...].\n            labels: ground truth of shape [bsz].\n            mask: contrastive mask of shape [bsz, bsz], mask_{i,j}=1 if sample j\n                has the same class as sample i. Can be asymmetric.\n        Returns:\n            A loss scalar.\n        \"\"\"", "\n", "device", "=", "(", "torch", ".", "device", "(", "'cuda'", ")", "\n", "if", "features", ".", "is_cuda", "\n", "else", "torch", ".", "device", "(", "'cpu'", ")", ")", "\n", "\n", "if", "len", "(", "features", ".", "shape", ")", "<", "3", ":", "\n", "            ", "raise", "ValueError", "(", "'`features` needs to be [bsz, n_views, ...],'", "\n", "'at least 3 dimensions are required'", ")", "\n", "", "if", "len", "(", "features", ".", "shape", ")", ">", "3", ":", "\n", "            ", "features", "=", "features", ".", "view", "(", "features", ".", "shape", "[", "0", "]", ",", "features", ".", "shape", "[", "1", "]", ",", "-", "1", ")", "\n", "\n", "", "batch_size", "=", "features", ".", "shape", "[", "0", "]", "\n", "if", "labels", "is", "not", "None", "and", "mask", "is", "not", "None", ":", "\n", "            ", "raise", "ValueError", "(", "'Cannot define both `labels` and `mask`'", ")", "\n", "", "elif", "labels", "is", "None", "and", "mask", "is", "None", ":", "\n", "            ", "mask", "=", "torch", ".", "eye", "(", "batch_size", ",", "dtype", "=", "torch", ".", "float32", ")", ".", "to", "(", "device", ")", "# SIMCLR", "\n", "", "elif", "labels", "is", "not", "None", ":", "\n", "            ", "if", "isinstance", "(", "labels", ",", "list", ")", ":", "\n", "                ", "labels", "=", "torch", ".", "Tensor", "(", "labels", ")", ".", "long", "(", ")", "\n", "", "labels", "=", "labels", ".", "contiguous", "(", ")", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "if", "labels", ".", "shape", "[", "0", "]", "!=", "batch_size", ":", "\n", "                ", "raise", "ValueError", "(", "'Num of labels does not match num of features'", ")", "\n", "", "mask", "=", "torch", ".", "eq", "(", "labels", ",", "labels", ".", "t", "(", ")", ")", ".", "float", "(", ")", ".", "to", "(", "device", ")", "\n", "", "else", ":", "\n", "            ", "mask", "=", "mask", ".", "float", "(", ")", ".", "to", "(", "device", ")", "\n", "\n", "", "contrast_count", "=", "features", ".", "shape", "[", "1", "]", "\n", "contrast_feature", "=", "torch", ".", "cat", "(", "torch", ".", "unbind", "(", "features", ",", "dim", "=", "1", ")", ",", "dim", "=", "0", ")", "# 32 128", "\n", "if", "self", ".", "contrast_mode", "==", "'one'", ":", "\n", "            ", "anchor_feature", "=", "features", "[", ":", ",", "0", "]", "\n", "anchor_count", "=", "1", "\n", "", "elif", "self", ".", "contrast_mode", "==", "'all'", ":", "\n", "            ", "anchor_feature", "=", "contrast_feature", "\n", "anchor_count", "=", "contrast_count", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "'Unknown mode: {}'", ".", "format", "(", "self", ".", "contrast_mode", ")", ")", "\n", "\n", "# compute logits", "\n", "", "anchor_dot_contrast", "=", "torch", ".", "div", "(", "\n", "torch", ".", "matmul", "(", "anchor_feature", ",", "contrast_feature", ".", "t", "(", ")", ")", ",", "\n", "self", ".", "temperature", ")", "\n", "# for numerical stability", "\n", "logits_max", ",", "_", "=", "torch", ".", "max", "(", "anchor_dot_contrast", ",", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "logits", "=", "anchor_dot_contrast", "-", "logits_max", ".", "detach", "(", ")", "\n", "\n", "# tile mask", "\n", "mask", "=", "mask", ".", "repeat", "(", "anchor_count", ",", "contrast_count", ")", "\n", "# mask-out self-contrast cases", "\n", "logits_mask", "=", "torch", ".", "scatter", "(", "\n", "torch", ".", "ones_like", "(", "mask", ")", ",", "\n", "1", ",", "\n", "torch", ".", "arange", "(", "batch_size", "*", "anchor_count", ")", ".", "view", "(", "-", "1", ",", "1", ")", ".", "to", "(", "device", ")", ",", "\n", "0", "\n", ")", "\n", "mask", "=", "mask", "*", "logits_mask", "\n", "\n", "# compute log_prob", "\n", "exp_logits", "=", "torch", ".", "exp", "(", "logits", ")", "*", "logits_mask", "\n", "log_prob", "=", "logits", "-", "torch", ".", "log", "(", "exp_logits", ".", "sum", "(", "1", ",", "keepdim", "=", "True", ")", "+", "1e-16", ")", "\n", "\n", "# compute mean of log-likelihood over positive", "\n", "mean_log_prob_pos", "=", "(", "mask", "*", "log_prob", ")", ".", "sum", "(", "1", ")", "/", "mask", ".", "sum", "(", "1", ")", "\n", "\n", "# loss", "\n", "loss", "=", "-", "(", "self", ".", "temperature", "/", "self", ".", "base_temperature", ")", "*", "mean_log_prob_pos", "\n", "loss", "=", "loss", ".", "view", "(", "anchor_count", ",", "batch_size", ")", ".", "mean", "(", ")", "\n", "\n", "return", "loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.augment.tensor_affine_transform.AffineTensorTransform.__init__": [[34, 51], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "min_rot", ":", "float", "=", "0", ",", "\n", "max_rot", ":", "float", "=", "180", ",", "\n", "min_shear", ":", "float", "=", "0.0", ",", "\n", "max_shear", ":", "float", "=", "0.5", ",", "\n", "min_scale", ":", "float", "=", "0.9", ",", "\n", "max_scale", ":", "float", "=", "1.1", ",", "\n", "mode", "=", "\"bilinear\"", ",", "\n", ")", ":", "\n", "        ", "self", ".", "min_rot", "=", "min_rot", "\n", "self", ".", "max_rot", "=", "max_rot", "\n", "self", ".", "min_shear", "=", "min_shear", "\n", "self", ".", "max_shear", "=", "max_shear", "\n", "self", ".", "min_scale", "=", "min_scale", "\n", "self", ".", "max_scale", "=", "max_scale", "\n", "self", ".", "mode", "=", "mode", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.augment.tensor_affine_transform.AffineTensorTransform.get_random_affinematrix": [[52, 67], ["numpy.radians", "numpy.radians", "numpy.array", "torch.from_numpy().float", "numpy.random.rand", "torch.from_numpy", "numpy.random.rand", "numpy.random.rand", "numpy.cos", "numpy.sin", "numpy.cos", "numpy.sin"], "methods", ["None"], ["", "def", "get_random_affinematrix", "(", "self", ")", ":", "\n", "        ", "a", "=", "np", ".", "radians", "(", "np", ".", "random", ".", "rand", "(", ")", "*", "(", "self", ".", "max_rot", "-", "self", ".", "min_rot", ")", "+", "self", ".", "min_rot", ")", "\n", "shear", "=", "np", ".", "radians", "(", "\n", "np", ".", "random", ".", "rand", "(", ")", "*", "(", "self", ".", "max_shear", "-", "self", ".", "min_shear", ")", "+", "self", ".", "min_shear", "\n", ")", "\n", "scale", "=", "np", ".", "random", ".", "rand", "(", ")", "*", "(", "self", ".", "max_scale", "-", "self", ".", "min_scale", ")", "+", "self", ".", "min_scale", "\n", "\n", "RandomAffineMatrix", "=", "np", ".", "array", "(", "\n", "[", "\n", "[", "np", ".", "cos", "(", "a", ")", "*", "scale", ",", "-", "np", ".", "sin", "(", "a", "+", "shear", ")", "*", "scale", ",", "0.0", "]", ",", "\n", "[", "np", ".", "sin", "(", "a", ")", "*", "scale", ",", "np", ".", "cos", "(", "a", "+", "shear", ")", "*", "scale", ",", "0.0", "]", ",", "\n", "]", ",", "\n", "dtype", "=", "np", ".", "float32", ",", "\n", ")", "# 3x3", "\n", "return", "torch", ".", "from_numpy", "(", "RandomAffineMatrix", ")", ".", "float", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.augment.tensor_affine_transform.AffineTensorTransform._perform_affine_transform": [[68, 79], ["affinematrix.to.to.to", "torch.nn.functional.affine_grid", "torch.nn.functional.grid_sample", "len"], "methods", ["None"], ["", "def", "_perform_affine_transform", "(", "self", ",", "single_img", ":", "Tensor", ",", "affinematrix", ":", "Tensor", ")", ":", "\n", "        ", "assert", "len", "(", "single_img", ".", "shape", ")", "==", "4", "\n", "assert", "affinematrix", ".", "shape", "[", "1", "]", "==", "2", ",", "affinematrix", ".", "shape", "[", "2", "]", "==", "3", "\n", "affinematrix", "=", "affinematrix", ".", "to", "(", "single_img", ".", "device", ")", "\n", "grid", "=", "F", ".", "affine_grid", "(", "\n", "affinematrix", ",", "single_img", ".", "shape", ",", "align_corners", "=", "True", ",", "\n", ")", "# output should be same size", "\n", "data_tf", "=", "F", ".", "grid_sample", "(", "\n", "single_img", ",", "grid", ",", "mode", "=", "self", ".", "mode", ",", "padding_mode", "=", "\"zeros\"", ",", "align_corners", "=", "True", "\n", ")", "# this can ONLY do bilinear", "\n", "return", "data_tf", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.augment.tensor_affine_transform.AffineTensorTransform.__call__": [[80, 104], ["tensor_affine_transform.AffineTensorTransform._perform_affine_transform", "img_tf.view.view.view", "img.shape.__len__", "img.unsqueeze", "img.unsqueeze", "img.shape.__len__", "tensor_affine_transform.AffineTensorTransform.get_random_affinematrix", "tensor_affine_transform.inverse_transform_matrix", "len", "len", "torch.stack", "torch.stack", "tensor_affine_transform.AffineTensorTransform.get_random_affinematrix", "range"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.augment.tensor_affine_transform.AffineTensorTransform._perform_affine_transform", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.LocalClusterWrappaer.__len__", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.LocalClusterWrappaer.__len__", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.augment.tensor_affine_transform.AffineTensorTransform.get_random_affinematrix", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.augment.tensor_affine_transform.inverse_transform_matrix", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.augment.tensor_affine_transform.AffineTensorTransform.get_random_affinematrix"], ["", "def", "__call__", "(", "\n", "self", ",", "img", ":", "Tensor", ",", "AffineMatrix", ":", "Tensor", "=", "None", ",", "independent", "=", "True", ",", "inverse", "=", "False", "\n", ")", ":", "\n", "        ", "assert", "img", ".", "shape", ".", "__len__", "(", ")", "in", "(", "4", ",", "3", ",", "2", ")", "\n", "_img_shape", "=", "img", ".", "shape", "\n", "img", "=", "img", ".", "unsqueeze", "(", "0", ")", "if", "len", "(", "img", ".", "shape", ")", "==", "2", "else", "img", "\n", "img", "=", "img", ".", "unsqueeze", "(", "0", ")", "if", "len", "(", "img", ".", "shape", ")", "==", "3", "else", "img", "\n", "assert", "img", ".", "shape", ".", "__len__", "(", ")", "==", "4", "\n", "bn", "=", "img", ".", "shape", "[", "0", "]", "\n", "\n", "if", "AffineMatrix", "is", "None", ":", "\n", "            ", "AffineMatrix", "=", "self", ".", "get_random_affinematrix", "(", ")", "\n", "if", "independent", ":", "\n", "                ", "AffineMatrix", "=", "torch", ".", "stack", "(", "[", "self", ".", "get_random_affinematrix", "(", ")", "for", "_", "in", "range", "(", "bn", ")", "]", ",", "dim", "=", "0", ")", "\n", "", "else", ":", "\n", "                ", "AffineMatrix", "=", "torch", ".", "stack", "(", "[", "AffineMatrix", "]", "*", "bn", ",", "dim", "=", "0", ")", "\n", "", "", "else", ":", "\n", "            ", "assert", "AffineMatrix", ".", "shape", "[", "0", "]", "==", "bn", "\n", "\n", "", "if", "inverse", ":", "\n", "            ", "AffineMatrix", "=", "inverse_transform_matrix", "(", "AffineMatrix", ")", "\n", "", "img_tf", "=", "self", ".", "_perform_affine_transform", "(", "img", ",", "AffineMatrix", ")", "\n", "img_tf", "=", "img_tf", ".", "view", "(", "*", "_img_shape", ")", "\n", "return", "img_tf", ",", "AffineMatrix", "\n", "", "", ""]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.augment.tensor_affine_transform.inverse_transform_matrix": [[9, 31], ["torch.stack", "torch.cat", "InverseAffineMatrix.append", "torch.inverse", "tensor_affine_transform.inverse_transform_matrix._inverse_transform_matrix"], "function", ["None"], ["def", "inverse_transform_matrix", "(", "AffineMatrix", ":", "torch", ")", ":", "\n", "    ", "def", "_inverse_transform_matrix", "(", "AffineMatrix", ":", "torch", ")", ":", "\n", "        ", "k", ",", "l", "=", "AffineMatrix", ".", "shape", "\n", "assert", "k", "==", "2", ",", "l", "==", "3", "\n", "fullMatrix", "=", "torch", ".", "cat", "(", "\n", "[", "\n", "AffineMatrix", ",", "\n", "torch", ".", "from_numpy", "(", "\n", "np", ".", "array", "(", "[", "0", ",", "0", ",", "1", "]", ")", ".", "reshape", "(", "1", ",", "3", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", ")", ".", "to", "(", "AffineMatrix", ".", "device", ")", ",", "\n", "]", ",", "\n", "dim", "=", "0", ",", "\n", ")", "\n", "InverseMatrix", "=", "torch", ".", "inverse", "(", "fullMatrix", ")", "[", ":", "2", ",", ":", "]", "\n", "return", "InverseMatrix", "\n", "\n", "", "bn", ",", "k", ",", "l", "=", "AffineMatrix", ".", "shape", "\n", "assert", "k", "==", "2", ",", "l", "==", "3", "\n", "InverseAffineMatrix", "=", "[", "]", "\n", "for", "matrix", "in", "AffineMatrix", ":", "\n", "        ", "InverseAffineMatrix", ".", "append", "(", "_inverse_transform_matrix", "(", "matrix", ")", ")", "\n", "", "return", "torch", ".", "stack", "(", "InverseAffineMatrix", ",", "dim", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.augment.sequential_wrapper.SequentialWrapper.__init__": [[13, 27], ["deepclustering2.augment.pil_augment.ToTensor", "deepclustering2.augment.pil_augment.ToLabel"], "methods", ["None"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "comm_transform", ":", "Callable", "[", "[", "Image", ".", "Image", "]", ",", "Image", ".", "Image", "]", "=", "None", ",", "\n", "img_transform", ":", "Callable", "[", "[", "Image", ".", "Image", "]", ",", "Tensor", "]", "=", "pil_augment", ".", "ToTensor", "(", ")", ",", "\n", "target_transform", ":", "Callable", "[", "[", "Image", ".", "Image", "]", ",", "Tensor", "]", "=", "pil_augment", ".", "ToLabel", "(", ")", "\n", ")", "->", "None", ":", "\n", "        ", "\"\"\"\n        :param comm_transform: common geo-transformation\n        :param img_transform: transformation only applied for images\n        :param target_transform: transformation only applied for targets\n        \"\"\"", "\n", "self", ".", "_comm_transform", "=", "comm_transform", "\n", "self", ".", "_img_transform", "=", "img_transform", "\n", "self", ".", "_target_transform", "=", "target_transform", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.augment.sequential_wrapper.SequentialWrapper.__call__": [[28, 64], ["int", "int", "int", "int", "int", "int", "random.randint", "random.randint", "deepclustering2.decorator.FixRandomSeed", "sequential_wrapper.SequentialWrapper._img_transform", "imgs_after_img_transform.append", "random.randint", "int", "deepclustering2.decorator.FixRandomSeed", "sequential_wrapper.SequentialWrapper._comm_transform", "imgs_after_comm.append", "int", "int", "deepclustering2.decorator.FixRandomSeed", "sequential_wrapper.SequentialWrapper._target_transform", "targets_after_target_transform.append", "deepclustering2.decorator.FixRandomSeed", "sequential_wrapper.SequentialWrapper._comm_transform", "targets_after_comm.append"], "methods", ["None"], ["", "def", "__call__", "(", "self", ",", "imgs", ":", "List", "[", "Image", ".", "Image", "]", ",", "targets", ":", "List", "[", "Image", ".", "Image", "]", "=", "None", ",", "comm_seed", "=", "None", ",", "img_seed", "=", "None", ",", "\n", "target_seed", "=", "None", ")", ":", "\n", "        ", "_comm_seed", ":", "int", "=", "int", "(", "random", ".", "randint", "(", "0", ",", "int", "(", "1e5", ")", ")", ")", "if", "comm_seed", "is", "None", "else", "int", "(", "comm_seed", ")", "# type ignore", "\n", "imgs_after_comm", ",", "targets_after_comm", "=", "imgs", ",", "targets", "\n", "if", "self", ".", "_comm_transform", ":", "\n", "            ", "imgs_after_comm", ",", "targets_after_comm", "=", "[", "]", ",", "[", "]", "\n", "for", "img", "in", "imgs", ":", "\n", "                ", "with", "FixRandomSeed", "(", "_comm_seed", ")", ":", "\n", "                    ", "img_", "=", "self", ".", "_comm_transform", "(", "img", ")", "\n", "imgs_after_comm", ".", "append", "(", "img_", ")", "\n", "", "", "if", "targets", ":", "\n", "                ", "for", "target", "in", "targets", ":", "\n", "                    ", "with", "FixRandomSeed", "(", "_comm_seed", ")", ":", "\n", "                        ", "target_", "=", "self", ".", "_comm_transform", "(", "target", ")", "\n", "targets_after_comm", ".", "append", "(", "target_", ")", "\n", "", "", "", "", "imgs_after_img_transform", "=", "[", "]", "\n", "targets_after_target_transform", "=", "[", "]", "\n", "_img_seed", ":", "int", "=", "int", "(", "random", ".", "randint", "(", "0", ",", "int", "(", "1e5", ")", ")", ")", "if", "img_seed", "is", "None", "else", "int", "(", "img_seed", ")", "# type ignore", "\n", "for", "img", "in", "imgs_after_comm", ":", "\n", "            ", "with", "FixRandomSeed", "(", "_img_seed", ")", ":", "\n", "                ", "img_", "=", "self", ".", "_img_transform", "(", "img", ")", "\n", "imgs_after_img_transform", ".", "append", "(", "img_", ")", "\n", "\n", "", "", "_target_seed", ":", "int", "=", "int", "(", "random", ".", "randint", "(", "0", ",", "int", "(", "1e5", ")", ")", ")", "if", "target_seed", "is", "None", "else", "int", "(", "target_seed", ")", "# type ignore", "\n", "if", "targets_after_comm", ":", "\n", "            ", "for", "target", "in", "targets_after_comm", ":", "\n", "                ", "with", "FixRandomSeed", "(", "_target_seed", ")", ":", "\n", "                    ", "target_", "=", "self", ".", "_target_transform", "(", "target", ")", "\n", "targets_after_target_transform", ".", "append", "(", "target_", ")", "\n", "\n", "", "", "", "if", "targets", "is", "None", ":", "\n", "            ", "targets_after_target_transform", "=", "None", "\n", "\n", "", "if", "targets_after_target_transform", "is", "None", ":", "\n", "            ", "return", "imgs_after_img_transform", "\n", "", "return", "[", "*", "imgs_after_img_transform", ",", "*", "targets_after_target_transform", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.augment.sequential_wrapper.SequentialWrapper.__repr__": [[65, 68], ["None"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "        ", "return", "(", "\n", "f\"comm_transform:{self._comm_transform}\\n\"", "\n", "f\"img_transform:{self._img_transform}.\\n\"", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.augment.sequential_wrapper.SequentialWrapperTwice.__init__": [[75, 85], ["deepclustering2.augment.pil_augment.ToTensor", "deepclustering2.augment.pil_augment.ToLabel", "sequential_wrapper.SequentialWrapper.__init__"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["    ", "def", "__init__", "(", "self", ",", "comm_transform", ":", "Callable", "[", "[", "Image", ".", "Image", "]", ",", "Image", ".", "Image", "]", "=", "None", ",", "\n", "img_transform", ":", "Callable", "[", "[", "Image", ".", "Image", "]", ",", "Tensor", "]", "=", "pil_augment", ".", "ToTensor", "(", ")", ",", "\n", "target_transform", ":", "Callable", "[", "[", "Image", ".", "Image", "]", ",", "Tensor", "]", "=", "pil_augment", ".", "ToLabel", "(", ")", ",", "\n", "total_freedom", "=", "True", ")", "->", "None", ":", "\n", "        ", "\"\"\"\n        :param total_freedom: if True, the two-time generated images are using different seeds for all aspect,\n                              otherwise, the images are used different random seed only for img_seed\n        \"\"\"", "\n", "super", "(", ")", ".", "__init__", "(", "comm_transform", ",", "img_transform", ",", "target_transform", ")", "\n", "self", ".", "_total_freedom", "=", "total_freedom", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.augment.sequential_wrapper.SequentialWrapperTwice.__call__": [[86, 100], ["int", "int", "deepclustering2.decorator.FixRandomSeed", "random.randint", "int", "int", "int", "int", "int", "int", "sequential_wrapper.SequentialWrapper.__call__", "sequential_wrapper.SequentialWrapper.__call__", "int", "random.randint", "random.randint", "random.randint", "random.randint", "random.randint", "random.randint", "sequential_wrapper.SequentialWrapper.__call__", "sequential_wrapper.SequentialWrapper.__call__", "int", "int", "int", "int", "int", "int"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.augment.sequential_wrapper.SequentialWrapperTwice.__call__", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.augment.sequential_wrapper.SequentialWrapperTwice.__call__", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.augment.sequential_wrapper.SequentialWrapperTwice.__call__", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.augment.sequential_wrapper.SequentialWrapperTwice.__call__"], ["", "def", "__call__", "(", "self", ",", "imgs", ":", "List", "[", "Image", ".", "Image", "]", ",", "targets", ":", "List", "[", "Image", ".", "Image", "]", "=", "None", ",", "global_seed", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "        ", "global_seed", "=", "int", "(", "random", ".", "randint", "(", "0", ",", "int", "(", "1e5", ")", ")", ")", "if", "global_seed", "is", "None", "else", "int", "(", "global_seed", ")", "# type ignore", "\n", "with", "FixRandomSeed", "(", "global_seed", ")", ":", "\n", "            ", "comm_seed1", ",", "comm_seed2", "=", "int", "(", "random", ".", "randint", "(", "0", ",", "int", "(", "1e5", ")", ")", ")", ",", "int", "(", "random", ".", "randint", "(", "0", ",", "int", "(", "1e5", ")", ")", ")", "\n", "img_seed1", ",", "img_seed2", "=", "int", "(", "random", ".", "randint", "(", "0", ",", "int", "(", "1e5", ")", ")", ")", ",", "int", "(", "random", ".", "randint", "(", "0", ",", "int", "(", "1e5", ")", ")", ")", "\n", "target_seed1", ",", "target_seed2", "=", "int", "(", "random", ".", "randint", "(", "0", ",", "int", "(", "1e5", ")", ")", ")", ",", "int", "(", "random", ".", "randint", "(", "0", ",", "int", "(", "1e5", ")", ")", ")", "\n", "if", "self", ".", "_total_freedom", ":", "\n", "                ", "return", "[", "\n", "super", "(", ")", ".", "__call__", "(", "imgs", ",", "targets", ",", "comm_seed1", ",", "img_seed1", ",", "target_seed1", ")", ",", "\n", "super", "(", ")", ".", "__call__", "(", "imgs", ",", "targets", ",", "comm_seed2", ",", "img_seed2", ",", "target_seed2", ")", ",", "\n", "]", "\n", "", "return", "[", "\n", "super", "(", ")", ".", "__call__", "(", "imgs", ",", "targets", ",", "comm_seed1", ",", "img_seed1", ",", "target_seed1", ")", ",", "\n", "super", "(", ")", ".", "__call__", "(", "imgs", ",", "targets", ",", "comm_seed1", ",", "img_seed2", ",", "target_seed1", ")", ",", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.IIDLoss.forward": [[14, 16], ["super().forward"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.IIDLoss.forward"], ["mapping", "=", "{", "}", "\n", "for", "i", ",", "u", "in", "enumerate", "(", "unique_map", ")", ":", "\n", "        ", "mapping", "[", "u", "]", "=", "i", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.FeatureExtractor.__init__": [[43, 51], ["torch.nn.Module.__init__", "isinstance", "contrastyou.arch.UNet"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["result_flag", "=", "[", "]", "\n", "for", "h", "in", "h_index", ":", "\n", "        ", "for", "w", "in", "w_index", ":", "\n", "            ", "result", ".", "append", "(", "features", "[", ":", ",", ":", ",", "h", ":", "h", "+", "block_h", ",", "w", ":", "w", "+", "block_w", "]", ")", "\n", "for", "_", "in", "range", "(", "b", ")", ":", "\n", "                ", "result_flag", ".", "append", "(", "(", "int", "(", "h", ")", ",", "int", "(", "w", ")", ")", ")", "\n", "", "", "", "return", "torch", ".", "cat", "(", "result", ",", "dim", "=", "0", ")", ",", "result_flag", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.FeatureExtractor.__enter__": [[52, 61], ["_utils.FeatureExtractor._FeatureExtractor", "getattr().register_forward_hook", "getattr"], "methods", ["None"], ["", "class", "GlobalLabelGenerator", ":", "\n", "\n", "    ", "def", "__init__", "(", "self", ",", "contrastive_on_patient", "=", "False", ",", "contrastive_on_partition", "=", "True", ")", "->", "None", ":", "\n", "        ", "self", ".", "_contrastive_on_patient", "=", "contrastive_on_patient", "\n", "self", ".", "_contrastive_on_partition", "=", "contrastive_on_partition", "\n", "\n", "", "def", "__call__", "(", "self", ",", "partition_list", ":", "List", "[", "str", "]", ",", "patient_list", ":", "List", "[", "str", "]", ")", "->", "List", "[", "int", "]", ":", "\n", "        ", "assert", "len", "(", "partition_list", ")", "==", "len", "(", "patient_list", ")", ",", "(", "len", "(", "partition_list", ")", ",", "len", "(", "patient_list", ")", ")", "\n", "batch_size", "=", "len", "(", "partition_list", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.FeatureExtractor.__exit__": [[62, 66], ["_utils.FeatureExtractor._hook_handlers.items", "v.remove"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.IICLossWrapper.items"], ["final_string", "=", "[", "\"\"", "]", "*", "batch_size", "\n", "if", "self", ".", "_contrastive_on_patient", ":", "\n", "            ", "final_string", "=", "_string_list_adding", "(", "final_string", ",", "patient_list", ")", "\n", "\n", "", "if", "self", ".", "_contrastive_on_partition", ":", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.FeatureExtractor.__getitem__": [[67, 71], ["torch.nn.Module.__getitem__"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.IICLossWrapper.__getitem__"], ["            ", "final_string", "=", "_string_list_adding", "(", "final_string", ",", "partition_list", ")", "\n", "\n", "", "return", "unique_mapping", "(", "final_string", ")", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.FeatureExtractor.get_feature_from_num": [[72, 75], ["None"], "methods", ["None"], ["", "", "class", "LocalLabelGenerator", "(", "GlobalLabelGenerator", ")", ":", "\n", "\n", "    ", "def", "__init__", "(", "self", ",", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "True", ",", "True", ")", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.FeatureExtractor.__iter__": [[76, 79], ["_utils.FeatureExtractor._feature_exactors.items"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.IICLossWrapper.items"], ["\n", "", "def", "__call__", "(", "self", ",", "partition_list", ":", "List", "[", "str", "]", ",", "patient_list", ":", "List", "[", "str", "]", ",", "location_list", ":", "List", "[", "str", "]", ")", "->", "List", "[", "int", "]", ":", "\n", "        ", "partition_list", "=", "[", "str", "(", "x", ")", "for", "x", "in", "partition_list", "]", "\n", "patient_list", "=", "[", "str", "(", "x", ")", "for", "x", "in", "patient_list", "]", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.LocalClusterWrappaer.__init__": [[82, 112], ["torch.nn.Module.__init__", "isinstance", "_utils._nlist", "_nlist.", "_nlist.", "_nlist.", "_nlist.", "torch.nn.ModuleDict", "zip", "len", "_utils.LocalClusterWrappaer._create_clusterheads"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils._nlist", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.EncoderClusterWrapper._create_clusterheads"], ["partition_list", "=", "partition_list", "*", "mul_factor", "\n", "patient_list", "=", "patient_list", "*", "mul_factor", "\n", "assert", "len", "(", "location_list", ")", "==", "len", "(", "partition_list", ")", "\n", "\n", "return", "super", "(", ")", ".", "__call__", "(", "_string_list_adding", "(", "patient_list", ",", "partition_list", ")", ",", "location_list", ")", "\n", "\n", "\n", "", "", "def", "_write_single_png", "(", "mask", ":", "Tensor", ",", "save_dir", ":", "str", ",", "filename", ":", "str", ")", ":", "\n", "    ", "assert", "mask", ".", "shape", ".", "__len__", "(", ")", "==", "2", ",", "mask", ".", "shape", "\n", "mask", "=", "mask", ".", "cpu", "(", ")", ".", "detach", "(", ")", ".", "numpy", "(", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "save_dir", ")", ":", "\n", "        ", "os", ".", "mkdir", "(", "save_dir", ")", "\n", "", "with", "warnings", ".", "catch_warnings", "(", "record", "=", "True", ")", "as", "w", ":", "\n", "        ", "warnings", ".", "simplefilter", "(", "\"always\"", ")", "\n", "imsave", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "(", "filename", "+", "\".png\"", ")", ")", ",", "mask", ".", "astype", "(", "np", ".", "uint8", ")", ")", "\n", "\n", "\n", "", "", "def", "write_predict", "(", "predict_logit", ":", "Tensor", ",", "save_dir", ":", "str", ",", "filenames", ":", "Union", "[", "str", ",", "List", "[", "str", "]", "]", ")", ":", "\n", "    ", "assert", "len", "(", "predict_logit", ".", "shape", ")", "==", "4", ",", "predict_logit", ".", "shape", "\n", "if", "isinstance", "(", "filenames", ",", "str", ")", ":", "\n", "        ", "filenames", "=", "[", "filenames", ",", "]", "\n", "", "assert", "len", "(", "filenames", ")", "==", "len", "(", "predict_logit", ")", "\n", "predict_mask", "=", "predict_logit", ".", "max", "(", "1", ")", "[", "1", "]", "\n", "for", "m", ",", "f", "in", "zip", "(", "predict_mask", ",", "filenames", ")", ":", "\n", "        ", "_write_single_png", "(", "m", ",", "os", ".", "path", ".", "join", "(", "save_dir", ",", "\"pred\"", ")", ",", "f", ")", "\n", "\n", "\n", "", "", "def", "write_img_target", "(", "image", ":", "Tensor", ",", "target", ":", "Tensor", ",", "save_dir", ":", "str", ",", "filenames", ":", "Union", "[", "str", ",", "List", "[", "str", "]", "]", ")", ":", "\n", "    ", "if", "isinstance", "(", "filenames", ",", "str", ")", ":", "\n", "        ", "filenames", "=", "[", "filenames", ",", "]", "\n", "", "image", "=", "image", ".", "squeeze", "(", ")", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.LocalClusterWrappaer.__len__": [[114, 116], ["len"], "methods", ["None"], ["assert", "image", ".", "shape", "==", "target", ".", "shape", "\n", "for", "img", ",", "f", "in", "zip", "(", "image", ",", "filenames", ")", ":", "\n", "        ", "_write_single_png", "(", "img", "*", "255", ",", "os", ".", "path", ".", "join", "(", "save_dir", ",", "\"img\"", ")", ",", "f", ")", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.LocalClusterWrappaer.__iter__": [[117, 120], ["_utils.LocalClusterWrappaer._clusters.items"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.IICLossWrapper.items"], ["", "for", "targ", ",", "f", "in", "zip", "(", "target", ",", "filenames", ")", ":", "\n", "        ", "_write_single_png", "(", "targ", ",", "os", ".", "path", ".", "join", "(", "save_dir", ",", "\"gt\"", ")", ",", "f", ")", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.LocalClusterWrappaer.__getitem__": [[121, 125], ["torch.nn.Module.__getitem__", "_utils.LocalClusterWrappaer._clusters.keys"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.IICLossWrapper.__getitem__"], ["", "", "if", "__name__", "==", "'__main__'", ":", "\n", "    ", "features", "=", "torch", ".", "randn", "(", "10", ",", "3", ",", "256", ",", "256", ",", "requires_grad", "=", "True", ")", "\n", "\n", "a", "=", "unfold_position", "(", "features", ",", "partition_num", "=", "(", "3", ",", "3", ")", ")", "\n", "print", "(", ")", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.LocalClusterWrappaer._create_clusterheads": [[126, 129], ["contrastyou.trainer._utils.LocalClusterHead"], "methods", ["None"], ["", ""]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.EncoderClusterWrapper._create_clusterheads": [[132, 135], ["contrastyou.trainer._utils.ClusterHead"], "methods", ["None"], []], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.ProjectorWrapper.init_encoder": [[141, 154], ["_utils._filter_encodernames", "_utils.EncoderClusterWrapper"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils._filter_encodernames"], []], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.ProjectorWrapper.init_decoder": [[155, 167], ["_utils._filter_decodernames", "_utils.LocalClusterWrappaer"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils._filter_decodernames"], []], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.ProjectorWrapper.feature_names": [[168, 171], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.ProjectorWrapper.__getitem__": [[172, 178], ["IndexError"], "methods", ["None"], []], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.ProjectorWrapper.__iter__": [[179, 187], ["RuntimeError"], "methods", ["None"], []], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.IICLossWrapper.__init__": [[191, 209], ["torch.nn.Module.__init__", "_utils._filter_encodernames", "_utils._filter_decodernames", "torch.nn.ModuleDict", "len", "len", "len", "zip", "len", "len", "_utils.IIDLoss", "_utils._nlist", "_utils._nlist", "contrastyou.losses.iic_loss.IIDSegmentationSmallPathLoss", "len", "len"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils._filter_encodernames", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils._filter_decodernames", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils._nlist", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils._nlist"], []], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.IICLossWrapper.__getitem__": [[210, 214], ["IndexError", "_utils.IICLossWrapper._LossModuleDict.keys"], "methods", ["None"], []], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.IICLossWrapper.__iter__": [[215, 218], ["_utils.IICLossWrapper._LossModuleDict.items"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.IICLossWrapper.items"], []], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.IICLossWrapper.items": [[219, 221], ["_utils.IICLossWrapper._LossModuleDict.items"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.IICLossWrapper.items"], []], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.IICLossWrapper.feature_names": [[222, 225], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils._filter_encodernames": [[18, 21], ["list", "contrastyou.arch.UNet", "filter"], "function", ["None"], ["\n", "\n", "", "def", "_string_list_adding", "(", "list1", ",", "list2", ")", ":", "\n", "    ", "assert", "len", "(", "list1", ")", "==", "len", "(", "list2", ")", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils._filter_decodernames": [[23, 26], ["list", "contrastyou.arch.UNet", "filter"], "function", ["None"], ["\n", "\n", "", "def", "preprocess_input_with_twice_transformation", "(", "data", ",", "device", ",", "non_blocking", "=", "True", ")", ":", "\n", "    ", "[", "(", "image", ",", "target", ")", ",", "(", "image_tf", ",", "target_tf", ")", "]", ",", "filename", ",", "partition_list", ",", "group_list", "="]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils._nlist": [[28, 36], ["list", "isinstance", "itertools.repeat", "isinstance", "len", "len"], "function", ["None"], ["return", "(", "image", ",", "target", ")", ",", "(", "image_tf", ",", "target_tf", ")", ",", "filename", ",", "partition_list", ",", "group_list", "\n", "\n", "\n", "", "def", "preprocess_input_with_single_transformation", "(", "data", ",", "device", ",", "non_blocking", "=", "True", ")", ":", "\n", "    ", "return", "data", "[", "0", "]", "[", "0", "]", ".", "to", "(", "device", ",", "non_blocking", "=", "non_blocking", ")", ",", "data", "[", "0", "]", "[", "1", "]", ".", "to", "(", "device", ",", "non_blocking", "=", "non_blocking", ")", ",", "data", "[", "1", "]", ",", "data", "[", "2", "]", ",", "data", "[", "3", "]", "\n", "\n", "\n", "", "def", "unfold_position", "(", "features", ":", "torch", ".", "Tensor", ",", "partition_num", "=", "(", "4", ",", "4", ")", ",", ")", ":", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.trainer.SemiTrainer.__init__": [[29, 38], ["deepclustering2.trainer.Trainer.__init__"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["def", "__init__", "(", "self", ",", "*", ",", "model", ":", "nn", ".", "Module", ",", "labeled_loader", ":", "T_loader", ",", "unlabeled_loader", ":", "T_loader", ",", "\n", "val_loader", ":", "T_loader", ",", "test_loader", ":", "T_loader", ",", "sup_criterion", ":", "T_loss", ",", "save_dir", ":", "str", "=", "\"base\"", ",", "\n", "max_epoch", ":", "int", "=", "100", ",", "num_batches", ":", "int", "=", "100", ",", "device", ":", "str", "=", "\"cpu\"", ",", "configuration", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "model", ",", "save_dir", ",", "max_epoch", ",", "num_batches", ",", "device", ",", "configuration", ")", "\n", "self", ".", "_labeled_loader", "=", "labeled_loader", "\n", "self", ".", "_unlabeled_loader", "=", "unlabeled_loader", "\n", "self", ".", "_val_loader", "=", "val_loader", "\n", "self", ".", "_test_loader", "=", "test_loader", "\n", "self", ".", "_sup_criterion", "=", "sup_criterion", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.trainer.SemiTrainer.init": [[39, 43], ["trainer.SemiTrainer._init", "trainer.SemiTrainer._init_optimizer", "trainer.SemiTrainer._init_scheduler"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.trainer.UDAIICTrainer._init", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.trainer.IICTrainer._init_optimizer", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.trainer.SemiTrainer._init_scheduler"], ["", "def", "init", "(", "self", ")", ":", "\n", "        ", "self", ".", "_init", "(", ")", "\n", "self", ".", "_init_optimizer", "(", ")", "\n", "self", ".", "_init_scheduler", "(", "self", ".", "_optimizer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.trainer.SemiTrainer._init": [[44, 51], ["trainer.SemiTrainer.set_feature_positions", "isinstance", "type", "float", "len", "len", "sum"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.trainer.SemiTrainer.set_feature_positions"], ["", "def", "_init", "(", "self", ")", ":", "\n", "        ", "self", ".", "set_feature_positions", "(", "self", ".", "_config", "[", "\"Trainer\"", "]", "[", "\"feature_names\"", "]", ")", "\n", "feature_importance", "=", "self", ".", "_config", "[", "\"Trainer\"", "]", "[", "\"feature_importance\"", "]", "\n", "assert", "isinstance", "(", "feature_importance", ",", "list", ")", ",", "type", "(", "feature_importance", ")", "\n", "feature_importance", "=", "[", "float", "(", "x", ")", "for", "x", "in", "feature_importance", "]", "\n", "self", ".", "_feature_importance", "=", "[", "x", "/", "sum", "(", "feature_importance", ")", "for", "x", "in", "feature_importance", "]", "\n", "assert", "len", "(", "self", ".", "_feature_importance", ")", "==", "len", "(", "self", ".", "feature_positions", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.trainer.SemiTrainer._init_scheduler": [[52, 66], ["trainer.SemiTrainer._config.get", "torch.optim.lr_scheduler.CosineAnnealingLR", "deepclustering2.schedulers.GradualWarmupScheduler"], "methods", ["None"], ["", "def", "_init_scheduler", "(", "self", ",", "optimizer", ")", ":", "\n", "        ", "scheduler_dict", "=", "self", ".", "_config", ".", "get", "(", "\"Scheduler\"", ",", "None", ")", "\n", "if", "scheduler_dict", "is", "None", ":", "\n", "            ", "return", "\n", "", "else", ":", "\n", "            ", "scheduler", "=", "torch", ".", "optim", ".", "lr_scheduler", ".", "CosineAnnealingLR", "(", "\n", "self", ".", "_optimizer", ",", "\n", "T_max", "=", "self", ".", "_config", "[", "\"Trainer\"", "]", "[", "\"max_epoch\"", "]", "-", "self", ".", "_config", "[", "\"Scheduler\"", "]", "[", "\"warmup_max\"", "]", ",", "\n", "eta_min", "=", "1e-7", "\n", ")", "\n", "scheduler", "=", "GradualWarmupScheduler", "(", "optimizer", ",", "scheduler_dict", "[", "\"multiplier\"", "]", ",", "\n", "total_epoch", "=", "scheduler_dict", "[", "\"warmup_max\"", "]", ",", "\n", "after_scheduler", "=", "scheduler", ")", "\n", "self", ".", "_scheduler", "=", "scheduler", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.trainer.SemiTrainer._init_optimizer": [[67, 72], ["trainer.SemiTrainer._model.parameters", "optim_dict.items"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.IICLossWrapper.items"], ["", "", "def", "_init_optimizer", "(", "self", ")", ":", "\n", "        ", "optim_dict", "=", "self", ".", "_config", "[", "\"Optim\"", "]", "\n", "self", ".", "_optimizer", "=", "optim", ".", "__dict__", "[", "optim_dict", "[", "\"name\"", "]", "]", "(", "\n", "params", "=", "self", ".", "_model", ".", "parameters", "(", ")", ",", "\n", "**", "{", "k", ":", "v", "for", "k", ",", "v", "in", "optim_dict", ".", "items", "(", ")", "if", "k", "!=", "\"name\"", "}", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.trainer.SemiTrainer._run_epoch": [[74, 82], ["semi_seg.epocher.TrainEpocher", "semi_seg.epocher.TrainEpocher.run"], "methods", ["None"], ["", "def", "_run_epoch", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", "->", "EpochResultDict", ":", "\n", "        ", "trainer", "=", "TrainEpocher", "(", "\n", "self", ".", "_model", ",", "self", ".", "_optimizer", ",", "self", ".", "_labeled_loader", ",", "self", ".", "_unlabeled_loader", ",", "\n", "self", ".", "_sup_criterion", ",", "0", ",", "self", ".", "_num_batches", ",", "self", ".", "_cur_epoch", ",", "self", ".", "_device", ",", "\n", "feature_position", "=", "self", ".", "feature_positions", ",", "feature_importance", "=", "self", ".", "_feature_importance", "\n", ")", "\n", "result", "=", "trainer", ".", "run", "(", ")", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.trainer.SemiTrainer._eval_epoch": [[83, 88], ["semi_seg.epocher.EvalEpocher", "semi_seg.epocher.EvalEpocher.run"], "methods", ["None"], ["", "def", "_eval_epoch", "(", "self", ",", "*", ",", "loader", ":", "T_loader", ",", "**", "kwargs", ")", "->", "Tuple", "[", "EpochResultDict", ",", "float", "]", ":", "\n", "        ", "evaler", "=", "EvalEpocher", "(", "self", ".", "_model", ",", "val_loader", "=", "loader", ",", "sup_criterion", "=", "self", ".", "_sup_criterion", ",", "\n", "cur_epoch", "=", "self", ".", "_cur_epoch", ",", "device", "=", "self", ".", "_device", ")", "\n", "result", ",", "cur_score", "=", "evaler", ".", "run", "(", ")", "\n", "return", "result", ",", "cur_score", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.trainer.SemiTrainer._start_training": [[89, 108], ["range", "trainer.SemiTrainer.run_epoch", "hasattr", "deepclustering2.meters2.StorageIncomeDict", "trainer.SemiTrainer._storage.put_from_dict", "trainer.SemiTrainer._writer.add_scalar_with_StorageDict", "trainer.SemiTrainer.save", "trainer.SemiTrainer._storage.to_csv", "torch.no_grad", "trainer.SemiTrainer.eval_epoch", "trainer.SemiTrainer.eval_epoch", "trainer.SemiTrainer._scheduler.step"], "methods", ["None"], ["", "def", "_start_training", "(", "self", ")", ":", "\n", "        ", "for", "self", ".", "_cur_epoch", "in", "range", "(", "self", ".", "_start_epoch", ",", "self", ".", "_max_epoch", ")", ":", "\n", "            ", "train_result", ":", "EpochResultDict", "\n", "eval_result", ":", "EpochResultDict", "\n", "cur_score", ":", "float", "\n", "train_result", "=", "self", ".", "run_epoch", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                ", "eval_result", ",", "cur_score", "=", "self", ".", "eval_epoch", "(", "loader", "=", "self", ".", "_val_loader", ")", "\n", "test_result", ",", "_", "=", "self", ".", "eval_epoch", "(", "loader", "=", "self", ".", "_test_loader", ")", "\n", "# update lr_scheduler", "\n", "", "if", "hasattr", "(", "self", ",", "\"_scheduler\"", ")", ":", "\n", "                ", "self", ".", "_scheduler", ".", "step", "(", ")", "\n", "", "storage_per_epoch", "=", "StorageIncomeDict", "(", "tra", "=", "train_result", ",", "val", "=", "eval_result", ",", "test", "=", "test_result", ")", "\n", "self", ".", "_storage", ".", "put_from_dict", "(", "storage_per_epoch", ",", "self", ".", "_cur_epoch", ")", "\n", "self", ".", "_writer", ".", "add_scalar_with_StorageDict", "(", "storage_per_epoch", ",", "self", ".", "_cur_epoch", ")", "\n", "# save_checkpoint", "\n", "self", ".", "save", "(", "cur_score", ")", "\n", "# save storage result on csv file.", "\n", "self", ".", "_storage", ".", "to_csv", "(", "self", ".", "_save_dir", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.trainer.SemiTrainer.inference": [[109, 126], ["semi_seg.epocher.InferenceEpocher", "semi_seg.epocher.InferenceEpocher.set_save_dir", "semi_seg.epocher.InferenceEpocher.run", "trainer.SemiTrainer.load_state_dict_from_path", "pathlib.Path", "pathlib.Path.is_file", "trainer.SemiTrainer.load_state_dict_from_path", "os.path.join", "pathlib.Path.exists", "str", "FileNotFoundError"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.InferenceEpocher.set_save_dir"], ["", "", "def", "inference", "(", "self", ",", "checkpoint", "=", "None", ")", ":", "# noqa", "\n", "        ", "if", "checkpoint", "is", "None", ":", "\n", "            ", "self", ".", "load_state_dict_from_path", "(", "os", ".", "path", ".", "join", "(", "self", ".", "_save_dir", ",", "\"best.pth\"", ")", ",", "strict", "=", "True", ")", "\n", "", "else", ":", "\n", "            ", "checkpoint", "=", "Path", "(", "checkpoint", ")", "\n", "if", "checkpoint", ".", "is_file", "(", ")", ":", "\n", "                ", "if", "not", "checkpoint", ".", "suffix", "==", "\".pth\"", ":", "\n", "                    ", "raise", "FileNotFoundError", "(", "checkpoint", ")", "\n", "", "", "else", ":", "\n", "                ", "assert", "checkpoint", ".", "exists", "(", ")", "\n", "checkpoint", "=", "checkpoint", "/", "\"best.pth\"", "\n", "", "self", ".", "load_state_dict_from_path", "(", "str", "(", "checkpoint", ")", ",", "strict", "=", "True", ")", "\n", "", "evaler", "=", "InferenceEpocher", "(", "self", ".", "_model", ",", "val_loader", "=", "self", ".", "_test_loader", ",", "sup_criterion", "=", "self", ".", "_sup_criterion", ",", "\n", "cur_epoch", "=", "self", ".", "_cur_epoch", ",", "device", "=", "self", ".", "_device", ")", "\n", "evaler", ".", "set_save_dir", "(", "self", ".", "_save_dir", ")", "\n", "result", ",", "cur_score", "=", "evaler", ".", "run", "(", ")", "\n", "return", "result", ",", "cur_score", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.trainer.SemiTrainer.set_feature_positions": [[127, 130], ["None"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "set_feature_positions", "(", "cls", ",", "feature_positions", ")", ":", "\n", "        ", "cls", ".", "feature_positions", "=", "feature_positions", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.trainer.UDATrainer._init": [[134, 139], ["trainer.SemiTrainer._init", "copy.deepcopy", "float", "torch.nn.MSELoss", "deepclustering2.loss.KL_div"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.trainer.UDAIICTrainer._init"], ["    ", "def", "_init", "(", "self", ")", ":", "\n", "        ", "super", "(", "UDATrainer", ",", "self", ")", ".", "_init", "(", ")", "\n", "config", "=", "deepcopy", "(", "self", ".", "_config", "[", "\"UDARegCriterion\"", "]", ")", "\n", "self", ".", "_reg_criterion", "=", "{", "\"mse\"", ":", "nn", ".", "MSELoss", "(", ")", ",", "\"kl\"", ":", "KL_div", "(", ")", "}", "[", "config", "[", "\"name\"", "]", "]", "\n", "self", ".", "_reg_weight", "=", "float", "(", "config", "[", "\"weight\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.trainer.UDATrainer._run_epoch": [[140, 147], ["semi_seg.epocher.UDATrainEpocher", "semi_seg.epocher.UDATrainEpocher.run"], "methods", ["None"], ["", "def", "_run_epoch", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", "->", "EpochResultDict", ":", "\n", "        ", "trainer", "=", "UDATrainEpocher", "(", "self", ".", "_model", ",", "self", ".", "_optimizer", ",", "self", ".", "_labeled_loader", ",", "self", ".", "_unlabeled_loader", ",", "\n", "self", ".", "_sup_criterion", ",", "reg_weight", "=", "self", ".", "_reg_weight", ",", "num_batches", "=", "self", ".", "_num_batches", ",", "\n", "cur_epoch", "=", "self", ".", "_cur_epoch", ",", "device", "=", "self", ".", "_device", ",", "reg_criterion", "=", "self", ".", "_reg_criterion", ",", "\n", "feature_position", "=", "self", ".", "feature_positions", ",", "feature_importance", "=", "self", ".", "_feature_importance", ")", "\n", "result", "=", "trainer", ".", "run", "(", ")", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.trainer.IICTrainer._init": [[150, 167], ["trainer.SemiTrainer._init", "copy.deepcopy", "semi_seg._utils.ProjectorWrapper", "trainer.IICTrainer._projector_wrappers.init_encoder", "trainer.IICTrainer._projector_wrappers.init_decoder", "semi_seg._utils.IICLossWrapper", "float"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.trainer.UDAIICTrainer._init", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.ProjectorWrapper.init_encoder", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.ProjectorWrapper.init_decoder"], ["    ", "def", "_init", "(", "self", ")", ":", "\n", "        ", "super", "(", "IICTrainer", ",", "self", ")", ".", "_init", "(", ")", "\n", "config", "=", "deepcopy", "(", "self", ".", "_config", "[", "\"IICRegParameters\"", "]", ")", "\n", "self", ".", "_projector_wrappers", "=", "ProjectorWrapper", "(", ")", "\n", "self", ".", "_projector_wrappers", ".", "init_encoder", "(", "\n", "feature_names", "=", "self", ".", "feature_positions", ",", "\n", "**", "config", "[", "\"EncoderParams\"", "]", "\n", ")", "\n", "self", ".", "_projector_wrappers", ".", "init_decoder", "(", "\n", "feature_names", "=", "self", ".", "feature_positions", ",", "\n", "**", "config", "[", "\"DecoderParams\"", "]", "\n", ")", "\n", "self", ".", "_IIDSegWrapper", "=", "IICLossWrapper", "(", "\n", "feature_names", "=", "self", ".", "feature_positions", ",", "\n", "**", "config", "[", "\"LossParams\"", "]", "\n", ")", "\n", "self", ".", "_reg_weight", "=", "float", "(", "config", "[", "\"weight\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.trainer.IICTrainer._run_epoch": [[168, 178], ["semi_seg.epocher.IICTrainEpocher", "semi_seg.epocher.IICTrainEpocher.run"], "methods", ["None"], ["", "def", "_run_epoch", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", "->", "EpochResultDict", ":", "\n", "        ", "trainer", "=", "IICTrainEpocher", "(", "\n", "self", ".", "_model", ",", "self", ".", "_projector_wrappers", ",", "self", ".", "_optimizer", ",", "self", ".", "_labeled_loader", ",", "\n", "self", ".", "_unlabeled_loader", ",", "self", ".", "_sup_criterion", ",", "num_batches", "=", "self", ".", "_num_batches", ",", "\n", "cur_epoch", "=", "self", ".", "_cur_epoch", ",", "device", "=", "self", ".", "_device", ",", "reg_weight", "=", "self", ".", "_reg_weight", ",", "\n", "feature_position", "=", "self", ".", "feature_positions", ",", "feature_importance", "=", "self", ".", "_feature_importance", ",", "\n", "IIDSegCriterionWrapper", "=", "self", ".", "_IIDSegWrapper", "\n", ")", "\n", "result", "=", "trainer", ".", "run", "(", ")", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.trainer.IICTrainer._init_optimizer": [[179, 184], ["copy.deepcopy", "itertools.chain", "trainer.IICTrainer._model.parameters", "trainer.IICTrainer._projector_wrappers.parameters", "copy.deepcopy.items"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg._utils.IICLossWrapper.items"], ["", "def", "_init_optimizer", "(", "self", ")", ":", "\n", "        ", "config", "=", "deepcopy", "(", "self", ".", "_config", "[", "\"Optim\"", "]", ")", "\n", "self", ".", "_optimizer", "=", "optim", ".", "__dict__", "[", "config", "[", "\"name\"", "]", "]", "(", "\n", "params", "=", "chain", "(", "self", ".", "_model", ".", "parameters", "(", ")", ",", "self", ".", "_projector_wrappers", ".", "parameters", "(", ")", ")", ",", "\n", "**", "{", "k", ":", "v", "for", "k", ",", "v", "in", "config", ".", "items", "(", ")", "if", "k", "!=", "\"name\"", "}", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.trainer.UDAIICTrainer._init": [[189, 196], ["trainer.IICTrainer._init", "copy.deepcopy", "copy.deepcopy", "float", "torch.nn.MSELoss", "deepclustering2.loss.KL_div"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.trainer.UDAIICTrainer._init"], ["    ", "def", "_init", "(", "self", ")", ":", "\n", "        ", "super", "(", "UDAIICTrainer", ",", "self", ")", ".", "_init", "(", ")", "\n", "self", ".", "_iic_weight", "=", "deepcopy", "(", "self", ".", "_reg_weight", ")", "\n", "self", ".", "_reg_weight", "=", "1.0", "\n", "UDA_config", "=", "deepcopy", "(", "self", ".", "_config", "[", "\"UDARegCriterion\"", "]", ")", "\n", "self", ".", "_reg_criterion", "=", "{", "\"mse\"", ":", "nn", ".", "MSELoss", "(", ")", ",", "\"kl\"", ":", "KL_div", "(", ")", "}", "[", "UDA_config", "[", "\"name\"", "]", "]", "\n", "self", ".", "_uda_weight", "=", "float", "(", "UDA_config", "[", "\"weight\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.trainer.UDAIICTrainer._run_epoch": [[197, 207], ["semi_seg.epocher.UDAIICEpocher", "semi_seg.epocher.UDAIICEpocher.run"], "methods", ["None"], ["", "def", "_run_epoch", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", "->", "EpochResultDict", ":", "\n", "        ", "trainer", "=", "UDAIICEpocher", "(", "\n", "self", ".", "_model", ",", "self", ".", "_projector_wrappers", ",", "self", ".", "_optimizer", ",", "self", ".", "_labeled_loader", ",", "\n", "self", ".", "_unlabeled_loader", ",", "self", ".", "_sup_criterion", ",", "self", ".", "_reg_criterion", ",", "self", ".", "_IIDSegWrapper", ",", "\n", "num_batches", "=", "self", ".", "_num_batches", ",", "cur_epoch", "=", "self", ".", "_cur_epoch", ",", "device", "=", "self", ".", "_device", ",", "\n", "feature_position", "=", "self", ".", "feature_positions", ",", "cons_weight", "=", "self", ".", "_uda_weight", ",", "\n", "iic_weight", "=", "self", ".", "_iic_weight", ",", "feature_importance", "=", "self", ".", "_feature_importance", "\n", ")", "\n", "result", "=", "trainer", ".", "run", "(", ")", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.dataloader_helper.get_dataloaders": [[23, 69], ["copy.deepcopy", "_config[].pop", "datainterface", "datainterface._create_semi_supervised_datasets", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "dataset_zoos.keys", "deepclustering2.dataloader.sampler.InfiniteRandomSampler", "deepclustering2.dataloader.sampler.InfiniteRandomSampler", "deepclustering2.dataset.PatientSampler"], "function", ["None"], ["def", "get_dataloaders", "(", "config", ",", "group_val_patient", "=", "True", ")", ":", "\n", "    ", "_config", "=", "deepcopy", "(", "config", ")", "\n", "dataset_name", "=", "_config", "[", "\"Data\"", "]", ".", "pop", "(", "\"name\"", ",", "\"acdc\"", ")", "\n", "assert", "dataset_name", "in", "dataset_zoos", ".", "keys", "(", ")", ",", "config", "[", "\"Data\"", "]", "\n", "datainterface", "=", "dataset_zoos", "[", "dataset_name", "]", "\n", "augmentinferface", "=", "augment_zoos", "[", "dataset_name", "]", "\n", "\n", "data_manager", "=", "datainterface", "(", "root_dir", "=", "DATA_PATH", ",", "labeled_data_ratio", "=", "config", "[", "\"Data\"", "]", "[", "\"labeled_data_ratio\"", "]", ",", "\n", "unlabeled_data_ratio", "=", "config", "[", "\"Data\"", "]", "[", "\"unlabeled_data_ratio\"", "]", ")", "\n", "\n", "label_set", ",", "unlabel_set", ",", "val_set", "=", "data_manager", ".", "_create_semi_supervised_datasets", "(", "# noqa", "\n", "labeled_transform", "=", "augmentinferface", ".", "pretrain", ",", "\n", "unlabeled_transform", "=", "augmentinferface", ".", "pretrain", ",", "\n", "val_transform", "=", "augmentinferface", ".", "val", "\n", ")", "\n", "\n", "# labeled loader is with normal 2d slicing and InfiniteRandomSampler", "\n", "labeled_loader", "=", "DataLoader", "(", "\n", "label_set", ",", "sampler", "=", "InfiniteRandomSampler", "(", "\n", "label_set", ",", "\n", "shuffle", "=", "config", "[", "\"LabeledData\"", "]", "[", "\"shuffle\"", "]", "\n", ")", ",", "\n", "batch_size", "=", "config", "[", "\"LabeledData\"", "]", "[", "\"batch_size\"", "]", ",", "\n", "num_workers", "=", "config", "[", "\"LabeledData\"", "]", "[", "\"num_workers\"", "]", ",", "\n", "pin_memory", "=", "True", "\n", ")", "\n", "unlabeled_loader", "=", "DataLoader", "(", "\n", "unlabel_set", ",", "sampler", "=", "InfiniteRandomSampler", "(", "\n", "unlabel_set", ",", "\n", "shuffle", "=", "config", "[", "\"UnlabeledData\"", "]", "[", "\"shuffle\"", "]", "\n", ")", ",", "\n", "batch_size", "=", "config", "[", "\"UnlabeledData\"", "]", "[", "\"batch_size\"", "]", ",", "\n", "num_workers", "=", "config", "[", "\"UnlabeledData\"", "]", "[", "\"num_workers\"", "]", ",", "\n", "pin_memory", "=", "True", "\n", ")", "\n", "group_val_patient", "=", "group_val_patient", "if", "not", "dataset_name", "==", "\"spleen\"", "else", "False", "\n", "val_loader", "=", "DataLoader", "(", "\n", "val_set", ",", "\n", "batch_size", "=", "1", "if", "group_val_patient", "else", "4", ",", "\n", "batch_sampler", "=", "PatientSampler", "(", "\n", "val_set", ",", "\n", "grp_regex", "=", "val_set", ".", "dataset_pattern", ",", "\n", "shuffle", "=", "False", "\n", ")", "if", "group_val_patient", "else", "None", ",", "\n", ")", "\n", "return", "labeled_loader", ",", "unlabeled_loader", ",", "val_loader", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.dataloader_helper.fix_numpy_seed": [[71, 77], ["numpy.random.get_state", "numpy.random.seed", "numpy.random.set_state"], "function", ["None"], ["", "@", "contextmanager", "\n", "def", "fix_numpy_seed", "(", "seed", ":", "int", "=", "1", ")", ":", "\n", "    ", "previous_state", "=", "np", ".", "random", ".", "get_state", "(", ")", "\n", "np", ".", "random", ".", "seed", "(", "seed", ")", "\n", "yield", "\n", "np", ".", "random", ".", "set_state", "(", "previous_state", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.dataloader_helper.create_val_loader": [[79, 110], ["sorted", "copy.deepcopy", "dataloader_helper.create_val_loader.extract_patient"], "function", ["None"], ["", "def", "create_val_loader", "(", "unlabeled_loader", ",", "test_loader", ")", ":", "\n", "    ", "unlabeled_dataset", "=", "unlabeled_loader", ".", "dataset", "\n", "unlabeled_dataset", ":", "ACDCDataset", "\n", "patient_group", "=", "sorted", "(", "unlabeled_dataset", ".", "show_group_set", "(", ")", ")", "\n", "with", "fix_numpy_seed", "(", "1", ")", ":", "\n", "        ", "val_patient", "=", "np", ".", "random", ".", "permutation", "(", "patient_group", ")", "[", ":", "5", "]", "\n", "\n", "", "def", "extract_patient", "(", "dataset", ",", "validated_patient", ")", ":", "\n", "        ", "new_file_names", "=", "{", "}", "\n", "files_names", "=", "dataset", ".", "_filenames", "# noqa", "\n", "for", "k", ",", "v", "in", "files_names", ".", "items", "(", ")", ":", "\n", "            ", "new_file_names", "[", "k", "]", "=", "[", "x", "for", "x", "in", "v", "if", "dataset", ".", "_get_group", "(", "x", ")", "in", "validated_patient", "]", "\n", "", "return", "new_file_names", "\n", "\n", "", "val_dataset", "=", "deepcopy", "(", "unlabeled_dataset", ")", "\n", "val_dataset", ".", "_filenames", "=", "extract_patient", "(", "val_dataset", ",", "val_patient", ")", "\n", "test_dataset", "=", "test_loader", ".", "dataset", "\n", "val_dataset", ".", "_transform", "=", "deepcopy", "(", "test_dataset", ".", "_transform", ")", "\n", "\n", "group_val_patient", "=", "True", "\n", "\n", "val_loader", "=", "DataLoader", "(", "\n", "val_dataset", ",", "\n", "batch_size", "=", "1", "if", "group_val_patient", "else", "4", ",", "\n", "batch_sampler", "=", "PatientSampler", "(", "\n", "val_dataset", ",", "\n", "grp_regex", "=", "val_dataset", ".", "dataset_pattern", ",", "\n", "shuffle", "=", "False", "\n", ")", "if", "group_val_patient", "else", "None", ",", "\n", ")", "\n", "return", "val_loader", "\n", "", ""]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher._num_class_mixin.num_classes": [[31, 34], ["None"], "methods", ["None"], ["@", "property", "\n", "def", "num_classes", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_model", ".", "num_classes", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.EvalEpocher.__init__": [[38, 45], ["isinstance", "deepclustering2.epoch._Epocher.__init__", "len"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model", ":", "Union", "[", "Model", ",", "nn", ".", "Module", "]", ",", "val_loader", ":", "T_loader", ",", "sup_criterion", ":", "T_loss", ",", "cur_epoch", "=", "0", ",", "\n", "device", "=", "\"cpu\"", ")", "->", "None", ":", "\n", "        ", "assert", "isinstance", "(", "val_loader", ",", "DataLoader", ")", ",", "f\"val_loader should be an instance of DataLoader, given {val_loader.__class__.__name__}.\"", "\n", "super", "(", ")", ".", "__init__", "(", "model", ",", "num_batches", "=", "len", "(", "val_loader", ")", ",", "cur_epoch", "=", "cur_epoch", ",", "device", "=", "device", ")", "\n", "self", ".", "_val_loader", "=", "val_loader", "\n", "self", ".", "_sup_criterion", "=", "sup_criterion", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.EvalEpocher._configure_meters": [[46, 52], ["list", "meters.register_meter", "meters.register_meter", "range", "deepclustering2.meters2.AverageValueMeter", "deepclustering2.meters2.UniversalDice"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInterface.register_meter", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInterface.register_meter"], ["", "def", "_configure_meters", "(", "self", ",", "meters", ":", "MeterInterface", ")", "->", "MeterInterface", ":", "\n", "        ", "C", "=", "self", ".", "num_classes", "\n", "report_axis", "=", "list", "(", "range", "(", "1", ",", "C", ")", ")", "\n", "meters", ".", "register_meter", "(", "\"loss\"", ",", "AverageValueMeter", "(", ")", ")", "\n", "meters", ".", "register_meter", "(", "\"dice\"", ",", "UniversalDice", "(", "C", ",", "report_axises", "=", "report_axis", ",", ")", ")", "\n", "return", "meters", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.EvalEpocher._run": [[53, 69], ["torch.no_grad", "epocher.EvalEpocher._model.eval", "deepclustering2.meters2.EpochResultDict", "zip", "epocher.EvalEpocher._unzip_data", "epocher.EvalEpocher._model", "deepclustering2.utils.class2one_hot", "epocher.EvalEpocher._sup_criterion", "epocher.EvalEpocher.meters[].add", "epocher.EvalEpocher.meters[].add", "epocher.EvalEpocher.meters.tracking_status", "epocher.EvalEpocher._indicator.set_postfix_dict", "val_target.squeeze", "epocher.EvalEpocher.softmax", "epocher.EvalEpocher.item", "val_target.squeeze", "epocher.EvalEpocher.meters[].summary", "epocher.EvalEpocher.max"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.TrainEpocher._unzip_data", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.add", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.add", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInteractMixin.tracking_status", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.kappa.KappaMetrics.summary"], ["", "@", "torch", ".", "no_grad", "(", ")", "\n", "def", "_run", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", "->", "Tuple", "[", "EpochResultDict", ",", "float", "]", ":", "\n", "        ", "self", ".", "_model", ".", "eval", "(", ")", "\n", "report_dict", "=", "EpochResultDict", "(", ")", "\n", "for", "i", ",", "val_data", "in", "zip", "(", "self", ".", "_indicator", ",", "self", ".", "_val_loader", ")", ":", "\n", "            ", "val_img", ",", "val_target", ",", "file_path", ",", "_", ",", "group", "=", "self", ".", "_unzip_data", "(", "val_data", ",", "self", ".", "_device", ")", "\n", "val_logits", "=", "self", ".", "_model", "(", "val_img", ")", "\n", "onehot_target", "=", "class2one_hot", "(", "val_target", ".", "squeeze", "(", "1", ")", ",", "self", ".", "num_classes", ")", "\n", "\n", "val_loss", "=", "self", ".", "_sup_criterion", "(", "val_logits", ".", "softmax", "(", "1", ")", ",", "onehot_target", ",", "disable_assert", "=", "True", ")", "\n", "\n", "self", ".", "meters", "[", "\"loss\"", "]", ".", "add", "(", "val_loss", ".", "item", "(", ")", ")", "\n", "self", ".", "meters", "[", "\"dice\"", "]", ".", "add", "(", "val_logits", ".", "max", "(", "1", ")", "[", "1", "]", ",", "val_target", ".", "squeeze", "(", "1", ")", ",", "group_name", "=", "group", ")", "\n", "report_dict", "=", "self", ".", "meters", ".", "tracking_status", "(", ")", "\n", "self", ".", "_indicator", ".", "set_postfix_dict", "(", "report_dict", ")", "\n", "", "return", "report_dict", ",", "self", ".", "meters", "[", "\"dice\"", "]", ".", "summary", "(", ")", "[", "\"DSC_mean\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.EvalEpocher._unzip_data": [[70, 74], ["contrastyou.epocher._utils.preprocess_input_with_single_transformation"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher._utils.preprocess_input_with_single_transformation"], ["", "@", "staticmethod", "\n", "def", "_unzip_data", "(", "data", ",", "device", ")", ":", "\n", "        ", "image", ",", "target", ",", "filename", ",", "partition", ",", "group", "=", "preprocess_input_with_single_transformation", "(", "data", ",", "device", ")", "\n", "return", "image", ",", "target", ",", "filename", ",", "partition", ",", "group", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.InferenceEpocher.set_save_dir": [[78, 80], ["None"], "methods", ["None"], ["    ", "def", "set_save_dir", "(", "self", ",", "save_dir", ")", ":", "\n", "        ", "self", ".", "_save_dir", "=", "save_dir", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.InferenceEpocher._configure_meters": [[81, 87], ["epocher.EvalEpocher._configure_meters", "list", "super()._configure_meters.register_meter", "range", "deepclustering2.meters2.SurfaceMeter"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher._configure_meters", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInterface.register_meter"], ["", "def", "_configure_meters", "(", "self", ",", "meters", ":", "MeterInterface", ")", "->", "MeterInterface", ":", "\n", "        ", "meters", "=", "super", "(", ")", ".", "_configure_meters", "(", "meters", ")", "\n", "C", "=", "self", ".", "num_classes", "\n", "report_axis", "=", "list", "(", "range", "(", "1", ",", "C", ")", ")", "\n", "meters", ".", "register_meter", "(", "\"hd\"", ",", "SurfaceMeter", "(", "C", "=", "C", ",", "report_axises", "=", "report_axis", ",", "metername", "=", "\"hausdorff\"", ")", ")", "\n", "return", "meters", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.InferenceEpocher._run": [[88, 108], ["epocher.InferenceEpocher._model.eval", "zip", "epocher.InferenceEpocher._unzip_data", "epocher.InferenceEpocher._model", "contrastyou.epocher._utils.write_img_target", "contrastyou.epocher._utils.write_predict", "deepclustering2.utils.class2one_hot", "epocher.InferenceEpocher._sup_criterion", "epocher.InferenceEpocher.meters[].add", "epocher.InferenceEpocher.meters[].add", "epocher.InferenceEpocher.meters.tracking_status", "epocher.InferenceEpocher._indicator.set_postfix_dict", "val_target.squeeze", "epocher.InferenceEpocher.softmax", "epocher.InferenceEpocher.item", "val_target.squeeze", "deepclustering2.utils.ExceptionIgnorer", "epocher.InferenceEpocher.meters[].add", "epocher.InferenceEpocher.meters[].summary", "epocher.InferenceEpocher.max", "val_target.squeeze", "epocher.InferenceEpocher.max"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.TrainEpocher._unzip_data", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher._utils.write_img_target", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher._utils.write_predict", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.add", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.add", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInteractMixin.tracking_status", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.add", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.individual_meters.kappa.KappaMetrics.summary"], ["", "def", "_run", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", "->", "Tuple", "[", "EpochResultDict", ",", "float", "]", ":", "\n", "        ", "self", ".", "_model", ".", "eval", "(", ")", "\n", "assert", "self", ".", "_model", ".", "training", "is", "False", ",", "self", ".", "_model", ".", "training", "\n", "for", "i", ",", "val_data", "in", "zip", "(", "self", ".", "_indicator", ",", "self", ".", "_val_loader", ")", ":", "\n", "            ", "val_img", ",", "val_target", ",", "file_path", ",", "_", ",", "group", "=", "self", ".", "_unzip_data", "(", "val_data", ",", "self", ".", "_device", ")", "\n", "val_logits", "=", "self", ".", "_model", "(", "val_img", ")", "\n", "# write image", "\n", "write_img_target", "(", "val_img", ",", "val_target", ",", "self", ".", "_save_dir", ",", "file_path", ")", "\n", "write_predict", "(", "val_logits", ",", "self", ".", "_save_dir", ",", "file_path", ",", ")", "\n", "onehot_target", "=", "class2one_hot", "(", "val_target", ".", "squeeze", "(", "1", ")", ",", "self", ".", "num_classes", ")", "\n", "\n", "val_loss", "=", "self", ".", "_sup_criterion", "(", "val_logits", ".", "softmax", "(", "1", ")", ",", "onehot_target", ",", "disable_assert", "=", "True", ")", "\n", "\n", "self", ".", "meters", "[", "\"loss\"", "]", ".", "add", "(", "val_loss", ".", "item", "(", ")", ")", "\n", "self", ".", "meters", "[", "\"dice\"", "]", ".", "add", "(", "val_logits", ".", "max", "(", "1", ")", "[", "1", "]", ",", "val_target", ".", "squeeze", "(", "1", ")", ",", "group_name", "=", "group", ")", "\n", "with", "ExceptionIgnorer", "(", "RuntimeError", ")", ":", "\n", "                ", "self", ".", "meters", "[", "\"hd\"", "]", ".", "add", "(", "val_logits", ".", "max", "(", "1", ")", "[", "1", "]", ",", "val_target", ".", "squeeze", "(", "1", ")", ")", "\n", "", "report_dict", "=", "self", ".", "meters", ".", "tracking_status", "(", ")", "\n", "self", ".", "_indicator", ".", "set_postfix_dict", "(", "report_dict", ")", "\n", "", "return", "report_dict", ",", "self", ".", "meters", "[", "\"dice\"", "]", ".", "summary", "(", ")", "[", "\"DSC_mean\"", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.TrainEpocher.__init__": [[112, 127], ["deepclustering2.epoch._Epocher.__init__", "deepclustering2.augment.tensor_augment.TensorRandomFlip", "isinstance", "isinstance", "isinstance", "isinstance"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model", ":", "Union", "[", "Model", ",", "nn", ".", "Module", "]", ",", "optimizer", ":", "T_optim", ",", "labeled_loader", ":", "T_loader", ",", "\n", "unlabeled_loader", ":", "T_loader", ",", "sup_criterion", ":", "T_loss", ",", "reg_weight", ":", "float", ",", "num_batches", ":", "int", ",", "cur_epoch", "=", "0", ",", "\n", "device", "=", "\"cpu\"", ",", "feature_position", "=", "None", ",", "feature_importance", "=", "None", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "model", ",", "num_batches", "=", "num_batches", ",", "cur_epoch", "=", "cur_epoch", ",", "device", "=", "device", ")", "\n", "self", ".", "_optimizer", "=", "optimizer", "\n", "self", ".", "_labeled_loader", "=", "labeled_loader", "\n", "self", ".", "_unlabeled_loader", "=", "unlabeled_loader", "\n", "self", ".", "_sup_criterion", "=", "sup_criterion", "\n", "self", ".", "_reg_weight", "=", "reg_weight", "\n", "self", ".", "_affine_transformer", "=", "TensorRandomFlip", "(", "axis", "=", "[", "1", ",", "2", "]", ",", "threshold", "=", "0.8", ")", "\n", "assert", "isinstance", "(", "feature_position", ",", "list", ")", "and", "isinstance", "(", "feature_position", "[", "0", "]", ",", "str", ")", ",", "feature_position", "\n", "assert", "isinstance", "(", "feature_importance", ",", "list", ")", "and", "isinstance", "(", "feature_importance", "[", "0", "]", ",", "\n", "(", "int", ",", "float", ")", ")", ",", "feature_importance", "\n", "self", ".", "_feature_position", "=", "feature_position", "\n", "self", ".", "_feature_importance", "=", "feature_importance", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.TrainEpocher._configure_meters": [[128, 136], ["list", "meters.register_meter", "meters.register_meter", "meters.register_meter", "meters.register_meter", "range", "deepclustering2.meters2.AverageValueMeter", "deepclustering2.meters2.AverageValueMeter", "deepclustering2.meters2.AverageValueMeter", "deepclustering2.meters2.UniversalDice"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInterface.register_meter", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInterface.register_meter", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInterface.register_meter", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInterface.register_meter"], ["", "def", "_configure_meters", "(", "self", ",", "meters", ":", "MeterInterface", ")", "->", "MeterInterface", ":", "\n", "        ", "C", "=", "self", ".", "num_classes", "\n", "report_axis", "=", "list", "(", "range", "(", "1", ",", "C", ")", ")", "\n", "meters", ".", "register_meter", "(", "\"lr\"", ",", "AverageValueMeter", "(", ")", ")", "\n", "meters", ".", "register_meter", "(", "\"sup_loss\"", ",", "AverageValueMeter", "(", ")", ")", "\n", "meters", ".", "register_meter", "(", "\"reg_loss\"", ",", "AverageValueMeter", "(", ")", ")", "\n", "meters", ".", "register_meter", "(", "\"sup_dice\"", ",", "UniversalDice", "(", "C", ",", "report_axises", "=", "report_axis", ",", ")", ")", "\n", "return", "meters", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.TrainEpocher._run": [[137, 189], ["epocher.TrainEpocher.meters[].add", "epocher.TrainEpocher._model.train", "semi_seg._utils.FeatureExtractor", "zip", "deepclustering2.optim.get_lrs_from_optimizer", "random.randint", "epocher.TrainEpocher._unzip_data", "epocher.TrainEpocher._unzip_data", "epocher.TrainEpocher._model", "torch.split", "deepclustering2.utils.class2one_hot", "epocher.TrainEpocher._sup_criterion", "epocher.TrainEpocher.regularization", "epocher.TrainEpocher._optimizer.zero_grad", "total_loss.backward", "epocher.TrainEpocher._optimizer.step", "int", "deepclustering2.decorator.FixRandomSeed", "torch.stack", "torch.cat", "deepclustering2.decorator.FixRandomSeed", "torch.stack", "labeled_target.squeeze", "label_logits.softmax", "torch.no_grad", "epocher.TrainEpocher.meters[].add", "epocher.TrainEpocher.meters[].add", "epocher.TrainEpocher.meters[].add", "epocher.TrainEpocher.meters.tracking_status", "epocher.TrainEpocher._indicator.set_postfix_dict", "len", "len", "len", "epocher.TrainEpocher.item", "labeled_target.squeeze", "epocher.TrainEpocher.item", "epocher.TrainEpocher._affine_transformer", "epocher.TrainEpocher._affine_transformer", "label_logits.max"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.add", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.TrainEpocher._unzip_data", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.TrainEpocher._unzip_data", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.regularization", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.add", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.add", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.add", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInteractMixin.tracking_status"], ["", "def", "_run", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", "->", "EpochResultDict", ":", "\n", "        ", "self", ".", "meters", "[", "\"lr\"", "]", ".", "add", "(", "get_lrs_from_optimizer", "(", "self", ".", "_optimizer", ")", "[", "0", "]", ")", "\n", "self", ".", "_model", ".", "train", "(", ")", "\n", "assert", "self", ".", "_model", ".", "training", ",", "self", ".", "_model", ".", "training", "\n", "report_dict", "=", "{", "}", "\n", "with", "FeatureExtractor", "(", "self", ".", "_model", ",", "self", ".", "_feature_position", ")", "as", "self", ".", "_fextractor", ":", "\n", "            ", "for", "i", ",", "labeled_data", ",", "unlabeled_data", "in", "zip", "(", "self", ".", "_indicator", ",", "self", ".", "_labeled_loader", ",", "self", ".", "_unlabeled_loader", ")", ":", "\n", "                ", "seed", "=", "random", ".", "randint", "(", "0", ",", "int", "(", "1e7", ")", ")", "\n", "labeled_image", ",", "labeled_target", ",", "labeled_filename", ",", "_", ",", "label_group", "=", "self", ".", "_unzip_data", "(", "labeled_data", ",", "self", ".", "_device", ")", "\n", "unlabeled_image", ",", "unlabeled_target", ",", "*", "_", "=", "self", ".", "_unzip_data", "(", "unlabeled_data", ",", "self", ".", "_device", ")", "\n", "with", "FixRandomSeed", "(", "seed", ")", ":", "\n", "                    ", "unlabeled_image_tf", "=", "torch", ".", "stack", "(", "[", "self", ".", "_affine_transformer", "(", "x", ")", "for", "x", "in", "unlabeled_image", "]", ",", "dim", "=", "0", ")", "\n", "", "assert", "unlabeled_image_tf", ".", "shape", "==", "unlabeled_image", ".", "shape", ",", "(", "unlabeled_image_tf", ".", "shape", ",", "unlabeled_image", ".", "shape", ")", "\n", "\n", "predict_logits", "=", "self", ".", "_model", "(", "torch", ".", "cat", "(", "[", "labeled_image", ",", "unlabeled_image", ",", "unlabeled_image_tf", "]", ",", "dim", "=", "0", ")", ")", "\n", "label_logits", ",", "unlabel_logits", ",", "unlabel_tf_logits", "=", "torch", ".", "split", "(", "\n", "predict_logits", ",", "\n", "[", "len", "(", "labeled_image", ")", ",", "len", "(", "unlabeled_image", ")", ",", "len", "(", "unlabeled_image_tf", ")", "]", ",", "\n", "dim", "=", "0", "\n", ")", "\n", "with", "FixRandomSeed", "(", "seed", ")", ":", "\n", "                    ", "unlabel_logits_tf", "=", "torch", ".", "stack", "(", "[", "self", ".", "_affine_transformer", "(", "x", ")", "for", "x", "in", "unlabel_logits", "]", ",", "dim", "=", "0", ")", "\n", "", "assert", "unlabel_logits_tf", ".", "shape", "==", "unlabel_tf_logits", ".", "shape", ",", "(", "unlabel_logits_tf", ".", "shape", ",", "unlabel_tf_logits", ".", "shape", ")", "\n", "# supervised part", "\n", "onehot_target", "=", "class2one_hot", "(", "labeled_target", ".", "squeeze", "(", "1", ")", ",", "self", ".", "num_classes", ")", "\n", "sup_loss", "=", "self", ".", "_sup_criterion", "(", "label_logits", ".", "softmax", "(", "1", ")", ",", "onehot_target", ")", "\n", "# regularized part", "\n", "reg_loss", "=", "self", ".", "regularization", "(", "\n", "unlabeled_tf_logits", "=", "unlabel_tf_logits", ",", "\n", "unlabeled_logits_tf", "=", "unlabel_logits_tf", ",", "\n", "seed", "=", "seed", ",", "\n", "unlabeled_image", "=", "unlabeled_image", ",", "\n", "unlabeled_image_tf", "=", "unlabeled_image_tf", ",", "\n", ")", "\n", "total_loss", "=", "sup_loss", "+", "self", ".", "_reg_weight", "*", "reg_loss", "\n", "# gradient backpropagation", "\n", "self", ".", "_optimizer", ".", "zero_grad", "(", ")", "\n", "total_loss", ".", "backward", "(", ")", "\n", "self", ".", "_optimizer", ".", "step", "(", ")", "\n", "# recording can be here or in the regularization method", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "                    ", "self", ".", "meters", "[", "\"sup_loss\"", "]", ".", "add", "(", "sup_loss", ".", "item", "(", ")", ")", "\n", "self", ".", "meters", "[", "\"sup_dice\"", "]", ".", "add", "(", "label_logits", ".", "max", "(", "1", ")", "[", "1", "]", ",", "labeled_target", ".", "squeeze", "(", "1", ")", ",", "\n", "group_name", "=", "label_group", ")", "\n", "self", ".", "meters", "[", "\"reg_loss\"", "]", ".", "add", "(", "reg_loss", ".", "item", "(", ")", ")", "\n", "report_dict", "=", "self", ".", "meters", ".", "tracking_status", "(", ")", "\n", "self", ".", "_indicator", ".", "set_postfix_dict", "(", "report_dict", ")", "\n", "", "", "", "return", "report_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.TrainEpocher._unzip_data": [[190, 195], ["contrastyou.epocher._utils.preprocess_input_with_twice_transformation"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.epocher._utils.preprocess_input_with_twice_transformation"], ["", "@", "staticmethod", "\n", "def", "_unzip_data", "(", "data", ",", "device", ")", ":", "\n", "        ", "(", "image", ",", "target", ")", ",", "_", ",", "filename", ",", "partition", ",", "group", "=", "preprocess_input_with_twice_transformation", "(", "data", ",", "device", ")", "\n", "return", "image", ",", "target", ",", "filename", ",", "partition", ",", "group", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.TrainEpocher.regularization": [[196, 198], ["torch.tensor"], "methods", ["None"], ["", "def", "regularization", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "return", "torch", ".", "tensor", "(", "0", ",", "dtype", "=", "torch", ".", "float", ",", "device", "=", "self", ".", "_device", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDATrainEpocher.__init__": [[202, 209], ["epocher.TrainEpocher.__init__"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model", ":", "Union", "[", "Model", ",", "nn", ".", "Module", "]", ",", "optimizer", ":", "T_optim", ",", "labeled_loader", ":", "T_loader", ",", "\n", "unlabeled_loader", ":", "T_loader", ",", "sup_criterion", ":", "T_loss", ",", "reg_criterion", ":", "T_loss", ",", "reg_weight", ":", "float", ",", "\n", "num_batches", ":", "int", ",", "cur_epoch", ":", "int", "=", "0", ",", "device", "=", "\"cpu\"", ",", "feature_position", "=", "None", ",", "\n", "feature_importance", "=", "None", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "model", ",", "optimizer", ",", "labeled_loader", ",", "unlabeled_loader", ",", "sup_criterion", ",", "reg_weight", ",", "num_batches", ",", "\n", "cur_epoch", ",", "device", ",", "feature_position", ",", "feature_importance", ")", "\n", "self", ".", "_reg_criterion", "=", "reg_criterion", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDATrainEpocher._configure_meters": [[210, 214], ["epocher.TrainEpocher._configure_meters", "super()._configure_meters.register_meter", "deepclustering2.meters2.AverageValueMeter"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher._configure_meters", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInterface.register_meter"], ["", "def", "_configure_meters", "(", "self", ",", "meters", ":", "MeterInterface", ")", "->", "MeterInterface", ":", "\n", "        ", "meters", "=", "super", "(", ")", ".", "_configure_meters", "(", "meters", ")", "\n", "meters", ".", "register_meter", "(", "\"uda\"", ",", "AverageValueMeter", "(", ")", ")", "\n", "return", "meters", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDATrainEpocher.regularization": [[215, 227], ["epocher.UDATrainEpocher._reg_criterion", "epocher.UDATrainEpocher.meters[].add", "unlabeled_tf_logits.softmax", "unlabeled_logits_tf.softmax().detach", "epocher.UDATrainEpocher.item", "unlabeled_logits_tf.softmax"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.add"], ["", "def", "regularization", "(", "\n", "self", ",", "\n", "unlabeled_tf_logits", ":", "Tensor", ",", "\n", "unlabeled_logits_tf", ":", "Tensor", ",", "\n", "seed", ",", "*", "args", ",", "**", "kwargs", "\n", ")", ":", "\n", "        ", "reg_loss", "=", "self", ".", "_reg_criterion", "(", "\n", "unlabeled_tf_logits", ".", "softmax", "(", "1", ")", ",", "\n", "unlabeled_logits_tf", ".", "softmax", "(", "1", ")", ".", "detach", "(", ")", "\n", ")", "\n", "self", ".", "meters", "[", "\"uda\"", "]", ".", "add", "(", "reg_loss", ".", "item", "(", ")", ")", "\n", "return", "reg_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.IICTrainEpocher._configure_meters": [[231, 236], ["epocher.TrainEpocher._configure_meters", "super()._configure_meters.register_meter", "super()._configure_meters.register_meter", "deepclustering2.meters2.AverageValueMeter", "deepclustering2.meters2.MultipleAverageValueMeter"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher._configure_meters", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInterface.register_meter", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInterface.register_meter"], ["    ", "def", "_configure_meters", "(", "self", ",", "meters", ":", "MeterInterface", ")", "->", "MeterInterface", ":", "\n", "        ", "meters", "=", "super", "(", ")", ".", "_configure_meters", "(", "meters", ")", "\n", "meters", ".", "register_meter", "(", "\"mi\"", ",", "AverageValueMeter", "(", ")", ")", "\n", "meters", ".", "register_meter", "(", "\"individual_mis\"", ",", "MultipleAverageValueMeter", "(", ")", ")", "\n", "return", "meters", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.IICTrainEpocher.__init__": [[237, 248], ["epocher.TrainEpocher.__init__"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["", "def", "__init__", "(", "self", ",", "model", ":", "Union", "[", "Model", ",", "nn", ".", "Module", "]", ",", "projectors_wrapper", ":", "ProjectorWrapper", ",", "optimizer", ":", "T_optim", ",", "\n", "labeled_loader", ":", "T_loader", ",", "unlabeled_loader", ":", "T_loader", ",", "sup_criterion", ":", "T_loss", ",", "\n", "IIDSegCriterionWrapper", ":", "IICLossWrapper", ",", "\n", "reg_weight", ":", "float", ",", "num_batches", ":", "int", ",", "cur_epoch", ":", "int", "=", "0", ",", "device", "=", "\"cpu\"", ",", "feature_position", "=", "None", ",", "\n", "feature_importance", "=", "None", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "model", ",", "optimizer", ",", "labeled_loader", ",", "unlabeled_loader", ",", "sup_criterion", ",", "reg_weight", ",", "num_batches", ",", "\n", "cur_epoch", ",", "device", ",", "feature_position", ",", "feature_importance", ")", "\n", "assert", "projectors_wrapper", ".", "feature_names", "==", "self", ".", "_feature_position", "\n", "self", ".", "_projectors_wrapper", "=", "projectors_wrapper", "\n", "assert", "IIDSegCriterionWrapper", ".", "feature_names", "==", "self", ".", "_feature_position", "\n", "self", ".", "_IIDSegCriterionWrapper", "=", "IIDSegCriterionWrapper", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.IICTrainEpocher.regularization": [[249, 285], ["enumerate", "contrastyou.helper.weighted_average_iter", "epocher.IICTrainEpocher.meters[].add", "epocher.IICTrainEpocher.meters[].add", "len", "zip", "torch.chunk", "isinstance", "list", "contrastyou.helper.average_iter", "iic_losses_for_features.append", "zip", "criterion", "contrastyou.helper.weighted_average_iter.item", "dict", "deepclustering2.decorator.FixRandomSeed", "torch.stack", "zip", "zip", "len", "epocher.IICTrainEpocher._affine_transformer", "torch.chunk", "projector", "x.item", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.helper.utils.weighted_average_iter", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.add", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.add", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.helper.utils.average_iter"], ["", "def", "regularization", "(", "self", ",", "unlabeled_tf_logits", ":", "Tensor", ",", "unlabeled_logits_tf", ":", "Tensor", ",", "seed", ":", "int", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "# todo: adding projectors here.", "\n", "        ", "feature_names", "=", "self", ".", "_fextractor", ".", "_feature_names", "# noqa", "\n", "unlabeled_length", "=", "len", "(", "unlabeled_tf_logits", ")", "*", "2", "\n", "iic_losses_for_features", "=", "[", "]", "\n", "\n", "for", "i", ",", "(", "inter_feature", ",", "projector", ",", "criterion", ")", "in", "enumerate", "(", "zip", "(", "self", ".", "_fextractor", ",", "self", ".", "_projectors_wrapper", ",", "self", ".", "_IIDSegCriterionWrapper", ")", ")", ":", "\n", "\n", "            ", "unlabeled_features", "=", "inter_feature", "[", "len", "(", "inter_feature", ")", "-", "unlabeled_length", ":", "]", "\n", "unlabeled_features", ",", "unlabeled_tf_features", "=", "torch", ".", "chunk", "(", "unlabeled_features", ",", "2", ",", "dim", "=", "0", ")", "\n", "\n", "if", "isinstance", "(", "projector", ",", "ClusterHead", ")", ":", "# features from encoder", "\n", "                ", "unlabeled_features_tf", "=", "unlabeled_features", "\n", "", "else", ":", "\n", "                ", "with", "FixRandomSeed", "(", "seed", ")", ":", "\n", "                    ", "unlabeled_features_tf", "=", "torch", ".", "stack", "(", "[", "self", ".", "_affine_transformer", "(", "x", ")", "for", "x", "in", "unlabeled_features", "]", ",", "\n", "dim", "=", "0", ")", "\n", "", "", "assert", "unlabeled_tf_features", ".", "shape", "==", "unlabeled_tf_features", ".", "shape", ",", "(", "unlabeled_tf_features", ".", "shape", ",", "unlabeled_tf_features", ".", "shape", ")", "\n", "prob1", ",", "prob2", "=", "list", "(", "\n", "zip", "(", "*", "[", "torch", ".", "chunk", "(", "x", ",", "2", ",", "0", ")", "for", "x", "in", "projector", "(", "\n", "torch", ".", "cat", "(", "[", "unlabeled_features_tf", ",", "unlabeled_tf_features", "]", ",", "dim", "=", "0", ")", "\n", ")", "]", ")", "\n", ")", "\n", "_iic_loss_list", "=", "[", "criterion", "(", "x", ",", "y", ")", "for", "x", ",", "y", "in", "zip", "(", "prob1", ",", "prob2", ")", "]", "\n", "_iic_loss", "=", "average_iter", "(", "_iic_loss_list", ")", "\n", "iic_losses_for_features", ".", "append", "(", "_iic_loss", ")", "\n", "", "reg_loss", "=", "weighted_average_iter", "(", "iic_losses_for_features", ",", "self", ".", "_feature_importance", ")", "\n", "self", ".", "meters", "[", "\"mi\"", "]", ".", "add", "(", "-", "reg_loss", ".", "item", "(", ")", ")", "\n", "self", ".", "meters", "[", "\"individual_mis\"", "]", ".", "add", "(", "**", "dict", "(", "zip", "(", "\n", "self", ".", "_feature_position", ",", "\n", "[", "-", "x", ".", "item", "(", ")", "for", "x", "in", "iic_losses_for_features", "]", "\n", ")", ")", ")", "\n", "\n", "return", "reg_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__": [[289, 300], ["epocher.IICTrainEpocher.__init__"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.__init__"], ["    ", "def", "__init__", "(", "self", ",", "model", ":", "Union", "[", "Model", ",", "nn", ".", "Module", "]", ",", "projectors_wrapper", ":", "ProjectorWrapper", ",", "optimizer", ":", "T_optim", ",", "\n", "labeled_loader", ":", "T_loader", ",", "unlabeled_loader", ":", "T_loader", ",", "sup_criterion", ":", "T_loss", ",", "reg_criterion", ":", "T_loss", ",", "\n", "IIDSegCriterion", ":", "T_loss", ",", "num_batches", ":", "int", ",", "cur_epoch", ":", "int", "=", "0", ",", "device", "=", "\"cpu\"", ",", "\n", "feature_position", "=", "None", ",", "feature_importance", "=", "None", ",", "cons_weight", "=", "1", ",", "\n", "iic_weight", "=", "0.1", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "model", ",", "projectors_wrapper", ",", "optimizer", ",", "labeled_loader", ",", "unlabeled_loader", ",", "sup_criterion", ",", "\n", "IIDSegCriterion", ",", "1.0", ",", "num_batches", ",", "cur_epoch", ",", "device", ",", "feature_position", ",", "\n", "feature_importance", ")", "\n", "self", ".", "_cons_weight", "=", "cons_weight", "\n", "self", ".", "_iic_weight", "=", "iic_weight", "\n", "self", ".", "_reg_criterion", "=", "reg_criterion", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher._configure_meters": [[301, 307], ["epocher.IICTrainEpocher._configure_meters", "super()._configure_meters.register_meter", "super()._configure_meters.register_meter", "super()._configure_meters.register_meter", "deepclustering2.meters2.AverageValueMeter", "deepclustering2.meters2.AverageValueMeter", "deepclustering2.meters2.AverageValueMeter"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher._configure_meters", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInterface.register_meter", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInterface.register_meter", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meters2.meter_interface.MeterInterface.register_meter"], ["", "def", "_configure_meters", "(", "self", ",", "meters", ":", "MeterInterface", ")", "->", "MeterInterface", ":", "\n", "        ", "meters", "=", "super", "(", ")", ".", "_configure_meters", "(", "meters", ")", "\n", "meters", ".", "register_meter", "(", "\"uda\"", ",", "AverageValueMeter", "(", ")", ")", "\n", "meters", ".", "register_meter", "(", "\"iic_weight\"", ",", "AverageValueMeter", "(", ")", ")", "\n", "meters", ".", "register_meter", "(", "\"uda_weight\"", ",", "AverageValueMeter", "(", ")", ")", "\n", "return", "meters", "\n", "\n"]], "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.regularization": [[308, 324], ["epocher.UDAIICEpocher.meters[].add", "epocher.UDAIICEpocher.meters[].add", "epocher.IICTrainEpocher.regularization", "epocher.UDATrainEpocher.regularization"], "methods", ["home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.add", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.meter.averagevaluemeter.AverageValueMeter.add", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.regularization", "home.repos.pwc.inspect_result.jizongFox_MI-based-Regularized-Semi-supervised-Segmentation.semi_seg.epocher.UDAIICEpocher.regularization"], ["", "def", "regularization", "(", "self", ",", "unlabeled_tf_logits", ":", "Tensor", ",", "unlabeled_logits_tf", ":", "Tensor", ",", "seed", ":", "int", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "self", ".", "meters", "[", "\"iic_weight\"", "]", ".", "add", "(", "self", ".", "_iic_weight", ")", "\n", "self", ".", "meters", "[", "\"uda_weight\"", "]", ".", "add", "(", "self", ".", "_cons_weight", ")", "\n", "iic_loss", "=", "IICTrainEpocher", ".", "regularization", "(", "\n", "self", ",", "\n", "unlabeled_tf_logits", "=", "unlabeled_tf_logits", ",", "\n", "unlabeled_logits_tf", "=", "unlabeled_logits_tf", ",", "\n", "seed", "=", "seed", "\n", ")", "\n", "cons_loss", "=", "UDATrainEpocher", ".", "regularization", "(", "\n", "self", ",", "# noqa", "\n", "unlabeled_tf_logits", "=", "unlabeled_tf_logits", ",", "\n", "unlabeled_logits_tf", "=", "unlabeled_logits_tf", ",", "\n", "seed", "=", "seed", ",", "\n", ")", "\n", "return", "self", ".", "_cons_weight", "*", "cons_loss", "+", "self", ".", "_iic_weight", "*", "iic_loss", "\n", "", "", ""]]}