{"home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.main.MovingAverage.__init__": [[428, 432], ["None"], "methods", ["None"], ["\t", "def", "__init__", "(", "self", ",", "ratio", "=", "0.95", ")", ":", "\n", "\t\t", "self", ".", "sum", "=", "0", "\n", "self", ".", "weight", "=", "1e-8", "\n", "self", ".", "ratio", "=", "ratio", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.main.MovingAverage.update": [[433, 436], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "v", ")", ":", "\n", "\t\t", "self", ".", "sum", "=", "self", ".", "sum", "*", "self", ".", "ratio", "+", "v", "\n", "self", ".", "weight", "=", "self", ".", "weight", "*", "self", ".", "ratio", "+", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.main.MovingAverage.average": [[437, 440], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "average", "(", "self", ")", ":", "\n", "\t\t", "return", "self", ".", "sum", "/", "self", ".", "weight", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.main.DictMovingAverage.__init__": [[442, 446], ["None"], "methods", ["None"], ["\t", "def", "__init__", "(", "self", ",", "ratio", "=", "0.95", ")", ":", "\n", "\t\t", "self", ".", "sum", "=", "{", "}", "\n", "self", ".", "weight", "=", "{", "}", "\n", "self", ".", "ratio", "=", "ratio", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.main.DictMovingAverage.update": [[447, 454], ["None"], "methods", ["None"], ["", "def", "update", "(", "self", ",", "v", ")", ":", "\n", "\t\t", "for", "key", "in", "v", ":", "\n", "\t\t\t", "if", "key", "not", "in", "self", ".", "sum", ":", "\n", "\t\t\t\t", "self", ".", "sum", "[", "key", "]", "=", "0", "\n", "self", ".", "weight", "[", "key", "]", "=", "1e-8", "\n", "", "self", ".", "sum", "[", "key", "]", "=", "self", ".", "sum", "[", "key", "]", "*", "self", ".", "ratio", "+", "v", "[", "key", "]", "\n", "self", ".", "weight", "[", "key", "]", "=", "self", ".", "weight", "[", "key", "]", "*", "self", ".", "ratio", "+", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.main.DictMovingAverage.average": [[455, 458], ["dict"], "methods", ["None"], ["", "", "@", "property", "\n", "def", "average", "(", "self", ")", ":", "\n", "\t\t", "return", "dict", "(", "[", "(", "key", ",", "self", ".", "sum", "[", "key", "]", "/", "self", ".", "weight", "[", "key", "]", ")", "for", "key", "in", "self", ".", "sum", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.main.mkdir": [[70, 73], ["os.path.exists", "os.makedirs"], "function", ["None"], ["def", "mkdir", "(", "path", ")", ":", "\n", "\t", "if", "not", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "\n", "\t\t", "os", ".", "makedirs", "(", "path", ")", "\n", "", "", "mkdir", "(", "'logs'", ")", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.main.validate": [[157, 162], ["pipe.validate"], "function", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.pipeline.PipelineFlownet.validate"], ["", "def", "validate", "(", ")", ":", "\n", "\t", "validation_result", "=", "{", "}", "\n", "for", "dataset_name", "in", "validation_datasets", ":", "\n", "\t\t", "validation_result", "[", "dataset_name", "]", "=", "pipe", ".", "validate", "(", "*", "validation_datasets", "[", "dataset_name", "]", ",", "batch_size", "=", "args", ".", "batch", ")", "\n", "", "return", "validation_result", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.main.index_generator": [[421, 426], ["numpy.arange", "numpy.random.shuffle"], "function", ["None"], ["def", "index_generator", "(", "n", ")", ":", "\n", "\t", "indices", "=", "np", ".", "arange", "(", "0", ",", "n", ",", "dtype", "=", "np", ".", "int", ")", "\n", "while", "True", ":", "\n", "\t\t", "np", ".", "random", ".", "shuffle", "(", "indices", ")", "\n", "yield", "from", "indices", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.main.iterate_data": [[466, 479], ["main.index_generator", "len", "next", "numpy.random.randint", "iq.put", "numpy.transpose", "numpy.stack", "numpy.random.randint", "numpy.random.randint"], "function", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.main.index_generator"], ["def", "iterate_data", "(", "iq", ",", "dataset", ")", ":", "\n", "\t", "gen", "=", "index_generator", "(", "len", "(", "dataset", "[", "0", "]", ")", ")", "\n", "while", "True", ":", "\n", "\t\t", "i", "=", "next", "(", "gen", ")", "\n", "data", "=", "[", "item", "[", "i", "]", "for", "item", "in", "dataset", "]", "\n", "space_x", ",", "space_y", "=", "data", "[", "0", "]", ".", "shape", "[", "0", "]", "-", "orig_shape", "[", "0", "]", ",", "data", "[", "0", "]", ".", "shape", "[", "1", "]", "-", "orig_shape", "[", "1", "]", "\n", "crop_x", ",", "crop_y", "=", "space_x", "and", "np", ".", "random", ".", "randint", "(", "space_x", ")", ",", "space_y", "and", "np", ".", "random", ".", "randint", "(", "space_y", ")", "\n", "data", "=", "[", "np", ".", "transpose", "(", "arr", "[", "crop_x", ":", "crop_x", "+", "orig_shape", "[", "0", "]", ",", "crop_y", ":", "crop_y", "+", "orig_shape", "[", "1", "]", "]", ",", "(", "2", ",", "0", ",", "1", ")", ")", "for", "arr", "in", "data", "]", "\n", "# vertical flip", "\n", "if", "np", ".", "random", ".", "randint", "(", "2", ")", ":", "\n", "\t\t\t", "data", "=", "[", "arr", "[", ":", ",", ":", ",", ":", ":", "-", "1", "]", "for", "arr", "in", "data", "]", "\n", "data", "[", "2", "]", "=", "np", ".", "stack", "(", "[", "-", "data", "[", "2", "]", "[", "0", ",", ":", ",", ":", "]", ",", "data", "[", "2", "]", "[", "1", ",", ":", ",", ":", "]", "]", ",", "axis", "=", "0", ")", "\n", "", "iq", ".", "put", "(", "data", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.main.batch_samples": [[480, 487], ["oq.put", "range", "data_batch.append", "numpy.stack", "len", "iq.get", "zip"], "function", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.config.__init__.Reader.get"], ["", "", "def", "batch_samples", "(", "iqs", ",", "oq", ",", "batch_size", ")", ":", "\n", "\t", "while", "True", ":", "\n", "\t\t", "data_batch", "=", "[", "]", "\n", "for", "iq", "in", "iqs", ":", "\n", "\t\t\t", "for", "i", "in", "range", "(", "batch_size", "//", "len", "(", "iqs", ")", ")", ":", "\n", "\t\t\t\t", "data_batch", ".", "append", "(", "iq", ".", "get", "(", ")", ")", "\n", "", "", "oq", ".", "put", "(", "[", "np", ".", "stack", "(", "x", ",", "axis", "=", "0", ")", "for", "x", "in", "zip", "(", "*", "data_batch", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.main.remove_file": [[488, 495], ["iq.get", "os.remove", "log.log"], "function", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.config.__init__.Reader.get", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.logger.FileLog.log"], ["", "", "def", "remove_file", "(", "iq", ")", ":", "\n", "\t", "while", "True", ":", "\n", "\t\t", "f", "=", "iq", ".", "get", "(", ")", "\n", "try", ":", "\n", "\t\t\t", "os", ".", "remove", "(", "f", ")", "\n", "", "except", "OSError", "as", "e", ":", "\n", "\t\t\t", "log", ".", "log", "(", "'Remove failed'", "+", "e", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.main.start_daemon": [[499, 502], ["thread.start"], "function", ["None"], ["def", "start_daemon", "(", "thread", ")", ":", "\n", "\t", "thread", ".", "daemon", "=", "True", "\n", "thread", ".", "start", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.predict.predict": [[8, 67], ["reader.sintel.list_data", "reader.sintel.Flo", "reader.kitti.read_dataset_testing", "prefix.replace.replace", "kitti.read_dataset_testing.items", "os.path.exists", "os.mkdir", "sintel_dataset[].items", "os.path.exists", "os.mkdir", "os.path.join", "pipe.predict", "os.path.join", "zip", "os.path.exists", "os.mkdir", "os.path.join", "numpy.ones().astype", "cv2.imwrite", "os.path.exists", "os.mkdir", "pipe.predict", "os.path.basename", "os.path.basename", "os.path.join", "sintel.Flo.save", "reader.sintel.load", "os.path.dirname", "os.path.exists", "os.mkdir", "os.path.join", "numpy.ones", "list", "os.path.basename.replace", "zip"], "function", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.reader.sintel.list_data", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.reader.kitti.read_dataset_testing", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.main.mkdir", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.main.mkdir", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.pipeline.PipelineFlownet.predict", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.main.mkdir", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.main.mkdir", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.pipeline.PipelineFlownet.predict", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.reader.sintel.Flo.save", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.chairs.flo.load", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.main.mkdir"], ["def", "predict", "(", "pipe", ",", "prefix", ",", "batch_size", "=", "8", ",", "resize", "=", "None", ")", ":", "\n", "\n", "\t", "sintel_resize", "=", "(", "448", ",", "1024", ")", "if", "resize", "is", "None", "else", "resize", "\n", "sintel_dataset", "=", "sintel", ".", "list_data", "(", ")", "\n", "prefix", "=", "prefix", "+", "'_sintel'", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "prefix", ")", ":", "\n", "\t\t", "os", ".", "mkdir", "(", "prefix", ")", "\n", "\n", "", "flo", "=", "sintel", ".", "Flo", "(", "1024", ",", "436", ")", "\n", "\n", "for", "div", "in", "(", "'test'", ",", ")", ":", "\n", "\t\t", "for", "k", ",", "dataset", "in", "sintel_dataset", "[", "div", "]", ".", "items", "(", ")", ":", "\n", "\t\t\t", "if", "k", "==", "'clean'", ":", "\n", "\t\t\t\t", "continue", "\n", "", "output_folder", "=", "os", ".", "path", ".", "join", "(", "prefix", ",", "k", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "output_folder", ")", ":", "\n", "\t\t\t\t", "os", ".", "mkdir", "(", "output_folder", ")", "\n", "", "img1", ",", "img2", "=", "[", "[", "sintel", ".", "load", "(", "p", ")", "for", "p", "in", "data", "]", "for", "data", "in", "list", "(", "zip", "(", "*", "dataset", ")", ")", "[", ":", "2", "]", "]", "\n", "for", "result", ",", "entry", "in", "zip", "(", "pipe", ".", "predict", "(", "img1", ",", "img2", ",", "batch_size", "=", "1", ",", "resize", "=", "sintel_resize", ")", ",", "dataset", ")", ":", "\n", "\t\t\t\t", "flow", ",", "occ_mask", ",", "warped", "=", "result", "\n", "img1", "=", "entry", "[", "0", "]", "\n", "fname", "=", "os", ".", "path", ".", "basename", "(", "img1", ")", "\n", "seq", "=", "os", ".", "path", ".", "basename", "(", "os", ".", "path", ".", "dirname", "(", "img1", ")", ")", "\n", "seq_output_folder", "=", "os", ".", "path", ".", "join", "(", "output_folder", ",", "seq", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "seq_output_folder", ")", ":", "\n", "\t\t\t\t\t", "os", ".", "mkdir", "(", "seq_output_folder", ")", "\n", "", "flo", ".", "save", "(", "flow", ",", "os", ".", "path", ".", "join", "(", "seq_output_folder", ",", "fname", ".", "replace", "(", "'.png'", ",", "'.flo'", ")", ")", ")", "\n", "\n", "", "", "", "'''\n\tKITTI 2012: \n\tSubmission instructions:\u00a0For the optical flow benchmark, all flow fields of the test set must be provided in the root directory of a zip file using the file format described in the readme.txt (16 bit color png) and the file name convention of the ground truth (000000_10.png, ... , 000194_10.png).\n\n\tKITTI 2015:\n\tSubmission instructions:\u00a0Provide a zip file which contains the 'disp_0' directory (stereo), the 'flow' directory (flow), or the 'disp_0', 'disp_1' and 'flow' directories (scene flow) in its root folder. Use the file format and naming described in the readme.txt (000000_10.png,...,000199_10.png). \n\t'''", "\n", "\n", "kitti_resize", "=", "(", "512", ",", "1152", ")", "if", "resize", "is", "None", "else", "resize", "\n", "kitti_dataset", "=", "kitti", ".", "read_dataset_testing", "(", "resize", "=", "kitti_resize", ")", "\n", "prefix", "=", "prefix", ".", "replace", "(", "'sintel'", ",", "'kitti'", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "prefix", ")", ":", "\n", "\t\t", "os", ".", "mkdir", "(", "prefix", ")", "\n", "\n", "", "for", "k", ",", "dataset", "in", "kitti_dataset", ".", "items", "(", ")", ":", "\n", "\t\t", "output_folder", "=", "os", ".", "path", ".", "join", "(", "prefix", ",", "k", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "output_folder", ")", ":", "\n", "\t\t\t", "os", ".", "mkdir", "(", "output_folder", ")", "\n", "\n", "", "img1", "=", "kitti_dataset", "[", "k", "]", "[", "'image_0'", "]", "\n", "img2", "=", "kitti_dataset", "[", "k", "]", "[", "'image_1'", "]", "\n", "cnt", "=", "0", "\n", "for", "result", "in", "pipe", ".", "predict", "(", "img1", ",", "img2", ",", "batch_size", "=", "1", ",", "resize", "=", "kitti_resize", ")", ":", "\n", "\t\t\t", "flow", ",", "occ_mask", ",", "warped", "=", "result", "\n", "out_name", "=", "os", ".", "path", ".", "join", "(", "output_folder", ",", "'%06d_10.png'", "%", "cnt", ")", "\n", "cnt", "=", "cnt", "+", "1", "\n", "\n", "pred", "=", "np", ".", "ones", "(", "(", "flow", ".", "shape", "[", "0", "]", ",", "flow", ".", "shape", "[", "1", "]", ",", "3", ")", ")", ".", "astype", "(", "np", ".", "uint16", ")", "\n", "pred", "[", ":", ",", ":", ",", "2", "]", "=", "(", "64.0", "*", "(", "flow", "[", ":", ",", ":", ",", "0", "]", "+", "512", ")", ")", ".", "astype", "(", "np", ".", "uint16", ")", "\n", "pred", "[", ":", ",", ":", ",", "1", "]", "=", "(", "64.0", "*", "(", "flow", "[", ":", ",", ":", ",", "1", "]", "+", "512", ")", ")", ".", "astype", "(", "np", ".", "uint16", ")", "\n", "cv2", ".", "imwrite", "(", "out_name", ",", "pred", ")", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.logger.FileLog.__init__": [[8, 14], ["os.path.exists", "open", "shutil.copy"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "path", ",", "name", "=", "None", ",", "screen", "=", "False", ")", ":", "\n", "\t\t", "if", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "\n", "\t\t\t", "shutil", ".", "copy", "(", "path", ",", "path", "+", "'.bak'", ")", "\n", "", "self", ".", "_path", "=", "path", "\n", "self", ".", "f", "=", "open", "(", "path", ",", "'a'", ")", "\n", "self", ".", "screen", "=", "screen", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.logger.FileLog._localtime": [[15, 18], ["datetime.datetime.utcnow", "datetime.timedelta"], "methods", ["None"], ["", "@", "classmethod", "\n", "def", "_localtime", "(", "cls", ")", ":", "\n", "\t\t", "return", "datetime", ".", "datetime", ".", "utcnow", "(", ")", "+", "datetime", ".", "timedelta", "(", "hours", "=", "cls", ".", "__timezone__", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.logger.FileLog._timestamp": [[19, 21], ["logger.FileLog._localtime().strftime", "logger.FileLog._localtime"], "methods", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.logger.FileLog._localtime"], ["", "def", "_timestamp", "(", "self", ")", ":", "\n", "\t\t", "return", "(", "self", ".", "_localtime", "(", ")", ")", ".", "strftime", "(", "'[%Y/%m/%d %H:%M:%S] '", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.logger.FileLog.log": [[22, 27], ["logger.FileLog.f.write", "logger.FileLog.f.flush", "print", "logger.FileLog._timestamp", "logger.FileLog._timestamp"], "methods", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.logger.FileLog._timestamp", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.logger.FileLog._timestamp"], ["", "def", "log", "(", "self", ",", "msg", ",", "end", "=", "'\\n'", ")", ":", "\n", "\t\t", "self", ".", "f", ".", "write", "(", "self", ".", "_timestamp", "(", ")", "+", "msg", "+", "end", ")", "\n", "self", ".", "f", ".", "flush", "(", ")", "\n", "if", "self", ".", "screen", ":", "\n", "\t\t\t", "print", "(", "self", ".", "_timestamp", "(", ")", "+", "msg", "+", "end", ",", "end", "=", "''", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.logger.FileLog.close": [[28, 30], ["logger.FileLog.f.close"], "methods", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.logger.FileLog.close"], ["", "", "def", "close", "(", "self", ")", ":", "\n", "\t\t", "self", ".", "f", ".", "close", "(", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.path.list_dir": [[7, 16], ["re.compile", "os.listdir", "re.compile.match", "os.path.join", "pattern.match.groups", "os.path.join"], "function", ["None"], ["def", "list_dir", "(", "folder", ",", "pattern", ",", "groups", "=", "False", ")", ":", "\n", "\t", "pattern", "=", "re", ".", "compile", "(", "pattern", ")", "\n", "for", "f", "in", "os", ".", "listdir", "(", "folder", ")", ":", "\n", "\t\t", "m", "=", "pattern", ".", "match", "(", "f", ")", "\n", "if", "m", "is", "not", "None", ":", "\n", "\t\t\t", "if", "groups", ":", "\n", "\t\t\t\t", "yield", "(", "os", ".", "path", ".", "join", "(", "folder", ",", "f", ")", ",", ")", "+", "m", ".", "groups", "(", ")", "\n", "", "else", ":", "\n", "\t\t\t\t", "yield", "os", ".", "path", ".", "join", "(", "folder", ",", "f", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.path.find_log": [[17, 26], ["os.path.join", "list", "print", "path.list_dir", "len", "ValueError"], "function", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.path.list_dir"], ["", "", "", "", "def", "find_log", "(", "prefix", ")", ":", "\n", "\t", "log_dir", "=", "os", ".", "path", ".", "join", "(", "repo_root", ",", "'logs'", ")", "\n", "pattern", "=", "r'^(%s(.*\\d)?)\\.log$'", "%", "prefix", "\n", "rets", "=", "list", "(", "list_dir", "(", "log_dir", ",", "pattern", ",", "groups", "=", "True", ")", ")", "\n", "print", "(", "rets", ")", "\n", "if", "len", "(", "rets", ")", ">", "0", ":", "\n", "\t\t", "return", "rets", "[", "0", "]", "[", ":", "2", "]", "\n", "", "else", ":", "\n", "\t\t", "raise", "ValueError", "(", "\"Not found {}\"", ".", "format", "(", "prefix", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.path.find_checkpoints": [[27, 32], ["os.path.join", "list", "sorted", "path.list_dir", "int"], "function", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.path.list_dir"], ["", "", "def", "find_checkpoints", "(", "run_id", ")", ":", "\n", "\t", "weights_dir", "=", "os", ".", "path", ".", "join", "(", "repo_root", ",", "'weights'", ")", "\n", "pattern", "=", "r'^{}.*_(\\d+)\\.params$'", ".", "format", "(", "run_id", ")", "\n", "checkpoints", "=", "list", "(", "sorted", "(", "list_dir", "(", "weights_dir", ",", "pattern", ",", "groups", "=", "True", ")", ",", "key", "=", "lambda", "x", ":", "int", "(", "x", "[", "1", "]", ")", ")", ")", "\n", "return", "checkpoints", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.path.read_log": [[33, 54], ["open", "ln.find", "ln[].strip().split", "dict", "val.append", "ln[].strip", "exp_info.append", "item.split", "exp_info[].update"], "function", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.main.DictMovingAverage.update"], ["", "def", "read_log", "(", "fname", ")", ":", "\n", "\t", "val", "=", "[", "]", "\n", "exp_info", "=", "[", "]", "\n", "in_start", "=", "False", "\n", "with", "open", "(", "fname", ",", "'r'", ")", "as", "fi", ":", "\n", "\t\t", "for", "ln", "in", "fi", ":", "\n", "\t\t\t", "p", "=", "ln", ".", "find", "(", "'] '", ")", "\n", "items", "=", "ln", "[", "p", "+", "2", ":", "]", ".", "strip", "(", ")", ".", "split", "(", "', '", ")", "\n", "try", ":", "\n", "\t\t\t\t", "kvs", "=", "dict", "(", "[", "item", ".", "split", "(", "'='", ")", "for", "item", "in", "items", "]", ")", "\n", "", "except", ":", "\n", "\t\t\t\t", "pass", "\n", "", "if", "'val_epe'", "in", "kvs", ":", "\n", "\t\t\t\t", "val", ".", "append", "(", "kvs", ")", "\n", "", "elif", "'start'", "in", "kvs", ":", "\n", "\t\t\t\t", "exp_info", ".", "append", "(", "kvs", ")", "\n", "in_start", "=", "True", "\n", "", "elif", "in_start", ":", "\n", "\t\t\t\t", "exp_info", "[", "-", "1", "]", ".", "update", "(", "kvs", ")", "\n", "in_start", "=", "False", "\n", "", "", "", "return", "val", ",", "exp_info", "\n", "", ""]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.predict_new_data.find_checkpoint": [[25, 58], ["path.find_log", "int", "sys.stdout.flush", "checkpoint_str.split", "path.find_checkpoints", "path.read_log", "print", "path.find_checkpoints", "next", "filter", "print", "sys.stdout.flush", "setattr", "print", "eval"], "function", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.path.find_log", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.path.find_checkpoints", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.path.read_log", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.path.find_checkpoints"], ["def", "find_checkpoint", "(", "checkpoint_str", ")", ":", "\n", "# find checkpoint", "\n", "    ", "steps", "=", "0", "\n", "if", "checkpoint_str", "is", "not", "None", ":", "\n", "    \t", "if", "':'", "in", "checkpoint_str", ":", "\n", "    \t\t", "prefix", ",", "steps", "=", "checkpoint_str", ".", "split", "(", "':'", ")", "\n", "", "else", ":", "\n", "    \t\t", "prefix", "=", "checkpoint_str", "\n", "steps", "=", "None", "\n", "", "log_file", ",", "run_id", "=", "path", ".", "find_log", "(", "prefix", ")", "\n", "if", "steps", "is", "None", ":", "\n", "    \t\t", "checkpoint", ",", "steps", "=", "path", ".", "find_checkpoints", "(", "run_id", ")", "[", "-", "1", "]", "\n", "", "else", ":", "\n", "    \t\t", "checkpoints", "=", "path", ".", "find_checkpoints", "(", "run_id", ")", "\n", "try", ":", "\n", "    \t\t\t", "checkpoint", ",", "steps", "=", "next", "(", "filter", "(", "lambda", "t", ":", "t", "[", "1", "]", "==", "steps", ",", "checkpoints", ")", ")", "\n", "", "except", "StopIteration", ":", "\n", "    \t\t\t", "print", "(", "'The steps not found in checkpoints'", ",", "steps", ",", "checkpoints", ")", "\n", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "raise", "StopIteration", "\n", "", "", "steps", "=", "int", "(", "steps", ")", "\n", "if", "args", ".", "clear_steps", ":", "\n", "    \t\t", "steps", "=", "0", "\n", "", "else", ":", "\n", "    \t\t", "_", ",", "exp_info", "=", "path", ".", "read_log", "(", "log_file", ")", "\n", "exp_info", "=", "exp_info", "[", "-", "1", "]", "\n", "for", "k", "in", "args", ".", "__dict__", ":", "\n", "    \t\t\t", "if", "k", "in", "exp_info", "and", "k", "in", "(", "'tag'", ",", ")", ":", "\n", "    \t\t\t\t", "setattr", "(", "args", ",", "k", ",", "eval", "(", "exp_info", "[", "k", "]", ")", ")", "\n", "print", "(", "'{}={}, '", ".", "format", "(", "k", ",", "exp_info", "[", "k", "]", ")", ",", "end", "=", "''", ")", "\n", "", "", "print", "(", ")", "\n", "", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "", "return", "checkpoint", ",", "steps", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.predict_new_data.load_model": [[60, 65], ["open", "network.config.Reader", "os.path.join", "yaml.load"], "function", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.chairs.flo.load"], ["", "def", "load_model", "(", "config_str", ")", ":", "\n", "# load network configuration", "\n", "    ", "with", "open", "(", "os", ".", "path", ".", "join", "(", "repoRoot", ",", "'network'", ",", "'config'", ",", "config_str", ")", ")", "as", "f", ":", "\n", "    \t", "config", "=", "network", ".", "config", ".", "Reader", "(", "yaml", ".", "load", "(", "f", ")", ")", "\n", "", "return", "config", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.predict_new_data.instantiate_model": [[67, 72], ["network.get_pipeline", "mxnet.cpu", "mxnet.gpu", "map", "gpu_device.split"], "function", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.__init__.get_pipeline"], ["", "def", "instantiate_model", "(", "gpu_device", ",", "config", ")", ":", "\n", "    ", "ctx", "=", "[", "mx", ".", "cpu", "(", ")", "]", "if", "gpu_device", "==", "''", "else", "[", "mx", ".", "gpu", "(", "gpu_id", ")", "for", "gpu_id", "in", "map", "(", "int", ",", "gpu_device", ".", "split", "(", "','", ")", ")", "]", "\n", "# initiate", "\n", "pipe", "=", "get_pipeline", "(", "args", ".", "network", ",", "ctx", "=", "ctx", ",", "config", "=", "config", ")", "\n", "return", "pipe", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.predict_new_data.load_checkpoint": [[74, 86], ["print", "sys.stdout.flush", "getattr().get", "print", "pipe.load", "sys.stdout.flush", "print", "pipe.fix_head", "getattr"], "function", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.config.__init__.Reader.get", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.chairs.flo.load", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.fix_head"], ["", "def", "load_checkpoint", "(", "pipe", ",", "config", ",", "checkpoint", ")", ":", "\n", "# load parameters from given checkpoint", "\n", "    ", "print", "(", "'Load Checkpoint {}'", ".", "format", "(", "checkpoint", ")", ")", "\n", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "network_class", "=", "getattr", "(", "config", ".", "network", ",", "'class'", ")", ".", "get", "(", ")", "\n", "print", "(", "'load the weight for the network'", ")", "\n", "pipe", ".", "load", "(", "checkpoint", ")", "\n", "if", "network_class", "==", "'MaskFlownet'", ":", "\n", "   \t\t", "print", "(", "'fix the weight for the head network'", ")", "\n", "pipe", ".", "fix_head", "(", ")", "\n", "", "sys", ".", "stdout", ".", "flush", "(", ")", "\n", "return", "pipe", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.predict_new_data.predict_image_pair_flow": [[88, 92], ["pipe.predict"], "function", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.pipeline.PipelineFlownet.predict"], ["", "def", "predict_image_pair_flow", "(", "img1", ",", "img2", ",", "pipe", ",", "resize", "=", "None", ")", ":", "\n", "    ", "for", "result", "in", "pipe", ".", "predict", "(", "[", "img1", "]", ",", "[", "img2", "]", ",", "batch_size", "=", "1", ",", "resize", "=", "resize", ")", ":", "\n", "        ", "flow", ",", "occ_mask", ",", "warped", "=", "result", "\n", "", "return", "flow", ",", "occ_mask", ",", "warped", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.predict_new_data.create_video_clip_from_frames": [[94, 98], ["moviepy.editor.ImageSequenceClip"], "function", ["None"], ["", "def", "create_video_clip_from_frames", "(", "frame_list", ",", "fps", ")", ":", "\n", "    ", "\"\"\" Function takes a list of video frames and puts them together in a sequence\"\"\"", "\n", "visual_clip", "=", "ImageSequenceClip", "(", "frame_list", ",", "fps", "=", "fps", ")", "#put frames together using moviepy", "\n", "return", "visual_clip", "#return the ImageSequenceClip", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.predict_new_data.predict_video_flow": [[100, 119], ["cv2.VideoCapture", "cv2.VideoCapture.get", "cv2.VideoCapture.read", "prev_frames.append", "cv2.VideoCapture.read", "new_frames.append", "prev_frames.append", "cv2.VideoCapture.release", "pipe.predict"], "function", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.config.__init__.Reader.get", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.chairs.trainval.read", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.chairs.trainval.read", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.pipeline.PipelineFlownet.predict"], ["", "def", "predict_video_flow", "(", "video_filename", ",", "batch_size", ",", "resize", "=", "None", ")", ":", "\n", "    ", "cap", "=", "cv2", ".", "VideoCapture", "(", "video_filename", ")", "\n", "fps", "=", "cap", ".", "get", "(", "cv2", ".", "CAP_PROP_FPS", ")", "\n", "\n", "prev_frames", "=", "[", "]", "\n", "new_frames", "=", "[", "]", "\n", "has_frames", ",", "frame", "=", "cap", ".", "read", "(", ")", "\n", "prev_frames", ".", "append", "(", "frame", ")", "\n", "while", "True", ":", "\n", "        ", "has_frames", ",", "frame", "=", "cap", ".", "read", "(", ")", "\n", "if", "not", "has_frames", ":", "\n", "            ", "cap", ".", "release", "(", ")", "\n", "break", "\n", "", "new_frames", ".", "append", "(", "frame", ")", "\n", "prev_frames", ".", "append", "(", "frame", ")", "\n", "", "del", "prev_frames", "[", "-", "1", "]", "#delete the last frame of the video from prev_frames", "\n", "flow_video", "=", "[", "flow", "for", "flow", ",", "occ_mask", ",", "warped", "in", "pipe", ".", "predict", "(", "prev_frames", ",", "new_frames", ",", "batch_size", "=", "batch_size", ",", "resize", "=", "resize", ")", "]", "\n", "\n", "return", "flow_video", ",", "fps", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.augmentation.Augmentation.__init__": [[7, 27], ["mxnet.gluon.nn.HybridBlock.__init__", "tuple", "tuple", "numpy.array", "numpy.array", "tuple", "map", "tuple", "map", "numpy.flip().reshape", "numpy.flip().reshape", "map", "len", "ValueError", "numpy.flip", "numpy.flip"], "methods", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.reader.sintel.Flo.__init__"], ["\t", "def", "__init__", "(", "self", ",", "angle_range", ",", "zoom_range", ",", "translation_range", ",", "target_shape", ",", "orig_shape", ",", "batch_size", ",", "\n", "aspect_range", "=", "None", ",", "relative_angle", "=", "0", ",", "relative_scale", "=", "(", "1", ",", "1", ")", ",", "relative_translation", "=", "0", ")", ":", "\n", "\t\t", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_angle_range", "=", "tuple", "(", "map", "(", "lambda", "x", ":", "x", "/", "180", "*", "math", ".", "pi", ",", "angle_range", ")", ")", "\n", "self", ".", "_scale_range", "=", "zoom_range", "\n", "try", ":", "\n", "\t\t\t", "translation_range", "=", "tuple", "(", "translation_range", ")", "\n", "if", "len", "(", "translation_range", ")", "!=", "2", ":", "\n", "\t\t\t\t", "raise", "ValueError", "(", "'expect translation range to have shape [2,], but got {}'", ".", "format", "(", "translation_range", ")", ")", "\n", "", "", "except", "TypeError", ":", "\n", "\t\t\t", "translation_range", "=", "(", "-", "translation_range", ",", "translation_range", ")", "\n", "", "self", ".", "_translation_range", "=", "tuple", "(", "map", "(", "lambda", "x", ":", "x", "*", "2", ",", "translation_range", ")", ")", "\n", "self", ".", "_target_shape", "=", "np", ".", "array", "(", "target_shape", ")", "\n", "self", ".", "_orig_shape", "=", "np", ".", "array", "(", "orig_shape", ")", "\n", "self", ".", "_batch_size", "=", "batch_size", "\n", "self", ".", "_unit", "=", "np", ".", "flip", "(", "self", ".", "_target_shape", "-", "1", ",", "axis", "=", "0", ")", ".", "reshape", "(", "[", "2", ",", "1", "]", ")", "/", "np", ".", "flip", "(", "self", ".", "_orig_shape", "-", "1", ",", "axis", "=", "0", ")", ".", "reshape", "(", "[", "1", ",", "2", "]", ")", "\n", "self", ".", "_relative_scale", "=", "relative_scale", "\n", "self", ".", "_relative_angle", "=", "tuple", "(", "map", "(", "lambda", "x", ":", "x", "/", "180", "*", "math", ".", "pi", "*", "relative_angle", ",", "angle_range", ")", ")", "\n", "self", ".", "_relative_translation", "=", "(", "-", "relative_translation", "*", "2", ",", "relative_translation", "*", "2", ")", "\n", "self", ".", "_aspect_range", "=", "aspect_range", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.augmentation.Augmentation._get_relative_transform": [[28, 37], ["F.random.uniform", "F.random.uniform", "F.reshape", "F.zeros_like", "F.zeros_like", "F.zeros_like", "F.zeros_like", "F.ones_like", "F.stack", "F.random.uniform.cos", "F.random.uniform.cos", "F.random.uniform.sin", "F.random.uniform.sin"], "methods", ["None"], ["", "def", "_get_relative_transform", "(", "self", ",", "F", ")", ":", "\n", "\t\t", "aspect_ratio", "=", "(", "self", ".", "_target_shape", "[", "0", "]", "-", "1", ")", "/", "(", "self", ".", "_target_shape", "[", "1", "]", "-", "1", ")", "\n", "rotation", "=", "F", ".", "random", ".", "uniform", "(", "*", "self", ".", "_relative_angle", ",", "shape", "=", "(", "self", ".", "_batch_size", ")", ")", "\n", "scale", "=", "F", ".", "random", ".", "uniform", "(", "*", "self", ".", "_relative_scale", ",", "shape", "=", "(", "self", ".", "_batch_size", ")", ")", "\n", "affine_params", "=", "[", "scale", "*", "rotation", ".", "cos", "(", ")", ",", "scale", "*", "-", "rotation", ".", "sin", "(", ")", "*", "aspect_ratio", ",", "F", ".", "zeros_like", "(", "scale", ")", ",", "\n", "scale", "*", "rotation", ".", "sin", "(", ")", "/", "aspect_ratio", ",", "scale", "*", "rotation", ".", "cos", "(", ")", ",", "F", ".", "zeros_like", "(", "scale", ")", ",", "\n", "F", ".", "zeros_like", "(", "scale", ")", ",", "F", ".", "zeros_like", "(", "scale", ")", ",", "F", ".", "ones_like", "(", "scale", ")", "]", "\n", "affine", "=", "F", ".", "reshape", "(", "F", ".", "stack", "(", "*", "affine_params", ",", "axis", "=", "1", ")", ",", "[", "0", ",", "3", ",", "3", "]", ")", "\n", "return", "affine", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.augmentation.Augmentation.hybrid_forward": [[38, 67], ["F.random.uniform", "F.random.uniform", "F.stack", "augmentation.Augmentation._get_relative_transform", "F.reshape", "F.stack", "F.GridGenerator", "F.BilinearSampler", "F.GridGenerator", "F.BilinearSampler", "F.random.uniform", "F.random.uniform", "F.random.uniform", "F.batch_dot", "F.zeros", "F.zeros", "F.random.uniform", "F.zeros", "F.zeros", "F.random.uniform", "F.random.uniform", "F.random.uniform", "F.reshape", "list", "list", "F.random.uniform.cos", "F.random.uniform.sin", "F.random.uniform.cos", "F.random.uniform.sin"], "methods", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.augmentation.GeometryAugmentation._get_relative_transform"], ["", "def", "hybrid_forward", "(", "self", ",", "F", ",", "img1", ",", "img2", ")", ":", "\n", "\t\t", "rotation", "=", "F", ".", "random", ".", "uniform", "(", "*", "self", ".", "_angle_range", ",", "shape", "=", "(", "self", ".", "_batch_size", ")", ")", "\n", "scale", "=", "F", ".", "random", ".", "uniform", "(", "*", "self", ".", "_scale_range", ",", "shape", "=", "(", "self", ".", "_batch_size", ")", ")", "\n", "if", "self", ".", "_aspect_range", "is", "not", "None", ":", "\n", "\t\t\t", "aspect_ratio", "=", "F", ".", "random", ".", "uniform", "(", "*", "self", ".", "_aspect_range", ",", "shape", "=", "(", "self", ".", "_batch_size", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t", "aspect_ratio", "=", "1", "\n", "", "pad_x", ",", "pad_y", "=", "1", "-", "scale", "*", "self", ".", "_unit", "[", "0", ",", "0", "]", ",", "1", "-", "scale", "*", "self", ".", "_unit", "[", "1", ",", "1", "]", "\n", "translation_x", "=", "F", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "shape", "=", "(", "self", ".", "_batch_size", ",", ")", ")", "*", "pad_x", "+", "F", ".", "random", ".", "uniform", "(", "*", "self", ".", "_translation_range", ",", "shape", "=", "(", "self", ".", "_batch_size", ")", ")", "\n", "translation_y", "=", "F", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "shape", "=", "(", "self", ".", "_batch_size", ",", ")", ")", "*", "pad_y", "+", "F", ".", "random", ".", "uniform", "(", "*", "self", ".", "_translation_range", ",", "shape", "=", "(", "self", ".", "_batch_size", ")", ")", "\n", "affine_params", "=", "[", "scale", "*", "aspect_ratio", "*", "rotation", ".", "cos", "(", ")", "*", "self", ".", "_unit", "[", "0", ",", "0", "]", ",", "scale", "*", "aspect_ratio", "*", "-", "rotation", ".", "sin", "(", ")", "*", "self", ".", "_unit", "[", "1", ",", "0", "]", ",", "translation_x", ",", "\n", "scale", "*", "rotation", ".", "sin", "(", ")", "*", "self", ".", "_unit", "[", "0", ",", "1", "]", ",", "scale", "*", "rotation", ".", "cos", "(", ")", "*", "self", ".", "_unit", "[", "1", ",", "1", "]", ",", "translation_y", "]", "\n", "affine_params", "=", "F", ".", "stack", "(", "*", "affine_params", ",", "axis", "=", "1", ")", "\n", "\n", "rel_affine", "=", "self", ".", "_get_relative_transform", "(", "F", ")", "\n", "affine_2", "=", "F", ".", "reshape", "(", "F", ".", "batch_dot", "(", "F", ".", "reshape", "(", "affine_params", ",", "[", "0", ",", "2", ",", "3", "]", ")", ",", "rel_affine", ")", ",", "[", "0", ",", "6", "]", ")", "\n", "\n", "rel_translation", "=", "[", "F", ".", "zeros", "(", "(", "self", ".", "_batch_size", ",", ")", ")", ",", "F", ".", "zeros", "(", "(", "self", ".", "_batch_size", ",", ")", ")", ",", "F", ".", "random", ".", "uniform", "(", "*", "self", ".", "_relative_translation", ",", "shape", "=", "(", "self", ".", "_batch_size", ",", ")", ")", ",", "\n", "F", ".", "zeros", "(", "(", "self", ".", "_batch_size", ",", ")", ")", ",", "F", ".", "zeros", "(", "(", "self", ".", "_batch_size", ",", ")", ")", ",", "F", ".", "random", ".", "uniform", "(", "*", "self", ".", "_relative_translation", ",", "shape", "=", "(", "self", ".", "_batch_size", ")", ")", "]", "\n", "rel_translation", "=", "F", ".", "stack", "(", "*", "rel_translation", ",", "axis", "=", "1", ")", "\n", "affine_2", "=", "affine_2", "+", "rel_translation", "\n", "\n", "grid", "=", "F", ".", "GridGenerator", "(", "data", "=", "affine_params", ",", "transform_type", "=", "'affine'", ",", "target_shape", "=", "list", "(", "self", ".", "_target_shape", ")", ")", "\n", "img1", "=", "F", ".", "BilinearSampler", "(", "data", "=", "img1", ",", "grid", "=", "grid", ")", "\n", "\n", "grid_2", "=", "F", ".", "GridGenerator", "(", "data", "=", "affine_2", ",", "transform_type", "=", "'affine'", ",", "target_shape", "=", "list", "(", "self", ".", "_target_shape", ")", ")", "\n", "img2", "=", "F", ".", "BilinearSampler", "(", "data", "=", "img2", ",", "grid", "=", "grid_2", ")", "\n", "\n", "return", "img1", ",", "img2", "\n", "", ""]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.augmentation.ChromaticSHAugmentation.__init__": [[96, 107], ["mxnet.gluon.nn.HybridBlock.__init__"], "methods", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.reader.sintel.Flo.__init__"], ["\t", "def", "__init__", "(", "self", ",", "saturation", "=", "0.5", ",", "hue", "=", "0.5", ",", "batch_size", "=", "1", ",", "**", "kwargs", ")", ":", "\n", "\t\t", "super", "(", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "self", ".", "saturation", "=", "saturation", "\n", "self", ".", "hue", "=", "hue", "\n", "self", ".", "matrix_yiq", "=", "[", "[", "0.299", ",", "0.587", ",", "0.114", "]", ",", "\n", "[", "0.596", ",", "-", "0.274", ",", "-", "0.321", "]", ",", "\n", "[", "0.211", ",", "-", "0.523", ",", "-", "0.311", "]", "]", "\n", "self", ".", "matrix_rgb", "=", "[", "[", "1.", ",", "0.956", ",", "0.621", "]", ",", "\n", "[", "1.", ",", "-", "0.272", ",", "-", "0.647", "]", ",", "\n", "[", "1.", ",", "-", "1.107", ",", "1.705", "]", "]", "\n", "self", ".", "batch_size", "=", "batch_size", "\n", "", "def", "hybrid_forward", "(", "self", ",", "F", ",", "img", ")", ":", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.augmentation.ChromaticSHAugmentation.hybrid_forward": [[107, 118], ["F.random.uniform", "F.concat", "F.random.uniform", "F.cos", "F.sin", "sum", "range", "F.broadcast_mul", "F.concat.slice_axis", "range"], "methods", ["None"], ["", "def", "hybrid_forward", "(", "self", ",", "F", ",", "img", ")", ":", "\n", "\t\t", "aug", "=", "img", "\n", "alpha", "=", "1.0", "+", "F", ".", "random", ".", "uniform", "(", "-", "self", ".", "saturation", ",", "self", ".", "saturation", ",", "shape", "=", "(", "self", ".", "batch_size", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "theta", "=", "F", ".", "random", ".", "uniform", "(", "-", "self", ".", "hue", "*", "np", ".", "pi", ",", "self", ".", "hue", "*", "np", ".", "pi", ",", "shape", "=", "(", "self", ".", "batch_size", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "su", "=", "alpha", "*", "F", ".", "cos", "(", "theta", ")", "\n", "sw", "=", "alpha", "*", "F", ".", "sin", "(", "theta", ")", "\n", "matrix", "=", "[", "[", "0.299", "+", "0.701", "*", "su", "+", "0.168", "*", "sw", ",", "0.587", "-", "0.587", "*", "su", "+", "0.330", "*", "sw", ",", "0.114", "-", "0.114", "*", "su", "-", "0.497", "*", "sw", "]", ",", "\n", "[", "0.299", "-", "0.299", "*", "su", "-", "0.328", "*", "sw", ",", "0.587", "+", "0.413", "*", "su", "+", "0.035", "*", "sw", ",", "0.114", "-", "0.114", "*", "su", "+", "0.292", "*", "sw", "]", ",", "\n", "[", "0.299", "-", "0.300", "*", "su", "+", "1.250", "*", "sw", ",", "0.587", "-", "0.588", "*", "su", "-", "1.050", "*", "sw", ",", "0.114", "+", "0.886", "*", "su", "-", "0.203", "*", "sw", "]", "]", "\n", "aug", "=", "F", ".", "concat", "(", "*", "[", "sum", "(", "[", "F", ".", "broadcast_mul", "(", "aug", ".", "slice_axis", "(", "axis", "=", "1", ",", "begin", "=", "j", ",", "end", "=", "j", "+", "1", ")", ",", "matrix", "[", "i", "]", "[", "j", "]", ")", "for", "j", "in", "range", "(", "3", ")", "]", ")", "for", "i", "in", "range", "(", "3", ")", "]", ",", "dim", "=", "1", ")", "\n", "return", "aug", "\n", "", ""]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.augmentation.ColorAugmentation.__init__": [[169, 182], ["mxnet.gluon.nn.HybridBlock.__init__"], "methods", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.reader.sintel.Flo.__init__"], ["\t", "def", "__init__", "(", "self", ",", "contrast_range", ",", "brightness_sigma", ",", "channel_range", ",", "batch_size", ",", "shape", ",", "noise_range", ",", "\n", "saturation", ",", "hue", ",", "gamma_range", "=", "None", ",", "eigen_aug", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "\t\t", "super", "(", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "self", ".", "_contrast_range", "=", "contrast_range", "\n", "self", ".", "_brightness_sigma", "=", "brightness_sigma", "\n", "self", ".", "_channel_range", "=", "channel_range", "\n", "self", ".", "_batch_size", "=", "batch_size", "\n", "self", ".", "_shape", "=", "shape", "\n", "self", ".", "_noise_range", "=", "noise_range", "\n", "self", ".", "_gamma_range", "=", "gamma_range", "\n", "self", ".", "_eigen_aug", "=", "eigen_aug", "\n", "self", ".", "_saturation", "=", "saturation", "\n", "self", ".", "_hue", "=", "hue", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.augmentation.ColorAugmentation.hybrid_forward": [[183, 228], ["F.random.normal", "F.random.uniform", "F.random.uniform", "contrast.repeat.repeat.repeat", "brightness.repeat.repeat.repeat", "F.random.uniform", "F.random.uniform", "F.random.uniform", "F.random.uniform", "F.cos", "F.sin", "F.random.uniform", "F.concat", "F.random.normal", "F.mean", "F.broadcast_minus", "F.broadcast_mul", "F.broadcast_add", "F.clip", "ret.append", "F.cos().slice_axis", "F.sin().slice_axis", "F.concat", "F.broadcast_power", "range", "range", "F.exp", "F.cos", "F.sin", "sum", "tuple", "range", "sum", "F.broadcast_mul", "range", "F.broadcast_power.slice_axis", "range", "F.broadcast_mul", "F.broadcast_power.slice_axis", "range"], "methods", ["None"], ["", "def", "hybrid_forward", "(", "self", ",", "F", ",", "img1", ",", "img2", ")", ":", "\n", "\t\t", "contrast", "=", "F", ".", "random", ".", "uniform", "(", "*", "self", ".", "_contrast_range", ",", "shape", "=", "(", "self", ".", "_batch_size", ",", "1", ",", "1", ",", "1", ")", ")", "+", "1", "\n", "brightness", "=", "F", ".", "random", ".", "normal", "(", "scale", "=", "self", ".", "_brightness_sigma", ",", "shape", "=", "(", "self", ".", "_batch_size", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "channel", "=", "F", ".", "random", ".", "uniform", "(", "*", "self", ".", "_channel_range", ",", "shape", "=", "(", "self", ".", "_batch_size", ",", "3", ",", "1", ",", "1", ")", ")", "\n", "noise_sigma", "=", "F", ".", "random", ".", "uniform", "(", "*", "self", ".", "_noise_range", ")", "\n", "if", "self", ".", "_gamma_range", "is", "not", "None", ":", "\n", "\t\t\t", "gamma", "=", "F", ".", "random", ".", "uniform", "(", "*", "self", ".", "_gamma_range", ",", "shape", "=", "(", "self", ".", "_batch_size", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "\n", "", "contrast", "=", "contrast", ".", "repeat", "(", "repeats", "=", "3", ",", "axis", "=", "1", ")", "\n", "brightness", "=", "brightness", ".", "repeat", "(", "repeats", "=", "3", ",", "axis", "=", "1", ")", "\n", "\n", "alpha", "=", "1.0", "+", "F", ".", "random", ".", "uniform", "(", "-", "self", ".", "_saturation", ",", "self", ".", "_saturation", ",", "shape", "=", "(", "self", ".", "_batch_size", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "theta", "=", "F", ".", "random", ".", "uniform", "(", "-", "self", ".", "_hue", "*", "np", ".", "pi", ",", "self", ".", "_hue", "*", "np", ".", "pi", ",", "shape", "=", "(", "self", ".", "_batch_size", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "su", "=", "alpha", "*", "F", ".", "cos", "(", "theta", ")", "\n", "sw", "=", "alpha", "*", "F", ".", "sin", "(", "theta", ")", "\n", "sh_matrix", "=", "[", "[", "0.299", "+", "0.701", "*", "su", "+", "0.168", "*", "sw", ",", "0.587", "-", "0.587", "*", "su", "+", "0.330", "*", "sw", ",", "0.114", "-", "0.114", "*", "su", "-", "0.497", "*", "sw", "]", ",", "\n", "[", "0.299", "-", "0.299", "*", "su", "-", "0.328", "*", "sw", ",", "0.587", "+", "0.413", "*", "su", "+", "0.035", "*", "sw", ",", "0.114", "-", "0.114", "*", "su", "+", "0.292", "*", "sw", "]", ",", "\n", "[", "0.299", "-", "0.300", "*", "su", "+", "1.250", "*", "sw", ",", "0.587", "-", "0.588", "*", "su", "-", "1.050", "*", "sw", ",", "0.114", "+", "0.886", "*", "su", "-", "0.203", "*", "sw", "]", "]", "\n", "\n", "if", "self", ".", "_eigen_aug", ":", "\n", "\t\t\t", "spin_angle", "=", "F", ".", "random", ".", "uniform", "(", "low", "=", "-", "np", ".", "pi", ",", "high", "=", "np", ".", "pi", ",", "shape", "=", "(", "self", ".", "_batch_size", ",", "3", ",", "1", ",", "1", ")", ")", "\n", "cos_", "=", "[", "F", ".", "cos", "(", "spin_angle", ")", ".", "slice_axis", "(", "axis", "=", "1", ",", "begin", "=", "k", ",", "end", "=", "k", "+", "1", ")", "for", "k", "in", "range", "(", "3", ")", "]", "\n", "sin_", "=", "[", "F", ".", "sin", "(", "spin_angle", ")", ".", "slice_axis", "(", "axis", "=", "1", ",", "begin", "=", "k", ",", "end", "=", "k", "+", "1", ")", "for", "k", "in", "range", "(", "3", ")", "]", "\n", "spin_matrix", "=", "[", "[", "cos_", "[", "0", "]", "*", "cos_", "[", "1", "]", ",", "sin_", "[", "1", "]", "*", "cos_", "[", "2", "]", "+", "sin_", "[", "0", "]", "*", "cos_", "[", "1", "]", "*", "sin_", "[", "2", "]", ",", "sin_", "[", "1", "]", "*", "sin_", "[", "2", "]", "-", "sin_", "[", "0", "]", "*", "cos_", "[", "1", "]", "*", "cos_", "[", "2", "]", "]", ",", "\n", "[", "-", "cos_", "[", "0", "]", "*", "sin_", "[", "1", "]", ",", "cos_", "[", "1", "]", "*", "cos_", "[", "2", "]", "-", "sin_", "[", "0", "]", "*", "sin_", "[", "1", "]", "*", "sin_", "[", "2", "]", ",", "cos_", "[", "1", "]", "*", "sin_", "[", "2", "]", "+", "sin_", "[", "0", "]", "*", "sin_", "[", "1", "]", "*", "cos_", "[", "2", "]", "]", ",", "\n", "[", "sin_", "[", "0", "]", ",", "-", "cos_", "[", "0", "]", "*", "sin_", "[", "2", "]", ",", "cos_", "[", "0", "]", "*", "cos_", "[", "2", "]", "]", "]", "\n", "\n", "", "ret", "=", "[", "]", "\n", "for", "img", "in", "(", "img1", ",", "img2", ")", ":", "\n", "\t\t\t", "aug", "=", "img", "\n", "aug", "=", "F", ".", "concat", "(", "*", "[", "sum", "(", "[", "F", ".", "broadcast_mul", "(", "aug", ".", "slice_axis", "(", "axis", "=", "1", ",", "begin", "=", "j", ",", "end", "=", "j", "+", "1", ")", ",", "sh_matrix", "[", "i", "]", "[", "j", "]", ")", "for", "j", "in", "range", "(", "3", ")", "]", ")", "for", "i", "in", "range", "(", "3", ")", "]", ",", "dim", "=", "1", ")", "\n", "noise", "=", "F", ".", "random", ".", "normal", "(", "scale", "=", "1", ",", "shape", "=", "(", "self", ".", "_batch_size", ",", "3", ")", "+", "tuple", "(", "self", ".", "_shape", ")", ")", "\n", "aug", "=", "aug", "+", "noise", "*", "noise_sigma", "\n", "mean", "=", "F", ".", "mean", "(", "aug", ",", "keepdims", "=", "True", ",", "axis", "=", "(", "2", ",", "3", ")", ")", "\n", "aug", "=", "F", ".", "broadcast_minus", "(", "aug", ",", "mean", ")", "\n", "aug", "=", "F", ".", "broadcast_mul", "(", "aug", ",", "contrast", "*", "channel", ")", "\n", "if", "self", ".", "_eigen_aug", ":", "\n", "\t\t\t\t", "aug", "=", "F", ".", "concat", "(", "*", "[", "sum", "(", "[", "F", ".", "broadcast_mul", "(", "aug", ".", "slice_axis", "(", "axis", "=", "1", ",", "begin", "=", "j", ",", "end", "=", "j", "+", "1", ")", ",", "spin_matrix", "[", "i", "]", "[", "j", "]", ")", "for", "j", "in", "range", "(", "3", ")", "]", ")", "for", "i", "in", "range", "(", "3", ")", "]", ",", "dim", "=", "1", ")", "\n", "", "aug", "=", "F", ".", "broadcast_add", "(", "aug", ",", "mean", "*", "channel", "+", "brightness", ")", "\n", "aug", "=", "F", ".", "clip", "(", "aug", ",", "0", ",", "1", ")", "\n", "if", "self", ".", "_gamma_range", "is", "not", "None", ":", "\n", "\t\t\t\t", "aug", "=", "F", ".", "broadcast_power", "(", "aug", ",", "F", ".", "exp", "(", "gamma", ")", ")", "\n", "", "ret", ".", "append", "(", "aug", ")", "\n", "\n", "", "return", "ret", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.augmentation.GeometryAugmentation.__init__": [[230, 252], ["mxnet.gluon.nn.HybridBlock.__init__", "tuple", "tuple", "numpy.array", "numpy.array", "map", "tuple", "map", "numpy.flip().reshape", "numpy.flip().reshape", "tuple", "len", "ValueError", "map", "tuple", "numpy.flip", "numpy.flip", "map"], "methods", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.reader.sintel.Flo.__init__"], ["\t", "def", "__init__", "(", "self", ",", "angle_range", ",", "zoom_range", ",", "translation_range", ",", "target_shape", ",", "orig_shape", ",", "batch_size", ",", "\n", "aspect_range", "=", "None", ",", "relative_angle", "=", "None", ",", "relative_scale", "=", "None", ",", "relative_translation", "=", "None", ")", ":", "\n", "\t\t", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "_angle_range", "=", "tuple", "(", "map", "(", "lambda", "x", ":", "x", "/", "180", "*", "math", ".", "pi", ",", "angle_range", ")", ")", "\n", "self", ".", "_scale_range", "=", "zoom_range", "\n", "try", ":", "\n", "\t\t\t", "translation_range", "=", "tuple", "(", "translation_range", ")", "\n", "if", "len", "(", "translation_range", ")", "!=", "2", ":", "\n", "\t\t\t\t", "raise", "ValueError", "(", "'expect translation range to have shape [2,], but got {}'", ".", "format", "(", "translation_range", ")", ")", "\n", "", "", "except", "TypeError", ":", "\n", "\t\t\t", "translation_range", "=", "(", "-", "translation_range", ",", "translation_range", ")", "\n", "", "self", ".", "_translation_range", "=", "tuple", "(", "map", "(", "lambda", "x", ":", "x", "*", "2", ",", "translation_range", ")", ")", "\n", "self", ".", "_target_shape", "=", "np", ".", "array", "(", "target_shape", ")", "\n", "self", ".", "_orig_shape", "=", "np", ".", "array", "(", "orig_shape", ")", "\n", "self", ".", "_batch_size", "=", "batch_size", "\n", "self", ".", "_unit", "=", "np", ".", "flip", "(", "self", ".", "_target_shape", "-", "1", ",", "axis", "=", "0", ")", ".", "reshape", "(", "[", "2", ",", "1", "]", ")", "/", "np", ".", "flip", "(", "self", ".", "_orig_shape", "-", "1", ",", "axis", "=", "0", ")", ".", "reshape", "(", "[", "1", ",", "2", "]", ")", "\n", "self", ".", "_relative", "=", "relative_angle", "is", "not", "None", "\n", "if", "self", ".", "_relative", ":", "\n", "\t\t\t", "self", ".", "_relative_scale", "=", "relative_scale", "\n", "self", ".", "_relative_angle", "=", "tuple", "(", "map", "(", "lambda", "x", ":", "x", "/", "180", "*", "math", ".", "pi", "*", "relative_angle", ",", "angle_range", ")", ")", "\n", "self", ".", "_relative_translation", "=", "tuple", "(", "map", "(", "lambda", "x", ":", "x", "*", "relative_translation", ",", "self", ".", "_translation_range", ")", ")", "if", "relative_translation", "is", "not", "None", "else", "None", "\n", "", "self", ".", "_aspect_range", "=", "aspect_range", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.augmentation.GeometryAugmentation._get_relative_transform": [[253, 270], ["F.random.uniform", "F.random.uniform", "F.reshape", "F.stack", "F.reshape", "F.zeros_like", "F.zeros_like", "F.zeros_like", "F.zeros_like", "F.ones_like", "F.stack", "F.random.uniform.cos", "F.random.uniform.cos", "F.random.uniform.cos", "F.random.uniform.sin", "F.random.uniform.cos", "F.random.uniform.sin", "F.random.uniform.sin", "F.random.uniform.sin"], "methods", ["None"], ["", "def", "_get_relative_transform", "(", "self", ",", "F", ")", ":", "\n", "\t\t", "aspect_ratio", "=", "(", "self", ".", "_target_shape", "[", "0", "]", "-", "1", ")", "/", "(", "self", ".", "_target_shape", "[", "1", "]", "-", "1", ")", "\n", "rotation", "=", "F", ".", "random", ".", "uniform", "(", "*", "self", ".", "_relative_angle", ",", "shape", "=", "(", "self", ".", "_batch_size", ")", ")", "\n", "scale", "=", "F", ".", "random", ".", "uniform", "(", "*", "self", ".", "_relative_scale", ",", "shape", "=", "(", "self", ".", "_batch_size", ")", ")", "\n", "affine_params", "=", "[", "scale", "*", "rotation", ".", "cos", "(", ")", ",", "scale", "*", "-", "rotation", ".", "sin", "(", ")", "*", "aspect_ratio", ",", "F", ".", "zeros_like", "(", "scale", ")", ",", "\n", "scale", "*", "rotation", ".", "sin", "(", ")", "/", "aspect_ratio", ",", "scale", "*", "rotation", ".", "cos", "(", ")", ",", "F", ".", "zeros_like", "(", "scale", ")", ",", "\n", "F", ".", "zeros_like", "(", "scale", ")", ",", "F", ".", "zeros_like", "(", "scale", ")", ",", "F", ".", "ones_like", "(", "scale", ")", "]", "\n", "affine", "=", "F", ".", "reshape", "(", "F", ".", "stack", "(", "*", "affine_params", ",", "axis", "=", "1", ")", ",", "[", "0", ",", "3", ",", "3", "]", ")", "\n", "inverse", "=", "F", ".", "stack", "(", "\n", "rotation", ".", "cos", "(", ")", "/", "scale", ",", "\n", "rotation", ".", "sin", "(", ")", "/", "scale", ",", "\n", "-", "rotation", ".", "sin", "(", ")", "/", "scale", ",", "\n", "rotation", ".", "cos", "(", ")", "/", "scale", ",", "\n", "axis", "=", "1", "\n", ")", "\n", "inverse", "=", "F", ".", "reshape", "(", "inverse", ",", "[", "0", ",", "2", ",", "2", "]", ")", "\n", "return", "affine", ",", "inverse", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.augmentation.GeometryAugmentation.hybrid_forward": [[271, 340], ["F.random.uniform", "F.random.uniform", "F.abs", "F.minimum", "F.minimum", "F.stack", "F.stack", "F.reshape", "F.slice_axis.broadcast_like", "augmentation.GeometryAugmentation._get_relative_transform", "F.reshape", "F.concat", "F.GridGenerator", "F.broadcast_minus", "F.reshape.clip", "F.BilinearSampler", "F.slice_axis", "F.slice_axis", "F.slice_axis", "F.broadcast_div", "F.GridGenerator", "F.broadcast_minus", "F.BilinearSampler", "F.batch_dot", "F.reshape_like", "F.stack", "F.reshape", "F.reshape", "F.GridGenerator", "F.reshape", "F.batch_dot", "F.random.uniform", "F.random.uniform", "F.random.uniform", "F.broadcast_minus.slice_axis", "F.batch_dot", "F.random.uniform", "F.concat", "F.broadcast_minus", "F.broadcast_mul", "F.maximum", "F.minimum", "F.maximum", "F.broadcast_add", "F.batch_dot", "F.zeros", "F.zeros", "F.one_hot", "F.repeat", "F.broadcast_minus", "F.reshape_like", "F.random.uniform", "F.random.uniform", "F.random.uniform.cos", "F.random.uniform.sin", "F.random.uniform.cos", "F.reshape", "list", "list", "F.reshape", "F.arange", "F.reshape", "list", "F.batch_dot", "F.random.uniform.cos", "F.random.uniform.sin", "F.random.uniform.cos", "F.random.uniform.sin", "F.reshape.max", "F.reshape.min", "F.ones", "F.ones", "F.one_hot", "F.cos", "F.sin", "F.random.uniform.sin", "F.ones", "F.ones", "F.arange", "F.sin", "F.cos"], "methods", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.None.augmentation.GeometryAugmentation._get_relative_transform"], ["", "def", "hybrid_forward", "(", "self", ",", "F", ",", "img1", ",", "img2", ",", "flow", ",", "mask", ")", ":", "\n", "\t\t", "rotation", "=", "F", ".", "random", ".", "uniform", "(", "*", "self", ".", "_angle_range", ",", "shape", "=", "(", "self", ".", "_batch_size", ")", ")", "\n", "aspect_ratio", "=", "F", ".", "random", ".", "uniform", "(", "*", "self", ".", "_aspect_range", ",", "shape", "=", "(", "self", ".", "_batch_size", ")", ")", "if", "self", ".", "_aspect_range", "is", "not", "None", "else", "1", "\n", "scale", "=", "F", ".", "random", ".", "uniform", "(", "*", "self", ".", "_scale_range", ",", "shape", "=", "(", "self", ".", "_batch_size", ")", ")", "\n", "os", "=", "(", "self", ".", "_orig_shape", "[", "0", "]", "-", "1", ",", "self", ".", "_orig_shape", "[", "1", "]", "-", "1", ")", "\n", "ts", "=", "(", "self", ".", "_target_shape", "[", "0", "]", "-", "1", ",", "self", ".", "_target_shape", "[", "1", "]", "-", "1", ")", "\n", "abs_rotation", "=", "F", ".", "abs", "(", "rotation", ")", "\n", "scale", "=", "F", ".", "minimum", "(", "scale", ",", "os", "[", "1", "]", "/", "(", "aspect_ratio", "*", "(", "ts", "[", "0", "]", "*", "F", ".", "sin", "(", "abs_rotation", ")", "+", "ts", "[", "1", "]", "*", "F", ".", "cos", "(", "abs_rotation", ")", ")", ")", ")", "\n", "scale", "=", "F", ".", "minimum", "(", "scale", ",", "os", "[", "0", "]", "/", "(", "ts", "[", "0", "]", "*", "F", ".", "cos", "(", "abs_rotation", ")", "+", "ts", "[", "1", "]", "*", "F", ".", "sin", "(", "abs_rotation", ")", ")", ")", "\n", "pad_x", ",", "pad_y", "=", "1", "-", "scale", "*", "self", ".", "_unit", "[", "0", ",", "0", "]", ",", "1", "-", "scale", "*", "self", ".", "_unit", "[", "1", ",", "1", "]", "\n", "translation_x", "=", "F", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "shape", "=", "(", "self", ".", "_batch_size", ",", ")", ")", "*", "pad_x", "+", "F", ".", "random", ".", "uniform", "(", "*", "self", ".", "_translation_range", ",", "shape", "=", "(", "self", ".", "_batch_size", ")", ")", "\n", "translation_y", "=", "F", ".", "random", ".", "uniform", "(", "-", "1", ",", "1", ",", "shape", "=", "(", "self", ".", "_batch_size", ",", ")", ")", "*", "pad_y", "+", "F", ".", "random", ".", "uniform", "(", "*", "self", ".", "_translation_range", ",", "shape", "=", "(", "self", ".", "_batch_size", ")", ")", "\n", "affine_params", "=", "[", "scale", "*", "aspect_ratio", "*", "rotation", ".", "cos", "(", ")", "*", "self", ".", "_unit", "[", "0", ",", "0", "]", ",", "scale", "*", "aspect_ratio", "*", "-", "rotation", ".", "sin", "(", ")", "*", "self", ".", "_unit", "[", "1", ",", "0", "]", ",", "translation_x", ",", "\n", "scale", "*", "rotation", ".", "sin", "(", ")", "*", "self", ".", "_unit", "[", "0", ",", "1", "]", ",", "scale", "*", "rotation", ".", "cos", "(", ")", "*", "self", ".", "_unit", "[", "1", ",", "1", "]", ",", "translation_y", "]", "\n", "affine_params", "=", "F", ".", "stack", "(", "*", "affine_params", ",", "axis", "=", "1", ")", "\n", "affine_inverse", "=", "F", ".", "stack", "(", "\n", "rotation", ".", "cos", "(", ")", "/", "(", "scale", "*", "aspect_ratio", ")", ",", "\n", "rotation", ".", "sin", "(", ")", "/", "(", "scale", "*", "aspect_ratio", ")", ",", "\n", "-", "rotation", ".", "sin", "(", ")", "/", "scale", ",", "\n", "rotation", ".", "cos", "(", ")", "/", "scale", ",", "\n", "axis", "=", "1", "\n", ")", "\n", "linv", "=", "F", ".", "reshape", "(", "affine_inverse", ",", "[", "0", ",", "2", ",", "2", "]", ")", "\n", "\n", "mask", "=", "mask", ".", "broadcast_like", "(", "flow", ".", "slice_axis", "(", "axis", "=", "1", ",", "begin", "=", "0", ",", "end", "=", "1", ")", ")", "\n", "rel_affine", ",", "rel_inverse", "=", "self", ".", "_get_relative_transform", "(", "F", ")", "\n", "affine_2", "=", "F", ".", "reshape", "(", "F", ".", "batch_dot", "(", "F", ".", "reshape", "(", "affine_params", ",", "[", "0", ",", "2", ",", "3", "]", ")", ",", "rel_affine", ")", ",", "[", "0", ",", "6", "]", ")", "\n", "\n", "if", "self", ".", "_relative_translation", "is", "not", "None", ":", "\n", "\t\t\t", "rel_translation", "=", "F", ".", "random", ".", "uniform", "(", "*", "self", ".", "_relative_translation", ",", "shape", "=", "(", "self", ".", "_batch_size", ",", "2", ",", "1", ",", "1", ")", ")", "\n", "rel_scale", "=", "F", ".", "concat", "(", "F", ".", "ones", "(", "[", "self", ".", "_batch_size", ",", "1", ",", "1", ",", "1", "]", ")", "*", "(", "self", ".", "_orig_shape", "[", "1", "]", "-", "1", ")", "/", "2", ",", "\n", "F", ".", "ones", "(", "[", "self", ".", "_batch_size", ",", "1", ",", "1", ",", "1", "]", ")", "*", "(", "self", ".", "_orig_shape", "[", "0", "]", "-", "1", ")", "/", "2", ",", "dim", "=", "1", ")", "\n", "flow", "=", "F", ".", "broadcast_minus", "(", "flow", ",", "rel_translation", "*", "rel_scale", ")", "\n", "\n", "", "concat_img", "=", "F", ".", "concat", "(", "img1", ",", "mask", ",", "F", ".", "broadcast_mul", "(", "flow", ",", "mask", ")", ",", "dim", "=", "1", ")", "\n", "grid", "=", "F", ".", "GridGenerator", "(", "data", "=", "affine_params", ",", "transform_type", "=", "'affine'", ",", "target_shape", "=", "list", "(", "self", ".", "_target_shape", ")", ")", "\n", "force_translation", "=", "F", ".", "maximum", "(", "grid", ".", "max", "(", "axis", "=", "(", "2", ",", "3", ")", ",", "keepdims", "=", "True", ")", "-", "1", ",", "0", ")", "+", "F", ".", "minimum", "(", "grid", ".", "min", "(", "axis", "=", "(", "2", ",", "3", ")", ",", "keepdims", "=", "True", ")", "+", "1", ",", "0", ")", "\n", "grid", "=", "F", ".", "broadcast_minus", "(", "grid", ",", "force_translation", ")", "\n", "grid", "=", "grid", ".", "clip", "(", "-", "1", ",", "1", ")", "\n", "concat_img", "=", "F", ".", "BilinearSampler", "(", "data", "=", "concat_img", ",", "grid", "=", "grid", ")", "\n", "img1", "=", "F", ".", "slice_axis", "(", "concat_img", ",", "axis", "=", "1", ",", "begin", "=", "0", ",", "end", "=", "3", ")", "\n", "mask", "=", "F", ".", "slice_axis", "(", "concat_img", ",", "axis", "=", "1", ",", "begin", "=", "3", ",", "end", "=", "4", ")", "\n", "flow", "=", "F", ".", "slice_axis", "(", "concat_img", ",", "axis", "=", "1", ",", "begin", "=", "4", ",", "end", "=", "6", ")", "\n", "flow", "=", "F", ".", "broadcast_div", "(", "flow", ",", "F", ".", "maximum", "(", "mask", ",", "1e-8", ")", ")", "\n", "\n", "# relative", "\n", "grid_2", "=", "F", ".", "GridGenerator", "(", "data", "=", "affine_2", ",", "transform_type", "=", "'affine'", ",", "target_shape", "=", "list", "(", "self", ".", "_target_shape", ")", ")", "\n", "grid_2", "=", "F", ".", "broadcast_minus", "(", "grid_2", ",", "force_translation", ")", "\n", "if", "self", ".", "_relative_translation", "is", "not", "None", ":", "\n", "\t\t\t", "grid_2", "=", "F", ".", "broadcast_add", "(", "grid_2", ",", "rel_translation", ")", "\n", "", "img2", "=", "F", ".", "BilinearSampler", "(", "data", "=", "img2", ",", "grid", "=", "grid_2", ")", "\n", "\n", "inverse_2", "=", "F", ".", "batch_dot", "(", "rel_inverse", ",", "linv", ")", "\n", "flow", "=", "F", ".", "reshape_like", "(", "F", ".", "batch_dot", "(", "inverse_2", ",", "F", ".", "reshape", "(", "flow", ",", "(", "0", ",", "0", ",", "-", "3", ")", ")", ")", ",", "flow", ")", "\n", "\n", "scale", "=", "F", ".", "stack", "(", "F", ".", "ones", "(", "[", "self", ".", "_batch_size", "]", ")", "*", "(", "self", ".", "_target_shape", "[", "1", "]", "-", "1", ")", "/", "2", ",", "\n", "F", ".", "zeros", "(", "[", "self", ".", "_batch_size", "]", ")", ",", "\n", "F", ".", "zeros", "(", "[", "self", ".", "_batch_size", "]", ")", ",", "\n", "F", ".", "ones", "(", "[", "self", ".", "_batch_size", "]", ")", "*", "(", "self", ".", "_target_shape", "[", "0", "]", "-", "1", ")", "/", "2", ",", "\n", "axis", "=", "1", ")", "\n", "scale", "=", "F", ".", "reshape", "(", "scale", ",", "[", "0", ",", "2", ",", "2", "]", ")", "\n", "I", "=", "F", ".", "reshape", "(", "F", ".", "one_hot", "(", "F", ".", "arange", "(", "0", ",", "2", ")", ",", "depth", "=", "2", ")", ",", "[", "1", ",", "2", ",", "2", "]", ")", "\n", "grid", "=", "F", ".", "GridGenerator", "(", "data", "=", "F", ".", "reshape", "(", "F", ".", "one_hot", "(", "F", ".", "arange", "(", "0", ",", "2", ")", ",", "depth", "=", "3", ")", ",", "[", "1", ",", "6", "]", ")", ",", "\n", "transform_type", "=", "'affine'", ",", "\n", "target_shape", "=", "list", "(", "self", ".", "_target_shape", ")", ")", "\n", "grid", "=", "F", ".", "reshape", "(", "F", ".", "repeat", "(", "grid", ",", "axis", "=", "0", ",", "repeats", "=", "self", ".", "_batch_size", ")", ",", "[", "0", ",", "0", ",", "-", "3", "]", ")", "\n", "factor", "=", "F", ".", "batch_dot", "(", "F", ".", "broadcast_minus", "(", "rel_inverse", ",", "I", ")", ",", "scale", ")", "\n", "flow", "=", "flow", "+", "F", ".", "reshape_like", "(", "F", ".", "batch_dot", "(", "factor", ",", "grid", ")", ",", "flow", ")", "\n", "return", "img1", ",", "img2", ",", "flow", ",", "mask", "\n", "", "", ""]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.pipeline.PipelineFlownet.__init__": [[22, 51], ["pipeline.PipelineFlownet.network.hybridize", "pipeline.PipelineFlownet.network.collect_params().initialize", "mxnet.gluon.Trainer", "MaskFlownet.MaskFlownet.Upsample", "MaskFlownet.MaskFlownet.Upsample", "MaskFlownet.MaskFlownet.EpeLoss", "pipeline.PipelineFlownet.epeloss.hybridize", "MaskFlownet.MaskFlownet.EpeLossWithMask", "pipeline.PipelineFlownet.epeloss_with_mask.hybridize", "config.network.mw.get", "MaskFlownet.MaskFlownet.MultiscaleEpe", "pipeline.PipelineFlownet.multiscale_epe.hybridize", "layer.Reconstruction2DSmooth", "pipeline.PipelineFlownet.reconstruction.hybridize", "pipeline.build_network", "pipeline.PipelineFlownet.network.collect_params", "len", "getattr().get", "pipeline.PipelineFlownet.network.collect_params", "mxnet.initializer.MSRAPrelu", "config.optimizer.q.get", "getattr"], "methods", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.config.__init__.Reader.get", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.pipeline.build_network", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.config.__init__.Reader.get", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.config.__init__.Reader.get"], ["def", "__init__", "(", "self", ",", "ctx", ",", "config", ")", ":", "\n", "\t\t", "self", ".", "ctx", "=", "ctx", "\n", "self", ".", "network", "=", "build_network", "(", "getattr", "(", "config", ".", "network", ",", "'class'", ")", ".", "get", "(", "'MaskFlownet'", ")", ")", "(", "config", "=", "config", ")", "\n", "self", ".", "network", ".", "hybridize", "(", ")", "\n", "self", ".", "network", ".", "collect_params", "(", ")", ".", "initialize", "(", "init", "=", "mx", ".", "initializer", ".", "MSRAPrelu", "(", "slope", "=", "0.1", ")", ",", "ctx", "=", "self", ".", "ctx", ")", "\n", "self", ".", "trainer", "=", "gluon", ".", "Trainer", "(", "self", ".", "network", ".", "collect_params", "(", ")", ",", "'adam'", ",", "{", "'learning_rate'", ":", "1e-4", "}", ")", "\n", "self", ".", "strides", "=", "self", ".", "network", ".", "strides", "or", "[", "64", ",", "32", ",", "16", ",", "8", ",", "4", "]", "\n", "\n", "self", ".", "scale", "=", "self", ".", "strides", "[", "-", "1", "]", "\n", "self", ".", "upsampler", "=", "Upsample", "(", "self", ".", "scale", ")", "\n", "self", ".", "upsampler_mask", "=", "Upsample", "(", "self", ".", "scale", ")", "\n", "\n", "self", ".", "epeloss", "=", "EpeLoss", "(", ")", "\n", "self", ".", "epeloss", ".", "hybridize", "(", ")", "\n", "self", ".", "epeloss_with_mask", "=", "EpeLossWithMask", "(", ")", "\n", "self", ".", "epeloss_with_mask", ".", "hybridize", "(", ")", "\n", "\n", "multiscale_weights", "=", "config", ".", "network", ".", "mw", ".", "get", "(", "[", ".005", ",", ".01", ",", ".02", ",", ".08", ",", ".32", "]", ")", "\n", "if", "len", "(", "multiscale_weights", ")", "!=", "5", ":", "\n", "\t\t\t", "multiscale_weights", "=", "[", ".005", ",", ".01", ",", ".02", ",", ".08", ",", ".32", "]", "\n", "", "self", ".", "multiscale_epe", "=", "MultiscaleEpe", "(", "\n", "scales", "=", "self", ".", "strides", ",", "weights", "=", "multiscale_weights", ",", "match", "=", "'upsampling'", ",", "\n", "eps", "=", "1e-8", ",", "q", "=", "config", ".", "optimizer", ".", "q", ".", "get", "(", "None", ")", ")", "\n", "self", ".", "multiscale_epe", ".", "hybridize", "(", ")", "\n", "\n", "self", ".", "reconstruction", "=", "Reconstruction2DSmooth", "(", "3", ")", "\n", "self", ".", "reconstruction", ".", "hybridize", "(", ")", "\n", "\n", "self", ".", "lr_schedule", "=", "config", ".", "optimizer", ".", "learning_rate", ".", "value", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.pipeline.PipelineFlownet.save": [[52, 55], ["pipeline.PipelineFlownet.network.save_parameters", "pipeline.PipelineFlownet.trainer.save_states"], "methods", ["None"], ["", "def", "save", "(", "self", ",", "prefix", ")", ":", "\n", "\t\t", "self", ".", "network", ".", "save_parameters", "(", "prefix", "+", "'.params'", ")", "\n", "self", ".", "trainer", ".", "save_states", "(", "prefix", "+", "'.states'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.pipeline.PipelineFlownet.load": [[56, 58], ["pipeline.PipelineFlownet.network.load_parameters"], "methods", ["None"], ["", "def", "load", "(", "self", ",", "checkpoint", ")", ":", "\n", "\t\t", "self", ".", "network", ".", "load_parameters", "(", "checkpoint", ",", "ctx", "=", "self", ".", "ctx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.pipeline.PipelineFlownet.load_head": [[59, 61], ["pipeline.PipelineFlownet.network.load_head"], "methods", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.load_head"], ["", "def", "load_head", "(", "self", ",", "checkpoint", ")", ":", "\n", "\t\t", "self", ".", "network", ".", "load_head", "(", "checkpoint", ",", "ctx", "=", "self", ".", "ctx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.pipeline.PipelineFlownet.fix_head": [[62, 64], ["pipeline.PipelineFlownet.network.fix_head"], "methods", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.fix_head"], ["", "def", "fix_head", "(", "self", ")", ":", "\n", "\t\t", "self", ".", "network", ".", "fix_head", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.pipeline.PipelineFlownet.set_learning_rate": [[65, 76], ["pipeline.PipelineFlownet.trainer.set_learning_rate", "len"], "methods", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.pipeline.PipelineFlownet.set_learning_rate"], ["", "def", "set_learning_rate", "(", "self", ",", "steps", ")", ":", "\n", "\t\t", "i", "=", "0", "\n", "while", "i", "<", "len", "(", "self", ".", "lr_schedule", ")", "and", "steps", ">", "self", ".", "lr_schedule", "[", "i", "]", "[", "0", "]", ":", "\n", "\t\t\t", "i", "+=", "1", "\n", "", "try", ":", "\n", "\t\t\t", "lr", "=", "self", ".", "lr_schedule", "[", "i", "]", "[", "1", "]", "\n", "", "except", "IndexError", ":", "\n", "\t\t\t", "return", "False", "\n", "", "self", ".", "trainer", ".", "set_learning_rate", "(", "lr", ")", "\n", "self", ".", "_lr", "=", "lr", "\n", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.pipeline.PipelineFlownet.lr": [[77, 80], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "lr", "(", "self", ")", ":", "\n", "\t\t", "return", "self", ".", "_lr", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.pipeline.PipelineFlownet.loss": [[81, 84], ["pipeline.PipelineFlownet.multiscale_epe"], "methods", ["None"], ["", "def", "loss", "(", "self", ",", "pred", ",", "occ_masks", ",", "labels", ",", "masks", ")", ":", "\n", "\t\t", "loss", "=", "self", ".", "multiscale_epe", "(", "labels", ",", "masks", ",", "*", "pred", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.pipeline.PipelineFlownet.centralize": [[85, 88], ["mxnet.nd.concat().mean().reshape", "mxnet.nd.concat().mean", "mxnet.nd.concat"], "methods", ["None"], ["", "def", "centralize", "(", "self", ",", "img1", ",", "img2", ")", ":", "\n", "\t\t", "rgb_mean", "=", "nd", ".", "concat", "(", "img1", ",", "img2", ",", "dim", "=", "2", ")", ".", "mean", "(", "axis", "=", "(", "2", ",", "3", ")", ")", ".", "reshape", "(", "(", "-", "2", ",", "1", ",", "1", ")", ")", "\n", "return", "img1", "-", "rgb_mean", ",", "img2", "-", "rgb_mean", ",", "rgb_mean", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.pipeline.PipelineFlownet.train_batch": [[89, 116], ["map", "pipeline.PipelineFlownet.trainer.step", "numpy.full", "mxnet.autograd.record", "zip", "pipeline.PipelineFlownet.backward", "numpy.mean", "mxnet.gluon.utils.split_and_load", "geo_aug", "color_aug", "pipeline.PipelineFlownet.centralize", "pipeline.PipelineFlownet.network", "labels.flip.flip.flip", "pipeline.PipelineFlownet.loss", "pipeline.PipelineFlownet.epeloss_with_mask", "losses.append", "epes.append", "numpy.concatenate", "labels.flip.flip.astype", "pipeline.PipelineFlownet.upsampler", "pipeline.PipelineFlownet.asnumpy"], "methods", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.pipeline.PipelineFlownet.centralize", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.pipeline.PipelineFlownet.loss"], ["", "def", "train_batch", "(", "self", ",", "img1", ",", "img2", ",", "label", ",", "geo_aug", ",", "color_aug", ",", "mask", "=", "None", ")", ":", "\n", "\t\t", "losses", "=", "[", "]", "\n", "epes", "=", "[", "]", "\n", "batch_size", "=", "img1", ".", "shape", "[", "0", "]", "\n", "if", "mask", "is", "None", ":", "\n", "\t\t\t", "mask", "=", "np", ".", "full", "(", "shape", "=", "(", "batch_size", ",", "1", ",", "1", ",", "1", ")", ",", "fill_value", "=", "255", ",", "dtype", "=", "np", ".", "uint8", ")", "\n", "", "img1", ",", "img2", ",", "label", ",", "mask", "=", "map", "(", "lambda", "x", ":", "gluon", ".", "utils", ".", "split_and_load", "(", "x", ",", "self", ".", "ctx", ")", ",", "(", "img1", ",", "img2", ",", "label", ",", "mask", ")", ")", "\n", "\n", "with", "autograd", ".", "record", "(", ")", ":", "\n", "\t\t\t", "for", "img1s", ",", "img2s", ",", "labels", ",", "masks", "in", "zip", "(", "img1", ",", "img2", ",", "label", ",", "mask", ")", ":", "\n", "\t\t\t\t", "img1s", ",", "img2s", ",", "labels", ",", "masks", "=", "img1s", "/", "255.0", ",", "img2s", "/", "255.0", ",", "labels", ".", "astype", "(", "\"float32\"", ",", "copy", "=", "False", ")", ",", "masks", "/", "255.0", "\n", "img1s", ",", "img2s", ",", "labels", ",", "masks", "=", "geo_aug", "(", "img1s", ",", "img2s", ",", "labels", ",", "masks", ")", "\n", "img1s", ",", "img2s", "=", "color_aug", "(", "img1s", ",", "img2s", ")", "\n", "img1s", ",", "img2s", ",", "rgb_mean", "=", "self", ".", "centralize", "(", "img1s", ",", "img2s", ")", "\n", "pred", ",", "occ_masks", ",", "warpeds", "=", "self", ".", "network", "(", "img1s", ",", "img2s", ")", "\n", "\n", "labels", "=", "labels", ".", "flip", "(", "axis", "=", "1", ")", "\n", "loss", "=", "self", ".", "loss", "(", "pred", ",", "occ_masks", ",", "labels", ",", "masks", ")", "\n", "epe", "=", "self", ".", "epeloss_with_mask", "(", "self", ".", "upsampler", "(", "pred", "[", "-", "1", "]", ")", ",", "labels", ",", "masks", ")", "\n", "\n", "losses", ".", "append", "(", "loss", ")", "\n", "epes", ".", "append", "(", "epe", ")", "\n", "\n", "", "", "for", "loss", "in", "losses", ":", "\n", "\t\t\t", "loss", ".", "backward", "(", ")", "\n", "", "self", ".", "trainer", ".", "step", "(", "batch_size", ")", "\n", "return", "{", "\"epe\"", ":", "np", ".", "mean", "(", "np", ".", "concatenate", "(", "[", "epe", ".", "asnumpy", "(", ")", "for", "epe", "in", "epes", "]", ")", ")", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.pipeline.PipelineFlownet.do_batch_mx": [[117, 133], ["pipeline.PipelineFlownet.centralize", "pipeline.PipelineFlownet.network", "mxnet.nd.contrib.BilinearResize2D", "mxnet.nd.contrib.BilinearResize2D"], "methods", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.pipeline.PipelineFlownet.centralize"], ["", "def", "do_batch_mx", "(", "self", ",", "img1", ",", "img2", ",", "resize", "=", "None", ")", ":", "\n", "\t\t", "''' do a batch of samples range [0,1] with network preprocessing and padding\n\t\t'''", "\n", "img1", ",", "img2", ",", "_", "=", "self", ".", "centralize", "(", "img1", ",", "img2", ")", "\n", "shape", "=", "img1", ".", "shape", "\n", "if", "resize", "is", "None", ":", "\n", "\t\t\t", "pad_h", "=", "(", "64", "-", "shape", "[", "2", "]", "%", "64", ")", "%", "64", "\n", "pad_w", "=", "(", "64", "-", "shape", "[", "3", "]", "%", "64", ")", "%", "64", "\n", "", "else", ":", "\n", "\t\t\t", "pad_h", "=", "resize", "[", "0", "]", "-", "shape", "[", "2", "]", "\n", "pad_w", "=", "resize", "[", "1", "]", "-", "shape", "[", "3", "]", "\n", "", "if", "pad_h", "!=", "0", "or", "pad_w", "!=", "0", ":", "\n", "\t\t\t", "img1", "=", "nd", ".", "contrib", ".", "BilinearResize2D", "(", "img1", ",", "height", "=", "shape", "[", "2", "]", "+", "pad_h", ",", "width", "=", "shape", "[", "3", "]", "+", "pad_w", ")", "\n", "img2", "=", "nd", ".", "contrib", ".", "BilinearResize2D", "(", "img2", ",", "height", "=", "shape", "[", "2", "]", "+", "pad_h", ",", "width", "=", "shape", "[", "3", "]", "+", "pad_w", ")", "\n", "", "pred", ",", "flows", ",", "warpeds", "=", "self", ".", "network", "(", "img1", ",", "img2", ")", "\n", "return", "pred", ",", "flows", ",", "warpeds", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.pipeline.PipelineFlownet.do_batch": [[134, 148], ["pipeline.PipelineFlownet.do_batch_mx", "pipeline.PipelineFlownet.upsampler", "pipeline.PipelineFlownet.upsampler", "pipeline.PipelineFlownet.reconstruction", "mxnet.nd.contrib.BilinearResize2D", "pipeline.PipelineFlownet.epeloss_with_mask", "mxnet.nd.contrib.BilinearResize2D", "mxnet.nd.array().reshape", "mxnet.nd.array"], "methods", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.pipeline.PipelineFlownet.do_batch_mx"], ["", "def", "do_batch", "(", "self", ",", "img1", ",", "img2", ",", "label", "=", "None", ",", "mask", "=", "None", ",", "resize", "=", "None", ")", ":", "\n", "\t\t", "shape", "=", "img1", ".", "shape", "\n", "flows", ",", "occ_masks", ",", "_", "=", "self", ".", "do_batch_mx", "(", "img1", ",", "img2", ",", "resize", "=", "resize", ")", "\n", "flow", "=", "self", ".", "upsampler", "(", "flows", "[", "-", "1", "]", ")", "\n", "occ_mask", "=", "self", ".", "upsampler", "(", "occ_masks", "[", "0", "]", ")", "\n", "if", "shape", "[", "2", "]", "!=", "flow", ".", "shape", "[", "2", "]", "or", "shape", "[", "3", "]", "!=", "flow", ".", "shape", "[", "3", "]", ":", "\n", "\t\t\t", "flow", "=", "nd", ".", "contrib", ".", "BilinearResize2D", "(", "flow", ",", "height", "=", "shape", "[", "2", "]", ",", "width", "=", "shape", "[", "3", "]", ")", "*", "nd", ".", "array", "(", "\n", "[", "shape", "[", "d", "]", "/", "flow", ".", "shape", "[", "d", "]", "for", "d", "in", "(", "2", ",", "3", ")", "]", ",", "ctx", "=", "flow", ".", "context", ")", ".", "reshape", "(", "(", "1", ",", "2", ",", "1", ",", "1", ")", ")", "\n", "occ_mask", "=", "nd", ".", "contrib", ".", "BilinearResize2D", "(", "occ_mask", ",", "height", "=", "shape", "[", "2", "]", ",", "width", "=", "shape", "[", "3", "]", ")", "\n", "", "warp", "=", "self", ".", "reconstruction", "(", "img2", ",", "flow", ")", "\n", "epe", "=", "None", "\n", "if", "label", "is", "not", "None", "and", "mask", "is", "not", "None", ":", "\n", "\t\t\t", "epe", "=", "self", ".", "epeloss_with_mask", "(", "flow", ",", "label", ",", "mask", ")", "\n", "", "return", "flow", ",", "occ_mask", ",", "warp", ",", "epe", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.pipeline.PipelineFlownet.validate": [[149, 188], ["len", "range", "numpy.mean", "numpy.transpose", "numpy.transpose", "numpy.transpose", "numpy.transpose", "map", "zip", "np_epes.append", "numpy.concatenate", "numpy.stack", "numpy.stack", "numpy.stack", "numpy.stack", "mxnet.nd.sqrt", "labels.flip.flip.flip", "pipeline.PipelineFlownet.do_batch", "batch_epe.append", "numpy.concatenate", "numpy.full", "mxnet.nd.sum", "min", "mxnet.gluon.utils.split_and_load", "labels.flip.flip.astype", "mxnet.nd.square", "len", "len", "masks.sum", "epe.asnumpy", "pipeline.PipelineFlownet.validate.Norm"], "methods", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.pipeline.PipelineFlownet.do_batch"], ["", "def", "validate", "(", "self", ",", "img1", ",", "img2", ",", "label", ",", "mask", "=", "None", ",", "batch_size", "=", "1", ",", "resize", "=", "None", ",", "return_type", "=", "'epe'", ")", ":", "\n", "\t\t", "''' validate the whole dataset\n\t\t'''", "\n", "np_epes", "=", "[", "]", "\n", "size", "=", "len", "(", "img1", ")", "\n", "bs", "=", "batch_size", "\n", "if", "mask", "is", "None", ":", "\n", "\t\t\t", "mask", "=", "[", "np", ".", "full", "(", "shape", "=", "(", "1", ",", "1", ",", "1", ")", ",", "fill_value", "=", "255", ",", "dtype", "=", "np", ".", "uint8", ")", "]", "*", "size", "\n", "", "for", "j", "in", "range", "(", "0", ",", "size", ",", "bs", ")", ":", "\n", "\t\t\t", "batch_img1", "=", "img1", "[", "j", ":", "j", "+", "bs", "]", "\n", "batch_img2", "=", "img2", "[", "j", ":", "j", "+", "bs", "]", "\n", "batch_label", "=", "label", "[", "j", ":", "j", "+", "bs", "]", "\n", "batch_mask", "=", "mask", "[", "j", ":", "j", "+", "bs", "]", "\n", "\n", "batch_img1", "=", "np", ".", "transpose", "(", "np", ".", "stack", "(", "batch_img1", ",", "axis", "=", "0", ")", ",", "(", "0", ",", "3", ",", "1", ",", "2", ")", ")", "\n", "batch_img2", "=", "np", ".", "transpose", "(", "np", ".", "stack", "(", "batch_img2", ",", "axis", "=", "0", ")", ",", "(", "0", ",", "3", ",", "1", ",", "2", ")", ")", "\n", "batch_label", "=", "np", ".", "transpose", "(", "np", ".", "stack", "(", "batch_label", ",", "axis", "=", "0", ")", ",", "(", "0", ",", "3", ",", "1", ",", "2", ")", ")", "\n", "batch_mask", "=", "np", ".", "transpose", "(", "np", ".", "stack", "(", "batch_mask", ",", "axis", "=", "0", ")", ",", "(", "0", ",", "3", ",", "1", ",", "2", ")", ")", "\n", "\n", "def", "Norm", "(", "x", ")", ":", "\n", "\t\t\t\t", "return", "nd", ".", "sqrt", "(", "nd", ".", "sum", "(", "nd", ".", "square", "(", "x", ")", ",", "axis", "=", "1", ",", "keepdims", "=", "True", ")", ")", "\n", "\n", "", "batch_epe", "=", "[", "]", "\n", "ctx", "=", "self", ".", "ctx", "[", ":", "min", "(", "len", "(", "batch_img1", ")", ",", "len", "(", "self", ".", "ctx", ")", ")", "]", "\n", "nd_img1", ",", "nd_img2", ",", "nd_label", ",", "nd_mask", "=", "map", "(", "lambda", "x", ":", "gluon", ".", "utils", ".", "split_and_load", "(", "x", ",", "ctx", ",", "even_split", "=", "False", ")", ",", "(", "batch_img1", ",", "batch_img2", ",", "batch_label", ",", "batch_mask", ")", ")", "\n", "for", "img1s", ",", "img2s", ",", "labels", ",", "masks", "in", "zip", "(", "nd_img1", ",", "nd_img2", ",", "nd_label", ",", "nd_mask", ")", ":", "\n", "\t\t\t\t", "img1s", ",", "img2s", ",", "labels", ",", "masks", "=", "img1s", "/", "255.0", ",", "img2s", "/", "255.0", ",", "labels", ".", "astype", "(", "\"float32\"", ",", "copy", "=", "False", ")", ",", "masks", "/", "255.0", "\n", "labels", "=", "labels", ".", "flip", "(", "axis", "=", "1", ")", "\n", "flows", ",", "_", ",", "_", ",", "epe", "=", "self", ".", "do_batch", "(", "img1s", ",", "img2s", ",", "labels", ",", "masks", ",", "resize", "=", "resize", ")", "\n", "\n", "# calculate the metric for kitti dataset evaluation", "\n", "if", "return_type", "is", "not", "'epe'", ":", "\n", "\t\t\t\t\t", "eps", "=", "1e-8", "\n", "epe", "=", "(", "(", "Norm", "(", "flows", "-", "labels", ")", ">", "3", ")", "*", "(", "(", "Norm", "(", "flows", "-", "labels", ")", "/", "(", "Norm", "(", "labels", ")", "+", "eps", ")", ")", ">", "0.05", ")", "*", "masks", ")", ".", "sum", "(", "axis", "=", "0", ",", "exclude", "=", "True", ")", "/", "masks", ".", "sum", "(", "axis", "=", "0", ",", "exclude", "=", "True", ")", "\n", "\n", "", "batch_epe", ".", "append", "(", "epe", ")", "\n", "", "np_epes", ".", "append", "(", "np", ".", "concatenate", "(", "[", "epe", ".", "asnumpy", "(", ")", "for", "epe", "in", "batch_epe", "]", ")", ")", "\n", "\n", "", "return", "np", ".", "mean", "(", "np", ".", "concatenate", "(", "np_epes", ",", "axis", "=", "0", ")", ",", "axis", "=", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.pipeline.PipelineFlownet.predict": [[189, 224], ["len", "range", "numpy.transpose", "numpy.transpose", "map", "zip", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.transpose", "numpy.flip", "numpy.transpose", "numpy.transpose", "range", "numpy.stack", "numpy.stack", "pipeline.PipelineFlownet.do_batch", "batch_flow.append", "batch_occ_mask.append", "batch_warped.append", "len", "min", "mxnet.gluon.utils.split_and_load", "x.asnumpy", "x.asnumpy", "x.asnumpy", "len", "len"], "methods", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.pipeline.PipelineFlownet.do_batch"], ["", "def", "predict", "(", "self", ",", "img1", ",", "img2", ",", "batch_size", ",", "resize", "=", "None", ")", ":", "\n", "\t\t", "''' predict the whole dataset\n\t\t'''", "\n", "size", "=", "len", "(", "img1", ")", "\n", "bs", "=", "batch_size", "\n", "for", "j", "in", "range", "(", "0", ",", "size", ",", "bs", ")", ":", "\n", "\t\t\t", "batch_img1", "=", "img1", "[", "j", ":", "j", "+", "bs", "]", "\n", "batch_img2", "=", "img2", "[", "j", ":", "j", "+", "bs", "]", "\n", "\n", "batch_img1", "=", "np", ".", "transpose", "(", "np", ".", "stack", "(", "batch_img1", ",", "axis", "=", "0", ")", ",", "(", "0", ",", "3", ",", "1", ",", "2", ")", ")", "\n", "batch_img2", "=", "np", ".", "transpose", "(", "np", ".", "stack", "(", "batch_img2", ",", "axis", "=", "0", ")", ",", "(", "0", ",", "3", ",", "1", ",", "2", ")", ")", "\n", "\n", "batch_flow", "=", "[", "]", "\n", "batch_occ_mask", "=", "[", "]", "\n", "batch_warped", "=", "[", "]", "\n", "\n", "ctx", "=", "self", ".", "ctx", "[", ":", "min", "(", "len", "(", "batch_img1", ")", ",", "len", "(", "self", ".", "ctx", ")", ")", "]", "\n", "nd_img1", ",", "nd_img2", "=", "map", "(", "lambda", "x", ":", "gluon", ".", "utils", ".", "split_and_load", "(", "x", ",", "ctx", ",", "even_split", "=", "False", ")", ",", "(", "batch_img1", ",", "batch_img2", ")", ")", "\n", "for", "img1s", ",", "img2s", "in", "zip", "(", "nd_img1", ",", "nd_img2", ")", ":", "\n", "\t\t\t\t", "img1s", ",", "img2s", "=", "img1s", "/", "255.0", ",", "img2s", "/", "255.0", "\n", "flow", ",", "occ_mask", ",", "warped", ",", "_", "=", "self", ".", "do_batch", "(", "img1s", ",", "img2s", ",", "resize", "=", "resize", ")", "\n", "batch_flow", ".", "append", "(", "flow", ")", "\n", "batch_occ_mask", ".", "append", "(", "occ_mask", ")", "\n", "batch_warped", ".", "append", "(", "warped", ")", "\n", "\n", "", "flow", "=", "np", ".", "concatenate", "(", "[", "x", ".", "asnumpy", "(", ")", "for", "x", "in", "batch_flow", "]", ")", "\n", "occ_mask", "=", "np", ".", "concatenate", "(", "[", "x", ".", "asnumpy", "(", ")", "for", "x", "in", "batch_occ_mask", "]", ")", "\n", "warped", "=", "np", ".", "concatenate", "(", "[", "x", ".", "asnumpy", "(", ")", "for", "x", "in", "batch_warped", "]", ")", "\n", "\n", "flow", "=", "np", ".", "transpose", "(", "flow", ",", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", "\n", "flow", "=", "np", ".", "flip", "(", "flow", ",", "axis", "=", "-", "1", ")", "\n", "occ_mask", "=", "np", ".", "transpose", "(", "occ_mask", ",", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", "\n", "warped", "=", "np", ".", "transpose", "(", "warped", ",", "(", "0", ",", "2", ",", "3", ",", "1", ")", ")", "\n", "for", "k", "in", "range", "(", "len", "(", "flow", ")", ")", ":", "\n", "\t\t\t\t", "yield", "flow", "[", "k", "]", ",", "occ_mask", "[", "k", "]", ",", "warped", "[", "k", "]", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.pipeline.build_network": [[9, 11], ["eval"], "function", ["None"], ["def", "build_network", "(", "name", ")", ":", "\n", "\t", "return", "eval", "(", "name", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.pipeline.get_coords": [[12, 17], ["mxnet.nd.arange().reshape().tile", "mxnet.nd.arange().reshape().tile", "mxnet.nd.concat", "mxnet.nd.arange().reshape", "mxnet.nd.arange().reshape", "mxnet.nd.arange", "mxnet.nd.arange"], "function", ["None"], ["", "def", "get_coords", "(", "img", ")", ":", "\n", "\t", "shape", "=", "img", ".", "shape", "\n", "range_x", "=", "nd", ".", "arange", "(", "shape", "[", "2", "]", ",", "ctx", "=", "img", ".", "context", ")", ".", "reshape", "(", "shape", "=", "(", "1", ",", "1", ",", "-", "1", ",", "1", ")", ")", ".", "tile", "(", "reps", "=", "(", "shape", "[", "0", "]", ",", "1", ",", "1", ",", "shape", "[", "3", "]", ")", ")", "\n", "range_y", "=", "nd", ".", "arange", "(", "shape", "[", "3", "]", ",", "ctx", "=", "img", ".", "context", ")", ".", "reshape", "(", "shape", "=", "(", "1", ",", "1", ",", "1", ",", "-", "1", ")", ")", ".", "tile", "(", "reps", "=", "(", "shape", "[", "0", "]", ",", "1", ",", "shape", "[", "2", "]", ",", "1", ")", ")", "\n", "return", "nd", ".", "concat", "(", "range_x", ",", "range_y", ",", "dim", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.layer.Reconstruction2D.__init__": [[9, 13], ["mxnet.gluon.nn.HybridBlock.__init__"], "methods", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.reader.sintel.Flo.__init__"], ["\t", "def", "__init__", "(", "self", ",", "in_channels", "=", "1", ",", "block_grad", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "\t\t", "super", "(", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "block_grad", "=", "block_grad", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.layer.Reconstruction2D.hybrid_forward": [[14, 19], ["F.GridGenerator", "F.BilinearSampler", "F.BlockGrad", "F.BlockGrad.flip"], "methods", ["None"], ["", "def", "hybrid_forward", "(", "self", ",", "F", ",", "x", ",", "flow", ")", ":", "\n", "\t\t", "if", "self", ".", "block_grad", ":", "\n", "\t\t\t", "flow", "=", "F", ".", "BlockGrad", "(", "flow", ")", "\n", "", "grid", "=", "F", ".", "GridGenerator", "(", "data", "=", "flow", ".", "flip", "(", "axis", "=", "1", ")", ",", "transform_type", "=", "\"warp\"", ")", "\n", "return", "F", ".", "BilinearSampler", "(", "x", ",", "grid", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.layer.Reconstruction2DSmooth.__init__": [[21, 25], ["mxnet.gluon.nn.HybridBlock.__init__"], "methods", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.reader.sintel.Flo.__init__"], ["\t", "def", "__init__", "(", "self", ",", "in_channels", "=", "1", ",", "block_grad", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "\t\t", "super", "(", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "block_grad", "=", "block_grad", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.layer.Reconstruction2DSmooth.hybrid_forward": [[26, 31], ["F.GridGenerator().clip", "F.BilinearSampler", "F.BlockGrad", "F.GridGenerator", "F.BlockGrad.flip"], "methods", ["None"], ["", "def", "hybrid_forward", "(", "self", ",", "F", ",", "x", ",", "flow", ")", ":", "\n", "\t\t", "if", "self", ".", "block_grad", ":", "\n", "\t\t\t", "flow", "=", "F", ".", "BlockGrad", "(", "flow", ")", "\n", "", "grid", "=", "F", ".", "GridGenerator", "(", "data", "=", "flow", ".", "flip", "(", "axis", "=", "1", ")", ",", "transform_type", "=", "\"warp\"", ")", ".", "clip", "(", "-", "1", ",", "1", ")", "\n", "return", "F", ".", "BilinearSampler", "(", "x", ",", "grid", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.layer.DeformableConv2D.__init__": [[75, 116], ["mxnet.gluon.nn.HybridBlock.__init__", "layer.DeformableConv2D.name_scope", "isinstance", "isinstance", "isinstance", "isinstance", "layer.DeformableConv2D.params.get", "layer.DeformableConv2D.params.get", "mxnet.gluon.nn.Activation", "len", "len", "len"], "methods", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.reader.sintel.Flo.__init__", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.config.__init__.Reader.get", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.config.__init__.Reader.get"], ["def", "__init__", "(", "self", ",", "channels", ",", "kernel_size", ",", "strides", "=", "1", ",", "padding", "=", "0", ",", "dilation", "=", "1", ",", "\n", "groups", "=", "1", ",", "layout", "=", "'NCHW'", ",", "num_deformable_group", "=", "1", ",", "in_channels", "=", "0", ",", "activation", "=", "None", ",", "use_bias", "=", "True", ",", "\n", "weight_initializer", "=", "None", ",", "bias_initializer", "=", "'zeros'", ",", "\n", "prefix", "=", "None", ",", "params", "=", "None", ")", ":", "\n", "\t\t", "super", "(", ")", ".", "__init__", "(", "prefix", "=", "prefix", ",", "params", "=", "params", ")", "\n", "with", "self", ".", "name_scope", "(", ")", ":", "\n", "\t\t\t", "self", ".", "_channels", "=", "channels", "\n", "self", ".", "_in_channels", "=", "in_channels", "\n", "if", "isinstance", "(", "kernel_size", ",", "numeric_types", ")", ":", "\n", "\t\t\t\t", "kernel_size", "=", "(", "kernel_size", ",", ")", "*", "2", "\n", "", "if", "isinstance", "(", "strides", ",", "numeric_types", ")", ":", "\n", "\t\t\t\t", "strides", "=", "(", "strides", ",", ")", "*", "len", "(", "kernel_size", ")", "\n", "", "if", "isinstance", "(", "padding", ",", "numeric_types", ")", ":", "\n", "\t\t\t\t", "padding", "=", "(", "padding", ",", ")", "*", "len", "(", "kernel_size", ")", "\n", "", "if", "isinstance", "(", "dilation", ",", "numeric_types", ")", ":", "\n", "\t\t\t\t", "dilation", "=", "(", "dilation", ",", ")", "*", "len", "(", "kernel_size", ")", "\n", "", "self", ".", "_kwargs", "=", "{", "\n", "'kernel'", ":", "kernel_size", ",", "'stride'", ":", "strides", ",", "'dilate'", ":", "dilation", ",", "\n", "'pad'", ":", "padding", ",", "'num_filter'", ":", "channels", ",", "'num_group'", ":", "groups", ",", "\n", "'no_bias'", ":", "not", "use_bias", ",", "'layout'", ":", "layout", ",", "\n", "'num_deformable_group'", ":", "num_deformable_group", "}", "\n", "\n", "wshapes", "=", "[", "\n", "(", ")", ",", "\n", "(", "channels", ",", "in_channels", ")", "+", "kernel_size", ",", "\n", "(", "channels", ",", ")", "\n", "]", "\n", "self", ".", "weight", "=", "self", ".", "params", ".", "get", "(", "'weight'", ",", "shape", "=", "wshapes", "[", "1", "]", ",", "\n", "init", "=", "weight_initializer", ",", "\n", "allow_deferred_init", "=", "True", ")", "\n", "if", "use_bias", ":", "\n", "\t\t\t\t", "self", ".", "bias", "=", "self", ".", "params", ".", "get", "(", "'bias'", ",", "shape", "=", "wshapes", "[", "2", "]", ",", "\n", "init", "=", "bias_initializer", ",", "\n", "allow_deferred_init", "=", "True", ")", "\n", "", "else", ":", "\n", "\t\t\t\t", "self", ".", "bias", "=", "None", "\n", "\n", "", "if", "activation", "is", "not", "None", ":", "\n", "\t\t\t\t", "self", ".", "act", "=", "nn", ".", "Activation", "(", "activation", ",", "prefix", "=", "activation", "+", "'_'", ")", "\n", "", "else", ":", "\n", "\t\t\t\t", "self", ".", "act", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.layer.DeformableConv2D.hybrid_forward": [[117, 125], ["F.contrib.DeformableConvolution", "F.contrib.DeformableConvolution", "layer.DeformableConv2D.act"], "methods", ["None"], ["", "", "", "def", "hybrid_forward", "(", "self", ",", "F", ",", "x", ",", "offset", ",", "weight", ",", "bias", "=", "None", ")", ":", "\n", "\t\t", "if", "bias", "is", "None", ":", "\n", "\t\t\t", "act", "=", "F", ".", "contrib", ".", "DeformableConvolution", "(", "x", ",", "offset", ",", "weight", ",", "name", "=", "'fwd'", ",", "**", "self", ".", "_kwargs", ")", "\n", "", "else", ":", "\n", "\t\t\t", "act", "=", "F", ".", "contrib", ".", "DeformableConvolution", "(", "x", ",", "offset", ",", "weight", ",", "bias", ",", "name", "=", "'fwd'", ",", "**", "self", ".", "_kwargs", ")", "\n", "", "if", "self", ".", "act", "is", "not", "None", ":", "\n", "\t\t\t", "act", "=", "self", ".", "act", "(", "act", ")", "\n", "", "return", "act", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.layer.DeformableConv2D._alias": [[126, 128], ["None"], "methods", ["None"], ["", "def", "_alias", "(", "self", ")", ":", "\n", "\t\t", "return", "'deformable_conv'", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.layer.DeformableConv2D.__repr__": [[129, 145], ["len", "s.format"], "methods", ["None"], ["", "def", "__repr__", "(", "self", ")", ":", "\n", "\t\t", "s", "=", "'{name}({mapping}, kernel_size={kernel}, stride={stride}'", "\n", "len_kernel_size", "=", "len", "(", "self", ".", "_kwargs", "[", "'kernel'", "]", ")", "\n", "if", "self", ".", "_kwargs", "[", "'pad'", "]", "!=", "(", "0", ",", ")", "*", "len_kernel_size", ":", "\n", "\t\t\t", "s", "+=", "', padding={pad}'", "\n", "", "if", "self", ".", "_kwargs", "[", "'dilate'", "]", "!=", "(", "1", ",", ")", "*", "len_kernel_size", ":", "\n", "\t\t\t", "s", "+=", "', dilation={dilate}'", "\n", "", "if", "self", ".", "_kwargs", "[", "'num_group'", "]", "!=", "1", ":", "\n", "\t\t\t", "s", "+=", "', groups={num_group}'", "\n", "", "if", "self", ".", "bias", "is", "None", ":", "\n", "\t\t\t", "s", "+=", "', bias=False'", "\n", "", "s", "+=", "')'", "\n", "shape", "=", "self", ".", "weight", ".", "shape", "\n", "return", "s", ".", "format", "(", "name", "=", "self", ".", "__class__", ".", "__name__", ",", "\n", "mapping", "=", "'{0} -> {1}'", ".", "format", "(", "shape", "[", "1", "]", "if", "shape", "[", "1", "]", "else", "None", ",", "shape", "[", "0", "]", ")", ",", "\n", "**", "self", ".", "_kwargs", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.Downsample.__init__": [[7, 10], ["mxnet.gluon.nn.HybridBlock.__init__"], "methods", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.reader.sintel.Flo.__init__"], ["\t", "def", "__init__", "(", "self", ",", "factor", ",", "**", "kwargs", ")", ":", "\n", "\t\t", "super", "(", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "self", ".", "factor", "=", "factor", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.Downsample._kernel2d": [[11, 16], ["F.broadcast_mul", "F.reshape", "F.expand_dims", "F.expand_dims", "F.abs", "F.arange"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_kernel2d", "(", "F", ",", "w", ")", ":", "\n", "\t\t", "kernel", "=", "(", "(", "w", "+", "1", ")", "-", "F", ".", "abs", "(", "(", "w", "-", "F", ".", "arange", "(", "0", ",", "w", "*", "2", "+", "1", ")", ")", ")", ")", "/", "(", "2", "*", "w", "+", "1", ")", "\n", "kernel", "=", "F", ".", "broadcast_mul", "(", "F", ".", "expand_dims", "(", "kernel", ",", "axis", "=", "0", ")", ",", "F", ".", "expand_dims", "(", "kernel", ",", "axis", "=", "1", ")", ")", "\n", "return", "F", ".", "reshape", "(", "kernel", ",", "(", "1", ",", "1", ",", "w", "*", "2", "+", "1", ",", "w", "*", "2", "+", "1", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.Downsample.hybrid_forward": [[17, 34], ["F.expand_dims", "MaskFlownet.Downsample._kernel2d", "dict", "F.Convolution", "F.Convolution", "F.broadcast_div", "F.reshape", "F.reshape_like", "F.reshape_like", "F.ones_like"], "methods", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.Upsample._kernel2d"], ["", "def", "hybrid_forward", "(", "self", ",", "F", ",", "img", ")", ":", "\n", "\t\t", "if", "self", ".", "factor", "==", "1", ":", "\n", "\t\t\t", "return", "img", "\n", "", "batch_img", "=", "F", ".", "expand_dims", "(", "F", ".", "reshape", "(", "img", ",", "[", "-", "3", ",", "-", "2", "]", ")", ",", "axis", "=", "1", ")", "\n", "factor", "=", "self", ".", "factor", "\n", "kernel", "=", "self", ".", "_kernel2d", "(", "F", ",", "factor", "//", "2", ")", "\n", "conv_args", "=", "dict", "(", "\n", "weight", "=", "kernel", ",", "\n", "no_bias", "=", "True", ",", "\n", "kernel", "=", "(", "factor", "+", "1", ",", ")", "*", "2", ",", "\n", "stride", "=", "(", "factor", ",", ")", "*", "2", ",", "\n", "pad", "=", "(", "factor", "//", "2", ",", ")", "*", "2", ",", "\n", "num_filter", "=", "1", ")", "\n", "upsamp_nom", "=", "F", ".", "Convolution", "(", "data", "=", "F", ".", "ones_like", "(", "batch_img", ")", ",", "**", "conv_args", ")", "\n", "upsamp_img", "=", "F", ".", "Convolution", "(", "data", "=", "batch_img", ",", "**", "conv_args", ")", "\n", "return", "F", ".", "broadcast_div", "(", "F", ".", "reshape_like", "(", "upsamp_img", ",", "img", ",", "lhs_begin", "=", "0", ",", "lhs_end", "=", "2", ",", "rhs_begin", "=", "0", ",", "rhs_end", "=", "2", ")", ",", "\n", "F", ".", "reshape_like", "(", "upsamp_nom", ",", "img", ",", "lhs_begin", "=", "0", ",", "lhs_end", "=", "2", ",", "rhs_begin", "=", "0", ",", "rhs_end", "=", "2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.Upsample.__init__": [[36, 39], ["mxnet.gluon.nn.HybridBlock.__init__"], "methods", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.reader.sintel.Flo.__init__"], ["\t", "def", "__init__", "(", "self", ",", "factor", ",", "**", "kwargs", ")", ":", "\n", "\t\t", "super", "(", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "self", ".", "factor", "=", "factor", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.Upsample._kernel2d": [[40, 46], ["F.broadcast_mul", "F.reshape", "F.expand_dims", "F.expand_dims", "F.abs", "F.arange"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "_kernel2d", "(", "F", ",", "w", ")", ":", "\n", "\t\t", "c", "=", "w", "//", "2", "\n", "kernel", "=", "1", "-", "F", ".", "abs", "(", "c", "-", "F", ".", "arange", "(", "0", ",", "w", ")", ")", "/", "(", "c", "+", "1", ")", "\n", "kernel", "=", "F", ".", "broadcast_mul", "(", "F", ".", "expand_dims", "(", "kernel", ",", "axis", "=", "0", ")", ",", "F", ".", "expand_dims", "(", "kernel", ",", "axis", "=", "1", ")", ")", "\n", "return", "F", ".", "reshape", "(", "kernel", ",", "(", "1", ",", "1", ",", "w", ",", "w", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.Upsample.hybrid_forward": [[47, 63], ["F.expand_dims", "F.pad", "MaskFlownet.Upsample._kernel2d", "dict", "F.slice", "F.reshape_like", "F.reshape", "F.Deconvolution"], "methods", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.Upsample._kernel2d"], ["", "def", "hybrid_forward", "(", "self", ",", "F", ",", "img", ")", ":", "\n", "\t\t", "if", "self", ".", "factor", "==", "1", ":", "\n", "\t\t\t", "return", "img", "\n", "", "batch_img", "=", "F", ".", "expand_dims", "(", "F", ".", "reshape", "(", "img", ",", "[", "-", "3", ",", "-", "2", "]", ")", ",", "axis", "=", "1", ")", "\n", "batch_img", "=", "F", ".", "pad", "(", "batch_img", ",", "mode", "=", "\"edge\"", ",", "pad_width", "=", "(", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ")", ")", "\n", "factor", "=", "self", ".", "factor", "\n", "kernel", "=", "self", ".", "_kernel2d", "(", "F", ",", "factor", "*", "2", "-", "1", ")", "\n", "conv_args", "=", "dict", "(", "\n", "weight", "=", "kernel", ",", "\n", "no_bias", "=", "True", ",", "\n", "kernel", "=", "(", "factor", "*", "2", "-", "1", ",", ")", "*", "2", ",", "\n", "stride", "=", "(", "factor", ",", ")", "*", "2", ",", "\n", "pad", "=", "(", "factor", "-", "1", ",", ")", "*", "2", ",", "\n", "num_filter", "=", "1", ")", "\n", "upsamp_img", "=", "F", ".", "slice", "(", "F", ".", "Deconvolution", "(", "data", "=", "batch_img", ",", "**", "conv_args", ")", ",", "begin", "=", "(", "None", ",", "None", ",", "None", ",", "None", ")", ",", "end", "=", "(", "None", ",", "None", ",", "-", "1", ",", "-", "1", ")", ")", "\n", "return", "F", ".", "reshape_like", "(", "upsamp_img", ",", "img", ",", "lhs_begin", "=", "0", ",", "lhs_end", "=", "2", ",", "rhs_begin", "=", "0", ",", "rhs_end", "=", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet_S.__init__": [[67, 164], ["mxnet.gluon.nn.HybridBlock.__init__", "config.network.deform_bias.get", "config.network.upfeat_ch.get", "config.network.flow_multiplier.get", "MaskFlownet.MaskFlownet_S.name_scope", "mxnet.gluon.nn.LeakyReLU", "layer.Reconstruction2D", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "mxnet.gluon.nn.LeakyReLU", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.predict_flow", "MaskFlownet.MaskFlownet_S.deconv", "MaskFlownet.MaskFlownet_S.deconv", "MaskFlownet.MaskFlownet_S.deconv", "MaskFlownet.MaskFlownet_S.deconv", "MaskFlownet.MaskFlownet_S.predict_flow", "MaskFlownet.MaskFlownet_S.predict_flow", "MaskFlownet.MaskFlownet_S.predict_flow", "MaskFlownet.MaskFlownet_S.predict_flow", "MaskFlownet.MaskFlownet_S.predict_flow", "MaskFlownet.MaskFlownet_S.predict_mask", "MaskFlownet.MaskFlownet_S.predict_mask", "MaskFlownet.MaskFlownet_S.predict_mask", "MaskFlownet.MaskFlownet_S.predict_mask", "layer.DeformableConv2D", "layer.DeformableConv2D", "layer.DeformableConv2D", "layer.DeformableConv2D", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv", "MaskFlownet.MaskFlownet_S.conv"], "methods", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.reader.sintel.Flo.__init__", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.config.__init__.Reader.get", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.config.__init__.Reader.get", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.config.__init__.Reader.get", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.predict_flow", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.deconv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.deconv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.deconv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.deconv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.predict_flow", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.predict_flow", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.predict_flow", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.predict_flow", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.predict_flow", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.predict_mask", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.predict_mask", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.predict_mask", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.predict_mask", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv"], ["\t", "def", "__init__", "(", "self", ",", "config", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "\t\t", "super", "(", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "self", ".", "scale", "=", "20.", "*", "config", ".", "network", ".", "flow_multiplier", ".", "get", "(", "1.", ")", "\n", "self", ".", "md", "=", "4", "\n", "self", ".", "strides", "=", "[", "64", ",", "32", ",", "16", ",", "8", ",", "4", "]", "\n", "self", ".", "deform_bias", "=", "config", ".", "network", ".", "deform_bias", ".", "get", "(", "True", ")", "\n", "self", ".", "upfeat_ch", "=", "config", ".", "network", ".", "upfeat_ch", ".", "get", "(", "[", "16", ",", "16", ",", "16", ",", "16", "]", ")", "\n", "\n", "with", "self", ".", "name_scope", "(", ")", ":", "\n", "\t\t\t", "self", ".", "activate", "=", "nn", ".", "LeakyReLU", "(", "0.1", ")", "\n", "self", ".", "warp", "=", "layer", ".", "Reconstruction2D", "(", "2", ")", "\n", "\n", "self", ".", "conv1a", "=", "self", ".", "conv", "(", "3", ",", "16", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv1a'", ")", "\n", "self", ".", "conv1b", "=", "self", ".", "conv", "(", "16", ",", "16", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv1b'", ")", "\n", "self", ".", "conv1c", "=", "self", ".", "conv", "(", "16", ",", "16", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv1c'", ")", "\n", "self", ".", "conv2a", "=", "self", ".", "conv", "(", "16", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv2a'", ")", "\n", "self", ".", "conv2b", "=", "self", ".", "conv", "(", "32", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv2b'", ")", "\n", "self", ".", "conv2c", "=", "self", ".", "conv", "(", "32", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv2c'", ")", "\n", "self", ".", "conv3a", "=", "self", ".", "conv", "(", "32", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv3a'", ")", "\n", "self", ".", "conv3b", "=", "self", ".", "conv", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv3b'", ")", "\n", "self", ".", "conv3c", "=", "self", ".", "conv", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv3c'", ")", "\n", "self", ".", "conv4a", "=", "self", ".", "conv", "(", "64", ",", "96", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv4a'", ")", "\n", "self", ".", "conv4b", "=", "self", ".", "conv", "(", "96", ",", "96", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv4b'", ")", "\n", "self", ".", "conv4c", "=", "self", ".", "conv", "(", "96", ",", "96", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv4c'", ")", "\n", "self", ".", "conv5a", "=", "self", ".", "conv", "(", "96", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv5a'", ")", "\n", "self", ".", "conv5b", "=", "self", ".", "conv", "(", "128", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv5b'", ")", "\n", "self", ".", "conv5c", "=", "self", ".", "conv", "(", "128", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv5c'", ")", "\n", "self", ".", "conv6a", "=", "self", ".", "conv", "(", "128", ",", "196", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv6a'", ")", "\n", "self", ".", "conv6b", "=", "self", ".", "conv", "(", "196", ",", "196", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv6b'", ")", "\n", "self", ".", "conv6c", "=", "self", ".", "conv", "(", "196", ",", "196", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv6c'", ")", "\n", "\n", "self", ".", "leakyRELU", "=", "nn", ".", "LeakyReLU", "(", "0.1", ")", "\n", "ch", "=", "None", "\n", "\n", "self", ".", "conv6_0", "=", "self", ".", "conv", "(", "ch", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv6_0'", ")", "\n", "self", ".", "conv6_1", "=", "self", ".", "conv", "(", "ch", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv6_1'", ")", "\n", "self", ".", "conv6_2", "=", "self", ".", "conv", "(", "ch", ",", "96", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv6_2'", ")", "\n", "self", ".", "conv6_3", "=", "self", ".", "conv", "(", "ch", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv6_3'", ")", "\n", "self", ".", "conv6_4", "=", "self", ".", "conv", "(", "ch", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv6_4'", ")", "\n", "\n", "self", ".", "conv5_0", "=", "self", ".", "conv", "(", "ch", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv5_0'", ")", "\n", "self", ".", "conv5_1", "=", "self", ".", "conv", "(", "ch", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv5_1'", ")", "\n", "self", ".", "conv5_2", "=", "self", ".", "conv", "(", "ch", ",", "96", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv5_2'", ")", "\n", "self", ".", "conv5_3", "=", "self", ".", "conv", "(", "ch", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv5_3'", ")", "\n", "self", ".", "conv5_4", "=", "self", ".", "conv", "(", "ch", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv5_4'", ")", "\n", "\n", "self", ".", "conv4_0", "=", "self", ".", "conv", "(", "ch", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv4_0'", ")", "\n", "self", ".", "conv4_1", "=", "self", ".", "conv", "(", "ch", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv4_1'", ")", "\n", "self", ".", "conv4_2", "=", "self", ".", "conv", "(", "ch", ",", "96", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv4_2'", ")", "\n", "self", ".", "conv4_3", "=", "self", ".", "conv", "(", "ch", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv4_3'", ")", "\n", "self", ".", "conv4_4", "=", "self", ".", "conv", "(", "ch", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv4_4'", ")", "\n", "\n", "self", ".", "conv3_0", "=", "self", ".", "conv", "(", "ch", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv3_0'", ")", "\n", "self", ".", "conv3_1", "=", "self", ".", "conv", "(", "ch", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv3_1'", ")", "\n", "self", ".", "conv3_2", "=", "self", ".", "conv", "(", "ch", ",", "96", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv3_2'", ")", "\n", "self", ".", "conv3_3", "=", "self", ".", "conv", "(", "ch", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv3_3'", ")", "\n", "self", ".", "conv3_4", "=", "self", ".", "conv", "(", "ch", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv3_4'", ")", "\n", "\n", "self", ".", "conv2_0", "=", "self", ".", "conv", "(", "ch", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv2_0'", ")", "\n", "self", ".", "conv2_1", "=", "self", ".", "conv", "(", "ch", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv2_1'", ")", "\n", "self", ".", "conv2_2", "=", "self", ".", "conv", "(", "ch", ",", "96", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv2_2'", ")", "\n", "self", ".", "conv2_3", "=", "self", ".", "conv", "(", "ch", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv2_3'", ")", "\n", "self", ".", "conv2_4", "=", "self", ".", "conv", "(", "ch", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv2_4'", ")", "\n", "\n", "self", ".", "dc_conv1", "=", "self", ".", "conv", "(", "ch", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'dc_conv1'", ")", "\n", "self", ".", "dc_conv2", "=", "self", ".", "conv", "(", "ch", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "2", ",", "dilation", "=", "2", ",", "prefix", "=", "'dc_conv2'", ")", "\n", "self", ".", "dc_conv3", "=", "self", ".", "conv", "(", "ch", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "4", ",", "dilation", "=", "4", ",", "prefix", "=", "'dc_conv3'", ")", "\n", "self", ".", "dc_conv4", "=", "self", ".", "conv", "(", "ch", ",", "96", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "8", ",", "dilation", "=", "8", ",", "prefix", "=", "'dc_conv4'", ")", "\n", "self", ".", "dc_conv5", "=", "self", ".", "conv", "(", "ch", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "16", ",", "dilation", "=", "16", ",", "prefix", "=", "'dc_conv5'", ")", "\n", "self", ".", "dc_conv6", "=", "self", ".", "conv", "(", "ch", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'dc_conv6'", ")", "\n", "self", ".", "dc_conv7", "=", "self", ".", "predict_flow", "(", "ch", ",", "prefix", "=", "'dc_conv7'", ")", "\n", "\n", "self", ".", "upfeat5", "=", "self", ".", "deconv", "(", "ch", ",", "self", ".", "upfeat_ch", "[", "0", "]", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "prefix", "=", "'upfeat5'", ")", "\n", "self", ".", "upfeat4", "=", "self", ".", "deconv", "(", "ch", ",", "self", ".", "upfeat_ch", "[", "1", "]", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "prefix", "=", "'upfeat4'", ")", "\n", "self", ".", "upfeat3", "=", "self", ".", "deconv", "(", "ch", ",", "self", ".", "upfeat_ch", "[", "2", "]", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "prefix", "=", "'upfeat3'", ")", "\n", "self", ".", "upfeat2", "=", "self", ".", "deconv", "(", "ch", ",", "self", ".", "upfeat_ch", "[", "3", "]", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "prefix", "=", "'upfeat2'", ")", "\n", "\n", "self", ".", "pred_flow6", "=", "self", ".", "predict_flow", "(", "ch", ",", "prefix", "=", "'pred_flow6'", ")", "\n", "self", ".", "pred_flow5", "=", "self", ".", "predict_flow", "(", "ch", ",", "prefix", "=", "'pred_flow5'", ")", "\n", "self", ".", "pred_flow4", "=", "self", ".", "predict_flow", "(", "ch", ",", "prefix", "=", "'pred_flow4'", ")", "\n", "self", ".", "pred_flow3", "=", "self", ".", "predict_flow", "(", "ch", ",", "prefix", "=", "'pred_flow3'", ")", "\n", "self", ".", "pred_flow2", "=", "self", ".", "predict_flow", "(", "ch", ",", "prefix", "=", "'pred_flow2'", ")", "\n", "\n", "self", ".", "pred_mask6", "=", "self", ".", "predict_mask", "(", "ch", ",", "prefix", "=", "'pred_mask6'", ")", "\n", "self", ".", "pred_mask5", "=", "self", ".", "predict_mask", "(", "ch", ",", "prefix", "=", "'pred_mask5'", ")", "\n", "self", ".", "pred_mask4", "=", "self", ".", "predict_mask", "(", "ch", ",", "prefix", "=", "'pred_mask4'", ")", "\n", "self", ".", "pred_mask3", "=", "self", ".", "predict_mask", "(", "ch", ",", "prefix", "=", "'pred_mask3'", ")", "\n", "\n", "self", ".", "deform5", "=", "layer", ".", "DeformableConv2D", "(", "128", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "1", ",", "use_bias", "=", "self", ".", "deform_bias", ",", "prefix", "=", "'deform5'", ")", "\n", "self", ".", "deform4", "=", "layer", ".", "DeformableConv2D", "(", "96", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "1", ",", "use_bias", "=", "self", ".", "deform_bias", ",", "prefix", "=", "'deform4'", ")", "\n", "self", ".", "deform3", "=", "layer", ".", "DeformableConv2D", "(", "64", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "1", ",", "use_bias", "=", "self", ".", "deform_bias", ",", "prefix", "=", "'deform3'", ")", "\n", "self", ".", "deform2", "=", "layer", ".", "DeformableConv2D", "(", "32", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "1", ",", "use_bias", "=", "self", ".", "deform_bias", ",", "prefix", "=", "'deform2'", ")", "\n", "\n", "self", ".", "conv5f", "=", "self", ".", "conv", "(", "ch", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "activation", "=", "False", ",", "prefix", "=", "'conv5f'", ")", "\n", "self", ".", "conv4f", "=", "self", ".", "conv", "(", "ch", ",", "96", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "activation", "=", "False", ",", "prefix", "=", "'conv4f'", ")", "\n", "self", ".", "conv3f", "=", "self", ".", "conv", "(", "ch", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "activation", "=", "False", ",", "prefix", "=", "'conv3f'", ")", "\n", "self", ".", "conv2f", "=", "self", ".", "conv", "(", "ch", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "activation", "=", "False", ",", "prefix", "=", "'conv2f'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet_S.conv": [[166, 175], ["mxnet.gluon.nn.HybridSequential", "mxnet.gluon.nn.HybridSequential.name_scope", "mxnet.gluon.nn.HybridSequential.add", "mxnet.gluon.nn.Conv2D", "mxnet.gluon.nn.HybridSequential.add"], "methods", ["None"], ["", "", "def", "conv", "(", "self", ",", "_", ",", "channels", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "activation", "=", "True", ",", "prefix", "=", "None", ")", ":", "\n", "\n", "\t\t", "net", "=", "nn", ".", "HybridSequential", "(", ")", "\n", "with", "net", ".", "name_scope", "(", ")", ":", "\n", "\t\t\t", "net", ".", "add", "(", "nn", ".", "Conv2D", "(", "channels", "=", "channels", ",", "kernel_size", "=", "kernel_size", ",", "strides", "=", "stride", ",", "padding", "=", "padding", ",", "dilation", "=", "dilation", ",", "prefix", "=", "prefix", ")", ")", "\n", "if", "activation", ":", "\n", "\t\t\t\t", "net", ".", "add", "(", "self", ".", "activate", ")", "\n", "\n", "", "", "return", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet_S.deconv": [[176, 184], ["mxnet.gluon.nn.HybridSequential", "mxnet.gluon.nn.HybridSequential.name_scope", "mxnet.gluon.nn.HybridSequential.add", "mxnet.gluon.nn.HybridSequential.add", "mxnet.gluon.nn.Conv2DTranspose"], "methods", ["None"], ["", "def", "deconv", "(", "self", ",", "_", ",", "channels", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "prefix", "=", "None", ")", ":", "\n", "\n", "\t\t", "net", "=", "nn", ".", "HybridSequential", "(", ")", "\n", "with", "net", ".", "name_scope", "(", ")", ":", "\n", "\t\t\t", "net", ".", "add", "(", "nn", ".", "Conv2DTranspose", "(", "channels", "=", "channels", ",", "kernel_size", "=", "kernel_size", ",", "strides", "=", "stride", ",", "padding", "=", "padding", ",", "prefix", "=", "prefix", ")", ")", "\n", "net", ".", "add", "(", "self", ".", "activate", ")", "\n", "\n", "", "return", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet_S.predict_flow": [[185, 188], ["mxnet.gluon.nn.Conv2D"], "methods", ["None"], ["", "def", "predict_flow", "(", "self", ",", "_", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "prefix", "=", "None", ")", ":", "\n", "\n", "\t\t", "return", "nn", ".", "Conv2D", "(", "2", ",", "kernel_size", "=", "kernel_size", ",", "strides", "=", "stride", ",", "padding", "=", "padding", ",", "prefix", "=", "prefix", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet_S.predict_mask": [[189, 192], ["mxnet.gluon.nn.Conv2D"], "methods", ["None"], ["", "def", "predict_mask", "(", "self", ",", "_", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "prefix", "=", "None", ")", ":", "\n", "\n", "\t\t", "return", "nn", ".", "Conv2D", "(", "1", ",", "kernel_size", "=", "kernel_size", ",", "strides", "=", "stride", ",", "padding", "=", "padding", ",", "prefix", "=", "prefix", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet_S.corr": [[193, 196], ["F.Correlation"], "methods", ["None"], ["", "def", "corr", "(", "self", ",", "F", ",", "im1", ",", "im2", ",", "stride1", "=", "1", ",", "stride2", "=", "1", ")", ":", "\n", "\n", "\t\t", "return", "F", ".", "Correlation", "(", "im1", ",", "im2", ",", "pad_size", "=", "self", ".", "md", ",", "kernel_size", "=", "1", ",", "max_displacement", "=", "self", ".", "md", ",", "stride1", "=", "stride1", ",", "stride2", "=", "stride2", ",", "is_multiply", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet_S.hybrid_forward": [[197, 316], ["MaskFlownet.MaskFlownet_S.conv1c", "MaskFlownet.MaskFlownet_S.conv1c", "MaskFlownet.MaskFlownet_S.conv2c", "MaskFlownet.MaskFlownet_S.conv2c", "MaskFlownet.MaskFlownet_S.conv3c", "MaskFlownet.MaskFlownet_S.conv3c", "MaskFlownet.MaskFlownet_S.conv4c", "MaskFlownet.MaskFlownet_S.conv4c", "MaskFlownet.MaskFlownet_S.conv5c", "MaskFlownet.MaskFlownet_S.conv5c", "MaskFlownet.MaskFlownet_S.conv6c", "MaskFlownet.MaskFlownet_S.conv6c", "MaskFlownet.MaskFlownet_S.corr", "MaskFlownet.MaskFlownet_S.leakyRELU", "F.concat", "F.concat", "F.concat", "F.concat", "F.concat", "MaskFlownet.MaskFlownet_S.pred_flow6", "MaskFlownet.MaskFlownet_S.pred_mask6", "MaskFlownet.MaskFlownet_S.upfeat5", "MaskFlownet.MaskFlownet_S.deform5", "MaskFlownet.MaskFlownet_S.leakyRELU", "MaskFlownet.MaskFlownet_S.corr", "MaskFlownet.MaskFlownet_S.leakyRELU", "F.concat", "F.concat", "F.concat", "F.concat", "F.concat", "F.concat", "MaskFlownet.MaskFlownet_S.pred_mask5", "MaskFlownet.MaskFlownet_S.upfeat4", "MaskFlownet.MaskFlownet_S.deform4", "MaskFlownet.MaskFlownet_S.leakyRELU", "MaskFlownet.MaskFlownet_S.corr", "MaskFlownet.MaskFlownet_S.leakyRELU", "F.concat", "F.concat", "F.concat", "F.concat", "F.concat", "F.concat", "MaskFlownet.MaskFlownet_S.pred_mask4", "MaskFlownet.MaskFlownet_S.upfeat3", "MaskFlownet.MaskFlownet_S.deform3", "MaskFlownet.MaskFlownet_S.leakyRELU", "MaskFlownet.MaskFlownet_S.corr", "MaskFlownet.MaskFlownet_S.leakyRELU", "F.concat", "F.concat", "F.concat", "F.concat", "F.concat", "F.concat", "MaskFlownet.MaskFlownet_S.pred_mask3", "MaskFlownet.MaskFlownet_S.upfeat2", "MaskFlownet.MaskFlownet_S.deform2", "MaskFlownet.MaskFlownet_S.leakyRELU", "MaskFlownet.MaskFlownet_S.corr", "MaskFlownet.MaskFlownet_S.leakyRELU", "F.concat", "F.concat", "F.concat", "F.concat", "F.concat", "F.concat", "MaskFlownet.MaskFlownet_S.dc_conv4", "occlusion_masks.append", "MaskFlownet.MaskFlownet_S.warp", "F.concat", "F.concat", "MaskFlownet.MaskFlownet_S.conv1b", "MaskFlownet.MaskFlownet_S.conv1b", "MaskFlownet.MaskFlownet_S.conv2b", "MaskFlownet.MaskFlownet_S.conv2b", "MaskFlownet.MaskFlownet_S.conv3b", "MaskFlownet.MaskFlownet_S.conv3b", "MaskFlownet.MaskFlownet_S.conv4b", "MaskFlownet.MaskFlownet_S.conv4b", "MaskFlownet.MaskFlownet_S.conv5b", "MaskFlownet.MaskFlownet_S.conv5b", "MaskFlownet.MaskFlownet_S.conv6b", "MaskFlownet.MaskFlownet_S.conv6b", "MaskFlownet.MaskFlownet_S.conv6_0", "MaskFlownet.MaskFlownet_S.conv6_1", "MaskFlownet.MaskFlownet_S.conv6_2", "MaskFlownet.MaskFlownet_S.conv6_3", "MaskFlownet.MaskFlownet_S.conv6_4", "MaskFlownet.Upsample", "MaskFlownet.Upsample", "F.repeat().reshape", "F.broadcast_mul", "MaskFlownet.MaskFlownet_S.conv5f", "MaskFlownet.MaskFlownet_S.conv5_0", "MaskFlownet.MaskFlownet_S.conv5_1", "MaskFlownet.MaskFlownet_S.conv5_2", "MaskFlownet.MaskFlownet_S.conv5_3", "MaskFlownet.MaskFlownet_S.conv5_4", "MaskFlownet.MaskFlownet_S.pred_flow5", "MaskFlownet.Upsample", "MaskFlownet.Upsample", "F.repeat().reshape", "F.broadcast_mul", "MaskFlownet.MaskFlownet_S.conv4f", "MaskFlownet.MaskFlownet_S.conv4_0", "MaskFlownet.MaskFlownet_S.conv4_1", "MaskFlownet.MaskFlownet_S.conv4_2", "MaskFlownet.MaskFlownet_S.conv4_3", "MaskFlownet.MaskFlownet_S.conv4_4", "MaskFlownet.MaskFlownet_S.pred_flow4", "MaskFlownet.Upsample", "MaskFlownet.Upsample", "F.repeat().reshape", "F.broadcast_mul", "MaskFlownet.MaskFlownet_S.conv3f", "MaskFlownet.MaskFlownet_S.conv3_0", "MaskFlownet.MaskFlownet_S.conv3_1", "MaskFlownet.MaskFlownet_S.conv3_2", "MaskFlownet.MaskFlownet_S.conv3_3", "MaskFlownet.MaskFlownet_S.conv3_4", "MaskFlownet.MaskFlownet_S.pred_flow3", "MaskFlownet.Upsample", "MaskFlownet.Upsample", "F.repeat().reshape", "F.broadcast_mul", "MaskFlownet.MaskFlownet_S.conv2f", "MaskFlownet.MaskFlownet_S.conv2_0", "MaskFlownet.MaskFlownet_S.conv2_1", "MaskFlownet.MaskFlownet_S.conv2_2", "MaskFlownet.MaskFlownet_S.conv2_3", "MaskFlownet.MaskFlownet_S.conv2_4", "MaskFlownet.MaskFlownet_S.pred_flow2", "MaskFlownet.MaskFlownet_S.dc_conv3", "MaskFlownet.MaskFlownet_S.dc_conv7", "F.sigmoid", "MaskFlownet.Upsample", "F.sigmoid", "F.zeros_like", "MaskFlownet.MaskFlownet_S.conv1a", "MaskFlownet.MaskFlownet_S.conv1a", "MaskFlownet.MaskFlownet_S.conv2a", "MaskFlownet.MaskFlownet_S.conv2a", "MaskFlownet.MaskFlownet_S.conv3a", "MaskFlownet.MaskFlownet_S.conv3a", "MaskFlownet.MaskFlownet_S.conv4a", "MaskFlownet.MaskFlownet_S.conv4a", "MaskFlownet.MaskFlownet_S.conv5a", "MaskFlownet.MaskFlownet_S.conv5a", "MaskFlownet.MaskFlownet_S.conv6a", "MaskFlownet.MaskFlownet_S.conv6a", "F.sigmoid", "F.sigmoid", "F.sigmoid", "F.sigmoid", "MaskFlownet.MaskFlownet_S.dc_conv2", "MaskFlownet.MaskFlownet_S.dc_conv6", "F.repeat", "F.repeat", "F.repeat", "F.repeat", "MaskFlownet.MaskFlownet_S.dc_conv1", "MaskFlownet.MaskFlownet_S.dc_conv5", "MaskFlownet.Upsample", "F.expand_dims", "F.expand_dims", "F.expand_dims", "F.expand_dims"], "methods", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.corr", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.corr", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.corr", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.corr", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.corr"], ["", "def", "hybrid_forward", "(", "self", ",", "F", ",", "im1", ",", "im2", ")", ":", "\n", "\t\t", "c10", "=", "im1", "\n", "c20", "=", "im2", "\n", "\n", "c11", "=", "self", ".", "conv1c", "(", "self", ".", "conv1b", "(", "self", ".", "conv1a", "(", "c10", ")", ")", ")", "\n", "c21", "=", "self", ".", "conv1c", "(", "self", ".", "conv1b", "(", "self", ".", "conv1a", "(", "c20", ")", ")", ")", "\n", "c12", "=", "self", ".", "conv2c", "(", "self", ".", "conv2b", "(", "self", ".", "conv2a", "(", "c11", ")", ")", ")", "\n", "c22", "=", "self", ".", "conv2c", "(", "self", ".", "conv2b", "(", "self", ".", "conv2a", "(", "c21", ")", ")", ")", "\n", "c13", "=", "self", ".", "conv3c", "(", "self", ".", "conv3b", "(", "self", ".", "conv3a", "(", "c12", ")", ")", ")", "\n", "c23", "=", "self", ".", "conv3c", "(", "self", ".", "conv3b", "(", "self", ".", "conv3a", "(", "c22", ")", ")", ")", "\n", "c14", "=", "self", ".", "conv4c", "(", "self", ".", "conv4b", "(", "self", ".", "conv4a", "(", "c13", ")", ")", ")", "\n", "c24", "=", "self", ".", "conv4c", "(", "self", ".", "conv4b", "(", "self", ".", "conv4a", "(", "c23", ")", ")", ")", "\n", "c15", "=", "self", ".", "conv5c", "(", "self", ".", "conv5b", "(", "self", ".", "conv5a", "(", "c14", ")", ")", ")", "\n", "c25", "=", "self", ".", "conv5c", "(", "self", ".", "conv5b", "(", "self", ".", "conv5a", "(", "c24", ")", ")", ")", "\n", "c16", "=", "self", ".", "conv6c", "(", "self", ".", "conv6b", "(", "self", ".", "conv6a", "(", "c15", ")", ")", ")", "\n", "c26", "=", "self", ".", "conv6c", "(", "self", ".", "conv6b", "(", "self", ".", "conv6a", "(", "c25", ")", ")", ")", "\n", "\n", "\n", "warp6", "=", "c26", "\n", "corr6", "=", "self", ".", "corr", "(", "F", ",", "c16", ",", "warp6", ")", "\n", "corr6", "=", "self", ".", "leakyRELU", "(", "corr6", ")", "\n", "x", "=", "corr6", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv6_0", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv6_1", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv6_2", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv6_3", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv6_4", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "flow6", "=", "self", ".", "pred_flow6", "(", "x", ")", "\n", "mask6", "=", "self", ".", "pred_mask6", "(", "x", ")", "\n", "\n", "feat5", "=", "self", ".", "upfeat5", "(", "x", ")", "\n", "flow5", "=", "Upsample", "(", "2", ")", "(", "flow6", ")", "\n", "mask5", "=", "Upsample", "(", "2", ")", "(", "mask6", ")", "\n", "warp5", "=", "self", ".", "deform5", "(", "c25", ",", "F", ".", "repeat", "(", "F", ".", "expand_dims", "(", "flow5", "*", "self", ".", "scale", "/", "self", ".", "strides", "[", "1", "]", ",", "axis", "=", "1", ")", ",", "9", ",", "axis", "=", "1", ")", ".", "reshape", "(", "(", "0", ",", "-", "3", ",", "-", "2", ")", ")", ")", "\n", "tradeoff5", "=", "feat5", "\n", "warp5", "=", "F", ".", "broadcast_mul", "(", "warp5", ",", "F", ".", "sigmoid", "(", "mask5", ")", ")", "+", "self", ".", "conv5f", "(", "tradeoff5", ")", "\n", "warp5", "=", "self", ".", "leakyRELU", "(", "warp5", ")", "\n", "corr5", "=", "self", ".", "corr", "(", "F", ",", "c15", ",", "warp5", ")", "\n", "corr5", "=", "self", ".", "leakyRELU", "(", "corr5", ")", "\n", "x", "=", "F", ".", "concat", "(", "corr5", ",", "c15", ",", "feat5", ",", "flow5", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv5_0", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv5_1", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv5_2", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv5_3", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv5_4", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "flow5", "=", "flow5", "+", "self", ".", "pred_flow5", "(", "x", ")", "\n", "mask5", "=", "self", ".", "pred_mask5", "(", "x", ")", "\n", "\n", "feat4", "=", "self", ".", "upfeat4", "(", "x", ")", "\n", "flow4", "=", "Upsample", "(", "2", ")", "(", "flow5", ")", "\n", "mask4", "=", "Upsample", "(", "2", ")", "(", "mask5", ")", "\n", "warp4", "=", "self", ".", "deform4", "(", "c24", ",", "F", ".", "repeat", "(", "F", ".", "expand_dims", "(", "flow4", "*", "self", ".", "scale", "/", "self", ".", "strides", "[", "2", "]", ",", "axis", "=", "1", ")", ",", "9", ",", "axis", "=", "1", ")", ".", "reshape", "(", "(", "0", ",", "-", "3", ",", "-", "2", ")", ")", ")", "\n", "tradeoff4", "=", "feat4", "\n", "warp4", "=", "F", ".", "broadcast_mul", "(", "warp4", ",", "F", ".", "sigmoid", "(", "mask4", ")", ")", "+", "self", ".", "conv4f", "(", "tradeoff4", ")", "\n", "warp4", "=", "self", ".", "leakyRELU", "(", "warp4", ")", "\n", "corr4", "=", "self", ".", "corr", "(", "F", ",", "c14", ",", "warp4", ")", "\n", "corr4", "=", "self", ".", "leakyRELU", "(", "corr4", ")", "\n", "x", "=", "F", ".", "concat", "(", "corr4", ",", "c14", ",", "feat4", ",", "flow4", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv4_0", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv4_1", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv4_2", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv4_3", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv4_4", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "flow4", "=", "flow4", "+", "self", ".", "pred_flow4", "(", "x", ")", "\n", "mask4", "=", "self", ".", "pred_mask4", "(", "x", ")", "\n", "\n", "feat3", "=", "self", ".", "upfeat3", "(", "x", ")", "\n", "flow3", "=", "Upsample", "(", "2", ")", "(", "flow4", ")", "\n", "mask3", "=", "Upsample", "(", "2", ")", "(", "mask4", ")", "\n", "warp3", "=", "self", ".", "deform3", "(", "c23", ",", "F", ".", "repeat", "(", "F", ".", "expand_dims", "(", "flow3", "*", "self", ".", "scale", "/", "self", ".", "strides", "[", "3", "]", ",", "axis", "=", "1", ")", ",", "9", ",", "axis", "=", "1", ")", ".", "reshape", "(", "(", "0", ",", "-", "3", ",", "-", "2", ")", ")", ")", "\n", "tradeoff3", "=", "feat3", "\n", "warp3", "=", "F", ".", "broadcast_mul", "(", "warp3", ",", "F", ".", "sigmoid", "(", "mask3", ")", ")", "+", "self", ".", "conv3f", "(", "tradeoff3", ")", "\n", "warp3", "=", "self", ".", "leakyRELU", "(", "warp3", ")", "\n", "corr3", "=", "self", ".", "corr", "(", "F", ",", "c13", ",", "warp3", ")", "\n", "corr3", "=", "self", ".", "leakyRELU", "(", "corr3", ")", "\n", "x", "=", "F", ".", "concat", "(", "corr3", ",", "c13", ",", "feat3", ",", "flow3", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv3_0", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv3_1", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv3_2", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv3_3", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv3_4", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "flow3", "=", "flow3", "+", "self", ".", "pred_flow3", "(", "x", ")", "\n", "mask3", "=", "self", ".", "pred_mask3", "(", "x", ")", "\n", "\n", "feat2", "=", "self", ".", "upfeat2", "(", "x", ")", "\n", "flow2", "=", "Upsample", "(", "2", ")", "(", "flow3", ")", "\n", "mask2", "=", "Upsample", "(", "2", ")", "(", "mask3", ")", "\n", "warp2", "=", "self", ".", "deform2", "(", "c22", ",", "F", ".", "repeat", "(", "F", ".", "expand_dims", "(", "flow2", "*", "self", ".", "scale", "/", "self", ".", "strides", "[", "4", "]", ",", "axis", "=", "1", ")", ",", "9", ",", "axis", "=", "1", ")", ".", "reshape", "(", "(", "0", ",", "-", "3", ",", "-", "2", ")", ")", ")", "\n", "tradeoff2", "=", "feat2", "\n", "warp2", "=", "F", ".", "broadcast_mul", "(", "warp2", ",", "F", ".", "sigmoid", "(", "mask2", ")", ")", "+", "self", ".", "conv2f", "(", "tradeoff2", ")", "\n", "warp2", "=", "self", ".", "leakyRELU", "(", "warp2", ")", "\n", "corr2", "=", "self", ".", "corr", "(", "F", ",", "c12", ",", "warp2", ")", "\n", "corr2", "=", "self", ".", "leakyRELU", "(", "corr2", ")", "\n", "x", "=", "F", ".", "concat", "(", "corr2", ",", "c12", ",", "feat2", ",", "flow2", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv2_0", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv2_1", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv2_2", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv2_3", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv2_4", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "flow2", "=", "flow2", "+", "self", ".", "pred_flow2", "(", "x", ")", "\n", "\n", "\n", "x", "=", "self", ".", "dc_conv4", "(", "self", ".", "dc_conv3", "(", "self", ".", "dc_conv2", "(", "self", ".", "dc_conv1", "(", "x", ")", ")", ")", ")", "\n", "flow2", "=", "flow2", "+", "self", ".", "dc_conv7", "(", "self", ".", "dc_conv6", "(", "self", ".", "dc_conv5", "(", "x", ")", ")", ")", "\n", "\n", "predictions", "=", "[", "flow", "*", "self", ".", "scale", "for", "flow", "in", "[", "flow6", ",", "flow5", ",", "flow4", ",", "flow3", ",", "flow2", "]", "]", "\n", "occlusion_masks", "=", "[", "]", "\n", "occlusion_masks", ".", "append", "(", "F", ".", "sigmoid", "(", "mask2", ")", ")", "\n", "c1s", "=", "[", "c11", ",", "c12", ",", "c13", ",", "c14", ",", "c15", ",", "c16", "]", "\n", "c2s", "=", "[", "c21", ",", "c12", ",", "c13", ",", "c24", ",", "c25", ",", "c26", "]", "\n", "flows", "=", "[", "flow6", ",", "flow5", ",", "flow4", ",", "flow3", ",", "flow2", "]", "\n", "mask0", "=", "Upsample", "(", "4", ")", "(", "mask2", ")", "\n", "mask0", "=", "F", ".", "sigmoid", "(", "mask0", ")", "-", "0.5", "\n", "c30", "=", "c10", "\n", "c40", "=", "self", ".", "warp", "(", "c20", ",", "Upsample", "(", "4", ")", "(", "flow2", ")", "*", "self", ".", "scale", ")", "\n", "c30", "=", "F", ".", "concat", "(", "c30", ",", "F", ".", "zeros_like", "(", "mask0", ")", ",", "dim", "=", "1", ")", "\n", "c40", "=", "F", ".", "concat", "(", "c40", ",", "mask0", ",", "dim", "=", "1", ")", "\n", "srcs", "=", "[", "c1s", ",", "c2s", ",", "flows", ",", "c30", ",", "c40", "]", "\n", "return", "predictions", ",", "occlusion_masks", ",", "srcs", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.__init__": [[319, 408], ["mxnet.gluon.nn.HybridBlock.__init__", "config.network.deform_bias.get", "config.network.upfeat_ch.get", "config.network.flow_multiplier.get", "MaskFlownet.MaskFlownet.name_scope", "MaskFlownet.MaskFlownet_S", "mxnet.gluon.nn.LeakyReLU", "layer.Reconstruction2D", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "mxnet.gluon.nn.LeakyReLU", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.conv", "MaskFlownet.MaskFlownet.predict_flow", "MaskFlownet.MaskFlownet.deconv", "MaskFlownet.MaskFlownet.deconv", "MaskFlownet.MaskFlownet.deconv", "MaskFlownet.MaskFlownet.deconv", "MaskFlownet.MaskFlownet.predict_flow", "MaskFlownet.MaskFlownet.predict_flow", "MaskFlownet.MaskFlownet.predict_flow", "MaskFlownet.MaskFlownet.predict_flow", "MaskFlownet.MaskFlownet.predict_flow", "layer.DeformableConv2D", "layer.DeformableConv2D", "layer.DeformableConv2D", "layer.DeformableConv2D", "layer.DeformableConv2D"], "methods", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.reader.sintel.Flo.__init__", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.config.__init__.Reader.get", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.config.__init__.Reader.get", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.config.__init__.Reader.get", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.predict_flow", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.deconv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.deconv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.deconv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.deconv", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.predict_flow", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.predict_flow", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.predict_flow", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.predict_flow", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.predict_flow"], ["\t", "def", "__init__", "(", "self", ",", "config", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "\t\t", "super", "(", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "self", ".", "strides", "=", "[", "64", ",", "32", ",", "16", ",", "8", ",", "4", "]", "\n", "self", ".", "md", "=", "2", "\n", "self", ".", "scale", "=", "20.", "*", "config", ".", "network", ".", "flow_multiplier", ".", "get", "(", "1.", ")", "\n", "self", ".", "deform_bias", "=", "config", ".", "network", ".", "deform_bias", ".", "get", "(", "True", ")", "\n", "self", ".", "upfeat_ch", "=", "config", ".", "network", ".", "upfeat_ch", ".", "get", "(", "[", "16", ",", "16", ",", "16", ",", "16", "]", ")", "\n", "\n", "with", "self", ".", "name_scope", "(", ")", ":", "\n", "\t\t\t", "self", ".", "MaskFlownet_S", "=", "MaskFlownet_S", "(", "config", ")", "\n", "self", ".", "activate", "=", "nn", ".", "LeakyReLU", "(", "0.1", ")", "\n", "self", ".", "warp", "=", "layer", ".", "Reconstruction2D", "(", "2", ")", "\n", "\n", "self", ".", "conv1x", "=", "self", ".", "conv", "(", "3", ",", "16", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv1x'", ")", "\n", "self", ".", "conv1y", "=", "self", ".", "conv", "(", "16", ",", "16", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv1y'", ")", "\n", "self", ".", "conv1z", "=", "self", ".", "conv", "(", "16", ",", "16", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv1z'", ")", "\n", "self", ".", "conv2x", "=", "self", ".", "conv", "(", "16", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv2x'", ")", "\n", "self", ".", "conv2y", "=", "self", ".", "conv", "(", "32", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv2y'", ")", "\n", "self", ".", "conv2z", "=", "self", ".", "conv", "(", "32", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv2z'", ")", "\n", "self", ".", "conv3x", "=", "self", ".", "conv", "(", "32", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv3x'", ")", "\n", "self", ".", "conv3y", "=", "self", ".", "conv", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv3y'", ")", "\n", "self", ".", "conv3z", "=", "self", ".", "conv", "(", "64", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv3z'", ")", "\n", "self", ".", "conv4x", "=", "self", ".", "conv", "(", "64", ",", "96", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv4x'", ")", "\n", "self", ".", "conv4y", "=", "self", ".", "conv", "(", "96", ",", "96", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv4y'", ")", "\n", "self", ".", "conv4z", "=", "self", ".", "conv", "(", "96", ",", "96", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv4z'", ")", "\n", "self", ".", "conv5x", "=", "self", ".", "conv", "(", "96", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv5x'", ")", "\n", "self", ".", "conv5y", "=", "self", ".", "conv", "(", "128", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv5y'", ")", "\n", "self", ".", "conv5z", "=", "self", ".", "conv", "(", "128", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv5z'", ")", "\n", "self", ".", "conv6x", "=", "self", ".", "conv", "(", "128", ",", "196", ",", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv6x'", ")", "\n", "self", ".", "conv6y", "=", "self", ".", "conv", "(", "196", ",", "196", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv6y'", ")", "\n", "self", ".", "conv6z", "=", "self", ".", "conv", "(", "196", ",", "196", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv6z'", ")", "\n", "\n", "self", ".", "leakyRELU", "=", "nn", ".", "LeakyReLU", "(", "0.1", ")", "\n", "ch", "=", "None", "\n", "\n", "self", ".", "conv6_0", "=", "self", ".", "conv", "(", "ch", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv6_0'", ")", "\n", "self", ".", "conv6_1", "=", "self", ".", "conv", "(", "ch", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv6_1'", ")", "\n", "self", ".", "conv6_2", "=", "self", ".", "conv", "(", "ch", ",", "96", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv6_2'", ")", "\n", "self", ".", "conv6_3", "=", "self", ".", "conv", "(", "ch", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv6_3'", ")", "\n", "self", ".", "conv6_4", "=", "self", ".", "conv", "(", "ch", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv6_4'", ")", "\n", "\n", "self", ".", "conv5_0", "=", "self", ".", "conv", "(", "ch", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv5_0'", ")", "\n", "self", ".", "conv5_1", "=", "self", ".", "conv", "(", "ch", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv5_1'", ")", "\n", "self", ".", "conv5_2", "=", "self", ".", "conv", "(", "ch", ",", "96", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv5_2'", ")", "\n", "self", ".", "conv5_3", "=", "self", ".", "conv", "(", "ch", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv5_3'", ")", "\n", "self", ".", "conv5_4", "=", "self", ".", "conv", "(", "ch", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv5_4'", ")", "\n", "\n", "self", ".", "conv4_0", "=", "self", ".", "conv", "(", "ch", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv4_0'", ")", "\n", "self", ".", "conv4_1", "=", "self", ".", "conv", "(", "ch", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv4_1'", ")", "\n", "self", ".", "conv4_2", "=", "self", ".", "conv", "(", "ch", ",", "96", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv4_2'", ")", "\n", "self", ".", "conv4_3", "=", "self", ".", "conv", "(", "ch", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv4_3'", ")", "\n", "self", ".", "conv4_4", "=", "self", ".", "conv", "(", "ch", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv4_4'", ")", "\n", "\n", "self", ".", "conv3_0", "=", "self", ".", "conv", "(", "ch", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv3_0'", ")", "\n", "self", ".", "conv3_1", "=", "self", ".", "conv", "(", "ch", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv3_1'", ")", "\n", "self", ".", "conv3_2", "=", "self", ".", "conv", "(", "ch", ",", "96", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv3_2'", ")", "\n", "self", ".", "conv3_3", "=", "self", ".", "conv", "(", "ch", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv3_3'", ")", "\n", "self", ".", "conv3_4", "=", "self", ".", "conv", "(", "ch", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv3_4'", ")", "\n", "\n", "self", ".", "conv2_0", "=", "self", ".", "conv", "(", "ch", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv2_0'", ")", "\n", "self", ".", "conv2_1", "=", "self", ".", "conv", "(", "ch", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv2_1'", ")", "\n", "self", ".", "conv2_2", "=", "self", ".", "conv", "(", "ch", ",", "96", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv2_2'", ")", "\n", "self", ".", "conv2_3", "=", "self", ".", "conv", "(", "ch", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv2_3'", ")", "\n", "self", ".", "conv2_4", "=", "self", ".", "conv", "(", "ch", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'conv2_4'", ")", "\n", "\n", "self", ".", "dc_conv1", "=", "self", ".", "conv", "(", "ch", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'dc_conv1'", ")", "\n", "self", ".", "dc_conv2", "=", "self", ".", "conv", "(", "ch", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "2", ",", "dilation", "=", "2", ",", "prefix", "=", "'dc_conv2'", ")", "\n", "self", ".", "dc_conv3", "=", "self", ".", "conv", "(", "ch", ",", "128", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "4", ",", "dilation", "=", "4", ",", "prefix", "=", "'dc_conv3'", ")", "\n", "self", ".", "dc_conv4", "=", "self", ".", "conv", "(", "ch", ",", "96", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "8", ",", "dilation", "=", "8", ",", "prefix", "=", "'dc_conv4'", ")", "\n", "self", ".", "dc_conv5", "=", "self", ".", "conv", "(", "ch", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "16", ",", "dilation", "=", "16", ",", "prefix", "=", "'dc_conv5'", ")", "\n", "self", ".", "dc_conv6", "=", "self", ".", "conv", "(", "ch", ",", "32", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "prefix", "=", "'dc_conv6'", ")", "\n", "self", ".", "dc_conv7", "=", "self", ".", "predict_flow", "(", "ch", ",", "prefix", "=", "'dc_conv7'", ")", "\n", "\n", "self", ".", "upfeat5", "=", "self", ".", "deconv", "(", "ch", ",", "self", ".", "upfeat_ch", "[", "0", "]", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "prefix", "=", "'upfeat5'", ")", "\n", "self", ".", "upfeat4", "=", "self", ".", "deconv", "(", "ch", ",", "self", ".", "upfeat_ch", "[", "1", "]", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "prefix", "=", "'upfeat4'", ")", "\n", "self", ".", "upfeat3", "=", "self", ".", "deconv", "(", "ch", ",", "self", ".", "upfeat_ch", "[", "2", "]", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "prefix", "=", "'upfeat3'", ")", "\n", "self", ".", "upfeat2", "=", "self", ".", "deconv", "(", "ch", ",", "self", ".", "upfeat_ch", "[", "3", "]", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "prefix", "=", "'upfeat2'", ")", "\n", "\n", "self", ".", "pred_flow6", "=", "self", ".", "predict_flow", "(", "ch", ",", "prefix", "=", "'pred_flow6'", ")", "\n", "self", ".", "pred_flow5", "=", "self", ".", "predict_flow", "(", "ch", ",", "prefix", "=", "'pred_flow5'", ")", "\n", "self", ".", "pred_flow4", "=", "self", ".", "predict_flow", "(", "ch", ",", "prefix", "=", "'pred_flow4'", ")", "\n", "self", ".", "pred_flow3", "=", "self", ".", "predict_flow", "(", "ch", ",", "prefix", "=", "'pred_flow3'", ")", "\n", "self", ".", "pred_flow2", "=", "self", ".", "predict_flow", "(", "ch", ",", "prefix", "=", "'pred_flow2'", ")", "\n", "\n", "self", ".", "deform6", "=", "layer", ".", "DeformableConv2D", "(", "196", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "1", ",", "use_bias", "=", "self", ".", "deform_bias", ",", "prefix", "=", "'deform6'", ")", "\n", "self", ".", "deform5", "=", "layer", ".", "DeformableConv2D", "(", "128", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "1", ",", "use_bias", "=", "self", ".", "deform_bias", ",", "prefix", "=", "'deform5'", ")", "\n", "self", ".", "deform4", "=", "layer", ".", "DeformableConv2D", "(", "96", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "1", ",", "use_bias", "=", "self", ".", "deform_bias", ",", "prefix", "=", "'deform4'", ")", "\n", "self", ".", "deform3", "=", "layer", ".", "DeformableConv2D", "(", "64", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "1", ",", "use_bias", "=", "self", ".", "deform_bias", ",", "prefix", "=", "'deform3'", ")", "\n", "self", ".", "deform2", "=", "layer", ".", "DeformableConv2D", "(", "32", ",", "kernel_size", "=", "3", ",", "strides", "=", "1", ",", "padding", "=", "1", ",", "use_bias", "=", "self", ".", "deform_bias", ",", "prefix", "=", "'deform2'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.load_head": [[410, 412], ["MaskFlownet.MaskFlownet.MaskFlownet_S.load_parameters"], "methods", ["None"], ["", "", "def", "load_head", "(", "self", ",", "ckpt", ",", "ctx", ")", ":", "\n", "\t\t", "self", ".", "MaskFlownet_S", ".", "load_parameters", "(", "ckpt", ",", "ctx", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.fix_head": [[413, 416], ["MaskFlownet.MaskFlownet.MaskFlownet_S.collect_params().items", "MaskFlownet.MaskFlownet.MaskFlownet_S.collect_params"], "methods", ["None"], ["", "def", "fix_head", "(", "self", ")", ":", "\n", "\t\t", "for", "_", ",", "w", "in", "self", ".", "MaskFlownet_S", ".", "collect_params", "(", ")", ".", "items", "(", ")", ":", "\n", "\t\t\t", "w", ".", "grad_req", "=", "'null'", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.conv": [[417, 425], ["mxnet.gluon.nn.HybridSequential", "mxnet.gluon.nn.HybridSequential.name_scope", "mxnet.gluon.nn.HybridSequential.add", "mxnet.gluon.nn.Conv2D", "mxnet.gluon.nn.HybridSequential.add"], "methods", ["None"], ["", "", "def", "conv", "(", "self", ",", "_", ",", "channels", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "dilation", "=", "1", ",", "activation", "=", "True", ",", "prefix", "=", "None", ")", ":", "\n", "\t\t", "net", "=", "nn", ".", "HybridSequential", "(", ")", "\n", "with", "net", ".", "name_scope", "(", ")", ":", "\n", "\t\t\t", "net", ".", "add", "(", "nn", ".", "Conv2D", "(", "channels", "=", "channels", ",", "kernel_size", "=", "kernel_size", ",", "strides", "=", "stride", ",", "padding", "=", "padding", ",", "dilation", "=", "dilation", ",", "prefix", "=", "prefix", ")", ")", "\n", "if", "activation", ":", "\n", "\t\t\t\t", "net", ".", "add", "(", "self", ".", "activate", ")", "\n", "\n", "", "", "return", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.deconv": [[426, 433], ["mxnet.gluon.nn.HybridSequential", "mxnet.gluon.nn.HybridSequential.name_scope", "mxnet.gluon.nn.HybridSequential.add", "mxnet.gluon.nn.HybridSequential.add", "mxnet.gluon.nn.Conv2DTranspose"], "methods", ["None"], ["", "def", "deconv", "(", "self", ",", "_", ",", "channels", ",", "kernel_size", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "1", ",", "prefix", "=", "None", ")", ":", "\n", "\t\t", "net", "=", "nn", ".", "HybridSequential", "(", ")", "\n", "with", "net", ".", "name_scope", "(", ")", ":", "\n", "\t\t\t", "net", ".", "add", "(", "nn", ".", "Conv2DTranspose", "(", "channels", "=", "channels", ",", "kernel_size", "=", "kernel_size", ",", "strides", "=", "stride", ",", "padding", "=", "padding", ",", "prefix", "=", "prefix", ")", ")", "\n", "net", ".", "add", "(", "self", ".", "activate", ")", "\n", "\n", "", "return", "net", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.predict_flow": [[434, 436], ["mxnet.gluon.nn.Conv2D"], "methods", ["None"], ["", "def", "predict_flow", "(", "self", ",", "_", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "prefix", "=", "None", ")", ":", "\n", "\t\t", "return", "nn", ".", "Conv2D", "(", "2", ",", "kernel_size", "=", "kernel_size", ",", "strides", "=", "stride", ",", "padding", "=", "padding", ",", "prefix", "=", "prefix", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.predict_mask": [[437, 439], ["mxnet.gluon.nn.Conv2D"], "methods", ["None"], ["", "def", "predict_mask", "(", "self", ",", "_", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "prefix", "=", "None", ")", ":", "\n", "\t\t", "return", "nn", ".", "Conv2D", "(", "1", ",", "kernel_size", "=", "kernel_size", ",", "strides", "=", "stride", ",", "padding", "=", "padding", ",", "prefix", "=", "prefix", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.corr": [[440, 442], ["F.Correlation"], "methods", ["None"], ["", "def", "corr", "(", "self", ",", "F", ",", "im1", ",", "im2", ",", "stride1", "=", "1", ",", "stride2", "=", "1", ")", ":", "\n", "\t\t", "return", "F", ".", "Correlation", "(", "im1", ",", "im2", ",", "pad_size", "=", "self", ".", "md", ",", "kernel_size", "=", "1", ",", "max_displacement", "=", "self", ".", "md", ",", "stride1", "=", "stride1", ",", "stride2", "=", "stride2", ",", "is_multiply", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.hybrid_forward": [[443, 546], ["MaskFlownet.MaskFlownet.MaskFlownet_S", "MaskFlownet.MaskFlownet.conv1z", "MaskFlownet.MaskFlownet.conv2z", "MaskFlownet.MaskFlownet.conv3z", "MaskFlownet.MaskFlownet.conv4z", "MaskFlownet.MaskFlownet.conv5z", "MaskFlownet.MaskFlownet.conv6z", "MaskFlownet.MaskFlownet.conv1z", "MaskFlownet.MaskFlownet.conv2z", "MaskFlownet.MaskFlownet.conv3z", "MaskFlownet.MaskFlownet.conv4z", "MaskFlownet.MaskFlownet.conv5z", "MaskFlownet.MaskFlownet.conv6z", "MaskFlownet.MaskFlownet.deform6", "MaskFlownet.MaskFlownet.leakyRELU", "MaskFlownet.MaskFlownet.leakyRELU", "MaskFlownet.MaskFlownet.leakyRELU", "F.concat", "F.concat", "F.concat", "F.concat", "F.concat", "F.concat", "MaskFlownet.MaskFlownet.upfeat5", "MaskFlownet.MaskFlownet.deform5", "MaskFlownet.MaskFlownet.leakyRELU", "MaskFlownet.MaskFlownet.leakyRELU", "MaskFlownet.MaskFlownet.leakyRELU", "F.concat", "F.concat", "F.concat", "F.concat", "F.concat", "F.concat", "MaskFlownet.MaskFlownet.upfeat4", "MaskFlownet.MaskFlownet.deform4", "MaskFlownet.MaskFlownet.leakyRELU", "MaskFlownet.MaskFlownet.leakyRELU", "MaskFlownet.MaskFlownet.leakyRELU", "F.concat", "F.concat", "F.concat", "F.concat", "F.concat", "F.concat", "MaskFlownet.MaskFlownet.upfeat3", "MaskFlownet.MaskFlownet.deform3", "MaskFlownet.MaskFlownet.leakyRELU", "MaskFlownet.MaskFlownet.leakyRELU", "MaskFlownet.MaskFlownet.leakyRELU", "F.concat", "F.concat", "F.concat", "F.concat", "F.concat", "F.concat", "MaskFlownet.MaskFlownet.upfeat2", "MaskFlownet.MaskFlownet.deform2", "MaskFlownet.MaskFlownet.leakyRELU", "MaskFlownet.MaskFlownet.leakyRELU", "MaskFlownet.MaskFlownet.leakyRELU", "F.concat", "F.concat", "F.concat", "F.concat", "F.concat", "F.concat", "MaskFlownet.MaskFlownet.dc_conv4", "visuals.append", "MaskFlownet.MaskFlownet.conv1y", "MaskFlownet.MaskFlownet.conv2y", "MaskFlownet.MaskFlownet.conv3y", "MaskFlownet.MaskFlownet.conv4y", "MaskFlownet.MaskFlownet.conv5y", "MaskFlownet.MaskFlownet.conv6y", "MaskFlownet.MaskFlownet.conv1y", "MaskFlownet.MaskFlownet.conv2y", "MaskFlownet.MaskFlownet.conv3y", "MaskFlownet.MaskFlownet.conv4y", "MaskFlownet.MaskFlownet.conv5y", "MaskFlownet.MaskFlownet.conv6y", "F.repeat().reshape", "MaskFlownet.MaskFlownet.corr", "MaskFlownet.MaskFlownet.corr", "MaskFlownet.MaskFlownet.conv6_0", "MaskFlownet.MaskFlownet.conv6_1", "MaskFlownet.MaskFlownet.conv6_2", "MaskFlownet.MaskFlownet.conv6_3", "MaskFlownet.MaskFlownet.conv6_4", "MaskFlownet.MaskFlownet.pred_flow6", "MaskFlownet.Upsample", "F.repeat().reshape", "MaskFlownet.MaskFlownet.corr", "MaskFlownet.MaskFlownet.corr", "MaskFlownet.MaskFlownet.conv5_0", "MaskFlownet.MaskFlownet.conv5_1", "MaskFlownet.MaskFlownet.conv5_2", "MaskFlownet.MaskFlownet.conv5_3", "MaskFlownet.MaskFlownet.conv5_4", "MaskFlownet.MaskFlownet.pred_flow5", "MaskFlownet.Upsample", "F.repeat().reshape", "MaskFlownet.MaskFlownet.corr", "MaskFlownet.MaskFlownet.corr", "MaskFlownet.MaskFlownet.conv4_0", "MaskFlownet.MaskFlownet.conv4_1", "MaskFlownet.MaskFlownet.conv4_2", "MaskFlownet.MaskFlownet.conv4_3", "MaskFlownet.MaskFlownet.conv4_4", "MaskFlownet.MaskFlownet.pred_flow4", "MaskFlownet.Upsample", "F.repeat().reshape", "MaskFlownet.MaskFlownet.corr", "MaskFlownet.MaskFlownet.corr", "MaskFlownet.MaskFlownet.conv3_0", "MaskFlownet.MaskFlownet.conv3_1", "MaskFlownet.MaskFlownet.conv3_2", "MaskFlownet.MaskFlownet.conv3_3", "MaskFlownet.MaskFlownet.conv3_4", "MaskFlownet.MaskFlownet.pred_flow3", "MaskFlownet.Upsample", "F.repeat().reshape", "MaskFlownet.MaskFlownet.corr", "MaskFlownet.MaskFlownet.corr", "MaskFlownet.MaskFlownet.conv2_0", "MaskFlownet.MaskFlownet.conv2_1", "MaskFlownet.MaskFlownet.conv2_2", "MaskFlownet.MaskFlownet.conv2_3", "MaskFlownet.MaskFlownet.conv2_4", "MaskFlownet.MaskFlownet.pred_flow2", "MaskFlownet.MaskFlownet.dc_conv3", "MaskFlownet.MaskFlownet.dc_conv7", "flow2.slice_axis", "MaskFlownet.MaskFlownet.conv1x", "MaskFlownet.MaskFlownet.conv2x", "MaskFlownet.MaskFlownet.conv3x", "MaskFlownet.MaskFlownet.conv4x", "MaskFlownet.MaskFlownet.conv5x", "MaskFlownet.MaskFlownet.conv6x", "MaskFlownet.MaskFlownet.conv1x", "MaskFlownet.MaskFlownet.conv2x", "MaskFlownet.MaskFlownet.conv3x", "MaskFlownet.MaskFlownet.conv4x", "MaskFlownet.MaskFlownet.conv5x", "MaskFlownet.MaskFlownet.conv6x", "MaskFlownet.MaskFlownet.dc_conv2", "MaskFlownet.MaskFlownet.dc_conv6", "F.repeat", "F.repeat", "F.repeat", "F.repeat", "F.repeat", "MaskFlownet.MaskFlownet.dc_conv1", "MaskFlownet.MaskFlownet.dc_conv5", "F.expand_dims", "F.expand_dims", "F.expand_dims", "F.expand_dims", "F.expand_dims"], "methods", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.corr", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.corr", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.corr", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.corr", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.corr", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.corr", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.corr", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.corr", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.corr", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MaskFlownet.corr"], ["", "def", "hybrid_forward", "(", "self", ",", "F", ",", "im1", ",", "im2", ")", ":", "\n", "\t\t", "_", ",", "_", ",", "srcs", "=", "self", ".", "MaskFlownet_S", "(", "im1", ",", "im2", ")", "\n", "c1s", ",", "c2s", ",", "flows", ",", "c30", ",", "c40", "=", "srcs", "\n", "c11", ",", "c12", ",", "c13", ",", "c14", ",", "c15", ",", "c16", "=", "c1s", "\n", "c21", ",", "c22", ",", "c23", ",", "c24", ",", "c25", ",", "c26", "=", "c2s", "\n", "\n", "c31", "=", "self", ".", "conv1z", "(", "self", ".", "conv1y", "(", "self", ".", "conv1x", "(", "c30", ")", ")", ")", "\n", "c32", "=", "self", ".", "conv2z", "(", "self", ".", "conv2y", "(", "self", ".", "conv2x", "(", "c31", ")", ")", ")", "\n", "c33", "=", "self", ".", "conv3z", "(", "self", ".", "conv3y", "(", "self", ".", "conv3x", "(", "c32", ")", ")", ")", "\n", "c34", "=", "self", ".", "conv4z", "(", "self", ".", "conv4y", "(", "self", ".", "conv4x", "(", "c33", ")", ")", ")", "\n", "c35", "=", "self", ".", "conv5z", "(", "self", ".", "conv5y", "(", "self", ".", "conv5x", "(", "c34", ")", ")", ")", "\n", "c36", "=", "self", ".", "conv6z", "(", "self", ".", "conv6y", "(", "self", ".", "conv6x", "(", "c35", ")", ")", ")", "\n", "\n", "c41", "=", "self", ".", "conv1z", "(", "self", ".", "conv1y", "(", "self", ".", "conv1x", "(", "c40", ")", ")", ")", "\n", "c42", "=", "self", ".", "conv2z", "(", "self", ".", "conv2y", "(", "self", ".", "conv2x", "(", "c41", ")", ")", ")", "\n", "c43", "=", "self", ".", "conv3z", "(", "self", ".", "conv3y", "(", "self", ".", "conv3x", "(", "c42", ")", ")", ")", "\n", "c44", "=", "self", ".", "conv4z", "(", "self", ".", "conv4y", "(", "self", ".", "conv4x", "(", "c43", ")", ")", ")", "\n", "c45", "=", "self", ".", "conv5z", "(", "self", ".", "conv5y", "(", "self", ".", "conv5x", "(", "c44", ")", ")", ")", "\n", "c46", "=", "self", ".", "conv6z", "(", "self", ".", "conv6y", "(", "self", ".", "conv6x", "(", "c45", ")", ")", ")", "\n", "\n", "\n", "flow6", "=", "flows", "[", "0", "]", "\n", "warp6u", "=", "self", ".", "deform6", "(", "c26", ",", "F", ".", "repeat", "(", "F", ".", "expand_dims", "(", "flow6", "*", "self", ".", "scale", "/", "self", ".", "strides", "[", "0", "]", ",", "axis", "=", "1", ")", ",", "9", ",", "axis", "=", "1", ")", ".", "reshape", "(", "(", "0", ",", "-", "3", ",", "-", "2", ")", ")", ")", "\n", "warp6u", "=", "self", ".", "leakyRELU", "(", "warp6u", ")", "\n", "corr6u", "=", "self", ".", "leakyRELU", "(", "self", ".", "corr", "(", "F", ",", "c16", ",", "warp6u", ")", ")", "\n", "warp6v", "=", "c46", "\n", "corr6v", "=", "self", ".", "leakyRELU", "(", "self", ".", "corr", "(", "F", ",", "c36", ",", "warp6v", ")", ")", "\n", "x", "=", "F", ".", "concat", "(", "corr6u", ",", "corr6v", ",", "flow6", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv6_0", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv6_1", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv6_2", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv6_3", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv6_4", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "flow6", "=", "flow6", "+", "self", ".", "pred_flow6", "(", "x", ")", "\n", "\n", "feat5", "=", "self", ".", "upfeat5", "(", "x", ")", "\n", "flow5", "=", "Upsample", "(", "2", ")", "(", "flow6", ")", "\n", "warp5u", "=", "self", ".", "deform5", "(", "c25", ",", "F", ".", "repeat", "(", "F", ".", "expand_dims", "(", "flow5", "*", "self", ".", "scale", "/", "self", ".", "strides", "[", "1", "]", ",", "axis", "=", "1", ")", ",", "9", ",", "axis", "=", "1", ")", ".", "reshape", "(", "(", "0", ",", "-", "3", ",", "-", "2", ")", ")", ")", "\n", "warp5u", "=", "self", ".", "leakyRELU", "(", "warp5u", ")", "\n", "corr5u", "=", "self", ".", "leakyRELU", "(", "self", ".", "corr", "(", "F", ",", "c15", ",", "warp5u", ")", ")", "\n", "warp5v", "=", "c45", "\n", "corr5v", "=", "self", ".", "leakyRELU", "(", "self", ".", "corr", "(", "F", ",", "c35", ",", "warp5v", ")", ")", "\n", "x", "=", "F", ".", "concat", "(", "c15", ",", "feat5", ",", "corr5u", ",", "corr5v", ",", "flow5", ",", "flows", "[", "1", "]", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv5_0", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv5_1", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv5_2", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv5_3", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv5_4", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "flow5", "=", "flow5", "+", "self", ".", "pred_flow5", "(", "x", ")", "\n", "\n", "feat4", "=", "self", ".", "upfeat4", "(", "x", ")", "\n", "flow4", "=", "Upsample", "(", "2", ")", "(", "flow5", ")", "\n", "warp4u", "=", "self", ".", "deform4", "(", "c24", ",", "F", ".", "repeat", "(", "F", ".", "expand_dims", "(", "flow4", "*", "self", ".", "scale", "/", "self", ".", "strides", "[", "2", "]", ",", "axis", "=", "1", ")", ",", "9", ",", "axis", "=", "1", ")", ".", "reshape", "(", "(", "0", ",", "-", "3", ",", "-", "2", ")", ")", ")", "\n", "warp4u", "=", "self", ".", "leakyRELU", "(", "warp4u", ")", "\n", "corr4u", "=", "self", ".", "leakyRELU", "(", "self", ".", "corr", "(", "F", ",", "c14", ",", "warp4u", ")", ")", "\n", "warp4v", "=", "c44", "\n", "corr4v", "=", "self", ".", "leakyRELU", "(", "self", ".", "corr", "(", "F", ",", "c34", ",", "warp4v", ")", ")", "\n", "x", "=", "F", ".", "concat", "(", "c14", ",", "feat4", ",", "corr4u", ",", "corr4v", ",", "flow4", ",", "flows", "[", "2", "]", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv4_0", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv4_1", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv4_2", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv4_3", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv4_4", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "flow4", "=", "flow4", "+", "self", ".", "pred_flow4", "(", "x", ")", "\n", "\n", "feat3", "=", "self", ".", "upfeat3", "(", "x", ")", "\n", "flow3", "=", "Upsample", "(", "2", ")", "(", "flow4", ")", "\n", "warp3u", "=", "self", ".", "deform3", "(", "c23", ",", "F", ".", "repeat", "(", "F", ".", "expand_dims", "(", "flow3", "*", "self", ".", "scale", "/", "self", ".", "strides", "[", "3", "]", ",", "axis", "=", "1", ")", ",", "9", ",", "axis", "=", "1", ")", ".", "reshape", "(", "(", "0", ",", "-", "3", ",", "-", "2", ")", ")", ")", "\n", "warp3u", "=", "self", ".", "leakyRELU", "(", "warp3u", ")", "\n", "corr3u", "=", "self", ".", "leakyRELU", "(", "self", ".", "corr", "(", "F", ",", "c13", ",", "warp3u", ")", ")", "\n", "warp3v", "=", "c43", "\n", "corr3v", "=", "self", ".", "leakyRELU", "(", "self", ".", "corr", "(", "F", ",", "c33", ",", "warp3v", ")", ")", "\n", "x", "=", "F", ".", "concat", "(", "c13", ",", "feat3", ",", "corr3u", ",", "corr3v", ",", "flow3", ",", "flows", "[", "3", "]", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv3_0", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv3_1", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv3_2", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv3_3", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv3_4", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "flow3", "=", "flow3", "+", "self", ".", "pred_flow3", "(", "x", ")", "\n", "\n", "feat2", "=", "self", ".", "upfeat2", "(", "x", ")", "\n", "flow2", "=", "Upsample", "(", "2", ")", "(", "flow3", ")", "\n", "warp2u", "=", "self", ".", "deform2", "(", "c22", ",", "F", ".", "repeat", "(", "F", ".", "expand_dims", "(", "flow2", "*", "self", ".", "scale", "/", "self", ".", "strides", "[", "4", "]", ",", "axis", "=", "1", ")", ",", "9", ",", "axis", "=", "1", ")", ".", "reshape", "(", "(", "0", ",", "-", "3", ",", "-", "2", ")", ")", ")", "\n", "warp2u", "=", "self", ".", "leakyRELU", "(", "warp2u", ")", "\n", "corr2u", "=", "self", ".", "leakyRELU", "(", "self", ".", "corr", "(", "F", ",", "c12", ",", "warp2u", ")", ")", "\n", "warp2v", "=", "c42", "\n", "corr2v", "=", "self", ".", "leakyRELU", "(", "self", ".", "corr", "(", "F", ",", "c32", ",", "warp2v", ")", ")", "\n", "x", "=", "F", ".", "concat", "(", "c12", ",", "feat2", ",", "corr2u", ",", "corr2v", ",", "flow2", ",", "flows", "[", "4", "]", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv2_0", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv2_1", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv2_2", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv2_3", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "x", "=", "F", ".", "concat", "(", "self", ".", "conv2_4", "(", "x", ")", ",", "x", ",", "dim", "=", "1", ")", "\n", "flow2", "=", "flow2", "+", "self", ".", "pred_flow2", "(", "x", ")", "\n", "\n", "\n", "x", "=", "self", ".", "dc_conv4", "(", "self", ".", "dc_conv3", "(", "self", ".", "dc_conv2", "(", "self", ".", "dc_conv1", "(", "x", ")", ")", ")", ")", "\n", "flow2", "=", "flow2", "+", "self", ".", "dc_conv7", "(", "self", ".", "dc_conv6", "(", "self", ".", "dc_conv5", "(", "x", ")", ")", ")", "\n", "\n", "preds", "=", "[", "flow", "*", "self", ".", "scale", "for", "flow", "in", "[", "flow6", ",", "flow5", ",", "flow4", ",", "flow3", ",", "flow2", "]", "]", "\n", "visuals", "=", "[", "]", "\n", "visuals", ".", "append", "(", "flow2", ".", "slice_axis", "(", "axis", "=", "1", ",", "begin", "=", "0", ",", "end", "=", "1", ")", ")", "\n", "return", "preds", ",", "visuals", ",", "[", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.EpeLoss.__init__": [[555, 558], ["mxnet.gluon.nn.HybridBlock.__init__"], "methods", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.reader.sintel.Flo.__init__"], ["def", "__init__", "(", "self", ",", "eps", "=", "0", ",", "**", "kwargs", ")", ":", "\n", "\t\t", "super", "(", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "self", ".", "eps", "=", "eps", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.EpeLoss.hybrid_forward": [[559, 562], ["F.sqrt", "F.mean", "F.sum", "F.square"], "methods", ["None"], ["", "def", "hybrid_forward", "(", "self", ",", "F", ",", "pred", ",", "label", ")", ":", "\n", "\t\t", "loss", "=", "F", ".", "sqrt", "(", "F", ".", "sum", "(", "F", ".", "square", "(", "pred", "-", "label", ")", ",", "axis", "=", "1", ")", "+", "self", ".", "eps", ")", "\n", "return", "F", ".", "mean", "(", "loss", ",", "axis", "=", "0", ",", "exclude", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.EpeLossWithMask.__init__": [[571, 575], ["mxnet.gluon.nn.HybridBlock.__init__"], "methods", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.reader.sintel.Flo.__init__"], ["def", "__init__", "(", "self", ",", "eps", "=", "1e-8", ",", "q", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "\t\t", "super", "(", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "self", ".", "eps", "=", "eps", "\n", "self", ".", "q", "=", "q", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.EpeLossWithMask.hybrid_forward": [[576, 584], ["F.broadcast_mul", "F.sqrt", "mask.squeeze", "F.sum", "F.sum", "F.sum", "F.sum", "F.abs", "F.square"], "methods", ["None"], ["", "def", "hybrid_forward", "(", "self", ",", "F", ",", "pred", ",", "label", ",", "mask", ")", ":", "\n", "\t\t", "if", "self", ".", "q", "is", "not", "None", ":", "\n", "\t\t\t", "loss", "=", "(", "F", ".", "sum", "(", "F", ".", "abs", "(", "pred", "-", "label", ")", ",", "axis", "=", "1", ")", "+", "self", ".", "eps", ")", "**", "self", ".", "q", "\n", "", "else", ":", "\n", "\t\t\t", "loss", "=", "F", ".", "sqrt", "(", "F", ".", "sum", "(", "F", ".", "square", "(", "pred", "-", "label", ")", ",", "axis", "=", "1", ")", "+", "self", ".", "eps", ")", "\n", "", "loss", "=", "F", ".", "broadcast_mul", "(", "loss", ",", "mask", ".", "squeeze", "(", "axis", "=", "1", ")", ")", "\n", "loss", "=", "F", ".", "sum", "(", "loss", ",", "axis", "=", "0", ",", "exclude", "=", "True", ")", "/", "F", ".", "sum", "(", "mask", ",", "axis", "=", "0", ",", "exclude", "=", "True", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MultiscaleEpe.__init__": [[586, 598], ["mxnet.gluon.nn.HybridBlock.__init__", "MaskFlownet.MultiscaleEpe.name_scope", "setattr", "MaskFlownet.Upsample"], "methods", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.reader.sintel.Flo.__init__"], ["\t", "def", "__init__", "(", "self", ",", "scales", ",", "weights", ",", "match", ",", "eps", "=", "1e-8", ",", "q", "=", "None", ",", "**", "kwargs", ")", ":", "\n", "\t\t", "super", "(", ")", ".", "__init__", "(", "**", "kwargs", ")", "\n", "\n", "self", ".", "scales", "=", "scales", "\n", "self", ".", "weights", "=", "weights", "\n", "self", ".", "match", "=", "match", "\n", "self", ".", "eps", "=", "eps", "\n", "self", ".", "q", "=", "q", "\n", "if", "match", "==", "'upsampling'", ":", "\n", "\t\t\t", "with", "self", ".", "name_scope", "(", ")", ":", "\n", "\t\t\t\t", "for", "s", "in", "self", ".", "scales", ":", "\n", "\t\t\t\t\t", "setattr", "(", "self", ",", "'upsampler_{}'", ".", "format", "(", "s", ")", ",", "Upsample", "(", "s", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MultiscaleEpe._get_upsampler": [[599, 601], ["getattr"], "methods", ["None"], ["", "", "", "", "def", "_get_upsampler", "(", "self", ",", "s", ")", ":", "\n", "\t\t", "return", "getattr", "(", "self", ",", "'upsampler_{}'", ".", "format", "(", "s", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MultiscaleEpe.hybrid_forward": [[602, 612], ["F.add_n", "zip", "MaskFlownet.EpeLossWithMask", "zip", "MaskFlownet.MultiscaleEpe._get_upsampler", "MaskFlownet.EpeLossWithMask", "MaskFlownet.Downsample", "MaskFlownet.Downsample"], "methods", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.MaskFlownet.MultiscaleEpe._get_upsampler"], ["", "def", "hybrid_forward", "(", "self", ",", "F", ",", "flow", ",", "mask", ",", "*", "predictions", ")", ":", "\n", "\t\t", "if", "self", ".", "match", "==", "'upsampling'", ":", "\n", "\t\t\t", "losses", "=", "[", "EpeLossWithMask", "(", "eps", "=", "self", ".", "eps", ",", "q", "=", "self", ".", "q", ")", "(", "self", ".", "_get_upsampler", "(", "s", ")", "(", "p", ")", ",", "flow", ",", "mask", ")", "*", "w", "\n", "for", "p", ",", "w", ",", "s", "in", "zip", "(", "predictions", ",", "self", ".", "weights", ",", "self", ".", "scales", ")", "]", "\n", "", "elif", "self", ".", "match", "==", "'downsampling'", ":", "\n", "\t\t\t", "losses", "=", "[", "EpeLossWithMask", "(", "eps", "=", "self", ".", "eps", ",", "q", "=", "self", ".", "q", ")", "(", "p", ",", "Downsample", "(", "s", ")", "(", "flow", ")", ",", "Downsample", "(", "s", ")", "(", "mask", ")", ")", "*", "w", "\n", "for", "p", ",", "w", ",", "s", "in", "zip", "(", "predictions", ",", "self", ".", "weights", ",", "self", ".", "scales", ")", "]", "\n", "", "else", ":", "\n", "\t\t\t", "raise", "NotImplementedError", "\n", "", "return", "F", ".", "add_n", "(", "*", "losses", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.network.__init__.get_pipeline": [[5, 10], ["pipeline.PipelineFlownet"], "function", ["None"], ["def", "get_pipeline", "(", "network", ",", "**", "kwargs", ")", ":", "\n", "\t", "if", "network", "==", "'MaskFlownet'", ":", "\n", "\t\t", "return", "pipeline", ".", "PipelineFlownet", "(", "**", "kwargs", ")", "\n", "", "else", ":", "\n", "\t\t", "raise", "NotImplementedError", "\n", "", "", ""]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.config.__init__.Reader.__init__": [[2, 5], ["None"], "methods", ["None"], ["from", ".", "import", "MaskFlownet", "\n", "from", ".", "import", "pipeline", "\n", "\n", "def", "get_pipeline", "(", "network", ",", "**", "kwargs", ")", ":", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.config.__init__.Reader.__getattr__": [[6, 12], ["__init__.Reader", "__init__.Reader._object.get"], "methods", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.config.__init__.Reader.get"], ["\t", "if", "network", "==", "'MaskFlownet'", ":", "\n", "\t\t", "return", "pipeline", ".", "PipelineFlownet", "(", "**", "kwargs", ")", "\n", "", "else", ":", "\n", "\t\t", "raise", "NotImplementedError", "\n", "", "", ""]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.config.__init__.Reader.get": [[13, 19], ["print"], "methods", ["None"], []], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.config.__init__.Reader.value": [[20, 23], ["None"], "methods", ["None"], []], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.reader.things3d.Flo.__init__": [[39, 51], ["float", "int", "int", "struct.pack", "len", "Exception"], "methods", ["None"], ["\t", "def", "__init__", "(", "self", ",", "w", ",", "h", ")", ":", "\n", "\t\t", "self", ".", "__floec1__", "=", "float", "(", "202021.25", ")", "\n", "self", ".", "__floec2__", "=", "int", "(", "w", ")", "\n", "self", ".", "__floec3__", "=", "int", "(", "h", ")", "\n", "self", ".", "__floheader__", "=", "struct", ".", "pack", "(", "'fii'", ",", "self", ".", "__floec1__", ",", "self", ".", "__floec2__", ",", "self", ".", "__floec3__", ")", "\n", "self", ".", "__floheaderlen__", "=", "len", "(", "self", ".", "__floheader__", ")", "\n", "self", ".", "__flow__", "=", "w", "\n", "self", ".", "__floh__", "=", "h", "\n", "self", ".", "__floshape__", "=", "[", "self", ".", "__floh__", ",", "self", ".", "__flow__", ",", "2", "]", "\n", "\n", "if", "self", ".", "__floheader__", "[", ":", "4", "]", "!=", "b'PIEH'", ":", "\n", "\t\t\t", "raise", "Exception", "(", "'Expect machine to be LE.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.reader.things3d.Flo.load": [[52, 61], ["open", "numpy.ndarray", "fp.read", "Exception", "fp.read"], "methods", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.chairs.trainval.read", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.chairs.trainval.read"], ["", "", "def", "load", "(", "self", ",", "file", ")", ":", "\n", "\t\t", "with", "open", "(", "file", ",", "'rb'", ")", "as", "fp", ":", "\n", "\t\t\t", "if", "fp", ".", "read", "(", "self", ".", "__floheaderlen__", ")", "!=", "self", ".", "__floheader__", ":", "\n", "\t\t\t\t", "raise", "Exception", "(", "'Bad flow header: '", "+", "file", ")", "\n", "", "result", "=", "np", ".", "ndarray", "(", "shape", "=", "self", ".", "__floshape__", ",", "\n", "dtype", "=", "np", ".", "float32", ",", "\n", "buffer", "=", "fp", ".", "read", "(", ")", ",", "\n", "order", "=", "'C'", ")", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.reader.things3d.Flo.save": [[62, 66], ["open", "fp.write", "fp.write", "arr.astype().tobytes", "arr.astype"], "methods", ["None"], ["", "", "def", "save", "(", "self", ",", "arr", ",", "fname", ")", ":", "\n", "\t\t", "with", "open", "(", "fname", ",", "'wb'", ")", "as", "fp", ":", "\n", "\t\t\t", "fp", ".", "write", "(", "self", ".", "__floheader__", ")", "\n", "fp", ".", "write", "(", "arr", ".", "astype", "(", "np", ".", "float32", ")", ".", "tobytes", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.reader.things3d.list_data": [[9, 37], ["dict", "os.path.join", "os.path.join", "os.listdir", "dataset[].append", "dataset[].append", "int", "dataset[].append", "os.path.join", "os.path.join", "os.path.join", "dir_flow.replace", "dir_flow.replace().replace", "dir_flow.replace"], "function", ["None"], ["def", "list_data", "(", "path", "=", "None", ",", "sub_type", "=", "'clean'", ")", ":", "\n", "\t", "if", "path", "is", "None", ":", "\n", "\t\t", "path", "=", "things3d_root", "\n", "", "parts", "=", "(", "'train'", ",", ")", "# 'val')", "\n", "sub_types", "=", "(", "sub_type", ",", ")", "\n", "if", "sub_type", "==", "'mixed'", ":", "\n", "\t\t", "sub_types", "=", "(", "'clean'", ",", "'final'", ")", "\n", "", "orients", "=", "(", "'into_future'", ",", "'into_past'", ")", "\n", "cameras", "=", "(", "'left'", ",", "'right'", ")", "\n", "dataset", "=", "dict", "(", ")", "\n", "dataset", "[", "'image_0'", "]", "=", "[", "]", "\n", "dataset", "[", "'image_1'", "]", "=", "[", "]", "\n", "dataset", "[", "'flow'", "]", "=", "[", "]", "\n", "for", "part", "in", "parts", ":", "\n", "\t\t", "for", "sub_type", "in", "sub_types", ":", "\n", "\t\t\t", "for", "camera", "in", "cameras", ":", "\n", "\t\t\t\t", "for", "orient", "in", "orients", ":", "\n", "\t\t\t\t\t", "flow_ind", "=", "1", "if", "orient", "==", "'into_future'", "else", "-", "1", "\n", "path_image", "=", "os", ".", "path", ".", "join", "(", "path", ",", "part", ",", "'image_'", "+", "sub_type", ",", "camera", ")", "\n", "path_flow", "=", "os", ".", "path", ".", "join", "(", "path", ",", "part", ",", "'flow'", ",", "camera", ",", "orient", ")", "\n", "dirs_flow", "=", "os", ".", "listdir", "(", "path_flow", ")", "\n", "for", "dir_flow", "in", "dirs_flow", ":", "\n", "\t\t\t\t\t\t", "dataset", "[", "'flow'", "]", ".", "append", "(", "os", ".", "path", ".", "join", "(", "path_flow", ",", "dir_flow", ")", ")", "\n", "dataset", "[", "'image_0'", "]", ".", "append", "(", "os", ".", "path", ".", "join", "(", "path_image", ",", "dir_flow", ".", "replace", "(", "'flo'", ",", "'png'", ")", ")", ")", "\n", "ind", "=", "int", "(", "dir_flow", "[", "-", "11", ":", "-", "4", "]", ")", "\n", "dataset", "[", "'image_1'", "]", ".", "append", "(", "os", ".", "path", ".", "join", "(", "path_image", ",", "dir_flow", ".", "replace", "(", "'flo'", ",", "'png'", ")", ".", "replace", "(", "'%07d'", "%", "ind", ",", "'%07d'", "%", "(", "ind", "+", "flow_ind", ")", ")", ")", ")", "\n", "\n", "", "", "", "", "", "return", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.reader.things3d.load": [[67, 72], ["functools.lru_cache", "things3d.Flo", "fname.endswith", "things3d.Flo.load"], "function", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.chairs.flo.load"], ["", "", "", "@", "lru_cache", "(", "maxsize", "=", "None", ")", "\n", "def", "load", "(", "fname", ")", ":", "\n", "\t", "flo", "=", "Flo", "(", "960", ",", "540", ")", "\n", "if", "fname", ".", "endswith", "(", "'flo'", ")", ":", "\n", "\t\t", "return", "flo", ".", "load", "(", "fname", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.reader.hd1k.read_dataset": [[16, 84], ["dict", "os.listdir", "len", "range", "len", "min", "int", "int", "numpy.flip().astype", "flow_occ[].astype", "dataset[].append", "dataset[].append", "dataset[].append", "dataset[].append", "cv2.imread", "cv2.imread", "cv2.imread", "cv2.resize", "cv2.resize", "os.path.join", "os.path.join", "os.path.join", "min", "max", "numpy.flip", "cv2.resize", "cv2.resize", "cv2.resize.min", "cv2.resize.min", "cv2.resize.max", "cv2.resize.max", "flow_occ[].astype.astype", "numpy.array", "numpy.array"], "function", ["None"], ["def", "read_dataset", "(", "path", "=", "None", ",", "parts", "=", "'mixed'", ",", "resize", "=", "None", ",", "samples", "=", "-", "1", ",", "normalize", "=", "True", ",", "crop", "=", "(", "50", ",", "100", ")", ")", ":", "\n", "\t", "if", "path", "is", "None", ":", "\n", "\t\t", "path", "=", "hd1k_path", "\n", "", "dataset", "=", "dict", "(", ")", "\n", "dataset", "[", "'image_0'", "]", "=", "[", "]", "\n", "dataset", "[", "'image_1'", "]", "=", "[", "]", "\n", "dataset", "[", "'flow'", "]", "=", "[", "]", "\n", "dataset", "[", "'occ'", "]", "=", "[", "]", "\n", "path_images", "=", "path", "[", "'image'", "]", "\n", "path_flows", "=", "path", "[", "'flow_occ'", "]", "\n", "list_files", "=", "os", ".", "listdir", "(", "path_flows", ")", "\n", "num_files", "=", "len", "(", "list_files", ")", "-", "1", "\n", "ind_valids", "=", "VALIDATE_INDICES", "\n", "num_valids", "=", "len", "(", "ind_valids", ")", "\n", "if", "samples", "is", "not", "-", "1", ":", "\n", "\t\t", "num_files", "=", "min", "(", "num_files", ",", "samples", ")", "\n", "", "ind", "=", "0", "\n", "i_pre", "=", "-", "1", "\n", "i_cur", "=", "0", "\n", "j_cur", "=", "0", "\n", "for", "k", "in", "range", "(", "num_files", ")", ":", "\n", "\t\t", "if", "ind", "<", "num_valids", "and", "ind_valids", "[", "ind", "]", "==", "k", ":", "\n", "\t\t\t", "ind", "+=", "1", "\n", "if", "parts", "==", "'train'", ":", "\n", "\t\t\t\t", "continue", "\n", "", "", "elif", "parts", "==", "'valid'", ":", "\n", "\t\t\t", "continue", "\n", "", "i_cur", "=", "(", "int", ")", "(", "list_files", "[", "k", "]", "[", "-", "15", ":", "-", "9", "]", ")", "\n", "j_cur", "=", "(", "int", ")", "(", "list_files", "[", "k", "]", "[", "-", "8", ":", "-", "4", "]", ")", "\n", "flag", "=", "False", "\n", "if", "i_cur", "!=", "i_pre", ":", "\n", "\t\t\t", "flag", "=", "True", "\n", "", "i_pre", "=", "i_cur", "\n", "if", "flag", ":", "\n", "\t\t\t", "continue", "\n", "", "img0", "=", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "path_images", ",", "'%06d_%04d.png'", "%", "(", "i_cur", ",", "j_cur", "-", "1", ")", ")", ")", "[", "crop", "[", "0", "]", ":", "-", "crop", "[", "0", "]", ",", "crop", "[", "1", "]", ":", "-", "crop", "[", "1", "]", "]", "\n", "img1", "=", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "path_images", ",", "'%06d_%04d.png'", "%", "(", "i_cur", ",", "j_cur", ")", ")", ")", "[", "crop", "[", "0", "]", ":", "-", "crop", "[", "0", "]", ",", "crop", "[", "1", "]", ":", "-", "crop", "[", "1", "]", "]", "\n", "flow_occ", "=", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "path_flows", ",", "'%06d_%04d.png'", "%", "(", "i_cur", ",", "j_cur", "-", "1", ")", ")", ",", "-", "1", ")", "[", "crop", "[", "0", "]", ":", "-", "crop", "[", "0", "]", ",", "crop", "[", "1", "]", ":", "-", "crop", "[", "1", "]", "]", "\n", "if", "normalize", ":", "\n", "\t\t\t", "img_min", ",", "img_max", "=", "min", "(", "img0", ".", "min", "(", ")", ",", "img1", ".", "min", "(", ")", ")", ",", "max", "(", "img0", ".", "max", "(", ")", ",", "img1", ".", "max", "(", ")", ")", "\n", "img0", ",", "img1", "=", "[", "(", "(", "img", "-", "img_min", ")", "*", "(", "255.0", "/", "(", "img_max", "-", "img_min", ")", ")", ")", ".", "astype", "(", "np", ".", "uint8", ")", "for", "img", "in", "(", "img0", ",", "img1", ")", "]", "\n", "", "flow", "=", "np", ".", "flip", "(", "flow_occ", "[", "...", ",", "1", ":", "3", "]", ",", "axis", "=", "-", "1", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "flow", "=", "(", "flow", "-", "32768.", ")", "/", "(", "64.", ")", "\n", "occ", "=", "flow_occ", "[", "...", ",", "0", ":", "1", "]", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "flow", "=", "flow", "*", "occ", "\n", "# flow_avg = np.zeros((flow.shape[0] + 2, flow.shape[1] + 2, flow.shape[2]))", "\n", "# occ_avg = np.zeros((occ.shape[0] + 2, occ.shape[1] + 2, occ.shape[2]))", "\n", "# for i in range(3):", "\n", "#\t for j in range(3):", "\n", "#\t\t flow_avg += np.pad(flow, [(i, 2 - i), (j, 2 - j), (0, 0)], 'constant')", "\n", "#\t\t occ_avg += np.pad(occ, [(i, 2 - i), (j, 2 - j), (0, 0)], 'constant')", "\n", "# occ_avg[occ_avg == 0] = 10 ", "\n", "# flow += flow_avg[1:-1, 1:-1, ...] / occ_avg[1:-1, 1:-1, ...] * (1 - occ)", "\n", "if", "resize", "is", "not", "None", ":", "\n", "\t\t\t", "img0", "=", "cv2", ".", "resize", "(", "img0", ",", "resize", ")", "\n", "img1", "=", "cv2", ".", "resize", "(", "img1", ",", "resize", ")", "\n", "flow", "=", "cv2", ".", "resize", "(", "flow", ",", "resize", ")", "*", "(", "(", "np", ".", "array", "(", "resize", ",", "dtype", "=", "np", ".", "float32", ")", "-", "1.0", ")", "/", "(", "\n", "np", ".", "array", "(", "[", "flow", ".", "shape", "[", "d", "]", "for", "d", "in", "(", "1", ",", "0", ")", "]", ",", "dtype", "=", "np", ".", "float32", ")", "-", "1.0", ")", ")", "[", "np", ".", "newaxis", ",", "np", ".", "newaxis", ",", ":", "]", "\n", "occ", "=", "cv2", ".", "resize", "(", "occ", ".", "astype", "(", "np", ".", "float32", ")", ",", "resize", ")", "[", "...", ",", "np", ".", "newaxis", "]", "\n", "flow", "=", "flow", "/", "(", "occ", "+", "(", "occ", "==", "0", ")", ")", "\n", "occ", "=", "(", "occ", "*", "255", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "", "else", ":", "\n", "\t\t\t", "occ", "=", "occ", "*", "255", "\n", "", "dataset", "[", "'image_0'", "]", ".", "append", "(", "img0", ")", "\n", "dataset", "[", "'image_1'", "]", ".", "append", "(", "img1", ")", "\n", "dataset", "[", "'flow'", "]", ".", "append", "(", "flow", ")", "\n", "dataset", "[", "'occ'", "]", ".", "append", "(", "occ", ")", "\n", "", "return", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.reader.kitti.read_dataset": [[27, 82], ["dict", "len", "range", "len", "min", "cv2.imread", "cv2.imread", "cv2.imread", "numpy.flip().astype", "flow_occ[].astype", "dataset[].append", "dataset[].append", "dataset[].append", "dataset[].append", "os.listdir", "os.path.join", "os.path.join", "os.path.join", "cv2.resize", "cv2.resize", "numpy.flip", "cv2.resize", "cv2.resize", "flow_occ[].astype.astype", "numpy.array", "numpy.array"], "function", ["None"], ["def", "read_dataset", "(", "path", "=", "None", ",", "editions", "=", "'mixed'", ",", "parts", "=", "'mixed'", ",", "crop", "=", "None", ",", "resize", "=", "None", ",", "samples", "=", "None", ")", ":", "\n", "\t", "if", "path", "is", "None", ":", "\n", "\t\t", "path", "=", "kitti_path", "\n", "\n", "", "dataset", "=", "dict", "(", ")", "\n", "dataset", "[", "'image_0'", "]", "=", "[", "]", "\n", "dataset", "[", "'image_1'", "]", "=", "[", "]", "\n", "dataset", "[", "'flow'", "]", "=", "[", "]", "\n", "dataset", "[", "'occ'", "]", "=", "[", "]", "\n", "editions", "=", "(", "'2012'", ",", "'2015'", ")", "if", "editions", "==", "'mixed'", "else", "(", "editions", ",", ")", "\n", "\n", "for", "edition", "in", "editions", ":", "\n", "\t\t", "path_images", "=", "path", "[", "edition", "+", "'image'", "]", "\n", "path_flows", "=", "path", "[", "edition", "+", "'flow_occ'", "]", "\n", "num_files", "=", "len", "(", "os", ".", "listdir", "(", "path_flows", ")", ")", "-", "1", "\n", "ind_valids", "=", "VALIDATE_INDICES", "[", "edition", "]", "\n", "num_valids", "=", "len", "(", "ind_valids", ")", "\n", "if", "samples", "is", "not", "None", ":", "\n", "\t\t\t", "num_files", "=", "min", "(", "num_files", ",", "samples", ")", "\n", "", "ind", "=", "0", "\n", "for", "k", "in", "range", "(", "num_files", ")", ":", "\n", "\t\t\t", "if", "ind", "<", "num_valids", "and", "ind_valids", "[", "ind", "]", "==", "k", ":", "\n", "\t\t\t\t", "ind", "+=", "1", "\n", "if", "parts", "==", "'train'", ":", "\n", "\t\t\t\t\t", "continue", "\n", "", "", "elif", "parts", "==", "'valid'", ":", "\n", "\t\t\t\t\t", "continue", "\n", "", "img0", "=", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "path_images", ",", "'%06d_10.png'", "%", "k", ")", ")", "\n", "img1", "=", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "path_images", ",", "'%06d_11.png'", "%", "k", ")", ")", "\n", "flow_occ", "=", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "path_flows", ",", "'%06d_10.png'", "%", "k", ")", ",", "-", "1", ")", "\n", "if", "crop", "is", "not", "None", ":", "\n", "\t\t\t\t", "img0", "=", "img0", "[", "-", "crop", "[", "0", "]", ":", ",", ":", "crop", "[", "1", "]", "]", "\n", "img1", "=", "img1", "[", "-", "crop", "[", "0", "]", ":", ",", ":", "crop", "[", "1", "]", "]", "\n", "flow_occ", "=", "flow_occ", "[", "-", "crop", "[", "0", "]", ":", ",", ":", "crop", "[", "1", "]", "]", "\n", "", "flow", "=", "np", ".", "flip", "(", "flow_occ", "[", "...", ",", "1", ":", "3", "]", ",", "axis", "=", "-", "1", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "flow", "=", "(", "flow", "-", "32768.", ")", "/", "(", "64.", ")", "\n", "occ", "=", "flow_occ", "[", "...", ",", "0", ":", "1", "]", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "\n", "if", "resize", "is", "not", "None", ":", "\n", "\t\t\t\t", "img0", "=", "cv2", ".", "resize", "(", "img0", ",", "resize", ")", "\n", "img1", "=", "cv2", ".", "resize", "(", "img1", ",", "resize", ")", "\n", "flow", "=", "cv2", ".", "resize", "(", "flow", ",", "resize", ")", "*", "(", "(", "np", ".", "array", "(", "resize", ",", "dtype", "=", "np", ".", "float32", ")", "-", "1.0", ")", "/", "(", "\n", "np", ".", "array", "(", "[", "flow", ".", "shape", "[", "d", "]", "for", "d", "in", "(", "1", ",", "0", ")", "]", ",", "dtype", "=", "np", ".", "float32", ")", "-", "1.0", ")", ")", "[", "np", ".", "newaxis", ",", "np", ".", "newaxis", ",", ":", "]", "\n", "occ", "=", "cv2", ".", "resize", "(", "occ", ".", "astype", "(", "np", ".", "float32", ")", ",", "resize", ")", "[", "...", ",", "np", ".", "newaxis", "]", "\n", "flow", "=", "flow", "/", "(", "occ", "+", "(", "occ", "==", "0", ")", ")", "\n", "occ", "=", "(", "occ", "*", "255", ")", ".", "astype", "(", "np", ".", "uint8", ")", "\n", "", "else", ":", "\n", "\t\t\t\t", "occ", "=", "occ", "*", "255", "\n", "\n", "", "dataset", "[", "'image_0'", "]", ".", "append", "(", "img0", ")", "\n", "dataset", "[", "'image_1'", "]", ".", "append", "(", "img1", ")", "\n", "dataset", "[", "'flow'", "]", ".", "append", "(", "flow", ")", "\n", "dataset", "[", "'occ'", "]", ".", "append", "(", "occ", ")", "\n", "\n", "", "", "return", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.reader.kitti.read_dataset_testing": [[83, 111], ["dict", "dict", "dict", "range", "min", "cv2.imread", "cv2.imread", "[].append", "[].append", "len", "os.path.join", "os.path.join", "cv2.resize", "cv2.resize", "os.listdir"], "function", ["None"], ["", "def", "read_dataset_testing", "(", "path", "=", "None", ",", "editions", "=", "'mixed'", ",", "resize", "=", "None", ",", "samples", "=", "None", ")", ":", "\n", "\t", "if", "path", "is", "None", ":", "\n", "\t\t", "path", "=", "kitti_path", "\n", "\n", "", "dataset", "=", "dict", "(", ")", "\n", "dataset", "[", "'2012'", "]", "=", "dict", "(", ")", "\n", "dataset", "[", "'2012'", "]", "[", "'image_0'", "]", "=", "[", "]", "\n", "dataset", "[", "'2012'", "]", "[", "'image_1'", "]", "=", "[", "]", "\n", "dataset", "[", "'2015'", "]", "=", "dict", "(", ")", "\n", "dataset", "[", "'2015'", "]", "[", "'image_0'", "]", "=", "[", "]", "\n", "dataset", "[", "'2015'", "]", "[", "'image_1'", "]", "=", "[", "]", "\n", "editions", "=", "(", "'2012'", ",", "'2015'", ")", "if", "editions", "==", "'mixed'", "else", "(", "editions", ",", ")", "\n", "\n", "for", "edition", "in", "editions", ":", "\n", "\t\t", "path_testing", "=", "path", "[", "edition", "+", "'testing'", "]", "\n", "num_files", "=", "(", "len", "(", "os", ".", "listdir", "(", "path_testing", ")", ")", "-", "1", ")", "//", "2", "\n", "if", "samples", "is", "not", "None", ":", "\n", "\t\t\t", "num_files", "=", "min", "(", "num_files", ",", "samples", ")", "\n", "", "for", "k", "in", "range", "(", "num_files", ")", ":", "\n", "\t\t\t", "img0", "=", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "path_testing", ",", "'%06d_10.png'", "%", "k", ")", ")", "\n", "img1", "=", "cv2", ".", "imread", "(", "os", ".", "path", ".", "join", "(", "path_testing", ",", "'%06d_11.png'", "%", "k", ")", ")", "\n", "if", "resize", "is", "not", "None", ":", "\n", "\t\t\t\t", "img0", "=", "cv2", ".", "resize", "(", "img0", ",", "resize", ")", "\n", "img1", "=", "cv2", ".", "resize", "(", "img1", ",", "resize", ")", "\n", "", "dataset", "[", "edition", "]", "[", "'image_0'", "]", ".", "append", "(", "img0", ")", "\n", "dataset", "[", "edition", "]", "[", "'image_1'", "]", ".", "append", "(", "img1", ")", "\n", "\n", "", "", "return", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.reader.sintel.Flo.__init__": [[47, 59], ["float", "int", "int", "struct.pack", "len", "Exception"], "methods", ["None"], ["\t", "def", "__init__", "(", "self", ",", "w", ",", "h", ")", ":", "\n", "\t\t", "self", ".", "__floec1__", "=", "float", "(", "202021.25", ")", "\n", "self", ".", "__floec2__", "=", "int", "(", "w", ")", "\n", "self", ".", "__floec3__", "=", "int", "(", "h", ")", "\n", "self", ".", "__floheader__", "=", "struct", ".", "pack", "(", "'fii'", ",", "self", ".", "__floec1__", ",", "self", ".", "__floec2__", ",", "self", ".", "__floec3__", ")", "\n", "self", ".", "__floheaderlen__", "=", "len", "(", "self", ".", "__floheader__", ")", "\n", "self", ".", "__flow__", "=", "w", "\n", "self", ".", "__floh__", "=", "h", "\n", "self", ".", "__floshape__", "=", "[", "self", ".", "__floh__", ",", "self", ".", "__flow__", ",", "2", "]", "\n", "\n", "if", "self", ".", "__floheader__", "[", ":", "4", "]", "!=", "b'PIEH'", ":", "\n", "\t\t\t", "raise", "Exception", "(", "'Expect machine to be LE.'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.reader.sintel.Flo.load": [[60, 69], ["open", "numpy.ndarray", "fp.read", "Exception", "fp.read"], "methods", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.chairs.trainval.read", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.chairs.trainval.read"], ["", "", "def", "load", "(", "self", ",", "file", ")", ":", "\n", "\t\t", "with", "open", "(", "file", ",", "'rb'", ")", "as", "fp", ":", "\n", "\t\t\t", "if", "fp", ".", "read", "(", "self", ".", "__floheaderlen__", ")", "!=", "self", ".", "__floheader__", ":", "\n", "\t\t\t\t", "raise", "Exception", "(", "'Bad flow header: '", "+", "file", ")", "\n", "", "result", "=", "np", ".", "ndarray", "(", "shape", "=", "self", ".", "__floshape__", ",", "\n", "dtype", "=", "np", ".", "float32", ",", "\n", "buffer", "=", "fp", ".", "read", "(", ")", ",", "\n", "order", "=", "'C'", ")", "\n", "return", "result", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.reader.sintel.Flo.save": [[70, 74], ["open", "fp.write", "fp.write", "arr.astype().tobytes", "arr.astype"], "methods", ["None"], ["", "", "def", "save", "(", "self", ",", "arr", ",", "fname", ")", ":", "\n", "\t\t", "with", "open", "(", "fname", ",", "'wb'", ")", "as", "fp", ":", "\n", "\t\t\t", "fp", ".", "write", "(", "self", ".", "__floheader__", ")", "\n", "fp", ".", "write", "(", "arr", ".", "astype", "(", "np", ".", "float32", ")", ".", "tobytes", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.reader.sintel.list_data": [[12, 45], ["dict", "re.compile", "numpy.loadtxt().astype", "dict", "numpy.loadtxt", "dict", "dict", "os.listdir", "os.path.join", "os.listdir", "list", "os.path.join", "sorted", "[].append", "str", "str", "map", "os.path.join", "os.path.join", "entry.append", "entry.append", "[].append", "filter", "os.path.join", "os.path.join", "str", "str", "int", "re.compile.match().group", "re.compile.match", "re.compile.match", "str"], "function", ["None"], ["def", "list_data", "(", "path", "=", "None", ")", ":", "\n", "\t", "if", "path", "is", "None", ":", "\n", "\t\t", "path", "=", "sintel_root", "\n", "", "dataset", "=", "dict", "(", ")", "\n", "pattern", "=", "re", ".", "compile", "(", "r'frame_(\\d+).png'", ")", "\n", "split", "=", "np", ".", "loadtxt", "(", "split_file", ")", ".", "astype", "(", "'i4'", ")", "\n", "for", "part", "in", "(", "'training'", ",", "'test'", ")", ":", "\n", "\t\t", "dataset", "[", "part", "]", "=", "dict", "(", ")", "\n", "if", "part", "==", "'training'", ":", "\n", "\t\t\t", "dataset", "[", "part", "+", "str", "(", "1", ")", "]", "=", "dict", "(", ")", "\n", "dataset", "[", "part", "+", "str", "(", "2", ")", "]", "=", "dict", "(", ")", "\n", "", "for", "subset", "in", "(", "'clean'", ",", "'final'", ")", ":", "\n", "\t\t\t", "dataset", "[", "part", "]", "[", "subset", "]", "=", "[", "]", "\n", "if", "part", "==", "'training'", ":", "\n", "\t\t\t\t", "c", "=", "0", "\n", "dataset", "[", "part", "+", "str", "(", "1", ")", "]", "[", "subset", "]", "=", "[", "]", "\n", "dataset", "[", "part", "+", "str", "(", "2", ")", "]", "[", "subset", "]", "=", "[", "]", "\n", "", "for", "seq", "in", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "path", ",", "part", ",", "subset", ")", ")", ":", "\n", "\t\t\t\t", "frames", "=", "os", ".", "listdir", "(", "os", ".", "path", ".", "join", "(", "path", ",", "part", ",", "subset", ",", "seq", ")", ")", "\n", "frames", "=", "list", "(", "sorted", "(", "map", "(", "lambda", "s", ":", "int", "(", "pattern", ".", "match", "(", "s", ")", ".", "group", "(", "1", ")", ")", ",", "\n", "filter", "(", "lambda", "s", ":", "pattern", ".", "match", "(", "s", ")", ",", "frames", ")", ")", ")", ")", "\n", "for", "i", "in", "frames", "[", ":", "-", "1", "]", ":", "\n", "\t\t\t\t\t", "entry", "=", "[", "\n", "os", ".", "path", ".", "join", "(", "path", ",", "part", ",", "subset", ",", "seq", ",", "'frame_{:04d}.png'", ".", "format", "(", "i", ")", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "path", ",", "part", ",", "subset", ",", "seq", ",", "'frame_{:04d}.png'", ".", "format", "(", "i", "+", "1", ")", ")", "]", "\n", "if", "part", "==", "'training'", ":", "\n", "\t\t\t\t\t\t", "entry", ".", "append", "(", "os", ".", "path", ".", "join", "(", "path", ",", "part", ",", "'flow'", ",", "seq", ",", "'frame_{:04d}.flo'", ".", "format", "(", "i", ")", ")", ")", "\n", "entry", ".", "append", "(", "os", ".", "path", ".", "join", "(", "path", ",", "part", ",", "'invalid'", ",", "seq", ",", "'frame_{:04d}.png'", ".", "format", "(", "i", ")", ")", ")", "\n", "", "dataset", "[", "part", "]", "[", "subset", "]", ".", "append", "(", "entry", ")", "\n", "if", "part", "==", "'training'", ":", "\n", "\t\t\t\t\t\t", "dataset", "[", "part", "+", "str", "(", "split", "[", "c", "]", ")", "]", "[", "subset", "]", ".", "append", "(", "entry", ")", "\n", "c", "=", "c", "+", "1", "\n", "", "", "", "", "", "return", "dataset", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.reader.sintel.load": [[75, 85], ["functools.lru_cache", "sintel.Flo", "fname.endswith", "skimage.io.imread", "fname.endswith", "sintel.Flo.load", "numpy.expand_dims"], "function", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.chairs.flo.load"], ["", "", "", "@", "lru_cache", "(", "maxsize", "=", "None", ")", "\n", "def", "load", "(", "fname", ")", ":", "\n", "\t", "flo", "=", "Flo", "(", "1024", ",", "436", ")", "\n", "if", "fname", ".", "endswith", "(", "'png'", ")", ":", "\n", "\t\t", "data", "=", "skimage", ".", "io", ".", "imread", "(", "fname", ")", "\n", "if", "data", ".", "ndim", "<", "3", ":", "\n", "\t\t\t", "data", "=", "255", "-", "np", ".", "expand_dims", "(", "data", ",", "-", "1", ")", "\n", "", "return", "data", "\n", "", "elif", "fname", ".", "endswith", "(", "'flo'", ")", ":", "\n", "\t\t", "return", "flo", ".", "load", "(", "fname", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.chairs.trainval.read": [[1, 11], ["open", "range", "trainSet.append", "validationSet.append", "fp.readline"], "function", ["None"], ["def", "read", "(", "splitPath", ")", ":", "\n", "\t", "trainSet", "=", "[", "]", "\n", "validationSet", "=", "[", "]", "\n", "with", "open", "(", "splitPath", ")", "as", "fp", ":", "\n", "\t\t", "for", "i", "in", "range", "(", "1", ",", "22873", ")", ":", "\n", "\t\t\t", "if", "fp", ".", "readline", "(", ")", "[", "0", "]", "==", "'1'", ":", "\n", "\t\t\t\t", "trainSet", ".", "append", "(", "i", ")", "\n", "", "else", ":", "\n", "\t\t\t\t", "validationSet", ".", "append", "(", "i", ")", "\n", "", "", "", "return", "(", "trainSet", ",", "validationSet", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.chairs.ppm.load": [[9, 18], ["open", "numpy.ndarray", "fp.read", "Exception", "fp.read"], "function", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.chairs.trainval.read", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.chairs.trainval.read"], ["def", "load", "(", "file", ")", ":", "\n", "\t", "with", "open", "(", "file", ",", "'rb'", ")", "as", "fp", ":", "\n", "\t\t", "if", "fp", ".", "read", "(", "__ppmheaderlen__", ")", "!=", "__ppmheader__", ":", "\n", "\t\t\t", "raise", "Exception", "(", "'Bad ppm header: '", "+", "file", ")", "\n", "", "result", "=", "np", ".", "ndarray", "(", "shape", "=", "__ppmshape__", ",", "\n", "dtype", "=", "np", ".", "uint8", ",", "\n", "buffer", "=", "fp", ".", "read", "(", ")", ",", "\n", "order", "=", "'C'", ")", "\n", "return", "result", "\n", "", "", ""]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.chairs.binary_reader.load": [[6, 18], ["re.compile", "list", "zip", "sorted", "int", "binary_reader.load_batch", "int", "os.listdir", "re.compile.match", "re.compile.match().group", "os.path.join", "re.compile.match().group", "len", "re.compile.match", "re.compile.match"], "function", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.chairs.binary_reader.load_batch"], ["def", "load", "(", "prefix", ",", "subset", ",", "shape", "=", "(", "384", ",", "512", ")", ",", "samples", "=", "-", "1", ",", "dtype", "=", "4", ")", ":", "\n", "\t", "pattern", "=", "re", ".", "compile", "(", "r'{}(\\d+)_(\\d+).bin'", ".", "format", "(", "subset", ")", ")", "\n", "files", "=", "[", "(", "int", "(", "pattern", ".", "match", "(", "f", ")", ".", "group", "(", "1", ")", ")", ",", "f", ")", "for", "f", "in", "os", ".", "listdir", "(", "prefix", ")", "if", "pattern", ".", "match", "(", "f", ")", "]", "\n", "files", "=", "list", "(", "sorted", "(", "files", ")", ")", "\n", "ret", "=", "[", "]", "\n", "for", "_", ",", "f", "in", "files", ":", "\n", "\t\t", "n", "=", "int", "(", "pattern", ".", "match", "(", "f", ")", ".", "group", "(", "2", ")", ")", "\n", "load_batch", "(", "os", ".", "path", ".", "join", "(", "prefix", ",", "f", ")", ",", "n", ",", "ret", ",", "shape", ",", "dtype", ")", "\n", "if", "samples", "!=", "-", "1", "and", "len", "(", "ret", ")", ">=", "samples", ":", "\n", "\t\t\t", "ret", "=", "ret", "[", ":", "samples", "]", "\n", "break", "\n", "", "", "return", "zip", "(", "*", "ret", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.chairs.binary_reader.load_batch": [[19, 39], ["open", "f.read", "range", "numpy.ndarray", "arr.append", "numpy.any", "ret.append", "numpy.isnan"], "function", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.chairs.trainval.read"], ["", "def", "load_batch", "(", "fname", ",", "n", ",", "ret", ",", "shape", "=", "(", "384", ",", "512", ")", ",", "dtype", "=", "4", ")", ":", "\n", "\t", "array_info", "=", "[", "\n", "(", "np", ".", "uint8", ",", "(", "shape", "[", "0", "]", ",", "shape", "[", "1", "]", ",", "3", ")", ",", "shape", "[", "0", "]", "*", "shape", "[", "1", "]", "*", "3", ")", ",", "\n", "(", "np", ".", "uint8", ",", "(", "shape", "[", "0", "]", ",", "shape", "[", "1", "]", ",", "3", ")", ",", "shape", "[", "0", "]", "*", "shape", "[", "1", "]", "*", "3", ")", ",", "\n", "(", "np", ".", "float32", "if", "dtype", "==", "4", "else", "np", ".", "float16", ",", "(", "shape", "[", "0", "]", ",", "shape", "[", "1", "]", ",", "2", ")", ",", "shape", "[", "0", "]", "*", "shape", "[", "1", "]", "*", "2", "*", "dtype", ")", "\n", "]", "\n", "with", "open", "(", "fname", ",", "'rb'", ")", "as", "f", ":", "\n", "\t\t", "buffer", "=", "f", ".", "read", "(", ")", "\n", "offset", "=", "0", "\n", "for", "i", "in", "range", "(", "0", ",", "n", ")", ":", "\n", "\t\t\t", "arr", "=", "[", "]", "\n", "for", "dtype", ",", "shape", ",", "nbytes", "in", "array_info", ":", "\n", "\t\t\t\t", "result", "=", "np", ".", "ndarray", "(", "shape", "=", "shape", ",", "\n", "dtype", "=", "dtype", ",", "\n", "buffer", "=", "buffer", "[", "offset", ":", "offset", "+", "nbytes", "]", ",", "\n", "order", "=", "'C'", ")", "\n", "offset", "+=", "nbytes", "\n", "arr", ".", "append", "(", "result", ")", "\n", "", "if", "not", "np", ".", "any", "(", "np", ".", "isnan", "(", "arr", "[", "-", "1", "]", ")", ")", ":", "\n", "\t\t\t\t", "ret", ".", "append", "(", "arr", ")", "\n", "", "", "", "", ""]], "home.repos.pwc.inspect_result.microsoft_MaskFlownet.chairs.flo.load": [[17, 26], ["open", "numpy.ndarray", "fp.read", "Exception", "fp.read"], "function", ["home.repos.pwc.inspect_result.microsoft_MaskFlownet.chairs.trainval.read", "home.repos.pwc.inspect_result.microsoft_MaskFlownet.chairs.trainval.read"], ["", "def", "load", "(", "file", ")", ":", "\n", "\t", "with", "open", "(", "file", ",", "'rb'", ")", "as", "fp", ":", "\n", "\t\t", "if", "fp", ".", "read", "(", "__floheaderlen__", ")", "!=", "__floheader__", ":", "\n", "\t\t\t", "raise", "Exception", "(", "'Bad flow header: '", "+", "file", ")", "\n", "", "result", "=", "np", ".", "ndarray", "(", "shape", "=", "__floshape__", ",", "\n", "dtype", "=", "np", ".", "float32", ",", "\n", "buffer", "=", "fp", ".", "read", "(", ")", ",", "\n", "order", "=", "'C'", ")", "\n", "return", "result", "\n", "", "", ""]]}