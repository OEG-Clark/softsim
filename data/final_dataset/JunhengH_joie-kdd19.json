{"home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.__init__": [[15, 49], ["numpy.array", "set", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array"], "methods", ["None"], ["def", "__init__", "(", "self", ")", ":", "\n", "# entity vocab", "\n", "        ", "self", ".", "ents", "=", "{", "}", "\n", "self", ".", "ent_tokens", "=", "{", "}", "\n", "# rel vocab", "\n", "self", ".", "rels", "=", "{", "}", "\n", "self", ".", "index_ents", "=", "{", "}", "\n", "self", ".", "index_rels", "=", "{", "}", "\n", "self", ".", "n_ents", "=", "0", "\n", "self", ".", "n_rels", "=", "0", "\n", "# save triples as array of indices", "\n", "self", ".", "triples", "=", "np", ".", "array", "(", "[", "0", "]", ")", "\n", "self", ".", "triples_record", "=", "set", "(", "[", "]", ")", "\n", "# head per tail and tail per head (for each relation). used for bernoulli negative sampling", "\n", "self", ".", "hpt", "=", "np", ".", "array", "(", "[", "0", "]", ")", "\n", "self", ".", "tph", "=", "np", ".", "array", "(", "[", "0", "]", ")", "\n", "# word embeddings", "\n", "self", ".", "tokens", "=", "[", "]", "\n", "self", ".", "wv", "=", "np", ".", "array", "(", "[", "0", "]", ")", "\n", "self", ".", "token_index", "=", "{", "}", "\n", "self", ".", "loaded_wv", "=", "False", "\n", "self", ".", "n_tokens", "=", "0", "\n", "# descriptions", "\n", "self", ".", "descriptions", "=", "{", "}", "\n", "self", ".", "desc_embed", "=", "{", "}", "\n", "self", ".", "avg_embed", "=", "{", "}", "\n", "self", ".", "desc_embed_padded", "=", "np", ".", "array", "(", "[", "0", "]", ")", "\n", "self", ".", "avg_embed_padded", "=", "np", ".", "array", "(", "[", "0", "]", ")", "\n", "self", ".", "desc_length", "=", "100", "\n", "self", ".", "desc_index", "=", "np", ".", "array", "(", "[", "0", "]", ")", "\n", "# recorded for tf_parts", "\n", "self", ".", "dim", "=", "100", "\n", "#self.wv_dim = 100", "\n", "self", ".", "batch_size", "=", "1024", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.load_triples": [[50, 88], ["open", "numpy.array", "numpy.zeros", "numpy.zeros", "numpy.mean", "numpy.mean", "print", "line.rstrip().split.rstrip().split.rstrip().split", "triples.append", "KG.KG.triples_record.add", "len", "KG.KG.index_ents.get", "set", "KG.KG.index_ents.get", "set", "KG.KG.index_rels.get", "len", "len", "len", "len", "line.rstrip().split.rstrip().split.rstrip", "line[].replace().replace().split", "line[].replace().replace().split", "line[].replace().replace", "line[].replace().replace", "line[].replace", "line[].replace"], "methods", ["None"], ["", "def", "load_triples", "(", "self", ",", "filename", ",", "splitter", "=", "'@@@'", ",", "line_end", "=", "'\\n'", ")", ":", "\n", "        ", "'''Load the dataset.'''", "\n", "triples", "=", "[", "]", "\n", "last_c", "=", "-", "1", "\n", "last_r", "=", "-", "1", "\n", "for", "line", "in", "open", "(", "filename", ")", ":", "\n", "            ", "line", "=", "line", ".", "rstrip", "(", "line_end", ")", ".", "split", "(", "splitter", ")", "\n", "if", "self", ".", "index_ents", ".", "get", "(", "line", "[", "0", "]", ")", "==", "None", ":", "\n", "                ", "last_c", "+=", "1", "\n", "self", ".", "ents", "[", "last_c", "]", "=", "line", "[", "0", "]", "\n", "self", ".", "index_ents", "[", "line", "[", "0", "]", "]", "=", "last_c", "\n", "self", ".", "ent_tokens", "[", "last_c", "]", "=", "set", "(", "line", "[", "0", "]", ".", "replace", "(", "'('", ",", "''", ")", ".", "replace", "(", "')'", ",", "''", ")", ".", "split", "(", "' '", ")", ")", "\n", "", "if", "self", ".", "index_ents", ".", "get", "(", "line", "[", "2", "]", ")", "==", "None", ":", "\n", "                ", "last_c", "+=", "1", "\n", "self", ".", "ents", "[", "last_c", "]", "=", "line", "[", "2", "]", "\n", "self", ".", "index_ents", "[", "line", "[", "2", "]", "]", "=", "last_c", "\n", "self", ".", "ent_tokens", "[", "last_c", "]", "=", "set", "(", "line", "[", "2", "]", ".", "replace", "(", "'('", ",", "''", ")", ".", "replace", "(", "')'", ",", "''", ")", ".", "split", "(", "' '", ")", ")", "\n", "", "if", "self", ".", "index_rels", ".", "get", "(", "line", "[", "1", "]", ")", "==", "None", ":", "\n", "                ", "last_r", "+=", "1", "\n", "self", ".", "rels", "[", "last_r", "]", "=", "line", "[", "1", "]", "\n", "self", ".", "index_rels", "[", "line", "[", "1", "]", "]", "=", "last_r", "\n", "", "h", "=", "self", ".", "index_ents", "[", "line", "[", "0", "]", "]", "\n", "r", "=", "self", ".", "index_rels", "[", "line", "[", "1", "]", "]", "\n", "t", "=", "self", ".", "index_ents", "[", "line", "[", "2", "]", "]", "\n", "triples", ".", "append", "(", "[", "h", ",", "r", ",", "t", "]", ")", "\n", "self", ".", "triples_record", ".", "add", "(", "(", "h", ",", "r", ",", "t", ")", ")", "\n", "", "self", ".", "triples", "=", "np", ".", "array", "(", "triples", ")", "\n", "self", ".", "n_ents", "=", "last_c", "+", "1", "\n", "self", ".", "n_rels", "=", "last_r", "+", "1", "\n", "# calculate tph and hpt", "\n", "tph_array", "=", "np", ".", "zeros", "(", "(", "len", "(", "self", ".", "rels", ")", ",", "len", "(", "self", ".", "ents", ")", ")", ")", "\n", "hpt_array", "=", "np", ".", "zeros", "(", "(", "len", "(", "self", ".", "rels", ")", ",", "len", "(", "self", ".", "ents", ")", ")", ")", "\n", "for", "h", ",", "r", ",", "t", "in", "self", ".", "triples", ":", "\n", "            ", "tph_array", "[", "r", "]", "[", "h", "]", "+=", "1.", "\n", "hpt_array", "[", "r", "]", "[", "t", "]", "+=", "1.", "\n", "", "self", ".", "tph", "=", "np", ".", "mean", "(", "tph_array", ",", "axis", "=", "1", ")", "\n", "self", ".", "hpt", "=", "np", ".", "mean", "(", "hpt_array", ",", "axis", "=", "1", ")", "\n", "print", "(", "\"Loaded triples from\"", ",", "filename", ",", "\". #triples, #ents, #rels:\"", ",", "len", "(", "self", ".", "triples", ")", ",", "self", ".", "n_ents", ",", "self", ".", "n_rels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.load_word2vec": [[89, 107], ["tqdm.tqdm.tqdm", "numpy.array", "len", "print", "enumerate", "l.strip().split", "open", "int", "emb.append", "KG.KG.tokens.append", "len", "KG.KG.tokens.append", "emb.append", "enumerate", "l.strip", "numpy.zeros", "float"], "methods", ["None"], ["", "def", "load_word2vec", "(", "self", ",", "filepath", ",", "splitter", "=", "' '", ")", ":", "\n", "        ", "self", ".", "tokens", ",", "emb", "=", "[", "]", ",", "[", "]", "\n", "for", "lineno", ",", "l", "in", "tqdm", "(", "enumerate", "(", "open", "(", "filepath", ")", ")", ",", "desc", "=", "'load word embedding'", ",", "unit", "=", "' word'", ")", ":", "\n", "            ", "tokens", "=", "l", ".", "strip", "(", ")", ".", "split", "(", "splitter", ")", "\n", "if", "lineno", "==", "0", ":", "\n", "                ", "dim", "=", "int", "(", "tokens", "[", "1", "]", ")", "\n", "emb", ".", "append", "(", "np", ".", "zeros", "(", "dim", ")", ")", "\n", "self", ".", "tokens", ".", "append", "(", "'  '", ")", "\n", "continue", "\n", "", "if", "len", "(", "tokens", ")", "==", "1", "+", "dim", ":", "\n", "                ", "self", ".", "tokens", ".", "append", "(", "tokens", "[", "0", "]", ")", "\n", "emb", ".", "append", "(", "[", "float", "(", "_", ")", "for", "_", "in", "tokens", "[", "1", ":", "]", "]", ")", "\n", "", "", "self", ".", "wv", "=", "np", ".", "array", "(", "emb", ")", "\n", "self", ".", "wv_dim", "=", "dim", "\n", "self", ".", "token_index", "=", "{", "w", ":", "i", "for", "i", ",", "w", "in", "enumerate", "(", "self", ".", "tokens", ")", "}", "\n", "self", ".", "loaded_wv", "=", "True", "\n", "self", ".", "n_tokens", "=", "len", "(", "self", ".", "tokens", ")", "\n", "print", "(", "\"Loaded token embeddings from\"", ",", "filepath", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.load_descriptions": [[108, 198], ["open", "open", "numpy.array", "print", "print", "print", "range", "numpy.array", "numpy.array", "print", "print", "line.strip().split.strip().split.strip", "set", "KG.KG.ent_str2index", "numpy.array", "numpy.average", "KG.KG.desc_index.append", "KG.KG.num_ents", "KG.KG.desc_embed.get", "KG.KG.avg_embed.get", "KG.KG.desc_embed_padded.append", "KG.KG.avg_embed_padded.append", "numpy.any", "line.strip().split.strip().split.strip().lower().split", "line.strip().split.strip().split.strip().split", "title.replace().replace().split", "len", "len", "len", "numpy.array.append", "len", "numpy.zeros", "numpy.zeros", "numpy.isnan", "KG.KG.descriptions.get", "title.replace().replace().split", "KG.KG.word_str2index", "len", "numpy.array", "len", "line.strip().split.strip().split.strip().lower", "line.strip().split.strip().split.strip", "title.replace().replace", "desc_word_index.append", "numpy.array", "range", "numpy.array", "title.replace().replace", "len", "len", "front.append", "line.strip().split.strip().split.strip", "title.replace", "int", "numpy.zeros", "title.replace", "int", "len", "len"], "methods", ["home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.ent_str2index", "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.num_ents", "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.word_str2index"], ["", "def", "load_descriptions", "(", "self", ",", "titlefile", ",", "tokenfile", ",", "splitter", "=", "' '", ",", "desc_length", "=", "100", ",", "lower", "=", "True", ",", "stop_words", "=", "None", ",", "padding_front", "=", "False", ")", ":", "\n", "        ", "if", "self", ".", "loaded_wv", "==", "False", ":", "\n", "            ", "print", "(", "\"Fail: Load word embeddings first\"", ")", "\n", "return", "\n", "", "self", ".", "desc_length", "=", "desc_length", "\n", "self", ".", "n_descriptions", "=", "0", "\n", "titles", "=", "{", "}", "\n", "index", "=", "0", "\n", "for", "line", "in", "open", "(", "titlefile", ")", ":", "\n", "            ", "line", "=", "line", ".", "strip", "(", ")", "\n", "titles", "[", "index", "]", "=", "line", "\n", "index", "+=", "1", "\n", "", "index", "=", "0", "\n", "remove", "=", "None", "\n", "if", "not", "(", "stop_words", "is", "None", ")", ":", "\n", "            ", "remove", "=", "set", "(", "stop_words", ")", "\n", "", "self", ".", "desc_index", "=", "[", "]", "\n", "avg_length", "=", "0.", "\n", "max_length", "=", "-", "1.", "\n", "max_sen", "=", "\"\"", "\n", "for", "line", "in", "open", "(", "tokenfile", ")", ":", "\n", "            ", "title", "=", "titles", "[", "index", "]", "\n", "index", "+=", "1", "\n", "ent_id", "=", "self", ".", "ent_str2index", "(", "title", ")", "\n", "if", "ent_id", "==", "None", ":", "\n", "                ", "continue", "\n", "", "if", "not", "self", ".", "descriptions", ".", "get", "(", "ent_id", ")", "is", "None", ":", "\n", "                ", "continue", "\n", "", "if", "lower", ":", "\n", "                ", "line", "=", "line", ".", "strip", "(", ")", ".", "lower", "(", ")", ".", "split", "(", "splitter", ")", "\n", "", "else", ":", "\n", "                ", "line", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "splitter", ")", "\n", "", "line", "=", "title", ".", "replace", "(", "'('", ",", "''", ")", ".", "replace", "(", "')'", ",", "''", ")", ".", "split", "(", "' '", ")", "+", "line", "+", "title", ".", "replace", "(", "'('", ",", "''", ")", ".", "replace", "(", "')'", ",", "''", ")", ".", "split", "(", "' '", ")", "\n", "desc_word_index", "=", "[", "]", "\n", "for", "word", "in", "line", ":", "\n", "                ", "if", "(", "remove", "is", "None", ")", "or", "(", "word", "not", "in", "remove", ")", ":", "\n", "                    ", "this_wd_index", "=", "self", ".", "word_str2index", "(", "word", ",", "default", "=", "False", ")", "\n", "if", "not", "this_wd_index", "is", "None", ":", "\n", "                        ", "desc_word_index", ".", "append", "(", "this_wd_index", ")", "\n", "", "", "", "if", "len", "(", "desc_word_index", ")", "==", "0", ":", "\n", "                ", "continue", "\n", "", "self", ".", "descriptions", "[", "ent_id", "]", "=", "np", ".", "array", "(", "desc_word_index", ")", "\n", "self", ".", "n_descriptions", "+=", "1", "\n", "avg_length", "=", "(", "avg_length", "*", "(", "self", ".", "n_descriptions", "-", "1", ")", "+", "len", "(", "desc_word_index", ")", ")", "/", "self", ".", "n_descriptions", "\n", "if", "len", "(", "desc_word_index", ")", ">", "max_length", ":", "\n", "                ", "max_length", "=", "len", "(", "desc_word_index", ")", "\n", "max_sen", "=", "line", "\n", "", "desc_embed", "=", "[", "]", "\n", "for", "i", "in", "desc_word_index", ":", "\n", "                ", "vec", "=", "self", ".", "wv", "[", "i", "]", "\n", "desc_embed", ".", "append", "(", "vec", ")", "\n", "", "self", ".", "avg_embed", "[", "ent_id", "]", "=", "np", ".", "average", "(", "desc_embed", ",", "axis", "=", "0", ")", "\n", "if", "len", "(", "desc_embed", ")", ">", "desc_length", ":", "\n", "                ", "desc_embed", "=", "np", ".", "array", "(", "desc_embed", ")", "[", ":", "desc_length", "]", "\n", "", "elif", "len", "(", "desc_embed", ")", "<", "desc_length", ":", "\n", "                ", "if", "not", "padding_front", ":", "\n", "#for t in range(len(desc_embed), desc_length):", "\n", "#    desc_embed.append(np.zeros(self.wv_dim))", "\n", "#no longer use zero padding", "\n", "                    ", "gap", "=", "desc_length", "-", "len", "(", "desc_embed", ")", "\n", "desc_embed", "+=", "desc_embed", "*", "int", "(", "gap", "/", "len", "(", "desc_embed", ")", ")", "+", "desc_embed", "[", ":", "int", "(", "gap", "%", "len", "(", "desc_embed", ")", ")", "]", "\n", "desc_embed", "=", "np", ".", "array", "(", "desc_embed", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "", "else", ":", "\n", "#zero padding to the front", "\n", "                    ", "front", "=", "[", "]", "\n", "for", "t", "in", "range", "(", "len", "(", "desc_embed", ")", ",", "desc_length", ")", ":", "\n", "                        ", "front", ".", "append", "(", "np", ".", "zeros", "(", "self", ".", "wv_dim", ")", ")", "\n", "", "desc_embed", "=", "front", "+", "desc_embed", "\n", "desc_embed", "=", "np", ".", "array", "(", "desc_embed", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "", "", "self", ".", "desc_embed", "[", "ent_id", "]", "=", "desc_embed", "\n", "self", ".", "desc_index", ".", "append", "(", "ent_id", ")", "\n", "", "self", ".", "desc_index", "=", "np", ".", "array", "(", "self", ".", "desc_index", ")", "\n", "print", "(", "\"Loaded descriptions from\"", ",", "tokenfile", ",", "\":\"", ",", "self", ".", "n_descriptions", ")", "\n", "print", "(", "\"AVG LEN=\"", ",", "avg_length", ",", "'\\n'", ",", "\"MAX LEN=\"", ",", "max_length", ")", "\n", "print", "(", "max_sen", ")", "\n", "self", ".", "desc_embed_padded", "=", "[", "]", "\n", "self", ".", "avg_embed_padded", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "num_ents", "(", ")", ")", ":", "\n", "            ", "vec", "=", "self", ".", "desc_embed", ".", "get", "(", "i", ")", "\n", "avg_vec", "=", "self", ".", "avg_embed", ".", "get", "(", "i", ")", "\n", "assert", "(", "(", "vec", "is", "None", "and", "avg_vec", "is", "None", ")", "or", "(", "not", "(", "vec", "is", "None", ")", "and", "not", "(", "avg_vec", "is", "None", ")", ")", ")", "\n", "if", "vec", "is", "None", ":", "\n", "                ", "vec", "=", "np", ".", "zeros", "(", "(", "self", ".", "desc_length", ",", "self", ".", "wv_dim", ")", ")", "\n", "avg_vec", "=", "np", ".", "zeros", "(", "self", ".", "wv_dim", ")", "\n", "", "self", ".", "desc_embed_padded", ".", "append", "(", "vec", ")", "\n", "self", ".", "avg_embed_padded", ".", "append", "(", "avg_vec", ")", "\n", "", "self", ".", "desc_embed_padded", "=", "np", ".", "array", "(", "self", ".", "desc_embed_padded", ",", "dtype", "=", "np", ".", "float32", ")", "#np.reshape(np.array(self.desc_embed_padded), [-1, self.desc_length * self.wv_dim, 1]) ", "\n", "self", ".", "avg_embed_padded", "=", "np", ".", "array", "(", "self", ".", "avg_embed_padded", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "assert", "(", "not", "np", ".", "any", "(", "np", ".", "isnan", "(", "self", ".", "desc_embed_padded", ")", ")", ")", "\n", "print", "(", "\"Padded desc embeddings to\"", ",", "self", ".", "desc_embed_padded", ".", "shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.map_descriptions": [[199, 255], ["open", "open", "numpy.array", "print", "line.strip().split.strip().split.strip", "set", "KG.KG.ent_str2index", "numpy.array.append", "ent_ids.append", "numpy.any", "line.strip().split.strip().split.strip().lower().split", "line.strip().split.strip().split.strip().split", "title.replace().replace().split", "len", "numpy.array.append", "len", "numpy.isnan", "title.replace().replace().split", "KG.KG.word_str2index", "numpy.array", "len", "line.strip().split.strip().split.strip().lower", "line.strip().split.strip().split.strip", "title.replace().replace", "desc_word_index.append", "numpy.array", "range", "numpy.array", "title.replace().replace", "len", "len", "front.append", "line.strip().split.strip().split.strip", "title.replace", "int", "numpy.zeros", "title.replace", "int", "len", "len"], "methods", ["home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.ent_str2index", "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.word_str2index"], ["", "def", "map_descriptions", "(", "self", ",", "titlefile", ",", "tokenfile", ",", "splitter", "=", "' '", ",", "lower", "=", "True", ",", "stop_words", "=", "None", ",", "padding_front", "=", "False", ")", ":", "\n", "        ", "desc_length", "=", "self", ".", "desc_length", "\n", "titles", "=", "{", "}", "\n", "ent_ids", ",", "desc_embed_list", "=", "[", "]", ",", "[", "]", "\n", "index", "=", "0", "\n", "for", "line", "in", "open", "(", "titlefile", ")", ":", "\n", "            ", "line", "=", "line", ".", "strip", "(", ")", "\n", "titles", "[", "index", "]", "=", "line", "\n", "index", "+=", "1", "\n", "", "index", "=", "0", "\n", "remove", "=", "None", "\n", "if", "not", "(", "stop_words", "is", "None", ")", ":", "\n", "            ", "remove", "=", "set", "(", "stop_words", ")", "\n", "", "for", "line", "in", "open", "(", "tokenfile", ")", ":", "\n", "            ", "title", "=", "titles", "[", "index", "]", "\n", "index", "+=", "1", "\n", "ent_id", "=", "self", ".", "ent_str2index", "(", "title", ")", "\n", "if", "ent_id", "==", "None", ":", "\n", "                ", "continue", "\n", "", "if", "lower", ":", "\n", "                ", "line", "=", "line", ".", "strip", "(", ")", ".", "lower", "(", ")", ".", "split", "(", "splitter", ")", "\n", "", "else", ":", "\n", "                ", "line", "=", "line", ".", "strip", "(", ")", ".", "split", "(", "splitter", ")", "\n", "", "line", "=", "title", ".", "replace", "(", "'('", ",", "''", ")", ".", "replace", "(", "')'", ",", "''", ")", ".", "split", "(", "' '", ")", "+", "line", "+", "title", ".", "replace", "(", "'('", ",", "''", ")", ".", "replace", "(", "')'", ",", "''", ")", ".", "split", "(", "' '", ")", "\n", "desc_word_index", "=", "[", "]", "\n", "for", "word", "in", "line", ":", "\n", "                ", "if", "(", "remove", "is", "None", ")", "or", "(", "word", "not", "in", "remove", ")", ":", "\n", "                    ", "this_wd_index", "=", "self", ".", "word_str2index", "(", "word", ",", "default", "=", "False", ")", "\n", "if", "not", "this_wd_index", "is", "None", ":", "\n", "                        ", "desc_word_index", ".", "append", "(", "this_wd_index", ")", "\n", "", "", "", "if", "len", "(", "desc_word_index", ")", "==", "0", ":", "\n", "                ", "continue", "\n", "", "desc_embed", "=", "[", "]", "\n", "for", "i", "in", "desc_word_index", ":", "\n", "                ", "vec", "=", "self", ".", "wv", "[", "i", "]", "\n", "desc_embed", ".", "append", "(", "vec", ")", "\n", "", "if", "len", "(", "desc_embed", ")", ">", "desc_length", ":", "\n", "                ", "desc_embed", "=", "np", ".", "array", "(", "desc_embed", ")", "[", ":", "desc_length", "]", "\n", "", "elif", "len", "(", "desc_embed", ")", "<", "desc_length", ":", "\n", "                ", "if", "not", "padding_front", ":", "\n", "                    ", "gap", "=", "desc_length", "-", "len", "(", "desc_embed", ")", "\n", "desc_embed", "+=", "desc_embed", "*", "int", "(", "gap", "/", "len", "(", "desc_embed", ")", ")", "+", "desc_embed", "[", ":", "int", "(", "gap", "%", "len", "(", "desc_embed", ")", ")", "]", "\n", "desc_embed", "=", "np", ".", "array", "(", "desc_embed", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "", "else", ":", "\n", "#zero padding to the front", "\n", "                    ", "front", "=", "[", "]", "\n", "for", "t", "in", "range", "(", "len", "(", "desc_embed", ")", ",", "desc_length", ")", ":", "\n", "                        ", "front", ".", "append", "(", "np", ".", "zeros", "(", "self", ".", "wv_dim", ")", ")", "\n", "", "desc_embed", "=", "front", "+", "desc_embed", "\n", "desc_embed", "=", "np", ".", "array", "(", "desc_embed", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "", "", "desc_embed_list", ".", "append", "(", "desc_embed", ")", "\n", "ent_ids", ".", "append", "(", "ent_id", ")", "\n", "", "desc_embed_list", "=", "np", ".", "array", "(", "desc_embed_list", ",", "dtype", "=", "np", ".", "float32", ")", "#np.reshape(np.array(self.desc_embed_padded), [-1, self.desc_length * self.wv_dim, 1]) ", "\n", "assert", "(", "not", "np", ".", "any", "(", "np", ".", "isnan", "(", "desc_embed_list", ")", ")", ")", "\n", "print", "(", "\"Padded desc embeddings to\"", ",", "desc_embed_list", ".", "shape", ",", "\". Returned indices and embedding list.\"", ")", "\n", "return", "ent_ids", ",", "desc_embed_list", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.word_str2index": [[256, 265], ["KG.KG.token_index.get", "str.lower", "KG.KG.token_index.get"], "methods", ["None"], ["", "def", "word_str2index", "(", "self", ",", "str", ",", "default", "=", "True", ")", ":", "\n", "        ", "rst", "=", "self", ".", "token_index", ".", "get", "(", "str", ")", "\n", "if", "rst", "==", "None", ":", "\n", "            ", "low", "=", "str", ".", "lower", "(", ")", "\n", "if", "low", "!=", "str", ":", "\n", "                ", "rst", "=", "self", ".", "token_index", ".", "get", "(", "str", ")", "\n", "", "if", "rst", "==", "None", "and", "default", ":", "\n", "                ", "rst", "=", "0", "\n", "", "", "return", "rst", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.get_desc_embed": [[266, 268], ["KG.KG.desc_embed.get"], "methods", ["None"], ["", "def", "get_desc_embed", "(", "self", ",", "ent_id", ")", ":", "\n", "        ", "return", "self", ".", "desc_embed", ".", "get", "(", "ent_id", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.num_ents": [[269, 275], ["None"], "methods", ["None"], ["", "def", "num_ents", "(", "self", ")", ":", "\n", "        ", "'''Returns number of entities. \n\n        This means all entities have index that 0 <= index < num_ents().\n        '''", "\n", "return", "self", ".", "n_ents", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.num_rels": [[276, 283], ["None"], "methods", ["None"], ["", "def", "num_rels", "(", "self", ")", ":", "\n", "        ", "'''Returns number of relations.\n\n        This means all relations have index that 0 <= index < num_rels().\n        Note that we consider *ALL* relations, e.g. $R_O$, $R_h$ and $R_{tr}$.\n        '''", "\n", "return", "self", ".", "n_rels", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.num_triples": [[284, 286], ["len"], "methods", ["None"], ["", "def", "num_triples", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "triples", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.rel_str2index": [[287, 292], ["KG.KG.index_rels.get"], "methods", ["None"], ["", "def", "rel_str2index", "(", "self", ",", "rel_str", ")", ":", "\n", "        ", "'''For relation `rel_str` in string, returns its index.\n\n        This is not used in training, but can be helpful for visualizing/debugging etc.'''", "\n", "return", "self", ".", "index_rels", ".", "get", "(", "rel_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.rel_index2str": [[293, 298], ["KG.KG.rels.get"], "methods", ["None"], ["", "def", "rel_index2str", "(", "self", ",", "rel_index", ")", ":", "\n", "        ", "'''For relation `rel_index` in int, returns its string.\n\n        This is not used in training, but can be helpful for visualizing/debugging etc.'''", "\n", "return", "self", ".", "rels", ".", "get", "(", "rel_index", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.ent_str2index": [[299, 304], ["KG.KG.index_ents.get"], "methods", ["None"], ["", "def", "ent_str2index", "(", "self", ",", "ent_str", ")", ":", "\n", "        ", "'''For entity `ent_str` in string, returns its index.\n\n        This is not used in training, but can be helpful for visualizing/debugging etc.'''", "\n", "return", "self", ".", "index_ents", ".", "get", "(", "ent_str", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.ent_index2str": [[305, 310], ["KG.KG.ents.get"], "methods", ["None"], ["", "def", "ent_index2str", "(", "self", ",", "ent_index", ")", ":", "\n", "        ", "'''For entity `ent_index` in int, returns its string.\n\n        This is not used in training, but can be helpful for visualizing/debugging etc.'''", "\n", "return", "self", ".", "ents", ".", "get", "(", "ent_index", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.rel": [[311, 313], ["numpy.array", "range", "KG.KG.num_rels"], "methods", ["home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.num_rels"], ["", "def", "rel", "(", "self", ")", ":", "\n", "        ", "return", "np", ".", "array", "(", "range", "(", "self", ".", "num_rels", "(", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.corrupt_pos": [[314, 326], ["numpy.copy", "numpy.random.randint", "KG.KG.num_ents", "numpy.random.randint", "tuple", "KG.KG.num_ents"], "methods", ["home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.num_ents", "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.num_ents"], ["", "def", "corrupt_pos", "(", "self", ",", "t", ",", "pos", ")", ":", "\n", "        ", "hit", "=", "True", "\n", "res", "=", "None", "\n", "while", "hit", ":", "\n", "            ", "res", "=", "np", ".", "copy", "(", "t", ")", "\n", "samp", "=", "np", ".", "random", ".", "randint", "(", "self", ".", "num_ents", "(", ")", ")", "\n", "while", "samp", "==", "t", "[", "pos", "]", ":", "\n", "                ", "samp", "=", "np", ".", "random", ".", "randint", "(", "self", ".", "num_ents", "(", ")", ")", "\n", "", "res", "[", "pos", "]", "=", "samp", "\n", "if", "tuple", "(", "res", ")", "not", "in", "self", ".", "triples_record", ":", "\n", "                ", "hit", "=", "False", "\n", "", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.corrupt": [[329, 343], ["KG.KG.corrupt_pos", "KG.KG.corrupt_pos", "numpy.random.seed", "int", "numpy.random.uniform", "KG.KG.corrupt_pos", "KG.KG.corrupt_pos", "time.time"], "methods", ["home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.corrupt_pos", "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.corrupt_pos", "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.corrupt_pos", "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.corrupt_pos"], ["", "def", "corrupt", "(", "self", ",", "t", ",", "tar", "=", "None", ")", ":", "\n", "        ", "if", "tar", "==", "'t'", ":", "\n", "            ", "return", "self", ".", "corrupt_pos", "(", "t", ",", "2", ")", "\n", "", "elif", "tar", "==", "'h'", ":", "\n", "            ", "return", "self", ".", "corrupt_pos", "(", "t", ",", "0", ")", "\n", "", "else", ":", "\n", "            ", "this_tph", "=", "self", ".", "tph", "[", "t", "[", "1", "]", "]", "\n", "this_hpt", "=", "self", ".", "hpt", "[", "t", "[", "1", "]", "]", "\n", "assert", "(", "this_tph", ">", "0", "and", "this_hpt", ">", "0", ")", "\n", "np", ".", "random", ".", "seed", "(", "int", "(", "time", ".", "time", "(", ")", ")", ")", "\n", "if", "np", ".", "random", ".", "uniform", "(", "high", "=", "this_tph", "+", "this_hpt", ",", "low", "=", "0.", ")", "<", "this_hpt", ":", "\n", "                ", "return", "self", ".", "corrupt_pos", "(", "t", ",", "2", ")", "\n", "", "else", ":", "\n", "                ", "return", "self", ".", "corrupt_pos", "(", "t", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.corrupt_batch": [[345, 347], ["numpy.array", "KG.KG.corrupt"], "methods", ["home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.corrupt"], ["", "", "", "def", "corrupt_batch", "(", "self", ",", "t_batch", ",", "tar", "=", "None", ")", ":", "\n", "        ", "return", "np", ".", "array", "(", "[", "self", ".", "corrupt", "(", "t", ",", "tar", ")", "for", "t", "in", "t_batch", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.load_stop_words": [[348, 354], ["open", "line.strip.strip.strip", "stopwords.append"], "methods", ["None"], ["", "def", "load_stop_words", "(", "self", ",", "filepath", ")", ":", "\n", "        ", "stopwords", "=", "[", "]", "\n", "for", "line", "in", "open", "(", "filepath", ")", ":", "\n", "            ", "line", "=", "line", ".", "strip", "(", ")", "\n", "stopwords", ".", "append", "(", "line", ")", "\n", "", "return", "stopwords", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.save": [[355, 361], ["open", "pickle.dump", "open.close", "print"], "methods", ["None"], ["", "def", "save", "(", "self", ",", "filename", ")", ":", "\n", "        ", "f", "=", "open", "(", "filename", ",", "'wb'", ")", "\n", "#self.desc_embed = self.desc_embed_padded = None", "\n", "pickle", ".", "dump", "(", "self", ".", "__dict__", ",", "f", ",", "pickle", ".", "HIGHEST_PROTOCOL", ")", "\n", "f", ".", "close", "(", ")", "\n", "print", "(", "\"Save data object as\"", ",", "filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.load": [[362, 368], ["open", "pickle.load", "KG.KG.__dict__.update", "print", "print"], "methods", ["home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.multiG.multiG.load"], ["", "def", "load", "(", "self", ",", "filename", ")", ":", "\n", "        ", "f", "=", "open", "(", "filename", ",", "'rb'", ")", "\n", "tmp_dict", "=", "pickle", ".", "load", "(", "f", ")", "\n", "self", ".", "__dict__", ".", "update", "(", "tmp_dict", ")", "\n", "print", "(", "\"Loaded data object from\"", ",", "filename", ")", "\n", "print", "(", "\"===============\\nCaution: need to reload desc embeddings.\\n=====================\"", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.multiG.multiG.__init__": [[15, 43], ["numpy.array", "numpy.array", "set", "set", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "KG.KG.KG", "KG.KG.KG"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "KG1", "=", "None", ",", "KG2", "=", "None", ")", ":", "\n", "        ", "if", "KG1", "==", "None", "or", "KG2", "==", "None", ":", "\n", "            ", "self", ".", "KG1", "=", "KG", "(", ")", "\n", "self", ".", "KG2", "=", "KG", "(", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "KG1", "=", "KG1", "\n", "self", ".", "KG2", "=", "KG2", "\n", "", "self", ".", "lan1", "=", "'en'", "\n", "self", ".", "lan2", "=", "'fr'", "\n", "self", ".", "align", "=", "np", ".", "array", "(", "[", "0", "]", ")", "\n", "self", ".", "align_desc", "=", "np", ".", "array", "(", "[", "0", "]", ")", "\n", "self", ".", "aligned_KG1", "=", "set", "(", "[", "]", ")", "\n", "self", ".", "aligned_KG2", "=", "set", "(", "[", "]", ")", "\n", "self", ".", "aligned_KG1_index", "=", "np", ".", "array", "(", "[", "0", "]", ")", "\n", "self", ".", "aligned_KG2_index", "=", "np", ".", "array", "(", "[", "0", "]", ")", "\n", "self", ".", "unaligned_KG1_index", "=", "np", ".", "array", "(", "[", "0", "]", ")", "\n", "self", ".", "unaligned_KG2_index", "=", "np", ".", "array", "(", "[", "0", "]", ")", "\n", "self", ".", "align_valid", "=", "np", ".", "array", "(", "[", "0", "]", ")", "\n", "self", ".", "n_align", "=", "0", "\n", "self", ".", "n_align_desc", "=", "0", "\n", "self", ".", "ent12", "=", "{", "}", "\n", "self", ".", "ent21", "=", "{", "}", "\n", "self", ".", "batch_sizeK1", "=", "1024", "\n", "self", ".", "batch_sizeK2", "=", "64", "\n", "self", ".", "batch_sizeA", "=", "32", "\n", "self", ".", "L1", "=", "False", "\n", "self", ".", "dim1", "=", "300", "#stored for TF_Part", "\n", "self", ".", "dim2", "=", "100", "\n", "#self.desc_dim = 64 #stored for TF_Part", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.multiG.multiG.load_align": [[45, 93], ["open", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "print", "line.rstrip().split.rstrip().split.rstrip().split", "multiG.multiG.KG1.ent_str2index", "multiG.multiG.KG2.ent_str2index", "multiG.multiG.align.append", "multiG.multiG.aligned_KG1.add", "multiG.multiG.aligned_KG2.add", "numpy.array", "multiG.multiG.ent12.get", "set", "multiG.multiG.ent12[].add", "multiG.multiG.ent21.get", "set", "multiG.multiG.ent21[].add", "multiG.multiG.unaligned_KG1_index.append", "multiG.multiG.unaligned_KG2_index.append", "line.rstrip().split.rstrip().split.rstrip", "multiG.multiG.align_desc.append", "multiG.multiG.KG1.get_desc_embed", "multiG.multiG.KG2.get_desc_embed"], "methods", ["home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.ent_str2index", "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.ent_str2index", "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.get_desc_embed", "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.get_desc_embed"], ["", "def", "load_align", "(", "self", ",", "filename", ",", "lan1", "=", "'en'", ",", "lan2", "=", "'fr'", ",", "splitter", "=", "'@@@'", ",", "line_end", "=", "'\\n'", ",", "desc", "=", "False", ")", ":", "\n", "        ", "'''Load the dataset.'''", "\n", "weight", "=", "1.", "\n", "align", "=", "[", "]", "\n", "last_c", "=", "-", "1", "\n", "last_r", "=", "-", "1", "\n", "self", ".", "n_align", "=", "0", "\n", "self", ".", "n_align_desc", "=", "0", "\n", "self", ".", "align", "=", "[", "]", "\n", "if", "desc", ":", "\n", "            ", "self", ".", "align_desc", "=", "[", "]", "\n", "", "for", "line", "in", "open", "(", "filename", ")", ":", "\n", "            ", "line", "=", "line", ".", "rstrip", "(", "line_end", ")", ".", "split", "(", "splitter", ")", "\n", "e1", "=", "self", ".", "KG1", ".", "ent_str2index", "(", "line", "[", "0", "]", ")", "\n", "e2", "=", "self", ".", "KG2", ".", "ent_str2index", "(", "line", "[", "2", "]", ")", "#change to triple", "\n", "if", "e1", "==", "None", "or", "e2", "==", "None", ":", "\n", "                ", "continue", "\n", "", "self", ".", "align", ".", "append", "(", "(", "e1", ",", "e2", ")", ")", "\n", "self", ".", "aligned_KG1", ".", "add", "(", "e1", ")", "\n", "self", ".", "aligned_KG2", ".", "add", "(", "e2", ")", "\n", "if", "self", ".", "ent12", ".", "get", "(", "e1", ")", "==", "None", ":", "\n", "                ", "self", ".", "ent12", "[", "e1", "]", "=", "set", "(", "[", "e2", "]", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "ent12", "[", "e1", "]", ".", "add", "(", "e2", ")", "\n", "", "if", "self", ".", "ent21", ".", "get", "(", "e2", ")", "==", "None", ":", "\n", "                ", "self", ".", "ent21", "[", "e2", "]", "=", "set", "(", "[", "e1", "]", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "ent21", "[", "e2", "]", ".", "add", "(", "e1", ")", "\n", "", "self", ".", "n_align", "+=", "1", "\n", "if", "desc", ":", "\n", "                ", "if", "(", "not", "self", ".", "KG1", ".", "get_desc_embed", "(", "e1", ")", "is", "None", ")", "and", "(", "not", "self", ".", "KG2", ".", "get_desc_embed", "(", "e2", ")", "is", "None", ")", ":", "\n", "                    ", "self", ".", "align_desc", ".", "append", "(", "(", "e1", ",", "e2", ")", ")", "\n", "self", ".", "n_align_desc", "+=", "1", "\n", "", "", "", "self", ".", "align", "=", "np", ".", "array", "(", "self", ".", "align", ")", "\n", "if", "desc", ":", "\n", "            ", "self", ".", "align_desc", "=", "np", ".", "array", "(", "self", ".", "align_desc", ")", "\n", "", "self", ".", "aligned_KG1_index", "=", "np", ".", "array", "(", "[", "e", "for", "e", "in", "self", ".", "aligned_KG1", "]", ")", "\n", "self", ".", "aligned_KG2_index", "=", "np", ".", "array", "(", "[", "e", "for", "e", "in", "self", ".", "aligned_KG2", "]", ")", "\n", "self", ".", "unaligned_KG1_index", ",", "self", ".", "unaligned_KG2_index", "=", "[", "]", ",", "[", "]", "\n", "for", "i", "in", "self", ".", "KG1", ".", "desc_index", ":", "\n", "            ", "if", "i", "not", "in", "self", ".", "aligned_KG1", ":", "\n", "                ", "self", ".", "unaligned_KG1_index", ".", "append", "(", "i", ")", "\n", "", "", "self", ".", "unaligned_KG1_index", "=", "np", ".", "array", "(", "self", ".", "unaligned_KG1_index", ")", "\n", "for", "i", "in", "self", ".", "KG2", ".", "desc_index", ":", "\n", "            ", "if", "i", "not", "in", "self", ".", "aligned_KG2", ":", "\n", "                ", "self", ".", "unaligned_KG2_index", ".", "append", "(", "i", ")", "\n", "", "", "self", ".", "unaligned_KG2_index", "=", "np", ".", "array", "(", "self", ".", "unaligned_KG2_index", ")", "\n", "print", "(", "\"Loaded aligned entities from\"", ",", "filename", ",", "\". #pairs:\"", ",", "self", ".", "n_align", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.multiG.multiG.load_valid": [[94, 117], ["open", "numpy.array", "print", "line.rstrip().split.rstrip().split.rstrip().split", "multiG.multiG.KG1.ent_str2index", "multiG.multiG.KG2.ent_str2index", "multiG.multiG.ent12.get", "set", "multiG.multiG.ent12[].add", "multiG.multiG.ent21.get", "set", "multiG.multiG.ent21[].add", "multiG.multiG.align_valid.append", "line.rstrip().split.rstrip().split.rstrip", "len", "multiG.multiG.KG1.get_desc_embed", "multiG.multiG.KG2.get_desc_embed"], "methods", ["home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.ent_str2index", "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.ent_str2index", "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.get_desc_embed", "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.get_desc_embed"], ["", "def", "load_valid", "(", "self", ",", "filename", ",", "size", "=", "1024", ",", "lan1", "=", "'en'", ",", "lan2", "=", "'fr'", ",", "splitter", "=", "'@@@'", ",", "line_end", "=", "'\\n'", ",", "desc", "=", "False", ")", ":", "\n", "        ", "'''Load the dataset.'''", "\n", "self", ".", "align_valid", "=", "[", "]", "\n", "for", "line", "in", "open", "(", "filename", ")", ":", "\n", "            ", "line", "=", "line", ".", "rstrip", "(", "line_end", ")", ".", "split", "(", "splitter", ")", "\n", "e1", "=", "self", ".", "KG1", ".", "ent_str2index", "(", "line", "[", "0", "]", ")", "\n", "e2", "=", "self", ".", "KG2", ".", "ent_str2index", "(", "line", "[", "1", "]", ")", "\n", "if", "e1", "==", "None", "or", "e2", "==", "None", ":", "\n", "                ", "continue", "\n", "", "if", "self", ".", "ent12", ".", "get", "(", "e1", ")", "==", "None", ":", "\n", "                ", "self", ".", "ent12", "[", "e1", "]", "=", "set", "(", "[", "e2", "]", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "ent12", "[", "e1", "]", ".", "add", "(", "e2", ")", "\n", "", "if", "self", ".", "ent21", ".", "get", "(", "e2", ")", "==", "None", ":", "\n", "                ", "self", ".", "ent21", "[", "e2", "]", "=", "set", "(", "[", "e1", "]", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "ent21", "[", "e2", "]", ".", "add", "(", "e1", ")", "\n", "", "if", "(", "not", "self", ".", "KG1", ".", "get_desc_embed", "(", "e1", ")", "is", "None", ")", "and", "(", "not", "self", ".", "KG2", ".", "get_desc_embed", "(", "e2", ")", "is", "None", ")", ":", "\n", "                ", "self", ".", "align_valid", ".", "append", "(", "(", "e1", ",", "e2", ")", ")", "\n", "if", "len", "(", "self", ".", "align_valid", ")", ">=", "size", ":", "\n", "                    ", "break", "\n", "", "", "", "self", ".", "align_valid", "=", "np", ".", "array", "(", "self", ".", "align_valid", ")", "\n", "print", "(", "\"Loaded validation entities from\"", ",", "filename", ",", "\". #pairs:\"", ",", "size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.multiG.multiG.load_more_gt": [[118, 134], ["open", "line.rstrip().split.rstrip().split.rstrip().split", "multiG.multiG.KG1.ent_str2index", "multiG.multiG.KG2.ent_str2index", "print", "multiG.multiG.ent12.get", "set", "multiG.multiG.ent12[].add", "multiG.multiG.ent21.get", "set", "multiG.multiG.ent21[].add", "line.rstrip().split.rstrip().split.rstrip"], "methods", ["home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.ent_str2index", "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.ent_str2index"], ["", "def", "load_more_gt", "(", "self", ",", "filename", ")", ":", "\n", "        ", "for", "line", "in", "open", "(", "filename", ")", ":", "\n", "            ", "line", "=", "line", ".", "rstrip", "(", "line_end", ")", ".", "split", "(", "splitter", ")", "\n", "e1", "=", "self", ".", "KG1", ".", "ent_str2index", "(", "line", "[", "0", "]", ")", "\n", "e2", "=", "self", ".", "KG2", ".", "ent_str2index", "(", "line", "[", "1", "]", ")", "\n", "if", "e1", "==", "None", "or", "e2", "==", "None", ":", "\n", "                ", "continue", "\n", "", "if", "self", ".", "ent12", ".", "get", "(", "e1", ")", "==", "None", ":", "\n", "                ", "self", ".", "ent12", "[", "e1", "]", "=", "set", "(", "[", "e2", "]", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "ent12", "[", "e1", "]", ".", "add", "(", "e2", ")", "\n", "", "if", "self", ".", "ent21", ".", "get", "(", "e2", ")", "==", "None", ":", "\n", "                ", "self", ".", "ent21", "[", "e2", "]", "=", "set", "(", "[", "e1", "]", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "ent21", "[", "e2", "]", ".", "add", "(", "e1", ")", "\n", "", "print", "(", "\"Loaded more gt file for negative sampling from\"", ",", "filename", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.multiG.multiG.num_align": [[135, 141], ["None"], "methods", ["None"], ["", "", "def", "num_align", "(", "self", ")", ":", "\n", "        ", "'''Returns number of entities. \n\n        This means all entities have index that 0 <= index < num_ents().\n        '''", "\n", "return", "self", ".", "n_align", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.multiG.multiG.num_align_desc": [[142, 148], ["None"], "methods", ["None"], ["", "def", "num_align_desc", "(", "self", ")", ":", "\n", "        ", "'''Returns number of entities. \n\n        This means all entities have index that 0 <= index < num_ents().\n        '''", "\n", "return", "self", ".", "n_align_desc", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.multiG.multiG.corrupt_desc_pos": [[149, 172], ["numpy.copy", "numpy.random.choice", "numpy.random.choice", "numpy.array", "numpy.random.choice", "numpy.random.choice", "numpy.array"], "methods", ["None"], ["", "def", "corrupt_desc_pos", "(", "self", ",", "align", ",", "pos", ",", "sample_global", "=", "True", ")", ":", "\n", "        ", "assert", "(", "pos", "in", "[", "0", ",", "1", "]", ")", "\n", "hit", "=", "True", "\n", "res", "=", "None", "\n", "while", "hit", ":", "\n", "            ", "res", "=", "np", ".", "copy", "(", "align", ")", "\n", "if", "pos", "==", "0", ":", "\n", "                ", "if", "sample_global", ":", "\n", "                    ", "samp", "=", "np", ".", "random", ".", "choice", "(", "self", ".", "KG1", ".", "desc_index", ")", "\n", "", "else", ":", "\n", "                    ", "samp", "=", "np", ".", "random", ".", "choice", "(", "self", ".", "aligned_KG1_index", ")", "\n", "", "if", "samp", "not", "in", "self", ".", "ent21", "[", "align", "[", "1", "]", "]", ":", "\n", "                    ", "hit", "=", "False", "\n", "res", "=", "np", ".", "array", "(", "[", "samp", ",", "align", "[", "1", "]", "]", ")", "\n", "", "", "else", ":", "\n", "                ", "if", "sample_global", ":", "\n", "                    ", "samp", "=", "np", ".", "random", ".", "choice", "(", "self", ".", "KG2", ".", "desc_index", ")", "\n", "", "else", ":", "\n", "                    ", "samp", "=", "np", ".", "random", ".", "choice", "(", "self", ".", "aligned_KG2_index", ")", "\n", "", "if", "samp", "not", "in", "self", ".", "ent12", "[", "align", "[", "0", "]", "]", ":", "\n", "                    ", "hit", "=", "False", "\n", "res", "=", "np", ".", "array", "(", "[", "align", "[", "0", "]", ",", "samp", "]", ")", "\n", "", "", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.multiG.multiG.corrupt_desc": [[173, 178], ["multiG.multiG.corrupt_desc_pos", "numpy.random.randint"], "methods", ["home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.multiG.multiG.corrupt_desc_pos"], ["", "def", "corrupt_desc", "(", "self", ",", "align", ",", "tar", "=", "None", ")", ":", "\n", "        ", "pos", "=", "tar", "\n", "if", "pos", "==", "None", ":", "\n", "            ", "pos", "=", "np", ".", "random", ".", "randint", "(", "2", ")", "\n", "", "return", "self", ".", "corrupt_desc_pos", "(", "align", ",", "pos", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.multiG.multiG.corrupt_align_pos": [[179, 196], ["numpy.copy", "numpy.random.randint", "numpy.random.randint", "multiG.multiG.KG1.num_ents", "numpy.array", "multiG.multiG.KG2.num_ents", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.num_ents", "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.num_ents"], ["", "def", "corrupt_align_pos", "(", "self", ",", "align", ",", "pos", ")", ":", "\n", "        ", "assert", "(", "pos", "in", "[", "0", ",", "1", "]", ")", "\n", "hit", "=", "True", "\n", "res", "=", "None", "\n", "while", "hit", ":", "\n", "            ", "res", "=", "np", ".", "copy", "(", "align", ")", "\n", "if", "pos", "==", "0", ":", "\n", "                ", "samp", "=", "np", ".", "random", ".", "randint", "(", "self", ".", "KG1", ".", "num_ents", "(", ")", ")", "\n", "if", "samp", "not", "in", "self", ".", "ent21", "[", "align", "[", "1", "]", "]", ":", "\n", "                    ", "hit", "=", "False", "\n", "res", "=", "np", ".", "array", "(", "[", "samp", ",", "align", "[", "1", "]", "]", ")", "\n", "", "", "else", ":", "\n", "                ", "samp", "=", "np", ".", "random", ".", "randint", "(", "self", ".", "KG2", ".", "num_ents", "(", ")", ")", "\n", "if", "samp", "not", "in", "self", ".", "ent12", "[", "align", "[", "0", "]", "]", ":", "\n", "                    ", "hit", "=", "False", "\n", "res", "=", "np", ".", "array", "(", "[", "align", "[", "0", "]", ",", "samp", "]", ")", "\n", "", "", "", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.multiG.multiG.corrupt_align": [[197, 202], ["multiG.multiG.corrupt_align_pos", "numpy.random.randint"], "methods", ["home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.multiG.multiG.corrupt_align_pos"], ["", "def", "corrupt_align", "(", "self", ",", "align", ",", "tar", "=", "None", ")", ":", "\n", "        ", "pos", "=", "tar", "\n", "if", "pos", "==", "None", ":", "\n", "            ", "pos", "=", "np", ".", "random", ".", "randint", "(", "2", ")", "\n", "", "return", "self", ".", "corrupt_align_pos", "(", "align", ",", "pos", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.multiG.multiG.corrupt_desc_batch": [[204, 207], ["numpy.random.seed", "numpy.array", "int", "time.time", "multiG.multiG.corrupt_desc"], "methods", ["home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.multiG.multiG.corrupt_desc"], ["", "def", "corrupt_desc_batch", "(", "self", ",", "a_batch", ",", "tar", "=", "None", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "int", "(", "time", ".", "time", "(", ")", ")", ")", "\n", "return", "np", ".", "array", "(", "[", "self", ".", "corrupt_desc", "(", "a", ",", "tar", ")", "for", "a", "in", "a_batch", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.multiG.multiG.corrupt_align_batch": [[208, 211], ["numpy.random.seed", "numpy.array", "int", "time.time", "multiG.multiG.corrupt_align"], "methods", ["home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.multiG.multiG.corrupt_align"], ["", "def", "corrupt_align_batch", "(", "self", ",", "a_batch", ",", "tar", "=", "None", ")", ":", "\n", "        ", "np", ".", "random", ".", "seed", "(", "int", "(", "time", ".", "time", "(", ")", ")", ")", "\n", "return", "np", ".", "array", "(", "[", "self", ".", "corrupt_align", "(", "a", ",", "tar", ")", "for", "a", "in", "a_batch", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.multiG.multiG.sample_false_pair": [[212, 216], ["numpy.random.choice", "numpy.random.choice", "numpy.array", "range"], "methods", ["None"], ["", "def", "sample_false_pair", "(", "self", ",", "batch_sizeA", ")", ":", "\n", "        ", "a", "=", "np", ".", "random", ".", "choice", "(", "self", ".", "unaligned_KG1_index", ",", "batch_sizeA", ")", "\n", "b", "=", "np", ".", "random", ".", "choice", "(", "self", ".", "unaligned_KG2_index", ",", "batch_sizeA", ")", "\n", "return", "np", ".", "array", "(", "[", "(", "a", "[", "i", "]", ",", "b", "[", "i", "]", ")", "for", "i", "in", "range", "(", "batch_sizeA", ")", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.multiG.multiG.expand_align": [[217, 220], ["None"], "methods", ["None"], ["", "def", "expand_align", "(", "self", ",", "list_of_pairs", ")", ":", "\n", "# TODO", "\n", "        ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.multiG.multiG.token_overlap": [[221, 229], ["min", "len", "len"], "methods", ["None"], ["", "def", "token_overlap", "(", "self", ",", "set1", ",", "set2", ")", ":", "\n", "        ", "min_len", "=", "min", "(", "len", "(", "set1", ")", ",", "len", "(", "set2", ")", ")", "\n", "hit", "=", "0.", "\n", "for", "tk", "in", "set1", ":", "\n", "            ", "for", "tk2", "in", "set2", ":", "\n", "                ", "if", "tk", "==", "tk2", ":", "\n", "                    ", "hit", "+=", "1", "\n", "", "", "", "return", "hit", "/", "min_len", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.multiG.multiG.save": [[230, 235], ["open", "pickle.dump", "open.close", "print"], "methods", ["None"], ["", "def", "save", "(", "self", ",", "filename", ")", ":", "\n", "        ", "f", "=", "open", "(", "filename", ",", "'wb'", ")", "\n", "pickle", ".", "dump", "(", "self", ".", "__dict__", ",", "f", ",", "pickle", ".", "HIGHEST_PROTOCOL", ")", "\n", "f", ".", "close", "(", ")", "\n", "print", "(", "\"Save data object as\"", ",", "filename", ")", "\n", "", "def", "load", "(", "self", ",", "filename", ")", ":", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.multiG.multiG.load": [[235, 240], ["open", "pickle.load", "multiG.multiG.__dict__.update", "print"], "methods", ["home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.multiG.multiG.load"], ["", "def", "load", "(", "self", ",", "filename", ")", ":", "\n", "        ", "f", "=", "open", "(", "filename", ",", "'rb'", ")", "\n", "tmp_dict", "=", "pickle", ".", "load", "(", "f", ")", "\n", "self", ".", "__dict__", ".", "update", "(", "tmp_dict", ")", "\n", "print", "(", "\"Loaded data object from\"", ",", "filename", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.trainer2.Trainer.__init__": [[15, 30], ["None"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ")", ":", "\n", "        ", "self", ".", "batch_sizeK1", "=", "512", "\n", "self", ".", "batch_sizeK2", "=", "128", "\n", "self", ".", "batch_sizeA", "=", "32", "\n", "self", ".", "dim1", "=", "300", "\n", "self", ".", "dim2", "=", "50", "\n", "self", ".", "_m1", "=", "0.5", "\n", "self", ".", "_a1", "=", "5.", "\n", "self", ".", "_a2", "=", "0.5", "\n", "self", ".", "multiG", "=", "None", "\n", "self", ".", "tf_parts", "=", "None", "\n", "self", ".", "save_path", "=", "'this-model.ckpt'", "\n", "self", ".", "multiG_save_path", "=", "'this-multiG.bin'", "\n", "self", ".", "L1", "=", "False", "\n", "self", ".", "sess", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.trainer2.Trainer.build": [[31, 67], ["model2.TFParts", "tensorflow.ConfigProto", "tensorflow.Session", "trainer2.Trainer.sess.run", "tensorflow.summary.FileWriter", "tensorflow.global_variables_initializer", "trainer2.Trainer.multiG.KG1.num_rels", "trainer2.Trainer.multiG.KG1.num_ents", "trainer2.Trainer.multiG.KG2.num_rels", "trainer2.Trainer.multiG.KG2.num_ents", "tensorflow.get_default_graph"], "methods", ["home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.num_rels", "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.num_ents", "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.num_rels", "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.num_ents"], ["", "def", "build", "(", "self", ",", "multiG", ",", "method", "=", "'transe'", ",", "bridge", "=", "'CG-one'", ",", "dim1", "=", "300", ",", "dim2", "=", "50", ",", "batch_sizeK1", "=", "1024", ",", "batch_sizeK2", "=", "1024", ",", "\n", "batch_sizeA", "=", "32", ",", "a1", "=", "5.", ",", "a2", "=", "0.5", ",", "m1", "=", "0.5", ",", "m2", "=", "1.0", ",", "save_path", "=", "'this-model.ckpt'", ",", "multiG_save_path", "=", "'this-multiG.bin'", ",", "\n", "log_save_path", "=", "'tf_log'", ",", "L1", "=", "False", ")", ":", "\n", "        ", "self", ".", "multiG", "=", "multiG", "\n", "self", ".", "method", "=", "method", "\n", "self", ".", "bridge", "=", "bridge", "\n", "self", ".", "dim1", "=", "self", ".", "multiG", ".", "dim1", "=", "self", ".", "multiG", ".", "KG1", ".", "dim", "=", "dim1", "# update dim", "\n", "self", ".", "dim2", "=", "self", ".", "multiG", ".", "dim2", "=", "self", ".", "multiG", ".", "KG2", ".", "dim", "=", "dim2", "# update dim", "\n", "#self.multiG.KG1.wv_dim = self.multiG.KG2.wv_dim = wv_dim", "\n", "self", ".", "batch_sizeK1", "=", "self", ".", "multiG", ".", "batch_sizeK1", "=", "batch_sizeK1", "\n", "self", ".", "batch_sizeK2", "=", "self", ".", "multiG", ".", "batch_sizeK2", "=", "batch_sizeK2", "\n", "self", ".", "batch_sizeA", "=", "self", ".", "multiG", ".", "batch_sizeA", "=", "batch_sizeA", "\n", "self", ".", "multiG_save_path", "=", "multiG_save_path", "\n", "self", ".", "log_save_path", "=", "log_save_path", "\n", "self", ".", "save_path", "=", "save_path", "\n", "self", ".", "L1", "=", "self", ".", "multiG", ".", "L1", "=", "L1", "\n", "self", ".", "tf_parts", "=", "model", ".", "TFParts", "(", "num_rels1", "=", "self", ".", "multiG", ".", "KG1", ".", "num_rels", "(", ")", ",", "\n", "num_ents1", "=", "self", ".", "multiG", ".", "KG1", ".", "num_ents", "(", ")", ",", "\n", "num_rels2", "=", "self", ".", "multiG", ".", "KG2", ".", "num_rels", "(", ")", ",", "\n", "num_ents2", "=", "self", ".", "multiG", ".", "KG2", ".", "num_ents", "(", ")", ",", "\n", "method", "=", "self", ".", "method", ",", "\n", "bridge", "=", "self", ".", "bridge", ",", "\n", "dim1", "=", "dim1", ",", "\n", "dim2", "=", "dim2", ",", "\n", "batch_sizeK1", "=", "self", ".", "batch_sizeK1", ",", "\n", "batch_sizeK2", "=", "self", ".", "batch_sizeK2", ",", "\n", "batch_sizeA", "=", "self", ".", "batch_sizeA", ",", "\n", "L1", "=", "self", ".", "L1", ")", "\n", "self", ".", "tf_parts", ".", "_m1", "=", "m1", "\n", "self", ".", "tf_parts", ".", "_m2", "=", "m2", "\n", "\n", "config", "=", "tf", ".", "ConfigProto", "(", ")", "\n", "config", ".", "gpu_options", ".", "allow_growth", "=", "True", "\n", "self", ".", "sess", "=", "tf", ".", "Session", "(", "config", "=", "config", ")", "\n", "self", ".", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "self", ".", "writer", "=", "tf", ".", "summary", ".", "FileWriter", "(", "log_save_path", ",", "graph", "=", "tf", ".", "get_default_graph", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.trainer2.Trainer.gen_KM_batch": [[68, 88], ["range", "numpy.random.shuffle", "KG.corrupt_batch", "numpy.concatenate", "h_batch.astype", "r_batch.astype", "t_batch.astype", "neg_h_batch.astype", "neg_t_batch.astype"], "methods", ["home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.corrupt_batch"], ["", "def", "gen_KM_batch", "(", "self", ",", "KG_index", ",", "batchsize", ",", "forever", "=", "False", ",", "shuffle", "=", "True", ")", ":", "#batchsize is required", "\n", "        ", "KG", "=", "self", ".", "multiG", ".", "KG1", "\n", "if", "KG_index", "==", "2", ":", "\n", "            ", "KG", "=", "self", ".", "multiG", ".", "KG2", "\n", "", "l", "=", "KG", ".", "triples", ".", "shape", "[", "0", "]", "\n", "while", "True", ":", "\n", "            ", "triples", "=", "KG", ".", "triples", "\n", "if", "shuffle", ":", "\n", "                ", "np", ".", "random", ".", "shuffle", "(", "triples", ")", "\n", "", "for", "i", "in", "range", "(", "0", ",", "l", ",", "batchsize", ")", ":", "\n", "                ", "batch", "=", "triples", "[", "i", ":", "i", "+", "batchsize", ",", ":", "]", "\n", "if", "batch", ".", "shape", "[", "0", "]", "<", "batchsize", ":", "\n", "                    ", "batch", "=", "np", ".", "concatenate", "(", "(", "batch", ",", "self", ".", "multiG", ".", "triples", "[", ":", "batchsize", "-", "batch", ".", "shape", "[", "0", "]", "]", ")", ",", "axis", "=", "0", ")", "\n", "assert", "batch", ".", "shape", "[", "0", "]", "==", "batchsize", "\n", "", "neg_batch", "=", "KG", ".", "corrupt_batch", "(", "batch", ")", "\n", "h_batch", ",", "r_batch", ",", "t_batch", "=", "batch", "[", ":", ",", "0", "]", ",", "batch", "[", ":", ",", "1", "]", ",", "batch", "[", ":", ",", "2", "]", "\n", "neg_h_batch", ",", "neg_t_batch", "=", "neg_batch", "[", ":", ",", "0", "]", ",", "neg_batch", "[", ":", ",", "2", "]", "\n", "yield", "h_batch", ".", "astype", "(", "np", ".", "int64", ")", ",", "r_batch", ".", "astype", "(", "np", ".", "int64", ")", ",", "t_batch", ".", "astype", "(", "np", ".", "int64", ")", ",", "neg_h_batch", ".", "astype", "(", "np", ".", "int64", ")", ",", "neg_t_batch", ".", "astype", "(", "np", ".", "int64", ")", "\n", "", "if", "not", "forever", ":", "\n", "                ", "break", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.trainer2.Trainer.gen_AM_batch": [[89, 106], ["len", "range", "numpy.random.shuffle", "multiG.multiG.multiG.corrupt_align_batch", "numpy.concatenate", "e1_batch.astype", "e2_batch.astype", "e1_nbatch.astype", "e2_nbatch.astype"], "methods", ["home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.multiG.multiG.corrupt_align_batch"], ["", "", "", "def", "gen_AM_batch", "(", "self", ",", "forever", "=", "False", ",", "shuffle", "=", "True", ")", ":", "# not changed with its batchsize", "\n", "        ", "multiG", "=", "self", ".", "multiG", "\n", "l", "=", "len", "(", "multiG", ".", "align", ")", "\n", "while", "True", ":", "\n", "            ", "align", "=", "multiG", ".", "align", "\n", "if", "shuffle", ":", "\n", "                ", "np", ".", "random", ".", "shuffle", "(", "align", ")", "\n", "", "for", "i", "in", "range", "(", "0", ",", "l", ",", "self", ".", "batch_sizeA", ")", ":", "\n", "                ", "batch", "=", "align", "[", "i", ":", "i", "+", "self", ".", "batch_sizeA", ",", ":", "]", "\n", "if", "batch", ".", "shape", "[", "0", "]", "<", "self", ".", "batch_sizeA", ":", "\n", "                    ", "batch", "=", "np", ".", "concatenate", "(", "(", "batch", ",", "align", "[", ":", "self", ".", "batch_sizeA", "-", "batch", ".", "shape", "[", "0", "]", "]", ")", ",", "axis", "=", "0", ")", "\n", "assert", "batch", ".", "shape", "[", "0", "]", "==", "self", ".", "batch_sizeA", "\n", "", "n_batch", "=", "multiG", ".", "corrupt_align_batch", "(", "batch", ",", "tar", "=", "1", ")", "# only neg on class", "\n", "e1_batch", ",", "e2_batch", ",", "e1_nbatch", ",", "e2_nbatch", "=", "batch", "[", ":", ",", "0", "]", ",", "batch", "[", ":", ",", "1", "]", ",", "n_batch", "[", ":", ",", "0", "]", ",", "n_batch", "[", ":", ",", "1", "]", "\n", "yield", "e1_batch", ".", "astype", "(", "np", ".", "int64", ")", ",", "e2_batch", ".", "astype", "(", "np", ".", "int64", ")", ",", "e1_nbatch", ".", "astype", "(", "np", ".", "int64", ")", ",", "e2_nbatch", ".", "astype", "(", "np", ".", "int64", ")", "\n", "", "if", "not", "forever", ":", "\n", "                ", "break", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.trainer2.Trainer.gen_AM_batch_non_neg": [[107, 123], ["len", "range", "numpy.random.shuffle", "numpy.concatenate", "e1_batch.astype", "e2_batch.astype"], "methods", ["None"], ["", "", "", "def", "gen_AM_batch_non_neg", "(", "self", ",", "forever", "=", "False", ",", "shuffle", "=", "True", ")", ":", "\n", "        ", "multiG", "=", "self", ".", "multiG", "\n", "l", "=", "len", "(", "multiG", ".", "align", ")", "\n", "while", "True", ":", "\n", "            ", "align", "=", "multiG", ".", "align", "\n", "if", "shuffle", ":", "\n", "                ", "np", ".", "random", ".", "shuffle", "(", "align", ")", "\n", "", "for", "i", "in", "range", "(", "0", ",", "l", ",", "self", ".", "batch_sizeA", ")", ":", "\n", "                ", "batch", "=", "align", "[", "i", ":", "i", "+", "self", ".", "batch_sizeA", ",", ":", "]", "\n", "if", "batch", ".", "shape", "[", "0", "]", "<", "self", ".", "batch_sizeA", ":", "\n", "                    ", "batch", "=", "np", ".", "concatenate", "(", "(", "batch", ",", "align", "[", ":", "self", ".", "batch_sizeA", "-", "batch", ".", "shape", "[", "0", "]", "]", ")", ",", "axis", "=", "0", ")", "\n", "assert", "batch", ".", "shape", "[", "0", "]", "==", "self", ".", "batch_sizeA", "\n", "", "e1_batch", ",", "e2_batch", "=", "batch", "[", ":", ",", "0", "]", ",", "batch", "[", ":", ",", "1", "]", "\n", "yield", "e1_batch", ".", "astype", "(", "np", ".", "int64", ")", ",", "e2_batch", ".", "astype", "(", "np", ".", "int64", ")", "\n", "", "if", "not", "forever", ":", "\n", "                ", "break", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.trainer2.Trainer.train1epoch_KM": [[124, 180], ["trainer2.Trainer.gen_KM_batch", "trainer2.Trainer.gen_KM_batch", "range", "range", "numpy.sum", "print", "next", "sess.run", "next", "sess.run", "len", "numpy.array", "numpy.array", "print", "len", "numpy.array", "numpy.array", "print"], "methods", ["home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.trainer2.Trainer.gen_KM_batch", "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.trainer2.Trainer.gen_KM_batch"], ["", "", "", "def", "train1epoch_KM", "(", "self", ",", "sess", ",", "num_A_batch", ",", "num_B_batch", ",", "a2", ",", "lr", ",", "epoch", ")", ":", "\n", "\n", "        ", "this_gen_A_batch", "=", "self", ".", "gen_KM_batch", "(", "KG_index", "=", "1", ",", "batchsize", "=", "self", ".", "batch_sizeK1", ",", "forever", "=", "True", ")", "\n", "this_gen_B_batch", "=", "self", ".", "gen_KM_batch", "(", "KG_index", "=", "2", ",", "batchsize", "=", "self", ".", "batch_sizeK2", ",", "forever", "=", "True", ")", "\n", "\n", "this_loss", "=", "[", "]", "\n", "\n", "loss_A", "=", "loss_B", "=", "0", "\n", "\n", "for", "batch_id", "in", "range", "(", "num_A_batch", ")", ":", "\n", "# Optimize loss A", "\n", "            ", "A_h_index", ",", "A_r_index", ",", "A_t_index", ",", "A_hn_index", ",", "A_tn_index", "=", "next", "(", "this_gen_A_batch", ")", "\n", "_", ",", "loss_A", "=", "sess", ".", "run", "(", "[", "self", ".", "tf_parts", ".", "_train_op_A", ",", "self", ".", "tf_parts", ".", "_A_loss", "]", ",", "\n", "feed_dict", "=", "{", "self", ".", "tf_parts", ".", "_A_h_index", ":", "A_h_index", ",", "\n", "self", ".", "tf_parts", ".", "_A_r_index", ":", "A_r_index", ",", "\n", "self", ".", "tf_parts", ".", "_A_t_index", ":", "A_t_index", ",", "\n", "self", ".", "tf_parts", ".", "_A_hn_index", ":", "A_hn_index", ",", "\n", "self", ".", "tf_parts", ".", "_A_tn_index", ":", "A_tn_index", ",", "\n", "self", ".", "tf_parts", ".", "_lr", ":", "lr", "}", ")", "\n", "batch_loss", "=", "[", "loss_A", "]", "\n", "if", "len", "(", "this_loss", ")", "==", "0", ":", "\n", "                ", "this_loss", "=", "np", ".", "array", "(", "batch_loss", ")", "\n", "", "else", ":", "\n", "                ", "this_loss", "+=", "np", ".", "array", "(", "batch_loss", ")", "\n", "", "if", "(", "(", "batch_id", "+", "1", ")", "%", "500", "==", "0", "or", "batch_id", "==", "num_A_batch", "-", "1", ")", ":", "\n", "                ", "print", "(", "'\\rprocess KG1: %d / %d. Epoch %d'", "%", "(", "batch_id", "+", "1", ",", "num_A_batch", "+", "1", ",", "epoch", ")", ")", "\n", "", "'''\n            if batch_id == num_B_batch - 1:\n                self.writer.add_summary(summary_op, epoch)\n            '''", "\n", "", "for", "batch_id", "in", "range", "(", "num_B_batch", ")", ":", "\n", "# Optimize loss B", "\n", "            ", "B_h_index", ",", "B_r_index", ",", "B_t_index", ",", "B_hn_index", ",", "B_tn_index", "=", "next", "(", "this_gen_B_batch", ")", "\n", "_", ",", "loss_B", "=", "sess", ".", "run", "(", "[", "self", ".", "tf_parts", ".", "_train_op_B", ",", "self", ".", "tf_parts", ".", "_B_loss", "]", ",", "\n", "feed_dict", "=", "{", "self", ".", "tf_parts", ".", "_B_h_index", ":", "B_h_index", ",", "\n", "self", ".", "tf_parts", ".", "_B_r_index", ":", "B_r_index", ",", "\n", "self", ".", "tf_parts", ".", "_B_t_index", ":", "B_t_index", ",", "\n", "self", ".", "tf_parts", ".", "_B_hn_index", ":", "B_hn_index", ",", "\n", "self", ".", "tf_parts", ".", "_B_tn_index", ":", "B_tn_index", ",", "\n", "self", ".", "tf_parts", ".", "_lr", ":", "lr", "}", ")", "\n", "\n", "# Observe total loss", "\n", "batch_loss", "=", "[", "loss_B", "]", "\n", "if", "len", "(", "this_loss", ")", "==", "0", ":", "\n", "                ", "this_loss", "=", "np", ".", "array", "(", "batch_loss", ")", "\n", "", "else", ":", "\n", "                ", "this_loss", "+=", "np", ".", "array", "(", "batch_loss", ")", "\n", "", "if", "(", "(", "batch_id", "+", "1", ")", "%", "500", "==", "0", "or", "batch_id", "==", "num_B_batch", "-", "1", ")", ":", "\n", "                ", "print", "(", "'\\rprocess KG2: %d / %d. Epoch %d'", "%", "(", "batch_id", "+", "1", ",", "num_B_batch", "+", "1", ",", "epoch", ")", ")", "\n", "", "'''\n            if batch_id == num_B_batch - 1:\n                self.writer.add_summary(summary_op, epoch)\n            '''", "\n", "", "this_total_loss", "=", "np", ".", "sum", "(", "this_loss", ")", "\n", "print", "(", "\"KM Loss of epoch\"", ",", "epoch", ",", "\":\"", ",", "this_total_loss", ")", "\n", "return", "this_total_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.trainer2.Trainer.train1epoch_AM": [[181, 215], ["trainer2.Trainer.gen_AM_batch", "range", "numpy.sum", "print", "next", "sess.run", "len", "numpy.array", "numpy.array", "print"], "methods", ["home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.trainer2.Trainer.gen_AM_batch"], ["", "def", "train1epoch_AM", "(", "self", ",", "sess", ",", "num_AM_batch", ",", "a1", ",", "a2", ",", "lr", ",", "epoch", ")", ":", "\n", "\n", "        ", "this_gen_AM_batch", "=", "self", ".", "gen_AM_batch", "(", "forever", "=", "True", ")", "\n", "#this_gen_AM_batch = self.gen_AM_batch_non_neg(forever=True)", "\n", "\n", "this_loss", "=", "[", "]", "\n", "\n", "loss_AM", "=", "0", "\n", "\n", "for", "batch_id", "in", "range", "(", "num_AM_batch", ")", ":", "\n", "# Optimize loss A", "\n", "            ", "e1_index", ",", "e2_index", ",", "e1_nindex", ",", "e2_nindex", "=", "next", "(", "this_gen_AM_batch", ")", "\n", "_", ",", "loss_AM", "=", "sess", ".", "run", "(", "[", "self", ".", "tf_parts", ".", "_train_op_AM", ",", "self", ".", "tf_parts", ".", "_AM_loss", "]", ",", "\n", "feed_dict", "=", "{", "self", ".", "tf_parts", ".", "_AM_index1", ":", "e1_index", ",", "\n", "self", ".", "tf_parts", ".", "_AM_index2", ":", "e2_index", ",", "\n", "self", ".", "tf_parts", ".", "_AM_nindex1", ":", "e1_nindex", ",", "\n", "self", ".", "tf_parts", ".", "_AM_nindex2", ":", "e2_nindex", ",", "\n", "self", ".", "tf_parts", ".", "_lr", ":", "lr", "*", "a1", "}", ")", "\n", "# Observe total loss", "\n", "batch_loss", "=", "[", "loss_AM", "]", "\n", "if", "len", "(", "this_loss", ")", "==", "0", ":", "\n", "                ", "this_loss", "=", "np", ".", "array", "(", "batch_loss", ")", "\n", "", "else", ":", "\n", "                ", "this_loss", "+=", "np", ".", "array", "(", "batch_loss", ")", "\n", "", "if", "(", "(", "batch_id", "+", "1", ")", "%", "100", "==", "0", ")", "or", "batch_id", "==", "num_AM_batch", "-", "1", ":", "\n", "                ", "print", "(", "'\\rprocess: %d / %d. Epoch %d'", "%", "(", "batch_id", "+", "1", ",", "num_AM_batch", "+", "1", ",", "epoch", ")", ")", "\n", "", "'''\n            if batch_id == num_AM_batch - 1:\n                self.writer.add_summary(summary_op, epoch)\n            '''", "\n", "\n", "", "this_total_loss", "=", "np", ".", "sum", "(", "this_loss", ")", "\n", "print", "(", "\"AM Loss of epoch\"", ",", "epoch", ",", "\":\"", ",", "this_total_loss", ")", "\n", "return", "this_total_loss", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.trainer2.Trainer.train1epoch_associative": [[216, 232], ["int", "int", "int", "trainer2.Trainer.train1epoch_KM", "range", "print", "print", "print", "trainer2.Trainer.train1epoch_AM", "trainer2.Trainer.multiG.KG1.num_triples", "trainer2.Trainer.multiG.KG2.num_triples", "trainer2.Trainer.multiG.num_align"], "methods", ["home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.trainer2.Trainer.train1epoch_KM", "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.trainer2.Trainer.train1epoch_AM", "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.num_triples", "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.num_triples", "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.multiG.multiG.num_align"], ["", "def", "train1epoch_associative", "(", "self", ",", "sess", ",", "lr", ",", "a1", ",", "a2", ",", "epoch", ",", "AM_fold", "=", "1", ")", ":", "\n", "\n", "        ", "num_A_batch", "=", "int", "(", "self", ".", "multiG", ".", "KG1", ".", "num_triples", "(", ")", "/", "self", ".", "batch_sizeK1", ")", "\n", "num_B_batch", "=", "int", "(", "self", ".", "multiG", ".", "KG2", ".", "num_triples", "(", ")", "/", "self", ".", "batch_sizeK2", ")", "\n", "num_AM_batch", "=", "int", "(", "self", ".", "multiG", ".", "num_align", "(", ")", "/", "self", ".", "batch_sizeA", ")", "\n", "\n", "\n", "if", "epoch", "<=", "1", ":", "\n", "            ", "print", "(", "'num_KG1_batch ='", ",", "num_A_batch", ")", "\n", "print", "(", "'num_KG2_batch ='", ",", "num_B_batch", ")", "\n", "print", "(", "'num_AM_batch ='", ",", "num_AM_batch", ")", "\n", "", "loss_KM", "=", "self", ".", "train1epoch_KM", "(", "sess", ",", "num_A_batch", ",", "num_B_batch", ",", "a2", ",", "lr", ",", "epoch", ")", "\n", "#keep only the last loss", "\n", "for", "i", "in", "range", "(", "AM_fold", ")", ":", "\n", "            ", "loss_AM", "=", "self", ".", "train1epoch_AM", "(", "sess", ",", "num_AM_batch", ",", "a1", ",", "a2", ",", "lr", ",", "epoch", ")", "\n", "", "return", "(", "loss_KM", ",", "loss_AM", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.trainer2.Trainer.train": [[233, 254], ["time.time", "range", "trainer2.Trainer.tf_parts._saver.save", "trainer2.Trainer.multiG.save", "print", "print", "trainer2.Trainer.train1epoch_associative", "print", "numpy.isnan", "numpy.isnan", "print", "trainer2.Trainer.tf_parts._saver.save", "trainer2.Trainer.multiG.save", "print", "time.time"], "methods", ["home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.multiG.multiG.save", "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.multiG.multiG.save", "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.trainer2.Trainer.train1epoch_associative", "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.multiG.multiG.save", "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.multiG.multiG.save"], ["", "def", "train", "(", "self", ",", "epochs", "=", "20", ",", "save_every_epoch", "=", "10", ",", "lr", "=", "0.001", ",", "a1", "=", "0.1", ",", "a2", "=", "0.05", ",", "m1", "=", "0.5", ",", "m2", "=", "1.0", ",", "AM_fold", "=", "1", ",", "half_loss_per_epoch", "=", "-", "1", ")", ":", "\n", "#sess = tf.Session()", "\n", "#sess.run(tf.initialize_all_variables())", "\n", "        ", "self", ".", "tf_parts", ".", "_m1", "=", "m1", "\n", "t0", "=", "time", ".", "time", "(", ")", "\n", "for", "epoch", "in", "range", "(", "epochs", ")", ":", "\n", "            ", "if", "half_loss_per_epoch", ">", "0", "and", "(", "epoch", "+", "1", ")", "%", "half_loss_per_epoch", "==", "0", ":", "\n", "                ", "lr", "/=", "2.", "\n", "", "epoch_lossKM", ",", "epoch_lossAM", "=", "self", ".", "train1epoch_associative", "(", "self", ".", "sess", ",", "lr", ",", "a1", ",", "a2", ",", "epoch", ",", "AM_fold", ")", "\n", "print", "(", "\"Time use: %d\"", "%", "(", "time", ".", "time", "(", ")", "-", "t0", ")", ")", "\n", "if", "np", ".", "isnan", "(", "epoch_lossKM", ")", "or", "np", ".", "isnan", "(", "epoch_lossAM", ")", ":", "\n", "                ", "print", "(", "\"Training collapsed.\"", ")", "\n", "return", "\n", "", "if", "(", "epoch", "+", "1", ")", "%", "save_every_epoch", "==", "0", ":", "\n", "                ", "this_save_path", "=", "self", ".", "tf_parts", ".", "_saver", ".", "save", "(", "self", ".", "sess", ",", "self", ".", "save_path", ")", "\n", "self", ".", "multiG", ".", "save", "(", "self", ".", "multiG_save_path", ")", "\n", "print", "(", "\"MTransE saved in file: %s. Multi-graph saved in file: %s\"", "%", "(", "this_save_path", ",", "self", ".", "multiG_save_path", ")", ")", "\n", "", "", "this_save_path", "=", "self", ".", "tf_parts", ".", "_saver", ".", "save", "(", "self", ".", "sess", ",", "self", ".", "save_path", ")", "\n", "self", ".", "multiG", ".", "save", "(", "self", ".", "multiG_save_path", ")", "\n", "print", "(", "\"MTransE saved in file: %s. Multi-graph saved in file: %s\"", "%", "(", "this_save_path", ",", "self", ".", "multiG_save_path", ")", ")", "\n", "print", "(", "\"Done\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.trainer2.load_tfparts": [[256, 272], ["model2.TFParts", "tensorflow.Session", "model.TFParts._saver.restore", "multiG.multiG.KG1.num_rels", "multiG.multiG.KG1.num_ents", "multiG.multiG.KG2.num_rels", "multiG.multiG.KG2.num_ents"], "function", ["home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.num_rels", "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.num_ents", "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.num_rels", "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.KG.KG.num_ents"], ["", "", "def", "load_tfparts", "(", "multiG", ",", "method", "=", "'transe'", ",", "bridge", "=", "'CG-one'", ",", "dim1", "=", "300", ",", "dim2", "=", "100", ",", "batch_sizeK1", "=", "1024", ",", "batch_sizeK", "=", "1024", ",", "batch_sizeA", "=", "64", ",", "\n", "save_path", "=", "'this-model.ckpt'", ",", "L1", "=", "False", ")", ":", "\n", "    ", "tf_parts", "=", "model", ".", "TFParts", "(", "num_rels1", "=", "multiG", ".", "KG1", ".", "num_rels", "(", ")", ",", "\n", "num_ents1", "=", "multiG", ".", "KG1", ".", "num_ents", "(", ")", ",", "\n", "num_rels2", "=", "multiG", ".", "KG2", ".", "num_rels", "(", ")", ",", "\n", "num_ents2", "=", "multiG", ".", "KG2", ".", "num_ents", "(", ")", ",", "\n", "method", "=", "self", ".", "method", ",", "\n", "bridge", "=", "self", ".", "bridge", ",", "\n", "dim1", "=", "dim1", ",", "\n", "dim2", "=", "dim2", ",", "\n", "batch_sizeK", "=", "batch_sizeK", ",", "\n", "batch_sizeA", "=", "batch_sizeA", ",", "\n", "L1", "=", "L1", ")", "\n", "#with tf.Session() as sess:", "\n", "sess", "=", "tf", ".", "Session", "(", ")", "\n", "tf_parts", ".", "_saver", ".", "restore", "(", "sess", ",", "save_path", ")", "", "", ""]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.model2.TFParts.__init__": [[34, 56], ["model2.TFParts.build", "print", "print", "str", "str"], "methods", ["home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.model2.TFParts.build"], ["def", "__init__", "(", "self", ",", "num_rels1", ",", "num_ents1", ",", "num_rels2", ",", "num_ents2", ",", "method", "=", "'distmult'", ",", "bridge", "=", "'CG'", ",", "dim1", "=", "300", ",", "dim2", "=", "100", ",", "batch_sizeK1", "=", "512", ",", "batch_sizeK2", "=", "512", ",", "batch_sizeA", "=", "256", ",", "L1", "=", "False", ")", ":", "\n", "        ", "self", ".", "_num_relsA", "=", "num_rels1", "\n", "self", ".", "_num_entsA", "=", "num_ents1", "\n", "self", ".", "_num_relsB", "=", "num_rels2", "\n", "self", ".", "_num_entsB", "=", "num_ents2", "\n", "self", ".", "method", "=", "method", "\n", "self", ".", "bridge", "=", "bridge", "\n", "self", ".", "_dim1", "=", "dim1", "\n", "self", ".", "_dim2", "=", "dim2", "\n", "self", ".", "_hidden_dim", "=", "hid_dim", "=", "50", "\n", "self", ".", "_batch_sizeK1", "=", "batch_sizeK1", "\n", "self", ".", "_batch_sizeK2", "=", "batch_sizeK2", "\n", "self", ".", "_batch_sizeA", "=", "batch_sizeA", "\n", "self", ".", "_epoch_loss", "=", "0", "\n", "# margins", "\n", "self", ".", "_m1", "=", "0.5", "\n", "self", ".", "_m2", "=", "1.0", "\n", "self", ".", "_mA", "=", "0.5", "\n", "self", ".", "L1", "=", "L1", "\n", "self", ".", "build", "(", ")", "\n", "print", "(", "\"TFparts build up! Embedding method: [\"", "+", "self", ".", "method", "+", "\"]. Bridge method:[\"", "+", "self", ".", "bridge", "+", "\"]\"", ")", "\n", "print", "(", "\"Margin Paramter: [m1] \"", "+", "str", "(", "self", ".", "_m1", ")", "+", "\" [m2] \"", "+", "str", "(", "self", ".", "_m2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.model2.TFParts.dim": [[57, 60], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "dim", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "_dim1", ",", "self", ".", "_dim2", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.model2.TFParts.build": [[61, 332], ["tensorflow.reset_default_graph", "tensorflow.variable_scope", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.summary.histogram", "tensorflow.nn.l2_normalize", "tensorflow.nn.l2_normalize", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.l2_normalize", "tensorflow.nn.l2_normalize", "tensorflow.nn.embedding_lookup", "tensorflow.nn.l2_normalize", "tensorflow.nn.l2_normalize", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.l2_normalize", "tensorflow.nn.l2_normalize", "tensorflow.nn.embedding_lookup", "tensorflow.nn.l2_normalize", "tensorflow.nn.l2_normalize", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.placeholder", "tensorflow.nn.l2_normalize", "tensorflow.nn.l2_normalize", "tensorflow.nn.l2_normalize", "tensorflow.nn.l2_normalize", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.summary.scalar", "tensorflow.placeholder", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.summary.merge_all", "tensorflow.train.Saver", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.subtract", "tensorflow.subtract", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.subtract", "tensorflow.subtract", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.nn.embedding_lookup", "tensorflow.subtract", "tensorflow.subtract", "tensorflow.add", "tensorflow.add", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.add", "tensorflow.add", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "model2.orthogonal_initializer", "model2.orthogonal_initializer", "model2.orthogonal_initializer", "tensorflow.subtract", "tensorflow.subtract", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.multiply", "tensorflow.multiply", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "ValueError", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.multiply", "tensorflow.multiply", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "ValueError", "tensorflow.nn.l2_normalize", "tensorflow.nn.l2_normalize", "tensorflow.subtract", "tensorflow.subtract", "tensorflow.maximum", "tensorflow.maximum", "tensorflow.maximum", "tensorflow.maximum", "tensorflow.multiply", "tensorflow.multiply", "tensorflow.maximum", "tensorflow.multiply", "tensorflow.multiply", "tensorflow.reduce_sum", "tensorflow.maximum", "tensorflow.maximum", "tensorflow.multiply", "tensorflow.multiply", "tensorflow.maximum", "tensorflow.multiply", "tensorflow.multiply", "tensorflow.reduce_sum", "tensorflow.add", "tensorflow.add", "tensorflow.nn.l2_normalize", "tensorflow.nn.l2_normalize", "tensorflow.subtract", "tensorflow.subtract", "ValueError", "tensorflow.subtract", "tensorflow.subtract", "tensorflow.subtract", "tensorflow.subtract", "tensorflow.add", "utils.circular_correlation", "utils.circular_correlation", "tensorflow.maximum", "tensorflow.subtract", "tensorflow.subtract", "tensorflow.add", "utils.circular_correlation", "utils.circular_correlation", "tensorflow.maximum", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.tanh", "tensorflow.tanh", "tensorflow.nn.l2_normalize", "tensorflow.nn.l2_normalize", "tensorflow.nn.l2_normalize", "tensorflow.nn.l2_normalize", "tensorflow.add", "tensorflow.reduce_sum", "tensorflow.add", "tensorflow.sqrt", "tensorflow.add", "tensorflow.reduce_sum", "tensorflow.add", "tensorflow.sqrt", "tensorflow.subtract", "tensorflow.add", "tensorflow.add", "tensorflow.reduce_sum", "tensorflow.add", "tensorflow.sqrt", "tensorflow.subtract", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.tanh", "tensorflow.tanh", "tensorflow.tanh", "tensorflow.tanh", "tensorflow.reduce_sum", "tensorflow.abs", "tensorflow.sqrt", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.abs", "tensorflow.sqrt", "tensorflow.reduce_sum", "tensorflow.subtract", "tensorflow.reduce_sum", "tensorflow.abs", "tensorflow.sqrt", "tensorflow.reduce_sum", "tensorflow.subtract", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.add", "tensorflow.abs", "tensorflow.reduce_sum", "tensorflow.square", "tensorflow.abs", "tensorflow.reduce_sum", "tensorflow.square", "tensorflow.abs", "tensorflow.reduce_sum", "tensorflow.square", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.matmul", "tensorflow.square", "tensorflow.square", "tensorflow.square"], "methods", ["home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.model2.orthogonal_initializer", "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.model2.orthogonal_initializer", "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.model2.orthogonal_initializer", "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.utils.circular_correlation", "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.utils.circular_correlation", "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.utils.circular_correlation", "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.utils.circular_correlation"], ["", "def", "build", "(", "self", ")", ":", "\n", "        ", "tf", ".", "reset_default_graph", "(", ")", "\n", "\n", "with", "tf", ".", "variable_scope", "(", "\"graph\"", ")", ":", "\n", "# Variables (matrix of embeddings/transformations)", "\n", "# KG1", "\n", "            ", "self", ".", "_ht1", "=", "ht1", "=", "tf", ".", "get_variable", "(", "\n", "name", "=", "'ht1'", ",", "# for t AND h", "\n", "shape", "=", "[", "self", ".", "_num_entsA", ",", "self", ".", "_dim1", "]", ",", "\n", "dtype", "=", "tf", ".", "float32", ")", "\n", "self", ".", "_r1", "=", "r1", "=", "tf", ".", "get_variable", "(", "\n", "name", "=", "'r1'", ",", "\n", "shape", "=", "[", "self", ".", "_num_relsA", ",", "self", ".", "_dim1", "]", ",", "\n", "dtype", "=", "tf", ".", "float32", ")", "\n", "# KG2", "\n", "self", ".", "_ht2", "=", "ht2", "=", "tf", ".", "get_variable", "(", "\n", "name", "=", "'ht2'", ",", "# for t AND h", "\n", "shape", "=", "[", "self", ".", "_num_entsB", ",", "self", ".", "_dim2", "]", ",", "\n", "dtype", "=", "tf", ".", "float32", ")", "\n", "self", ".", "_r2", "=", "r2", "=", "tf", ".", "get_variable", "(", "\n", "name", "=", "'r2'", ",", "\n", "shape", "=", "[", "self", ".", "_num_relsB", ",", "self", ".", "_dim2", "]", ",", "\n", "dtype", "=", "tf", ".", "float32", ")", "\n", "\n", "tf", ".", "summary", ".", "histogram", "(", "\"ht1\"", ",", "ht1", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "\"ht2\"", ",", "ht2", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "\"r1\"", ",", "r1", ")", "\n", "tf", ".", "summary", ".", "histogram", "(", "\"r2\"", ",", "r2", ")", "\n", "\n", "self", ".", "_ht1_norm", "=", "tf", ".", "nn", ".", "l2_normalize", "(", "ht1", ",", "1", ")", "\n", "self", ".", "_ht2_norm", "=", "tf", ".", "nn", ".", "l2_normalize", "(", "ht2", ",", "1", ")", "\n", "\n", "######################## Graph A Loss #######################", "\n", "# Language A KM loss : [|| h + r - t ||_2 + m1 - || h + r - t ||_2]+    here [.]+ means max (. , 0)", "\n", "self", ".", "_A_h_index", "=", "A_h_index", "=", "tf", ".", "placeholder", "(", "\n", "dtype", "=", "tf", ".", "int64", ",", "\n", "shape", "=", "[", "self", ".", "_batch_sizeK1", "]", ",", "\n", "name", "=", "'A_h_index'", ")", "\n", "self", ".", "_A_r_index", "=", "A_r_index", "=", "tf", ".", "placeholder", "(", "\n", "dtype", "=", "tf", ".", "int64", ",", "\n", "shape", "=", "[", "self", ".", "_batch_sizeK1", "]", ",", "\n", "name", "=", "'A_r_index'", ")", "\n", "self", ".", "_A_t_index", "=", "A_t_index", "=", "tf", ".", "placeholder", "(", "\n", "dtype", "=", "tf", ".", "int64", ",", "\n", "shape", "=", "[", "self", ".", "_batch_sizeK1", "]", ",", "\n", "name", "=", "'A_t_index'", ")", "\n", "self", ".", "_A_hn_index", "=", "A_hn_index", "=", "tf", ".", "placeholder", "(", "\n", "dtype", "=", "tf", ".", "int64", ",", "\n", "shape", "=", "[", "self", ".", "_batch_sizeK1", "]", ",", "\n", "name", "=", "'A_hn_index'", ")", "\n", "self", ".", "_A_tn_index", "=", "A_tn_index", "=", "tf", ".", "placeholder", "(", "\n", "dtype", "=", "tf", ".", "int64", ",", "\n", "shape", "=", "[", "self", ".", "_batch_sizeK1", "]", ",", "\n", "name", "=", "'A_tn_index'", ")", "\n", "'''\n            A_loss_matrix = tf.subtract(\n                tf.add(\n                    tf.batch_matmul(A_h_ent_batch, tf.reshape(A_mat_h_batch, [-1, self.dim, self.dim])),\n                    A_rel_batch),\n                tf.batch_matmul(A_t_ent_batch, tf.reshape(A_mat_h_batch, [-1, self.dim, self.dim]))\n            )'''", "\n", "\n", "A_h_ent_batch", "=", "tf", ".", "nn", ".", "l2_normalize", "(", "tf", ".", "nn", ".", "embedding_lookup", "(", "ht1", ",", "A_h_index", ")", ",", "1", ")", "\n", "A_t_ent_batch", "=", "tf", ".", "nn", ".", "l2_normalize", "(", "tf", ".", "nn", ".", "embedding_lookup", "(", "ht1", ",", "A_t_index", ")", ",", "1", ")", "\n", "A_rel_batch", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "r1", ",", "A_r_index", ")", "\n", "\n", "A_hn_ent_batch", "=", "tf", ".", "nn", ".", "l2_normalize", "(", "tf", ".", "nn", ".", "embedding_lookup", "(", "ht1", ",", "A_hn_index", ")", ",", "1", ")", "\n", "A_tn_ent_batch", "=", "tf", ".", "nn", ".", "l2_normalize", "(", "tf", ".", "nn", ".", "embedding_lookup", "(", "ht1", ",", "A_tn_index", ")", ",", "1", ")", "\n", "\n", "if", "self", ".", "method", "==", "'transe'", ":", "\n", "##### TransE score", "\n", "# This stores h + r - t", "\n", "                ", "A_loss_matrix", "=", "tf", ".", "subtract", "(", "tf", ".", "add", "(", "A_h_ent_batch", ",", "A_rel_batch", ")", ",", "A_t_ent_batch", ")", "\n", "# This stores h' + r - t' for negative samples", "\n", "A_neg_matrix", "=", "tf", ".", "subtract", "(", "tf", ".", "add", "(", "A_hn_ent_batch", ",", "A_rel_batch", ")", ",", "A_tn_ent_batch", ")", "\n", "if", "self", ".", "L1", ":", "\n", "                    ", "self", ".", "_A_loss", "=", "A_loss", "=", "tf", ".", "reduce_sum", "(", "\n", "tf", ".", "maximum", "(", "\n", "tf", ".", "subtract", "(", "tf", ".", "add", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "abs", "(", "A_loss_matrix", ")", ",", "1", ")", ",", "self", ".", "_m1", ")", ",", "\n", "tf", ".", "reduce_sum", "(", "tf", ".", "abs", "(", "A_neg_matrix", ")", ",", "1", ")", ")", ",", "\n", "0.", ")", "\n", ")", "/", "self", ".", "_batch_sizeK1", "\n", "", "else", ":", "\n", "                    ", "self", ".", "_A_loss", "=", "A_loss", "=", "tf", ".", "reduce_sum", "(", "\n", "tf", ".", "maximum", "(", "\n", "tf", ".", "subtract", "(", "tf", ".", "add", "(", "tf", ".", "sqrt", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "A_loss_matrix", ")", ",", "1", ")", ")", ",", "self", ".", "_m1", ")", ",", "\n", "tf", ".", "sqrt", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "A_neg_matrix", ")", ",", "1", ")", ")", ")", ",", "\n", "0.", ")", "\n", ")", "/", "self", ".", "_batch_sizeK1", "\n", "\n", "", "", "elif", "self", ".", "method", "==", "'distmult'", ":", "\n", "##### DistMult score", "\n", "                ", "A_loss_matrix", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "multiply", "(", "A_rel_batch", ",", "tf", ".", "multiply", "(", "A_h_ent_batch", ",", "A_t_ent_batch", ")", ")", ",", "1", ")", "\n", "A_neg_matrix", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "multiply", "(", "A_rel_batch", ",", "tf", ".", "multiply", "(", "A_hn_ent_batch", ",", "A_tn_ent_batch", ")", ")", ",", "1", ")", "\n", "\n", "self", ".", "_A_loss", "=", "A_loss", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "maximum", "(", "tf", ".", "add", "(", "tf", ".", "subtract", "(", "A_neg_matrix", ",", "A_loss_matrix", ")", ",", "self", ".", "_m1", ")", ",", "0.", ")", ")", "/", "self", ".", "_batch_sizeK1", "\n", "\n", "", "elif", "self", ".", "method", "==", "'hole'", ":", "\n", "##### HolE score", "\n", "                ", "A_loss_matrix", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "multiply", "(", "A_rel_batch", ",", "circular_correlation", "(", "A_h_ent_batch", ",", "A_t_ent_batch", ")", ")", ",", "1", ")", "\n", "A_neg_matrix", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "multiply", "(", "A_rel_batch", ",", "circular_correlation", "(", "A_hn_ent_batch", ",", "A_tn_ent_batch", ")", ")", ",", "1", ")", "\n", "\n", "self", ".", "_A_loss", "=", "A_loss", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "maximum", "(", "tf", ".", "add", "(", "tf", ".", "subtract", "(", "A_neg_matrix", ",", "A_loss_matrix", ")", ",", "self", ".", "_m1", ")", ",", "0.", ")", ")", "/", "self", ".", "_batch_sizeK1", "\n", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "'Embedding method not valid!'", ")", "\n", "\n", "\n", "######################## Graph B Loss #######################", "\n", "# Language B KM loss : [|| h + r - t ||_2 + m1 - || h + r - t ||_2]+    here [.]+ means max (. , 0)", "\n", "", "self", ".", "_B_h_index", "=", "B_h_index", "=", "tf", ".", "placeholder", "(", "\n", "dtype", "=", "tf", ".", "int64", ",", "\n", "shape", "=", "[", "self", ".", "_batch_sizeK2", "]", ",", "\n", "name", "=", "'B_h_index'", ")", "\n", "self", ".", "_B_r_index", "=", "B_r_index", "=", "tf", ".", "placeholder", "(", "\n", "dtype", "=", "tf", ".", "int64", ",", "\n", "shape", "=", "[", "self", ".", "_batch_sizeK2", "]", ",", "\n", "name", "=", "'B_r_index'", ")", "\n", "self", ".", "_B_t_index", "=", "B_t_index", "=", "tf", ".", "placeholder", "(", "\n", "dtype", "=", "tf", ".", "int64", ",", "\n", "shape", "=", "[", "self", ".", "_batch_sizeK2", "]", ",", "\n", "name", "=", "'B_t_index'", ")", "\n", "self", ".", "_B_hn_index", "=", "B_hn_index", "=", "tf", ".", "placeholder", "(", "\n", "dtype", "=", "tf", ".", "int64", ",", "\n", "shape", "=", "[", "self", ".", "_batch_sizeK2", "]", ",", "\n", "name", "=", "'B_hn_index'", ")", "\n", "self", ".", "_B_tn_index", "=", "B_tn_index", "=", "tf", ".", "placeholder", "(", "\n", "dtype", "=", "tf", ".", "int64", ",", "\n", "shape", "=", "[", "self", ".", "_batch_sizeK2", "]", ",", "\n", "name", "=", "'B_tn_index'", ")", "\n", "\n", "B_h_ent_batch", "=", "tf", ".", "nn", ".", "l2_normalize", "(", "tf", ".", "nn", ".", "embedding_lookup", "(", "ht2", ",", "B_h_index", ")", ",", "1", ")", "\n", "B_t_ent_batch", "=", "tf", ".", "nn", ".", "l2_normalize", "(", "tf", ".", "nn", ".", "embedding_lookup", "(", "ht2", ",", "B_t_index", ")", ",", "1", ")", "\n", "B_rel_batch", "=", "tf", ".", "nn", ".", "embedding_lookup", "(", "r2", ",", "B_r_index", ")", "\n", "\n", "B_hn_ent_batch", "=", "tf", ".", "nn", ".", "l2_normalize", "(", "tf", ".", "nn", ".", "embedding_lookup", "(", "ht2", ",", "B_hn_index", ")", ",", "1", ")", "\n", "B_tn_ent_batch", "=", "tf", ".", "nn", ".", "l2_normalize", "(", "tf", ".", "nn", ".", "embedding_lookup", "(", "ht2", ",", "B_tn_index", ")", ",", "1", ")", "\n", "\n", "\n", "if", "self", ".", "method", "==", "'transe'", ":", "\n", "#### TransE Score", "\n", "# This stores h + r - t", "\n", "                ", "B_loss_matrix", "=", "tf", ".", "subtract", "(", "tf", ".", "add", "(", "B_h_ent_batch", ",", "B_rel_batch", ")", ",", "B_t_ent_batch", ")", "\n", "# This stores h' + r - t' for negative samples", "\n", "B_neg_matrix", "=", "tf", ".", "subtract", "(", "tf", ".", "add", "(", "B_hn_ent_batch", ",", "B_rel_batch", ")", ",", "B_tn_ent_batch", ")", "\n", "if", "self", ".", "L1", ":", "\n", "                    ", "self", ".", "_B_loss", "=", "B_loss", "=", "tf", ".", "reduce_sum", "(", "\n", "tf", ".", "maximum", "(", "\n", "tf", ".", "subtract", "(", "tf", ".", "add", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "abs", "(", "B_loss_matrix", ")", ",", "1", ")", ",", "self", ".", "_m2", ")", ",", "\n", "tf", ".", "reduce_sum", "(", "tf", ".", "abs", "(", "B_neg_matrix", ")", ",", "1", ")", ")", ",", "\n", "0.", ")", "\n", ")", "/", "self", ".", "_batch_sizeK2", "\n", "", "else", ":", "\n", "                    ", "self", ".", "_B_loss", "=", "B_loss", "=", "tf", ".", "reduce_sum", "(", "\n", "tf", ".", "maximum", "(", "\n", "tf", ".", "subtract", "(", "tf", ".", "add", "(", "tf", ".", "sqrt", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "B_loss_matrix", ")", ",", "1", ")", ")", ",", "self", ".", "_m2", ")", ",", "\n", "tf", ".", "sqrt", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "B_neg_matrix", ")", ",", "1", ")", ")", ")", ",", "\n", "0.", ")", "\n", ")", "/", "self", ".", "_batch_sizeK2", "\n", "\n", "", "", "elif", "self", ".", "method", "==", "'distmult'", ":", "\n", "##### DistMult score", "\n", "                ", "B_loss_matrix", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "multiply", "(", "B_rel_batch", ",", "tf", ".", "multiply", "(", "B_h_ent_batch", ",", "B_t_ent_batch", ")", ")", ",", "1", ")", "\n", "B_neg_matrix", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "multiply", "(", "B_rel_batch", ",", "tf", ".", "multiply", "(", "B_hn_ent_batch", ",", "B_tn_ent_batch", ")", ")", ",", "1", ")", "\n", "\n", "self", ".", "_B_loss", "=", "B_loss", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "maximum", "(", "tf", ".", "add", "(", "tf", ".", "subtract", "(", "B_neg_matrix", ",", "B_loss_matrix", ")", ",", "self", ".", "_m2", ")", ",", "0.", ")", ")", "/", "self", ".", "_batch_sizeK2", "\n", "", "elif", "self", ".", "method", "==", "'hole'", ":", "\n", "##### HolE score", "\n", "                ", "B_loss_matrix", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "multiply", "(", "B_rel_batch", ",", "circular_correlation", "(", "B_h_ent_batch", ",", "B_t_ent_batch", ")", ")", ",", "1", ")", "\n", "B_neg_matrix", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "multiply", "(", "B_rel_batch", ",", "circular_correlation", "(", "B_hn_ent_batch", ",", "B_tn_ent_batch", ")", ")", ",", "1", ")", "\n", "\n", "self", ".", "_B_loss", "=", "B_loss", "=", "tf", ".", "reduce_sum", "(", "tf", ".", "maximum", "(", "tf", ".", "add", "(", "tf", ".", "subtract", "(", "B_neg_matrix", ",", "B_loss_matrix", ")", ",", "self", ".", "_m2", ")", ",", "0.", ")", ")", "/", "self", ".", "_batch_sizeK2", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "'Embedding method not valid!'", ")", "\n", "\n", "\n", "######################## Type Loss #######################", "\n", "", "self", ".", "_AM_index1", "=", "AM_index1", "=", "tf", ".", "placeholder", "(", "\n", "dtype", "=", "tf", ".", "int64", ",", "\n", "shape", "=", "[", "self", ".", "_batch_sizeA", "]", ",", "\n", "name", "=", "'AM_index1'", ")", "\n", "self", ".", "_AM_index2", "=", "AM_index2", "=", "tf", ".", "placeholder", "(", "\n", "dtype", "=", "tf", ".", "int64", ",", "\n", "shape", "=", "[", "self", ".", "_batch_sizeA", "]", ",", "\n", "name", "=", "'AM_index2'", ")", "\n", "\n", "self", ".", "_AM_nindex1", "=", "AM_nindex1", "=", "tf", ".", "placeholder", "(", "\n", "dtype", "=", "tf", ".", "int64", ",", "\n", "shape", "=", "[", "self", ".", "_batch_sizeA", "]", ",", "\n", "name", "=", "'AM_nindex1'", ")", "\n", "self", ".", "_AM_nindex2", "=", "AM_nindex2", "=", "tf", ".", "placeholder", "(", "\n", "dtype", "=", "tf", ".", "int64", ",", "\n", "shape", "=", "[", "self", ".", "_batch_sizeA", "]", ",", "\n", "name", "=", "'AM_nindex2'", ")", "\n", "\n", "AM_ent1_batch", "=", "tf", ".", "nn", ".", "l2_normalize", "(", "tf", ".", "nn", ".", "embedding_lookup", "(", "ht1", ",", "AM_index1", ")", ",", "1", ")", "\n", "AM_ent2_batch", "=", "tf", ".", "nn", ".", "l2_normalize", "(", "tf", ".", "nn", ".", "embedding_lookup", "(", "ht2", ",", "AM_index2", ")", ",", "1", ")", "\n", "AM_ent1_nbatch", "=", "tf", ".", "nn", ".", "l2_normalize", "(", "tf", ".", "nn", ".", "embedding_lookup", "(", "ht1", ",", "AM_nindex1", ")", ",", "1", ")", "\n", "AM_ent2_nbatch", "=", "tf", ".", "nn", ".", "l2_normalize", "(", "tf", ".", "nn", ".", "embedding_lookup", "(", "ht2", ",", "AM_nindex2", ")", ",", "1", ")", "\n", "\n", "# Affine map", "\n", "self", ".", "_M", "=", "M", "=", "tf", ".", "get_variable", "(", "name", "=", "'M'", ",", "shape", "=", "[", "self", ".", "_dim1", ",", "self", ".", "_dim2", "]", ",", "initializer", "=", "orthogonal_initializer", "(", ")", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "self", ".", "_b", "=", "bias", "=", "tf", ".", "get_variable", "(", "name", "=", "'b'", ",", "shape", "=", "[", "self", ".", "_dim2", "]", ",", "initializer", "=", "tf", ".", "truncated_normal_initializer", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "self", ".", "_Mc", "=", "Mc", "=", "tf", ".", "get_variable", "(", "name", "=", "'Mc'", ",", "shape", "=", "[", "self", ".", "_dim2", ",", "self", ".", "_hidden_dim", "]", ",", "initializer", "=", "orthogonal_initializer", "(", ")", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "self", ".", "_bc", "=", "b_c", "=", "tf", ".", "get_variable", "(", "name", "=", "'bc'", ",", "shape", "=", "[", "self", ".", "_hidden_dim", "]", ",", "initializer", "=", "tf", ".", "truncated_normal_initializer", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "self", ".", "_Me", "=", "Me", "=", "tf", ".", "get_variable", "(", "name", "=", "'Me'", ",", "shape", "=", "[", "self", ".", "_dim1", ",", "self", ".", "_hidden_dim", "]", ",", "initializer", "=", "orthogonal_initializer", "(", ")", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "self", ".", "_be", "=", "b_e", "=", "tf", ".", "get_variable", "(", "name", "=", "'be'", ",", "shape", "=", "[", "self", ".", "_hidden_dim", "]", ",", "initializer", "=", "tf", ".", "truncated_normal_initializer", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "\n", "if", "self", ".", "bridge", "==", "'CG'", ":", "\n", "                ", "AM_pos_loss_matrix", "=", "tf", ".", "subtract", "(", "AM_ent1_batch", ",", "AM_ent2_batch", ")", "\n", "AM_neg_loss_matrix", "=", "tf", ".", "subtract", "(", "AM_ent1_nbatch", ",", "AM_ent2_nbatch", ")", "\n", "", "elif", "self", ".", "bridge", "==", "'CMP-linear'", ":", "\n", "# c - (W * e + b)", "\n", "#AM_pos_loss_matrix = tf.subtract( tf.add(tf.matmul(AM_ent1_batch, M),bias), AM_ent2_batch )", "\n", "                ", "AM_pos_loss_matrix", "=", "tf", ".", "subtract", "(", "tf", ".", "nn", ".", "l2_normalize", "(", "tf", ".", "add", "(", "tf", ".", "matmul", "(", "AM_ent1_batch", ",", "M", ")", ",", "bias", ")", ",", "1", ")", ",", "AM_ent2_batch", ")", "\n", "AM_neg_loss_matrix", "=", "tf", ".", "subtract", "(", "tf", ".", "nn", ".", "l2_normalize", "(", "tf", ".", "add", "(", "tf", ".", "matmul", "(", "AM_ent1_nbatch", ",", "M", ")", ",", "bias", ")", ",", "1", ")", ",", "AM_ent2_nbatch", ")", "\n", "", "elif", "self", ".", "bridge", "==", "'CMP-single'", ":", "\n", "# c - \\sigma( W * e + b )", "\n", "#AM_pos_loss_matrix = tf.subtract( tf.tanh(tf.add(tf.matmul(AM_ent1_batch, M),bias)), AM_ent2_batch )", "\n", "                ", "AM_pos_loss_matrix", "=", "tf", ".", "subtract", "(", "tf", ".", "nn", ".", "l2_normalize", "(", "tf", ".", "tanh", "(", "tf", ".", "add", "(", "tf", ".", "matmul", "(", "AM_ent1_batch", ",", "M", ")", ",", "bias", ")", ")", ",", "1", ")", ",", "AM_ent2_batch", ")", "\n", "AM_neg_loss_matrix", "=", "tf", ".", "subtract", "(", "tf", ".", "nn", ".", "l2_normalize", "(", "tf", ".", "tanh", "(", "tf", ".", "add", "(", "tf", ".", "matmul", "(", "AM_ent1_nbatch", ",", "M", ")", ",", "bias", ")", ")", ",", "1", ")", ",", "AM_ent2_nbatch", ")", "\n", "", "elif", "self", ".", "bridge", "==", "'CMP-double'", ":", "\n", "# \\sigma (W1 * c + bias1) - \\sigma(W2 * c + bias1) --> More parameters to be defined", "\n", "#AM_pos_loss_matrix = tf.subtract( tf.add(tf.matmul(AM_ent1_batch, Me), b_e), tf.add(tf.matmul(AM_ent2_batch, Mc), b_c))", "\n", "#AM_pos_loss_matrix = tf.subtract( tf.nn.l2_normalize(tf.add(tf.matmul(AM_ent1_batch, Me), b_e),1), tf.nn.l2_normalize(tf.add(tf.matmul(AM_ent2_batch, Mc), b_c),1))", "\n", "                ", "AM_pos_loss_matrix", "=", "tf", ".", "subtract", "(", "tf", ".", "nn", ".", "l2_normalize", "(", "tf", ".", "tanh", "(", "tf", ".", "add", "(", "tf", ".", "matmul", "(", "AM_ent1_batch", ",", "Me", ")", ",", "b_e", ")", ")", ",", "1", ")", ",", "tf", ".", "nn", ".", "l2_normalize", "(", "tf", ".", "tanh", "(", "tf", ".", "add", "(", "tf", ".", "matmul", "(", "AM_ent2_batch", ",", "Mc", ")", ",", "b_c", ")", ")", ",", "1", ")", ")", "\n", "AM_neg_loss_matrix", "=", "tf", ".", "subtract", "(", "tf", ".", "nn", ".", "l2_normalize", "(", "tf", ".", "tanh", "(", "tf", ".", "add", "(", "tf", ".", "matmul", "(", "AM_ent1_nbatch", ",", "Me", ")", ",", "b_e", ")", ")", ",", "1", ")", ",", "tf", ".", "nn", ".", "l2_normalize", "(", "tf", ".", "tanh", "(", "tf", ".", "add", "(", "tf", ".", "matmul", "(", "AM_ent2_nbatch", ",", "Mc", ")", ",", "b_c", ")", ")", ",", "1", ")", ")", "\n", "", "else", ":", "\n", "                ", "raise", "ValueError", "(", "'Bridge method not valid!'", ")", "\n", "\n", "", "'''\n            if self.L1:\n                self._AM_loss = AM_loss = tf.reduce_sum(\n                tf.reduce_sum(tf.abs(AM_loss_matrix),1)\n                ) / self._batch_sizeA\n            else:\n                self._AM_loss = AM_loss = tf.reduce_sum(\n                tf.sqrt(tf.reduce_sum(tf.square(AM_loss_matrix), 1)\n                )\n                ) / self._batch_sizeA\n            '''", "\n", "# hinge loss for AM pos and neg batch", "\n", "\n", "# Hinge Loss for AM", "\n", "if", "self", ".", "L1", ":", "\n", "                ", "self", ".", "_AM_loss", "=", "AM_loss", "=", "tf", ".", "reduce_sum", "(", "\n", "tf", ".", "maximum", "(", "\n", "tf", ".", "subtract", "(", "tf", ".", "add", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "abs", "(", "AM_pos_loss_matrix", ")", ",", "1", ")", ",", "self", ".", "_mA", ")", ",", "\n", "tf", ".", "reduce_sum", "(", "tf", ".", "abs", "(", "AM_neg_loss_matrix", ")", ",", "1", ")", ")", ",", "\n", "0.", ")", ")", "/", "self", ".", "_batch_sizeA", "\n", "", "else", ":", "\n", "                ", "self", ".", "_AM_loss", "=", "AM_loss", "=", "tf", ".", "reduce_sum", "(", "\n", "tf", ".", "maximum", "(", "\n", "tf", ".", "subtract", "(", "tf", ".", "add", "(", "tf", ".", "sqrt", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "AM_pos_loss_matrix", ")", ",", "1", ")", ")", ",", "self", ".", "_mA", ")", ",", "\n", "tf", ".", "sqrt", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "square", "(", "AM_neg_loss_matrix", ")", ",", "1", ")", ")", ")", ",", "\n", "0.", ")", ")", "/", "self", ".", "_batch_sizeA", "\n", "\n", "", "tf", ".", "summary", ".", "scalar", "(", "\"A_loss\"", ",", "A_loss", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "\"B_loss\"", ",", "B_loss", ")", "\n", "tf", ".", "summary", ".", "scalar", "(", "\"AM_loss\"", ",", "AM_loss", ")", "\n", "\n", "# Optimizer", "\n", "self", ".", "_lr", "=", "lr", "=", "tf", ".", "placeholder", "(", "tf", ".", "float32", ")", "\n", "self", ".", "_opt", "=", "opt", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "lr", ")", "#AdagradOptimizer(lr)#GradientDescentOptimizer(lr)", "\n", "self", ".", "_train_op_A", "=", "train_op_A", "=", "opt", ".", "minimize", "(", "A_loss", ")", "\n", "self", ".", "_train_op_B", "=", "train_op_B", "=", "opt", ".", "minimize", "(", "B_loss", ")", "\n", "self", ".", "_train_op_AM", "=", "train_op_AM", "=", "opt", ".", "minimize", "(", "AM_loss", ")", "\n", "\n", "# Saver", "\n", "self", ".", "summary_op", "=", "tf", ".", "summary", ".", "merge_all", "(", ")", "\n", "self", ".", "_saver", "=", "tf", ".", "train", ".", "Saver", "(", ")", "", "", "", "", ""]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.model2.orthogonal": [[16, 22], ["numpy.random.normal", "numpy.linalg.svd", "q.reshape", "numpy.prod"], "function", ["None"], ["def", "orthogonal", "(", "shape", ")", ":", "\n", "  ", "flat_shape", "=", "(", "shape", "[", "0", "]", ",", "np", ".", "prod", "(", "shape", "[", "1", ":", "]", ")", ")", "\n", "a", "=", "np", ".", "random", ".", "normal", "(", "0.0", ",", "1.0", ",", "flat_shape", ")", "\n", "u", ",", "_", ",", "v", "=", "np", ".", "linalg", ".", "svd", "(", "a", ",", "full_matrices", "=", "False", ")", "\n", "q", "=", "u", "if", "u", ".", "shape", "==", "flat_shape", "else", "v", "\n", "return", "q", ".", "reshape", "(", "shape", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.model2.orthogonal_initializer": [[23, 27], ["tensorflow.constant", "model2.orthogonal"], "function", ["home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.model2.orthogonal"], ["", "def", "orthogonal_initializer", "(", "scale", "=", "1.0", ",", "dtype", "=", "tf", ".", "float32", ")", ":", "\n", "  ", "def", "_initializer", "(", "shape", ",", "dtype", "=", "tf", ".", "float32", ",", "partition_info", "=", "None", ")", ":", "\n", "    ", "return", "tf", ".", "constant", "(", "orthogonal", "(", "shape", ")", "*", "scale", ",", "dtype", ")", "\n", "", "return", "_initializer", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.utils.circular_correlation": [[6, 8], ["tensorflow.real", "tensorflow.spectral.ifft", "tensorflow.multiply", "tensorflow.conj", "tensorflow.spectral.fft", "tensorflow.spectral.fft", "tensorflow.complex", "tensorflow.complex"], "function", ["None"], ["def", "circular_correlation", "(", "h", ",", "t", ")", ":", "\n", "    ", "return", "tf", ".", "real", "(", "tf", ".", "spectral", ".", "ifft", "(", "tf", ".", "multiply", "(", "tf", ".", "conj", "(", "tf", ".", "spectral", ".", "fft", "(", "tf", ".", "complex", "(", "h", ",", "0.", ")", ")", ")", ",", "tf", ".", "spectral", ".", "fft", "(", "tf", ".", "complex", "(", "t", ",", "0.", ")", ")", ")", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.utils.np_ccorr": [[9, 11], ["numpy.fft.ifft", "numpy.conj", "numpy.fft.fft", "numpy.fft.fft"], "function", ["None"], ["", "def", "np_ccorr", "(", "h", ",", "t", ")", ":", "\n", "    ", "return", "ifft", "(", "np", ".", "conj", "(", "fft", "(", "h", ")", ")", "*", "fft", "(", "t", ")", ")", ".", "real", "\n", "\n"]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.src.utils.make_hparam_string": [[12, 15], ["None"], "function", ["None"], ["", "def", "make_hparam_string", "(", "dim", ",", "onto_ratio", ",", "type_ratio", ",", "lr", ")", ":", "\n", "# input params: dim, onto_ratio, type_ratio, lr, ", "\n", "\t", "return", "\"dim_%s_onto_%s_type_%s_lr_%.0E\"", "%", "(", "dim", ",", "onto_ratio", ",", "type_ratio", ",", "lr", ")", "", "", ""]], "home.repos.pwc.inspect_result.JunhengH_joie-kdd19.run.training_model2_scai2.make_hparam_string": [[24, 27], ["None"], "function", ["None"], ["def", "make_hparam_string", "(", "method", ",", "bridge", ",", "dim1", ",", "dim2", ",", "a1", ",", "a2", ",", "m1", ",", "fold", ")", ":", "\n", "# input params: dim, onto_ratio, type_ratio, lr, ", "\n", "\t", "return", "\"%s_%s_dim1_%s_dim2_%s_a1_%s_a2_%s_m1_%s_fold_%s\"", "%", "(", "method", ",", "bridge", ",", "dim1", ",", "dim2", ",", "a1", ",", "a2", ",", "m1", ",", "fold", ")", "#update dim", "\n", "\n"]]}