{"home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.timer.__init__": [[20, 23], ["utility.timer.tic"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.timer.tic"], ["        ", "self", ".", "acc", "=", "0", "\n", "self", ".", "tic", "(", ")", "\n", "\n", "", "def", "tic", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.timer.tic": [[24, 26], ["time.time"], "methods", ["None"], ["        ", "self", ".", "t0", "=", "time", ".", "time", "(", ")", "\n", "\n", "", "def", "toc", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.timer.toc": [[27, 29], ["time.time"], "methods", ["None"], ["        ", "return", "time", ".", "time", "(", ")", "-", "self", ".", "t0", "\n", "\n", "", "def", "hold", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.timer.hold": [[30, 32], ["utility.timer.toc"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.timer.toc"], ["        ", "self", ".", "acc", "+=", "self", ".", "toc", "(", ")", "\n", "\n", "", "def", "release", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.timer.release": [[33, 38], ["None"], "methods", ["None"], ["        ", "ret", "=", "self", ".", "acc", "\n", "self", ".", "acc", "=", "0", "\n", "\n", "return", "ret", "\n", "\n", "", "def", "reset", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.timer.reset": [[39, 41], ["None"], "methods", ["None"], ["        ", "self", ".", "acc", "=", "0", "\n", "\n", "", "", "class", "checkpoint", "(", ")", ":", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.checkpoint.__init__": [[43, 78], ["torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "datetime.datetime.now().strftime", "utility.checkpoint.__init__._make_dir"], "methods", ["None"], ["        ", "self", ".", "args", "=", "args", "\n", "self", ".", "ok", "=", "True", "\n", "self", ".", "log", "=", "torch", ".", "Tensor", "(", ")", "\n", "now", "=", "datetime", ".", "datetime", ".", "now", "(", ")", ".", "strftime", "(", "'%Y-%m-%d-%H:%M:%S'", ")", "\n", "\n", "if", "args", ".", "load", "==", "'.'", ":", "\n", "            ", "if", "args", ".", "save", "==", "'.'", ":", "args", ".", "save", "=", "now", "\n", "self", ".", "dir", "=", "'../experiment/'", "+", "args", ".", "save", "\n", "", "else", ":", "\n", "            ", "self", ".", "dir", "=", "'../experiment/'", "+", "args", ".", "load", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "self", ".", "dir", ")", ":", "\n", "                ", "args", ".", "load", "=", "'.'", "\n", "", "else", ":", "\n", "                ", "self", ".", "log", "=", "torch", ".", "load", "(", "self", ".", "dir", "+", "'/psnr_log.pt'", ")", "\n", "print", "(", "'Continue from epoch {}...'", ".", "format", "(", "len", "(", "self", ".", "log", ")", ")", ")", "\n", "\n", "", "", "if", "args", ".", "reset", ":", "\n", "            ", "os", ".", "system", "(", "'rm -rf '", "+", "self", ".", "dir", ")", "\n", "args", ".", "load", "=", "'.'", "\n", "\n", "", "def", "_make_dir", "(", "path", ")", ":", "\n", "            ", "if", "not", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "os", ".", "makedirs", "(", "path", ")", "\n", "\n", "", "_make_dir", "(", "self", ".", "dir", ")", "\n", "_make_dir", "(", "self", ".", "dir", "+", "'/model'", ")", "\n", "_make_dir", "(", "self", ".", "dir", "+", "'/results'", ")", "\n", "\n", "open_type", "=", "'a'", "if", "os", ".", "path", ".", "exists", "(", "self", ".", "dir", "+", "'/log.txt'", ")", "else", "'w'", "\n", "self", ".", "log_file", "=", "open", "(", "self", ".", "dir", "+", "'/log.txt'", ",", "open_type", ")", "\n", "with", "open", "(", "self", ".", "dir", "+", "'/config.txt'", ",", "open_type", ")", "as", "f", ":", "\n", "            ", "f", ".", "write", "(", "now", "+", "'\\n\\n'", ")", "\n", "for", "arg", "in", "vars", "(", "args", ")", ":", "\n", "                ", "f", ".", "write", "(", "'{}: {}\\n'", ".", "format", "(", "arg", ",", "getattr", "(", "args", ",", "arg", ")", ")", ")", "\n", "", "f", ".", "write", "(", "'\\n'", ")", "\n", "\n", "", "", "def", "save", "(", "self", ",", "trainer", ",", "epoch", ",", "is_best", "=", "False", ")", ":", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.checkpoint.save": [[79, 89], ["trainer.model.save", "trainer.loss.save", "trainer.loss.plot_loss", "utility.checkpoint.plot_psnr", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "os.path.join", "trainer.optimizer.state_dict", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.plot_loss", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.checkpoint.plot_psnr", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.adversarial.Adversarial.state_dict"], ["        ", "trainer", ".", "model", ".", "save", "(", "self", ".", "dir", ",", "epoch", ",", "is_best", "=", "is_best", ")", "\n", "trainer", ".", "loss", ".", "save", "(", "self", ".", "dir", ")", "\n", "trainer", ".", "loss", ".", "plot_loss", "(", "self", ".", "dir", ",", "epoch", ")", "\n", "\n", "self", ".", "plot_psnr", "(", "epoch", ")", "\n", "torch", ".", "save", "(", "self", ".", "log", ",", "os", ".", "path", ".", "join", "(", "self", ".", "dir", ",", "'psnr_log.pt'", ")", ")", "\n", "torch", ".", "save", "(", "\n", "trainer", ".", "optimizer", ".", "state_dict", "(", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "self", ".", "dir", ",", "'optimizer.pt'", ")", "\n", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.checkpoint.add_log": [[91, 93], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["        ", "self", ".", "log", "=", "torch", ".", "cat", "(", "[", "self", ".", "log", ",", "log", "]", ")", "\n", "\n", "", "def", "write_log", "(", "self", ",", "log", ",", "refresh", "=", "False", ")", ":", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.checkpoint.write_log": [[94, 100], ["print", "utility.checkpoint.log_file.write", "utility.checkpoint.log_file.close", "open"], "methods", ["None"], ["        ", "print", "(", "log", ")", "\n", "self", ".", "log_file", ".", "write", "(", "log", "+", "'\\n'", ")", "\n", "if", "refresh", ":", "\n", "            ", "self", ".", "log_file", ".", "close", "(", ")", "\n", "self", ".", "log_file", "=", "open", "(", "self", ".", "dir", "+", "'/log.txt'", ",", "'a'", ")", "\n", "\n", "", "", "def", "done", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.checkpoint.done": [[101, 103], ["utility.checkpoint.log_file.close"], "methods", ["None"], ["        ", "self", ".", "log_file", ".", "close", "(", ")", "\n", "\n", "", "def", "plot_psnr", "(", "self", ",", "epoch", ")", ":", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.checkpoint.plot_psnr": [[104, 121], ["numpy.linspace", "matplotlib.figure", "matplotlib.figure", "matplotlib.title", "matplotlib.title", "enumerate", "matplotlib.legend", "matplotlib.legend", "matplotlib.xlabel", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.ylabel", "matplotlib.grid", "matplotlib.grid", "matplotlib.savefig", "matplotlib.savefig", "matplotlib.close", "matplotlib.close", "matplotlib.plot", "matplotlib.plot", "utility.checkpoint.log[].numpy"], "methods", ["None"], ["        ", "axis", "=", "np", ".", "linspace", "(", "1", ",", "epoch", ",", "epoch", ")", "\n", "label", "=", "'SR on {}'", ".", "format", "(", "self", ".", "args", ".", "data_test", ")", "\n", "fig", "=", "plt", ".", "figure", "(", ")", "\n", "plt", ".", "title", "(", "label", ")", "\n", "for", "idx_scale", ",", "scale", "in", "enumerate", "(", "self", ".", "args", ".", "scale", ")", ":", "\n", "            ", "plt", ".", "plot", "(", "\n", "axis", ",", "\n", "self", ".", "log", "[", ":", ",", "idx_scale", "]", ".", "numpy", "(", ")", ",", "\n", "label", "=", "'Scale {}'", ".", "format", "(", "scale", ")", "\n", ")", "\n", "", "plt", ".", "legend", "(", ")", "\n", "plt", ".", "xlabel", "(", "'Epochs'", ")", "\n", "plt", ".", "ylabel", "(", "'PSNR'", ")", "\n", "plt", ".", "grid", "(", "True", ")", "\n", "plt", ".", "savefig", "(", "'{}/test_{}.pdf'", ".", "format", "(", "self", ".", "dir", ",", "self", ".", "args", ".", "data_test", ")", ")", "\n", "plt", ".", "close", "(", "fig", ")", "\n", "\n", "", "def", "save_results", "(", "self", ",", "filename", ",", "save_list", ",", "scale", ")", ":", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.checkpoint.save_results": [[122, 130], ["zip", "v[].data.mul", "v[].data.mul.byte().permute().cpu().numpy", "imageio.imsave", "v[].data.mul.byte().permute().cpu", "v[].data.mul.byte().permute", "v[].data.mul.byte"], "methods", ["None"], ["        ", "filename", "=", "'{}/results/{}_x{}_'", ".", "format", "(", "self", ".", "dir", ",", "filename", ",", "scale", ")", "\n", "postfix", "=", "(", "'SR'", ",", "'LR'", ",", "'HR'", ")", "\n", "for", "v", ",", "p", "in", "zip", "(", "save_list", ",", "postfix", ")", ":", "\n", "            ", "normalized", "=", "v", "[", "0", "]", ".", "data", ".", "mul", "(", "255", "/", "self", ".", "args", ".", "rgb_range", ")", "\n", "ndarr", "=", "normalized", ".", "byte", "(", ")", ".", "permute", "(", "1", ",", "2", ",", "0", ")", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "misc", ".", "imsave", "(", "'{}{}.png'", ".", "format", "(", "filename", ",", "p", ")", ",", "ndarr", ")", "\n", "\n", "", "", "", "def", "quantize", "(", "img", ",", "rgb_range", ")", ":", "\n", "    ", "pixel_range", "=", "255", "/", "rgb_range", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.quantize": [[147, 150], ["img.mul().clamp().round().div", "img.mul().clamp().round", "img.mul().clamp", "img.mul"], "function", ["None"], []], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.calc_psnr": [[151, 179], ["valid.pow().mean", "diff.sum.size", "diff.sum.new", "diff.sum.mul_().div_", "diff.sum.sum", "math.log10", "valid.pow", "diff.sum.mul_"], "function", ["None"], ["\n", "valid", "=", "diff", "[", ":", ",", ":", ",", "shave", ":", "-", "shave", ",", "shave", ":", "-", "shave", "]", "\n", "mse", "=", "valid", ".", "pow", "(", "2", ")", ".", "mean", "(", ")", "\n", "\n", "return", "-", "10", "*", "math", ".", "log10", "(", "mse", ")", "\n", "\n", "", "def", "make_optimizer", "(", "args", ",", "my_model", ")", ":", "\n", "    ", "trainable", "=", "filter", "(", "lambda", "x", ":", "x", ".", "requires_grad", ",", "my_model", ".", "parameters", "(", ")", ")", "\n", "\n", "if", "args", ".", "optimizer", "==", "'SGD'", ":", "\n", "        ", "optimizer_function", "=", "optim", ".", "SGD", "\n", "kwargs", "=", "{", "'momentum'", ":", "args", ".", "momentum", "}", "\n", "", "elif", "args", ".", "optimizer", "==", "'ADAM'", ":", "\n", "        ", "optimizer_function", "=", "optim", ".", "Adam", "\n", "kwargs", "=", "{", "\n", "'betas'", ":", "(", "args", ".", "beta1", ",", "args", ".", "beta2", ")", ",", "\n", "'eps'", ":", "args", ".", "epsilon", "\n", "}", "\n", "", "elif", "args", ".", "optimizer", "==", "'RMSprop'", ":", "\n", "        ", "optimizer_function", "=", "optim", ".", "RMSprop", "\n", "kwargs", "=", "{", "'eps'", ":", "args", ".", "epsilon", "}", "\n", "\n", "", "kwargs", "[", "'lr'", "]", "=", "args", ".", "lr", "\n", "kwargs", "[", "'weight_decay'", "]", "=", "args", ".", "weight_decay", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.make_optimizer": [[180, 200], ["filter", "optimizer_function", "my_model.parameters"], "function", ["None"], ["return", "optimizer_function", "(", "trainable", ",", "**", "kwargs", ")", "\n", "\n", "", "def", "make_scheduler", "(", "args", ",", "my_optimizer", ")", ":", "\n", "    ", "if", "args", ".", "decay_type", "==", "'step'", ":", "\n", "        ", "scheduler", "=", "lrs", ".", "StepLR", "(", "\n", "my_optimizer", ",", "\n", "step_size", "=", "args", ".", "lr_decay", ",", "\n", "gamma", "=", "args", ".", "gamma", "\n", ")", "\n", "", "elif", "args", ".", "decay_type", ".", "find", "(", "'step'", ")", ">=", "0", ":", "\n", "        ", "milestones", "=", "args", ".", "decay_type", ".", "split", "(", "'_'", ")", "\n", "milestones", ".", "pop", "(", "0", ")", "\n", "milestones", "=", "list", "(", "map", "(", "lambda", "x", ":", "int", "(", "x", ")", ",", "milestones", ")", ")", "\n", "scheduler", "=", "lrs", ".", "MultiStepLR", "(", "\n", "my_optimizer", ",", "\n", "milestones", "=", "milestones", ",", "\n", "gamma", "=", "args", ".", "gamma", "\n", ")", "\n", "\n", "", "return", "scheduler", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.make_scheduler": [[201, 219], ["torch.StepLR", "args.decay_type.find", "args.decay_type.split", "list.pop", "list", "torch.MultiStepLR", "map", "int"], "function", ["None"], ["", ""]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.trainer.Trainer.__init__": [[12, 31], ["utility.make_optimizer", "utility.make_scheduler", "trainer.Trainer.optimizer.load_state_dict", "range", "torch.load", "len", "trainer.Trainer.scheduler.step", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.make_optimizer", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.make_scheduler", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.rcan.RCAN.load_state_dict", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.step"], ["        ", "self", ".", "args", "=", "args", "\n", "self", ".", "scale", "=", "args", ".", "scale", "\n", "\n", "self", ".", "ckp", "=", "ckp", "\n", "self", ".", "loader_train", "=", "loader", ".", "loader_train", "\n", "self", ".", "loader_test", "=", "loader", ".", "loader_test", "\n", "self", ".", "model", "=", "my_model", "\n", "self", ".", "loss", "=", "my_loss", "\n", "self", ".", "optimizer", "=", "utility", ".", "make_optimizer", "(", "args", ",", "self", ".", "model", ")", "\n", "self", ".", "scheduler", "=", "utility", ".", "make_scheduler", "(", "args", ",", "self", ".", "optimizer", ")", "\n", "\n", "if", "self", ".", "args", ".", "load", "!=", "'.'", ":", "\n", "            ", "self", ".", "optimizer", ".", "load_state_dict", "(", "\n", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "ckp", ".", "dir", ",", "'optimizer.pt'", ")", ")", "\n", ")", "\n", "for", "_", "in", "range", "(", "len", "(", "ckp", ".", "log", ")", ")", ":", "self", ".", "scheduler", ".", "step", "(", ")", "\n", "\n", "", "self", ".", "error_last", "=", "1e8", "\n", "\n", "", "def", "train", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.trainer.Trainer.train": [[32, 75], ["trainer.Trainer.scheduler.step", "trainer.Trainer.loss.step", "trainer.Trainer.ckp.write_log", "trainer.Trainer.loss.start_log", "trainer.Trainer.model.train", "enumerate", "trainer.Trainer.loss.end_log", "trainer.Trainer.scheduler.get_lr", "utility.timer", "utility.timer", "trainer.Trainer.prepare", "timer_data.hold", "timer_model.tic", "trainer.Trainer.optimizer.zero_grad", "trainer.Trainer.model", "trainer.Trainer.loss", "timer_model.hold", "timer_data.tic", "len", "decimal.Decimal", "trainer.Trainer.item", "trainer.Trainer.backward", "trainer.Trainer.optimizer.step", "print", "trainer.Trainer.ckp.write_log", "trainer.Trainer.item", "len", "trainer.Trainer.loss.display_loss", "timer_model.release", "timer_data.release"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.step", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.step", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.start_log", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.trainer.Trainer.train", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.end_log", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.trainer.Trainer.prepare", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.timer.hold", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.timer.tic", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.timer.hold", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.timer.tic", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.step", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.display_loss", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.timer.release", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.timer.release"], ["        ", "self", ".", "scheduler", ".", "step", "(", ")", "\n", "self", ".", "loss", ".", "step", "(", ")", "\n", "epoch", "=", "self", ".", "scheduler", ".", "last_epoch", "+", "1", "\n", "lr", "=", "self", ".", "scheduler", ".", "get_lr", "(", ")", "[", "0", "]", "\n", "\n", "self", ".", "ckp", ".", "write_log", "(", "\n", "'[Epoch {}]\\tLearning rate: {:.2e}'", ".", "format", "(", "epoch", ",", "Decimal", "(", "lr", ")", ")", "\n", ")", "\n", "self", ".", "loss", ".", "start_log", "(", ")", "\n", "self", ".", "model", ".", "train", "(", ")", "\n", "\n", "timer_data", ",", "timer_model", "=", "utility", ".", "timer", "(", ")", ",", "utility", ".", "timer", "(", ")", "\n", "for", "batch", ",", "(", "lr", ",", "hr", ",", "_", ",", "idx_scale", ")", "in", "enumerate", "(", "self", ".", "loader_train", ")", ":", "\n", "            ", "lr", ",", "hr", "=", "self", ".", "prepare", "(", "[", "lr", ",", "hr", "]", ")", "\n", "timer_data", ".", "hold", "(", ")", "\n", "timer_model", ".", "tic", "(", ")", "\n", "\n", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "sr", "=", "self", ".", "model", "(", "lr", ",", "idx_scale", ")", "\n", "loss", "=", "self", ".", "loss", "(", "sr", ",", "hr", ")", "\n", "if", "loss", ".", "item", "(", ")", "<", "self", ".", "args", ".", "skip_threshold", "*", "self", ".", "error_last", ":", "\n", "                ", "loss", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "", "else", ":", "\n", "                ", "print", "(", "'Skip this batch {}! (Loss: {})'", ".", "format", "(", "\n", "batch", "+", "1", ",", "loss", ".", "item", "(", ")", "\n", ")", ")", "\n", "\n", "", "timer_model", ".", "hold", "(", ")", "\n", "\n", "if", "(", "batch", "+", "1", ")", "%", "self", ".", "args", ".", "print_every", "==", "0", ":", "\n", "                ", "self", ".", "ckp", ".", "write_log", "(", "'[{}/{}]\\t{}\\t{:.1f}+{:.1f}s'", ".", "format", "(", "\n", "(", "batch", "+", "1", ")", "*", "self", ".", "args", ".", "batch_size", ",", "\n", "len", "(", "self", ".", "loader_train", ".", "dataset", ")", ",", "\n", "self", ".", "loss", ".", "display_loss", "(", "batch", ")", ",", "\n", "timer_model", ".", "release", "(", ")", ",", "\n", "timer_data", ".", "release", "(", ")", ")", ")", "\n", "\n", "", "timer_data", ".", "tic", "(", ")", "\n", "\n", "", "self", ".", "loss", ".", "end_log", "(", "len", "(", "self", ".", "loader_train", ")", ")", "\n", "self", ".", "error_last", "=", "self", ".", "loss", ".", "log", "[", "-", "1", ",", "-", "1", "]", "\n", "\n", "", "def", "test", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.trainer.Trainer.test": [[76, 128], ["trainer.Trainer.ckp.write_log", "trainer.Trainer.ckp.add_log", "trainer.Trainer.model.eval", "utility.timer", "trainer.Trainer.ckp.write_log", "torch.zeros", "torch.no_grad", "enumerate", "trainer.Trainer.ckp.save", "len", "trainer.Trainer.loader_test.dataset.set_scale", "tqdm.tqdm.tqdm", "enumerate", "trainer.Trainer.ckp.log.max", "trainer.Trainer.ckp.write_log", "utility.timer.toc", "trainer.Trainer.model", "utility.quantize", "len", "utility.timer.toc", "len", "hr.nelement", "trainer.Trainer.prepare", "utility.calc_psnr", "save_list.extend", "trainer.Trainer.ckp.save_results_nopostfix", "trainer.Trainer.prepare"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.checkpoint.add_log", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.myimage.MyImage.set_scale", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.checkpoint.write_log", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.timer.toc", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.quantize", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.timer.toc", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.trainer.Trainer.prepare", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.calc_psnr", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.checkpoint.save_results_nopostfix", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.trainer.Trainer.prepare"], ["        ", "epoch", "=", "self", ".", "scheduler", ".", "last_epoch", "+", "1", "\n", "self", ".", "ckp", ".", "write_log", "(", "'\\nEvaluation:'", ")", "\n", "self", ".", "ckp", ".", "add_log", "(", "torch", ".", "zeros", "(", "1", ",", "len", "(", "self", ".", "scale", ")", ")", ")", "\n", "self", ".", "model", ".", "eval", "(", ")", "\n", "\n", "timer_test", "=", "utility", ".", "timer", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "for", "idx_scale", ",", "scale", "in", "enumerate", "(", "self", ".", "scale", ")", ":", "\n", "                ", "eval_acc", "=", "0", "\n", "self", ".", "loader_test", ".", "dataset", ".", "set_scale", "(", "idx_scale", ")", "\n", "tqdm_test", "=", "tqdm", "(", "self", ".", "loader_test", ",", "ncols", "=", "80", ")", "\n", "for", "idx_img", ",", "(", "lr", ",", "hr", ",", "filename", ",", "_", ")", "in", "enumerate", "(", "tqdm_test", ")", ":", "\n", "                    ", "filename", "=", "filename", "[", "0", "]", "\n", "no_eval", "=", "(", "hr", ".", "nelement", "(", ")", "==", "1", ")", "\n", "if", "not", "no_eval", ":", "\n", "                        ", "lr", ",", "hr", "=", "self", ".", "prepare", "(", "[", "lr", ",", "hr", "]", ")", "\n", "", "else", ":", "\n", "                        ", "lr", "=", "self", ".", "prepare", "(", "[", "lr", "]", ")", "[", "0", "]", "\n", "\n", "", "sr", "=", "self", ".", "model", "(", "lr", ",", "idx_scale", ")", "\n", "sr", "=", "utility", ".", "quantize", "(", "sr", ",", "self", ".", "args", ".", "rgb_range", ")", "\n", "\n", "save_list", "=", "[", "sr", "]", "\n", "if", "not", "no_eval", ":", "\n", "                        ", "eval_acc", "+=", "utility", ".", "calc_psnr", "(", "\n", "sr", ",", "hr", ",", "scale", ",", "self", ".", "args", ".", "rgb_range", ",", "\n", "benchmark", "=", "self", ".", "loader_test", ".", "dataset", ".", "benchmark", "\n", ")", "\n", "save_list", ".", "extend", "(", "[", "lr", ",", "hr", "]", ")", "\n", "\n", "", "if", "self", ".", "args", ".", "save_results", ":", "\n", "                        ", "self", ".", "ckp", ".", "save_results", "(", "filename", ",", "save_list", ",", "scale", ")", "\n", "\n", "", "", "self", ".", "ckp", ".", "log", "[", "-", "1", ",", "idx_scale", "]", "=", "eval_acc", "/", "len", "(", "self", ".", "loader_test", ")", "\n", "best", "=", "self", ".", "ckp", ".", "log", ".", "max", "(", "0", ")", "\n", "self", ".", "ckp", ".", "write_log", "(", "\n", "'[{} x{}]\\tPSNR: {:.3f} (Best: {:.3f} @epoch {})'", ".", "format", "(", "\n", "self", ".", "args", ".", "data_test", ",", "\n", "scale", ",", "\n", "self", ".", "ckp", ".", "log", "[", "-", "1", ",", "idx_scale", "]", ",", "\n", "best", "[", "0", "]", "[", "idx_scale", "]", ",", "\n", "best", "[", "1", "]", "[", "idx_scale", "]", "+", "1", "\n", ")", "\n", ")", "\n", "\n", "", "", "self", ".", "ckp", ".", "write_log", "(", "\n", "'Total time: {:.2f}s\\n'", ".", "format", "(", "timer_test", ".", "toc", "(", ")", ")", ",", "refresh", "=", "True", "\n", ")", "\n", "if", "not", "self", ".", "args", ".", "test_only", ":", "\n", "            ", "self", ".", "ckp", ".", "save", "(", "self", ",", "epoch", ",", "is_best", "=", "(", "best", "[", "1", "]", "[", "0", "]", "+", "1", "==", "epoch", ")", ")", "\n", "\n", "", "", "def", "prepare", "(", "self", ",", "l", ",", "volatile", "=", "False", ")", ":", "\n", "        ", "device", "=", "torch", ".", "device", "(", "'cpu'", "if", "self", ".", "args", ".", "cpu", "else", "'cuda'", ")", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.trainer.Trainer.prepare": [[129, 136], ["torch.device", "tensor.half.half.to", "trainer.Trainer.prepare._prepare"], "methods", ["None"], ["def", "_prepare", "(", "tensor", ")", ":", "\n", "            ", "if", "self", ".", "args", ".", "precision", "==", "'half'", ":", "tensor", "=", "tensor", ".", "half", "(", ")", "\n", "return", "tensor", ".", "to", "(", "device", ")", "\n", "\n", "", "return", "[", "_prepare", "(", "_l", ")", "for", "_l", "in", "l", "]", "\n", "\n", "", "def", "terminate", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "args", ".", "test_only", ":", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.trainer.Trainer.terminate": [[137, 144], ["trainer.Trainer.test"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.trainer.Trainer.test"], ["            ", "self", ".", "test", "(", ")", "\n", "return", "True", "\n", "", "else", ":", "\n", "            ", "epoch", "=", "self", ".", "scheduler", ".", "last_epoch", "+", "1", "\n", "return", "epoch", ">=", "self", ".", "args", ".", "epochs", "\n", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.dataloader._MSDataLoaderIter.__init__": [[56, 126], ["threading.Event", "iter", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.cuda.is_available", "torch.SimpleQueue", "torch.SimpleQueue", "torch._C._update_worker_pids", "torch._C._update_worker_pids", "torch.utils.data.dataloader._set_SIGCHLD_handler", "torch.utils.data.dataloader._set_SIGCHLD_handler", "range", "torch.Queue", "torch.Queue", "torch.LongTensor().random_", "torch.LongTensor().random_", "torch.LongTensor().random_", "torch.LongTensor().random_", "torch.Process", "torch.Process", "queue.Queue", "threading.Thread", "dataloader._MSDataLoaderIter.worker_manager_thread.start", "w.start", "id", "tuple", "dataloader._MSDataLoaderIter._put_indices", "range", "range", "torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device", "torch.cuda.current_device", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "loader", ")", ":", "\n", "        ", "self", ".", "dataset", "=", "loader", ".", "dataset", "\n", "self", ".", "scale", "=", "loader", ".", "scale", "\n", "self", ".", "collate_fn", "=", "loader", ".", "collate_fn", "\n", "self", ".", "batch_sampler", "=", "loader", ".", "batch_sampler", "\n", "self", ".", "num_workers", "=", "loader", ".", "num_workers", "\n", "self", ".", "pin_memory", "=", "loader", ".", "pin_memory", "and", "torch", ".", "cuda", ".", "is_available", "(", ")", "\n", "self", ".", "timeout", "=", "loader", ".", "timeout", "\n", "self", ".", "done_event", "=", "threading", ".", "Event", "(", ")", "\n", "\n", "self", ".", "sample_iter", "=", "iter", "(", "self", ".", "batch_sampler", ")", "\n", "\n", "if", "self", ".", "num_workers", ">", "0", ":", "\n", "            ", "self", ".", "worker_init_fn", "=", "loader", ".", "worker_init_fn", "\n", "self", ".", "index_queues", "=", "[", "\n", "multiprocessing", ".", "Queue", "(", ")", "for", "_", "in", "range", "(", "self", ".", "num_workers", ")", "\n", "]", "\n", "self", ".", "worker_queue_idx", "=", "0", "\n", "self", ".", "worker_result_queue", "=", "multiprocessing", ".", "SimpleQueue", "(", ")", "\n", "self", ".", "batches_outstanding", "=", "0", "\n", "self", ".", "worker_pids_set", "=", "False", "\n", "self", ".", "shutdown", "=", "False", "\n", "self", ".", "send_idx", "=", "0", "\n", "self", ".", "rcvd_idx", "=", "0", "\n", "self", ".", "reorder_dict", "=", "{", "}", "\n", "\n", "base_seed", "=", "torch", ".", "LongTensor", "(", "1", ")", ".", "random_", "(", ")", "[", "0", "]", "\n", "self", ".", "workers", "=", "[", "\n", "multiprocessing", ".", "Process", "(", "\n", "target", "=", "_ms_loop", ",", "\n", "args", "=", "(", "\n", "self", ".", "dataset", ",", "\n", "self", ".", "index_queues", "[", "i", "]", ",", "\n", "self", ".", "worker_result_queue", ",", "\n", "self", ".", "collate_fn", ",", "\n", "self", ".", "scale", ",", "\n", "base_seed", "+", "i", ",", "\n", "self", ".", "worker_init_fn", ",", "\n", "i", "\n", ")", "\n", ")", "\n", "for", "i", "in", "range", "(", "self", ".", "num_workers", ")", "]", "\n", "\n", "if", "self", ".", "pin_memory", "or", "self", ".", "timeout", ">", "0", ":", "\n", "                ", "self", ".", "data_queue", "=", "queue", ".", "Queue", "(", ")", "\n", "if", "self", ".", "pin_memory", ":", "\n", "                    ", "maybe_device_id", "=", "torch", ".", "cuda", ".", "current_device", "(", ")", "\n", "", "else", ":", "\n", "# do not initialize cuda context if not necessary", "\n", "                    ", "maybe_device_id", "=", "None", "\n", "", "self", ".", "worker_manager_thread", "=", "threading", ".", "Thread", "(", "\n", "target", "=", "_worker_manager_loop", ",", "\n", "args", "=", "(", "self", ".", "worker_result_queue", ",", "self", ".", "data_queue", ",", "self", ".", "done_event", ",", "self", ".", "pin_memory", ",", "\n", "maybe_device_id", ")", ")", "\n", "self", ".", "worker_manager_thread", ".", "daemon", "=", "True", "\n", "self", ".", "worker_manager_thread", ".", "start", "(", ")", "\n", "", "else", ":", "\n", "                ", "self", ".", "data_queue", "=", "self", ".", "worker_result_queue", "\n", "\n", "", "for", "w", "in", "self", ".", "workers", ":", "\n", "                ", "w", ".", "daemon", "=", "True", "# ensure that the worker exits on process exit", "\n", "w", ".", "start", "(", ")", "\n", "\n", "", "_update_worker_pids", "(", "id", "(", "self", ")", ",", "tuple", "(", "w", ".", "pid", "for", "w", "in", "self", ".", "workers", ")", ")", "\n", "_set_SIGCHLD_handler", "(", ")", "\n", "self", ".", "worker_pids_set", "=", "True", "\n", "\n", "# prime the prefetch loop", "\n", "for", "_", "in", "range", "(", "2", "*", "self", ".", "num_workers", ")", ":", "\n", "                ", "self", ".", "_put_indices", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.dataloader.MSDataLoader.__init__": [[128, 142], ["torch.utils.data.dataloader.DataLoader.__init__"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "args", ",", "dataset", ",", "batch_size", "=", "1", ",", "shuffle", "=", "False", ",", "\n", "sampler", "=", "None", ",", "batch_sampler", "=", "None", ",", "\n", "collate_fn", "=", "default_collate", ",", "pin_memory", "=", "False", ",", "drop_last", "=", "False", ",", "\n", "timeout", "=", "0", ",", "worker_init_fn", "=", "None", ")", ":", "\n", "\n", "        ", "super", "(", "MSDataLoader", ",", "self", ")", ".", "__init__", "(", "\n", "dataset", ",", "batch_size", "=", "batch_size", ",", "shuffle", "=", "shuffle", ",", "\n", "sampler", "=", "sampler", ",", "batch_sampler", "=", "batch_sampler", ",", "\n", "num_workers", "=", "args", ".", "n_threads", ",", "collate_fn", "=", "collate_fn", ",", "\n", "pin_memory", "=", "pin_memory", ",", "drop_last", "=", "drop_last", ",", "\n", "timeout", "=", "timeout", ",", "worker_init_fn", "=", "worker_init_fn", ")", "\n", "\n", "self", ".", "scale", "=", "args", ".", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.dataloader.MSDataLoader.__iter__": [[143, 145], ["dataloader._MSDataLoaderIter"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "return", "_MSDataLoaderIter", "(", "self", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.dataloader._ms_loop": [[29, 54], ["torch._C._set_worker_signal_handlers", "torch.set_num_threads", "torch.set_num_threads", "torch.manual_seed", "torch.manual_seed", "index_queue.get", "collate_fn", "collate_fn.append", "data_queue.put", "random.randrange", "dataset.set_scale", "data_queue.put", "len", "len", "torch.utils.data.dataloader.ExceptionWrapper", "sys.exc_info"], "function", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.myimage.MyImage.set_scale"], ["", "def", "_ms_loop", "(", "dataset", ",", "index_queue", ",", "data_queue", ",", "collate_fn", ",", "scale", ",", "seed", ",", "init_fn", ",", "worker_id", ")", ":", "\n", "    ", "global", "_use_shared_memory", "\n", "_use_shared_memory", "=", "True", "\n", "_set_worker_signal_handlers", "(", ")", "\n", "\n", "torch", ".", "set_num_threads", "(", "1", ")", "\n", "torch", ".", "manual_seed", "(", "seed", ")", "\n", "while", "True", ":", "\n", "        ", "r", "=", "index_queue", ".", "get", "(", ")", "\n", "if", "r", "is", "None", ":", "\n", "            ", "break", "\n", "", "idx", ",", "batch_indices", "=", "r", "\n", "try", ":", "\n", "            ", "idx_scale", "=", "0", "\n", "if", "len", "(", "scale", ")", ">", "1", "and", "dataset", ".", "train", ":", "\n", "                ", "idx_scale", "=", "random", ".", "randrange", "(", "0", ",", "len", "(", "scale", ")", ")", "\n", "dataset", ".", "set_scale", "(", "idx_scale", ")", "\n", "\n", "", "samples", "=", "collate_fn", "(", "[", "dataset", "[", "i", "]", "for", "i", "in", "batch_indices", "]", ")", "\n", "samples", ".", "append", "(", "idx_scale", ")", "\n", "\n", "", "except", "Exception", ":", "\n", "            ", "data_queue", ".", "put", "(", "(", "idx", ",", "ExceptionWrapper", "(", "sys", ".", "exc_info", "(", ")", ")", ")", ")", "\n", "", "else", ":", "\n", "            ", "data_queue", ".", "put", "(", "(", "idx", ",", "samples", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.template.set_template": [[1, 39], ["args.template.find", "args.template.find", "args.template.find", "args.template.find", "args.template.find"], "function", ["None"], ["def", "set_template", "(", "args", ")", ":", "\n", "# Set the templates here", "\n", "    ", "if", "args", ".", "template", ".", "find", "(", "'jpeg'", ")", ">=", "0", ":", "\n", "        ", "args", ".", "data_train", "=", "'DIV2K_jpeg'", "\n", "args", ".", "data_test", "=", "'DIV2K_jpeg'", "\n", "args", ".", "epochs", "=", "200", "\n", "args", ".", "lr_decay", "=", "100", "\n", "\n", "", "if", "args", ".", "template", ".", "find", "(", "'EDSR_paper'", ")", ">=", "0", ":", "\n", "        ", "args", ".", "model", "=", "'EDSR'", "\n", "args", ".", "n_resblocks", "=", "32", "\n", "args", ".", "n_feats", "=", "256", "\n", "args", ".", "res_scale", "=", "0.1", "\n", "\n", "", "if", "args", ".", "template", ".", "find", "(", "'MDSR'", ")", ">=", "0", ":", "\n", "        ", "args", ".", "model", "=", "'MDSR'", "\n", "args", ".", "patch_size", "=", "48", "\n", "args", ".", "epochs", "=", "650", "\n", "\n", "", "if", "args", ".", "template", ".", "find", "(", "'DDBPN'", ")", ">=", "0", ":", "\n", "        ", "args", ".", "model", "=", "'DDBPN'", "\n", "args", ".", "patch_size", "=", "128", "\n", "args", ".", "scale", "=", "'4'", "\n", "\n", "args", ".", "data_test", "=", "'Set5'", "\n", "\n", "args", ".", "batch_size", "=", "20", "\n", "args", ".", "epochs", "=", "1000", "\n", "args", ".", "lr_decay", "=", "500", "\n", "args", ".", "gamma", "=", "0.1", "\n", "args", ".", "weight_decay", "=", "1e-4", "\n", "\n", "args", ".", "loss", "=", "'1*MSE'", "\n", "\n", "", "if", "args", ".", "template", ".", "find", "(", "'GAN'", ")", ">=", "0", ":", "\n", "        ", "args", ".", "epochs", "=", "200", "\n", "args", ".", "lr", "=", "5e-5", "\n", "args", ".", "lr_decay", "=", "150", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.checkpoint.save_results_nopostfix": [[131, 145], ["zip", "filename.replace.replace.replace", "v[].data.mul", "v[].data.mul.byte().permute().cpu().numpy", "imageio.imsave", "filename.replace.replace.replace", "v[].data.mul.byte().permute().cpu", "v[].data.mul.byte().permute", "v[].data.mul.byte"], "methods", ["None"], ["return", "img", ".", "mul", "(", "pixel_range", ")", ".", "clamp", "(", "0", ",", "255", ")", ".", "round", "(", ")", ".", "div", "(", "pixel_range", ")", "\n", "\n", "", "def", "calc_psnr", "(", "sr", ",", "hr", ",", "scale", ",", "rgb_range", ",", "benchmark", "=", "False", ")", ":", "\n", "    ", "diff", "=", "(", "sr", "-", "hr", ")", ".", "data", ".", "div", "(", "rgb_range", ")", "\n", "shave", "=", "scale", "\n", "if", "diff", ".", "size", "(", "1", ")", ">", "1", ":", "\n", "        ", "convert", "=", "diff", ".", "new", "(", "1", ",", "3", ",", "1", ",", "1", ")", "\n", "convert", "[", "0", ",", "0", ",", "0", ",", "0", "]", "=", "65.738", "\n", "convert", "[", "0", ",", "1", ",", "0", ",", "0", "]", "=", "129.057", "\n", "convert", "[", "0", ",", "2", ",", "0", ",", "0", "]", "=", "25.064", "\n", "diff", ".", "mul_", "(", "convert", ")", ".", "div_", "(", "256", ")", "\n", "diff", "=", "diff", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", ""]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx2.Scale.__init__": [[13, 16], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "init_value", "=", "1e-3", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "scale", "=", "nn", ".", "Parameter", "(", "torch", ".", "FloatTensor", "(", "[", "init_value", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx2.Scale.forward": [[17, 19], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "input", "*", "self", ".", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx2.SRBW.__init__": [[34, 51], ["torch.ReLU", "torch.ReLU", "torch.Module.__init__", "FDIWNx2.Scale", "FDIWNx2.Scale", "torch.Conv2d", "torch.Conv2d", "body.append", "body.append", "body.append", "body.append", "torch.Sequential", "torch.Sequential", "FDIWNx2.sa_layer", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "wn", "wn", "wn", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "n_feats", ",", "wn", "=", "lambda", "x", ":", "torch", ".", "nn", ".", "utils", ".", "weight_norm", "(", "x", ")", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ")", ":", "\n", "        ", "super", "(", "SRBW", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "res_scale", "=", "Scale", "(", "1", ")", "\n", "self", ".", "x_scale", "=", "Scale", "(", "1", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", "*", "2", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "body", "=", "[", "]", "\n", "body", ".", "append", "(", "\n", "wn", "(", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", "*", "4", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", ")", ")", "\n", "body", ".", "append", "(", "act", ")", "\n", "body", ".", "append", "(", "\n", "wn", "(", "nn", ".", "Conv2d", "(", "n_feats", "*", "4", ",", "n_feats", "//", "1", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", ")", ")", "\n", "body", ".", "append", "(", "\n", "wn", "(", "nn", ".", "Conv2d", "(", "n_feats", "//", "1", ",", "n_feats", "*", "2", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ")", ")", "\n", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "body", ")", "\n", "self", ".", "SAlayer", "=", "sa_layer", "(", "2", "*", "n_feats", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx2.SRBW.forward": [[52, 55], ["FDIWNx2.SRBW.res_scale", "FDIWNx2.SRBW.x_scale", "FDIWNx2.SRBW.SAlayer", "FDIWNx2.SRBW.conv", "FDIWNx2.SRBW.body"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "self", ".", "res_scale", "(", "self", ".", "SAlayer", "(", "self", ".", "body", "(", "x", ")", ")", ")", "+", "self", ".", "x_scale", "(", "self", ".", "conv", "(", "x", ")", ")", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx2.SRBW1.__init__": [[57, 73], ["torch.ReLU", "torch.ReLU", "torch.Module.__init__", "FDIWNx2.Scale", "FDIWNx2.Scale", "body.append", "body.append", "body.append", "body.append", "torch.Sequential", "torch.Sequential", "FDIWNx2.sa_layer", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "wn", "wn", "wn", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "n_feats", ",", "wn", "=", "lambda", "x", ":", "torch", ".", "nn", ".", "utils", ".", "weight_norm", "(", "x", ")", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ")", ":", "\n", "        ", "super", "(", "SRBW1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "res_scale", "=", "Scale", "(", "1", ")", "\n", "self", ".", "x_scale", "=", "Scale", "(", "1", ")", "\n", "body", "=", "[", "]", "\n", "body", ".", "append", "(", "\n", "wn", "(", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", "*", "2", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", ")", ")", "\n", "body", ".", "append", "(", "act", ")", "\n", "body", ".", "append", "(", "\n", "wn", "(", "nn", ".", "Conv2d", "(", "n_feats", "*", "2", ",", "n_feats", "//", "2", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", ")", ")", "\n", "body", ".", "append", "(", "\n", "wn", "(", "nn", ".", "Conv2d", "(", "n_feats", "//", "2", ",", "n_feats", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ")", ")", "\n", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "body", ")", "\n", "self", ".", "SAlayer", "=", "sa_layer", "(", "n_feats", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx2.SRBW1.forward": [[74, 77], ["FDIWNx2.SRBW1.res_scale", "FDIWNx2.SRBW1.x_scale", "FDIWNx2.SRBW1.SAlayer", "FDIWNx2.SRBW1.body"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "self", ".", "res_scale", "(", "self", ".", "SAlayer", "(", "self", ".", "body", "(", "x", ")", ")", ")", "+", "self", ".", "x_scale", "(", "x", ")", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx2.SRBW2.__init__": [[79, 96], ["torch.ReLU", "torch.ReLU", "torch.Module.__init__", "FDIWNx2.Scale", "FDIWNx2.Scale", "body.append", "body.append", "body.append", "body.append", "torch.Sequential", "torch.Sequential", "FDIWNx2.sa_layer", "torch.Conv2d", "torch.Conv2d", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "wn", "wn", "wn", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "n_feats", ",", "wn", "=", "lambda", "x", ":", "torch", ".", "nn", ".", "utils", ".", "weight_norm", "(", "x", ")", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ")", ":", "\n", "        ", "super", "(", "SRBW2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "res_scale", "=", "Scale", "(", "1", ")", "\n", "self", ".", "x_scale", "=", "Scale", "(", "1", ")", "\n", "body", "=", "[", "]", "\n", "body", ".", "append", "(", "\n", "wn", "(", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", "*", "2", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", ")", ")", "\n", "body", ".", "append", "(", "act", ")", "\n", "body", ".", "append", "(", "\n", "wn", "(", "nn", ".", "Conv2d", "(", "n_feats", "*", "2", ",", "n_feats", "//", "2", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", ")", ")", "\n", "body", ".", "append", "(", "\n", "wn", "(", "nn", ".", "Conv2d", "(", "n_feats", "//", "2", ",", "n_feats", "//", "2", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ")", ")", "\n", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "body", ")", "\n", "self", ".", "SAlayer", "=", "sa_layer", "(", "n_feats", "//", "2", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", "//", "2", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx2.SRBW2.forward": [[97, 100], ["FDIWNx2.SRBW2.res_scale", "FDIWNx2.SRBW2.x_scale", "FDIWNx2.SRBW2.SAlayer", "FDIWNx2.SRBW2.conv", "FDIWNx2.SRBW2.body"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "self", ".", "res_scale", "(", "self", ".", "SAlayer", "(", "self", ".", "body", "(", "x", ")", ")", ")", "+", "self", ".", "x_scale", "(", "self", ".", "conv", "(", "x", ")", ")", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx2.SRB.__init__": [[102, 107], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "FDIWNx2.activation"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx3.activation"], ["    ", "def", "__init__", "(", "\n", "self", ",", "n_feats", ",", "kernel_size", "=", "3", ")", ":", "\n", "        ", "super", "(", "SRB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", ",", "kernel_size", ",", "padding", "=", "kernel_size", "//", "2", ")", "\n", "self", ".", "act", "=", "activation", "(", "'lrelu'", ",", "neg_slope", "=", "0.05", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx2.SRB.forward": [[108, 112], ["FDIWNx2.SRB.conv3", "FDIWNx2.SRB.act"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y1", "=", "self", ".", "conv3", "(", "x", ")", "\n", "y", "=", "self", ".", "act", "(", "y1", "+", "x", ")", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx2.CoffConv.__init__": [[114, 132], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Sigmoid", "torch.Sigmoid", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_feats", ")", ":", "\n", "        ", "super", "(", "CoffConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "upper_branch", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", "//", "8", ",", "1", ",", "1", ",", "0", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "n_feats", "//", "8", ",", "n_feats", ",", "1", ",", "1", ",", "0", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "\n", "self", ".", "std", "=", "std", "\n", "self", ".", "lower_branch", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", "//", "8", ",", "1", ",", "1", ",", "0", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "n_feats", "//", "8", ",", "n_feats", ",", "1", ",", "1", ",", "0", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx2.CoffConv.forward": [[134, 142], ["FDIWNx2.CoffConv.upper_branch", "FDIWNx2.CoffConv.std", "FDIWNx2.CoffConv.lower_branch", "torch.add", "torch.add", "torch.add", "torch.add"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.common.std"], ["", "def", "forward", "(", "self", ",", "fea", ")", ":", "\n", "        ", "upper", "=", "self", ".", "upper_branch", "(", "fea", ")", "\n", "lower", "=", "self", ".", "std", "(", "fea", ")", "\n", "lower", "=", "self", ".", "lower_branch", "(", "lower", ")", "\n", "\n", "out", "=", "torch", ".", "add", "(", "upper", ",", "lower", ")", "/", "2", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx2.CALayer.__init__": [[144, 154], ["torch.Module.__init__", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_feats", ",", "reduction", "=", "8", ")", ":", "\n", "        ", "super", "(", "CALayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# global average pooling: feature --> point", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "# feature channel downscale and upscale --> channel weight", "\n", "self", ".", "conv_du", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", "//", "reduction", ",", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "n_feats", "//", "reduction", ",", "n_feats", ",", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx2.CALayer.forward": [[156, 160], ["FDIWNx2.CALayer.avg_pool", "FDIWNx2.CALayer.conv_du"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "self", ".", "avg_pool", "(", "x", ")", "\n", "y", "=", "self", ".", "conv_du", "(", "y", ")", "\n", "return", "x", "*", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx2.sa_layer.__init__": [[166, 177], ["torch.Module.__init__", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.Sigmoid", "torch.Sigmoid", "torch.GroupNorm", "torch.GroupNorm", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["def", "__init__", "(", "self", ",", "n_feats", ",", "groups", "=", "6", ")", ":", "\n", "        ", "super", "(", "sa_layer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "groups", "=", "groups", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "cweight", "=", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "n_feats", "//", "(", "2", "*", "groups", ")", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "cbias", "=", "Parameter", "(", "torch", ".", "ones", "(", "1", ",", "n_feats", "//", "(", "2", "*", "groups", ")", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "sweight", "=", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "n_feats", "//", "(", "2", "*", "groups", ")", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "sbias", "=", "Parameter", "(", "torch", ".", "ones", "(", "1", ",", "n_feats", "//", "(", "2", "*", "groups", ")", ",", "1", ",", "1", ")", ")", "\n", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "self", ".", "gn", "=", "nn", ".", "GroupNorm", "(", "n_feats", "//", "(", "2", "*", "groups", ")", ",", "n_feats", "//", "(", "2", "*", "groups", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx2.sa_layer.channel_shuffle": [[178, 189], ["x.reshape.reshape.reshape", "x.reshape.reshape.permute", "x.reshape.reshape.reshape"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "channel_shuffle", "(", "x", ",", "groups", ")", ":", "\n", "        ", "b", ",", "c", ",", "h", ",", "w", "=", "x", ".", "shape", "\n", "\n", "x", "=", "x", ".", "reshape", "(", "b", ",", "groups", ",", "-", "1", ",", "h", ",", "w", ")", "\n", "x", "=", "x", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ",", "4", ")", "\n", "\n", "# flatten", "\n", "x", "=", "x", ".", "reshape", "(", "b", ",", "-", "1", ",", "h", ",", "w", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx2.sa_layer.forward": [[190, 212], ["x.reshape.reshape.reshape", "x.reshape.reshape.chunk", "FDIWNx2.sa_layer.avg_pool", "FDIWNx2.sa_layer.gn", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "FDIWNx2.sa_layer.reshape", "FDIWNx2.sa_layer.channel_shuffle", "FDIWNx2.sa_layer.sigmoid", "FDIWNx2.sa_layer.sigmoid"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx3.sa_layer.channel_shuffle"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "b", ",", "c", ",", "h", ",", "w", "=", "x", ".", "shape", "\n", "\n", "x", "=", "x", ".", "reshape", "(", "b", "*", "self", ".", "groups", ",", "-", "1", ",", "h", ",", "w", ")", "\n", "x_0", ",", "x_1", "=", "x", ".", "chunk", "(", "2", ",", "dim", "=", "1", ")", "\n", "\n", "# channel attention", "\n", "xn", "=", "self", ".", "avg_pool", "(", "x_0", ")", "\n", "xn", "=", "self", ".", "cweight", "*", "xn", "+", "self", ".", "cbias", "\n", "xn", "=", "x_0", "*", "self", ".", "sigmoid", "(", "xn", ")", "\n", "\n", "# spatial attention", "\n", "xs", "=", "self", ".", "gn", "(", "x_1", ")", "\n", "xs", "=", "self", ".", "sweight", "*", "xs", "+", "self", ".", "sbias", "\n", "xs", "=", "x_1", "*", "self", ".", "sigmoid", "(", "xs", ")", "\n", "\n", "# concatenate along channel axis", "\n", "out", "=", "torch", ".", "cat", "(", "[", "xn", ",", "xs", "]", ",", "dim", "=", "1", ")", "\n", "out", "=", "out", ".", "reshape", "(", "b", ",", "-", "1", ",", "h", ",", "w", ")", "\n", "\n", "out", "=", "self", ".", "channel_shuffle", "(", "out", ",", "2", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx2.ShuffleBlock.__init__": [[214, 217], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "groups", ")", ":", "\n", "        ", "super", "(", "ShuffleBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "groups", "=", "groups", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx2.ShuffleBlock.forward": [[218, 224], ["x.size", "x.view().permute().contiguous().view", "x.view().permute().contiguous", "x.view().permute", "x.view", "int"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "'''Channel shuffle: [N,C,H,W] -> [N,g,C/g,H,W] -> [N,C/g,g,H,w] -> [N,C,H,W]'''", "\n", "N", ",", "C", ",", "H", ",", "W", "=", "x", ".", "size", "(", ")", "\n", "g", "=", "self", ".", "groups", "\n", "\n", "return", "x", ".", "view", "(", "N", ",", "g", ",", "int", "(", "C", "/", "g", ")", ",", "H", ",", "W", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ",", "4", ")", ".", "contiguous", "(", ")", ".", "view", "(", "N", ",", "C", ",", "H", ",", "W", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx2.MY.__init__": [[226, 257], ["torch.ReLU", "torch.ReLU", "torch.Module.__init__", "FDIWNx2.activation", "FDIWNx2.SRBW1", "FDIWNx2.SRBW1", "FDIWNx2.SRBW", "FDIWNx2.SRBW", "FDIWNx2.CoffConv", "FDIWNx2.CoffConv", "FDIWNx2.CoffConv", "FDIWNx2.CoffConv", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "FDIWNx2.Scale", "FDIWNx2.Scale", "FDIWNx2.SRBW1", "FDIWNx2.SRBW1", "FDIWNx2.SRBW2", "torch.Conv2d", "torch.Conv2d", "FDIWNx2.sa_layer", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx3.activation"], ["    ", "def", "__init__", "(", "self", ",", "n_feats", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ")", ":", "\n", "        ", "super", "(", "MY", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "act", "=", "activation", "(", "'lrelu'", ",", "neg_slope", "=", "0.05", ")", "\n", "wn", "=", "lambda", "x", ":", "torch", ".", "nn", ".", "utils", ".", "weight_norm", "(", "x", ")", "\n", "self", ".", "srb1", "=", "SRBW1", "(", "n_feats", ")", "\n", "self", ".", "srb2", "=", "SRBW1", "(", "n_feats", ")", "\n", "self", ".", "distilled_channels1", "=", "n_feats", "//", "2", "\n", "self", ".", "remaining_channels1", "=", "n_feats", "//", "2", "\n", "self", ".", "distilled_channels2", "=", "n_feats", "//", "2", "\n", "self", ".", "remaining_channels2", "=", "n_feats", "//", "2", "\n", "self", ".", "rb1", "=", "SRBW", "(", "n_feats", "//", "2", ",", "wn", "=", "wn", ",", "act", "=", "act", ")", "\n", "self", ".", "rb2", "=", "SRBW", "(", "n_feats", "//", "2", ",", "wn", "=", "wn", ",", "act", "=", "act", ")", "\n", "self", ".", "A1_coffconv", "=", "CoffConv", "(", "n_feats", ")", "\n", "self", ".", "B1_coffconv", "=", "CoffConv", "(", "n_feats", ")", "\n", "self", ".", "A2_coffconv", "=", "CoffConv", "(", "n_feats", ")", "\n", "self", ".", "B2_coffconv", "=", "CoffConv", "(", "n_feats", ")", "\n", "self", ".", "conv_distilled1", "=", "nn", ".", "Conv2d", "(", "n_feats", "//", "2", ",", "n_feats", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv_distilled2", "=", "nn", ".", "Conv2d", "(", "n_feats", "//", "2", ",", "n_feats", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "sigmoid1", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "self", ".", "sigmoid2", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "self", ".", "sigmoid3", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "self", ".", "scale_x1", "=", "Scale", "(", "1", ")", "\n", "self", ".", "scale_x2", "=", "Scale", "(", "1", ")", "\n", "self", ".", "srb3", "=", "SRBW1", "(", "n_feats", ")", "\n", "self", ".", "srb4", "=", "SRBW1", "(", "n_feats", ")", "\n", "self", ".", "fuse1", "=", "SRBW2", "(", "n_feats", "*", "2", ")", "#nn.Conv2d(2*n_feats, n_feats, kernel_size=3, stride=1, padding=1, bias=False, dilation=1)", "\n", "self", ".", "fuse2", "=", "nn", ".", "Conv2d", "(", "2", "*", "n_feats", ",", "n_feats", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ",", "dilation", "=", "1", ")", "\n", "#self.conv3_a = nn.Conv2d(n_feats, n_feats , kernel_size=3, stride=1, padding=1, bias=False)", "\n", "#self.conv3_b = nn.Conv2d(n_feats, n_feats , kernel_size=3, stride=1, padding=1, bias=False)", "\n", "self", ".", "SAlayer", "=", "sa_layer", "(", "n_feats", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx2.MY.forward": [[258, 289], ["FDIWNx2.MY.act", "torch.split", "torch.split", "torch.split", "torch.split", "FDIWNx2.MY.rb1", "FDIWNx2.MY.A1_coffconv", "FDIWNx2.MY.B1_coffconv", "FDIWNx2.MY.act", "torch.split", "torch.split", "torch.split", "torch.split", "FDIWNx2.MY.rb2", "FDIWNx2.MY.A2_coffconv", "FDIWNx2.MY.B2_coffconv", "FDIWNx2.MY.srb3", "FDIWNx2.MY.srb4", "FDIWNx2.MY.fuse1", "FDIWNx2.MY.sigmoid3", "FDIWNx2.MY.SAlayer", "FDIWNx2.MY.srb1", "FDIWNx2.MY.srb2", "FDIWNx2.MY.sigmoid1", "FDIWNx2.MY.sigmoid2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "FDIWNx2.MY.fuse2", "FDIWNx2.MY.conv_distilled1", "FDIWNx2.MY.conv_distilled2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "FDIWNx2.MY.scale_x1", "FDIWNx2.MY.scale_x2", "FDIWNx2.MY.scale_x1", "FDIWNx2.MY.scale_x2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out_a", "=", "self", ".", "act", "(", "self", ".", "srb1", "(", "x", ")", ")", "\n", "distilled_a1", ",", "remaining_a1", "=", "torch", ".", "split", "(", "out_a", ",", "(", "self", ".", "distilled_channels1", ",", "self", ".", "remaining_channels1", ")", ",", "dim", "=", "1", ")", "\n", "out_a", "=", "self", ".", "rb1", "(", "remaining_a1", ")", "\n", "A1", "=", "self", ".", "A1_coffconv", "(", "out_a", ")", "\n", "out_b_1", "=", "A1", "*", "out_a", "+", "x", "\n", "B1", "=", "self", ".", "B1_coffconv", "(", "x", ")", "\n", "out_a_1", "=", "B1", "*", "x", "+", "out_a", "\n", "\n", "out_b", "=", "self", ".", "act", "(", "self", ".", "srb2", "(", "out_b_1", ")", ")", "\n", "distilled_b1", ",", "remaining_b1", "=", "torch", ".", "split", "(", "out_b", ",", "(", "self", ".", "distilled_channels2", ",", "self", ".", "remaining_channels2", ")", ",", "dim", "=", "1", ")", "\n", "out_b", "=", "self", ".", "rb2", "(", "remaining_b1", ")", "\n", "A2", "=", "self", ".", "A2_coffconv", "(", "out_a_1", ")", "\n", "out_b_2", "=", "A2", "*", "out_a_1", "+", "out_b", "\n", "out_b_2", "=", "out_b_2", "*", "self", ".", "sigmoid1", "(", "self", ".", "conv_distilled1", "(", "distilled_b1", ")", ")", "\n", "B2", "=", "self", ".", "B2_coffconv", "(", "out_b", ")", "\n", "out_a_2", "=", "out_b", "*", "B2", "+", "out_a_1", "\n", "out_a_2", "=", "out_a_2", "*", "self", ".", "sigmoid2", "(", "self", ".", "conv_distilled2", "(", "distilled_a1", ")", ")", "\n", "\n", "out_a_out", "=", "self", ".", "srb3", "(", "out_a_2", ")", "#self.conv3_a(out_a_2) + out_a_2", "\n", "out_b_out", "=", "self", ".", "srb4", "(", "out_b_2", ")", "#self.conv3_b(out_b_2) + out_b_2", "\n", "\n", "out1", "=", "self", ".", "fuse1", "(", "torch", ".", "cat", "(", "[", "self", ".", "scale_x1", "(", "out_a_out", ")", ",", "self", ".", "scale_x2", "(", "out_b_out", ")", "]", ",", "dim", "=", "1", ")", ")", "\n", "out2", "=", "self", ".", "sigmoid3", "(", "self", ".", "fuse2", "(", "torch", ".", "cat", "(", "[", "self", ".", "scale_x1", "(", "out_a_out", ")", ",", "self", ".", "scale_x2", "(", "out_b_out", ")", "]", ",", "dim", "=", "1", ")", ")", ")", "\n", "\n", "out", "=", "out2", "*", "out_b_out", "\n", "y1", "=", "out1", "+", "out", "\n", "y2", "=", "y1", "+", "x", "\n", "out", "=", "self", ".", "SAlayer", "(", "y2", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx2.Li.__init__": [[291, 318], ["torch.ReLU", "torch.ReLU", "torch.Module.__init__", "FDIWNx2.activation", "FDIWNx2.MY", "FDIWNx2.MY", "FDIWNx2.MY", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "FDIWNx2.ShuffleBlock", "FDIWNx2.ShuffleBlock", "FDIWNx2.SRBW1", "FDIWNx2.Scale", "FDIWNx2.Scale", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx3.activation"], ["    ", "def", "__init__", "(", "self", ",", "n_feats", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ")", ":", "\n", "        ", "super", "(", "Li", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "act", "=", "activation", "(", "'lrelu'", ",", "neg_slope", "=", "0.05", ")", "\n", "wn", "=", "lambda", "x", ":", "torch", ".", "nn", ".", "utils", ".", "weight_norm", "(", "x", ")", "\n", "self", ".", "MY1", "=", "MY", "(", "n_feats", ")", "\n", "self", ".", "MY2", "=", "MY", "(", "n_feats", ")", "\n", "self", ".", "MY3", "=", "MY", "(", "n_feats", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "dilation", "=", "1", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "2", "*", "n_feats", ",", "n_feats", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "groups", "=", "4", ",", "bias", "=", "False", ",", "dilation", "=", "1", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "2", "*", "n_feats", ",", "n_feats", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "groups", "=", "4", ",", "bias", "=", "False", ",", "dilation", "=", "1", ")", "\n", "self", ".", "channel_shuffle1", "=", "ShuffleBlock", "(", "groups", "=", "4", ")", "\n", "self", ".", "channel_shuffle2", "=", "ShuffleBlock", "(", "groups", "=", "4", ")", "\n", "'''\n        modules_body = []\n        for i in range(2):\n            modules_body.append(nn.Conv2d(n_feats, n_feats, kernel_size = 3, padding=1,bias=False))\n            if bn: modules_body.append(nn.BatchNorm2d(n_feat))\n            if i == 0: modules_body.append(act)\n        modules_body.append(act)\n        modules_body.append(default_conv(n_feats, n_feats, 1))\n        modules_body.append(CALayer(n_feats, reduction=8))\n        self.body = nn.Sequential(*modules_body)\n        '''", "\n", "self", ".", "rb1", "=", "SRBW1", "(", "n_feats", ",", "wn", "=", "wn", ",", "act", "=", "act", ")", "\n", "self", ".", "scale_x", "=", "Scale", "(", "0.5", ")", "\n", "self", ".", "scale_res", "=", "Scale", "(", "0.5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx2.Li.forward": [[319, 333], ["FDIWNx2.Li.MY1", "FDIWNx2.Li.MY2", "FDIWNx2.Li.conv", "FDIWNx2.Li.MY3", "FDIWNx2.Li.conv1", "FDIWNx2.Li.conv2", "FDIWNx2.Li.rb1", "FDIWNx2.Li.channel_shuffle1", "FDIWNx2.Li.channel_shuffle1", "FDIWNx2.Li.scale_x", "FDIWNx2.Li.scale_res", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out1", "=", "self", ".", "MY1", "(", "x", ")", "\n", "out1_1", "=", "self", ".", "MY2", "(", "out1", ")", "\n", "out1_2", "=", "self", ".", "conv", "(", "out1", ")", "\n", "out2", "=", "out1_1", "+", "out1_2", "\n", "out3", "=", "self", ".", "MY3", "(", "out2", ")", "\n", "\n", "out_concat1", "=", "self", ".", "conv1", "(", "self", ".", "channel_shuffle1", "(", "torch", ".", "cat", "(", "[", "out1", ",", "out1_1", "]", ",", "dim", "=", "1", ")", ")", ")", "\n", "out_concat2", "=", "self", ".", "conv2", "(", "self", ".", "channel_shuffle1", "(", "torch", ".", "cat", "(", "[", "out_concat1", ",", "out3", "]", ",", "dim", "=", "1", ")", ")", ")", "\n", "\n", "res", "=", "self", ".", "rb1", "(", "x", ")", "\n", "out", "=", "self", ".", "scale_x", "(", "out_concat2", "+", "out3", ")", "+", "self", ".", "scale_res", "(", "res", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx2.MODEL.__init__": [[335, 366], ["torch.Module.__init__", "FDIWNx2.activation", "torch.Upsample", "torch.Upsample", "common.MeanShift", "common.MeanShift", "conv", "FDIWNx2.Li", "FDIWNx2.Li", "FDIWNx2.Li", "torch.Conv2d", "torch.Conv2d", "up_body.append", "up_body.append", "torch.Sequential", "torch.Sequential", "conv", "up_body.append", "up_body.append", "torch.Sequential", "torch.Sequential", "common.default_conv", "torch.PixelShuffle", "torch.PixelShuffle", "common.default_conv", "torch.PixelShuffle", "torch.PixelShuffle"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx3.activation", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.common.default_conv", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.common.default_conv"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "conv", "=", "default_conv", ")", ":", "\n", "        ", "super", "(", "MODEL", ",", "self", ")", ".", "__init__", "(", ")", "\n", "n_feats", "=", "64", "\n", "kernel_size", "=", "3", "\n", "n_colors", "=", "3", "\n", "out_channels", "=", "3", "\n", "upscale_factor", "=", "2", "\n", "self", ".", "act", "=", "activation", "(", "'lrelu'", ",", "neg_slope", "=", "0.05", ")", "\n", "self", ".", "Upsample", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "4", ",", "\n", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "rgb_mean", "=", "(", "0.4488", ",", "0.4371", ",", "0.4040", ")", "\n", "rgb_std", "=", "(", "1.0", ",", "1.0", ",", "1.0", ")", "\n", "self", ".", "Sub_mean", "=", "MeanShift", "(", "255", ",", "rgb_mean", ",", "rgb_std", ")", "\n", "self", ".", "Add_mean", "=", "MeanShift", "(", "255", ",", "rgb_mean", ",", "rgb_std", ",", "1", ")", "\n", "self", ".", "head", "=", "conv", "(", "n_colors", ",", "3", "*", "n_feats", "//", "8", ",", "kernel_size", ")", "\n", "self", ".", "Li1", "=", "Li", "(", "3", "*", "n_feats", "//", "8", ")", "\n", "self", ".", "Li2", "=", "Li", "(", "3", "*", "n_feats", "//", "8", ")", "\n", "self", ".", "Li3", "=", "Li", "(", "3", "*", "n_feats", "//", "8", ")", "\n", "#self.Li4 = Li(3*n_feats//8)", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", "*", "n_feats", "//", "8", ",", "n_feats", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "up_body", "=", "[", "]", "\n", "up_body", ".", "append", "(", "default_conv", "(", "n_feats", ",", "out_channels", "*", "4", ",", "kernel_size", "=", "3", ",", "bias", "=", "True", ")", ")", "\n", "up_body", ".", "append", "(", "nn", ".", "PixelShuffle", "(", "2", ")", ")", "\n", "self", ".", "UP1", "=", "nn", ".", "Sequential", "(", "*", "up_body", ")", "\n", "\n", "self", ".", "conv2", "=", "conv", "(", "n_colors", ",", "16", "*", "n_feats", "//", "16", ",", "kernel_size", ")", "\n", "up_body", "=", "[", "]", "\n", "up_body", ".", "append", "(", "default_conv", "(", "16", "*", "n_feats", "//", "16", ",", "out_channels", "*", "4", ",", "kernel_size", "=", "3", ",", "bias", "=", "True", ")", ")", "\n", "up_body", ".", "append", "(", "nn", ".", "PixelShuffle", "(", "2", ")", ")", "\n", "self", ".", "UP2", "=", "nn", ".", "Sequential", "(", "*", "up_body", ")", "\n", "#self.conv_last = conv(n_feats*4//16, out_channels=3, kernel_size=3)", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx2.MODEL.forward": [[369, 392], ["FDIWNx2.MODEL.Sub_mean", "FDIWNx2.MODEL.head", "FDIWNx2.MODEL.Li1", "FDIWNx2.MODEL.Li1", "FDIWNx2.MODEL.Li2", "FDIWNx2.MODEL.Li3", "FDIWNx2.MODEL.Li2", "FDIWNx2.MODEL.Li3", "FDIWNx2.MODEL.UP1", "FDIWNx2.MODEL.UP2", "FDIWNx2.MODEL.Add_mean", "FDIWNx2.MODEL.conv1", "FDIWNx2.MODEL.conv2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y_input", "=", "self", ".", "Sub_mean", "(", "x", ")", "\n", "y_input", "=", "self", ".", "head", "(", "y_input", ")", "# 32", "\n", "y_input", "=", "self", ".", "Li1", "(", "y_input", ")", "\n", "\n", "y_input_up1", "=", "self", ".", "Li1", "(", "y_input", ")", "\n", "y_input_down1", "=", "y_input", "+", "y_input_up1", "\n", "y_input_up2", "=", "self", ".", "Li2", "(", "y_input_down1", ")", "\n", "y_input_down2", "=", "y_input_down1", "+", "y_input_up2", "\n", "y_input_up3", "=", "self", ".", "Li3", "(", "y_input_down2", ")", "\n", "y_input_down3", "=", "y_input_down2", "+", "y_input_up3", "\n", "y_input_up4", "=", "self", ".", "Li2", "(", "y_input_down3", ")", "\n", "y_input_down4", "=", "y_input_down3", "+", "y_input_up4", "\n", "\n", "y_input_down5", "=", "self", ".", "Li3", "(", "y_input_down4", ")", "\n", "\n", "y_final", "=", "y_input", "+", "y_input_up1", "+", "y_input_up2", "+", "y_input_up3", "+", "y_input_up4", "+", "y_input_down5", "\n", "y1", "=", "self", ".", "UP1", "(", "self", ".", "conv1", "(", "y_final", ")", ")", "\n", "y2", "=", "self", ".", "UP2", "(", "self", ".", "conv2", "(", "x", ")", ")", "\n", "y", "=", "y1", "+", "y2", "\n", "output", "=", "self", ".", "Add_mean", "(", "y", ")", "\n", "\n", "return", "output", "", "", "", ""]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx2.make_model": [[8, 10], ["FDIWNx2.MODEL"], "function", ["None"], ["def", "make_model", "(", "args", ",", "parent", "=", "False", ")", ":", "\n", "    ", "return", "MODEL", "(", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx2.activation": [[21, 32], ["act_type.lower.lower", "torch.ReLU", "torch.LeakyReLU", "torch.PReLU", "NotImplementedError"], "function", ["None"], ["", "", "def", "activation", "(", "act_type", ",", "inplace", "=", "False", ",", "neg_slope", "=", "0.05", ",", "n_prelu", "=", "1", ")", ":", "\n", "    ", "act_type", "=", "act_type", ".", "lower", "(", ")", "\n", "if", "act_type", "==", "'relu'", ":", "\n", "        ", "layer", "=", "nn", ".", "ReLU", "(", ")", "\n", "", "elif", "act_type", "==", "'lrelu'", ":", "\n", "        ", "layer", "=", "nn", ".", "LeakyReLU", "(", "neg_slope", ")", "\n", "", "elif", "act_type", "==", "'prelu'", ":", "\n", "        ", "layer", "=", "nn", ".", "PReLU", "(", "num_parameters", "=", "n_prelu", ",", "init", "=", "neg_slope", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'activation layer [{:s}] is not found'", ".", "format", "(", "act_type", ")", ")", "\n", "", "return", "layer", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.common.MeanShift.__init__": [[15, 23], ["torch.Conv2d.__init__", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "torch.eye().view", "common.MeanShift.weight.data.div_", "common.MeanShift.bias.data.div_", "torch.Tensor.view", "torch.Tensor.view", "torch.Tensor.view", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye", "torch.eye"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["    ", "assert", "(", "x", ".", "dim", "(", ")", "==", "4", ")", "\n", "x_mean", "=", "mean_channels", "(", "x", ")", "\n", "x_var", "=", "(", "x", "-", "x_mean", ")", ".", "pow", "(", "2", ")", ".", "sum", "(", "3", ",", "keepdim", "=", "True", ")", ".", "sum", "(", "2", ",", "keepdim", "=", "True", ")", "/", "(", "x", ".", "shape", "[", "2", "]", "*", "x", ".", "shape", "[", "3", "]", ")", "\n", "return", "x_var", ".", "pow", "(", "0.5", ")", "\n", "\n", "", "def", "default_conv_stride2", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "bias", "=", "False", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "bias", "=", "bias", ")", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.common.BasicBlock.__init__": [[25, 36], ["torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Sequential.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "m.append", "m.append", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["", "def", "group_conv", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "bias", "=", "True", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "padding", "=", "(", "kernel_size", "//", "2", ")", ",", "groups", "=", "6", ",", "bias", "=", "bias", ")", "\n", "\n", "", "def", "default_conv", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "bias", "=", "True", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "\n", "padding", "=", "(", "kernel_size", "//", "2", ")", ",", "bias", "=", "bias", ")", "\n", "\n", "", "class", "MeanShift", "(", "nn", ".", "Conv2d", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ",", "sign", "=", "-", "1", ")", ":", "\n", "        ", "super", "(", "MeanShift", ",", "self", ")", ".", "__init__", "(", "3", ",", "3", ",", "kernel_size", "=", "1", ")", "\n", "std", "=", "torch", ".", "Tensor", "(", "rgb_std", ")", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.common.ResBlock.__init__": [[38, 51], ["torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Module.__init__", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "m.append", "conv", "m.append", "m.append", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["self", ".", "weight", ".", "data", ".", "div_", "(", "std", ".", "view", "(", "3", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "bias", ".", "data", "=", "sign", "*", "rgb_range", "*", "torch", ".", "Tensor", "(", "rgb_mean", ")", "\n", "self", ".", "bias", ".", "data", ".", "div_", "(", "std", ")", "\n", "self", ".", "requires_grad", "=", "False", "\n", "\n", "", "", "class", "BasicBlock", "(", "nn", ".", "Sequential", ")", ":", "\n", "    ", "def", "__init__", "(", "\n", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "1", ",", "bias", "=", "False", ",", "\n", "bn", "=", "True", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ")", ":", "\n", "\n", "        ", "m", "=", "[", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "\n", "padding", "=", "(", "kernel_size", "//", "2", ")", ",", "stride", "=", "stride", ",", "bias", "=", "bias", ")", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.common.ResBlock.forward": [[52, 57], ["common.ResBlock.body().mul", "common.ResBlock.body"], "methods", ["None"], ["if", "bn", ":", "m", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ")", "\n", "if", "act", "is", "not", "None", ":", "m", ".", "append", "(", "act", ")", "\n", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", "*", "m", ")", "\n", "\n", "", "", "class", "ResBlock", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.common.Upsampler.__init__": [[59, 77], ["torch.Sequential.__init__", "range", "int", "m.append", "m.append", "m.append", "m.append", "math.log", "conv", "torch.PixelShuffle", "torch.PixelShuffle", "torch.PixelShuffle", "m.append", "m.append", "conv", "torch.PixelShuffle", "torch.PixelShuffle", "torch.PixelShuffle", "m.append", "m.append", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "act", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "act"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", ":", "\n", "\n", "        ", "super", "(", "ResBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "m", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "2", ")", ":", "\n", "            ", "m", ".", "append", "(", "conv", "(", "n_feat", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "bias", ")", ")", "\n", "if", "bn", ":", "m", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "n_feat", ")", ")", "\n", "if", "i", "==", "0", ":", "m", ".", "append", "(", "act", ")", "\n", "\n", "", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "m", ")", "\n", "self", ".", "res_scale", "=", "res_scale", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "res", "=", "self", ".", "body", "(", "x", ")", ".", "mul", "(", "self", ".", "res_scale", ")", "\n", "res", "+=", "x", "\n", "\n", "return", "res", "\n", "\n", "", "", "class", "Upsampler", "(", "nn", ".", "Sequential", ")", ":", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.common.CEALayer.__init__": [[98, 105], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_feats", "=", "64", ",", "reduction", "=", "16", ")", ":", "\n", "        ", "super", "(", "CEALayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv_du", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", "//", "reduction", ",", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "n_feats", "//", "reduction", ",", "n_feats", ",", "5", ",", "padding", "=", "1", ",", "groups", "=", "n_feats", "//", "reduction", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.common.CEALayer.forward": [[107, 110], ["common.CEALayer.conv_du"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "self", ".", "conv_du", "(", "x", ")", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.common.mean_channels": [[9, 13], ["x.sum().sum", "x.dim", "x.sum"], "function", ["None"], ["def", "mean_channels", "(", "x", ")", ":", "\n", "    ", "assert", "(", "x", ".", "dim", "(", ")", "==", "4", ")", "\n", "spatial_sum", "=", "x", ".", "sum", "(", "3", ",", "keepdim", "=", "True", ")", ".", "sum", "(", "2", ",", "keepdim", "=", "True", ")", "\n", "return", "spatial_sum", "/", "(", "x", ".", "shape", "[", "2", "]", "*", "x", ".", "shape", "[", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.common.std": [[14, 19], ["common.mean_channels", "x_var.pow", "x.dim"], "function", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.common.mean_channels"], ["", "def", "std", "(", "x", ")", ":", "\n", "    ", "assert", "(", "x", ".", "dim", "(", ")", "==", "4", ")", "\n", "x_mean", "=", "mean_channels", "(", "x", ")", "\n", "x_var", "=", "(", "x", "-", "x_mean", ")", ".", "pow", "(", "2", ")", ".", "sum", "(", "3", ",", "keepdim", "=", "True", ")", ".", "sum", "(", "2", ",", "keepdim", "=", "True", ")", "/", "(", "x", ".", "shape", "[", "2", "]", "*", "x", ".", "shape", "[", "3", "]", ")", "\n", "return", "x_var", ".", "pow", "(", "0.5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.common.default_conv_stride2": [[20, 24], ["torch.Conv2d"], "function", ["None"], ["", "def", "default_conv_stride2", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "bias", "=", "False", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "bias", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.common.group_conv": [[25, 27], ["torch.Conv2d"], "function", ["None"], ["", "def", "group_conv", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "bias", "=", "True", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "padding", "=", "(", "kernel_size", "//", "2", ")", ",", "groups", "=", "6", ",", "bias", "=", "bias", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.common.default_conv": [[9, 13], ["torch.Conv2d"], "function", ["None"], ["def", "mean_channels", "(", "x", ")", ":", "\n", "    ", "assert", "(", "x", ".", "dim", "(", ")", "==", "4", ")", "\n", "spatial_sum", "=", "x", ".", "sum", "(", "3", ",", "keepdim", "=", "True", ")", ".", "sum", "(", "2", ",", "keepdim", "=", "True", ")", "\n", "return", "spatial_sum", "/", "(", "x", ".", "shape", "[", "2", "]", "*", "x", ".", "shape", "[", "3", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx4.Scale.__init__": [[13, 16], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "init_value", "=", "1e-3", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "scale", "=", "nn", ".", "Parameter", "(", "torch", ".", "FloatTensor", "(", "[", "init_value", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx4.Scale.forward": [[17, 19], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "input", "*", "self", ".", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx4.SRBW.__init__": [[34, 51], ["torch.ReLU", "torch.ReLU", "torch.Module.__init__", "FDIWNx4.Scale", "FDIWNx4.Scale", "torch.Conv2d", "torch.Conv2d", "body.append", "body.append", "body.append", "body.append", "torch.Sequential", "torch.Sequential", "FDIWNx4.sa_layer", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "wn", "wn", "wn", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "n_feats", ",", "wn", "=", "lambda", "x", ":", "torch", ".", "nn", ".", "utils", ".", "weight_norm", "(", "x", ")", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ")", ":", "\n", "        ", "super", "(", "SRBW", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "res_scale", "=", "Scale", "(", "1", ")", "\n", "self", ".", "x_scale", "=", "Scale", "(", "1", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", "*", "2", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "body", "=", "[", "]", "\n", "body", ".", "append", "(", "\n", "wn", "(", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", "*", "9", "//", "2", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", ")", ")", "\n", "body", ".", "append", "(", "act", ")", "\n", "body", ".", "append", "(", "\n", "wn", "(", "nn", ".", "Conv2d", "(", "n_feats", "*", "9", "//", "2", ",", "n_feats", "//", "1", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", ")", ")", "\n", "body", ".", "append", "(", "\n", "wn", "(", "nn", ".", "Conv2d", "(", "n_feats", "//", "1", ",", "n_feats", "*", "2", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ")", ")", "\n", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "body", ")", "\n", "self", ".", "SAlayer", "=", "sa_layer", "(", "2", "*", "n_feats", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx4.SRBW.forward": [[52, 55], ["FDIWNx4.SRBW.res_scale", "FDIWNx4.SRBW.x_scale", "FDIWNx4.SRBW.SAlayer", "FDIWNx4.SRBW.conv", "FDIWNx4.SRBW.body"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "self", ".", "res_scale", "(", "self", ".", "SAlayer", "(", "self", ".", "body", "(", "x", ")", ")", ")", "+", "self", ".", "x_scale", "(", "self", ".", "conv", "(", "x", ")", ")", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx4.SRBW1.__init__": [[57, 73], ["torch.ReLU", "torch.ReLU", "torch.Module.__init__", "FDIWNx4.Scale", "FDIWNx4.Scale", "body.append", "body.append", "body.append", "body.append", "torch.Sequential", "torch.Sequential", "FDIWNx4.sa_layer", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "wn", "wn", "wn", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "n_feats", ",", "wn", "=", "lambda", "x", ":", "torch", ".", "nn", ".", "utils", ".", "weight_norm", "(", "x", ")", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ")", ":", "\n", "        ", "super", "(", "SRBW1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "res_scale", "=", "Scale", "(", "1", ")", "\n", "self", ".", "x_scale", "=", "Scale", "(", "1", ")", "\n", "body", "=", "[", "]", "\n", "body", ".", "append", "(", "\n", "wn", "(", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", "*", "5", "//", "2", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", ")", ")", "\n", "body", ".", "append", "(", "act", ")", "\n", "body", ".", "append", "(", "\n", "wn", "(", "nn", ".", "Conv2d", "(", "n_feats", "*", "5", "//", "2", ",", "n_feats", "//", "2", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", ")", ")", "\n", "body", ".", "append", "(", "\n", "wn", "(", "nn", ".", "Conv2d", "(", "n_feats", "//", "2", ",", "n_feats", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ")", ")", "\n", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "body", ")", "\n", "self", ".", "SAlayer", "=", "sa_layer", "(", "n_feats", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx4.SRBW1.forward": [[74, 77], ["FDIWNx4.SRBW1.res_scale", "FDIWNx4.SRBW1.x_scale", "FDIWNx4.SRBW1.SAlayer", "FDIWNx4.SRBW1.body"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "self", ".", "res_scale", "(", "self", ".", "SAlayer", "(", "self", ".", "body", "(", "x", ")", ")", ")", "+", "self", ".", "x_scale", "(", "x", ")", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx4.SRBW2.__init__": [[79, 96], ["torch.ReLU", "torch.ReLU", "torch.Module.__init__", "FDIWNx4.Scale", "FDIWNx4.Scale", "body.append", "body.append", "body.append", "body.append", "torch.Sequential", "torch.Sequential", "FDIWNx4.sa_layer", "torch.Conv2d", "torch.Conv2d", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "wn", "wn", "wn", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "n_feats", ",", "wn", "=", "lambda", "x", ":", "torch", ".", "nn", ".", "utils", ".", "weight_norm", "(", "x", ")", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ")", ":", "\n", "        ", "super", "(", "SRBW2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "res_scale", "=", "Scale", "(", "1", ")", "\n", "self", ".", "x_scale", "=", "Scale", "(", "1", ")", "\n", "body", "=", "[", "]", "\n", "body", ".", "append", "(", "\n", "wn", "(", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", "*", "9", "//", "4", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", ")", ")", "\n", "body", ".", "append", "(", "act", ")", "\n", "body", ".", "append", "(", "\n", "wn", "(", "nn", ".", "Conv2d", "(", "n_feats", "*", "9", "//", "4", ",", "n_feats", "//", "2", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", ")", ")", "\n", "body", ".", "append", "(", "\n", "wn", "(", "nn", ".", "Conv2d", "(", "n_feats", "//", "2", ",", "n_feats", "//", "2", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ")", ")", "\n", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "body", ")", "\n", "self", ".", "SAlayer", "=", "sa_layer", "(", "n_feats", "//", "2", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", "//", "2", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx4.SRBW2.forward": [[97, 100], ["FDIWNx4.SRBW2.res_scale", "FDIWNx4.SRBW2.x_scale", "FDIWNx4.SRBW2.SAlayer", "FDIWNx4.SRBW2.conv", "FDIWNx4.SRBW2.body"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "self", ".", "res_scale", "(", "self", ".", "SAlayer", "(", "self", ".", "body", "(", "x", ")", ")", ")", "+", "self", ".", "x_scale", "(", "self", ".", "conv", "(", "x", ")", ")", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx4.CoffConv.__init__": [[103, 121], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Sigmoid", "torch.Sigmoid", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_feats", ")", ":", "\n", "        ", "super", "(", "CoffConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "upper_branch", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", "//", "8", ",", "1", ",", "1", ",", "0", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "n_feats", "//", "8", ",", "n_feats", ",", "1", ",", "1", ",", "0", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "\n", "self", ".", "std", "=", "std", "\n", "self", ".", "lower_branch", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", "//", "8", ",", "1", ",", "1", ",", "0", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "n_feats", "//", "8", ",", "n_feats", ",", "1", ",", "1", ",", "0", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx4.CoffConv.forward": [[123, 131], ["FDIWNx4.CoffConv.upper_branch", "FDIWNx4.CoffConv.std", "FDIWNx4.CoffConv.lower_branch", "torch.add", "torch.add", "torch.add", "torch.add"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.common.std"], ["", "def", "forward", "(", "self", ",", "fea", ")", ":", "\n", "        ", "upper", "=", "self", ".", "upper_branch", "(", "fea", ")", "\n", "lower", "=", "self", ".", "std", "(", "fea", ")", "\n", "lower", "=", "self", ".", "lower_branch", "(", "lower", ")", "\n", "\n", "out", "=", "torch", ".", "add", "(", "upper", ",", "lower", ")", "/", "2", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx4.sa_layer.__init__": [[137, 148], ["torch.Module.__init__", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.Sigmoid", "torch.Sigmoid", "torch.GroupNorm", "torch.GroupNorm", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["def", "__init__", "(", "self", ",", "n_feats", ",", "groups", "=", "6", ")", ":", "\n", "        ", "super", "(", "sa_layer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "groups", "=", "groups", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "cweight", "=", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "n_feats", "//", "(", "2", "*", "groups", ")", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "cbias", "=", "Parameter", "(", "torch", ".", "ones", "(", "1", ",", "n_feats", "//", "(", "2", "*", "groups", ")", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "sweight", "=", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "n_feats", "//", "(", "2", "*", "groups", ")", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "sbias", "=", "Parameter", "(", "torch", ".", "ones", "(", "1", ",", "n_feats", "//", "(", "2", "*", "groups", ")", ",", "1", ",", "1", ")", ")", "\n", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "self", ".", "gn", "=", "nn", ".", "GroupNorm", "(", "n_feats", "//", "(", "2", "*", "groups", ")", ",", "n_feats", "//", "(", "2", "*", "groups", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx4.sa_layer.channel_shuffle": [[149, 160], ["x.reshape.reshape.reshape", "x.reshape.reshape.permute", "x.reshape.reshape.reshape"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "channel_shuffle", "(", "x", ",", "groups", ")", ":", "\n", "        ", "b", ",", "c", ",", "h", ",", "w", "=", "x", ".", "shape", "\n", "\n", "x", "=", "x", ".", "reshape", "(", "b", ",", "groups", ",", "-", "1", ",", "h", ",", "w", ")", "\n", "x", "=", "x", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ",", "4", ")", "\n", "\n", "# flatten", "\n", "x", "=", "x", ".", "reshape", "(", "b", ",", "-", "1", ",", "h", ",", "w", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx4.sa_layer.forward": [[161, 183], ["x.reshape.reshape.reshape", "x.reshape.reshape.chunk", "FDIWNx4.sa_layer.avg_pool", "FDIWNx4.sa_layer.gn", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "FDIWNx4.sa_layer.reshape", "FDIWNx4.sa_layer.channel_shuffle", "FDIWNx4.sa_layer.sigmoid", "FDIWNx4.sa_layer.sigmoid"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx3.sa_layer.channel_shuffle"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "b", ",", "c", ",", "h", ",", "w", "=", "x", ".", "shape", "\n", "\n", "x", "=", "x", ".", "reshape", "(", "b", "*", "self", ".", "groups", ",", "-", "1", ",", "h", ",", "w", ")", "\n", "x_0", ",", "x_1", "=", "x", ".", "chunk", "(", "2", ",", "dim", "=", "1", ")", "\n", "\n", "# channel attention", "\n", "xn", "=", "self", ".", "avg_pool", "(", "x_0", ")", "\n", "xn", "=", "self", ".", "cweight", "*", "xn", "+", "self", ".", "cbias", "\n", "xn", "=", "x_0", "*", "self", ".", "sigmoid", "(", "xn", ")", "\n", "\n", "# spatial attention", "\n", "xs", "=", "self", ".", "gn", "(", "x_1", ")", "\n", "xs", "=", "self", ".", "sweight", "*", "xs", "+", "self", ".", "sbias", "\n", "xs", "=", "x_1", "*", "self", ".", "sigmoid", "(", "xs", ")", "\n", "\n", "# concatenate along channel axis", "\n", "out", "=", "torch", ".", "cat", "(", "[", "xn", ",", "xs", "]", ",", "dim", "=", "1", ")", "\n", "out", "=", "out", ".", "reshape", "(", "b", ",", "-", "1", ",", "h", ",", "w", ")", "\n", "\n", "out", "=", "self", ".", "channel_shuffle", "(", "out", ",", "2", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx4.ShuffleBlock.__init__": [[185, 188], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "groups", ")", ":", "\n", "        ", "super", "(", "ShuffleBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "groups", "=", "groups", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx4.ShuffleBlock.forward": [[189, 195], ["x.size", "x.view().permute().contiguous().view", "x.view().permute().contiguous", "x.view().permute", "x.view", "int"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "'''Channel shuffle: [N,C,H,W] -> [N,g,C/g,H,W] -> [N,C/g,g,H,w] -> [N,C,H,W]'''", "\n", "N", ",", "C", ",", "H", ",", "W", "=", "x", ".", "size", "(", ")", "\n", "g", "=", "self", ".", "groups", "\n", "\n", "return", "x", ".", "view", "(", "N", ",", "g", ",", "int", "(", "C", "/", "g", ")", ",", "H", ",", "W", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ",", "4", ")", ".", "contiguous", "(", ")", ".", "view", "(", "N", ",", "C", ",", "H", ",", "W", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx4.MY.__init__": [[197, 226], ["torch.ReLU", "torch.ReLU", "torch.Module.__init__", "FDIWNx4.activation", "FDIWNx4.SRBW1", "FDIWNx4.SRBW1", "FDIWNx4.SRBW", "FDIWNx4.SRBW", "FDIWNx4.CoffConv", "FDIWNx4.CoffConv", "FDIWNx4.CoffConv", "FDIWNx4.CoffConv", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "FDIWNx4.Scale", "FDIWNx4.Scale", "FDIWNx4.SRBW1", "FDIWNx4.SRBW1", "FDIWNx4.SRBW2", "torch.Conv2d", "torch.Conv2d", "FDIWNx4.sa_layer", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx3.activation"], ["    ", "def", "__init__", "(", "self", ",", "n_feats", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ")", ":", "\n", "        ", "super", "(", "MY", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "act", "=", "activation", "(", "'lrelu'", ",", "neg_slope", "=", "0.05", ")", "\n", "wn", "=", "lambda", "x", ":", "torch", ".", "nn", ".", "utils", ".", "weight_norm", "(", "x", ")", "\n", "self", ".", "srb1", "=", "SRBW1", "(", "n_feats", ")", "\n", "self", ".", "srb2", "=", "SRBW1", "(", "n_feats", ")", "\n", "self", ".", "distilled_channels1", "=", "n_feats", "//", "2", "\n", "self", ".", "remaining_channels1", "=", "n_feats", "//", "2", "\n", "self", ".", "distilled_channels2", "=", "n_feats", "//", "2", "\n", "self", ".", "remaining_channels2", "=", "n_feats", "//", "2", "\n", "self", ".", "rb1", "=", "SRBW", "(", "n_feats", "//", "2", ",", "wn", "=", "wn", ",", "act", "=", "act", ")", "\n", "self", ".", "rb2", "=", "SRBW", "(", "n_feats", "//", "2", ",", "wn", "=", "wn", ",", "act", "=", "act", ")", "\n", "self", ".", "A1_coffconv", "=", "CoffConv", "(", "n_feats", ")", "\n", "self", ".", "B1_coffconv", "=", "CoffConv", "(", "n_feats", ")", "\n", "self", ".", "A2_coffconv", "=", "CoffConv", "(", "n_feats", ")", "\n", "self", ".", "B2_coffconv", "=", "CoffConv", "(", "n_feats", ")", "\n", "self", ".", "conv_distilled1", "=", "nn", ".", "Conv2d", "(", "n_feats", "//", "2", ",", "n_feats", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv_distilled2", "=", "nn", ".", "Conv2d", "(", "n_feats", "//", "2", ",", "n_feats", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "sigmoid1", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "self", ".", "sigmoid2", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "self", ".", "sigmoid3", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "self", ".", "scale_x1", "=", "Scale", "(", "1", ")", "\n", "self", ".", "scale_x2", "=", "Scale", "(", "1", ")", "\n", "self", ".", "srb3", "=", "SRBW1", "(", "n_feats", ")", "\n", "self", ".", "srb4", "=", "SRBW1", "(", "n_feats", ")", "\n", "self", ".", "fuse1", "=", "SRBW2", "(", "n_feats", "*", "2", ")", "\n", "self", ".", "fuse2", "=", "nn", ".", "Conv2d", "(", "2", "*", "n_feats", ",", "n_feats", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ",", "dilation", "=", "1", ")", "\n", "self", ".", "SAlayer", "=", "sa_layer", "(", "n_feats", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx4.MY.forward": [[227, 258], ["FDIWNx4.MY.act", "torch.split", "torch.split", "torch.split", "torch.split", "FDIWNx4.MY.rb1", "FDIWNx4.MY.A1_coffconv", "FDIWNx4.MY.B1_coffconv", "FDIWNx4.MY.act", "torch.split", "torch.split", "torch.split", "torch.split", "FDIWNx4.MY.rb2", "FDIWNx4.MY.A2_coffconv", "FDIWNx4.MY.B2_coffconv", "FDIWNx4.MY.srb3", "FDIWNx4.MY.srb4", "FDIWNx4.MY.fuse1", "FDIWNx4.MY.sigmoid3", "FDIWNx4.MY.SAlayer", "FDIWNx4.MY.srb1", "FDIWNx4.MY.srb2", "FDIWNx4.MY.sigmoid1", "FDIWNx4.MY.sigmoid2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "FDIWNx4.MY.fuse2", "FDIWNx4.MY.conv_distilled1", "FDIWNx4.MY.conv_distilled2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "FDIWNx4.MY.scale_x1", "FDIWNx4.MY.scale_x2", "FDIWNx4.MY.scale_x1", "FDIWNx4.MY.scale_x2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out_a", "=", "self", ".", "act", "(", "self", ".", "srb1", "(", "x", ")", ")", "\n", "distilled_a1", ",", "remaining_a1", "=", "torch", ".", "split", "(", "out_a", ",", "(", "self", ".", "distilled_channels1", ",", "self", ".", "remaining_channels1", ")", ",", "dim", "=", "1", ")", "\n", "out_a", "=", "self", ".", "rb1", "(", "remaining_a1", ")", "\n", "A1", "=", "self", ".", "A1_coffconv", "(", "out_a", ")", "\n", "out_b_1", "=", "A1", "*", "out_a", "+", "x", "\n", "B1", "=", "self", ".", "B1_coffconv", "(", "x", ")", "\n", "out_a_1", "=", "B1", "*", "x", "+", "out_a", "\n", "\n", "out_b", "=", "self", ".", "act", "(", "self", ".", "srb2", "(", "out_b_1", ")", ")", "\n", "distilled_b1", ",", "remaining_b1", "=", "torch", ".", "split", "(", "out_b", ",", "(", "self", ".", "distilled_channels2", ",", "self", ".", "remaining_channels2", ")", ",", "dim", "=", "1", ")", "\n", "out_b", "=", "self", ".", "rb2", "(", "remaining_b1", ")", "\n", "A2", "=", "self", ".", "A2_coffconv", "(", "out_a_1", ")", "\n", "out_b_2", "=", "A2", "*", "out_a_1", "+", "out_b", "\n", "out_b_2", "=", "out_b_2", "*", "self", ".", "sigmoid1", "(", "self", ".", "conv_distilled1", "(", "distilled_b1", ")", ")", "\n", "B2", "=", "self", ".", "B2_coffconv", "(", "out_b", ")", "\n", "out_a_2", "=", "out_b", "*", "B2", "+", "out_a_1", "\n", "out_a_2", "=", "out_a_2", "*", "self", ".", "sigmoid2", "(", "self", ".", "conv_distilled2", "(", "distilled_a1", ")", ")", "\n", "\n", "out_a_out", "=", "self", ".", "srb3", "(", "out_a_2", ")", "\n", "out_b_out", "=", "self", ".", "srb4", "(", "out_b_2", ")", "\n", "\n", "out1", "=", "self", ".", "fuse1", "(", "torch", ".", "cat", "(", "[", "self", ".", "scale_x1", "(", "out_a_out", ")", ",", "self", ".", "scale_x2", "(", "out_b_out", ")", "]", ",", "dim", "=", "1", ")", ")", "\n", "out2", "=", "self", ".", "sigmoid3", "(", "self", ".", "fuse2", "(", "torch", ".", "cat", "(", "[", "self", ".", "scale_x1", "(", "out_a_out", ")", ",", "self", ".", "scale_x2", "(", "out_b_out", ")", "]", ",", "dim", "=", "1", ")", ")", ")", "\n", "\n", "out", "=", "out2", "*", "out_b_out", "\n", "y1", "=", "out1", "+", "out", "\n", "y2", "=", "y1", "+", "x", "\n", "out", "=", "self", ".", "SAlayer", "(", "y2", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx4.Li.__init__": [[260, 276], ["torch.ReLU", "torch.ReLU", "torch.Module.__init__", "FDIWNx4.activation", "FDIWNx4.MY", "FDIWNx4.MY", "FDIWNx4.MY", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "FDIWNx4.ShuffleBlock", "FDIWNx4.ShuffleBlock", "FDIWNx4.SRBW1", "FDIWNx4.Scale", "FDIWNx4.Scale", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx3.activation"], ["    ", "def", "__init__", "(", "self", ",", "n_feats", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ")", ":", "\n", "        ", "super", "(", "Li", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "act", "=", "activation", "(", "'lrelu'", ",", "neg_slope", "=", "0.05", ")", "\n", "wn", "=", "lambda", "x", ":", "torch", ".", "nn", ".", "utils", ".", "weight_norm", "(", "x", ")", "\n", "self", ".", "MY1", "=", "MY", "(", "n_feats", ")", "\n", "self", ".", "MY2", "=", "MY", "(", "n_feats", ")", "\n", "self", ".", "MY3", "=", "MY", "(", "n_feats", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "dilation", "=", "1", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "2", "*", "n_feats", ",", "n_feats", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "groups", "=", "4", ",", "bias", "=", "False", ",", "dilation", "=", "1", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "2", "*", "n_feats", ",", "n_feats", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "groups", "=", "4", ",", "bias", "=", "False", ",", "dilation", "=", "1", ")", "\n", "self", ".", "channel_shuffle1", "=", "ShuffleBlock", "(", "groups", "=", "4", ")", "\n", "self", ".", "channel_shuffle2", "=", "ShuffleBlock", "(", "groups", "=", "4", ")", "\n", "self", ".", "rb1", "=", "SRBW1", "(", "n_feats", ",", "wn", "=", "wn", ",", "act", "=", "act", ")", "\n", "self", ".", "scale_x", "=", "Scale", "(", "0.5", ")", "\n", "self", ".", "scale_res", "=", "Scale", "(", "0.5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx4.Li.forward": [[277, 291], ["FDIWNx4.Li.MY1", "FDIWNx4.Li.MY2", "FDIWNx4.Li.conv", "FDIWNx4.Li.MY3", "FDIWNx4.Li.conv1", "FDIWNx4.Li.conv2", "FDIWNx4.Li.rb1", "FDIWNx4.Li.channel_shuffle1", "FDIWNx4.Li.channel_shuffle1", "FDIWNx4.Li.scale_x", "FDIWNx4.Li.scale_res", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out1", "=", "self", ".", "MY1", "(", "x", ")", "\n", "out1_1", "=", "self", ".", "MY2", "(", "out1", ")", "\n", "out1_2", "=", "self", ".", "conv", "(", "out1", ")", "\n", "out2", "=", "out1_1", "+", "out1_2", "\n", "out3", "=", "self", ".", "MY3", "(", "out2", ")", "\n", "\n", "out_concat1", "=", "self", ".", "conv1", "(", "self", ".", "channel_shuffle1", "(", "torch", ".", "cat", "(", "[", "out1", ",", "out1_1", "]", ",", "dim", "=", "1", ")", ")", ")", "\n", "out_concat2", "=", "self", ".", "conv2", "(", "self", ".", "channel_shuffle1", "(", "torch", ".", "cat", "(", "[", "out_concat1", ",", "out3", "]", ",", "dim", "=", "1", ")", ")", ")", "\n", "\n", "res", "=", "self", ".", "rb1", "(", "x", ")", "\n", "out", "=", "self", ".", "scale_x", "(", "out_concat2", "+", "out3", ")", "+", "self", ".", "scale_res", "(", "res", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx4.MODEL.__init__": [[293, 323], ["torch.Module.__init__", "FDIWNx4.activation", "torch.Upsample", "torch.Upsample", "common.MeanShift", "common.MeanShift", "conv", "FDIWNx4.Li", "FDIWNx4.Li", "FDIWNx4.Li", "torch.Conv2d", "torch.Conv2d", "up_body.append", "up_body.append", "torch.Sequential", "torch.Sequential", "conv", "up_body.append", "up_body.append", "torch.Sequential", "torch.Sequential", "common.default_conv", "torch.PixelShuffle", "torch.PixelShuffle", "common.default_conv", "torch.PixelShuffle", "torch.PixelShuffle"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx3.activation", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.common.default_conv", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.common.default_conv"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "conv", "=", "default_conv", ")", ":", "\n", "        ", "super", "(", "MODEL", ",", "self", ")", ".", "__init__", "(", ")", "\n", "n_feats", "=", "args", ".", "n_feats", "\n", "kernel_size", "=", "3", "\n", "n_colors", "=", "3", "\n", "out_channels", "=", "3", "\n", "upscale_factor", "=", "2", "\n", "self", ".", "act", "=", "activation", "(", "'lrelu'", ",", "neg_slope", "=", "0.05", ")", "\n", "self", ".", "Upsample", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "4", ",", "\n", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "rgb_mean", "=", "(", "0.4488", ",", "0.4371", ",", "0.4040", ")", "\n", "rgb_std", "=", "(", "1.0", ",", "1.0", ",", "1.0", ")", "\n", "self", ".", "Sub_mean", "=", "MeanShift", "(", "255", ",", "rgb_mean", ",", "rgb_std", ")", "\n", "self", ".", "Add_mean", "=", "MeanShift", "(", "255", ",", "rgb_mean", ",", "rgb_std", ",", "1", ")", "\n", "self", ".", "head", "=", "conv", "(", "n_colors", ",", "3", "*", "n_feats", "//", "8", ",", "kernel_size", ")", "\n", "self", ".", "Li1", "=", "Li", "(", "3", "*", "n_feats", "//", "8", ")", "\n", "self", ".", "Li2", "=", "Li", "(", "3", "*", "n_feats", "//", "8", ")", "\n", "self", ".", "Li3", "=", "Li", "(", "3", "*", "n_feats", "//", "8", ")", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", "*", "n_feats", "//", "8", ",", "n_feats", "//", "2", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "up_body", "=", "[", "]", "\n", "up_body", ".", "append", "(", "default_conv", "(", "n_feats", "//", "2", ",", "out_channels", "*", "16", ",", "kernel_size", "=", "3", ",", "bias", "=", "True", ")", ")", "\n", "up_body", ".", "append", "(", "nn", ".", "PixelShuffle", "(", "4", ")", ")", "\n", "self", ".", "UP1", "=", "nn", ".", "Sequential", "(", "*", "up_body", ")", "\n", "\n", "self", ".", "conv2", "=", "conv", "(", "n_colors", ",", "8", "*", "n_feats", "//", "16", ",", "kernel_size", ")", "\n", "up_body", "=", "[", "]", "\n", "up_body", ".", "append", "(", "default_conv", "(", "8", "*", "n_feats", "//", "16", ",", "out_channels", "*", "16", ",", "kernel_size", "=", "3", ",", "bias", "=", "True", ")", ")", "\n", "up_body", ".", "append", "(", "nn", ".", "PixelShuffle", "(", "4", ")", ")", "\n", "self", ".", "UP2", "=", "nn", ".", "Sequential", "(", "*", "up_body", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx4.MODEL.forward": [[325, 348], ["FDIWNx4.MODEL.Sub_mean", "FDIWNx4.MODEL.head", "FDIWNx4.MODEL.Li1", "FDIWNx4.MODEL.Li1", "FDIWNx4.MODEL.Li2", "FDIWNx4.MODEL.Li3", "FDIWNx4.MODEL.Li2", "FDIWNx4.MODEL.Li3", "FDIWNx4.MODEL.UP1", "FDIWNx4.MODEL.UP2", "FDIWNx4.MODEL.Add_mean", "FDIWNx4.MODEL.conv1", "FDIWNx4.MODEL.conv2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y_input1", "=", "self", ".", "Sub_mean", "(", "x", ")", "\n", "y_input", "=", "self", ".", "head", "(", "y_input1", ")", "# 32", "\n", "y_input", "=", "self", ".", "Li1", "(", "y_input", ")", "\n", "\n", "y_input_up1", "=", "self", ".", "Li1", "(", "y_input", ")", "\n", "y_input_down1", "=", "y_input", "+", "y_input_up1", "\n", "y_input_up2", "=", "self", ".", "Li2", "(", "y_input_down1", ")", "\n", "y_input_down2", "=", "y_input_down1", "+", "y_input_up2", "\n", "y_input_up3", "=", "self", ".", "Li3", "(", "y_input_down2", ")", "\n", "y_input_down3", "=", "y_input_down2", "+", "y_input_up3", "\n", "y_input_up4", "=", "self", ".", "Li2", "(", "y_input_down3", ")", "\n", "y_input_down4", "=", "y_input_down3", "+", "y_input_up4", "\n", "\n", "y_input_down5", "=", "self", ".", "Li3", "(", "y_input_down4", ")", "\n", "\n", "y_final", "=", "y_input", "+", "y_input_up1", "+", "y_input_up2", "+", "y_input_up3", "+", "y_input_up4", "+", "y_input_down5", "\n", "y1", "=", "self", ".", "UP1", "(", "self", ".", "conv1", "(", "y_final", ")", ")", "\n", "y2", "=", "self", ".", "UP2", "(", "self", ".", "conv2", "(", "y_input1", ")", ")", "\n", "y", "=", "y1", "+", "y2", "\n", "output", "=", "self", ".", "Add_mean", "(", "y", ")", "\n", "\n", "return", "output", "", "", "", ""]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx4.make_model": [[8, 10], ["FDIWNx4.MODEL"], "function", ["None"], ["def", "make_model", "(", "args", ",", "parent", "=", "False", ")", ":", "\n", "    ", "return", "MODEL", "(", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx4.activation": [[21, 32], ["act_type.lower.lower", "torch.ReLU", "torch.LeakyReLU", "torch.PReLU", "NotImplementedError"], "function", ["None"], ["", "", "def", "activation", "(", "act_type", ",", "inplace", "=", "False", ",", "neg_slope", "=", "0.05", ",", "n_prelu", "=", "1", ")", ":", "\n", "    ", "act_type", "=", "act_type", ".", "lower", "(", ")", "\n", "if", "act_type", "==", "'relu'", ":", "\n", "        ", "layer", "=", "nn", ".", "ReLU", "(", ")", "\n", "", "elif", "act_type", "==", "'lrelu'", ":", "\n", "        ", "layer", "=", "nn", ".", "LeakyReLU", "(", "neg_slope", ")", "\n", "", "elif", "act_type", "==", "'prelu'", ":", "\n", "        ", "layer", "=", "nn", ".", "PReLU", "(", "num_parameters", "=", "n_prelu", ",", "init", "=", "neg_slope", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'activation layer [{:s}] is not found'", ".", "format", "(", "act_type", ")", ")", "\n", "", "return", "layer", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.__init__.Model.__init__": [[9, 37], ["torch.Module.__init__", "print", "torch.device", "torch.device", "torch.device", "torch.device", "importlib.import_module", "importlib.import_module.make_model().to", "__init__.Model.load", "__init__.Model.model.half", "torch.DataParallel", "torch.DataParallel", "print", "args.model.lower", "importlib.import_module.make_model", "range"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.ddbpn.make_model"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "ckp", ")", ":", "\n", "        ", "super", "(", "Model", ",", "self", ")", ".", "__init__", "(", ")", "\n", "print", "(", "'Making model...'", ")", "\n", "\n", "self", ".", "scale", "=", "args", ".", "scale", "\n", "self", ".", "idx_scale", "=", "0", "\n", "self", ".", "self_ensemble", "=", "args", ".", "self_ensemble", "\n", "self", ".", "chop", "=", "args", ".", "chop", "\n", "self", ".", "precision", "=", "args", ".", "precision", "\n", "self", ".", "cpu", "=", "args", ".", "cpu", "\n", "self", ".", "device", "=", "torch", ".", "device", "(", "'cpu'", "if", "args", ".", "cpu", "else", "'cuda'", ")", "\n", "self", ".", "n_GPUs", "=", "args", ".", "n_GPUs", "\n", "self", ".", "save_models", "=", "args", ".", "save_models", "\n", "\n", "module", "=", "import_module", "(", "'model.'", "+", "args", ".", "model", ".", "lower", "(", ")", ")", "\n", "self", ".", "model", "=", "module", ".", "make_model", "(", "args", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "if", "args", ".", "precision", "==", "'half'", ":", "self", ".", "model", ".", "half", "(", ")", "\n", "\n", "if", "not", "args", ".", "cpu", "and", "args", ".", "n_GPUs", ">", "1", ":", "\n", "            ", "self", ".", "model", "=", "nn", ".", "DataParallel", "(", "self", ".", "model", ",", "range", "(", "args", ".", "n_GPUs", ")", ")", "\n", "\n", "", "self", ".", "load", "(", "\n", "ckp", ".", "dir", ",", "\n", "pre_train", "=", "args", ".", "pre_train", ",", "\n", "resume", "=", "args", ".", "resume", ",", "\n", "cpu", "=", "args", ".", "cpu", "\n", ")", "\n", "if", "args", ".", "print_model", ":", "print", "(", "self", ".", "model", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.__init__.Model.forward": [[38, 55], ["__init__.Model.get_model", "hasattr", "__init__.Model.set_scale", "__init__.Model.forward_x8", "__init__.Model.forward_chop", "__init__.Model.model"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.__init__.Model.get_model", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.myimage.MyImage.set_scale", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.__init__.Model.forward_x8", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.__init__.Model.forward_chop"], ["", "def", "forward", "(", "self", ",", "x", ",", "idx_scale", ")", ":", "\n", "        ", "self", ".", "idx_scale", "=", "idx_scale", "\n", "target", "=", "self", ".", "get_model", "(", ")", "\n", "if", "hasattr", "(", "target", ",", "'set_scale'", ")", ":", "\n", "            ", "target", ".", "set_scale", "(", "idx_scale", ")", "\n", "\n", "", "if", "self", ".", "self_ensemble", "and", "not", "self", ".", "training", ":", "\n", "            ", "if", "self", ".", "chop", ":", "\n", "                ", "forward_function", "=", "self", ".", "forward_chop", "\n", "", "else", ":", "\n", "                ", "forward_function", "=", "self", ".", "model", ".", "forward", "\n", "\n", "", "return", "self", ".", "forward_x8", "(", "x", ",", "forward_function", ")", "\n", "", "elif", "self", ".", "chop", "and", "not", "self", ".", "training", ":", "\n", "            ", "return", "self", ".", "forward_chop", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "model", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.__init__.Model.get_model": [[56, 61], ["None"], "methods", ["None"], ["", "", "def", "get_model", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "n_GPUs", "==", "1", ":", "\n", "            ", "return", "self", ".", "model", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "model", ".", "module", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.__init__.Model.state_dict": [[62, 65], ["__init__.Model.get_model", "__init__.Model.state_dict"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.__init__.Model.get_model", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.adversarial.Adversarial.state_dict"], ["", "", "def", "state_dict", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "target", "=", "self", ".", "get_model", "(", ")", "\n", "return", "target", ".", "state_dict", "(", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.__init__.Model.save": [[66, 82], ["__init__.Model.get_model", "torch.save", "torch.save", "torch.save", "torch.save", "__init__.Model.state_dict", "os.path.join", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "__init__.Model.state_dict", "os.path.join", "__init__.Model.state_dict", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.__init__.Model.get_model", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.adversarial.Adversarial.state_dict", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.adversarial.Adversarial.state_dict", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.adversarial.Adversarial.state_dict"], ["", "def", "save", "(", "self", ",", "apath", ",", "epoch", ",", "is_best", "=", "False", ")", ":", "\n", "        ", "target", "=", "self", ".", "get_model", "(", ")", "\n", "torch", ".", "save", "(", "\n", "target", ".", "state_dict", "(", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "apath", ",", "'model'", ",", "'model_latest.pt'", ")", "\n", ")", "\n", "if", "is_best", ":", "\n", "            ", "torch", ".", "save", "(", "\n", "target", ".", "state_dict", "(", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "apath", ",", "'model'", ",", "'model_best.pt'", ")", "\n", ")", "\n", "\n", "", "if", "self", ".", "save_models", ":", "\n", "            ", "torch", ".", "save", "(", "\n", "target", ".", "state_dict", "(", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "apath", ",", "'model'", ",", "'model_{}.pt'", ".", "format", "(", "epoch", ")", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.__init__.Model.load": [[84, 112], ["__init__.Model.get_model().load_state_dict", "torch.load", "torch.load", "torch.load", "torch.load", "__init__.Model.get_model().load_state_dict", "__init__.Model.get_model", "os.path.join", "print", "__init__.Model.get_model().load_state_dict", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "__init__.Model.get_model", "os.path.join", "__init__.Model.get_model"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.rcan.RCAN.load_state_dict", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.rcan.RCAN.load_state_dict", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.__init__.Model.get_model", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.rcan.RCAN.load_state_dict", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.__init__.Model.get_model", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.__init__.Model.get_model"], ["", "", "def", "load", "(", "self", ",", "apath", ",", "pre_train", "=", "'.'", ",", "resume", "=", "-", "1", ",", "cpu", "=", "False", ")", ":", "\n", "        ", "if", "cpu", ":", "\n", "            ", "kwargs", "=", "{", "'map_location'", ":", "lambda", "storage", ",", "loc", ":", "storage", "}", "\n", "", "else", ":", "\n", "            ", "kwargs", "=", "{", "}", "\n", "\n", "", "if", "resume", "==", "-", "1", ":", "\n", "            ", "self", ".", "get_model", "(", ")", ".", "load_state_dict", "(", "\n", "torch", ".", "load", "(", "\n", "os", ".", "path", ".", "join", "(", "apath", ",", "'model'", ",", "'model_latest.pt'", ")", ",", "\n", "**", "kwargs", "\n", ")", ",", "\n", "strict", "=", "False", "\n", ")", "\n", "", "elif", "resume", "==", "0", ":", "\n", "            ", "if", "pre_train", "!=", "'.'", ":", "\n", "                ", "print", "(", "'Loading model from {}'", ".", "format", "(", "pre_train", ")", ")", "\n", "self", ".", "get_model", "(", ")", ".", "load_state_dict", "(", "\n", "torch", ".", "load", "(", "pre_train", ",", "**", "kwargs", ")", ",", "\n", "strict", "=", "False", "\n", ")", "\n", "", "", "else", ":", "\n", "            ", "self", ".", "get_model", "(", ")", ".", "load_state_dict", "(", "\n", "torch", ".", "load", "(", "\n", "os", ".", "path", ".", "join", "(", "apath", ",", "'model'", ",", "'model_{}.pt'", ".", "format", "(", "resume", ")", ")", ",", "\n", "**", "kwargs", "\n", ")", ",", "\n", "strict", "=", "False", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.__init__.Model.forward_chop": [[114, 154], ["min", "x.size", "x.new", "range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "__init__.Model.model", "sr_list.extend", "__init__.Model.forward_chop", "__init__.Model.chunk"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.__init__.Model.forward_chop"], ["", "", "def", "forward_chop", "(", "self", ",", "x", ",", "shave", "=", "10", ",", "min_size", "=", "160000", ")", ":", "\n", "        ", "scale", "=", "self", ".", "scale", "[", "self", ".", "idx_scale", "]", "\n", "n_GPUs", "=", "min", "(", "self", ".", "n_GPUs", ",", "4", ")", "\n", "b", ",", "c", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "h_half", ",", "w_half", "=", "h", "//", "2", ",", "w", "//", "2", "\n", "h_size", ",", "w_size", "=", "h_half", "+", "shave", ",", "w_half", "+", "shave", "\n", "lr_list", "=", "[", "\n", "x", "[", ":", ",", ":", ",", "0", ":", "h_size", ",", "0", ":", "w_size", "]", ",", "\n", "x", "[", ":", ",", ":", ",", "0", ":", "h_size", ",", "(", "w", "-", "w_size", ")", ":", "w", "]", ",", "\n", "x", "[", ":", ",", ":", ",", "(", "h", "-", "h_size", ")", ":", "h", ",", "0", ":", "w_size", "]", ",", "\n", "x", "[", ":", ",", ":", ",", "(", "h", "-", "h_size", ")", ":", "h", ",", "(", "w", "-", "w_size", ")", ":", "w", "]", "]", "\n", "\n", "if", "w_size", "*", "h_size", "<", "min_size", ":", "\n", "            ", "sr_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "4", ",", "n_GPUs", ")", ":", "\n", "                ", "lr_batch", "=", "torch", ".", "cat", "(", "lr_list", "[", "i", ":", "(", "i", "+", "n_GPUs", ")", "]", ",", "dim", "=", "0", ")", "\n", "sr_batch", "=", "self", ".", "model", "(", "lr_batch", ")", "\n", "sr_list", ".", "extend", "(", "sr_batch", ".", "chunk", "(", "n_GPUs", ",", "dim", "=", "0", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "sr_list", "=", "[", "\n", "self", ".", "forward_chop", "(", "patch", ",", "shave", "=", "shave", ",", "min_size", "=", "min_size", ")", "for", "patch", "in", "lr_list", "\n", "]", "\n", "\n", "", "h", ",", "w", "=", "scale", "*", "h", ",", "scale", "*", "w", "\n", "h_half", ",", "w_half", "=", "scale", "*", "h_half", ",", "scale", "*", "w_half", "\n", "h_size", ",", "w_size", "=", "scale", "*", "h_size", ",", "scale", "*", "w_size", "\n", "shave", "*=", "scale", "\n", "\n", "output", "=", "x", ".", "new", "(", "b", ",", "c", ",", "h", ",", "w", ")", "\n", "output", "[", ":", ",", ":", ",", "0", ":", "h_half", ",", "0", ":", "w_half", "]", "=", "sr_list", "[", "0", "]", "[", ":", ",", ":", ",", "0", ":", "h_half", ",", "0", ":", "w_half", "]", "\n", "output", "[", ":", ",", ":", ",", "0", ":", "h_half", ",", "w_half", ":", "w", "]", "=", "sr_list", "[", "1", "]", "[", ":", ",", ":", ",", "0", ":", "h_half", ",", "(", "w_size", "-", "w", "+", "w_half", ")", ":", "w_size", "]", "\n", "output", "[", ":", ",", ":", ",", "h_half", ":", "h", ",", "0", ":", "w_half", "]", "=", "sr_list", "[", "2", "]", "[", ":", ",", ":", ",", "(", "h_size", "-", "h", "+", "h_half", ")", ":", "h_size", ",", "0", ":", "w_half", "]", "\n", "output", "[", ":", ",", ":", ",", "h_half", ":", "h", ",", "w_half", ":", "w", "]", "=", "sr_list", "[", "3", "]", "[", ":", ",", ":", ",", "(", "h_size", "-", "h", "+", "h_half", ")", ":", "h_size", ",", "(", "w_size", "-", "w", "+", "w_half", ")", ":", "w_size", "]", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.__init__.Model.forward_x8": [[155, 189], ["range", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat.mean", "torch.cat.mean", "v.float.float.data.cpu().numpy", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "torch.Tensor().to", "lr_list.extend", "forward_function", "len", "v.float.float.float", "v2np[].copy", "ret.half.half.half", "__init__.Model.forward_x8._transform"], "methods", ["None"], ["", "def", "forward_x8", "(", "self", ",", "x", ",", "forward_function", ")", ":", "\n", "        ", "def", "_transform", "(", "v", ",", "op", ")", ":", "\n", "            ", "if", "self", ".", "precision", "!=", "'single'", ":", "v", "=", "v", ".", "float", "(", ")", "\n", "\n", "v2np", "=", "v", ".", "data", ".", "cpu", "(", ")", ".", "numpy", "(", ")", "\n", "if", "op", "==", "'v'", ":", "\n", "                ", "tfnp", "=", "v2np", "[", ":", ",", ":", ",", ":", ",", ":", ":", "-", "1", "]", ".", "copy", "(", ")", "\n", "", "elif", "op", "==", "'h'", ":", "\n", "                ", "tfnp", "=", "v2np", "[", ":", ",", ":", ",", ":", ":", "-", "1", ",", ":", "]", ".", "copy", "(", ")", "\n", "", "elif", "op", "==", "'t'", ":", "\n", "                ", "tfnp", "=", "v2np", ".", "transpose", "(", "(", "0", ",", "1", ",", "3", ",", "2", ")", ")", ".", "copy", "(", ")", "\n", "\n", "", "ret", "=", "torch", ".", "Tensor", "(", "tfnp", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "if", "self", ".", "precision", "==", "'half'", ":", "ret", "=", "ret", ".", "half", "(", ")", "\n", "\n", "return", "ret", "\n", "\n", "", "lr_list", "=", "[", "x", "]", "\n", "for", "tf", "in", "'v'", ",", "'h'", ",", "'t'", ":", "\n", "            ", "lr_list", ".", "extend", "(", "[", "_transform", "(", "t", ",", "tf", ")", "for", "t", "in", "lr_list", "]", ")", "\n", "\n", "", "sr_list", "=", "[", "forward_function", "(", "aug", ")", "for", "aug", "in", "lr_list", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "sr_list", ")", ")", ":", "\n", "            ", "if", "i", ">", "3", ":", "\n", "                ", "sr_list", "[", "i", "]", "=", "_transform", "(", "sr_list", "[", "i", "]", ",", "'t'", ")", "\n", "", "if", "i", "%", "4", ">", "1", ":", "\n", "                ", "sr_list", "[", "i", "]", "=", "_transform", "(", "sr_list", "[", "i", "]", ",", "'h'", ")", "\n", "", "if", "(", "i", "%", "4", ")", "%", "2", "==", "1", ":", "\n", "                ", "sr_list", "[", "i", "]", "=", "_transform", "(", "sr_list", "[", "i", "]", ",", "'v'", ")", "\n", "\n", "", "", "output_cat", "=", "torch", ".", "cat", "(", "sr_list", ",", "dim", "=", "0", ")", "\n", "output", "=", "output_cat", ".", "mean", "(", "dim", "=", "0", ",", "keepdim", "=", "True", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx3.Scale.__init__": [[13, 16], ["torch.Module.__init__", "torch.Parameter", "torch.Parameter", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor", "torch.FloatTensor"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "init_value", "=", "1e-3", ")", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", ")", "\n", "self", ".", "scale", "=", "nn", ".", "Parameter", "(", "torch", ".", "FloatTensor", "(", "[", "init_value", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx3.Scale.forward": [[17, 19], ["None"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "return", "input", "*", "self", ".", "scale", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx3.SRBW.__init__": [[34, 51], ["torch.ReLU", "torch.ReLU", "torch.Module.__init__", "FDIWNx3.Scale", "FDIWNx3.Scale", "torch.Conv2d", "torch.Conv2d", "body.append", "body.append", "body.append", "body.append", "torch.Sequential", "torch.Sequential", "FDIWNx3.sa_layer", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "wn", "wn", "wn", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "n_feats", ",", "wn", "=", "lambda", "x", ":", "torch", ".", "nn", ".", "utils", ".", "weight_norm", "(", "x", ")", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ")", ":", "\n", "        ", "super", "(", "SRBW", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "res_scale", "=", "Scale", "(", "1", ")", "\n", "self", ".", "x_scale", "=", "Scale", "(", "1", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", "*", "2", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "body", "=", "[", "]", "\n", "body", ".", "append", "(", "\n", "wn", "(", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", "*", "4", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", ")", ")", "\n", "body", ".", "append", "(", "act", ")", "\n", "body", ".", "append", "(", "\n", "wn", "(", "nn", ".", "Conv2d", "(", "n_feats", "*", "4", ",", "n_feats", "//", "1", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", ")", ")", "\n", "body", ".", "append", "(", "\n", "wn", "(", "nn", ".", "Conv2d", "(", "n_feats", "//", "1", ",", "n_feats", "*", "2", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ")", ")", "\n", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "body", ")", "\n", "self", ".", "SAlayer", "=", "sa_layer", "(", "2", "*", "n_feats", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx3.SRBW.forward": [[52, 55], ["FDIWNx3.SRBW.res_scale", "FDIWNx3.SRBW.x_scale", "FDIWNx3.SRBW.SAlayer", "FDIWNx3.SRBW.conv", "FDIWNx3.SRBW.body"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "self", ".", "res_scale", "(", "self", ".", "SAlayer", "(", "self", ".", "body", "(", "x", ")", ")", ")", "+", "self", ".", "x_scale", "(", "self", ".", "conv", "(", "x", ")", ")", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx3.SRBW1.__init__": [[57, 73], ["torch.ReLU", "torch.ReLU", "torch.Module.__init__", "FDIWNx3.Scale", "FDIWNx3.Scale", "body.append", "body.append", "body.append", "body.append", "torch.Sequential", "torch.Sequential", "FDIWNx3.sa_layer", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "wn", "wn", "wn", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "n_feats", ",", "wn", "=", "lambda", "x", ":", "torch", ".", "nn", ".", "utils", ".", "weight_norm", "(", "x", ")", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ")", ":", "\n", "        ", "super", "(", "SRBW1", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "res_scale", "=", "Scale", "(", "1", ")", "\n", "self", ".", "x_scale", "=", "Scale", "(", "1", ")", "\n", "body", "=", "[", "]", "\n", "body", ".", "append", "(", "\n", "wn", "(", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", "*", "2", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", ")", ")", "\n", "body", ".", "append", "(", "act", ")", "\n", "body", ".", "append", "(", "\n", "wn", "(", "nn", ".", "Conv2d", "(", "n_feats", "*", "2", ",", "n_feats", "//", "2", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", ")", ")", "\n", "body", ".", "append", "(", "\n", "wn", "(", "nn", ".", "Conv2d", "(", "n_feats", "//", "2", ",", "n_feats", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ")", ")", "\n", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "body", ")", "\n", "self", ".", "SAlayer", "=", "sa_layer", "(", "n_feats", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx3.SRBW1.forward": [[74, 77], ["FDIWNx3.SRBW1.res_scale", "FDIWNx3.SRBW1.x_scale", "FDIWNx3.SRBW1.SAlayer", "FDIWNx3.SRBW1.body"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "self", ".", "res_scale", "(", "self", ".", "SAlayer", "(", "self", ".", "body", "(", "x", ")", ")", ")", "+", "self", ".", "x_scale", "(", "x", ")", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx3.SRBW2.__init__": [[79, 96], ["torch.ReLU", "torch.ReLU", "torch.Module.__init__", "FDIWNx3.Scale", "FDIWNx3.Scale", "body.append", "body.append", "body.append", "body.append", "torch.Sequential", "torch.Sequential", "FDIWNx3.sa_layer", "torch.Conv2d", "torch.Conv2d", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "wn", "wn", "wn", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "n_feats", ",", "wn", "=", "lambda", "x", ":", "torch", ".", "nn", ".", "utils", ".", "weight_norm", "(", "x", ")", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ")", ":", "\n", "        ", "super", "(", "SRBW2", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "res_scale", "=", "Scale", "(", "1", ")", "\n", "self", ".", "x_scale", "=", "Scale", "(", "1", ")", "\n", "body", "=", "[", "]", "\n", "body", ".", "append", "(", "\n", "wn", "(", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", "*", "2", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", ")", ")", "\n", "body", ".", "append", "(", "act", ")", "\n", "body", ".", "append", "(", "\n", "wn", "(", "nn", ".", "Conv2d", "(", "n_feats", "*", "2", ",", "n_feats", "//", "2", ",", "kernel_size", "=", "1", ",", "padding", "=", "0", ")", ")", ")", "\n", "body", ".", "append", "(", "\n", "wn", "(", "nn", ".", "Conv2d", "(", "n_feats", "//", "2", ",", "n_feats", "//", "2", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", ")", ")", "\n", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "body", ")", "\n", "self", ".", "SAlayer", "=", "sa_layer", "(", "n_feats", "//", "2", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", "//", "2", ",", "kernel_size", "=", "3", ",", "padding", "=", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx3.SRBW2.forward": [[97, 100], ["FDIWNx3.SRBW2.res_scale", "FDIWNx3.SRBW2.x_scale", "FDIWNx3.SRBW2.SAlayer", "FDIWNx3.SRBW2.conv", "FDIWNx3.SRBW2.body"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "self", ".", "res_scale", "(", "self", ".", "SAlayer", "(", "self", ".", "body", "(", "x", ")", ")", ")", "+", "self", ".", "x_scale", "(", "self", ".", "conv", "(", "x", ")", ")", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx3.SRB.__init__": [[102, 107], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "FDIWNx3.activation"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx3.activation"], ["    ", "def", "__init__", "(", "\n", "self", ",", "n_feats", ",", "kernel_size", "=", "3", ")", ":", "\n", "        ", "super", "(", "SRB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", ",", "kernel_size", ",", "padding", "=", "kernel_size", "//", "2", ")", "\n", "self", ".", "act", "=", "activation", "(", "'lrelu'", ",", "neg_slope", "=", "0.05", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx3.SRB.forward": [[108, 112], ["FDIWNx3.SRB.conv3", "FDIWNx3.SRB.act"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y1", "=", "self", ".", "conv3", "(", "x", ")", "\n", "y", "=", "self", ".", "act", "(", "y1", "+", "x", ")", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx3.CoffConv.__init__": [[114, 132], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Sigmoid", "torch.Sigmoid", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_feats", ")", ":", "\n", "        ", "super", "(", "CoffConv", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "upper_branch", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", ",", "\n", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", "//", "8", ",", "1", ",", "1", ",", "0", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "n_feats", "//", "8", ",", "n_feats", ",", "1", ",", "1", ",", "0", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "\n", "self", ".", "std", "=", "std", "\n", "self", ".", "lower_branch", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", "//", "8", ",", "1", ",", "1", ",", "0", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "n_feats", "//", "8", ",", "n_feats", ",", "1", ",", "1", ",", "0", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx3.CoffConv.forward": [[134, 142], ["FDIWNx3.CoffConv.upper_branch", "FDIWNx3.CoffConv.std", "FDIWNx3.CoffConv.lower_branch", "torch.add", "torch.add", "torch.add", "torch.add"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.common.std"], ["", "def", "forward", "(", "self", ",", "fea", ")", ":", "\n", "        ", "upper", "=", "self", ".", "upper_branch", "(", "fea", ")", "\n", "lower", "=", "self", ".", "std", "(", "fea", ")", "\n", "lower", "=", "self", ".", "lower_branch", "(", "lower", ")", "\n", "\n", "out", "=", "torch", ".", "add", "(", "upper", ",", "lower", ")", "/", "2", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx3.CALayer.__init__": [[144, 154], ["torch.Module.__init__", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "n_feats", ",", "reduction", "=", "8", ")", ":", "\n", "        ", "super", "(", "CALayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "# global average pooling: feature --> point", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "# feature channel downscale and upscale --> channel weight", "\n", "self", ".", "conv_du", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", "//", "reduction", ",", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "n_feats", "//", "reduction", ",", "n_feats", ",", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx3.CALayer.forward": [[156, 160], ["FDIWNx3.CALayer.avg_pool", "FDIWNx3.CALayer.conv_du"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "self", ".", "avg_pool", "(", "x", ")", "\n", "y", "=", "self", ".", "conv_du", "(", "y", ")", "\n", "return", "x", "*", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx3.sa_layer.__init__": [[166, 177], ["torch.Module.__init__", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.nn.parameter.Parameter", "torch.Sigmoid", "torch.Sigmoid", "torch.GroupNorm", "torch.GroupNorm", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.ones", "torch.ones", "torch.ones", "torch.ones", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.ones", "torch.ones", "torch.ones", "torch.ones"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["def", "__init__", "(", "self", ",", "n_feats", ",", "groups", "=", "6", ")", ":", "\n", "        ", "super", "(", "sa_layer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "groups", "=", "groups", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "cweight", "=", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "n_feats", "//", "(", "2", "*", "groups", ")", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "cbias", "=", "Parameter", "(", "torch", ".", "ones", "(", "1", ",", "n_feats", "//", "(", "2", "*", "groups", ")", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "sweight", "=", "Parameter", "(", "torch", ".", "zeros", "(", "1", ",", "n_feats", "//", "(", "2", "*", "groups", ")", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "sbias", "=", "Parameter", "(", "torch", ".", "ones", "(", "1", ",", "n_feats", "//", "(", "2", "*", "groups", ")", ",", "1", ",", "1", ")", ")", "\n", "\n", "self", ".", "sigmoid", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "self", ".", "gn", "=", "nn", ".", "GroupNorm", "(", "n_feats", "//", "(", "2", "*", "groups", ")", ",", "n_feats", "//", "(", "2", "*", "groups", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx3.sa_layer.channel_shuffle": [[178, 189], ["x.reshape.reshape.reshape", "x.reshape.reshape.permute", "x.reshape.reshape.reshape"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "channel_shuffle", "(", "x", ",", "groups", ")", ":", "\n", "        ", "b", ",", "c", ",", "h", ",", "w", "=", "x", ".", "shape", "\n", "\n", "x", "=", "x", ".", "reshape", "(", "b", ",", "groups", ",", "-", "1", ",", "h", ",", "w", ")", "\n", "x", "=", "x", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ",", "4", ")", "\n", "\n", "# flatten", "\n", "x", "=", "x", ".", "reshape", "(", "b", ",", "-", "1", ",", "h", ",", "w", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx3.sa_layer.forward": [[190, 212], ["x.reshape.reshape.reshape", "x.reshape.reshape.chunk", "FDIWNx3.sa_layer.avg_pool", "FDIWNx3.sa_layer.gn", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "FDIWNx3.sa_layer.reshape", "FDIWNx3.sa_layer.channel_shuffle", "FDIWNx3.sa_layer.sigmoid", "FDIWNx3.sa_layer.sigmoid"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx3.sa_layer.channel_shuffle"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "b", ",", "c", ",", "h", ",", "w", "=", "x", ".", "shape", "\n", "\n", "x", "=", "x", ".", "reshape", "(", "b", "*", "self", ".", "groups", ",", "-", "1", ",", "h", ",", "w", ")", "\n", "x_0", ",", "x_1", "=", "x", ".", "chunk", "(", "2", ",", "dim", "=", "1", ")", "\n", "\n", "# channel attention", "\n", "xn", "=", "self", ".", "avg_pool", "(", "x_0", ")", "\n", "xn", "=", "self", ".", "cweight", "*", "xn", "+", "self", ".", "cbias", "\n", "xn", "=", "x_0", "*", "self", ".", "sigmoid", "(", "xn", ")", "\n", "\n", "# spatial attention", "\n", "xs", "=", "self", ".", "gn", "(", "x_1", ")", "\n", "xs", "=", "self", ".", "sweight", "*", "xs", "+", "self", ".", "sbias", "\n", "xs", "=", "x_1", "*", "self", ".", "sigmoid", "(", "xs", ")", "\n", "\n", "# concatenate along channel axis", "\n", "out", "=", "torch", ".", "cat", "(", "[", "xn", ",", "xs", "]", ",", "dim", "=", "1", ")", "\n", "out", "=", "out", ".", "reshape", "(", "b", ",", "-", "1", ",", "h", ",", "w", ")", "\n", "\n", "out", "=", "self", ".", "channel_shuffle", "(", "out", ",", "2", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx3.ShuffleBlock.__init__": [[214, 217], ["torch.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "groups", ")", ":", "\n", "        ", "super", "(", "ShuffleBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "groups", "=", "groups", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx3.ShuffleBlock.forward": [[218, 224], ["x.size", "x.view().permute().contiguous().view", "x.view().permute().contiguous", "x.view().permute", "x.view", "int"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "'''Channel shuffle: [N,C,H,W] -> [N,g,C/g,H,W] -> [N,C/g,g,H,w] -> [N,C,H,W]'''", "\n", "N", ",", "C", ",", "H", ",", "W", "=", "x", ".", "size", "(", ")", "\n", "g", "=", "self", ".", "groups", "\n", "\n", "return", "x", ".", "view", "(", "N", ",", "g", ",", "int", "(", "C", "/", "g", ")", ",", "H", ",", "W", ")", ".", "permute", "(", "0", ",", "2", ",", "1", ",", "3", ",", "4", ")", ".", "contiguous", "(", ")", ".", "view", "(", "N", ",", "C", ",", "H", ",", "W", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx3.MY.__init__": [[226, 257], ["torch.ReLU", "torch.ReLU", "torch.Module.__init__", "FDIWNx3.activation", "FDIWNx3.SRBW1", "FDIWNx3.SRBW1", "FDIWNx3.SRBW", "FDIWNx3.SRBW", "FDIWNx3.CoffConv", "FDIWNx3.CoffConv", "FDIWNx3.CoffConv", "FDIWNx3.CoffConv", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid", "FDIWNx3.Scale", "FDIWNx3.Scale", "FDIWNx3.SRBW1", "FDIWNx3.SRBW1", "FDIWNx3.SRBW2", "torch.Conv2d", "torch.Conv2d", "FDIWNx3.sa_layer", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx3.activation"], ["    ", "def", "__init__", "(", "self", ",", "n_feats", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ")", ":", "\n", "        ", "super", "(", "MY", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "act", "=", "activation", "(", "'lrelu'", ",", "neg_slope", "=", "0.05", ")", "\n", "wn", "=", "lambda", "x", ":", "torch", ".", "nn", ".", "utils", ".", "weight_norm", "(", "x", ")", "\n", "self", ".", "srb1", "=", "SRBW1", "(", "n_feats", ")", "\n", "self", ".", "srb2", "=", "SRBW1", "(", "n_feats", ")", "\n", "self", ".", "distilled_channels1", "=", "n_feats", "//", "2", "\n", "self", ".", "remaining_channels1", "=", "n_feats", "//", "2", "\n", "self", ".", "distilled_channels2", "=", "n_feats", "//", "2", "\n", "self", ".", "remaining_channels2", "=", "n_feats", "//", "2", "\n", "self", ".", "rb1", "=", "SRBW", "(", "n_feats", "//", "2", ",", "wn", "=", "wn", ",", "act", "=", "act", ")", "\n", "self", ".", "rb2", "=", "SRBW", "(", "n_feats", "//", "2", ",", "wn", "=", "wn", ",", "act", "=", "act", ")", "\n", "self", ".", "A1_coffconv", "=", "CoffConv", "(", "n_feats", ")", "\n", "self", ".", "B1_coffconv", "=", "CoffConv", "(", "n_feats", ")", "\n", "self", ".", "A2_coffconv", "=", "CoffConv", "(", "n_feats", ")", "\n", "self", ".", "B2_coffconv", "=", "CoffConv", "(", "n_feats", ")", "\n", "self", ".", "conv_distilled1", "=", "nn", ".", "Conv2d", "(", "n_feats", "//", "2", ",", "n_feats", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "conv_distilled2", "=", "nn", ".", "Conv2d", "(", "n_feats", "//", "2", ",", "n_feats", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "sigmoid1", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "self", ".", "sigmoid2", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "self", ".", "sigmoid3", "=", "nn", ".", "Sigmoid", "(", ")", "\n", "self", ".", "scale_x1", "=", "Scale", "(", "1", ")", "\n", "self", ".", "scale_x2", "=", "Scale", "(", "1", ")", "\n", "self", ".", "srb3", "=", "SRBW1", "(", "n_feats", ")", "\n", "self", ".", "srb4", "=", "SRBW1", "(", "n_feats", ")", "\n", "self", ".", "fuse1", "=", "SRBW2", "(", "n_feats", "*", "2", ")", "#nn.Conv2d(2*n_feats, n_feats, kernel_size=3, stride=1, padding=1, bias=False, dilation=1)", "\n", "self", ".", "fuse2", "=", "nn", ".", "Conv2d", "(", "2", "*", "n_feats", ",", "n_feats", ",", "kernel_size", "=", "1", ",", "stride", "=", "1", ",", "padding", "=", "0", ",", "bias", "=", "False", ",", "dilation", "=", "1", ")", "\n", "#self.conv3_a = nn.Conv2d(n_feats, n_feats , kernel_size=3, stride=1, padding=1, bias=False)", "\n", "#self.conv3_b = nn.Conv2d(n_feats, n_feats , kernel_size=3, stride=1, padding=1, bias=False)", "\n", "self", ".", "SAlayer", "=", "sa_layer", "(", "n_feats", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx3.MY.forward": [[258, 289], ["FDIWNx3.MY.act", "torch.split", "torch.split", "torch.split", "torch.split", "FDIWNx3.MY.rb1", "FDIWNx3.MY.A1_coffconv", "FDIWNx3.MY.B1_coffconv", "FDIWNx3.MY.act", "torch.split", "torch.split", "torch.split", "torch.split", "FDIWNx3.MY.rb2", "FDIWNx3.MY.A2_coffconv", "FDIWNx3.MY.B2_coffconv", "FDIWNx3.MY.srb3", "FDIWNx3.MY.srb4", "FDIWNx3.MY.fuse1", "FDIWNx3.MY.sigmoid3", "FDIWNx3.MY.SAlayer", "FDIWNx3.MY.srb1", "FDIWNx3.MY.srb2", "FDIWNx3.MY.sigmoid1", "FDIWNx3.MY.sigmoid2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "FDIWNx3.MY.fuse2", "FDIWNx3.MY.conv_distilled1", "FDIWNx3.MY.conv_distilled2", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "FDIWNx3.MY.scale_x1", "FDIWNx3.MY.scale_x2", "FDIWNx3.MY.scale_x1", "FDIWNx3.MY.scale_x2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out_a", "=", "self", ".", "act", "(", "self", ".", "srb1", "(", "x", ")", ")", "\n", "distilled_a1", ",", "remaining_a1", "=", "torch", ".", "split", "(", "out_a", ",", "(", "self", ".", "distilled_channels1", ",", "self", ".", "remaining_channels1", ")", ",", "dim", "=", "1", ")", "\n", "out_a", "=", "self", ".", "rb1", "(", "remaining_a1", ")", "\n", "A1", "=", "self", ".", "A1_coffconv", "(", "out_a", ")", "\n", "out_b_1", "=", "A1", "*", "out_a", "+", "x", "\n", "B1", "=", "self", ".", "B1_coffconv", "(", "x", ")", "\n", "out_a_1", "=", "B1", "*", "x", "+", "out_a", "\n", "\n", "out_b", "=", "self", ".", "act", "(", "self", ".", "srb2", "(", "out_b_1", ")", ")", "\n", "distilled_b1", ",", "remaining_b1", "=", "torch", ".", "split", "(", "out_b", ",", "(", "self", ".", "distilled_channels2", ",", "self", ".", "remaining_channels2", ")", ",", "dim", "=", "1", ")", "\n", "out_b", "=", "self", ".", "rb2", "(", "remaining_b1", ")", "\n", "A2", "=", "self", ".", "A2_coffconv", "(", "out_a_1", ")", "\n", "out_b_2", "=", "A2", "*", "out_a_1", "+", "out_b", "\n", "out_b_2", "=", "out_b_2", "*", "self", ".", "sigmoid1", "(", "self", ".", "conv_distilled1", "(", "distilled_b1", ")", ")", "\n", "B2", "=", "self", ".", "B2_coffconv", "(", "out_b", ")", "\n", "out_a_2", "=", "out_b", "*", "B2", "+", "out_a_1", "\n", "out_a_2", "=", "out_a_2", "*", "self", ".", "sigmoid2", "(", "self", ".", "conv_distilled2", "(", "distilled_a1", ")", ")", "\n", "\n", "out_a_out", "=", "self", ".", "srb3", "(", "out_a_2", ")", "#self.conv3_a(out_a_2) + out_a_2", "\n", "out_b_out", "=", "self", ".", "srb4", "(", "out_b_2", ")", "#self.conv3_b(out_b_2) + out_b_2", "\n", "\n", "out1", "=", "self", ".", "fuse1", "(", "torch", ".", "cat", "(", "[", "self", ".", "scale_x1", "(", "out_a_out", ")", ",", "self", ".", "scale_x2", "(", "out_b_out", ")", "]", ",", "dim", "=", "1", ")", ")", "\n", "out2", "=", "self", ".", "sigmoid3", "(", "self", ".", "fuse2", "(", "torch", ".", "cat", "(", "[", "self", ".", "scale_x1", "(", "out_a_out", ")", ",", "self", ".", "scale_x2", "(", "out_b_out", ")", "]", ",", "dim", "=", "1", ")", ")", ")", "\n", "\n", "out", "=", "out2", "*", "out_b_out", "\n", "y1", "=", "out1", "+", "out", "\n", "y2", "=", "y1", "+", "x", "\n", "out", "=", "self", ".", "SAlayer", "(", "y2", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx3.Li.__init__": [[291, 318], ["torch.ReLU", "torch.ReLU", "torch.Module.__init__", "FDIWNx3.activation", "FDIWNx3.MY", "FDIWNx3.MY", "FDIWNx3.MY", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "FDIWNx3.ShuffleBlock", "FDIWNx3.ShuffleBlock", "FDIWNx3.SRBW1", "FDIWNx3.Scale", "FDIWNx3.Scale", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm", "torch.nn.utils.weight_norm"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx3.activation"], ["    ", "def", "__init__", "(", "self", ",", "n_feats", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ")", ":", "\n", "        ", "super", "(", "Li", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "self", ".", "act", "=", "activation", "(", "'lrelu'", ",", "neg_slope", "=", "0.05", ")", "\n", "wn", "=", "lambda", "x", ":", "torch", ".", "nn", ".", "utils", ".", "weight_norm", "(", "x", ")", "\n", "self", ".", "MY1", "=", "MY", "(", "n_feats", ")", "\n", "self", ".", "MY2", "=", "MY", "(", "n_feats", ")", "\n", "self", ".", "MY3", "=", "MY", "(", "n_feats", ")", "\n", "self", ".", "conv", "=", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ",", "dilation", "=", "1", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "2", "*", "n_feats", ",", "n_feats", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "groups", "=", "4", ",", "bias", "=", "False", ",", "dilation", "=", "1", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "2", "*", "n_feats", ",", "n_feats", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "groups", "=", "4", ",", "bias", "=", "False", ",", "dilation", "=", "1", ")", "\n", "self", ".", "channel_shuffle1", "=", "ShuffleBlock", "(", "groups", "=", "4", ")", "\n", "self", ".", "channel_shuffle2", "=", "ShuffleBlock", "(", "groups", "=", "4", ")", "\n", "'''\n        modules_body = []\n        for i in range(2):\n            modules_body.append(nn.Conv2d(n_feats, n_feats, kernel_size = 3, padding=1,bias=False))\n            if bn: modules_body.append(nn.BatchNorm2d(n_feat))\n            if i == 0: modules_body.append(act)\n        modules_body.append(act)\n        modules_body.append(default_conv(n_feats, n_feats, 1))\n        modules_body.append(CALayer(n_feats, reduction=8))\n        self.body = nn.Sequential(*modules_body)\n        '''", "\n", "self", ".", "rb1", "=", "SRBW1", "(", "n_feats", ",", "wn", "=", "wn", ",", "act", "=", "act", ")", "\n", "self", ".", "scale_x", "=", "Scale", "(", "0.5", ")", "\n", "self", ".", "scale_res", "=", "Scale", "(", "0.5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx3.Li.forward": [[319, 333], ["FDIWNx3.Li.MY1", "FDIWNx3.Li.MY2", "FDIWNx3.Li.conv", "FDIWNx3.Li.MY3", "FDIWNx3.Li.conv1", "FDIWNx3.Li.conv2", "FDIWNx3.Li.rb1", "FDIWNx3.Li.channel_shuffle1", "FDIWNx3.Li.channel_shuffle1", "FDIWNx3.Li.scale_x", "FDIWNx3.Li.scale_res", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out1", "=", "self", ".", "MY1", "(", "x", ")", "\n", "out1_1", "=", "self", ".", "MY2", "(", "out1", ")", "\n", "out1_2", "=", "self", ".", "conv", "(", "out1", ")", "\n", "out2", "=", "out1_1", "+", "out1_2", "\n", "out3", "=", "self", ".", "MY3", "(", "out2", ")", "\n", "\n", "out_concat1", "=", "self", ".", "conv1", "(", "self", ".", "channel_shuffle1", "(", "torch", ".", "cat", "(", "[", "out1", ",", "out1_1", "]", ",", "dim", "=", "1", ")", ")", ")", "\n", "out_concat2", "=", "self", ".", "conv2", "(", "self", ".", "channel_shuffle1", "(", "torch", ".", "cat", "(", "[", "out_concat1", ",", "out3", "]", ",", "dim", "=", "1", ")", ")", ")", "\n", "\n", "res", "=", "self", ".", "rb1", "(", "x", ")", "\n", "out", "=", "self", ".", "scale_x", "(", "out_concat2", "+", "out3", ")", "+", "self", ".", "scale_res", "(", "res", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx3.MODEL.__init__": [[335, 366], ["torch.Module.__init__", "FDIWNx3.activation", "torch.Upsample", "torch.Upsample", "common.MeanShift", "common.MeanShift", "conv", "FDIWNx3.Li", "FDIWNx3.Li", "FDIWNx3.Li", "torch.Conv2d", "torch.Conv2d", "up_body.append", "up_body.append", "torch.Sequential", "torch.Sequential", "conv", "up_body.append", "up_body.append", "torch.Sequential", "torch.Sequential", "common.default_conv", "torch.PixelShuffle", "torch.PixelShuffle", "common.default_conv", "torch.PixelShuffle", "torch.PixelShuffle"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx3.activation", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.common.default_conv", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.common.default_conv"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "conv", "=", "default_conv", ")", ":", "\n", "        ", "super", "(", "MODEL", ",", "self", ")", ".", "__init__", "(", ")", "\n", "n_feats", "=", "args", ".", "n_feats", "\n", "kernel_size", "=", "3", "\n", "n_colors", "=", "3", "\n", "out_channels", "=", "3", "\n", "upscale_factor", "=", "2", "\n", "self", ".", "act", "=", "activation", "(", "'lrelu'", ",", "neg_slope", "=", "0.05", ")", "\n", "self", ".", "Upsample", "=", "nn", ".", "Upsample", "(", "scale_factor", "=", "4", ",", "\n", "mode", "=", "'bilinear'", ",", "align_corners", "=", "False", ")", "\n", "rgb_mean", "=", "(", "0.4488", ",", "0.4371", ",", "0.4040", ")", "\n", "rgb_std", "=", "(", "1.0", ",", "1.0", ",", "1.0", ")", "\n", "self", ".", "Sub_mean", "=", "MeanShift", "(", "255", ",", "rgb_mean", ",", "rgb_std", ")", "\n", "self", ".", "Add_mean", "=", "MeanShift", "(", "255", ",", "rgb_mean", ",", "rgb_std", ",", "1", ")", "\n", "self", ".", "head", "=", "conv", "(", "n_colors", ",", "3", "*", "n_feats", "//", "8", ",", "kernel_size", ")", "\n", "self", ".", "Li1", "=", "Li", "(", "3", "*", "n_feats", "//", "8", ")", "\n", "self", ".", "Li2", "=", "Li", "(", "3", "*", "n_feats", "//", "8", ")", "\n", "self", ".", "Li3", "=", "Li", "(", "3", "*", "n_feats", "//", "8", ")", "\n", "#self.Li4 = Li(3*n_feats//8)", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", "*", "n_feats", "//", "8", ",", "n_feats", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "up_body", "=", "[", "]", "\n", "up_body", ".", "append", "(", "default_conv", "(", "n_feats", ",", "out_channels", "*", "9", ",", "kernel_size", "=", "3", ",", "bias", "=", "True", ")", ")", "\n", "up_body", ".", "append", "(", "nn", ".", "PixelShuffle", "(", "3", ")", ")", "\n", "self", ".", "UP1", "=", "nn", ".", "Sequential", "(", "*", "up_body", ")", "\n", "\n", "self", ".", "conv2", "=", "conv", "(", "n_colors", ",", "16", "*", "n_feats", "//", "16", ",", "kernel_size", ")", "\n", "up_body", "=", "[", "]", "\n", "up_body", ".", "append", "(", "default_conv", "(", "16", "*", "n_feats", "//", "16", ",", "out_channels", "*", "9", ",", "kernel_size", "=", "3", ",", "bias", "=", "True", ")", ")", "\n", "up_body", ".", "append", "(", "nn", ".", "PixelShuffle", "(", "3", ")", ")", "\n", "self", ".", "UP2", "=", "nn", ".", "Sequential", "(", "*", "up_body", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx3.MODEL.forward": [[368, 391], ["FDIWNx3.MODEL.Sub_mean", "FDIWNx3.MODEL.head", "FDIWNx3.MODEL.Li1", "FDIWNx3.MODEL.Li1", "FDIWNx3.MODEL.Li2", "FDIWNx3.MODEL.Li3", "FDIWNx3.MODEL.Li2", "FDIWNx3.MODEL.Li3", "FDIWNx3.MODEL.UP1", "FDIWNx3.MODEL.UP2", "FDIWNx3.MODEL.Add_mean", "FDIWNx3.MODEL.conv1", "FDIWNx3.MODEL.conv2"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y_input", "=", "self", ".", "Sub_mean", "(", "x", ")", "\n", "y_input", "=", "self", ".", "head", "(", "y_input", ")", "# 32", "\n", "y_input", "=", "self", ".", "Li1", "(", "y_input", ")", "\n", "\n", "y_input_up1", "=", "self", ".", "Li1", "(", "y_input", ")", "\n", "y_input_down1", "=", "y_input", "+", "y_input_up1", "\n", "y_input_up2", "=", "self", ".", "Li2", "(", "y_input_down1", ")", "\n", "y_input_down2", "=", "y_input_down1", "+", "y_input_up2", "\n", "y_input_up3", "=", "self", ".", "Li3", "(", "y_input_down2", ")", "\n", "y_input_down3", "=", "y_input_down2", "+", "y_input_up3", "\n", "y_input_up4", "=", "self", ".", "Li2", "(", "y_input_down3", ")", "\n", "y_input_down4", "=", "y_input_down3", "+", "y_input_up4", "\n", "\n", "y_input_down5", "=", "self", ".", "Li3", "(", "y_input_down4", ")", "\n", "\n", "y_final", "=", "y_input", "+", "y_input_up1", "+", "y_input_up2", "+", "y_input_up3", "+", "y_input_up4", "+", "y_input_down5", "\n", "y1", "=", "self", ".", "UP1", "(", "self", ".", "conv1", "(", "y_final", ")", ")", "\n", "y2", "=", "self", ".", "UP2", "(", "self", ".", "conv2", "(", "x", ")", ")", "\n", "y", "=", "y1", "+", "y2", "\n", "output", "=", "self", ".", "Add_mean", "(", "y", ")", "\n", "\n", "return", "output", "", "", "", ""]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx3.make_model": [[8, 10], ["FDIWNx3.MODEL"], "function", ["None"], ["def", "make_model", "(", "args", ",", "parent", "=", "False", ")", ":", "\n", "    ", "return", "MODEL", "(", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.FDIWNx3.activation": [[21, 32], ["act_type.lower.lower", "torch.ReLU", "torch.LeakyReLU", "torch.PReLU", "NotImplementedError"], "function", ["None"], ["", "", "def", "activation", "(", "act_type", ",", "inplace", "=", "False", ",", "neg_slope", "=", "0.05", ",", "n_prelu", "=", "1", ")", ":", "\n", "    ", "act_type", "=", "act_type", ".", "lower", "(", ")", "\n", "if", "act_type", "==", "'relu'", ":", "\n", "        ", "layer", "=", "nn", ".", "ReLU", "(", ")", "\n", "", "elif", "act_type", "==", "'lrelu'", ":", "\n", "        ", "layer", "=", "nn", ".", "LeakyReLU", "(", "neg_slope", ")", "\n", "", "elif", "act_type", "==", "'prelu'", ":", "\n", "        ", "layer", "=", "nn", ".", "PReLU", "(", "num_parameters", "=", "n_prelu", ",", "init", "=", "neg_slope", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "(", "'activation layer [{:s}] is not found'", ".", "format", "(", "act_type", ")", ")", "\n", "", "return", "layer", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.edsr.EDSR.__init__": [[9, 44], ["torch.Module.__init__", "torch.ReLU", "model.common.MeanShift", "m_body.append", "model.common.MeanShift", "torch.Sequential", "torch.Sequential", "torch.Sequential", "conv", "model.common.ResBlock", "conv", "model.common.Upsampler", "conv", "range"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "conv", "=", "common", ".", "default_conv", ")", ":", "\n", "        ", "super", "(", "EDSR", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "n_resblock", "=", "args", ".", "n_resblocks", "\n", "n_feats", "=", "args", ".", "n_feats", "\n", "kernel_size", "=", "3", "\n", "scale", "=", "args", ".", "scale", "[", "0", "]", "\n", "act", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "\n", "rgb_mean", "=", "(", "0.4488", ",", "0.4371", ",", "0.4040", ")", "\n", "rgb_std", "=", "(", "1.0", ",", "1.0", ",", "1.0", ")", "\n", "self", ".", "sub_mean", "=", "common", ".", "MeanShift", "(", "args", ".", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ")", "\n", "\n", "# define head module", "\n", "m_head", "=", "[", "conv", "(", "args", ".", "n_colors", ",", "n_feats", ",", "kernel_size", ")", "]", "\n", "\n", "# define body module", "\n", "m_body", "=", "[", "\n", "common", ".", "ResBlock", "(", "\n", "conv", ",", "n_feats", ",", "kernel_size", ",", "act", "=", "act", ",", "res_scale", "=", "args", ".", "res_scale", "\n", ")", "for", "_", "in", "range", "(", "n_resblock", ")", "\n", "]", "\n", "m_body", ".", "append", "(", "conv", "(", "n_feats", ",", "n_feats", ",", "kernel_size", ")", ")", "\n", "\n", "# define tail module", "\n", "m_tail", "=", "[", "\n", "common", ".", "Upsampler", "(", "conv", ",", "scale", ",", "n_feats", ",", "act", "=", "False", ")", ",", "\n", "conv", "(", "n_feats", ",", "args", ".", "n_colors", ",", "kernel_size", ")", "\n", "]", "\n", "\n", "self", ".", "add_mean", "=", "common", ".", "MeanShift", "(", "args", ".", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ",", "1", ")", "\n", "\n", "self", ".", "head", "=", "nn", ".", "Sequential", "(", "*", "m_head", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "m_body", ")", "\n", "self", ".", "tail", "=", "nn", ".", "Sequential", "(", "*", "m_tail", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.edsr.EDSR.forward": [[45, 56], ["edsr.EDSR.sub_mean", "edsr.EDSR.head", "edsr.EDSR.body", "edsr.EDSR.tail", "edsr.EDSR.add_mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "sub_mean", "(", "x", ")", "\n", "x", "=", "self", ".", "head", "(", "x", ")", "\n", "\n", "res", "=", "self", ".", "body", "(", "x", ")", "\n", "res", "+=", "x", "\n", "\n", "x", "=", "self", ".", "tail", "(", "res", ")", "\n", "x", "=", "self", ".", "add_mean", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.edsr.EDSR.load_state_dict": [[57, 75], ["edsr.EDSR.state_dict", "state_dict.items", "isinstance", "own_state[].copy_", "name.find", "KeyError", "name.find", "RuntimeError", "own_state[].size", "param.size"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.adversarial.Adversarial.state_dict"], ["", "def", "load_state_dict", "(", "self", ",", "state_dict", ",", "strict", "=", "True", ")", ":", "\n", "        ", "own_state", "=", "self", ".", "state_dict", "(", ")", "\n", "for", "name", ",", "param", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "            ", "if", "name", "in", "own_state", ":", "\n", "                ", "if", "isinstance", "(", "param", ",", "nn", ".", "Parameter", ")", ":", "\n", "                    ", "param", "=", "param", ".", "data", "\n", "", "try", ":", "\n", "                    ", "own_state", "[", "name", "]", ".", "copy_", "(", "param", ")", "\n", "", "except", "Exception", ":", "\n", "                    ", "if", "name", ".", "find", "(", "'tail'", ")", "==", "-", "1", ":", "\n", "                        ", "raise", "RuntimeError", "(", "'While copying the parameter named {}, '", "\n", "'whose dimensions in the model are {} and '", "\n", "'whose dimensions in the checkpoint are {}.'", "\n", ".", "format", "(", "name", ",", "own_state", "[", "name", "]", ".", "size", "(", ")", ",", "param", ".", "size", "(", ")", ")", ")", "\n", "", "", "", "elif", "strict", ":", "\n", "                ", "if", "name", ".", "find", "(", "'tail'", ")", "==", "-", "1", ":", "\n", "                    ", "raise", "KeyError", "(", "'unexpected key \"{}\" in state_dict'", "\n", ".", "format", "(", "name", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.edsr.make_model": [[5, 7], ["edsr.EDSR"], "function", ["None"], ["def", "make_model", "(", "args", ",", "parent", "=", "False", ")", ":", "\n", "    ", "return", "EDSR", "(", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.rcan.CALayer.__init__": [[10, 18], ["torch.Module.__init__", "torch.AdaptiveAvgPool2d", "torch.Sequential", "torch.Conv2d", "torch.ReLU", "torch.Conv2d", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "channel", ",", "reduction", "=", "16", ")", ":", "\n", "        ", "super", "(", "CALayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "avg_pool", "=", "nn", ".", "AdaptiveAvgPool2d", "(", "1", ")", "\n", "self", ".", "conv_du", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "channel", ",", "channel", "//", "reduction", ",", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "channel", "//", "reduction", ",", "channel", ",", "1", ",", "padding", "=", "0", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.rcan.CALayer.forward": [[20, 24], ["rcan.CALayer.avg_pool", "rcan.CALayer.conv_du"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "self", ".", "avg_pool", "(", "x", ")", "\n", "y", "=", "self", ".", "conv_du", "(", "y", ")", "\n", "return", "x", "*", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.rcan.RCAB.__init__": [[27, 40], ["torch.ReLU", "torch.Module.__init__", "range", "modules_body.append", "torch.Sequential", "modules_body.append", "rcan.CALayer", "conv", "modules_body.append", "modules_body.append", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "\n", "self", ",", "conv", ",", "n_feat", ",", "kernel_size", ",", "reduction", ",", "\n", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", ":", "\n", "\n", "        ", "super", "(", "RCAB", ",", "self", ")", ".", "__init__", "(", ")", "\n", "modules_body", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "2", ")", ":", "\n", "            ", "modules_body", ".", "append", "(", "conv", "(", "n_feat", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "bias", ")", ")", "\n", "if", "bn", ":", "modules_body", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "n_feat", ")", ")", "\n", "if", "i", "==", "0", ":", "modules_body", ".", "append", "(", "act", ")", "\n", "", "modules_body", ".", "append", "(", "CALayer", "(", "n_feat", ",", "reduction", ")", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "modules_body", ")", "\n", "self", ".", "res_scale", "=", "res_scale", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.rcan.RCAB.forward": [[41, 46], ["rcan.RCAB.body"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "res", "=", "self", ".", "body", "(", "x", ")", "\n", "#res = self.body(x).mul(self.res_scale)", "\n", "res", "+=", "x", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.rcan.ResidualGroup.__init__": [[49, 58], ["torch.Module.__init__", "modules_body.append", "torch.Sequential", "rcan.RCAB", "conv", "range", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv", ",", "n_feat", ",", "kernel_size", ",", "reduction", ",", "act", ",", "res_scale", ",", "n_resblocks", ")", ":", "\n", "        ", "super", "(", "ResidualGroup", ",", "self", ")", ".", "__init__", "(", ")", "\n", "modules_body", "=", "[", "]", "\n", "modules_body", "=", "[", "\n", "RCAB", "(", "\n", "conv", ",", "n_feat", ",", "kernel_size", ",", "reduction", ",", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", "for", "_", "in", "range", "(", "n_resblocks", ")", "]", "\n", "modules_body", ".", "append", "(", "conv", "(", "n_feat", ",", "n_feat", ",", "kernel_size", ")", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "modules_body", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.rcan.ResidualGroup.forward": [[59, 63], ["rcan.ResidualGroup.body"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "res", "=", "self", ".", "body", "(", "x", ")", "\n", "res", "+=", "x", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.rcan.RCAN.__init__": [[65, 110], ["torch.Module.__init__", "torch.ReLU", "model.common.MeanShift", "modules_body.append", "model.common.MeanShift", "torch.Sequential", "torch.Sequential", "torch.Sequential", "print", "conv", "rcan.ResidualGroup", "conv", "model.common.Upsampler", "conv", "print", "range"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "conv", "=", "common", ".", "default_conv", ")", ":", "\n", "        ", "super", "(", "RCAN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "n_resgroups", "=", "args", ".", "n_resgroups", "\n", "n_resblocks", "=", "args", ".", "n_resblocks", "\n", "n_feats", "=", "args", ".", "n_feats", "\n", "kernel_size", "=", "3", "\n", "reduction", "=", "args", ".", "reduction", "\n", "scale", "=", "args", ".", "scale", "[", "0", "]", "\n", "act", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "\n", "# RGB mean for DIV2K 1-800", "\n", "#rgb_mean = (0.4488, 0.4371, 0.4040)", "\n", "# RGB mean for DIVFlickr2K 1-3450", "\n", "# rgb_mean = (0.4690, 0.4490, 0.4036)", "\n", "if", "args", ".", "data_train", "==", "'DIV2K'", ":", "\n", "            ", "print", "(", "'Use DIV2K mean (0.4488, 0.4371, 0.4040)'", ")", "\n", "rgb_mean", "=", "(", "0.4488", ",", "0.4371", ",", "0.4040", ")", "\n", "", "elif", "args", ".", "data_train", "==", "'DIVFlickr2K'", ":", "\n", "            ", "print", "(", "'Use DIVFlickr2K mean (0.4690, 0.4490, 0.4036)'", ")", "\n", "rgb_mean", "=", "(", "0.4690", ",", "0.4490", ",", "0.4036", ")", "\n", "", "rgb_std", "=", "(", "1.0", ",", "1.0", ",", "1.0", ")", "\n", "self", ".", "sub_mean", "=", "common", ".", "MeanShift", "(", "args", ".", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ")", "\n", "\n", "# define head module", "\n", "modules_head", "=", "[", "conv", "(", "args", ".", "n_colors", ",", "n_feats", ",", "kernel_size", ")", "]", "\n", "\n", "# define body module", "\n", "modules_body", "=", "[", "\n", "ResidualGroup", "(", "\n", "conv", ",", "n_feats", ",", "kernel_size", ",", "reduction", ",", "act", "=", "act", ",", "res_scale", "=", "args", ".", "res_scale", ",", "n_resblocks", "=", "n_resblocks", ")", "for", "_", "in", "range", "(", "n_resgroups", ")", "]", "\n", "\n", "modules_body", ".", "append", "(", "conv", "(", "n_feats", ",", "n_feats", ",", "kernel_size", ")", ")", "\n", "\n", "# define tail module", "\n", "modules_tail", "=", "[", "\n", "common", ".", "Upsampler", "(", "conv", ",", "scale", ",", "n_feats", ",", "act", "=", "False", ")", ",", "\n", "conv", "(", "n_feats", ",", "args", ".", "n_colors", ",", "kernel_size", ")", "]", "\n", "\n", "self", ".", "add_mean", "=", "common", ".", "MeanShift", "(", "args", ".", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ",", "1", ")", "\n", "\n", "self", ".", "head", "=", "nn", ".", "Sequential", "(", "*", "modules_head", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "modules_body", ")", "\n", "self", ".", "tail", "=", "nn", ".", "Sequential", "(", "*", "modules_tail", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.rcan.RCAN.forward": [[111, 122], ["rcan.RCAN.sub_mean", "rcan.RCAN.head", "rcan.RCAN.body", "rcan.RCAN.tail", "rcan.RCAN.add_mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "sub_mean", "(", "x", ")", "\n", "x", "=", "self", ".", "head", "(", "x", ")", "\n", "\n", "res", "=", "self", ".", "body", "(", "x", ")", "\n", "res", "+=", "x", "\n", "\n", "x", "=", "self", ".", "tail", "(", "res", ")", "\n", "x", "=", "self", ".", "add_mean", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.rcan.RCAN.load_state_dict": [[123, 148], ["rcan.RCAN.state_dict", "state_dict.items", "isinstance", "set", "set", "len", "KeyError", "own_state[].copy_", "rcan.RCAN.keys", "state_dict.keys", "name.find", "KeyError", "name.find", "print", "RuntimeError", "own_state[].size", "param.size"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.adversarial.Adversarial.state_dict"], ["", "def", "load_state_dict", "(", "self", ",", "state_dict", ",", "strict", "=", "False", ")", ":", "\n", "        ", "own_state", "=", "self", ".", "state_dict", "(", ")", "\n", "for", "name", ",", "param", "in", "state_dict", ".", "items", "(", ")", ":", "\n", "            ", "if", "name", "in", "own_state", ":", "\n", "                ", "if", "isinstance", "(", "param", ",", "nn", ".", "Parameter", ")", ":", "\n", "                    ", "param", "=", "param", ".", "data", "\n", "", "try", ":", "\n", "                    ", "own_state", "[", "name", "]", ".", "copy_", "(", "param", ")", "\n", "", "except", "Exception", ":", "\n", "                    ", "if", "name", ".", "find", "(", "'tail'", ")", ">=", "0", ":", "\n", "                        ", "print", "(", "'Replace pre-trained upsampler to new one...'", ")", "\n", "", "else", ":", "\n", "                        ", "raise", "RuntimeError", "(", "'While copying the parameter named {}, '", "\n", "'whose dimensions in the model are {} and '", "\n", "'whose dimensions in the checkpoint are {}.'", "\n", ".", "format", "(", "name", ",", "own_state", "[", "name", "]", ".", "size", "(", ")", ",", "param", ".", "size", "(", ")", ")", ")", "\n", "", "", "", "elif", "strict", ":", "\n", "                ", "if", "name", ".", "find", "(", "'tail'", ")", "==", "-", "1", ":", "\n", "                    ", "raise", "KeyError", "(", "'unexpected key \"{}\" in state_dict'", "\n", ".", "format", "(", "name", ")", ")", "\n", "\n", "", "", "", "if", "strict", ":", "\n", "            ", "missing", "=", "set", "(", "own_state", ".", "keys", "(", ")", ")", "-", "set", "(", "state_dict", ".", "keys", "(", ")", ")", "\n", "if", "len", "(", "missing", ")", ">", "0", ":", "\n", "                ", "raise", "KeyError", "(", "'missing keys in state_dict: \"{}\"'", ".", "format", "(", "missing", ")", ")", "", "", "", "", "", ""]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.rcan.make_model": [[5, 7], ["rcan.RCAN"], "function", ["None"], ["def", "make_model", "(", "args", ",", "parent", "=", "False", ")", ":", "\n", "    ", "return", "RCAN", "(", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.common.SELayer.__init__": [[80, 88], ["torch.Module.__init__", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.AdaptiveAvgPool2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.Sigmoid", "torch.Sigmoid", "torch.Sigmoid"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["        ", "m", "=", "[", "]", "\n", "if", "(", "scale", "&", "(", "scale", "-", "1", ")", ")", "==", "0", ":", "# Is scale = 2^n?", "\n", "            ", "for", "_", "in", "range", "(", "int", "(", "math", ".", "log", "(", "scale", ",", "2", ")", ")", ")", ":", "\n", "                ", "m", ".", "append", "(", "conv", "(", "n_feat", ",", "4", "*", "n_feat", ",", "3", ",", "bias", ")", ")", "\n", "m", ".", "append", "(", "nn", ".", "PixelShuffle", "(", "2", ")", ")", "\n", "if", "bn", ":", "m", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "n_feat", ")", ")", "\n", "if", "act", ":", "m", ".", "append", "(", "act", "(", ")", ")", "\n", "", "", "elif", "scale", "==", "3", ":", "\n", "            ", "m", ".", "append", "(", "conv", "(", "n_feat", ",", "9", "*", "n_feat", ",", "3", ",", "bias", ")", ")", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.common.SELayer.forward": [[90, 94], ["common.SELayer.avg_pool", "common.SELayer.conv_du"], "methods", ["None"], ["if", "bn", ":", "m", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "n_feat", ")", ")", "\n", "if", "act", ":", "m", ".", "append", "(", "act", "(", ")", ")", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.common.SEResBlock.__init__": [[97, 110], ["torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Module.__init__", "range", "modules_body.append", "torch.Sequential", "torch.Sequential", "torch.Sequential", "modules_body.append", "common.SELayer", "conv", "modules_body.append", "modules_body.append", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["", "", "class", "CEALayer", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "n_feats", "=", "64", ",", "reduction", "=", "16", ")", ":", "\n", "        ", "super", "(", "CEALayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv_du", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "n_feats", ",", "n_feats", "//", "reduction", ",", "1", ",", "padding", "=", "1", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", ",", "\n", "nn", ".", "Conv2d", "(", "n_feats", "//", "reduction", ",", "n_feats", ",", "5", ",", "padding", "=", "1", ",", "groups", "=", "n_feats", "//", "reduction", ",", "bias", "=", "True", ")", ",", "\n", "nn", ".", "Sigmoid", "(", ")", "\n", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "y", "=", "self", ".", "conv_du", "(", "x", ")", "\n", "return", "y", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.common.SEResBlock.forward": [[111, 117], ["common.SEResBlock.body"], "methods", ["None"], ["\n", "\n", "", "", ""]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.mdsr.MDSR.__init__": [[9, 51], ["torch.Module.__init__", "torch.ReLU", "model.common.MeanShift", "torch.ModuleList", "m_body.append", "torch.ModuleList", "model.common.MeanShift", "torch.Sequential", "torch.Sequential", "torch.Sequential", "conv", "model.common.ResBlock", "conv", "conv", "torch.Sequential", "range", "model.common.Upsampler", "model.common.ResBlock", "model.common.ResBlock"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "conv", "=", "common", ".", "default_conv", ")", ":", "\n", "        ", "super", "(", "MDSR", ",", "self", ")", ".", "__init__", "(", ")", "\n", "n_resblocks", "=", "args", ".", "n_resblocks", "\n", "n_feats", "=", "args", ".", "n_feats", "\n", "kernel_size", "=", "3", "\n", "self", ".", "scale_idx", "=", "0", "\n", "\n", "act", "=", "nn", ".", "ReLU", "(", "True", ")", "\n", "\n", "rgb_mean", "=", "(", "0.4488", ",", "0.4371", ",", "0.4040", ")", "\n", "rgb_std", "=", "(", "1.0", ",", "1.0", ",", "1.0", ")", "\n", "self", ".", "sub_mean", "=", "common", ".", "MeanShift", "(", "args", ".", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ")", "\n", "\n", "m_head", "=", "[", "conv", "(", "args", ".", "n_colors", ",", "n_feats", ",", "kernel_size", ")", "]", "\n", "\n", "self", ".", "pre_process", "=", "nn", ".", "ModuleList", "(", "[", "\n", "nn", ".", "Sequential", "(", "\n", "common", ".", "ResBlock", "(", "conv", ",", "n_feats", ",", "5", ",", "act", "=", "act", ")", ",", "\n", "common", ".", "ResBlock", "(", "conv", ",", "n_feats", ",", "5", ",", "act", "=", "act", ")", "\n", ")", "for", "_", "in", "args", ".", "scale", "\n", "]", ")", "\n", "\n", "m_body", "=", "[", "\n", "common", ".", "ResBlock", "(", "\n", "conv", ",", "n_feats", ",", "kernel_size", ",", "act", "=", "act", "\n", ")", "for", "_", "in", "range", "(", "n_resblocks", ")", "\n", "]", "\n", "m_body", ".", "append", "(", "conv", "(", "n_feats", ",", "n_feats", ",", "kernel_size", ")", ")", "\n", "\n", "self", ".", "upsample", "=", "nn", ".", "ModuleList", "(", "[", "\n", "common", ".", "Upsampler", "(", "\n", "conv", ",", "s", ",", "n_feats", ",", "act", "=", "False", "\n", ")", "for", "s", "in", "args", ".", "scale", "\n", "]", ")", "\n", "\n", "m_tail", "=", "[", "conv", "(", "n_feats", ",", "args", ".", "n_colors", ",", "kernel_size", ")", "]", "\n", "\n", "self", ".", "add_mean", "=", "common", ".", "MeanShift", "(", "args", ".", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ",", "1", ")", "\n", "\n", "self", ".", "head", "=", "nn", ".", "Sequential", "(", "*", "m_head", ")", "\n", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "m_body", ")", "\n", "self", ".", "tail", "=", "nn", ".", "Sequential", "(", "*", "m_tail", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.mdsr.MDSR.forward": [[52, 65], ["mdsr.MDSR.sub_mean", "mdsr.MDSR.head", "mdsr.MDSR.body", "mdsr.MDSR.tail", "mdsr.MDSR.add_mean"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "sub_mean", "(", "x", ")", "\n", "x", "=", "self", ".", "head", "(", "x", ")", "\n", "x", "=", "self", ".", "pre_process", "[", "self", ".", "scale_idx", "]", "(", "x", ")", "\n", "\n", "res", "=", "self", ".", "body", "(", "x", ")", "\n", "res", "+=", "x", "\n", "\n", "x", "=", "self", ".", "upsample", "[", "self", ".", "scale_idx", "]", "(", "res", ")", "\n", "x", "=", "self", ".", "tail", "(", "x", ")", "\n", "x", "=", "self", ".", "add_mean", "(", "x", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.mdsr.MDSR.set_scale": [[66, 68], ["None"], "methods", ["None"], ["", "def", "set_scale", "(", "self", ",", "scale_idx", ")", ":", "\n", "        ", "self", ".", "scale_idx", "=", "scale_idx", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.mdsr.make_model": [[5, 7], ["mdsr.MDSR"], "function", ["None"], ["def", "make_model", "(", "args", ",", "parent", "=", "False", ")", ":", "\n", "    ", "return", "MDSR", "(", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.ddbpn.DenseProjection.__init__": [[30, 53], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "ddbpn.projection_conv", "torch.PReLU", "torch.PReLU", "ddbpn.projection_conv", "torch.PReLU", "torch.PReLU", "ddbpn.projection_conv", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.ddbpn.projection_conv", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.ddbpn.projection_conv", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.ddbpn.projection_conv"], ["    ", "def", "__init__", "(", "self", ",", "in_channels", ",", "nr", ",", "scale", ",", "up", "=", "True", ",", "bottleneck", "=", "True", ")", ":", "\n", "        ", "super", "(", "DenseProjection", ",", "self", ")", ".", "__init__", "(", ")", "\n", "if", "bottleneck", ":", "\n", "            ", "self", ".", "bottleneck", "=", "nn", ".", "Sequential", "(", "*", "[", "\n", "nn", ".", "Conv2d", "(", "in_channels", ",", "nr", ",", "1", ")", ",", "\n", "nn", ".", "PReLU", "(", "nr", ")", "\n", "]", ")", "\n", "inter_channels", "=", "nr", "\n", "", "else", ":", "\n", "            ", "self", ".", "bottleneck", "=", "None", "\n", "inter_channels", "=", "in_channels", "\n", "\n", "", "self", ".", "conv_1", "=", "nn", ".", "Sequential", "(", "*", "[", "\n", "projection_conv", "(", "inter_channels", ",", "nr", ",", "scale", ",", "up", ")", ",", "\n", "nn", ".", "PReLU", "(", "nr", ")", "\n", "]", ")", "\n", "self", ".", "conv_2", "=", "nn", ".", "Sequential", "(", "*", "[", "\n", "projection_conv", "(", "nr", ",", "inter_channels", ",", "scale", ",", "not", "up", ")", ",", "\n", "nn", ".", "PReLU", "(", "inter_channels", ")", "\n", "]", ")", "\n", "self", ".", "conv_3", "=", "nn", ".", "Sequential", "(", "*", "[", "\n", "projection_conv", "(", "inter_channels", ",", "nr", ",", "scale", ",", "up", ")", ",", "\n", "nn", ".", "PReLU", "(", "nr", ")", "\n", "]", ")", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.ddbpn.DenseProjection.forward": [[55, 67], ["ddbpn.DenseProjection.conv_1", "ddbpn.DenseProjection.conv_2", "ddbpn.DenseProjection.sub", "ddbpn.DenseProjection.conv_3", "ddbpn.DenseProjection.add", "ddbpn.DenseProjection.bottleneck"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "if", "self", ".", "bottleneck", "is", "not", "None", ":", "\n", "            ", "x", "=", "self", ".", "bottleneck", "(", "x", ")", "\n", "\n", "", "a_0", "=", "self", ".", "conv_1", "(", "x", ")", "\n", "b_0", "=", "self", ".", "conv_2", "(", "a_0", ")", "\n", "e", "=", "b_0", ".", "sub", "(", "x", ")", "\n", "a_1", "=", "self", ".", "conv_3", "(", "e", ")", "\n", "\n", "out", "=", "a_0", ".", "add", "(", "a_1", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.ddbpn.DDBPN.__init__": [[69, 111], ["torch.Module.__init__", "model.common.MeanShift", "torch.Sequential", "torch.Sequential", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "range", "range", "torch.Sequential", "torch.Sequential", "model.common.MeanShift", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "torch.Conv2d", "torch.Conv2d", "torch.PReLU", "torch.PReLU", "ddbpn.DDBPN.upmodules.append", "ddbpn.DDBPN.downmodules.append", "torch.Conv2d", "torch.Conv2d", "ddbpn.DenseProjection", "ddbpn.DenseProjection"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ")", ":", "\n", "        ", "super", "(", "DDBPN", ",", "self", ")", ".", "__init__", "(", ")", "\n", "scale", "=", "args", ".", "scale", "[", "0", "]", "\n", "\n", "n0", "=", "128", "\n", "nr", "=", "32", "\n", "self", ".", "depth", "=", "6", "\n", "\n", "rgb_mean", "=", "(", "0.4488", ",", "0.4371", ",", "0.4040", ")", "\n", "rgb_std", "=", "(", "1.0", ",", "1.0", ",", "1.0", ")", "\n", "self", ".", "sub_mean", "=", "common", ".", "MeanShift", "(", "args", ".", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ")", "\n", "initial", "=", "[", "\n", "nn", ".", "Conv2d", "(", "args", ".", "n_colors", ",", "n0", ",", "3", ",", "padding", "=", "1", ")", ",", "\n", "nn", ".", "PReLU", "(", "n0", ")", ",", "\n", "nn", ".", "Conv2d", "(", "n0", ",", "nr", ",", "1", ")", ",", "\n", "nn", ".", "PReLU", "(", "nr", ")", "\n", "]", "\n", "self", ".", "initial", "=", "nn", ".", "Sequential", "(", "*", "initial", ")", "\n", "\n", "self", ".", "upmodules", "=", "nn", ".", "ModuleList", "(", ")", "\n", "self", ".", "downmodules", "=", "nn", ".", "ModuleList", "(", ")", "\n", "channels", "=", "nr", "\n", "for", "i", "in", "range", "(", "self", ".", "depth", ")", ":", "\n", "            ", "self", ".", "upmodules", ".", "append", "(", "\n", "DenseProjection", "(", "channels", ",", "nr", ",", "scale", ",", "True", ",", "i", ">", "1", ")", "\n", ")", "\n", "if", "i", "!=", "0", ":", "\n", "                ", "channels", "+=", "nr", "\n", "\n", "", "", "channels", "=", "nr", "\n", "for", "i", "in", "range", "(", "self", ".", "depth", "-", "1", ")", ":", "\n", "            ", "self", ".", "downmodules", ".", "append", "(", "\n", "DenseProjection", "(", "channels", ",", "nr", ",", "scale", ",", "False", ",", "i", "!=", "0", ")", "\n", ")", "\n", "channels", "+=", "nr", "\n", "\n", "", "reconstruction", "=", "[", "\n", "nn", ".", "Conv2d", "(", "self", ".", "depth", "*", "nr", ",", "args", ".", "n_colors", ",", "3", ",", "padding", "=", "1", ")", "\n", "]", "\n", "self", ".", "reconstruction", "=", "nn", ".", "Sequential", "(", "*", "reconstruction", ")", "\n", "\n", "self", ".", "add_mean", "=", "common", ".", "MeanShift", "(", "args", ".", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.ddbpn.DDBPN.forward": [[112, 131], ["ddbpn.DDBPN.sub_mean", "ddbpn.DDBPN.initial", "range", "h_list.append", "ddbpn.DDBPN.reconstruction", "ddbpn.DDBPN.add_mean", "h_list.append", "l_list.append", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "sub_mean", "(", "x", ")", "\n", "x", "=", "self", ".", "initial", "(", "x", ")", "\n", "\n", "h_list", "=", "[", "]", "\n", "l_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "depth", "-", "1", ")", ":", "\n", "            ", "if", "i", "==", "0", ":", "\n", "                ", "l", "=", "x", "\n", "", "else", ":", "\n", "                ", "l", "=", "torch", ".", "cat", "(", "l_list", ",", "dim", "=", "1", ")", "\n", "", "h_list", ".", "append", "(", "self", ".", "upmodules", "[", "i", "]", "(", "l", ")", ")", "\n", "l_list", ".", "append", "(", "self", ".", "downmodules", "[", "i", "]", "(", "torch", ".", "cat", "(", "h_list", ",", "dim", "=", "1", ")", ")", ")", "\n", "\n", "", "h_list", ".", "append", "(", "self", ".", "upmodules", "[", "-", "1", "]", "(", "torch", ".", "cat", "(", "l_list", ",", "dim", "=", "1", ")", ")", ")", "\n", "out", "=", "self", ".", "reconstruction", "(", "torch", ".", "cat", "(", "h_list", ",", "dim", "=", "1", ")", ")", "\n", "out", "=", "self", ".", "add_mean", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.ddbpn.make_model": [[10, 12], ["ddbpn.DDBPN"], "function", ["None"], ["def", "make_model", "(", "args", ",", "parent", "=", "False", ")", ":", "\n", "    ", "return", "DDBPN", "(", "args", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.ddbpn.projection_conv": [[13, 27], ["conv_f"], "function", ["None"], ["", "def", "projection_conv", "(", "in_channels", ",", "out_channels", ",", "scale", ",", "up", "=", "True", ")", ":", "\n", "    ", "kernel_size", ",", "stride", ",", "padding", "=", "{", "\n", "2", ":", "(", "6", ",", "2", ",", "2", ")", ",", "\n", "4", ":", "(", "8", ",", "4", ",", "2", ")", ",", "\n", "8", ":", "(", "12", ",", "8", ",", "2", ")", "\n", "}", "[", "scale", "]", "\n", "if", "up", ":", "\n", "        ", "conv_f", "=", "nn", ".", "ConvTranspose2d", "\n", "", "else", ":", "\n", "        ", "conv_f", "=", "nn", ".", "Conv2d", "\n", "\n", "", "return", "conv_f", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "\n", "stride", "=", "stride", ",", "padding", "=", "padding", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.demo.Demo.__init__": [[14, 27], ["os.listdir", "demo.Demo.filelist.sort", "demo.Demo.filelist.append", "f.find", "f.find", "os.path.join"], "methods", ["None"], ["self", ".", "name", "=", "'Demo'", "\n", "self", ".", "scale", "=", "args", ".", "scale", "\n", "self", ".", "idx_scale", "=", "0", "\n", "self", ".", "train", "=", "False", "\n", "self", ".", "benchmark", "=", "False", "\n", "\n", "self", ".", "filelist", "=", "[", "]", "\n", "for", "f", "in", "os", ".", "listdir", "(", "args", ".", "dir_demo", ")", ":", "\n", "            ", "if", "f", ".", "find", "(", "'.png'", ")", ">=", "0", "or", "f", ".", "find", "(", "'.jp'", ")", ">=", "0", ":", "\n", "                ", "self", ".", "filelist", ".", "append", "(", "os", ".", "path", ".", "join", "(", "args", ".", "dir_demo", ",", "f", ")", ")", "\n", "", "", "self", ".", "filelist", ".", "sort", "(", ")", "\n", "\n", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "filename", "=", "os", ".", "path", ".", "split", "(", "self", ".", "filelist", "[", "idx", "]", ")", "[", "-", "1", "]", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.demo.Demo.__getitem__": [[28, 36], ["os.path.splitext", "imageio.imread", "os.path.split", "torch.common.set_channel", "torch.common.np2Tensor"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.common.set_channel", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.common.np2Tensor"], ["filename", ",", "_", "=", "os", ".", "path", ".", "splitext", "(", "filename", ")", "\n", "lr", "=", "misc", ".", "imread", "(", "self", ".", "filelist", "[", "idx", "]", ")", "\n", "lr", "=", "common", ".", "set_channel", "(", "[", "lr", "]", ",", "self", ".", "args", ".", "n_colors", ")", "[", "0", "]", "\n", "\n", "return", "common", ".", "np2Tensor", "(", "[", "lr", "]", ",", "self", ".", "args", ".", "rgb_range", ")", "[", "0", "]", ",", "-", "1", ",", "filename", "\n", "\n", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "filelist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.demo.Demo.__len__": [[37, 39], ["len"], "methods", ["None"], ["", "def", "set_scale", "(", "self", ",", "idx_scale", ")", ":", "\n", "        ", "self", ".", "idx_scale", "=", "idx_scale", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.demo.Demo.set_scale": [[40, 42], ["None"], "methods", ["None"], ["", "", ""]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.srdata.SRData.__init__": [[12, 75], ["srdata.SRData._set_filesystem", "numpy.load", "srdata.SRData._scan", "srdata.SRData._name_hrbin", "numpy.load", "args.ext.find", "srdata.SRData._scan", "srdata.SRData._name_lrbin", "args.ext.find", "print", "enumerate", "v.replace", "args.ext.find", "print", "scipy.imread", "v.replace", "numpy.save", "v.replace", "range", "print", "srdata.SRData.__init__._load_bin"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.div2k.DIV2K._set_filesystem", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.div2k.DIV2K._scan", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.div2k.DIV2K._name_hrbin", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.div2k.DIV2K._scan", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.div2k.DIV2K._name_lrbin", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "train", "=", "True", ",", "benchmark", "=", "False", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "train", "=", "train", "\n", "self", ".", "split", "=", "'train'", "if", "train", "else", "'test'", "\n", "self", ".", "benchmark", "=", "benchmark", "\n", "self", ".", "scale", "=", "args", ".", "scale", "\n", "self", ".", "idx_scale", "=", "0", "\n", "\n", "self", ".", "_set_filesystem", "(", "args", ".", "dir_data", ")", "\n", "\n", "def", "_load_bin", "(", ")", ":", "\n", "            ", "self", ".", "images_hr", "=", "np", ".", "load", "(", "self", ".", "_name_hrbin", "(", ")", ")", "\n", "self", ".", "images_lr", "=", "[", "\n", "np", ".", "load", "(", "self", ".", "_name_lrbin", "(", "s", ")", ")", "for", "s", "in", "self", ".", "scale", "\n", "]", "\n", "\n", "", "if", "args", ".", "ext", "==", "'img'", "or", "benchmark", ":", "\n", "            ", "self", ".", "images_hr", ",", "self", ".", "images_lr", "=", "self", ".", "_scan", "(", ")", "\n", "", "elif", "args", ".", "ext", ".", "find", "(", "'sep'", ")", ">=", "0", ":", "\n", "            ", "self", ".", "images_hr", ",", "self", ".", "images_lr", "=", "self", ".", "_scan", "(", ")", "\n", "if", "args", ".", "ext", ".", "find", "(", "'reset'", ")", ">=", "0", ":", "\n", "                ", "print", "(", "'Preparing seperated binary files'", ")", "\n", "for", "v", "in", "self", ".", "images_hr", ":", "\n", "                    ", "hr", "=", "misc", ".", "imread", "(", "v", ")", "\n", "name_sep", "=", "v", ".", "replace", "(", "self", ".", "ext", ",", "'.npy'", ")", "\n", "np", ".", "save", "(", "name_sep", ",", "hr", ")", "\n", "", "for", "si", ",", "s", "in", "enumerate", "(", "self", ".", "scale", ")", ":", "\n", "                    ", "for", "v", "in", "self", ".", "images_lr", "[", "si", "]", ":", "\n", "                        ", "lr", "=", "misc", ".", "imread", "(", "v", ")", "\n", "name_sep", "=", "v", ".", "replace", "(", "self", ".", "ext", ",", "'.npy'", ")", "\n", "np", ".", "save", "(", "name_sep", ",", "lr", ")", "\n", "\n", "", "", "", "self", ".", "images_hr", "=", "[", "\n", "v", ".", "replace", "(", "self", ".", "ext", ",", "'.npy'", ")", "for", "v", "in", "self", ".", "images_hr", "\n", "]", "\n", "self", ".", "images_lr", "=", "[", "\n", "[", "v", ".", "replace", "(", "self", ".", "ext", ",", "'.npy'", ")", "for", "v", "in", "self", ".", "images_lr", "[", "i", "]", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "self", ".", "scale", ")", ")", "\n", "]", "\n", "\n", "", "elif", "args", ".", "ext", ".", "find", "(", "'bin'", ")", ">=", "0", ":", "\n", "            ", "try", ":", "\n", "                ", "if", "args", ".", "ext", ".", "find", "(", "'reset'", ")", ">=", "0", ":", "\n", "                    ", "raise", "IOError", "\n", "", "print", "(", "'Loading a binary file'", ")", "\n", "_load_bin", "(", ")", "\n", "", "except", ":", "\n", "                ", "print", "(", "'Preparing a binary file'", ")", "\n", "bin_path", "=", "os", ".", "path", ".", "join", "(", "self", ".", "apath", ",", "'bin'", ")", "\n", "if", "not", "os", ".", "path", ".", "isdir", "(", "bin_path", ")", ":", "\n", "                    ", "os", ".", "mkdir", "(", "bin_path", ")", "\n", "\n", "", "list_hr", ",", "list_lr", "=", "self", ".", "_scan", "(", ")", "\n", "hr", "=", "[", "misc", ".", "imread", "(", "f", ")", "for", "f", "in", "list_hr", "]", "\n", "np", ".", "save", "(", "self", ".", "_name_hrbin", "(", ")", ",", "hr", ")", "\n", "del", "hr", "\n", "for", "si", ",", "s", "in", "enumerate", "(", "self", ".", "scale", ")", ":", "\n", "                    ", "lr_scale", "=", "[", "misc", ".", "imread", "(", "f", ")", "for", "f", "in", "list_lr", "[", "si", "]", "]", "\n", "np", ".", "save", "(", "self", ".", "_name_lrbin", "(", "s", ")", ",", "lr_scale", ")", "\n", "del", "lr_scale", "\n", "", "_load_bin", "(", ")", "\n", "", "", "else", ":", "\n", "            ", "print", "(", "'Please define data type'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.srdata.SRData._scan": [[76, 78], ["None"], "methods", ["None"], ["", "", "def", "_scan", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.srdata.SRData._set_filesystem": [[79, 81], ["None"], "methods", ["None"], ["", "def", "_set_filesystem", "(", "self", ",", "dir_data", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.srdata.SRData._name_hrbin": [[82, 84], ["None"], "methods", ["None"], ["", "def", "_name_hrbin", "(", "self", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.srdata.SRData._name_lrbin": [[85, 87], ["None"], "methods", ["None"], ["", "def", "_name_lrbin", "(", "self", ",", "scale", ")", ":", "\n", "        ", "raise", "NotImplementedError", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.srdata.SRData.__getitem__": [[88, 94], ["srdata.SRData._load_file", "srdata.SRData._get_patch", "torch.common.set_channel", "torch.common.np2Tensor"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.srdata.SRData._load_file", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.srdata.SRData._get_patch", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.common.set_channel", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.common.np2Tensor"], ["", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "lr", ",", "hr", ",", "filename", "=", "self", ".", "_load_file", "(", "idx", ")", "\n", "lr", ",", "hr", "=", "self", ".", "_get_patch", "(", "lr", ",", "hr", ")", "\n", "lr", ",", "hr", "=", "common", ".", "set_channel", "(", "[", "lr", ",", "hr", "]", ",", "self", ".", "args", ".", "n_colors", ")", "\n", "lr_tensor", ",", "hr_tensor", "=", "common", ".", "np2Tensor", "(", "[", "lr", ",", "hr", "]", ",", "self", ".", "args", ".", "rgb_range", ")", "\n", "return", "lr_tensor", ",", "hr_tensor", ",", "filename", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.srdata.SRData.__len__": [[95, 97], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "images_hr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.srdata.SRData._get_index": [[98, 100], ["None"], "methods", ["None"], ["", "def", "_get_index", "(", "self", ",", "idx", ")", ":", "\n", "        ", "return", "idx", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.srdata.SRData._load_file": [[101, 119], ["srdata.SRData._get_index", "scipy.imread", "scipy.imread", "os.path.splitext", "srdata.SRData.args.ext.find", "numpy.load", "numpy.load", "str", "os.path.split"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.div2k.DIV2K._get_index", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.load"], ["", "def", "_load_file", "(", "self", ",", "idx", ")", ":", "\n", "        ", "idx", "=", "self", ".", "_get_index", "(", "idx", ")", "\n", "lr", "=", "self", ".", "images_lr", "[", "self", ".", "idx_scale", "]", "[", "idx", "]", "\n", "hr", "=", "self", ".", "images_hr", "[", "idx", "]", "\n", "if", "self", ".", "args", ".", "ext", "==", "'img'", "or", "self", ".", "benchmark", ":", "\n", "            ", "filename", "=", "hr", "\n", "lr", "=", "misc", ".", "imread", "(", "lr", ")", "\n", "hr", "=", "misc", ".", "imread", "(", "hr", ")", "\n", "", "elif", "self", ".", "args", ".", "ext", ".", "find", "(", "'sep'", ")", ">=", "0", ":", "\n", "            ", "filename", "=", "hr", "\n", "lr", "=", "np", ".", "load", "(", "lr", ")", "\n", "hr", "=", "np", ".", "load", "(", "hr", ")", "\n", "", "else", ":", "\n", "            ", "filename", "=", "str", "(", "idx", "+", "1", ")", "\n", "\n", "", "filename", "=", "os", ".", "path", ".", "splitext", "(", "os", ".", "path", ".", "split", "(", "filename", ")", "[", "-", "1", "]", ")", "[", "0", "]", "\n", "\n", "return", "lr", ",", "hr", ",", "filename", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.srdata.SRData._get_patch": [[120, 135], ["len", "torch.common.get_patch", "torch.common.augment", "torch.common.add_noise"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.common.get_patch", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.common.augment", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.common.add_noise"], ["", "def", "_get_patch", "(", "self", ",", "lr", ",", "hr", ")", ":", "\n", "        ", "patch_size", "=", "self", ".", "args", ".", "patch_size", "\n", "scale", "=", "self", ".", "scale", "[", "self", ".", "idx_scale", "]", "\n", "multi_scale", "=", "len", "(", "self", ".", "scale", ")", ">", "1", "\n", "if", "self", ".", "train", ":", "\n", "            ", "lr", ",", "hr", "=", "common", ".", "get_patch", "(", "\n", "lr", ",", "hr", ",", "patch_size", ",", "scale", ",", "multi_scale", "=", "multi_scale", "\n", ")", "\n", "lr", ",", "hr", "=", "common", ".", "augment", "(", "[", "lr", ",", "hr", "]", ")", "\n", "lr", "=", "common", ".", "add_noise", "(", "lr", ",", "self", ".", "args", ".", "noise", ")", "\n", "", "else", ":", "\n", "            ", "ih", ",", "iw", "=", "lr", ".", "shape", "[", "0", ":", "2", "]", "\n", "hr", "=", "hr", "[", "0", ":", "ih", "*", "scale", ",", "0", ":", "iw", "*", "scale", "]", "\n", "\n", "", "return", "lr", ",", "hr", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.srdata.SRData.set_scale": [[136, 138], ["None"], "methods", ["None"], ["", "def", "set_scale", "(", "self", ",", "idx_scale", ")", ":", "\n", "        ", "self", ".", "idx_scale", "=", "idx_scale", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.common.get_patch": [[11, 26], ["random.randrange", "random.randrange"], "function", ["None"], ["spatial_sum", "=", "x", ".", "sum", "(", "3", ",", "keepdim", "=", "True", ")", ".", "sum", "(", "2", ",", "keepdim", "=", "True", ")", "\n", "return", "spatial_sum", "/", "(", "x", ".", "shape", "[", "2", "]", "*", "x", ".", "shape", "[", "3", "]", ")", "\n", "\n", "", "def", "std", "(", "x", ")", ":", "\n", "    ", "assert", "(", "x", ".", "dim", "(", ")", "==", "4", ")", "\n", "x_mean", "=", "mean_channels", "(", "x", ")", "\n", "x_var", "=", "(", "x", "-", "x_mean", ")", ".", "pow", "(", "2", ")", ".", "sum", "(", "3", ",", "keepdim", "=", "True", ")", ".", "sum", "(", "2", ",", "keepdim", "=", "True", ")", "/", "(", "x", ".", "shape", "[", "2", "]", "*", "x", ".", "shape", "[", "3", "]", ")", "\n", "return", "x_var", ".", "pow", "(", "0.5", ")", "\n", "\n", "", "def", "default_conv_stride2", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "bias", "=", "False", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "2", ",", "\n", "padding", "=", "1", ",", "bias", "=", "bias", ")", "\n", "\n", "", "def", "group_conv", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "bias", "=", "True", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2d", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "padding", "=", "(", "kernel_size", "//", "2", ")", ",", "groups", "=", "6", ",", "bias", "=", "bias", ")", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.common.set_channel": [[27, 41], ["common.set_channel._set_channel"], "function", ["None"], ["\n", "", "def", "default_conv", "(", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "bias", "=", "True", ")", ":", "\n", "    ", "return", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "\n", "padding", "=", "(", "kernel_size", "//", "2", ")", ",", "bias", "=", "bias", ")", "\n", "\n", "", "class", "MeanShift", "(", "nn", ".", "Conv2d", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "rgb_range", ",", "rgb_mean", ",", "rgb_std", ",", "sign", "=", "-", "1", ")", ":", "\n", "        ", "super", "(", "MeanShift", ",", "self", ")", ".", "__init__", "(", "3", ",", "3", ",", "kernel_size", "=", "1", ")", "\n", "std", "=", "torch", ".", "Tensor", "(", "rgb_std", ")", "\n", "self", ".", "weight", ".", "data", "=", "torch", ".", "eye", "(", "3", ")", ".", "view", "(", "3", ",", "3", ",", "1", ",", "1", ")", "\n", "self", ".", "weight", ".", "data", ".", "div_", "(", "std", ".", "view", "(", "3", ",", "1", ",", "1", ",", "1", ")", ")", "\n", "self", ".", "bias", ".", "data", "=", "sign", "*", "rgb_range", "*", "torch", ".", "Tensor", "(", "rgb_mean", ")", "\n", "self", ".", "bias", ".", "data", ".", "div_", "(", "std", ")", "\n", "self", ".", "requires_grad", "=", "False", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.common.np2Tensor": [[42, 51], ["numpy.ascontiguousarray", "torch.from_numpy().float", "torch.from_numpy().float.mul_", "common.np2Tensor._np2Tensor"], "function", ["None"], ["\n", "", "", "class", "BasicBlock", "(", "nn", ".", "Sequential", ")", ":", "\n", "    ", "def", "__init__", "(", "\n", "self", ",", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "stride", "=", "1", ",", "bias", "=", "False", ",", "\n", "bn", "=", "True", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ")", ":", "\n", "\n", "        ", "m", "=", "[", "nn", ".", "Conv2d", "(", "\n", "in_channels", ",", "out_channels", ",", "kernel_size", ",", "\n", "padding", "=", "(", "kernel_size", "//", "2", ")", ",", "stride", "=", "stride", ",", "bias", "=", "bias", ")", "\n", "]", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.common.add_noise": [[52, 68], ["int", "x_noise.clip().astype.clip().astype", "numpy.random.normal", "noises.round.round", "x.astype", "noises.round.astype", "x_noise.clip().astype.clip", "numpy.random.poisson", "noises.round.mean().mean", "noises.round.mean"], "function", ["None"], ["if", "bn", ":", "m", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "out_channels", ")", ")", "\n", "if", "act", "is", "not", "None", ":", "m", ".", "append", "(", "act", ")", "\n", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", "*", "m", ")", "\n", "\n", "", "", "class", "ResBlock", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "\n", "self", ",", "conv", ",", "n_feat", ",", "kernel_size", ",", "\n", "bias", "=", "True", ",", "bn", "=", "False", ",", "act", "=", "nn", ".", "ReLU", "(", "True", ")", ",", "res_scale", "=", "1", ")", ":", "\n", "\n", "        ", "super", "(", "ResBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "m", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "2", ")", ":", "\n", "            ", "m", ".", "append", "(", "conv", "(", "n_feat", ",", "n_feat", ",", "kernel_size", ",", "bias", "=", "bias", ")", ")", "\n", "if", "bn", ":", "m", ".", "append", "(", "nn", ".", "BatchNorm2d", "(", "n_feat", ")", ")", "\n", "if", "i", "==", "0", ":", "m", ".", "append", "(", "act", ")", "\n", "\n", "", "self", ".", "body", "=", "nn", ".", "Sequential", "(", "*", "m", ")", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.common.augment": [[69, 82], ["common.augment._augment"], "function", ["None"], ["self", ".", "res_scale", "=", "res_scale", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "res", "=", "self", ".", "body", "(", "x", ")", ".", "mul", "(", "self", ".", "res_scale", ")", "\n", "res", "+=", "x", "\n", "\n", "return", "res", "\n", "\n", "", "", "class", "Upsampler", "(", "nn", ".", "Sequential", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "conv", ",", "scale", ",", "n_feat", ",", "bn", "=", "False", ",", "act", "=", "False", ",", "bias", "=", "True", ")", ":", "\n", "\n", "        ", "m", "=", "[", "]", "\n", "if", "(", "scale", "&", "(", "scale", "-", "1", ")", ")", "==", "0", ":", "# Is scale = 2^n?", "\n", "            ", "for", "_", "in", "range", "(", "int", "(", "math", ".", "log", "(", "scale", ",", "2", ")", ")", ")", ":", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.benchmark.Benchmark.__init__": [[13, 15], ["data.srdata.SRData.__init__"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "train", "=", "True", ")", ":", "\n", "        ", "super", "(", "Benchmark", ",", "self", ")", ".", "__init__", "(", "args", ",", "train", ",", "benchmark", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.benchmark.Benchmark._scan": [[16, 33], ["os.scandir", "list_hr.sort", "list_hr.append", "enumerate", "l.sort", "os.path.splitext", "os.path.join", "list_lr[].append", "os.path.join"], "methods", ["None"], ["", "def", "_scan", "(", "self", ")", ":", "\n", "        ", "list_hr", "=", "[", "]", "\n", "list_lr", "=", "[", "[", "]", "for", "_", "in", "self", ".", "scale", "]", "\n", "for", "entry", "in", "os", ".", "scandir", "(", "self", ".", "dir_hr", ")", ":", "\n", "            ", "filename", "=", "os", ".", "path", ".", "splitext", "(", "entry", ".", "name", ")", "[", "0", "]", "\n", "list_hr", ".", "append", "(", "os", ".", "path", ".", "join", "(", "self", ".", "dir_hr", ",", "filename", "+", "self", ".", "ext", ")", ")", "\n", "for", "si", ",", "s", "in", "enumerate", "(", "self", ".", "scale", ")", ":", "\n", "                ", "list_lr", "[", "si", "]", ".", "append", "(", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "dir_lr", ",", "\n", "'X{}/{}x{}{}'", ".", "format", "(", "s", ",", "filename", ",", "s", ",", "self", ".", "ext", ")", "\n", ")", ")", "\n", "\n", "", "", "list_hr", ".", "sort", "(", ")", "\n", "for", "l", "in", "list_lr", ":", "\n", "            ", "l", ".", "sort", "(", ")", "\n", "\n", "", "return", "list_hr", ",", "list_lr", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.benchmark.Benchmark._set_filesystem": [[34, 39], ["os.path.join", "os.path.join", "os.path.join"], "methods", ["None"], ["", "def", "_set_filesystem", "(", "self", ",", "dir_data", ")", ":", "\n", "        ", "self", ".", "apath", "=", "os", ".", "path", ".", "join", "(", "dir_data", ",", "'benchmark'", ",", "self", ".", "args", ".", "data_test", ")", "\n", "self", ".", "dir_hr", "=", "os", ".", "path", ".", "join", "(", "self", ".", "apath", ",", "'HR'", ")", "\n", "self", ".", "dir_lr", "=", "os", ".", "path", ".", "join", "(", "self", ".", "apath", ",", "'LR_bicubic'", ")", "\n", "self", ".", "ext", "=", "'.png'", "\n", "", "", ""]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.div2k.DIV2K.__init__": [[13, 16], ["data.srdata.SRData.__init__"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "train", "=", "True", ")", ":", "\n", "        ", "super", "(", "DIV2K", ",", "self", ")", ".", "__init__", "(", "args", ",", "train", ")", "\n", "self", ".", "repeat", "=", "args", ".", "test_every", "//", "(", "args", ".", "n_train", "//", "args", ".", "batch_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.div2k.DIV2K._scan": [[17, 37], ["range", "list_hr.append", "enumerate", "os.path.join", "list_lr[].append", "os.path.join"], "methods", ["None"], ["", "def", "_scan", "(", "self", ")", ":", "\n", "        ", "list_hr", "=", "[", "]", "\n", "list_lr", "=", "[", "[", "]", "for", "_", "in", "self", ".", "scale", "]", "\n", "if", "self", ".", "train", ":", "\n", "            ", "idx_begin", "=", "0", "\n", "idx_end", "=", "self", ".", "args", ".", "n_train", "\n", "", "else", ":", "\n", "            ", "idx_begin", "=", "self", ".", "args", ".", "n_train", "\n", "idx_end", "=", "self", ".", "args", ".", "offset_val", "+", "self", ".", "args", ".", "n_val", "\n", "\n", "", "for", "i", "in", "range", "(", "idx_begin", "+", "1", ",", "idx_end", "+", "1", ")", ":", "\n", "            ", "filename", "=", "'{:0>4}'", ".", "format", "(", "i", ")", "\n", "list_hr", ".", "append", "(", "os", ".", "path", ".", "join", "(", "self", ".", "dir_hr", ",", "filename", "+", "self", ".", "ext", ")", ")", "\n", "for", "si", ",", "s", "in", "enumerate", "(", "self", ".", "scale", ")", ":", "\n", "                ", "list_lr", "[", "si", "]", ".", "append", "(", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "dir_lr", ",", "\n", "'X{}/{}x{}{}'", ".", "format", "(", "s", ",", "filename", ",", "s", ",", "self", ".", "ext", ")", "\n", ")", ")", "\n", "\n", "", "", "return", "list_hr", ",", "list_lr", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.div2k.DIV2K._set_filesystem": [[38, 43], ["os.path.join", "os.path.join"], "methods", ["None"], ["", "def", "_set_filesystem", "(", "self", ",", "dir_data", ")", ":", "\n", "        ", "self", ".", "apath", "=", "dir_data", "+", "'/DIV2K'", "\n", "self", ".", "dir_hr", "=", "os", ".", "path", ".", "join", "(", "self", ".", "apath", ",", "'DIV2K_train_HR'", ")", "\n", "self", ".", "dir_lr", "=", "os", ".", "path", ".", "join", "(", "self", ".", "apath", ",", "'DIV2K_train_LR_bicubic'", ")", "\n", "self", ".", "ext", "=", "'.png'", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.div2k.DIV2K._name_hrbin": [[44, 49], ["os.path.join"], "methods", ["None"], ["", "def", "_name_hrbin", "(", "self", ")", ":", "\n", "        ", "return", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "apath", ",", "\n", "'bin'", ",", "\n", "'{}_bin_HR.npy'", ".", "format", "(", "self", ".", "split", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.div2k.DIV2K._name_lrbin": [[51, 56], ["os.path.join"], "methods", ["None"], ["", "def", "_name_lrbin", "(", "self", ",", "scale", ")", ":", "\n", "        ", "return", "os", ".", "path", ".", "join", "(", "\n", "self", ".", "apath", ",", "\n", "'bin'", ",", "\n", "'{}_bin_LR_X{}.npy'", ".", "format", "(", "self", ".", "split", ",", "scale", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.div2k.DIV2K.__len__": [[58, 63], ["len", "len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "train", ":", "\n", "            ", "return", "len", "(", "self", ".", "images_hr", ")", "*", "self", ".", "repeat", "\n", "", "else", ":", "\n", "            ", "return", "len", "(", "self", ".", "images_hr", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.div2k.DIV2K._get_index": [[64, 69], ["len"], "methods", ["None"], ["", "", "def", "_get_index", "(", "self", ",", "idx", ")", ":", "\n", "        ", "if", "self", ".", "train", ":", "\n", "            ", "return", "idx", "%", "len", "(", "self", ".", "images_hr", ")", "\n", "", "else", ":", "\n", "            ", "return", "idx", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.__init__.Data.__init__": [[7, 49], ["dataloader.MSDataLoader", "importlib.import_module", "dataloader.MSDataLoader", "importlib.import_module", "getattr", "importlib.import_module", "importlib.import_module", "getattr", "args.data_train.lower", "getattr", "getattr", "args.data_test.lower"], "methods", ["None"], ["\n", "class", "Model", "(", "nn", ".", "Module", ")", ":", "\n", "    ", "def", "__init__", "(", "self", ",", "args", ",", "ckp", ")", ":", "\n", "        ", "super", "(", "Model", ",", "self", ")", ".", "__init__", "(", ")", "\n", "print", "(", "'Making model...'", ")", "\n", "\n", "self", ".", "scale", "=", "args", ".", "scale", "\n", "self", ".", "idx_scale", "=", "0", "\n", "self", ".", "self_ensemble", "=", "args", ".", "self_ensemble", "\n", "self", ".", "chop", "=", "args", ".", "chop", "\n", "self", ".", "precision", "=", "args", ".", "precision", "\n", "self", ".", "cpu", "=", "args", ".", "cpu", "\n", "self", ".", "device", "=", "torch", ".", "device", "(", "'cpu'", "if", "args", ".", "cpu", "else", "'cuda'", ")", "\n", "self", ".", "n_GPUs", "=", "args", ".", "n_GPUs", "\n", "self", ".", "save_models", "=", "args", ".", "save_models", "\n", "\n", "module", "=", "import_module", "(", "'model.'", "+", "args", ".", "model", ".", "lower", "(", ")", ")", "\n", "self", ".", "model", "=", "module", ".", "make_model", "(", "args", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "if", "args", ".", "precision", "==", "'half'", ":", "self", ".", "model", ".", "half", "(", ")", "\n", "\n", "if", "not", "args", ".", "cpu", "and", "args", ".", "n_GPUs", ">", "1", ":", "\n", "            ", "self", ".", "model", "=", "nn", ".", "DataParallel", "(", "self", ".", "model", ",", "range", "(", "args", ".", "n_GPUs", ")", ")", "\n", "\n", "", "self", ".", "load", "(", "\n", "ckp", ".", "dir", ",", "\n", "pre_train", "=", "args", ".", "pre_train", ",", "\n", "resume", "=", "args", ".", "resume", ",", "\n", "cpu", "=", "args", ".", "cpu", "\n", ")", "\n", "if", "args", ".", "print_model", ":", "print", "(", "self", ".", "model", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ",", "idx_scale", ")", ":", "\n", "        ", "self", ".", "idx_scale", "=", "idx_scale", "\n", "target", "=", "self", ".", "get_model", "(", ")", "\n", "if", "hasattr", "(", "target", ",", "'set_scale'", ")", ":", "\n", "            ", "target", ".", "set_scale", "(", "idx_scale", ")", "\n", "\n", "", "if", "self", ".", "self_ensemble", "and", "not", "self", ".", "training", ":", "\n", "            ", "if", "self", ".", "chop", ":", "\n", "                ", "forward_function", "=", "self", ".", "forward_chop", "\n", "", "else", ":", "\n", "                ", "forward_function", "=", "self", ".", "model", ".", "forward", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.myimage.MyImage.__init__": [[18, 38], ["str", "os.listdir", "os.listdir", "os.listdir", "os.listdir", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "imageio.imread", "myimage.MyImage.filelist.append", "myimage.MyImage.imnamelist.append"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "train", "=", "False", ")", ":", "\n", "        ", "self", ".", "args", "=", "args", "\n", "self", ".", "train", "=", "False", "\n", "self", ".", "name", "=", "'MyImage'", "\n", "self", ".", "scale", "=", "args", ".", "scale", "\n", "self", ".", "idx_scale", "=", "0", "\n", "apath", "=", "args", ".", "testpath", "+", "'/'", "+", "args", ".", "testset", "+", "'/x'", "+", "str", "(", "args", ".", "scale", "[", "0", "]", ")", "\n", "\n", "self", ".", "filelist", "=", "[", "]", "\n", "self", ".", "imnamelist", "=", "[", "]", "\n", "if", "not", "train", ":", "\n", "            ", "for", "f", "in", "os", ".", "listdir", "(", "apath", ")", ":", "\n", "                ", "try", ":", "\n", "                    ", "filename", "=", "os", ".", "path", ".", "join", "(", "apath", ",", "f", ")", "\n", "#misc.imread(filename)", "\n", "imageio", ".", "imread", "(", "filename", ")", "\n", "self", ".", "filelist", ".", "append", "(", "filename", ")", "\n", "self", ".", "imnamelist", ".", "append", "(", "f", ")", "\n", "", "except", ":", "\n", "                    ", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.myimage.MyImage.__getitem__": [[39, 47], ["os.path.splitext", "os.path.splitext", "os.path.splitext", "os.path.splitext", "imageio.imread", "os.path.split", "os.path.split", "os.path.split", "os.path.split", "torch.common.set_channel", "torch.common.np2Tensor"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.common.set_channel", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.common.np2Tensor"], ["", "", "", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "filename", "=", "os", ".", "path", ".", "split", "(", "self", ".", "filelist", "[", "idx", "]", ")", "[", "-", "1", "]", "\n", "filename", ",", "_", "=", "os", ".", "path", ".", "splitext", "(", "filename", ")", "\n", "#lr = misc.imread(self.filelist[idx])", "\n", "lr", "=", "imageio", ".", "imread", "(", "self", ".", "filelist", "[", "idx", "]", ")", "\n", "lr", "=", "common", ".", "set_channel", "(", "[", "lr", "]", ",", "self", ".", "args", ".", "n_colors", ")", "[", "0", "]", "\n", "\n", "return", "common", ".", "np2Tensor", "(", "[", "lr", "]", ",", "self", ".", "args", ".", "rgb_range", ")", "[", "0", "]", ",", "-", "1", ",", "filename", "\n", "", "def", "__len__", "(", "self", ")", ":", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.myimage.MyImage.__len__": [[47, 49], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "filelist", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.data.myimage.MyImage.set_scale": [[50, 52], ["None"], "methods", ["None"], ["", "def", "set_scale", "(", "self", ",", "idx_scale", ")", ":", "\n", "        ", "self", ".", "idx_scale", "=", "idx_scale", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.discriminator.Discriminator.__init__": [[6, 39], ["torch.Module.__init__", "torch.LeakyReLU", "range", "torch.Sequential", "torch.Sequential", "model.common.BasicBlock", "m_features.append", "torch.Linear", "torch.Linear", "model.common.BasicBlock"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "gan_type", "=", "'GAN'", ")", ":", "\n", "        ", "super", "(", "Discriminator", ",", "self", ")", ".", "__init__", "(", ")", "\n", "\n", "in_channels", "=", "3", "\n", "out_channels", "=", "64", "\n", "depth", "=", "7", "\n", "#bn = not gan_type == 'WGAN_GP'", "\n", "bn", "=", "True", "\n", "act", "=", "nn", ".", "LeakyReLU", "(", "negative_slope", "=", "0.2", ",", "inplace", "=", "True", ")", "\n", "\n", "m_features", "=", "[", "\n", "common", ".", "BasicBlock", "(", "args", ".", "n_colors", ",", "out_channels", ",", "3", ",", "bn", "=", "bn", ",", "act", "=", "act", ")", "\n", "]", "\n", "for", "i", "in", "range", "(", "depth", ")", ":", "\n", "            ", "in_channels", "=", "out_channels", "\n", "if", "i", "%", "2", "==", "1", ":", "\n", "                ", "stride", "=", "1", "\n", "out_channels", "*=", "2", "\n", "", "else", ":", "\n", "                ", "stride", "=", "2", "\n", "", "m_features", ".", "append", "(", "common", ".", "BasicBlock", "(", "\n", "in_channels", ",", "out_channels", ",", "3", ",", "stride", "=", "stride", ",", "bn", "=", "bn", ",", "act", "=", "act", "\n", ")", ")", "\n", "\n", "", "self", ".", "features", "=", "nn", ".", "Sequential", "(", "*", "m_features", ")", "\n", "\n", "patch_size", "=", "args", ".", "patch_size", "//", "(", "2", "**", "(", "(", "depth", "+", "1", ")", "//", "2", ")", ")", "\n", "m_classifier", "=", "[", "\n", "nn", ".", "Linear", "(", "out_channels", "*", "patch_size", "**", "2", ",", "1024", ")", ",", "\n", "act", ",", "\n", "nn", ".", "Linear", "(", "1024", ",", "1", ")", "\n", "]", "\n", "self", ".", "classifier", "=", "nn", ".", "Sequential", "(", "*", "m_classifier", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.discriminator.Discriminator.forward": [[40, 45], ["discriminator.Discriminator.features", "discriminator.Discriminator.classifier", "discriminator.Discriminator.view", "discriminator.Discriminator.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "features", "=", "self", ".", "features", "(", "x", ")", "\n", "output", "=", "self", ".", "classifier", "(", "features", ".", "view", "(", "features", ".", "size", "(", "0", ")", ",", "-", "1", ")", ")", "\n", "\n", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.vgg.VGG.__init__": [[10, 23], ["torch.Module.__init__", "model.common.MeanShift", "torchvision.vgg19", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__"], ["    ", "def", "__init__", "(", "self", ",", "conv_index", ",", "rgb_range", "=", "1", ")", ":", "\n", "        ", "super", "(", "VGG", ",", "self", ")", ".", "__init__", "(", ")", "\n", "vgg_features", "=", "models", ".", "vgg19", "(", "pretrained", "=", "True", ")", ".", "features", "\n", "modules", "=", "[", "m", "for", "m", "in", "vgg_features", "]", "\n", "if", "conv_index", "==", "'22'", ":", "\n", "            ", "self", ".", "vgg", "=", "nn", ".", "Sequential", "(", "*", "modules", "[", ":", "8", "]", ")", "\n", "", "elif", "conv_index", "==", "'54'", ":", "\n", "            ", "self", ".", "vgg", "=", "nn", ".", "Sequential", "(", "*", "modules", "[", ":", "35", "]", ")", "\n", "\n", "", "vgg_mean", "=", "(", "0.485", ",", "0.456", ",", "0.406", ")", "\n", "vgg_std", "=", "(", "0.229", "*", "rgb_range", ",", "0.224", "*", "rgb_range", ",", "0.225", "*", "rgb_range", ")", "\n", "self", ".", "sub_mean", "=", "common", ".", "MeanShift", "(", "rgb_range", ",", "vgg_mean", ",", "vgg_std", ")", "\n", "self", ".", "vgg", ".", "requires_grad", "=", "False", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.vgg.VGG.forward": [[24, 37], ["vgg.VGG.forward._forward"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "sr", ",", "hr", ")", ":", "\n", "        ", "def", "_forward", "(", "x", ")", ":", "\n", "            ", "x", "=", "self", ".", "sub_mean", "(", "x", ")", "\n", "x", "=", "self", ".", "vgg", "(", "x", ")", "\n", "return", "x", "\n", "\n", "", "vgg_sr", "=", "_forward", "(", "sr", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "vgg_hr", "=", "_forward", "(", "hr", ".", "detach", "(", ")", ")", "\n", "\n", "", "loss", "=", "F", ".", "mse_loss", "(", "vgg_sr", ",", "vgg_hr", ")", "\n", "\n", "return", "loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.adversarial.Adversarial.__init__": [[12, 25], ["torch.Module.__init__", "loss.discriminator.Discriminator", "utility.make_scheduler", "utility.make_optimizer", "torch.Adam", "torch.Adam", "torch.Adam", "torch.Adam", "adversarial.Adversarial.discriminator.parameters"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.make_scheduler", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.code.utility.make_optimizer"], ["    ", "def", "__init__", "(", "self", ",", "args", ",", "gan_type", ")", ":", "\n", "        ", "super", "(", "Adversarial", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "gan_type", "=", "gan_type", "\n", "self", ".", "gan_k", "=", "args", ".", "gan_k", "\n", "self", ".", "discriminator", "=", "discriminator", ".", "Discriminator", "(", "args", ",", "gan_type", ")", "\n", "if", "gan_type", "!=", "'WGAN_GP'", ":", "\n", "            ", "self", ".", "optimizer", "=", "utility", ".", "make_optimizer", "(", "args", ",", "self", ".", "discriminator", ")", "\n", "", "else", ":", "\n", "            ", "self", ".", "optimizer", "=", "optim", ".", "Adam", "(", "\n", "self", ".", "discriminator", ".", "parameters", "(", ")", ",", "\n", "betas", "=", "(", "0", ",", "0.9", ")", ",", "eps", "=", "1e-8", ",", "lr", "=", "1e-5", "\n", ")", "\n", "", "self", ".", "scheduler", "=", "utility", ".", "make_scheduler", "(", "args", ",", "self", ".", "optimizer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.adversarial.Adversarial.forward": [[26, 77], ["fake.detach", "range", "adversarial.Adversarial.discriminator", "adversarial.Adversarial.optimizer.zero_grad", "adversarial.Adversarial.discriminator", "adversarial.Adversarial.discriminator", "loss_d.item", "loss_d.backward", "adversarial.Adversarial.optimizer.step", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.zeros_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "torch.ones_like", "adversarial.Adversarial.discriminator.parameters", "adversarial.Adversarial.gan_type.find", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "torch.binary_cross_entropy_with_logits", "adversarial.Adversarial.gan_type.find", "p.data.clamp_", "adversarial.Adversarial.mean", "adversarial.Adversarial.gan_type.find", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "torch.rand_like().view", "adversarial.Adversarial.discriminator", "gradients.view.view.view", "gradients.view.view.norm", "fake.detach.mul", "real.mul", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "torch.autograd.grad", "gradients.view.view.size", "gradients.view.norm.sub().pow().mean", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "torch.rand_like", "adversarial.Adversarial.sum", "gradients.view.norm.sub().pow", "gradients.view.norm.sub"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.step"], ["", "def", "forward", "(", "self", ",", "fake", ",", "real", ")", ":", "\n", "        ", "fake_detach", "=", "fake", ".", "detach", "(", ")", "\n", "\n", "self", ".", "loss", "=", "0", "\n", "for", "_", "in", "range", "(", "self", ".", "gan_k", ")", ":", "\n", "            ", "self", ".", "optimizer", ".", "zero_grad", "(", ")", "\n", "d_fake", "=", "self", ".", "discriminator", "(", "fake_detach", ")", "\n", "d_real", "=", "self", ".", "discriminator", "(", "real", ")", "\n", "if", "self", ".", "gan_type", "==", "'GAN'", ":", "\n", "                ", "label_fake", "=", "torch", ".", "zeros_like", "(", "d_fake", ")", "\n", "label_real", "=", "torch", ".", "ones_like", "(", "d_real", ")", "\n", "loss_d", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "d_fake", ",", "label_fake", ")", "+", "F", ".", "binary_cross_entropy_with_logits", "(", "d_real", ",", "label_real", ")", "\n", "", "elif", "self", ".", "gan_type", ".", "find", "(", "'WGAN'", ")", ">=", "0", ":", "\n", "                ", "loss_d", "=", "(", "d_fake", "-", "d_real", ")", ".", "mean", "(", ")", "\n", "if", "self", ".", "gan_type", ".", "find", "(", "'GP'", ")", ">=", "0", ":", "\n", "                    ", "epsilon", "=", "torch", ".", "rand_like", "(", "fake", ")", ".", "view", "(", "-", "1", ",", "1", ",", "1", ",", "1", ")", "\n", "hat", "=", "fake_detach", ".", "mul", "(", "1", "-", "epsilon", ")", "+", "real", ".", "mul", "(", "epsilon", ")", "\n", "hat", ".", "requires_grad", "=", "True", "\n", "d_hat", "=", "self", ".", "discriminator", "(", "hat", ")", "\n", "gradients", "=", "torch", ".", "autograd", ".", "grad", "(", "\n", "outputs", "=", "d_hat", ".", "sum", "(", ")", ",", "inputs", "=", "hat", ",", "\n", "retain_graph", "=", "True", ",", "create_graph", "=", "True", ",", "only_inputs", "=", "True", "\n", ")", "[", "0", "]", "\n", "gradients", "=", "gradients", ".", "view", "(", "gradients", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "gradient_norm", "=", "gradients", ".", "norm", "(", "2", ",", "dim", "=", "1", ")", "\n", "gradient_penalty", "=", "10", "*", "gradient_norm", ".", "sub", "(", "1", ")", ".", "pow", "(", "2", ")", ".", "mean", "(", ")", "\n", "loss_d", "+=", "gradient_penalty", "\n", "\n", "# Discriminator update", "\n", "", "", "self", ".", "loss", "+=", "loss_d", ".", "item", "(", ")", "\n", "loss_d", ".", "backward", "(", ")", "\n", "self", ".", "optimizer", ".", "step", "(", ")", "\n", "\n", "if", "self", ".", "gan_type", "==", "'WGAN'", ":", "\n", "                ", "for", "p", "in", "self", ".", "discriminator", ".", "parameters", "(", ")", ":", "\n", "                    ", "p", ".", "data", ".", "clamp_", "(", "-", "1", ",", "1", ")", "\n", "\n", "", "", "", "self", ".", "loss", "/=", "self", ".", "gan_k", "\n", "\n", "d_fake_for_g", "=", "self", ".", "discriminator", "(", "fake", ")", "\n", "if", "self", ".", "gan_type", "==", "'GAN'", ":", "\n", "            ", "loss_g", "=", "F", ".", "binary_cross_entropy_with_logits", "(", "\n", "d_fake_for_g", ",", "label_real", "\n", ")", "\n", "", "elif", "self", ".", "gan_type", ".", "find", "(", "'WGAN'", ")", ">=", "0", ":", "\n", "            ", "loss_g", "=", "-", "d_fake_for_g", ".", "mean", "(", ")", "\n", "\n", "# Generator loss", "\n", "", "return", "loss_g", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.adversarial.Adversarial.state_dict": [[78, 83], ["adversarial.Adversarial.discriminator.state_dict", "adversarial.Adversarial.optimizer.state_dict", "dict"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.adversarial.Adversarial.state_dict", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.adversarial.Adversarial.state_dict"], ["", "def", "state_dict", "(", "self", ",", "*", "args", ",", "**", "kwargs", ")", ":", "\n", "        ", "state_discriminator", "=", "self", ".", "discriminator", ".", "state_dict", "(", "*", "args", ",", "**", "kwargs", ")", "\n", "state_optimizer", "=", "self", ".", "optimizer", ".", "state_dict", "(", ")", "\n", "\n", "return", "dict", "(", "**", "state_discriminator", ",", "**", "state_optimizer", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__": [[15, 68], ["super().__init__", "print", "torch.ModuleList", "torch.ModuleList", "torch.ModuleList", "args.loss.split", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.Tensor", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "torch.device", "__init__.Loss.loss_module.to", "loss.split", "__init__.Loss.loss.append", "len", "__init__.Loss.loss.append", "__init__.Loss.loss_module.half", "torch.DataParallel", "torch.DataParallel", "torch.DataParallel", "__init__.Loss.load", "torch.MSELoss", "torch.MSELoss", "torch.MSELoss", "loss_type.find", "__init__.Loss.loss.append", "print", "__init__.Loss.loss_module.append", "range", "torch.L1Loss", "torch.L1Loss", "torch.L1Loss", "float", "loss_type.find", "importlib.import_module", "getattr", "loss_type.find", "importlib.import_module", "getattr"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.__init__", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.load"], ["self", ".", "self_ensemble", "=", "args", ".", "self_ensemble", "\n", "self", ".", "chop", "=", "args", ".", "chop", "\n", "self", ".", "precision", "=", "args", ".", "precision", "\n", "self", ".", "cpu", "=", "args", ".", "cpu", "\n", "self", ".", "device", "=", "torch", ".", "device", "(", "'cpu'", "if", "args", ".", "cpu", "else", "'cuda'", ")", "\n", "self", ".", "n_GPUs", "=", "args", ".", "n_GPUs", "\n", "self", ".", "save_models", "=", "args", ".", "save_models", "\n", "\n", "module", "=", "import_module", "(", "'model.'", "+", "args", ".", "model", ".", "lower", "(", ")", ")", "\n", "self", ".", "model", "=", "module", ".", "make_model", "(", "args", ")", ".", "to", "(", "self", ".", "device", ")", "\n", "if", "args", ".", "precision", "==", "'half'", ":", "self", ".", "model", ".", "half", "(", ")", "\n", "\n", "if", "not", "args", ".", "cpu", "and", "args", ".", "n_GPUs", ">", "1", ":", "\n", "            ", "self", ".", "model", "=", "nn", ".", "DataParallel", "(", "self", ".", "model", ",", "range", "(", "args", ".", "n_GPUs", ")", ")", "\n", "\n", "", "self", ".", "load", "(", "\n", "ckp", ".", "dir", ",", "\n", "pre_train", "=", "args", ".", "pre_train", ",", "\n", "resume", "=", "args", ".", "resume", ",", "\n", "cpu", "=", "args", ".", "cpu", "\n", ")", "\n", "if", "args", ".", "print_model", ":", "print", "(", "self", ".", "model", ")", "\n", "\n", "", "def", "forward", "(", "self", ",", "x", ",", "idx_scale", ")", ":", "\n", "        ", "self", ".", "idx_scale", "=", "idx_scale", "\n", "target", "=", "self", ".", "get_model", "(", ")", "\n", "if", "hasattr", "(", "target", ",", "'set_scale'", ")", ":", "\n", "            ", "target", ".", "set_scale", "(", "idx_scale", ")", "\n", "\n", "", "if", "self", ".", "self_ensemble", "and", "not", "self", ".", "training", ":", "\n", "            ", "if", "self", ".", "chop", ":", "\n", "                ", "forward_function", "=", "self", ".", "forward_chop", "\n", "", "else", ":", "\n", "                ", "forward_function", "=", "self", ".", "model", ".", "forward", "\n", "\n", "", "return", "self", ".", "forward_x8", "(", "x", ",", "forward_function", ")", "\n", "", "elif", "self", ".", "chop", "and", "not", "self", ".", "training", ":", "\n", "            ", "return", "self", ".", "forward_chop", "(", "x", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "model", "(", "x", ")", "\n", "\n", "", "", "def", "get_model", "(", "self", ")", ":", "\n", "        ", "if", "self", ".", "n_GPUs", "==", "1", ":", "\n", "            ", "return", "self", ".", "model", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "model", ".", "module", "\n", "\n", "", "", "def", "state_dict", "(", "self", ",", "**", "kwargs", ")", ":", "\n", "        ", "target", "=", "self", ".", "get_model", "(", ")", "\n", "return", "target", ".", "state_dict", "(", "**", "kwargs", ")", "\n", "\n", "", "def", "save", "(", "self", ",", "apath", ",", "epoch", ",", "is_best", "=", "False", ")", ":", "\n", "        ", "target", "=", "self", ".", "get_model", "(", ")", "\n", "torch", ".", "save", "(", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.forward": [[69, 85], ["enumerate", "sum", "len", "sum.item", "losses.append", "effective_loss.item"], "methods", ["None"], ["target", ".", "state_dict", "(", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "apath", ",", "'model'", ",", "'model_latest.pt'", ")", "\n", ")", "\n", "if", "is_best", ":", "\n", "            ", "torch", ".", "save", "(", "\n", "target", ".", "state_dict", "(", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "apath", ",", "'model'", ",", "'model_best.pt'", ")", "\n", ")", "\n", "\n", "", "if", "self", ".", "save_models", ":", "\n", "            ", "torch", ".", "save", "(", "\n", "target", ".", "state_dict", "(", ")", ",", "\n", "os", ".", "path", ".", "join", "(", "apath", ",", "'model'", ",", "'model_{}.pt'", ".", "format", "(", "epoch", ")", ")", "\n", ")", "\n", "\n", "", "", "def", "load", "(", "self", ",", "apath", ",", "pre_train", "=", "'.'", ",", "resume", "=", "-", "1", ",", "cpu", "=", "False", ")", ":", "\n", "        ", "if", "cpu", ":", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.step": [[86, 90], ["__init__.Loss.get_loss_module", "hasattr", "l.scheduler.step"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.get_loss_module", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.step"], ["            ", "kwargs", "=", "{", "'map_location'", ":", "lambda", "storage", ",", "loc", ":", "storage", "}", "\n", "", "else", ":", "\n", "            ", "kwargs", "=", "{", "}", "\n", "\n", "", "if", "resume", "==", "-", "1", ":", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.start_log": [[91, 93], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "len"], "methods", ["None"], ["            ", "self", ".", "get_model", "(", ")", ".", "load_state_dict", "(", "\n", "torch", ".", "load", "(", "\n", "os", ".", "path", ".", "join", "(", "apath", ",", "'model'", ",", "'model_latest.pt'", ")", ",", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.end_log": [[94, 96], ["__init__.Loss.log[].div_"], "methods", ["None"], ["**", "kwargs", "\n", ")", ",", "\n", "strict", "=", "False", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.display_loss": [[97, 104], ["zip", "log.append"], "methods", ["None"], [")", "\n", "", "elif", "resume", "==", "0", ":", "\n", "            ", "if", "pre_train", "!=", "'.'", ":", "\n", "                ", "print", "(", "'Loading model from {}'", ".", "format", "(", "pre_train", ")", ")", "\n", "self", ".", "get_model", "(", ")", ".", "load_state_dict", "(", "\n", "torch", ".", "load", "(", "pre_train", ",", "**", "kwargs", ")", ",", "\n", "strict", "=", "False", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.plot_loss": [[105, 118], ["numpy.linspace", "enumerate", "matplotlib.figure", "matplotlib.figure", "matplotlib.title", "matplotlib.title", "matplotlib.plot", "matplotlib.plot", "matplotlib.legend", "matplotlib.legend", "matplotlib.xlabel", "matplotlib.xlabel", "matplotlib.ylabel", "matplotlib.ylabel", "matplotlib.grid", "matplotlib.grid", "matplotlib.savefig", "matplotlib.savefig", "matplotlib.close", "matplotlib.close", "__init__.Loss.log[].numpy"], "methods", ["None"], ["", "", "else", ":", "\n", "            ", "self", ".", "get_model", "(", ")", ".", "load_state_dict", "(", "\n", "torch", ".", "load", "(", "\n", "os", ".", "path", ".", "join", "(", "apath", ",", "'model'", ",", "'model_{}.pt'", ".", "format", "(", "resume", ")", ")", ",", "\n", "**", "kwargs", "\n", ")", ",", "\n", "strict", "=", "False", "\n", ")", "\n", "\n", "", "", "def", "forward_chop", "(", "self", ",", "x", ",", "shave", "=", "10", ",", "min_size", "=", "160000", ")", ":", "\n", "        ", "scale", "=", "self", ".", "scale", "[", "self", ".", "idx_scale", "]", "\n", "n_GPUs", "=", "min", "(", "self", ".", "n_GPUs", ",", "4", ")", "\n", "b", ",", "c", ",", "h", ",", "w", "=", "x", ".", "size", "(", ")", "\n", "h_half", ",", "w_half", "=", "h", "//", "2", ",", "w", "//", "2", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.get_loss_module": [[119, 124], ["None"], "methods", ["None"], ["h_size", ",", "w_size", "=", "h_half", "+", "shave", ",", "w_half", "+", "shave", "\n", "lr_list", "=", "[", "\n", "x", "[", ":", ",", ":", ",", "0", ":", "h_size", ",", "0", ":", "w_size", "]", ",", "\n", "x", "[", ":", ",", ":", ",", "0", ":", "h_size", ",", "(", "w", "-", "w_size", ")", ":", "w", "]", ",", "\n", "x", "[", ":", ",", ":", ",", "(", "h", "-", "h_size", ")", ":", "h", ",", "0", ":", "w_size", "]", ",", "\n", "x", "[", ":", ",", ":", ",", "(", "h", "-", "h_size", ")", ":", "h", ",", "(", "w", "-", "w_size", ")", ":", "w", "]", "]", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save": [[125, 128], ["torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "torch.save", "__init__.Loss.state_dict", "os.path.join", "os.path.join"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.save", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.adversarial.Adversarial.state_dict"], ["\n", "if", "w_size", "*", "h_size", "<", "min_size", ":", "\n", "            ", "sr_list", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "4", ",", "n_GPUs", ")", ":", "\n"]], "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.load": [[129, 143], ["__init__.Loss.load_state_dict", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "os.path.join", "hasattr", "os.path.join", "range", "len", "l.scheduler.step"], "methods", ["home.repos.pwc.inspect_result.IVIPLab_FDIWN.model.rcan.RCAN.load_state_dict", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.load", "home.repos.pwc.inspect_result.IVIPLab_FDIWN.loss.__init__.Loss.step"], ["                ", "lr_batch", "=", "torch", ".", "cat", "(", "lr_list", "[", "i", ":", "(", "i", "+", "n_GPUs", ")", "]", ",", "dim", "=", "0", ")", "\n", "sr_batch", "=", "self", ".", "model", "(", "lr_batch", ")", "\n", "sr_list", ".", "extend", "(", "sr_batch", ".", "chunk", "(", "n_GPUs", ",", "dim", "=", "0", ")", ")", "\n", "", "", "else", ":", "\n", "            ", "sr_list", "=", "[", "\n", "self", ".", "forward_chop", "(", "patch", ",", "shave", "=", "shave", ",", "min_size", "=", "min_size", ")", "for", "patch", "in", "lr_list", "\n", "]", "\n", "\n", "", "h", ",", "w", "=", "scale", "*", "h", ",", "scale", "*", "w", "\n", "h_half", ",", "w_half", "=", "scale", "*", "h_half", ",", "scale", "*", "w_half", "\n", "h_size", ",", "w_size", "=", "scale", "*", "h_size", ",", "scale", "*", "w_size", "\n", "shave", "*=", "scale", "\n", "\n", "output", "=", "x", ".", "new", "(", "b", ",", "c", ",", "h", ",", "w", ")", "\n"]]}