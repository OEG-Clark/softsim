{"home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.load.Vocabulary.__init__": [[17, 65], ["len", "len", "len", "len", "len", "open", "pickle.load", "open", "pickle.load", "open", "pickle.load", "open", "pickle.load", "open", "pickle.load", "open", "pickle.load", "open", "pickle.load", "open", "pickle.load", "open", "pickle.load", "open", "pickle.load", "open", "pickle.load", "open", "pickle.load", "open", "pickle.load", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "name", ",", "save_dir", ")", ":", "\n", "        ", "self", ".", "name", "=", "name", "\n", "# user, item (rating or not)", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'context.pkl'", ")", ",", "'rb'", ")", "as", "fp", ":", "\n", "            ", "self", ".", "context2idx", "=", "pickle", ".", "load", "(", "fp", ")", "\n", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'context_rev.pkl'", ")", ",", "'rb'", ")", "as", "fp", ":", "\n", "            ", "self", ".", "idx2context", "=", "pickle", ".", "load", "(", "fp", ")", "\n", "", "self", ".", "n_context", "=", "len", "(", "self", ".", "context2idx", ")", "\n", "\n", "# aspect", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'aspect.pkl'", ")", ",", "'rb'", ")", "as", "fp", ":", "\n", "            ", "self", ".", "aspect2idx", "=", "pickle", ".", "load", "(", "fp", ")", "\n", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'aspect_rev.pkl'", ")", ",", "'rb'", ")", "as", "fp", ":", "\n", "            ", "self", ".", "idx2aspect", "=", "pickle", ".", "load", "(", "fp", ")", "\n", "", "self", ".", "n_aspects", "=", "len", "(", "self", ".", "aspect2idx", ")", "\n", "\n", "# entity, words", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'token.pkl'", ")", ",", "'rb'", ")", "as", "fp", ":", "\n", "            ", "self", ".", "token2idx", "=", "pickle", ".", "load", "(", "fp", ")", "\n", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'token_rev.pkl'", ")", ",", "'rb'", ")", "as", "fp", ":", "\n", "            ", "self", ".", "idx2token", "=", "pickle", ".", "load", "(", "fp", ")", "\n", "", "self", ".", "n_tokens", "=", "len", "(", "self", ".", "token2idx", ")", "\n", "\n", "# node", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'node.pkl'", ")", ",", "'rb'", ")", "as", "fp", ":", "\n", "            ", "self", ".", "node2idx", "=", "pickle", ".", "load", "(", "fp", ")", "\n", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'node_rev.pkl'", ")", ",", "'rb'", ")", "as", "fp", ":", "\n", "            ", "self", ".", "idx2node", "=", "pickle", ".", "load", "(", "fp", ")", "\n", "", "self", ".", "n_nodes", "=", "len", "(", "self", ".", "node2idx", ")", "\n", "\n", "# relation", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'relation.pkl'", ")", ",", "'rb'", ")", "as", "fp", ":", "\n", "            ", "self", ".", "relation2idx", "=", "pickle", ".", "load", "(", "fp", ")", "\n", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'relation_rev.pkl'", ")", ",", "'rb'", ")", "as", "fp", ":", "\n", "            ", "self", ".", "idx2relation", "=", "pickle", ".", "load", "(", "fp", ")", "\n", "", "self", ".", "n_relations", "=", "len", "(", "self", ".", "relation2idx", ")", "\n", "\n", "# neighbors of each node", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'node_2_neighbor.pkl'", ")", ",", "'rb'", ")", "as", "fp", ":", "\n", "            ", "self", ".", "node2neighbor", "=", "pickle", ".", "load", "(", "fp", ")", "\n", "\n", "# names of each node", "\n", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'node_2_name.pkl'", ")", ",", "'rb'", ")", "as", "fp", ":", "\n", "            ", "self", ".", "node2name", "=", "pickle", ".", "load", "(", "fp", ")", "\n", "\n", "# user item graph", "\n", "", "with", "open", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'user_item_graph.pkl'", ")", ",", "'rb'", ")", "as", "fp", ":", "\n", "            ", "self", ".", "user_item2graph", "=", "pickle", ".", "load", "(", "fp", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.load.tokenize": [[67, 96], ["print", "open", "f.readlines", "eval", "data[].split", "pairs.append", "data[].split", "sen.split"], "function", ["None"], ["", "", "", "def", "tokenize", "(", "path", ",", "vocabs", ")", ":", "\n", "    ", "print", "(", "\"Reading {}\"", ".", "format", "(", "path", ")", ")", "\n", "pairs", "=", "[", "]", "\n", "with", "open", "(", "path", ",", "'r'", ")", "as", "f", ":", "\n", "        ", "for", "line", "in", "f", ".", "readlines", "(", ")", ":", "\n", "            ", "data", "=", "eval", "(", "line", ")", "\n", "user", "=", "data", "[", "'reviewerID'", "]", "\n", "item", "=", "data", "[", "'productID'", "]", "\n", "rating", "=", "data", "[", "'overall'", "]", "\n", "\n", "user_id", "=", "vocabs", ".", "context2idx", "[", "user", "]", "\n", "item_id", "=", "vocabs", ".", "context2idx", "[", "item", "]", "\n", "rating_id", "=", "vocabs", ".", "context2idx", "[", "rating", "]", "\n", "\n", "graph", "=", "vocabs", ".", "user_item2graph", "[", "(", "user", ",", "item", ")", "]", "\n", "\n", "nodes", "=", "graph", "[", "\"Nodes\"", "]", "\n", "edges", "=", "graph", "[", "\"Edges\"", "]", "\n", "types", "=", "graph", "[", "\"Edge_types\"", "]", "\n", "\n", "aspect", "=", "[", "\"<sos>\"", "]", "+", "data", "[", "'aspect'", "]", ".", "split", "(", ")", "+", "[", "\"<eos>\"", "]", "\n", "\n", "review", "=", "data", "[", "\"review\"", "]", ".", "split", "(", "\"||\"", ")", "\n", "review", "=", "[", "[", "\"<sos>\"", "]", "+", "sen", ".", "split", "(", ")", "+", "[", "\"<eos>\"", "]", "for", "sen", "in", "review", "]", "\n", "\n", "context", "=", "[", "user_id", ",", "item_id", ",", "rating_id", "]", "\n", "pair", "=", "[", "context", ",", "aspect", ",", "review", ",", "nodes", ",", "edges", ",", "types", "]", "\n", "pairs", ".", "append", "(", "pair", ")", "\n", "", "", "return", "pairs", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.load.prepareData": [[98, 107], ["load.tokenize", "load.tokenize", "load.tokenize", "torch.save", "torch.save", "torch.save", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join", "os.path.join"], "function", ["home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.load.tokenize", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.load.tokenize", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.load.tokenize"], ["", "def", "prepareData", "(", "vocabs", ",", "save_dir", ")", ":", "\n", "    ", "train_pairs", "=", "tokenize", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'train_tok.json'", ")", ",", "vocabs", ")", "\n", "valid_pairs", "=", "tokenize", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'valid_tok.json'", ")", ",", "vocabs", ")", "\n", "test_pairs", "=", "tokenize", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'test_tok.json'", ")", ",", "vocabs", ")", "\n", "\n", "torch", ".", "save", "(", "train_pairs", ",", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'{!s}.tar'", ".", "format", "(", "'train_pairs'", ")", ")", ")", "\n", "torch", ".", "save", "(", "valid_pairs", ",", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'{!s}.tar'", ".", "format", "(", "'valid_pairs'", ")", ")", ")", "\n", "torch", ".", "save", "(", "test_pairs", ",", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'{!s}.tar'", ".", "format", "(", "'test_pairs'", ")", ")", ")", "\n", "return", "train_pairs", ",", "valid_pairs", ",", "test_pairs", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.load.loadPrepareData": [[109, 122], ["print", "load.Vocabulary", "torch.load", "torch.load", "torch.load", "os.path.join", "os.path.join", "os.path.join", "print", "load.Vocabulary", "load.prepareData"], "function", ["home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.load.prepareData"], ["", "def", "loadPrepareData", "(", "corpus_name", ",", "save_dir", ")", ":", "\n", "    ", "try", ":", "\n", "        ", "print", "(", "\"Start loading training data ...\"", ")", "\n", "vocabs", "=", "Vocabulary", "(", "corpus_name", ",", "save_dir", ")", "\n", "train_pairs", "=", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'train_pairs.tar'", ")", ")", "\n", "valid_pairs", "=", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'valid_pairs.tar'", ")", ")", "\n", "test_pairs", "=", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'test_pairs.tar'", ")", ")", "\n", "\n", "", "except", "FileNotFoundError", ":", "\n", "        ", "print", "(", "\"Saved data not found, start preparing training data ...\"", ")", "\n", "vocabs", "=", "Vocabulary", "(", "corpus_name", ",", "save_dir", ")", "\n", "train_pairs", ",", "valid_pairs", ",", "test_pairs", "=", "prepareData", "(", "vocabs", ",", "save_dir", ")", "\n", "", "return", "vocabs", ",", "train_pairs", ",", "valid_pairs", ",", "test_pairs", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.loss.masked_cross_entropy": [[5, 27], ["prediction.view", "target.view", "losses_flat.view", "losses_flat.view.masked_select().mean", "prediction.size", "torch.gather", "target.size", "losses_flat.view.masked_select"], "function", ["None"], ["def", "masked_cross_entropy", "(", "prediction", ",", "target", ",", "mask", ")", ":", "\n", "    ", "\"\"\"\n    Returns:\n        loss: An average loss value masked by the length.\n    \"\"\"", "\n", "\n", "# (batch * max_len, num_classes)", "\n", "prediction_flat", "=", "prediction", ".", "view", "(", "-", "1", ",", "prediction", ".", "size", "(", "-", "1", ")", ")", "\n", "\n", "# target_flat: (batch * max_len, 1)", "\n", "target_flat", "=", "target", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "\n", "# losses_flat: (batch * max_len, 1)", "\n", "losses_flat", "=", "-", "torch", ".", "gather", "(", "prediction_flat", ",", "dim", "=", "1", ",", "index", "=", "target_flat", ")", "\n", "\n", "# losses: (batch, max_len)", "\n", "losses", "=", "losses_flat", ".", "view", "(", "*", "target", ".", "size", "(", ")", ")", "\n", "\n", "# mask: (batch, max_len)", "\n", "loss", "=", "losses", ".", "masked_select", "(", "mask", ")", ".", "mean", "(", ")", "\n", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.loss.margin_loss": [[29, 52], ["scores.view.view", "torch.sqrt", "torch.zeros().to", "target.view", "L_c.masked_select().mean.sum().view", "L_c.masked_select().mean.masked_select().mean", "scores.view.size", "scores.view.size", "torch.max().view", "torch.max().view", "torch.zeros", "scores.view.size", "scores.view.size", "L_c.masked_select().mean.sum", "target.size", "L_c.masked_select().mean.masked_select", "torch.max", "torch.max"], "function", ["None"], ["", "def", "margin_loss", "(", "scores", ",", "target", ",", "mask", ",", "loss_lambda", "=", "0.5", ")", ":", "\n", "    ", "\"\"\"\n    :param scores: aspect capsules, [batch_size, seq_len, n_targets, capsule_size]\n    :param target: ground-truth, [batch_size, seq_len]\n    :param mask: ground-truth mask, [batch_size, seq_len]\n    :param loss_lambda: Regularization parameter.\n    :return L_c: Classification loss.\n    \"\"\"", "\n", "scores", "=", "scores", ".", "view", "(", "-", "1", ",", "scores", ".", "size", "(", "2", ")", ",", "scores", ".", "size", "(", "3", ")", ")", "\n", "\n", "v_mag", "=", "torch", ".", "sqrt", "(", "(", "scores", "**", "2", ")", ".", "sum", "(", "dim", "=", "2", ",", "keepdim", "=", "True", ")", ")", "# [batch_size, seq_len, n_targets, 1]", "\n", "\n", "zero", "=", "torch", ".", "zeros", "(", "1", ")", ".", "to", "(", "v_mag", ".", "device", ")", "\n", "m_plus", "=", "0.9", "\n", "m_minus", "=", "0.1", "\n", "max_l", "=", "torch", ".", "max", "(", "m_plus", "-", "v_mag", ",", "zero", ")", ".", "view", "(", "scores", ".", "size", "(", "0", ")", ",", "-", "1", ")", "**", "2", "\n", "max_r", "=", "torch", ".", "max", "(", "v_mag", "-", "m_minus", ",", "zero", ")", ".", "view", "(", "scores", ".", "size", "(", "0", ")", ",", "-", "1", ")", "**", "2", "\n", "\n", "T_c", "=", "target", ".", "view", "(", "-", "1", ",", "1", ")", "\n", "L_c", "=", "T_c", "*", "max_l", "+", "loss_lambda", "*", "(", "1.0", "-", "T_c", ")", "*", "max_r", "\n", "L_c", "=", "L_c", ".", "sum", "(", "dim", "=", "1", ")", ".", "view", "(", "*", "target", ".", "size", "(", ")", ")", "\n", "L_c", "=", "L_c", ".", "masked_select", "(", "mask", ")", ".", "mean", "(", ")", "\n", "return", "L_c", "\n", "", ""]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.ListModule.__init__": [[17, 26], ["super().__init__", "model.ListModule.add_module", "str"], "methods", ["home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.evaluate.Hypothesis.__init__"], ["def", "__init__", "(", "self", ",", "*", "args", ")", ":", "\n", "        ", "\"\"\"\n        Model initializing.\n        \"\"\"", "\n", "super", "(", "ListModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "idx", "=", "0", "\n", "for", "module", "in", "args", ":", "\n", "            ", "self", ".", "add_module", "(", "str", "(", "idx", ")", ",", "module", ")", "\n", "idx", "+=", "1", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.ListModule.__getitem__": [[27, 37], ["iter", "range", "next", "IndexError", "model.ListModule._modules.values", "next", "len"], "methods", ["None"], ["", "", "def", "__getitem__", "(", "self", ",", "idx", ")", ":", "\n", "        ", "\"\"\"\n        Getting the indexed layer.\n        \"\"\"", "\n", "if", "idx", "<", "0", "or", "idx", ">=", "len", "(", "self", ".", "_modules", ")", ":", "\n", "            ", "raise", "IndexError", "(", "'index {} is out of range'", ".", "format", "(", "idx", ")", ")", "\n", "", "it", "=", "iter", "(", "self", ".", "_modules", ".", "values", "(", ")", ")", "\n", "for", "i", "in", "range", "(", "idx", ")", ":", "\n", "            ", "next", "(", "it", ")", "\n", "", "return", "next", "(", "it", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.ListModule.__iter__": [[38, 43], ["iter", "model.ListModule._modules.values"], "methods", ["None"], ["", "def", "__iter__", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Iterating on the layers.\n        \"\"\"", "\n", "return", "iter", "(", "self", ".", "_modules", ".", "values", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.ListModule.__len__": [[44, 49], ["len"], "methods", ["None"], ["", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "\"\"\"\n        Number of layers.\n        \"\"\"", "\n", "return", "len", "(", "self", ".", "_modules", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.PrimaryCapsuleLayer.__init__": [[52, 65], ["super().__init__", "range", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "torch.nn.Conv1d", "model.PrimaryCapsuleLayer.add_module", "model.PrimaryCapsuleLayer.units.append", "str"], "methods", ["home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.evaluate.Hypothesis.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_units", ",", "in_channels", ",", "num_units", ",", "capsule_size", ")", ":", "\n", "        ", "super", "(", "PrimaryCapsuleLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "num_units", "=", "num_units", "\n", "self", ".", "units", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "self", ".", "num_units", ")", ":", "\n", "            ", "unit", "=", "torch", ".", "nn", ".", "Conv1d", "(", "in_channels", "=", "in_channels", ",", "# gcn_filters", "\n", "out_channels", "=", "capsule_size", ",", "# capsule_size", "\n", "kernel_size", "=", "(", "in_units", ",", "1", ")", ",", "# (gcn_layers, 1)", "\n", "stride", "=", "1", ",", "\n", "bias", "=", "True", ")", "\n", "\n", "self", ".", "add_module", "(", "\"unit_\"", "+", "str", "(", "i", ")", ",", "unit", ")", "\n", "self", ".", "units", ".", "append", "(", "unit", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.PrimaryCapsuleLayer.squash": [[66, 77], ["torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt"], "methods", ["None"], ["", "", "@", "staticmethod", "\n", "def", "squash", "(", "s", ")", ":", "\n", "        ", "\"\"\"\n        Squash activations.\n        :param s: Signal.\n        :return s: Activated signal.\n        \"\"\"", "\n", "mag_sq", "=", "torch", ".", "sum", "(", "s", "**", "2", ",", "dim", "=", "2", ",", "keepdim", "=", "True", ")", "\n", "mag", "=", "torch", ".", "sqrt", "(", "mag_sq", ")", "\n", "s", "=", "(", "mag_sq", "/", "(", "1.0", "+", "mag_sq", ")", ")", "*", "(", "s", "/", "mag", ")", "\n", "return", "s", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.PrimaryCapsuleLayer.forward": [[78, 88], ["torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "u.view.view.view", "model.PrimaryCapsuleLayer.squash", "x.size", "range"], "methods", ["home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.SecondaryCapsuleLayer.squash"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"\n        Forward propagation pass.\n        :param x: input features, shape [batch_size, num_node, gcn_layers, gcn_filters]\n        :return : primary capsule features.\n        \"\"\"", "\n", "u", "=", "[", "self", ".", "units", "[", "i", "]", "(", "x", ")", "for", "i", "in", "range", "(", "self", ".", "num_units", ")", "]", "\n", "u", "=", "torch", ".", "stack", "(", "u", ",", "dim", "=", "1", ")", "\n", "u", "=", "u", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "self", ".", "num_units", ",", "-", "1", ")", "# [batch_size, gcn_layers, num_node * capsule_size]", "\n", "return", "PrimaryCapsuleLayer", ".", "squash", "(", "u", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.SecondaryCapsuleLayer.__init__": [[91, 99], ["super().__init__", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn", "torch.randn"], "methods", ["home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.evaluate.Hypothesis.__init__"], ["    ", "def", "__init__", "(", "self", ",", "in_units", ",", "in_channels", ",", "num_units", ",", "unit_size", ")", ":", "\n", "        ", "super", "(", "SecondaryCapsuleLayer", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_units", "=", "in_units", "\n", "self", ".", "in_channels", "=", "in_channels", "\n", "self", ".", "num_units", "=", "num_units", "\n", "\n", "# [1, capsule_size, capsule_num, gcn_layers]", "\n", "self", ".", "W", "=", "torch", ".", "nn", ".", "Parameter", "(", "torch", ".", "randn", "(", "1", ",", "in_channels", ",", "num_units", ",", "unit_size", ",", "in_units", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.SecondaryCapsuleLayer.squash": [[100, 111], ["torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sum", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt", "torch.sqrt"], "methods", ["None"], ["", "@", "staticmethod", "\n", "def", "squash", "(", "s", ")", ":", "\n", "        ", "\"\"\"\n        Squash activations.\n        :param s: Signal.\n        :return s: Activated signal.\n        \"\"\"", "\n", "mag_sq", "=", "torch", ".", "sum", "(", "s", "**", "2", ",", "dim", "=", "2", ",", "keepdim", "=", "True", ")", "\n", "mag", "=", "torch", ".", "sqrt", "(", "mag_sq", ")", "\n", "s", "=", "(", "mag_sq", "/", "(", "1.0", "+", "mag_sq", ")", ")", "*", "(", "s", "/", "mag", ")", "\n", "return", "s", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.SecondaryCapsuleLayer.forward": [[112, 136], ["torch.stack().unsqueeze.size", "torch.stack().unsqueeze.size", "torch.stack().unsqueeze.size", "torch.stack().unsqueeze.transpose", "torch.stack().unsqueeze.transpose", "torch.stack().unsqueeze.transpose", "torch.stack().unsqueeze", "torch.stack().unsqueeze", "torch.stack().unsqueeze", "torch.stack().unsqueeze", "torch.stack().unsqueeze", "torch.stack().unsqueeze", "torch.stack().unsqueeze", "torch.stack().unsqueeze", "torch.stack().unsqueeze", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "torch.zeros().to", "range", "model.SecondaryCapsuleLayer.squash", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.cat().unsqueeze", "torch.cat().unsqueeze", "torch.cat().unsqueeze", "torch.cat().unsqueeze", "torch.cat().unsqueeze", "torch.cat().unsqueeze", "torch.cat().unsqueeze", "torch.cat().unsqueeze", "torch.cat().unsqueeze", "model.SecondaryCapsuleLayer.squash", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.matmul().squeeze().mean", "torch.matmul().squeeze().mean", "torch.matmul().squeeze().mean", "torch.matmul().squeeze().mean", "torch.matmul().squeeze().mean", "torch.matmul().squeeze().mean", "torch.matmul().squeeze().mean", "torch.matmul().squeeze().mean", "torch.matmul().squeeze().mean", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.zeros", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul().squeeze", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul.transpose", "torch.matmul.transpose", "torch.matmul.transpose"], "methods", ["home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.SecondaryCapsuleLayer.squash", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.SecondaryCapsuleLayer.squash"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "\"\"\"\n        Forward propagation pass.\n        :param x: input features, shape [num_node, gcn_layers, capsule_size]\n        :return : Capsule output.\n        \"\"\"", "\n", "num_node", "=", "x", ".", "size", "(", "0", ")", "\n", "x", "=", "x", ".", "transpose", "(", "1", ",", "2", ")", "# [num_node, capsule_size, gcn_layers]", "\n", "x", "=", "torch", ".", "stack", "(", "[", "x", "]", "*", "self", ".", "num_units", ",", "dim", "=", "2", ")", ".", "unsqueeze", "(", "4", ")", "# [N, capsule_size, capsule_num, gcn_layers, 1]", "\n", "W", "=", "torch", ".", "cat", "(", "[", "self", ".", "W", "]", "*", "num_node", ",", "dim", "=", "0", ")", "# [N, capsule_size, capsule_num, gcn_layers]", "\n", "u_hat", "=", "torch", ".", "matmul", "(", "W", ",", "x", ")", "# [N, capsule_size, capsule_num, 1]", "\n", "b_ij", "=", "torch", ".", "zeros", "(", "1", ",", "self", ".", "in_channels", ",", "self", ".", "num_units", ",", "1", ")", ".", "to", "(", "u_hat", ".", "device", ")", "# [1, capsule_size, capsule_num, 1]", "\n", "\n", "num_iterations", "=", "3", "\n", "for", "_", "in", "range", "(", "num_iterations", ")", ":", "\n", "            ", "c_ij", "=", "torch", ".", "nn", ".", "functional", ".", "softmax", "(", "b_ij", ",", "dim", "=", "2", ")", "\n", "c_ij", "=", "torch", ".", "cat", "(", "[", "c_ij", "]", "*", "num_node", ",", "dim", "=", "0", ")", ".", "unsqueeze", "(", "4", ")", "\n", "s_j", "=", "(", "c_ij", "*", "u_hat", ")", ".", "sum", "(", "dim", "=", "1", ",", "keepdim", "=", "True", ")", "\n", "v_j", "=", "SecondaryCapsuleLayer", ".", "squash", "(", "s_j", ")", "\n", "v_j1", "=", "torch", ".", "cat", "(", "[", "v_j", "]", "*", "self", ".", "in_channels", ",", "dim", "=", "1", ")", "\n", "u_vj1", "=", "torch", ".", "matmul", "(", "u_hat", ".", "transpose", "(", "3", ",", "4", ")", ",", "v_j1", ")", ".", "squeeze", "(", "4", ")", ".", "mean", "(", "dim", "=", "0", ",", "keepdim", "=", "True", ")", "\n", "b_ij", "=", "b_ij", "+", "u_vj1", "\n", "\n", "", "return", "v_j", ".", "squeeze", "(", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.CapsuleNet.__init__": [[139, 162], ["super().__init__", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "model.PrimaryCapsuleLayer", "model.SecondaryCapsuleLayer", "model.SecondaryCapsuleLayer"], "methods", ["home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.evaluate.Hypothesis.__init__"], ["    ", "def", "__init__", "(", "self", ",", "vocabs", ",", "capsule_size", ",", "hidden_size", ",", "gcn_layers", ",", "gcn_filters", ",", "capsule_num", ")", ":", "\n", "        ", "super", "(", "CapsuleNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "vocabs", "=", "vocabs", "\n", "self", ".", "capsule_size", "=", "capsule_size", "\n", "self", ".", "hidden_size", "=", "hidden_size", "\n", "self", ".", "gcn_layers", "=", "gcn_layers", "\n", "self", ".", "gcn_filters", "=", "gcn_filters", "\n", "self", ".", "capsule_num", "=", "capsule_num", "\n", "\n", "self", ".", "attention_1", "=", "nn", ".", "Linear", "(", "self", ".", "hidden_size", "+", "self", ".", "capsule_size", ",", "1", ",", "bias", "=", "False", ")", "\n", "\n", "self", ".", "primary_capsule_layer", "=", "PrimaryCapsuleLayer", "(", "in_units", "=", "self", ".", "gcn_filters", ",", "\n", "in_channels", "=", "self", ".", "gcn_layers", ",", "\n", "num_units", "=", "self", ".", "gcn_layers", ",", "\n", "capsule_size", "=", "self", ".", "capsule_size", ")", "\n", "self", ".", "graph_capsule_layer", "=", "SecondaryCapsuleLayer", "(", "self", ".", "gcn_layers", ",", "\n", "self", ".", "capsule_size", ",", "\n", "self", ".", "capsule_num", ",", "\n", "self", ".", "capsule_size", ")", "\n", "self", ".", "aspect_capsule_layer", "=", "SecondaryCapsuleLayer", "(", "self", ".", "capsule_size", ",", "\n", "self", ".", "capsule_num", ",", "\n", "self", ".", "vocabs", ".", "n_aspects", ",", "\n", "self", ".", "capsule_size", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.CapsuleNet.adaptive_attention": [[163, 177], ["hidden.unsqueeze().expand.unsqueeze().expand.size", "x_in.unsqueeze().expand.unsqueeze().expand.unsqueeze().expand", "hidden.unsqueeze().expand.unsqueeze().expand.unsqueeze().expand", "model.CapsuleNet.attention_1", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.nn.functional.softmax", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "x_in.unsqueeze().expand.unsqueeze().expand.unsqueeze", "hidden.unsqueeze().expand.unsqueeze().expand.unsqueeze"], "methods", ["None"], ["", "def", "adaptive_attention", "(", "self", ",", "x_in", ",", "hidden", ")", ":", "\n", "        ", "\"\"\"\n        :param x_in: graph capsule output, shape [capsule_num, capsule_size]\n        :param hidden: hidden representation from rnn, shape [seq_len, hidden_size]\n        \"\"\"", "\n", "seq_len", "=", "hidden", ".", "size", "(", "0", ")", "\n", "x_in", "=", "x_in", ".", "unsqueeze", "(", "0", ")", ".", "expand", "(", "seq_len", ",", "-", "1", ",", "-", "1", ")", "\n", "hidden", "=", "hidden", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "-", "1", ",", "self", ".", "capsule_num", ",", "-", "1", ")", "\n", "\n", "# [seq_len, capsule_num, 1]", "\n", "attention_score_base", "=", "self", ".", "attention_1", "(", "torch", ".", "cat", "(", "(", "x_in", ",", "hidden", ")", ",", "dim", "=", "-", "1", ")", ")", "\n", "attention_score", "=", "torch", ".", "nn", ".", "functional", ".", "softmax", "(", "attention_score_base", ",", "dim", "=", "1", ")", "\n", "condensed_x", "=", "x_in", "*", "attention_score", "\n", "return", "condensed_x", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.CapsuleNet.forward": [[178, 208], ["graph_embed.size", "range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "model.CapsuleNet.primary_capsule_layer", "primary_capsule_output.view.view.view", "model.CapsuleNet.graph_capsule_layer", "torch.mean().view.view", "torch.mean().view.view", "torch.mean().view.view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "torch.mean().view", "model.CapsuleNet.adaptive_attention", "adaptive_capsule_output.transpose().contiguous.transpose().contiguous.transpose().contiguous", "model.CapsuleNet.aspect_capsule_layer", "aspect_capsule_output.view.view.view", "torch.stack.append", "torch.stack.append", "torch.stack.append", "graph_embed[].unsqueeze", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "torch.mean", "adaptive_capsule_output.transpose().contiguous.transpose().contiguous.transpose"], "methods", ["home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.CapsuleNet.adaptive_attention"], ["", "def", "forward", "(", "self", ",", "graph_embed", ",", "hidden", ")", ":", "\n", "        ", "\"\"\"\n        :param graph_embed: shape [batch_size, gcn_layers, gcn_filters, num_node] == primary capsules\n        :param hidden: shape [batch_size, seq_len, hidden_size]\n        :return:\n        \"\"\"", "\n", "aspect_capsules", "=", "[", "]", "\n", "batch_size", "=", "graph_embed", ".", "size", "(", "0", ")", "\n", "for", "bi", "in", "range", "(", "batch_size", ")", ":", "\n", "# [gcn_layers, num_node * capsule_size] -> [num_node, gcn_layers * capsule_size]", "\n", "            ", "primary_capsule_output", "=", "self", ".", "primary_capsule_layer", "(", "graph_embed", "[", "bi", ",", ":", ",", ":", ",", ":", "]", ".", "unsqueeze", "(", "0", ")", ")", "\n", "primary_capsule_output", "=", "primary_capsule_output", ".", "view", "(", "-", "1", ",", "self", ".", "gcn_layers", ",", "self", ".", "capsule_size", ")", "\n", "\n", "# [num_node, gcn_layers * capsule_size] -> [capsule_num, capsule_size]", "\n", "graph_capsule_output", "=", "self", ".", "graph_capsule_layer", "(", "primary_capsule_output", ")", "\n", "graph_capsule_output", "=", "graph_capsule_output", ".", "view", "(", "-", "1", ",", "self", ".", "capsule_size", ",", "self", ".", "capsule_num", ")", "\n", "graph_capsule_output", "=", "torch", ".", "mean", "(", "graph_capsule_output", ",", "dim", "=", "0", ")", ".", "view", "(", "self", ".", "capsule_num", ",", "self", ".", "capsule_size", ")", "\n", "\n", "# [capsule_num, capsule_size] -> [seq_len, capsule_num, capsule_size]", "\n", "adaptive_capsule_output", "=", "self", ".", "adaptive_attention", "(", "graph_capsule_output", ",", "hidden", "[", "bi", ",", ":", ",", ":", "]", ")", "\n", "adaptive_capsule_output", "=", "adaptive_capsule_output", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "\n", "# [seq_len, capsule_num, capsule_size] -> [seq_len, n_aspects, capsule_size]", "\n", "aspect_capsule_output", "=", "self", ".", "aspect_capsule_layer", "(", "adaptive_capsule_output", ")", "\n", "aspect_capsule_output", "=", "aspect_capsule_output", ".", "view", "(", "-", "1", ",", "self", ".", "vocabs", ".", "n_aspects", ",", "self", ".", "capsule_size", ")", "\n", "\n", "aspect_capsules", ".", "append", "(", "aspect_capsule_output", ")", "\n", "", "aspect_capsules", "=", "torch", ".", "stack", "(", "aspect_capsules", ",", "dim", "=", "0", ")", "\n", "\n", "return", "aspect_capsules", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.ContextEncoder.__init__": [[211, 223], ["torch.nn.Module.__init__", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "model.ContextEncoder.init_weights"], "methods", ["home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.evaluate.Hypothesis.__init__", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.ReviewModel.init_weights"], ["    ", "def", "__init__", "(", "self", ",", "vocabs", ",", "embed_size", ",", "hidden_size", ",", "rnn_layers", ")", ":", "\n", "        ", "super", "(", "ContextEncoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "vocabs", "=", "vocabs", "\n", "self", ".", "embed_size", "=", "embed_size", "\n", "self", ".", "hidden_size", "=", "hidden_size", "\n", "self", ".", "rnn_layers", "=", "rnn_layers", "\n", "\n", "self", ".", "context_embedding", "=", "nn", ".", "Embedding", "(", "self", ".", "vocabs", ".", "n_context", ",", "self", ".", "embed_size", ")", "\n", "\n", "self", ".", "trans_linear", "=", "nn", ".", "Linear", "(", "self", ".", "embed_size", "*", "3", ",", "self", ".", "rnn_layers", "*", "self", ".", "hidden_size", ")", "\n", "\n", "self", ".", "init_weights", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.ContextEncoder.init_weights": [[224, 230], ["model.ContextEncoder.context_embedding.weight.data.uniform_", "model.ContextEncoder.trans_linear.bias.data.fill_", "model.ContextEncoder.trans_linear.weight.data.uniform_"], "methods", ["None"], ["", "def", "init_weights", "(", "self", ")", ":", "\n", "        ", "initrange", "=", "0.1", "\n", "self", ".", "context_embedding", ".", "weight", ".", "data", ".", "uniform_", "(", "-", "initrange", ",", "initrange", ")", "\n", "\n", "self", ".", "trans_linear", ".", "bias", ".", "data", ".", "fill_", "(", "0", ")", "\n", "self", ".", "trans_linear", ".", "weight", ".", "data", ".", "uniform_", "(", "-", "initrange", ",", "initrange", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.ContextEncoder.forward": [[231, 243], ["model.ContextEncoder.context_embedding", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "hidden.view().transpose().contiguous.view().transpose().contiguous.view().transpose().contiguous", "model.ContextEncoder.trans_linear", "model.ContextEncoder.view", "hidden.view().transpose().contiguous.view().transpose().contiguous.view().transpose", "hidden.view().transpose().contiguous.view().transpose().contiguous.view"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "context", ")", ":", "\n", "        ", "\"\"\"\n        :param context: (batch, 3)\n        \"\"\"", "\n", "# (batch_size, 3, embed_size) -> (batch_size, rnn_layers * hidden_size)", "\n", "context_embed", "=", "self", ".", "context_embedding", "(", "context", ")", "\n", "hidden", "=", "torch", ".", "tanh", "(", "self", ".", "trans_linear", "(", "context_embed", ".", "view", "(", "-", "1", ",", "self", ".", "embed_size", "*", "3", ")", ")", ")", "\n", "\n", "# (rnn_layers, batch_size, hidden_size)", "\n", "hidden", "=", "hidden", ".", "view", "(", "-", "1", ",", "self", ".", "rnn_layers", ",", "self", ".", "hidden_size", ")", ".", "transpose", "(", "0", ",", "1", ")", ".", "contiguous", "(", ")", "\n", "\n", "return", "context_embed", ",", "hidden", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.GraphEncoder.__init__": [[246, 261], ["torch.nn.Module.__init__", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "range", "model.ListModule", "model.GraphEncoder.init_weights", "torch_geometric.nn.conv.gcn_conv.GCNConv", "model.GraphEncoder.gcn.append", "torch_geometric.nn.conv.gcn_conv.GCNConv"], "methods", ["home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.evaluate.Hypothesis.__init__", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.ReviewModel.init_weights"], ["    ", "def", "__init__", "(", "self", ",", "vocabs", ",", "node_size", ",", "gcn_layers", ",", "gcn_filters", ")", ":", "\n", "        ", "super", "(", "GraphEncoder", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "vocabs", "=", "vocabs", "\n", "self", ".", "node_size", "=", "node_size", "\n", "self", ".", "gcn_layers", "=", "gcn_layers", "\n", "self", ".", "gcn_filters", "=", "gcn_filters", "\n", "\n", "self", ".", "node_embedding", "=", "nn", ".", "Embedding", "(", "self", ".", "vocabs", ".", "n_nodes", ",", "self", ".", "node_size", ")", "\n", "\n", "self", ".", "gcn", "=", "[", "GCNConv", "(", "self", ".", "node_size", ",", "self", ".", "gcn_filters", ")", "]", "\n", "for", "layer", "in", "range", "(", "self", ".", "gcn_layers", "-", "1", ")", ":", "\n", "            ", "self", ".", "gcn", ".", "append", "(", "GCNConv", "(", "self", ".", "gcn_filters", ",", "self", ".", "gcn_filters", ")", ")", "\n", "", "self", ".", "gcn", "=", "ListModule", "(", "*", "self", ".", "gcn", ")", "\n", "\n", "self", ".", "init_weights", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.GraphEncoder.init_weights": [[262, 265], ["model.GraphEncoder.node_embedding.weight.data.uniform_"], "methods", ["None"], ["", "def", "init_weights", "(", "self", ")", ":", "\n", "        ", "initrange", "=", "0.1", "\n", "self", ".", "node_embedding", ".", "weight", ".", "data", ".", "uniform_", "(", "-", "initrange", ",", "initrange", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.GraphEncoder.forward": [[266, 288], ["graph_nodes.size", "range", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "model.GraphEncoder.node_embedding", "torch.stack().transpose().contiguous", "torch.stack().transpose().contiguous", "torch.stack().transpose().contiguous", "torch.stack().transpose().contiguous", "torch.stack().transpose().contiguous", "torch.stack().transpose().contiguous", "torch.stack().transpose().contiguous", "torch.stack().transpose().contiguous", "torch.stack().transpose().contiguous", "torch.stack.append", "torch.stack.append", "torch.stack.append", "torch.nn.functional.relu", "torch.nn.functional.relu", "torch.nn.functional.relu", "torch.nn.functional.relu", "torch.nn.functional.relu", "torch.nn.functional.relu", "torch.nn.functional.relu", "torch.nn.functional.relu", "torch.nn.functional.relu", "torch.stack().transpose().contiguous.append", "torch.stack().transpose().contiguous.append", "torch.stack().transpose().contiguous.append", "layer", "torch.stack().transpose", "torch.stack().transpose", "torch.stack().transpose", "torch.stack().transpose", "torch.stack().transpose", "torch.stack().transpose", "torch.stack().transpose", "torch.stack().transpose", "torch.stack().transpose", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "graph_nodes", ",", "graph_edges", ",", "edge_types", ")", ":", "\n", "        ", "\"\"\"\n        :param graph_nodes: user graph nodes, in shape (batch_size, node_num)\n        :param graph_edges: user graph edges, in shape (batch_size, 2, edge_num)\n        :param edge_types: user graph edge types, in shape (batch_size, edge_num)\n        \"\"\"", "\n", "batch_size", "=", "graph_nodes", ".", "size", "(", "0", ")", "\n", "\n", "# (batch_size, node_num, gcn_filters)", "\n", "graph_embed", "=", "[", "]", "\n", "for", "bi", "in", "range", "(", "batch_size", ")", ":", "\n", "            ", "graph_feature", "=", "[", "]", "\n", "feature", "=", "self", ".", "node_embedding", "(", "graph_nodes", "[", "bi", ",", ":", "]", ")", "# [node_num, node_size]", "\n", "edge", "=", "graph_edges", "[", "bi", ",", ":", ",", ":", "]", "\n", "for", "layer", "in", "self", ".", "gcn", ":", "\n", "                ", "feature", "=", "torch", ".", "nn", ".", "functional", ".", "relu", "(", "layer", "(", "feature", ",", "edge", ")", ")", "# [num_node, gcn_filters]", "\n", "graph_feature", ".", "append", "(", "feature", ")", "\n", "", "graph_feature", "=", "torch", ".", "stack", "(", "graph_feature", ",", "dim", "=", "0", ")", ".", "transpose", "(", "1", ",", "2", ")", ".", "contiguous", "(", ")", "\n", "graph_embed", ".", "append", "(", "graph_feature", ")", "\n", "", "graph_embed", "=", "torch", ".", "stack", "(", "graph_embed", ",", "0", ")", "# [batch_size, gcn_layers, gcn_filters, num_node]", "\n", "\n", "return", "graph_embed", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.AspectModel.__init__": [[291, 323], ["torch.nn.Module.__init__", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "model.ContextEncoder", "model.GraphEncoder", "model.CapsuleNet", "torch.nn.GRU", "torch.nn.GRU", "torch.nn.GRU", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "model.AspectModel.init_weights"], "methods", ["home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.evaluate.Hypothesis.__init__", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.ReviewModel.init_weights"], ["    ", "def", "__init__", "(", "self", ",", "vocabs", ",", "embed_size", ",", "node_size", ",", "hidden_size", ",", "capsule_size", ",", "gcn_layers", ",", "gcn_filters", ",", "\n", "rnn_layers", ",", "capsule_num", ",", "dropout", "=", "0.2", ")", ":", "\n", "        ", "super", "(", "AspectModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "vocabs", "=", "vocabs", "\n", "self", ".", "embed_size", "=", "embed_size", "\n", "self", ".", "node_size", "=", "node_size", "\n", "self", ".", "hidden_size", "=", "hidden_size", "\n", "self", ".", "capsule_size", "=", "capsule_size", "\n", "self", ".", "gcn_layers", "=", "gcn_layers", "\n", "self", ".", "gcn_filters", "=", "gcn_filters", "\n", "self", ".", "rnn_layers", "=", "rnn_layers", "\n", "self", ".", "capsule_num", "=", "capsule_num", "\n", "self", ".", "dropout", "=", "dropout", "\n", "\n", "# aspect embedding", "\n", "self", ".", "aspect_embedding", "=", "nn", ".", "Embedding", "(", "self", ".", "vocabs", ".", "n_aspects", ",", "self", ".", "embed_size", ",", "padding_idx", "=", "PAD_ID", ")", "\n", "\n", "self", ".", "context_encoder", "=", "ContextEncoder", "(", "self", ".", "vocabs", ",", "self", ".", "embed_size", ",", "self", ".", "hidden_size", ",", "self", ".", "rnn_layers", ")", "\n", "self", ".", "graph_encoder", "=", "GraphEncoder", "(", "self", ".", "vocabs", ",", "self", ".", "node_size", ",", "self", ".", "gcn_layers", ",", "self", ".", "gcn_filters", ")", "\n", "self", ".", "capsulenet", "=", "CapsuleNet", "(", "self", ".", "vocabs", ",", "self", ".", "capsule_size", ",", "self", ".", "hidden_size", ",", "self", ".", "gcn_layers", ",", "\n", "self", ".", "gcn_filters", ",", "self", ".", "capsule_num", ")", "\n", "self", ".", "decoder", "=", "nn", ".", "GRU", "(", "self", ".", "embed_size", ",", "self", ".", "hidden_size", ",", "self", ".", "rnn_layers", ",", "batch_first", "=", "True", ",", "\n", "dropout", "=", "self", ".", "dropout", ")", "\n", "\n", "self", ".", "dropout_layer", "=", "nn", ".", "Dropout", "(", "self", ".", "dropout", ")", "\n", "\n", "self", ".", "context_linear", "=", "nn", ".", "Linear", "(", "self", ".", "embed_size", "+", "self", ".", "hidden_size", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "global_linear", "=", "nn", ".", "Linear", "(", "self", ".", "embed_size", "+", "self", ".", "hidden_size", ",", "self", ".", "hidden_size", ")", "\n", "self", ".", "pre_vocab_linear", "=", "nn", ".", "Linear", "(", "self", ".", "embed_size", "+", "self", ".", "node_size", "+", "self", ".", "hidden_size", ",", "self", ".", "hidden_size", ")", "\n", "self", ".", "vocab_linear", "=", "nn", ".", "Linear", "(", "self", ".", "hidden_size", ",", "self", ".", "vocabs", ".", "n_aspects", ")", "\n", "\n", "self", ".", "init_weights", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.AspectModel.init_weights": [[324, 338], ["model.AspectModel.aspect_embedding.weight.data.uniform_", "model.AspectModel.context_linear.weight.data.uniform_", "model.AspectModel.global_linear.bias.data.fill_", "model.AspectModel.global_linear.weight.data.uniform_", "model.AspectModel.pre_vocab_linear.bias.data.fill_", "model.AspectModel.pre_vocab_linear.weight.data.uniform_", "model.AspectModel.vocab_linear.bias.data.fill_", "model.AspectModel.vocab_linear.weight.data.uniform_"], "methods", ["None"], ["", "def", "init_weights", "(", "self", ")", ":", "\n", "        ", "initrange", "=", "0.1", "\n", "self", ".", "aspect_embedding", ".", "weight", ".", "data", ".", "uniform_", "(", "-", "initrange", ",", "initrange", ")", "\n", "\n", "self", ".", "context_linear", ".", "weight", ".", "data", ".", "uniform_", "(", "-", "initrange", ",", "initrange", ")", "\n", "\n", "self", ".", "global_linear", ".", "bias", ".", "data", ".", "fill_", "(", "0", ")", "\n", "self", ".", "global_linear", ".", "weight", ".", "data", ".", "uniform_", "(", "-", "initrange", ",", "initrange", ")", "\n", "\n", "self", ".", "pre_vocab_linear", ".", "bias", ".", "data", ".", "fill_", "(", "0", ")", "\n", "self", ".", "pre_vocab_linear", ".", "weight", ".", "data", ".", "uniform_", "(", "-", "initrange", ",", "initrange", ")", "\n", "\n", "self", ".", "vocab_linear", ".", "bias", ".", "data", ".", "fill_", "(", "0", ")", "\n", "self", ".", "vocab_linear", ".", "weight", ".", "data", ".", "uniform_", "(", "-", "initrange", ",", "initrange", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.AspectModel.context_attention": [[339, 361], ["context_embed.size", "output.unsqueeze().expand.unsqueeze().expand.size", "output.unsqueeze().expand.unsqueeze().expand.unsqueeze().expand", "context_embed.unsqueeze().expand", "model.AspectModel.context_linear().squeeze", "torch.softmax", "torch.softmax", "torch.softmax", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "output.unsqueeze().expand.unsqueeze().expand.unsqueeze", "context_embed.unsqueeze", "model.AspectModel.context_linear", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "context_attention", "(", "self", ",", "output", ",", "context_embed", ")", ":", "\n", "        ", "\"\"\"\n        args:\n            output: shape [batch_size, seq_len, hidden_size]\n            context_embed: shape [batch_size, 3, embed_size]\n        outputs:\n            context_repre: shape [batch_size, seq_len, node_size]\n        \"\"\"", "\n", "n_context", "=", "context_embed", ".", "size", "(", "1", ")", "\n", "seq_len", "=", "output", ".", "size", "(", "1", ")", "\n", "\n", "output", "=", "output", ".", "unsqueeze", "(", "2", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "n_context", ",", "-", "1", ")", "\n", "context", "=", "context_embed", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "-", "1", ",", "seq_len", ",", "-", "1", ",", "-", "1", ")", "\n", "\n", "# [batch_size, seq_len, n_context]", "\n", "energies", "=", "self", ".", "context_linear", "(", "torch", ".", "cat", "(", "[", "output", ",", "context", "]", ",", "dim", "=", "-", "1", ")", ")", ".", "squeeze", "(", "-", "1", ")", "\n", "\n", "context_probs", "=", "F", ".", "softmax", "(", "energies", ",", "dim", "=", "-", "1", ")", "# [batch_size, seq_len, n_context]", "\n", "\n", "context_repre", "=", "torch", ".", "matmul", "(", "context_probs", ",", "context_embed", ")", "# [batch_size, seq_len, embed_size]", "\n", "\n", "return", "context_repre", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.AspectModel.forward_context": [[362, 365], ["model.AspectModel.context_encoder"], "methods", ["None"], ["", "def", "forward_context", "(", "self", ",", "context", ")", ":", "\n", "        ", "context_embed", ",", "hidden", "=", "self", ".", "context_encoder", "(", "context", ")", "\n", "return", "context_embed", ",", "hidden", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.AspectModel.forward_graph": [[366, 369], ["model.AspectModel.graph_encoder"], "methods", ["None"], ["", "def", "forward_graph", "(", "self", ",", "graph_nodes", ",", "graph_edges", ",", "edge_types", ")", ":", "\n", "        ", "graph_embed", "=", "self", ".", "graph_encoder", "(", "graph_nodes", ",", "graph_edges", ",", "edge_types", ")", "\n", "return", "graph_embed", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.AspectModel.forward": [[370, 397], ["model.AspectModel.dropout_layer", "model.AspectModel.decoder", "model.AspectModel.context_attention", "model.AspectModel.global_linear", "model.AspectModel.capsulenet", "model.AspectModel.aspect_embedding", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.ReviewModel.context_attention"], ["", "def", "forward", "(", "self", ",", "context_embed", ",", "last_hidden", ",", "input_seq", ",", "graph_embed", ")", ":", "\n", "        ", "\"\"\"\n        :param context_embed:\n            context outputs from encoder in shape (batch_size, 3, node_size)\n        :param last_hidden:\n            tuple, last hidden stat of the decoder, in shape (n_layers, batch_size, hidden_size)\n        :param input_seq:\n            aspect input for all time steps, in shape (batch_size, seq_len)\n        :param graph_embed:\n            graph outputs from encoder in shape (batch_size, num_node, node_size)\n        \"\"\"", "\n", "aspect_embed", "=", "self", ".", "dropout_layer", "(", "self", ".", "aspect_embedding", "(", "input_seq", ")", ")", "\n", "\n", "# rnn_output: [batch_size, seq_len, hidden_size]", "\n", "# hidden: [n_layers, batch_size, hidden_size]", "\n", "rnn_output", ",", "hidden", "=", "self", ".", "decoder", "(", "aspect_embed", ",", "last_hidden", ")", "\n", "\n", "# [batch_size, seq_len, embed_size]", "\n", "context_repre", "=", "self", ".", "context_attention", "(", "rnn_output", ",", "context_embed", ")", "\n", "\n", "# [batch_size, seq_len, hidden_size]", "\n", "global_repre", "=", "self", ".", "global_linear", "(", "torch", ".", "cat", "(", "(", "rnn_output", ",", "context_repre", ")", ",", "2", ")", ")", "\n", "\n", "# [batch_size, seq_len, n_aspects, capsule_size]", "\n", "aspect_capsules", "=", "self", ".", "capsulenet", "(", "graph_embed", ",", "global_repre", ")", "\n", "\n", "return", "aspect_capsules", ",", "hidden", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.ReviewModel.__init__": [[400, 425], ["torch.nn.Module.__init__", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "model.ContextEncoder", "torch.nn.GRU", "torch.nn.GRU", "torch.nn.GRU", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Dropout", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "torch.nn.Linear", "model.ReviewModel.init_weights"], "methods", ["home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.evaluate.Hypothesis.__init__", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.ReviewModel.init_weights"], ["    ", "def", "__init__", "(", "self", ",", "vocabs", ",", "embed_size", ",", "node_size", ",", "hidden_size", ",", "rnn_layers", ",", "dropout", "=", "0.2", ")", ":", "\n", "        ", "super", "(", "ReviewModel", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "vocabs", "=", "vocabs", "\n", "self", ".", "embed_size", "=", "embed_size", "\n", "self", ".", "node_size", "=", "node_size", "\n", "self", ".", "hidden_size", "=", "hidden_size", "\n", "self", ".", "rnn_layers", "=", "rnn_layers", "\n", "self", ".", "dropout", "=", "dropout", "\n", "\n", "self", ".", "aspect_embedding", "=", "nn", ".", "Embedding", "(", "self", ".", "vocabs", ".", "n_aspects", ",", "self", ".", "embed_size", ",", "padding_idx", "=", "PAD_ID", ")", "\n", "self", ".", "token_embedding", "=", "nn", ".", "Embedding", "(", "self", ".", "vocabs", ".", "n_tokens", ",", "self", ".", "embed_size", ",", "padding_idx", "=", "PAD_ID", ")", "\n", "\n", "self", ".", "context_encoder", "=", "ContextEncoder", "(", "self", ".", "vocabs", ",", "self", ".", "embed_size", ",", "self", ".", "hidden_size", ",", "self", ".", "rnn_layers", ")", "\n", "self", ".", "decoder", "=", "nn", ".", "GRU", "(", "self", ".", "embed_size", ",", "self", ".", "hidden_size", ",", "self", ".", "rnn_layers", ",", "batch_first", "=", "True", ",", "\n", "dropout", "=", "dropout", ")", "\n", "\n", "self", ".", "dropout_layer", "=", "nn", ".", "Dropout", "(", "self", ".", "dropout", ")", "\n", "\n", "self", ".", "context_linear", "=", "nn", ".", "Linear", "(", "self", ".", "embed_size", "+", "self", ".", "hidden_size", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "extend_linear", "=", "nn", ".", "Linear", "(", "2", "*", "self", ".", "embed_size", "+", "self", ".", "hidden_size", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "gate_linear", "=", "nn", ".", "Linear", "(", "self", ".", "embed_size", "+", "self", ".", "hidden_size", ",", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "pre_vocab_linear", "=", "nn", ".", "Linear", "(", "self", ".", "embed_size", "+", "self", ".", "hidden_size", ",", "self", ".", "hidden_size", ")", "\n", "self", ".", "vocab_linear", "=", "nn", ".", "Linear", "(", "self", ".", "hidden_size", ",", "self", ".", "vocabs", ".", "n_tokens", ")", "\n", "\n", "self", ".", "init_weights", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.ReviewModel.init_weights": [[426, 440], ["model.ReviewModel.aspect_embedding.weight.data.uniform_", "model.ReviewModel.token_embedding.weight.data.uniform_", "model.ReviewModel.context_linear.weight.data.uniform_", "model.ReviewModel.extend_linear.weight.data.uniform_", "model.ReviewModel.gate_linear.weight.data.uniform_", "model.ReviewModel.pre_vocab_linear.bias.data.fill_", "model.ReviewModel.pre_vocab_linear.weight.data.uniform_", "model.ReviewModel.vocab_linear.bias.data.fill_", "model.ReviewModel.vocab_linear.weight.data.uniform_"], "methods", ["None"], ["", "def", "init_weights", "(", "self", ")", ":", "\n", "        ", "initrange", "=", "0.1", "\n", "self", ".", "aspect_embedding", ".", "weight", ".", "data", ".", "uniform_", "(", "-", "initrange", ",", "initrange", ")", "\n", "self", ".", "token_embedding", ".", "weight", ".", "data", ".", "uniform_", "(", "-", "initrange", ",", "initrange", ")", "\n", "\n", "self", ".", "context_linear", ".", "weight", ".", "data", ".", "uniform_", "(", "-", "initrange", ",", "initrange", ")", "\n", "self", ".", "extend_linear", ".", "weight", ".", "data", ".", "uniform_", "(", "-", "initrange", ",", "initrange", ")", "\n", "self", ".", "gate_linear", ".", "weight", ".", "data", ".", "uniform_", "(", "-", "initrange", ",", "initrange", ")", "\n", "\n", "self", ".", "pre_vocab_linear", ".", "bias", ".", "data", ".", "fill_", "(", "0", ")", "\n", "self", ".", "pre_vocab_linear", ".", "weight", ".", "data", ".", "uniform_", "(", "-", "initrange", ",", "initrange", ")", "\n", "\n", "self", ".", "vocab_linear", ".", "bias", ".", "data", ".", "fill_", "(", "0", ")", "\n", "self", ".", "vocab_linear", ".", "weight", ".", "data", ".", "uniform_", "(", "-", "initrange", ",", "initrange", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.ReviewModel.context_attention": [[441, 463], ["context_embed.size", "output.unsqueeze().expand.unsqueeze().expand.size", "output.unsqueeze().expand.unsqueeze().expand.unsqueeze().expand", "context_embed.unsqueeze().expand", "model.ReviewModel.context_linear().squeeze", "torch.softmax", "torch.softmax", "torch.softmax", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "torch.matmul", "output.unsqueeze().expand.unsqueeze().expand.unsqueeze", "context_embed.unsqueeze", "model.ReviewModel.context_linear", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "context_attention", "(", "self", ",", "output", ",", "context_embed", ")", ":", "\n", "        ", "\"\"\"\n        args:\n            output: shape [batch_size, seq_len, hidden_size]\n            context_embed: shape [batch_size, 3, embed_size]\n        outputs:\n            context_repre: shape [batch_size, seq_len, embed_size]\n        \"\"\"", "\n", "n_context", "=", "context_embed", ".", "size", "(", "1", ")", "\n", "seq_len", "=", "output", ".", "size", "(", "1", ")", "\n", "\n", "output", "=", "output", ".", "unsqueeze", "(", "2", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "n_context", ",", "-", "1", ")", "\n", "context", "=", "context_embed", ".", "unsqueeze", "(", "1", ")", ".", "expand", "(", "-", "1", ",", "seq_len", ",", "-", "1", ",", "-", "1", ")", "\n", "\n", "# [batch_size, seq_len, n_context]", "\n", "energies", "=", "self", ".", "context_linear", "(", "torch", ".", "cat", "(", "[", "output", ",", "context", "]", ",", "dim", "=", "-", "1", ")", ")", ".", "squeeze", "(", "-", "1", ")", "\n", "\n", "context_probs", "=", "F", ".", "softmax", "(", "energies", ",", "dim", "=", "-", "1", ")", "# [batch_size, seq_len, n_context]", "\n", "\n", "context_repre", "=", "torch", ".", "matmul", "(", "context_probs", ",", "context_embed", ")", "# [batch_size, seq_len, embed_size]", "\n", "\n", "return", "context_repre", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.ReviewModel.extend_attention": [[464, 485], ["extend_embed.size", "global_repre.unsqueeze().expand.unsqueeze().expand.unsqueeze().expand", "model.ReviewModel.extend_linear().squeeze", "torch.softmax", "torch.softmax", "torch.softmax", "extend_probs.sum", "global_repre.unsqueeze().expand.unsqueeze().expand.unsqueeze", "model.ReviewModel.extend_linear", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat"], "methods", ["None"], ["", "def", "extend_attention", "(", "self", ",", "global_repre", ",", "extend_embed", ",", "extend_mask", ")", ":", "\n", "        ", "\"\"\"\n        args:\n            global_repre: shape [batch_size, seq_len, embed_size + hidden_size]\n            extend_embed: shape [batch_size, seq_len, extend_size, embed_size]\n            extend_mask: shape [batch_size, seq_len, extend_size] 0/1\n        outputs:\n            extend_probs: shape [batch_size, seq_len, extend_size]\n        \"\"\"", "\n", "n_extend", "=", "extend_embed", ".", "size", "(", "2", ")", "\n", "\n", "global_repre", "=", "global_repre", ".", "unsqueeze", "(", "2", ")", ".", "expand", "(", "-", "1", ",", "-", "1", ",", "n_extend", ",", "-", "1", ")", "\n", "\n", "# [batch_size, seq_len, n_extend]", "\n", "energies", "=", "self", ".", "extend_linear", "(", "torch", ".", "cat", "(", "[", "global_repre", ",", "extend_embed", "]", ",", "dim", "=", "-", "1", ")", ")", ".", "squeeze", "(", "-", "1", ")", "\n", "extend_probs", "=", "F", ".", "softmax", "(", "energies", ",", "dim", "=", "-", "1", ")", "*", "extend_mask", "\n", "\n", "normalization_factor", "=", "extend_probs", ".", "sum", "(", "-", "1", ",", "keepdim", "=", "True", ")", "+", "1e-12", "\n", "extend_probs", "=", "extend_probs", "/", "normalization_factor", "\n", "\n", "return", "extend_probs", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.ReviewModel.forward_context": [[486, 489], ["model.ReviewModel.context_encoder"], "methods", ["None"], ["", "def", "forward_context", "(", "self", ",", "context", ")", ":", "\n", "        ", "context_output", ",", "hidden", "=", "self", ".", "context_encoder", "(", "context", ")", "\n", "return", "context_output", ",", "hidden", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.ReviewModel.forward": [[490, 537], ["model.ReviewModel.token_embedding", "model.ReviewModel.aspect_embedding", "model.ReviewModel.dropout_layer", "model.ReviewModel.token_embedding", "torch.ne", "torch.ne", "torch.ne", "torch.ne", "torch.ne", "torch.ne", "torch.ne", "torch.ne", "torch.ne", "model.ReviewModel.decoder", "model.ReviewModel.context_attention", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.sigmoid", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "torch.tanh", "gen_prob.scatter_add_", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.log", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "torch.mul", "model.ReviewModel.gate_linear", "model.ReviewModel.pre_vocab_linear", "torch.softmax", "torch.softmax", "torch.softmax", "model.ReviewModel.extend_attention", "model.ReviewModel.vocab_linear"], "methods", ["home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.ReviewModel.context_attention", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.ReviewModel.extend_attention"], ["", "def", "forward", "(", "self", ",", "context_embed", ",", "last_hidden", ",", "input_seq", ",", "input_aspect", ",", "extend_input", ")", ":", "\n", "        ", "\"\"\"\n        :param context_embed:\n            attribute outputs, in shape (batch_size, 3, embed_size)\n        :param last_hidden:\n            last hidden stat of the decoder, in shape (rnn_layers, batch_size, hidden_size)\n        :param input_seq:\n            word input for all time steps, in shape (batch_size, seq_len)\n        :param input_aspect:\n            current aspect, in shape (batch_size, seq_len)\n        :param extend_input:\n            extend entity and word for the decoder, in shape (batch_size, seq_len, extend_size)\n        \"\"\"", "\n", "# (seq_len, batch_size, embed_size)", "\n", "token_embed", "=", "self", ".", "token_embedding", "(", "input_seq", ")", "\n", "aspect_embed", "=", "self", ".", "aspect_embedding", "(", "input_aspect", ")", "\n", "input_embed", "=", "self", ".", "dropout_layer", "(", "torch", ".", "mul", "(", "token_embed", ",", "aspect_embed", ")", ")", "\n", "\n", "# (batch_size, seq_len, extend_size, embed_size)", "\n", "extend_embed", "=", "self", ".", "token_embedding", "(", "extend_input", ")", "\n", "extend_mask", "=", "torch", ".", "ne", "(", "extend_input", ",", "PAD_ID", ")", "\n", "\n", "# rnn_output: (batch_size, seq_len, hidden_size)", "\n", "# rnn_hidden: (rnn_layers, batch_size, hidden_size)", "\n", "rnn_output", ",", "hidden", "=", "self", ".", "decoder", "(", "input_embed", ",", "last_hidden", ")", "\n", "\n", "# [batch_size, seq_len, embed_size]", "\n", "context_repre", "=", "self", ".", "context_attention", "(", "rnn_output", ",", "context_embed", ")", "\n", "\n", "# global representation [batch_size, seq_len, hidden_size + embed_size]", "\n", "global_repre", "=", "torch", ".", "cat", "(", "(", "rnn_output", ",", "context_repre", ")", ",", "2", ")", "\n", "\n", "# [batch_size, seq_len, 1]", "\n", "p_gen", "=", "torch", ".", "sigmoid", "(", "self", ".", "gate_linear", "(", "global_repre", ")", ")", "\n", "\n", "# [batch_size, seq_len, hidden_size] -> [batch_size, seq_len, token_vocab_size]", "\n", "pre_vocab_out", "=", "torch", ".", "tanh", "(", "self", ".", "pre_vocab_linear", "(", "global_repre", ")", ")", "\n", "gen_prob", "=", "p_gen", "*", "F", ".", "softmax", "(", "self", ".", "vocab_linear", "(", "pre_vocab_out", ")", ",", "dim", "=", "-", "1", ")", "\n", "\n", "# [batch_size, seq_len, extend_size]", "\n", "copy_prob", "=", "(", "1", "-", "p_gen", ")", "*", "self", ".", "extend_attention", "(", "global_repre", ",", "extend_embed", ",", "extend_mask", ")", "\n", "\n", "probs", "=", "gen_prob", ".", "scatter_add_", "(", "-", "1", ",", "extend_input", ",", "copy_prob", ")", "\n", "\n", "output", "=", "torch", ".", "log", "(", "probs", "+", "1e-12", ")", "\n", "\n", "return", "output", ",", "hidden", "\n", "", "", ""]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.util.indicesFromAspect": [[22, 28], ["ids.append"], "function", ["None"], ["def", "indicesFromAspect", "(", "vocabs", ",", "sentence", ")", ":", "\n", "    ", "ids", "=", "[", "]", "\n", "for", "word", "in", "sentence", ":", "\n", "        ", "word", "=", "word", "\n", "ids", ".", "append", "(", "vocabs", ".", "aspect2idx", "[", "word", "]", ")", "\n", "", "return", "ids", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.util.indicesFromReview": [[30, 39], ["ids.append", "ids.append"], "function", ["None"], ["", "def", "indicesFromReview", "(", "vocabs", ",", "sentence", ")", ":", "\n", "    ", "ids", "=", "[", "]", "\n", "for", "word", "in", "sentence", ":", "\n", "        ", "word", "=", "word", "\n", "if", "word", "in", "vocabs", ".", "token2idx", ":", "\n", "            ", "ids", ".", "append", "(", "vocabs", ".", "token2idx", "[", "word", "]", ")", "\n", "", "else", ":", "\n", "            ", "ids", ".", "append", "(", "UNK_ID", ")", "\n", "", "", "return", "ids", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.util.returnHistory": [[41, 53], ["collections.deque", "collections.deque.popleft", "collections.deque.append", "history.append", "history.append", "list", "list"], "function", ["None"], ["", "def", "returnHistory", "(", "vocabs", ",", "sentence", ",", "window_size", "=", "WINDOW_SIZE", ")", ":", "\n", "    ", "ban", "=", "[", "\"<sos>\"", ",", "\"<eos>\"", ",", "\"<unk>\"", ",", "\",\"", ",", "\".\"", ",", "\"!\"", ",", "\"?\"", "]", "\n", "his_sequence", "=", "deque", "(", "[", "PAD_ID", "]", "*", "window_size", ")", "\n", "history", "=", "[", "]", "\n", "for", "wid", "in", "sentence", ":", "\n", "        ", "if", "vocabs", ".", "idx2token", "[", "wid", "]", "not", "in", "ban", ":", "\n", "            ", "his_sequence", ".", "popleft", "(", ")", "\n", "his_sequence", ".", "append", "(", "wid", ")", "\n", "history", ".", "append", "(", "list", "(", "his_sequence", ")", ")", "\n", "", "else", ":", "\n", "            ", "history", ".", "append", "(", "list", "(", "his_sequence", ")", ")", "\n", "", "", "return", "history", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.util.returnExtend": [[55, 72], ["set", "list", "ext_inp.append", "len", "random.sample", "random.sample.add", "len"], "function", ["None"], ["", "def", "returnExtend", "(", "vocabs", ",", "history", ",", "extend_size", "=", "EXTEND_SIZE", ")", ":", "\n", "    ", "ext_inp", "=", "[", "]", "\n", "# adding extend entity and word", "\n", "for", "his", "in", "history", ":", "\n", "        ", "inp", "=", "set", "(", ")", "\n", "for", "wid", "in", "his", ":", "\n", "            ", "if", "vocabs", ".", "idx2token", "[", "wid", "]", "in", "vocabs", ".", "node2neighbor", ":", "\n", "                ", "for", "nei", "in", "vocabs", ".", "node2neighbor", "[", "vocabs", ".", "idx2token", "[", "wid", "]", "]", ":", "\n", "                    ", "if", "nei", "in", "vocabs", ".", "token2idx", ":", "\n", "                        ", "inp", ".", "add", "(", "vocabs", ".", "token2idx", "[", "nei", "]", ")", "\n", "", "", "", "", "inp", "=", "list", "(", "inp", ")", "\n", "if", "len", "(", "inp", ")", "<=", "extend_size", ":", "\n", "            ", "inp", "=", "inp", "+", "[", "PAD_ID", "]", "*", "(", "extend_size", "-", "len", "(", "inp", ")", ")", "\n", "", "else", ":", "\n", "            ", "inp", "=", "random", ".", "sample", "(", "inp", ",", "extend_size", ")", "\n", "", "ext_inp", ".", "append", "(", "inp", ")", "\n", "", "return", "ext_inp", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.util.sequencePadding": [[74, 80], ["max", "new_seq.append", "len", "len"], "function", ["None"], ["", "def", "sequencePadding", "(", "data", ",", "fillvalue", "=", "PAD_ID", ")", ":", "\n", "    ", "max_len", "=", "max", "(", "[", "len", "(", "d", ")", "for", "d", "in", "data", "]", ")", "\n", "new_seq", "=", "[", "]", "\n", "for", "d", "in", "data", ":", "\n", "        ", "new_seq", ".", "append", "(", "d", "+", "[", "fillvalue", "]", "*", "(", "max_len", "-", "len", "(", "d", ")", ")", ")", "\n", "", "return", "new_seq", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.util.extendPadding": [[82, 89], ["max", "new_seq.append", "len", "len"], "function", ["None"], ["", "def", "extendPadding", "(", "data", ",", "filllen", "=", "EXTEND_SIZE", ",", "fillvalue", "=", "PAD_ID", ")", ":", "\n", "    ", "max_len", "=", "max", "(", "[", "len", "(", "d", ")", "for", "d", "in", "data", "]", ")", "\n", "new_seq", "=", "[", "]", "\n", "for", "d", "in", "data", ":", "\n", "        ", "pad", "=", "[", "[", "fillvalue", "]", "*", "filllen", "]", "*", "(", "max_len", "-", "len", "(", "d", ")", ")", "\n", "new_seq", ".", "append", "(", "d", "+", "pad", ")", "\n", "", "return", "new_seq", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.util.InputVar": [[91, 95], ["torch.LongTensor", "torch.LongTensor", "torch.LongTensor"], "function", ["None"], ["", "def", "InputVar", "(", "data", ")", ":", "\n", "    ", "context", "=", "[", "[", "d", "[", "0", "]", ",", "d", "[", "1", "]", ",", "d", "[", "2", "]", "]", "for", "d", "in", "data", "]", "\n", "contextVar", "=", "torch", ".", "LongTensor", "(", "context", ")", "\n", "return", "contextVar", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.util.GraphVar": [[97, 119], ["max", "max", "range", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "node_input.append", "len", "edge_input.append", "type_input.append", "len", "len", "len", "len", "len", "len"], "function", ["None"], ["", "def", "GraphVar", "(", "node_data", ",", "edge_data", ",", "type_data", ",", "vocabs", ")", ":", "\n", "    ", "max_node", "=", "max", "(", "[", "len", "(", "d", ")", "for", "d", "in", "node_data", "]", ")", "\n", "\n", "node_input", "=", "[", "]", "\n", "for", "nodes", "in", "node_data", ":", "\n", "        ", "node_input", ".", "append", "(", "nodes", "+", "[", "nodes", "[", "0", "]", "]", "*", "(", "max_node", "-", "len", "(", "nodes", ")", ")", ")", "\n", "\n", "", "max_edge", "=", "max", "(", "[", "len", "(", "d", "[", "0", "]", ")", "for", "d", "in", "edge_data", "]", ")", "\n", "\n", "edge_input", "=", "[", "]", "\n", "type_input", "=", "[", "]", "\n", "for", "bi", "in", "range", "(", "len", "(", "edge_data", ")", ")", ":", "\n", "        ", "head", "=", "edge_data", "[", "bi", "]", "[", "0", "]", "+", "[", "0", "]", "*", "(", "max_edge", "-", "len", "(", "edge_data", "[", "bi", "]", "[", "0", "]", ")", ")", "\n", "tail", "=", "edge_data", "[", "bi", "]", "[", "1", "]", "+", "[", "1", "]", "*", "(", "max_edge", "-", "len", "(", "edge_data", "[", "bi", "]", "[", "1", "]", ")", ")", "\n", "edge_input", ".", "append", "(", "[", "head", ",", "tail", "]", ")", "\n", "type_input", ".", "append", "(", "type_data", "[", "bi", "]", "+", "[", "vocabs", ".", "relation2idx", "[", "\"<interact>\"", "]", "]", "*", "(", "max_edge", "-", "len", "(", "type_data", "[", "bi", "]", ")", ")", ")", "\n", "\n", "", "nodeVar", "=", "torch", ".", "LongTensor", "(", "node_input", ")", "\n", "edgeVar", "=", "torch", ".", "LongTensor", "(", "edge_input", ")", "\n", "typeVar", "=", "torch", ".", "LongTensor", "(", "type_input", ")", "\n", "\n", "return", "nodeVar", ",", "edgeVar", ",", "typeVar", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.util.AspectOutputVar": [[121, 130], ["util.sequencePadding", "util.sequencePadding", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "util.indicesFromAspect", "util.indicesFromAspect"], "function", ["home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.util.sequencePadding", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.util.sequencePadding", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.util.indicesFromAspect", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.util.indicesFromAspect"], ["", "def", "AspectOutputVar", "(", "l", ",", "vocabs", ")", ":", "\n", "    ", "aspect_input", "=", "[", "indicesFromAspect", "(", "vocabs", ",", "sentence", "[", ":", "-", "1", "]", ")", "for", "sentence", "in", "l", "]", "\n", "aspect_output", "=", "[", "indicesFromAspect", "(", "vocabs", ",", "sentence", "[", "1", ":", "]", ")", "for", "sentence", "in", "l", "]", "\n", "inpadList", "=", "sequencePadding", "(", "aspect_input", ")", "\n", "outpadList", "=", "sequencePadding", "(", "aspect_output", ")", "\n", "inpadVar", "=", "torch", ".", "LongTensor", "(", "inpadList", ")", "\n", "outpadVar", "=", "torch", ".", "LongTensor", "(", "outpadList", ")", "\n", "\n", "return", "inpadVar", ",", "outpadVar", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.util.ReviewOutputVar": [[132, 167], ["range", "util.sequencePadding", "util.sequencePadding", "util.sequencePadding", "util.extendPadding", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "util.indicesFromAspect", "len", "range", "aspect_input.append", "review_input.append", "review_output.append", "util.returnHistory", "util.returnExtend", "extend_input.append", "len", "util.indicesFromReview", "util.indicesFromReview", "len"], "function", ["home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.util.sequencePadding", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.util.sequencePadding", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.util.sequencePadding", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.util.extendPadding", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.util.indicesFromAspect", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.util.returnHistory", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.util.returnExtend", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.util.indicesFromReview", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.util.indicesFromReview"], ["", "def", "ReviewOutputVar", "(", "asp_data", ",", "rev_data", ",", "vocabs", ")", ":", "\n", "    ", "aspect", "=", "[", "indicesFromAspect", "(", "vocabs", ",", "sentence", ")", "for", "sentence", "in", "asp_data", "]", "\n", "\n", "aspect_input", "=", "[", "]", "\n", "review_input", "=", "[", "]", "\n", "review_output", "=", "[", "]", "\n", "extend_input", "=", "[", "]", "\n", "for", "bi", "in", "range", "(", "len", "(", "asp_data", ")", ")", ":", "\n", "        ", "asp", "=", "[", "]", "\n", "inp", "=", "[", "]", "\n", "out", "=", "[", "]", "\n", "for", "sj", "in", "range", "(", "len", "(", "asp_data", "[", "bi", "]", ")", ")", ":", "\n", "            ", "sentence", "=", "rev_data", "[", "bi", "]", "[", "sj", "]", "\n", "asp", "+=", "[", "aspect", "[", "bi", "]", "[", "sj", "]", "]", "*", "len", "(", "sentence", "[", ":", "-", "1", "]", ")", "\n", "inp", "+=", "indicesFromReview", "(", "vocabs", ",", "sentence", "[", ":", "-", "1", "]", ")", "\n", "out", "+=", "indicesFromReview", "(", "vocabs", ",", "sentence", "[", "1", ":", "]", ")", "\n", "", "aspect_input", ".", "append", "(", "asp", ")", "\n", "review_input", ".", "append", "(", "inp", ")", "\n", "review_output", ".", "append", "(", "out", ")", "\n", "\n", "his", "=", "returnHistory", "(", "vocabs", ",", "inp", ")", "\n", "ext_inp", "=", "returnExtend", "(", "vocabs", ",", "his", ")", "\n", "extend_input", ".", "append", "(", "ext_inp", ")", "# seq_len x extend_size", "\n", "\n", "", "aspectList", "=", "sequencePadding", "(", "aspect_input", ")", "\n", "inpadList", "=", "sequencePadding", "(", "review_input", ")", "\n", "outpadList", "=", "sequencePadding", "(", "review_output", ")", "\n", "extendList", "=", "extendPadding", "(", "extend_input", ")", "\n", "\n", "aspectVar", "=", "torch", ".", "LongTensor", "(", "aspectList", ")", "\n", "inpadVar", "=", "torch", ".", "LongTensor", "(", "inpadList", ")", "\n", "outpadVar", "=", "torch", ".", "LongTensor", "(", "outpadList", ")", "\n", "extendVar", "=", "torch", ".", "LongTensor", "(", "extendList", ")", "\n", "\n", "return", "aspectVar", ",", "inpadVar", ",", "outpadVar", ",", "extendVar", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.util.AspectBatch2Data": [[169, 182], ["pair_batch.sort", "range", "util.InputVar", "util.GraphVar", "util.AspectOutputVar", "len", "context_batch.append", "aspect_batch.append", "node_batch.append", "edge_batch.append", "type_batch.append", "len"], "function", ["home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.util.InputVar", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.util.GraphVar", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.util.AspectOutputVar"], ["", "def", "AspectBatch2Data", "(", "vocabs", ",", "pair_batch", ")", ":", "\n", "    ", "pair_batch", ".", "sort", "(", "key", "=", "lambda", "x", ":", "len", "(", "x", "[", "1", "]", ")", ",", "reverse", "=", "True", ")", "\n", "context_batch", ",", "node_batch", ",", "edge_batch", ",", "type_batch", ",", "aspect_batch", "=", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "pair_batch", ")", ")", ":", "\n", "        ", "context_batch", ".", "append", "(", "pair_batch", "[", "i", "]", "[", "0", "]", ")", "\n", "aspect_batch", ".", "append", "(", "pair_batch", "[", "i", "]", "[", "1", "]", ")", "\n", "node_batch", ".", "append", "(", "pair_batch", "[", "i", "]", "[", "3", "]", ")", "\n", "edge_batch", ".", "append", "(", "pair_batch", "[", "i", "]", "[", "4", "]", ")", "\n", "type_batch", ".", "append", "(", "pair_batch", "[", "i", "]", "[", "5", "]", ")", "\n", "", "context_input", "=", "InputVar", "(", "context_batch", ")", "\n", "node_input", ",", "edge_input", ",", "type_input", "=", "GraphVar", "(", "node_batch", ",", "edge_batch", ",", "type_batch", ",", "vocabs", ")", "\n", "aspect_input", ",", "aspect_output", "=", "AspectOutputVar", "(", "aspect_batch", ",", "vocabs", ")", "\n", "return", "context_input", ",", "node_input", ",", "edge_input", ",", "type_input", ",", "aspect_input", ",", "aspect_output", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.util.ReviewBatch2Data": [[184, 194], ["pair_batch.sort", "range", "util.InputVar", "util.ReviewOutputVar", "len", "context_batch.append", "aspect_batch.append", "review_batch.append", "len"], "function", ["home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.util.InputVar", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.util.ReviewOutputVar"], ["", "def", "ReviewBatch2Data", "(", "vocabs", ",", "pair_batch", ")", ":", "\n", "    ", "pair_batch", ".", "sort", "(", "key", "=", "lambda", "x", ":", "len", "(", "x", "[", "1", "]", ")", ",", "reverse", "=", "True", ")", "\n", "context_batch", ",", "aspect_batch", ",", "review_batch", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "pair_batch", ")", ")", ":", "\n", "        ", "context_batch", ".", "append", "(", "pair_batch", "[", "i", "]", "[", "0", "]", ")", "\n", "aspect_batch", ".", "append", "(", "pair_batch", "[", "i", "]", "[", "1", "]", "[", "1", ":", "-", "1", "]", ")", "# remove <sos> and <eos>", "\n", "review_batch", ".", "append", "(", "pair_batch", "[", "i", "]", "[", "2", "]", ")", "\n", "", "context_input", "=", "InputVar", "(", "context_batch", ")", "\n", "aspect_input", ",", "review_input", ",", "review_output", ",", "extend_input", "=", "ReviewOutputVar", "(", "aspect_batch", ",", "review_batch", ",", "vocabs", ")", "\n", "return", "context_input", ",", "aspect_input", ",", "review_input", ",", "review_output", ",", "extend_input", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.aspect.main.tab_printer": [[6, 16], ["vars", "sorted", "texttable.Texttable", "texttable.Texttable.add_rows", "print", "vars.keys", "texttable.Texttable.draw", "k.replace().capitalize", "k.replace"], "function", ["None"], ["def", "tab_printer", "(", "args", ")", ":", "\n", "    ", "\"\"\"\n    Function to print the logs in a nice tabular format.\n    :param args: Parameters used for the model.\n    \"\"\"", "\n", "args", "=", "vars", "(", "args", ")", "\n", "keys", "=", "sorted", "(", "args", ".", "keys", "(", ")", ")", "\n", "t", "=", "Texttable", "(", ")", "\n", "t", ".", "add_rows", "(", "[", "[", "\"Parameter\"", ",", "\"Value\"", "]", "]", "+", "[", "[", "k", ".", "replace", "(", "\"_\"", ",", "\" \"", ")", ".", "capitalize", "(", ")", ",", "args", "[", "k", "]", "]", "for", "k", "in", "keys", "]", ")", "\n", "print", "(", "t", ".", "draw", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.aspect.main.parse": [[18, 52], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["", "def", "parse", "(", ")", ":", "\n", "    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\"--train\"", ",", "help", "=", "\"Train the model with corpus\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--load\"", ",", "help", "=", "\"load the saved model and train\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--aspect_model\"", ",", "help", "=", "\"the saved aspect model\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--epochs\"", ",", "type", "=", "int", ",", "default", "=", "400", ",", "help", "=", "\"Epochs\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--batch_size\"", ",", "type", "=", "int", ",", "default", "=", "1024", ",", "help", "=", "\"Batch size\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--rnn_layers\"", ",", "type", "=", "int", ",", "default", "=", "2", ",", "help", "=", "\"Number of layers in encoder and decoder\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--hidden_size\"", ",", "type", "=", "int", ",", "default", "=", "512", ",", "help", "=", "\"Hidden size in encoder and decoder\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--embed_size\"", ",", "type", "=", "int", ",", "default", "=", "512", ",", "help", "=", "\"embedding size of topic\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--node_size\"", ",", "type", "=", "int", ",", "default", "=", "512", ",", "help", "=", "\"embedding size of context\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--beam_size\"", ",", "type", "=", "int", ",", "default", "=", "8", ",", "help", "=", "\"beam size in decoder\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--gcn_layers\"", ",", "type", "=", "int", ",", "default", "=", "3", ",", "help", "=", "\"GCN layers\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--gcn_filters\"", ",", "type", "=", "int", ",", "default", "=", "100", ",", "help", "=", "\"GCN layers\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--capsule_size\"", ",", "type", "=", "int", ",", "default", "=", "100", ",", "help", "=", "\"capsule size of primary/graph/aspect capsules\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--capsule_num\"", ",", "type", "=", "int", ",", "default", "=", "10", ",", "help", "=", "\"number of capsules\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--lr_decay_ratio\"", ",", "type", "=", "float", ",", "default", "=", "0.8", ",", "help", "=", "\"learning rate decay ratio\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--lr_decay_epoch\"", ",", "type", "=", "int", ",", "default", "=", "2", ",", "help", "=", "\"learning rate decay epoch\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--learning_rate\"", ",", "type", "=", "float", ",", "default", "=", "0.00002", ",", "help", "=", "\"Learning rate\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--weight_decay\"", ",", "type", "=", "float", ",", "default", "=", "10", "**", "-", "6", ",", "help", "=", "\"Weight decay. Default is 10^-6.\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--max_length\"", ",", "type", "=", "int", ",", "default", "=", "10", ",", "help", "=", "\"max length of sequence\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--min_length\"", ",", "type", "=", "int", ",", "default", "=", "3", ",", "help", "=", "\"min length of sequence\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--save_dir\"", ",", "help", "=", "\"saved directory of model\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--load_file\"", ",", "help", "=", "\"saved model\"", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "return", "args", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.aspect.main.run": [[54, 76], ["main.tab_printer", "train.trainIters", "train.trainIters", "print"], "function", ["home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.main.tab_printer", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.train.trainIters", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.train.trainIters"], ["", "def", "run", "(", "args", ")", ":", "\n", "\n", "    ", "tab_printer", "(", "args", ")", "\n", "\n", "learning_rate", ",", "lr_decay_epoch", ",", "lr_decay_ratio", ",", "weight_decay", ",", "embed_size", ",", "hidden_size", ",", "node_size", ",", "capsule_size", ",", "gcn_layers", ",", "gcn_filters", ",", "rnn_layers", ",", "capsule_num", ",", "batch_size", ",", "epochs", "=", "args", ".", "learning_rate", ",", "args", ".", "lr_decay_epoch", ",", "args", ".", "lr_decay_ratio", ",", "args", ".", "weight_decay", ",", "args", ".", "embed_size", ",", "args", ".", "hidden_size", ",", "args", ".", "node_size", ",", "args", ".", "capsule_size", ",", "args", ".", "gcn_layers", ",", "args", ".", "gcn_filters", ",", "args", ".", "rnn_layers", ",", "args", ".", "capsule_num", ",", "args", ".", "batch_size", ",", "args", ".", "epochs", "\n", "\n", "if", "args", ".", "train", ":", "\n", "        ", "trainIters", "(", "args", ".", "train", ",", "learning_rate", ",", "lr_decay_epoch", ",", "lr_decay_ratio", ",", "weight_decay", ",", "batch_size", ",", "\n", "rnn_layers", ",", "hidden_size", ",", "embed_size", ",", "node_size", ",", "capsule_size", ",", "epochs", ",", "gcn_layers", ",", "gcn_filters", ",", "\n", "capsule_num", ",", "args", ".", "save_dir", ")", "\n", "\n", "", "elif", "args", ".", "load", ":", "\n", "        ", "trainIters", "(", "args", ".", "load", ",", "learning_rate", ",", "lr_decay_epoch", ",", "lr_decay_ratio", ",", "weight_decay", ",", "batch_size", ",", "\n", "rnn_layers", ",", "hidden_size", ",", "embed_size", ",", "node_size", ",", "capsule_size", ",", "epochs", ",", "gcn_layers", ",", "gcn_filters", ",", "\n", "capsule_num", ",", "args", ".", "save_dir", ",", "args", ".", "load_file", ")", "\n", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"mode error!\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.aspect.train.adjust_learning_rate": [[32, 36], ["None"], "function", ["None"], ["def", "adjust_learning_rate", "(", "optimizer", ",", "epoch", ",", "learning_rate", ",", "lr_decay_epoch", ",", "lr_decay_ratio", ")", ":", "\n", "    ", "lr", "=", "learning_rate", "*", "(", "lr_decay_ratio", "**", "(", "epoch", "//", "lr_decay_epoch", ")", ")", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "lr", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.aspect.train.from_pretrained": [[38, 45], ["torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "embeddings.dim"], "function", ["None"], ["", "", "def", "from_pretrained", "(", "embeddings", ",", "freeze", "=", "True", ")", ":", "\n", "    ", "assert", "embeddings", ".", "dim", "(", ")", "==", "2", ",", "'Embeddings parameter is expected to be 2-dimensional'", "\n", "rows", ",", "cols", "=", "embeddings", ".", "shape", "\n", "embedding", "=", "torch", ".", "nn", ".", "Embedding", "(", "num_embeddings", "=", "rows", ",", "embedding_dim", "=", "cols", ")", "\n", "embedding", ".", "weight", "=", "torch", ".", "nn", ".", "Parameter", "(", "embeddings", ")", "\n", "embedding", ".", "weight", ".", "requires_grad", "=", "not", "freeze", "\n", "return", "embedding", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.aspect.train.train": [[47, 75], ["aspect_optimizer.zero_grad", "context_input.to.to", "node_input.to.to", "edge_input.to.to", "type_input.to.to", "aspect_input.to.to", "aspect_output.to.to", "aspect_model.forward_context", "aspect_model.forward_graph", "aspect_model", "torch.ne", "torch.ne", "torch.ne", "loss.margin_loss", "loss.margin_loss.backward", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "aspect_optimizer.step", "loss.margin_loss.item", "filter", "aspect_model.parameters"], "function", ["home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.ReviewModel.forward_context", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.AspectModel.forward_graph", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.loss.margin_loss"], ["", "def", "train", "(", "context_input", ",", "node_input", ",", "edge_input", ",", "type_input", ",", "aspect_input", ",", "aspect_output", ",", "\n", "aspect_model", ",", "aspect_optimizer", ")", ":", "\n", "    ", "aspect_optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "context_input", "=", "context_input", ".", "to", "(", "device", ")", "\n", "node_input", "=", "node_input", ".", "to", "(", "device", ")", "\n", "edge_input", "=", "edge_input", ".", "to", "(", "device", ")", "\n", "type_input", "=", "type_input", ".", "to", "(", "device", ")", "\n", "aspect_input", "=", "aspect_input", ".", "to", "(", "device", ")", "\n", "aspect_output", "=", "aspect_output", ".", "to", "(", "device", ")", "\n", "\n", "# context and graph encoder", "\n", "context_embed", ",", "hidden", "=", "aspect_model", ".", "forward_context", "(", "context_input", ")", "\n", "\n", "graph_embed", "=", "aspect_model", ".", "forward_graph", "(", "node_input", ",", "edge_input", ",", "type_input", ")", "\n", "\n", "decoder_generate", ",", "decoder_hidden", "=", "aspect_model", "(", "context_embed", ",", "hidden", ",", "aspect_input", ",", "graph_embed", ")", "\n", "\n", "mask", "=", "torch", ".", "ne", "(", "aspect_output", ",", "PAD_ID", ")", "\n", "loss", "=", "margin_loss", "(", "decoder_generate", ",", "aspect_output", ",", "mask", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "\n", "clip", "=", "5.0", "\n", "mc", "=", "torch", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "aspect_model", ".", "parameters", "(", ")", ")", ",", "clip", ")", "\n", "\n", "aspect_optimizer", ".", "step", "(", ")", "\n", "\n", "return", "loss", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.aspect.train.evaluate": [[77, 98], ["aspect_model.eval", "context_input.to.to", "node_input.to.to", "edge_input.to.to", "type_input.to.to", "aspect_input.to.to", "aspect_output.to.to", "aspect_model.forward_context", "aspect_model.forward_graph", "aspect_model", "torch.ne", "torch.ne", "torch.ne", "loss.margin_loss", "loss.margin_loss.item"], "function", ["home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.ReviewModel.forward_context", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.AspectModel.forward_graph", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.loss.margin_loss"], ["", "def", "evaluate", "(", "context_input", ",", "node_input", ",", "edge_input", ",", "type_input", ",", "aspect_input", ",", "aspect_output", ",", "aspect_model", ")", ":", "\n", "    ", "aspect_model", ".", "eval", "(", ")", "\n", "\n", "context_input", "=", "context_input", ".", "to", "(", "device", ")", "\n", "node_input", "=", "node_input", ".", "to", "(", "device", ")", "\n", "edge_input", "=", "edge_input", ".", "to", "(", "device", ")", "\n", "type_input", "=", "type_input", ".", "to", "(", "device", ")", "\n", "aspect_input", "=", "aspect_input", ".", "to", "(", "device", ")", "\n", "aspect_output", "=", "aspect_output", ".", "to", "(", "device", ")", "\n", "\n", "# context and graph encoder", "\n", "context_embed", ",", "hidden", "=", "aspect_model", ".", "forward_context", "(", "context_input", ")", "\n", "\n", "graph_embed", "=", "aspect_model", ".", "forward_graph", "(", "node_input", ",", "edge_input", ",", "type_input", ")", "\n", "\n", "decoder_generate", ",", "decoder_hidden", "=", "aspect_model", "(", "context_embed", ",", "hidden", ",", "aspect_input", ",", "graph_embed", ")", "\n", "\n", "mask", "=", "torch", ".", "ne", "(", "aspect_output", ",", "PAD_ID", ")", "\n", "loss", "=", "margin_loss", "(", "decoder_generate", ",", "aspect_output", ",", "mask", ")", "\n", "\n", "return", "loss", ".", "item", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.aspect.train.batchify": [[100, 110], ["random.sample", "pairs.extend", "range", "len", "data.append", "len", "len", "util.AspectBatch2Data"], "function", ["home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.evaluate.Hypothesis.extend", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.util.AspectBatch2Data"], ["", "def", "batchify", "(", "pairs", ",", "bsz", ",", "vocabs", ")", ":", "\n", "    ", "nbatch", "=", "len", "(", "pairs", ")", "//", "bsz", "+", "1", "\n", "add_num", "=", "nbatch", "*", "bsz", "-", "len", "(", "pairs", ")", "\n", "add_sam", "=", "random", ".", "sample", "(", "pairs", ",", "add_num", ")", "\n", "pairs", ".", "extend", "(", "add_sam", ")", "\n", "assert", "len", "(", "pairs", ")", "%", "bsz", "==", "0", "\n", "data", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "nbatch", ")", ":", "\n", "        ", "data", ".", "append", "(", "AspectBatch2Data", "(", "vocabs", ",", "pairs", "[", "i", "*", "bsz", ":", "i", "*", "bsz", "+", "bsz", "]", ")", ")", "\n", "", "return", "data", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.aspect.train.trainIters": [[112, 240], ["print", "load.loadPrepareData", "print", "os.path.join", "print", "model.AspectModel().to", "print", "torch.optim.Adam", "print", "os.path.join", "tensorboardX.SummaryWriter", "tqdm.tqdm", "os.path.exists", "os.makedirs", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "AspectModel().to.parameters", "os.path.exists", "os.makedirs", "torch.load", "torch.load", "torch.load", "AspectModel().to.load_state_dict", "range", "range", "AspectModel().to.train", "tqdm.trange", "math.exp", "print", "AspectModel().to.eval", "tensorboardX.SummaryWriter.add_scalar", "tensorboardX.SummaryWriter.add_scalar", "print", "os.path.join", "train.adjust_learning_rate", "os.path.join", "print", "train.batchify", "print", "torch.save", "torch.save", "torch.save", "os.path.join", "print", "train.batchify", "print", "torch.save", "torch.save", "torch.save", "model.AspectModel", "len", "tensorboardX.SummaryWriter.add_scalar", "tensorboardX.SummaryWriter.add_scalar", "len", "train.train", "losses.append", "perplexities.append", "tensorboardX.SummaryWriter.add_scalar", "tensorboardX.SummaryWriter.add_scalar", "tqdm.trange.set_description", "len", "torch.no_grad", "torch.no_grad", "torch.no_grad", "len", "math.exp", "os.path.join", "torch.save", "torch.save", "torch.save", "print", "os.path.join", "os.path.join", "math.exp", "math.exp", "train.evaluate", "os.path.exists", "os.makedirs", "os.path.join", "AspectModel().to.state_dict", "round", "round", "round", "math.exp"], "function", ["home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.load.loadPrepareData", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.train.train", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.train.adjust_learning_rate", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.train.batchify", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.train.batchify", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.train.train", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.train.evaluate"], ["", "def", "trainIters", "(", "corpus", ",", "learning_rate", ",", "lr_decay_epoch", ",", "lr_decay_ratio", ",", "weight_decay", ",", "batch_size", ",", "rnn_layers", ",", "hidden_size", ",", "\n", "embed_size", ",", "node_size", ",", "capsule_size", ",", "epochs", ",", "gcn_layers", ",", "gcn_filters", ",", "capsule_num", ",", "save_dir", ",", "load_file", "=", "None", ")", ":", "\n", "    ", "print", "(", "'load data...'", ")", "\n", "vocabs", ",", "train_pairs", ",", "valid_pairs", ",", "test_pairs", "=", "loadPrepareData", "(", "corpus", ",", "save_dir", ")", "# load data", "\n", "print", "(", "'load data finish...'", ")", "\n", "\n", "data_path", "=", "os", ".", "path", ".", "join", "(", "save_dir", ",", "\"batches\"", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "data_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "data_path", ")", "\n", "\n", "", "corpus_name", "=", "corpus", "\n", "try", ":", "\n", "        ", "training_batches", "=", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "data_path", ",", "'{}_{}.tar'", ".", "format", "(", "'training_batches'", ",", "batch_size", ")", ")", ")", "\n", "", "except", "FileNotFoundError", ":", "\n", "        ", "print", "(", "'Training pairs not found, generating ...'", ")", "\n", "training_batches", "=", "batchify", "(", "train_pairs", ",", "batch_size", ",", "vocabs", ")", "\n", "print", "(", "'Complete building training pairs ...'", ")", "\n", "torch", ".", "save", "(", "training_batches", ",", "os", ".", "path", ".", "join", "(", "data_path", ",", "'{}_{}.tar'", ".", "format", "(", "'training_batches'", ",", "batch_size", ")", ")", ")", "\n", "\n", "# validation/test data", "\n", "", "eval_batch_size", "=", "10", "\n", "try", ":", "\n", "        ", "val_batches", "=", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "data_path", ",", "'{}_{}.tar'", ".", "format", "(", "'val_batches'", ",", "eval_batch_size", ")", ")", ")", "\n", "", "except", "FileNotFoundError", ":", "\n", "        ", "print", "(", "'Validation pairs not found, generating ...'", ")", "\n", "val_batches", "=", "batchify", "(", "valid_pairs", ",", "eval_batch_size", ",", "vocabs", ")", "\n", "print", "(", "'Complete building validation pairs ...'", ")", "\n", "torch", ".", "save", "(", "val_batches", ",", "os", ".", "path", ".", "join", "(", "data_path", ",", "'{}_{}.tar'", ".", "format", "(", "'val_batches'", ",", "eval_batch_size", ")", ")", ")", "\n", "\n", "", "print", "(", "'Building aspect model ...'", ")", "\n", "aspect_model", "=", "AspectModel", "(", "vocabs", ",", "embed_size", ",", "node_size", ",", "hidden_size", ",", "capsule_size", ",", "\n", "gcn_layers", ",", "gcn_filters", ",", "rnn_layers", ",", "capsule_num", ")", ".", "to", "(", "device", ")", "\n", "\n", "print", "(", "'Building optimizers ...'", ")", "\n", "aspect_optimizer", "=", "optim", ".", "Adam", "(", "aspect_model", ".", "parameters", "(", ")", ",", "lr", "=", "learning_rate", ",", "weight_decay", "=", "weight_decay", ")", "\n", "\n", "print", "(", "'Initializing hyper-parameter...\\n'", ")", "\n", "global_step", "=", "1", "\n", "last_epoch", "=", "1", "\n", "perplexities", "=", "[", "]", "\n", "losses", "=", "[", "]", "\n", "best_val_loss", "=", "None", "\n", "\n", "log_path", "=", "os", ".", "path", ".", "join", "(", "'ckpt/'", "+", "corpus_name", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "log_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "log_path", ")", "\n", "", "writer", "=", "SummaryWriter", "(", "log_path", ")", "\n", "\n", "if", "load_file", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "load", "(", "load_file", ")", "\n", "aspect_model", ".", "load_state_dict", "(", "checkpoint", "[", "'aspect_model'", "]", ")", "\n", "global_step", "=", "checkpoint", "[", "'global_step'", "]", "\n", "last_epoch", "=", "checkpoint", "[", "'epoch'", "]", "+", "1", "\n", "perplexities", "=", "checkpoint", "[", "'perplexity'", "]", "\n", "losses", "=", "checkpoint", "[", "'loss'", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "losses", ")", ")", ":", "\n", "            ", "writer", ".", "add_scalar", "(", "\"Train/loss\"", ",", "losses", "[", "i", "]", ",", "i", ")", "\n", "writer", ".", "add_scalar", "(", "\"Train/perplexity\"", ",", "perplexities", "[", "i", "]", ",", "i", ")", "\n", "\n", "", "", "for", "epoch", "in", "tqdm", "(", "range", "(", "last_epoch", ",", "epochs", "+", "1", ")", ",", "desc", "=", "\"Epoch: \"", ",", "leave", "=", "True", ")", ":", "\n", "\n", "# train epoch", "\n", "        ", "aspect_model", ".", "train", "(", ")", "\n", "\n", "tr_loss", "=", "0", "\n", "steps", "=", "trange", "(", "len", "(", "training_batches", ")", ",", "desc", "=", "\"Train Loss\"", ")", "\n", "for", "step", "in", "steps", ":", "\n", "            ", "context_input", ",", "node_input", ",", "edge_input", ",", "type_input", ",", "aspect_input", ",", "aspect_output", "=", "training_batches", "[", "step", "]", "\n", "\n", "loss", "=", "train", "(", "context_input", ",", "node_input", ",", "edge_input", ",", "type_input", ",", "aspect_input", ",", "aspect_output", ",", "\n", "aspect_model", ",", "aspect_optimizer", ")", "\n", "\n", "tr_loss", "+=", "loss", "\n", "global_step", "+=", "1", "\n", "\n", "losses", ".", "append", "(", "loss", ")", "\n", "perplexities", ".", "append", "(", "math", ".", "exp", "(", "loss", ")", ")", "\n", "\n", "writer", ".", "add_scalar", "(", "\"Train/loss\"", ",", "loss", ",", "global_step", ")", "\n", "writer", ".", "add_scalar", "(", "\"Train/perplexity\"", ",", "math", ".", "exp", "(", "loss", ")", ",", "global_step", ")", "\n", "\n", "steps", ".", "set_description", "(", "\"AspectModel (Loss=%g, PPL=%g)\"", "%", "(", "round", "(", "loss", ",", "4", ")", ",", "round", "(", "math", ".", "exp", "(", "loss", ")", ",", "4", ")", ")", ")", "\n", "\n", "", "cur_loss", "=", "tr_loss", "/", "len", "(", "training_batches", ")", "\n", "cur_ppl", "=", "math", ".", "exp", "(", "cur_loss", ")", "\n", "\n", "print", "(", "'\\nTrain | Epoch: {:3d} | Avg Loss={:4.4f} | Avg PPL={:4.4f}\\n'", ".", "format", "(", "epoch", ",", "cur_loss", ",", "cur_ppl", ")", ")", "\n", "\n", "# evaluate", "\n", "aspect_model", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "vl_loss", "=", "0", "\n", "for", "val_batch", "in", "val_batches", ":", "\n", "                ", "context_input", ",", "node_input", ",", "edge_input", ",", "type_input", ",", "aspect_input", ",", "aspect_output", "=", "val_batch", "\n", "\n", "loss", "=", "evaluate", "(", "context_input", ",", "node_input", ",", "edge_input", ",", "type_input", ",", "aspect_input", ",", "aspect_output", ",", "\n", "aspect_model", ")", "\n", "\n", "vl_loss", "+=", "loss", "\n", "", "vl_loss", "/=", "len", "(", "val_batches", ")", "\n", "vl_ppl", "=", "math", ".", "exp", "(", "vl_loss", ")", "\n", "\n", "", "writer", ".", "add_scalar", "(", "\"Valid/loss\"", ",", "vl_loss", ",", "global_step", ")", "\n", "writer", ".", "add_scalar", "(", "\"Valid/perplexity\"", ",", "vl_ppl", ",", "global_step", ")", "\n", "\n", "print", "(", "'Valid | Epoch: {:3d} | Avg Loss={:4.4f} | Avg PPL={:4.4f}\\n'", ".", "format", "(", "epoch", ",", "vl_loss", ",", "vl_ppl", ")", ")", "\n", "\n", "# Save the model if the validation loss is the best we've seen so far.", "\n", "model_path", "=", "os", ".", "path", ".", "join", "(", "save_dir", ",", "\"model\"", ")", "\n", "if", "not", "best_val_loss", "or", "vl_loss", "<", "best_val_loss", ":", "\n", "            ", "directory", "=", "os", ".", "path", ".", "join", "(", "model_path", ",", "'{}_{}_{}'", ".", "format", "(", "batch_size", ",", "hidden_size", ",", "rnn_layers", ")", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "directory", ")", ":", "\n", "                ", "os", ".", "makedirs", "(", "directory", ")", "\n", "", "torch", ".", "save", "(", "{", "\n", "'global_step'", ":", "global_step", ",", "\n", "'epoch'", ":", "epoch", ",", "\n", "'aspect_model'", ":", "aspect_model", ".", "state_dict", "(", ")", ",", "\n", "'loss'", ":", "losses", ",", "\n", "'perplexity'", ":", "perplexities", "\n", "}", ",", "os", ".", "path", ".", "join", "(", "directory", ",", "'{}_{}_{}.tar'", ".", "format", "(", "epoch", ",", "round", "(", "vl_loss", ",", "4", ")", ",", "'aspect_model'", ")", ")", ")", "\n", "best_val_loss", "=", "vl_loss", "\n", "\n", "", "if", "vl_loss", ">", "best_val_loss", ":", "\n", "            ", "print", "(", "'validation loss is larger than best validation loss. Break!'", ")", "\n", "break", "\n", "\n", "# learning rate adjust", "\n", "", "adjust_learning_rate", "(", "aspect_optimizer", ",", "epoch", "-", "last_epoch", "+", "1", ",", "learning_rate", ",", "lr_decay_epoch", ",", "lr_decay_ratio", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.main.tab_printer": [[7, 17], ["vars", "sorted", "texttable.Texttable", "texttable.Texttable.add_rows", "print", "vars.keys", "texttable.Texttable.draw", "k.replace().capitalize", "k.replace"], "function", ["None"], ["    ", "\"\"\"\n    Function to print the logs in a nice tabular format.\n    :param args: Parameters used for the model.\n    \"\"\"", "\n", "args", "=", "vars", "(", "args", ")", "\n", "keys", "=", "sorted", "(", "args", ".", "keys", "(", ")", ")", "\n", "t", "=", "Texttable", "(", ")", "\n", "t", ".", "add_rows", "(", "[", "[", "\"Parameter\"", ",", "\"Value\"", "]", "]", "+", "[", "[", "k", ".", "replace", "(", "\"_\"", ",", "\" \"", ")", ".", "capitalize", "(", ")", ",", "args", "[", "k", "]", "]", "for", "k", "in", "keys", "]", ")", "\n", "print", "(", "t", ".", "draw", "(", ")", ")", "\n", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.main.parse": [[19, 55], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args"], "function", ["None"], ["    ", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\"--train\"", ",", "help", "=", "\"Train the model with corpus\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--load\"", ",", "help", "=", "\"load the saved model and train\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--aspect_model\"", ",", "help", "=", "\"the saved aspect model\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--epochs\"", ",", "type", "=", "int", ",", "default", "=", "400", ",", "help", "=", "\"Epochs\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--batch_size\"", ",", "type", "=", "int", ",", "default", "=", "1024", ",", "help", "=", "\"Batch size\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--rnn_layers\"", ",", "type", "=", "int", ",", "default", "=", "2", ",", "help", "=", "\"Number of layers in encoder and decoder\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--hidden_size\"", ",", "type", "=", "int", ",", "default", "=", "512", ",", "help", "=", "\"Hidden size in encoder and decoder\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--embed_size\"", ",", "type", "=", "int", ",", "default", "=", "512", ",", "help", "=", "\"embedding size of topic\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--node_size\"", ",", "type", "=", "int", ",", "default", "=", "512", ",", "help", "=", "\"embedding size of context\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--beam_size\"", ",", "type", "=", "int", ",", "default", "=", "8", ",", "help", "=", "\"beam size in decoder\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--gcn_layers\"", ",", "type", "=", "int", ",", "default", "=", "3", ",", "help", "=", "\"GCN layers\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--gcn_filters\"", ",", "type", "=", "int", ",", "default", "=", "100", ",", "help", "=", "\"GCN layers\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--capsule_size\"", ",", "type", "=", "int", ",", "default", "=", "100", ",", "help", "=", "\"capsule size of primary/graph/aspect capsules\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--capsule_num\"", ",", "type", "=", "int", ",", "default", "=", "10", ",", "help", "=", "\"number of capsules\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--lr_decay_ratio\"", ",", "type", "=", "float", ",", "default", "=", "0.8", ",", "help", "=", "\"learning rate decay ratio\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--lr_decay_epoch\"", ",", "type", "=", "int", ",", "default", "=", "2", ",", "help", "=", "\"learning rate decay epoch\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--learning_rate\"", ",", "type", "=", "float", ",", "default", "=", "0.00002", ",", "help", "=", "\"Learning rate\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--weight_decay\"", ",", "type", "=", "float", ",", "default", "=", "10", "**", "-", "6", ",", "help", "=", "\"Weight decay. Default is 10^-6.\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--max_length\"", ",", "type", "=", "int", ",", "default", "=", "10", ",", "help", "=", "\"max length of sequence\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--min_length\"", ",", "type", "=", "int", ",", "default", "=", "3", ",", "help", "=", "\"min length of sequence\"", ")", "\n", "\n", "parser", ".", "add_argument", "(", "\"--save_dir\"", ",", "help", "=", "\"saved directory of model\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--load_file\"", ",", "help", "=", "\"saved model\"", ")", "\n", "\n", "args", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "return", "args", "\n", "\n", "\n", "", "def", "run", "(", "args", ")", ":", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.main.run": [[57, 82], ["main.tab_printer", "train.trainIters", "train.trainIters", "evaluate.runTest", "print"], "function", ["home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.main.tab_printer", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.train.trainIters", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.train.trainIters", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.evaluate.runTest"], ["\n", "learning_rate", ",", "lr_decay_epoch", ",", "lr_decay_ratio", ",", "weight_decay", ",", "embed_size", ",", "hidden_size", ",", "node_size", ",", "capsule_size", ",", "gcn_layers", ",", "gcn_filters", ",", "rnn_layers", ",", "capsule_num", ",", "batch_size", ",", "epochs", "=", "args", ".", "learning_rate", ",", "args", ".", "lr_decay_epoch", ",", "args", ".", "lr_decay_ratio", ",", "args", ".", "weight_decay", ",", "args", ".", "embed_size", ",", "args", ".", "hidden_size", ",", "args", ".", "node_size", ",", "args", ".", "capsule_size", ",", "args", ".", "gcn_layers", ",", "args", ".", "gcn_filters", ",", "args", ".", "rnn_layers", ",", "args", ".", "capsule_num", ",", "args", ".", "batch_size", ",", "args", ".", "epochs", "\n", "\n", "if", "args", ".", "train", ":", "\n", "        ", "trainIters", "(", "args", ".", "train", ",", "learning_rate", ",", "lr_decay_epoch", ",", "lr_decay_ratio", ",", "weight_decay", ",", "batch_size", ",", "\n", "rnn_layers", ",", "hidden_size", ",", "embed_size", ",", "node_size", ",", "capsule_size", ",", "epochs", ",", "gcn_layers", ",", "gcn_filters", ",", "\n", "capsule_num", ",", "args", ".", "save_dir", ")", "\n", "\n", "", "elif", "args", ".", "load", ":", "\n", "        ", "trainIters", "(", "args", ".", "load", ",", "learning_rate", ",", "lr_decay_epoch", ",", "lr_decay_ratio", ",", "weight_decay", ",", "batch_size", ",", "\n", "rnn_layers", ",", "hidden_size", ",", "embed_size", ",", "node_size", ",", "capsule_size", ",", "epochs", ",", "gcn_layers", ",", "gcn_filters", ",", "\n", "capsule_num", ",", "args", ".", "save_dir", ",", "args", ".", "load_file", ")", "\n", "\n", "", "else", ":", "\n", "        ", "print", "(", "\"mode error!\"", ")", "\n", "\n", "\n", "", "", "if", "__name__", "==", "\"__main__\"", ":", "\n", "    ", "args", "=", "parse", "(", ")", "\n", "run", "(", "args", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.evaluate.Hypothesis.__init__": [[28, 33], ["collections.deque"], "methods", ["None"], ["    ", "def", "__init__", "(", "self", ",", "tokens", ",", "his_tokens", ",", "probs", ",", "state", ")", ":", "\n", "        ", "self", ".", "tokens", "=", "tokens", "\n", "self", ".", "his_tokens", "=", "deque", "(", "his_tokens", ")", "\n", "self", ".", "probs", "=", "probs", "\n", "self", ".", "state", "=", "state", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.evaluate.Hypothesis.extend": [[34, 42], ["evaluate.Hypothesis", "evaluate.Hypothesis.his_tokens.popleft", "evaluate.Hypothesis.his_tokens.append"], "methods", ["None"], ["", "def", "extend", "(", "self", ",", "token", ",", "his_token", ",", "prob", ",", "state", ")", ":", "\n", "        ", "if", "his_token", ":", "\n", "            ", "self", ".", "his_tokens", ".", "popleft", "(", ")", "\n", "self", ".", "his_tokens", ".", "append", "(", "his_token", ")", "\n", "", "return", "Hypothesis", "(", "tokens", "=", "self", ".", "tokens", "+", "[", "token", "]", ",", "\n", "his_tokens", "=", "self", ".", "his_tokens", ",", "\n", "probs", "=", "self", ".", "probs", "+", "[", "prob", "]", ",", "\n", "state", "=", "state", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.evaluate.Hypothesis.history_tokens": [[43, 46], ["list"], "methods", ["None"], ["", "@", "property", "\n", "def", "history_tokens", "(", "self", ")", ":", "\n", "        ", "return", "list", "(", "self", ".", "his_tokens", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.evaluate.Hypothesis.latest_token": [[47, 50], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "latest_token", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "tokens", "[", "-", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.evaluate.Hypothesis.prob": [[51, 54], ["sum"], "methods", ["None"], ["", "@", "property", "\n", "def", "prob", "(", "self", ")", ":", "\n", "        ", "return", "sum", "(", "self", ".", "probs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.evaluate.Hypothesis.avg_prob": [[55, 58], ["len"], "methods", ["None"], ["", "@", "property", "\n", "def", "avg_prob", "(", "self", ")", ":", "\n", "        ", "return", "self", ".", "prob", "/", "len", "(", "self", ".", "tokens", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.evaluate.sort_hyps": [[60, 62], ["sorted"], "function", ["None"], ["", "", "def", "sort_hyps", "(", "hyps", ")", ":", "\n", "    ", "return", "sorted", "(", "hyps", ",", "key", "=", "lambda", "h", ":", "h", ".", "prob", ",", "reverse", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.evaluate.beam_decode": [[64, 165], ["torch.LongTensor().to", "range", "aspect_model", "torch.sqrt", "torch.sqrt.data.topk", "topi.squeeze.squeeze", "[].item", "torch.LongTensor", "decoded_aspects.append", "decoded_aspects.append", "torch.LongTensor().to", "torch.LongTensor().to", "evaluate.sort_hyps", "evaluate.Hypothesis", "range", "evaluate.sort_hyps", "len", "sentence_tokens.append", "torch.LongTensor", "torch.LongTensor", "range", "len", "torch.LongTensor().to", "set", "list", "torch.LongTensor().to", "review_model", "new_hiddens.append", "review_output.data.topk", "topv.squeeze.squeeze", "topi.squeeze.squeeze", "topk_ids.extend", "topk_probs.extend", "len", "range", "decoded_reviews.append", "decoded_reviews.append", "len", "random.sample", "random.sample", "hyp.extend", "all_hyps.append", "hyps.append", "torch.LongTensor", "torch.LongTensor", "[].item", "results.append", "len", "len", "int", "int", "random.sample.add", "len", "[].item", "int"], "function", ["home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.evaluate.sort_hyps", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.evaluate.sort_hyps", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.evaluate.Hypothesis.extend", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.evaluate.Hypothesis.extend", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.evaluate.Hypothesis.extend"], ["", "def", "beam_decode", "(", "aspect_model", ",", "review_model", ",", "aspect_hidden", ",", "review_hidden", ",", "aspect_context_embed", ",", "graph_embed", ",", "\n", "review_context_embed", ",", "vocabs", ",", "beam_size", ",", "max_length", ",", "min_length", ")", ":", "\n", "    ", "aspect_input", "=", "torch", ".", "LongTensor", "(", "[", "[", "SOS_ID", "]", "]", ")", ".", "to", "(", "device", ")", "\n", "\n", "decoded_aspects", "=", "[", "]", "\n", "decoded_reviews", "=", "[", "]", "\n", "\n", "for", "ai", "in", "range", "(", "MAX_TOPIC", ")", ":", "\n", "        ", "aspect_capsules", ",", "aspect_hidden", "=", "aspect_model", "(", "aspect_context_embed", ",", "aspect_hidden", ",", "aspect_input", ",", "graph_embed", ")", "\n", "aspect_output", "=", "torch", ".", "sqrt", "(", "(", "aspect_capsules", "**", "2", ")", ".", "sum", "(", "dim", "=", "-", "1", ")", ")", "\n", "topv", ",", "topi", "=", "aspect_output", ".", "data", ".", "topk", "(", "5", ")", "\n", "topi", "=", "topi", ".", "squeeze", "(", "0", ")", "\n", "nti", "=", "topi", "[", "0", "]", "[", "0", "]", ".", "item", "(", ")", "\n", "if", "nti", "==", "EOS_ID", ":", "\n", "            ", "decoded_aspects", ".", "append", "(", "\"<eos>\"", ")", "\n", "break", "\n", "", "else", ":", "\n", "            ", "decoded_aspects", ".", "append", "(", "vocabs", ".", "idx2aspect", "[", "nti", "]", ")", "\n", "aspect_input", "=", "torch", ".", "LongTensor", "(", "[", "[", "nti", "]", "]", ")", ".", "to", "(", "device", ")", "\n", "\n", "aspect", "=", "torch", ".", "LongTensor", "(", "[", "[", "nti", "]", "]", ")", ".", "to", "(", "device", ")", "\n", "\n", "hyps", "=", "[", "Hypothesis", "(", "tokens", "=", "[", "SOS_ID", "]", ",", "his_tokens", "=", "[", "PAD_ID", "]", "*", "WINDOW_SIZE", ",", "\n", "probs", "=", "[", "0.0", "]", ",", "state", "=", "review_hidden", ")", "for", "_", "in", "range", "(", "beam_size", ")", "]", "\n", "results", "=", "[", "]", "\n", "steps", "=", "0", "\n", "while", "steps", "<", "max_length", "and", "len", "(", "results", ")", "<", "beam_size", ":", "\n", "                ", "new_hiddens", "=", "[", "]", "\n", "topk_ids", "=", "[", "]", "\n", "topk_probs", "=", "[", "]", "\n", "for", "hyp", "in", "hyps", ":", "\n", "                    ", "review_input", "=", "torch", ".", "LongTensor", "(", "[", "[", "hyp", ".", "latest_token", "]", "]", ")", ".", "to", "(", "device", ")", "\n", "review_hidden", "=", "hyp", ".", "state", "\n", "\n", "extend", "=", "set", "(", ")", "\n", "for", "wid", "in", "hyp", ".", "history_tokens", ":", "\n", "                        ", "if", "vocabs", ".", "idx2token", "[", "wid", "]", "in", "vocabs", ".", "node2neighbor", ":", "\n", "                            ", "for", "nei", "in", "vocabs", ".", "node2neighbor", "[", "vocabs", ".", "idx2token", "[", "wid", "]", "]", ":", "\n", "                                ", "if", "nei", "in", "vocabs", ".", "token2idx", ":", "\n", "                                    ", "extend", ".", "add", "(", "vocabs", ".", "token2idx", "[", "nei", "]", ")", "\n", "", "", "", "", "extend", "=", "list", "(", "extend", ")", "\n", "if", "len", "(", "extend", ")", "<=", "EXTEND_SIZE", ":", "\n", "                        ", "extend", "=", "extend", "+", "[", "PAD_ID", "]", "*", "(", "EXTEND_SIZE", "-", "len", "(", "extend", ")", ")", "\n", "", "else", ":", "\n", "                        ", "extend", "=", "random", ".", "sample", "(", "extend", ",", "EXTEND_SIZE", ")", "\n", "", "extend_input", "=", "torch", ".", "LongTensor", "(", "[", "[", "extend", "]", "]", ")", ".", "to", "(", "device", ")", "\n", "\n", "review_output", ",", "review_hidden", "=", "review_model", "(", "review_context_embed", ",", "review_hidden", ",", "review_input", ",", "\n", "aspect", ",", "extend_input", ")", "\n", "new_hiddens", ".", "append", "(", "review_hidden", ")", "\n", "\n", "topv", ",", "topi", "=", "review_output", ".", "data", ".", "topk", "(", "beam_size", ")", "\n", "topv", "=", "topv", ".", "squeeze", "(", "0", ")", "\n", "topi", "=", "topi", ".", "squeeze", "(", "0", ")", "\n", "\n", "topk_ids", ".", "extend", "(", "topi", ")", "\n", "topk_probs", ".", "extend", "(", "topv", ")", "\n", "\n", "", "all_hyps", "=", "[", "]", "\n", "num_orig_hyps", "=", "1", "if", "steps", "==", "0", "else", "len", "(", "hyps", ")", "\n", "for", "i", "in", "range", "(", "num_orig_hyps", ")", ":", "\n", "                    ", "hyp", ",", "new_hidden", "=", "hyps", "[", "i", "]", ",", "new_hiddens", "[", "i", "]", "\n", "for", "j", "in", "range", "(", "beam_size", ")", ":", "\n", "# adding to history sequence or not", "\n", "                        ", "ht", "=", "None", "\n", "if", "vocabs", ".", "idx2token", "[", "topk_ids", "[", "i", "]", "[", "j", "]", ".", "item", "(", ")", "]", "not", "in", "[", "\"<sos>\"", ",", "\"<eos>\"", ",", "\"<unk>\"", ",", "\",\"", ",", "\".\"", ",", "\"!\"", ",", "\"?\"", "]", ":", "\n", "                            ", "ht", "=", "topk_ids", "[", "i", "]", "[", "j", "]", ".", "item", "(", ")", "\n", "", "new_hyp", "=", "hyp", ".", "extend", "(", "token", "=", "topk_ids", "[", "i", "]", "[", "j", "]", ",", "his_token", "=", "ht", ",", "\n", "prob", "=", "topk_probs", "[", "i", "]", "[", "j", "]", ",", "state", "=", "new_hidden", ")", "\n", "all_hyps", ".", "append", "(", "new_hyp", ")", "\n", "\n", "", "", "hyps", "=", "[", "]", "\n", "for", "h", "in", "sort_hyps", "(", "all_hyps", ")", ":", "\n", "                    ", "if", "h", ".", "latest_token", "==", "EOS_ID", ":", "\n", "                        ", "if", "steps", ">=", "min_length", ":", "\n", "                            ", "results", ".", "append", "(", "h", ")", "\n", "", "", "else", ":", "\n", "                        ", "hyps", ".", "append", "(", "h", ")", "\n", "\n", "", "if", "len", "(", "hyps", ")", "==", "beam_size", "or", "len", "(", "results", ")", "==", "beam_size", ":", "\n", "                        ", "break", "\n", "\n", "", "", "steps", "+=", "1", "\n", "\n", "", "if", "len", "(", "results", ")", "==", "0", ":", "\n", "                ", "results", "=", "hyps", "\n", "\n", "", "hyps_sorted", "=", "sort_hyps", "(", "results", ")", "\n", "best_hyp", "=", "hyps_sorted", "[", "0", "]", "\n", "\n", "sentence_tokens", "=", "best_hyp", ".", "tokens", "\n", "if", "sentence_tokens", "[", "-", "1", "]", "!=", "EOS_ID", ":", "\n", "                ", "sentence_tokens", ".", "append", "(", "EOS_ID", ")", "\n", "", "for", "t", "in", "sentence_tokens", "[", "1", ":", "]", ":", "\n", "                ", "if", "vocabs", ".", "idx2token", "[", "int", "(", "t", ")", "]", "in", "vocabs", ".", "node2name", ":", "\n", "                    ", "name", "=", "vocabs", ".", "node2name", "[", "vocabs", ".", "idx2token", "[", "int", "(", "t", ")", "]", "]", "\n", "decoded_reviews", ".", "append", "(", "name", ")", "\n", "", "else", ":", "\n", "                    ", "decoded_reviews", ".", "append", "(", "vocabs", ".", "idx2token", "[", "int", "(", "t", ")", "]", ")", "\n", "\n", "", "", "", "", "return", "decoded_aspects", ",", "decoded_reviews", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.evaluate.decode": [[167, 231], ["torch.LongTensor().to", "collections.deque", "range", "aspect_model", "aspect_output.data.topk", "topi.squeeze.squeeze", "decoded_aspects.append", "torch.LongTensor", "decoded_aspects.append", "decoded_aspects.append", "torch.LongTensor().to", "torch.LongTensor().to", "torch.LongTensor().to", "range", "torch.LongTensor().to", "review_model", "review_output.data.topk", "topi.squeeze.squeeze", "decoded_reviews.append", "torch.LongTensor", "torch.LongTensor", "torch.LongTensor", "decoded_reviews.append", "torch.LongTensor().to", "torch.LongTensor", "decoded_reviews.append", "decoded_reviews.append", "collections.deque.popleft", "collections.deque.append", "set", "list", "list", "torch.LongTensor", "len", "random.sample", "random.sample", "random.sample.add", "len"], "function", ["None"], ["", "def", "decode", "(", "aspect_model", ",", "review_model", ",", "aspect_hidden", ",", "review_hidden", ",", "aspect_context_embed", ",", "graph_embed", ",", "\n", "review_context_embed", ",", "vocabs", ",", "max_length", ",", "min_length", ")", ":", "\n", "    ", "aspect_input", "=", "torch", ".", "LongTensor", "(", "[", "[", "SOS_ID", "]", "]", ")", ".", "to", "(", "device", ")", "\n", "\n", "history", "=", "deque", "(", "[", "PAD_ID", "]", "*", "WINDOW_SIZE", ")", "\n", "extend", "=", "[", "PAD_ID", "]", "*", "EXTEND_SIZE", "\n", "\n", "decoded_aspects", "=", "[", "]", "\n", "decoded_reviews", "=", "[", "]", "\n", "\n", "for", "ai", "in", "range", "(", "MAX_TOPIC", ")", ":", "\n", "        ", "aspect_output", ",", "aspect_hidden", "=", "aspect_model", "(", "aspect_context_embed", ",", "aspect_hidden", ",", "aspect_input", ",", "graph_embed", ")", "\n", "topv", ",", "topi", "=", "aspect_output", ".", "data", ".", "topk", "(", "4", ")", "\n", "topi", "=", "topi", ".", "squeeze", "(", "0", ")", "\n", "nti", "=", "topi", "[", "0", "]", "[", "0", "]", "\n", "if", "nti", "==", "EOS_ID", ":", "\n", "            ", "decoded_aspects", ".", "append", "(", "\"<eos>\"", ")", "\n", "break", "\n", "", "else", ":", "\n", "            ", "decoded_aspects", ".", "append", "(", "vocabs", ".", "idx2aspect", "[", "nti", "]", ")", "\n", "aspect_input", "=", "torch", ".", "LongTensor", "(", "[", "[", "nti", "]", "]", ")", ".", "to", "(", "device", ")", "\n", "\n", "aspect", "=", "torch", ".", "LongTensor", "(", "[", "[", "nti", "]", "]", ")", ".", "to", "(", "device", ")", "\n", "review_input", "=", "torch", ".", "LongTensor", "(", "[", "[", "SOS_ID", "]", "]", ")", ".", "to", "(", "device", ")", "\n", "for", "si", "in", "range", "(", "max_length", ")", ":", "\n", "                ", "extend_input", "=", "torch", ".", "LongTensor", "(", "[", "[", "extend", "]", "]", ")", ".", "to", "(", "device", ")", "\n", "review_output", ",", "review_hidden", "=", "review_model", "(", "review_context_embed", ",", "review_hidden", ",", "review_input", ",", "\n", "aspect", ",", "extend_input", ")", "\n", "topv", ",", "topi", "=", "review_output", ".", "data", ".", "topk", "(", "4", ")", "\n", "topi", "=", "topi", ".", "squeeze", "(", "0", ")", "\n", "npi", "=", "topi", "[", "0", "]", "[", "0", "]", "\n", "if", "npi", "==", "EOS_ID", ":", "\n", "                    ", "decoded_reviews", ".", "append", "(", "\"<eos>\"", ")", "\n", "break", "\n", "", "else", ":", "\n", "                    ", "if", "vocabs", ".", "idx2token", "[", "t", "]", "in", "vocabs", ".", "node2name", ":", "\n", "                        ", "decoded_reviews", ".", "append", "(", "vocabs", ".", "node2name", "[", "vocabs", ".", "idx2token", "[", "t", "]", "]", ")", "\n", "", "else", ":", "\n", "                        ", "decoded_reviews", ".", "append", "(", "vocabs", ".", "idx2token", "[", "t", "]", ")", "\n", "", "review_input", "=", "torch", ".", "LongTensor", "(", "[", "[", "npi", "]", "]", ")", ".", "to", "(", "device", ")", "\n", "# judge word", "\n", "if", "vocabs", ".", "idx2token", "[", "npi", "]", "not", "in", "[", "\"<sos>\"", ",", "\"<eos>\"", ",", "\"<unk>\"", ",", "\",\"", ",", "\".\"", ",", "\"!\"", ",", "\"?\"", "]", ":", "\n", "                        ", "history", ".", "popleft", "(", ")", "\n", "history", ".", "append", "(", "npi", ")", "\n", "ext", "=", "set", "(", ")", "\n", "for", "wid", "in", "list", "(", "history", ")", ":", "\n", "                            ", "if", "vocabs", ".", "idx2token", "[", "wid", "]", "in", "vocabs", ".", "node2neighbor", ":", "\n", "                                ", "for", "nei", "in", "vocabs", ".", "node2neighbor", "[", "vocabs", ".", "idx2token", "[", "wid", "]", "]", ":", "\n", "                                    ", "if", "nei", "in", "vocabs", ".", "token2idx", ":", "\n", "                                        ", "ext", ".", "add", "(", "vocabs", ".", "token2idx", "[", "nei", "]", ")", "\n", "", "", "", "", "ext", "=", "list", "(", "ext", ")", "\n", "if", "len", "(", "ext", ")", "<=", "EXTEND_SIZE", ":", "\n", "                            ", "ext", "=", "ext", "+", "[", "PAD_ID", "]", "*", "(", "EXTEND_SIZE", "-", "len", "(", "ext", ")", ")", "\n", "", "else", ":", "\n", "                            ", "ext", "=", "random", ".", "sample", "(", "ext", ",", "EXTEND_SIZE", ")", "\n", "", "extend", "=", "ext", "\n", "\n", "", "", "", "if", "decoded_reviews", "[", "-", "1", "]", "!=", "\"<eos>\"", ":", "\n", "                ", "decoded_reviews", ".", "append", "(", "\"<eos>\"", ")", "\n", "\n", "", "", "", "if", "decoded_aspects", "[", "-", "1", "]", "!=", "\"<eos>\"", ":", "\n", "        ", "decoded_aspects", ".", "append", "(", "\"<eos>\"", ")", "\n", "\n", "", "return", "decoded_aspects", ",", "decoded_reviews", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.evaluate.evaluate": [[233, 253], ["InputVar().to", "GraphVar", "node_input.to.to", "edge_input.to.to", "type_input.to.to", "aspect_model.forward_context", "aspect_model.forward_graph", "review_model.forward_context", "evaluate.decode", "evaluate.beam_decode", "InputVar"], "function", ["home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.util.GraphVar", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.ReviewModel.forward_context", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.AspectModel.forward_graph", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.ReviewModel.forward_context", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.evaluate.decode", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.evaluate.beam_decode", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.util.InputVar"], ["", "def", "evaluate", "(", "aspect_model", ",", "review_model", ",", "vocabs", ",", "context", ",", "nodes", ",", "edges", ",", "types", ",", "beam_size", ",", "max_length", ",", "min_length", ")", ":", "\n", "    ", "context_input", "=", "InputVar", "(", "[", "context", "]", ")", ".", "to", "(", "device", ")", "\n", "node_input", ",", "edge_input", ",", "type_input", "=", "GraphVar", "(", "[", "nodes", "]", ",", "[", "edges", "]", ",", "[", "types", "]", ",", "vocabs", ")", "\n", "node_input", "=", "node_input", ".", "to", "(", "device", ")", "\n", "edge_input", "=", "edge_input", ".", "to", "(", "device", ")", "\n", "type_input", "=", "type_input", ".", "to", "(", "device", ")", "\n", "\n", "# attribute encoder", "\n", "aspect_context_embed", ",", "aspect_hidden", "=", "aspect_model", ".", "forward_context", "(", "context_input", ")", "\n", "graph_embed", "=", "aspect_model", ".", "forward_graph", "(", "node_input", ",", "edge_input", ",", "type_input", ")", "\n", "\n", "review_context_embed", ",", "review_hidden", "=", "review_model", ".", "forward_context", "(", "context_input", ")", "\n", "\n", "if", "beam_size", "==", "1", ":", "\n", "        ", "return", "decode", "(", "aspect_model", ",", "review_model", ",", "aspect_hidden", ",", "review_hidden", ",", "\n", "aspect_context_embed", ",", "graph_embed", ",", "review_context_embed", ",", "vocabs", ",", "max_length", ",", "min_length", ")", "\n", "", "else", ":", "\n", "        ", "return", "beam_decode", "(", "aspect_model", ",", "review_model", ",", "aspect_hidden", ",", "review_hidden", ",", "\n", "aspect_context_embed", ",", "graph_embed", ",", "review_context_embed", ",", "vocabs", ",", "beam_size", ",", "max_length", ",", "\n", "min_length", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.evaluate.evaluateRandomly": [[255, 305], ["os.path.join", "open", "range", "open.close", "os.path.exists", "os.makedirs", "print", "print", "print", "print", "open.write", "reviews.append", "evaluate.evaluate", "print", "print", "open.write", "open.write", "words.append", "words.append", "review_words.append", "review_words.append"], "function", ["home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.train.evaluate"], ["", "", "def", "evaluateRandomly", "(", "aspect_model", ",", "review_model", ",", "vocabs", ",", "pairs", ",", "n_pairs", ",", "beam_size", ",", "max_length", ",", "min_length", ",", "save_dir", ")", ":", "\n", "    ", "path", "=", "os", ".", "path", ".", "join", "(", "save_dir", ",", "'decode'", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "path", ")", "\n", "", "f1", "=", "open", "(", "path", "+", "\"/decoded.txt\"", ",", "'w'", ")", "\n", "for", "i", "in", "range", "(", "n_pairs", ")", ":", "\n", "\n", "        ", "pair", "=", "pairs", "[", "i", "]", "\n", "\n", "user", "=", "pair", "[", "0", "]", "[", "0", "]", "\n", "item", "=", "pair", "[", "0", "]", "[", "1", "]", "\n", "rating", "=", "pair", "[", "0", "]", "[", "2", "]", "\n", "aspects", "=", "\" \"", ".", "join", "(", "pair", "[", "1", "]", "[", "1", ":", "-", "1", "]", ")", "\n", "reviews", "=", "[", "]", "\n", "for", "review", "in", "pair", "[", "2", "]", ":", "\n", "            ", "words", "=", "[", "]", "\n", "for", "wd", "in", "review", "[", "1", ":", "-", "1", "]", ":", "\n", "                ", "if", "wd", "in", "vocabs", ".", "node2name", ":", "\n", "                    ", "words", ".", "append", "(", "vocabs", ".", "node2name", "[", "wd", "]", ")", "\n", "", "else", ":", "\n", "                    ", "words", ".", "append", "(", "wd", ")", "\n", "", "", "reviews", ".", "append", "(", "\" \"", ".", "join", "(", "words", ")", ")", "\n", "", "reviews", "=", "\"||\"", ".", "join", "(", "reviews", ")", "\n", "print", "(", "\"=============================================================\"", ")", "\n", "print", "(", "'Attribute > '", ",", "\n", "'\\t'", ".", "join", "(", "[", "vocabs", ".", "idx2context", "[", "user", "]", ",", "vocabs", ".", "idx2context", "[", "item", "]", ",", "vocabs", ".", "idx2context", "[", "rating", "]", "]", ")", ")", "\n", "print", "(", "'Aspect > '", ",", "aspects", ")", "\n", "print", "(", "'Review > '", ",", "reviews", ")", "\n", "\n", "f1", ".", "write", "(", "'Attribute: '", "+", "'\\t'", ".", "join", "(", "\n", "[", "vocabs", ".", "idx2context", "[", "user", "]", ",", "vocabs", ".", "idx2context", "[", "item", "]", ",", "vocabs", ".", "idx2context", "[", "rating", "]", "]", ")", "+", "'\\n'", "\n", "+", "'Aspects: '", "+", "aspects", "+", "'\\n'", "\n", "+", "'Reviews: '", "+", "reviews", "+", "'\\n'", ")", "\n", "if", "beam_size", ">=", "1", ":", "\n", "            ", "output_aspects", ",", "output_reviews", "=", "evaluate", "(", "aspect_model", ",", "review_model", ",", "\n", "vocabs", ",", "pair", "[", "0", "]", ",", "pair", "[", "3", "]", ",", "pair", "[", "4", "]", ",", "pair", "[", "5", "]", ",", "\n", "beam_size", ",", "max_length", ",", "min_length", ")", "\n", "aspect_sentence", "=", "' '", ".", "join", "(", "output_aspects", "[", ":", "-", "1", "]", ")", "\n", "review_words", "=", "[", "]", "\n", "for", "wd", "in", "output_reviews", ":", "\n", "                ", "if", "wd", "==", "\"<eos>\"", ":", "\n", "                    ", "review_words", ".", "append", "(", "\"||\"", ")", "\n", "", "else", ":", "\n", "                    ", "review_words", ".", "append", "(", "wd", ")", "\n", "", "", "review_sentence", "=", "' '", ".", "join", "(", "review_words", "[", ":", "-", "1", "]", ")", "\n", "print", "(", "'Generation aspect < '", ",", "aspect_sentence", ")", "\n", "print", "(", "'Generation review < '", ",", "review_sentence", ")", "\n", "f1", ".", "write", "(", "'Generation aspect: '", "+", "aspect_sentence", "+", "\"\\n\"", ")", "\n", "f1", ".", "write", "(", "'Generation review: '", "+", "review_sentence", "+", "\"\\n\"", ")", "\n", "", "", "f1", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.evaluate.runTest": [[307, 330], ["load.loadPrepareData", "print", "model.AspectModel().to", "print", "model.ReviewModel().to", "torch.load", "AspectModel().to.load_state_dict", "torch.load", "ReviewModel().to.load_state_dict", "AspectModel().to.train", "ReviewModel().to.train", "evaluate.evaluateRandomly", "len", "model.AspectModel", "model.ReviewModel"], "function", ["home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.load.loadPrepareData", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.train.train", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.train.train", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.evaluate.evaluateRandomly"], ["", "def", "runTest", "(", "corpus", ",", "rnn_layers", ",", "hidden_size", ",", "embed_size", ",", "node_size", ",", "capsule_size", ",", "gcn_layers", ",", "gcn_filters", ",", "capsule_num", ",", "\n", "saved_aspect_model", ",", "saved_review_model", ",", "beam_size", ",", "max_length", ",", "min_length", ",", "save_dir", ")", ":", "\n", "    ", "vocabs", ",", "train_pairs", ",", "valid_pairs", ",", "test_pairs", "=", "loadPrepareData", "(", "corpus", ",", "save_dir", ")", "\n", "\n", "print", "(", "'Building aspect model ...'", ")", "\n", "aspect_model", "=", "AspectModel", "(", "vocabs", ",", "embed_size", ",", "node_size", ",", "hidden_size", ",", "capsule_size", ",", "\n", "gcn_layers", ",", "gcn_filters", ",", "rnn_layers", ",", "capsule_num", ")", ".", "to", "(", "device", ")", "\n", "\n", "print", "(", "'Building review model ...'", ")", "\n", "review_model", "=", "ReviewModel", "(", "vocabs", ",", "embed_size", ",", "node_size", ",", "hidden_size", ",", "rnn_layers", ")", ".", "to", "(", "device", ")", "\n", "\n", "checkpoint", "=", "torch", ".", "load", "(", "saved_aspect_model", ")", "\n", "aspect_model", ".", "load_state_dict", "(", "checkpoint", "[", "'aspect_model'", "]", ")", "\n", "\n", "checkpoint", "=", "torch", ".", "load", "(", "saved_review_model", ")", "\n", "review_model", ".", "load_state_dict", "(", "checkpoint", "[", "'review_model'", "]", ")", "\n", "\n", "# train mode set to false, effect only on dropout, batchNorm", "\n", "aspect_model", ".", "train", "(", "False", ")", "\n", "review_model", ".", "train", "(", "False", ")", "\n", "\n", "evaluateRandomly", "(", "aspect_model", ",", "review_model", ",", "vocabs", ",", "test_pairs", ",", "len", "(", "test_pairs", ")", ",", "beam_size", ",", "\n", "max_length", ",", "min_length", ",", "save_dir", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.train.adjust_learning_rate": [[31, 35], ["None"], "function", ["None"], ["\n", "def", "adjust_learning_rate", "(", "optimizer", ",", "epoch", ",", "learning_rate", ",", "lr_decay_epoch", ",", "lr_decay_ratio", ")", ":", "\n", "    ", "lr", "=", "learning_rate", "*", "(", "lr_decay_ratio", "**", "(", "epoch", "//", "lr_decay_epoch", ")", ")", "\n", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "lr", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.train.from_pretrained": [[37, 44], ["torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Embedding", "torch.nn.Parameter", "torch.nn.Parameter", "torch.nn.Parameter", "embeddings.dim"], "function", ["None"], ["\n", "", "", "def", "from_pretrained", "(", "embeddings", ",", "freeze", "=", "True", ")", ":", "\n", "    ", "assert", "embeddings", ".", "dim", "(", ")", "==", "2", ",", "'Embeddings parameter is expected to be 2-dimensional'", "\n", "rows", ",", "cols", "=", "embeddings", ".", "shape", "\n", "embedding", "=", "torch", ".", "nn", ".", "Embedding", "(", "num_embeddings", "=", "rows", ",", "embedding_dim", "=", "cols", ")", "\n", "embedding", ".", "weight", "=", "torch", ".", "nn", ".", "Parameter", "(", "embeddings", ")", "\n", "embedding", ".", "weight", ".", "requires_grad", "=", "not", "freeze", "\n", "return", "embedding", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.train.train": [[46, 70], ["review_optimizer.zero_grad", "context_input.to.to", "aspect_input.to.to", "review_input.to.to", "review_output.to.to", "extend_input.to.to", "review_model.forward_context", "review_model", "torch.ne", "torch.ne", "torch.ne", "loss.masked_cross_entropy", "loss.masked_cross_entropy.backward", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_norm_", "review_optimizer.step", "loss.masked_cross_entropy.item", "review_model.parameters"], "function", ["home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.ReviewModel.forward_context", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.loss.masked_cross_entropy"], ["\n", "", "def", "train", "(", "context_input", ",", "node_input", ",", "edge_input", ",", "type_input", ",", "aspect_input", ",", "aspect_output", ",", "\n", "aspect_model", ",", "aspect_optimizer", ")", ":", "\n", "    ", "aspect_optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "context_input", "=", "context_input", ".", "to", "(", "device", ")", "\n", "node_input", "=", "node_input", ".", "to", "(", "device", ")", "\n", "edge_input", "=", "edge_input", ".", "to", "(", "device", ")", "\n", "type_input", "=", "type_input", ".", "to", "(", "device", ")", "\n", "aspect_input", "=", "aspect_input", ".", "to", "(", "device", ")", "\n", "aspect_output", "=", "aspect_output", ".", "to", "(", "device", ")", "\n", "\n", "# context and graph encoder", "\n", "context_embed", ",", "hidden", "=", "aspect_model", ".", "forward_context", "(", "context_input", ")", "\n", "\n", "graph_embed", "=", "aspect_model", ".", "forward_graph", "(", "node_input", ",", "edge_input", ",", "type_input", ")", "\n", "\n", "decoder_generate", ",", "decoder_hidden", "=", "aspect_model", "(", "context_embed", ",", "hidden", ",", "aspect_input", ",", "graph_embed", ")", "\n", "\n", "mask", "=", "torch", ".", "ne", "(", "aspect_output", ",", "PAD_ID", ")", "\n", "loss", "=", "margin_loss", "(", "decoder_generate", ",", "aspect_output", ",", "mask", ")", "\n", "loss", ".", "backward", "(", ")", "\n", "\n", "clip", "=", "5.0", "\n", "mc", "=", "torch", ".", "nn", ".", "utils", ".", "clip_grad_norm_", "(", "filter", "(", "lambda", "p", ":", "p", ".", "requires_grad", ",", "aspect_model", ".", "parameters", "(", ")", ")", ",", "clip", ")", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.train.evaluate": [[72, 90], ["review_model.eval", "context_input.to.to", "aspect_input.to.to", "review_input.to.to", "review_output.to.to", "extend_input.to.to", "review_model.forward_context", "review_model", "torch.ne", "torch.ne", "torch.ne", "loss.masked_cross_entropy", "loss.masked_cross_entropy.item"], "function", ["home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.model.ReviewModel.forward_context", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.loss.masked_cross_entropy"], ["aspect_optimizer", ".", "step", "(", ")", "\n", "\n", "return", "loss", ".", "item", "(", ")", "\n", "\n", "\n", "", "def", "evaluate", "(", "context_input", ",", "node_input", ",", "edge_input", ",", "type_input", ",", "aspect_input", ",", "aspect_output", ",", "aspect_model", ")", ":", "\n", "    ", "aspect_model", ".", "eval", "(", ")", "\n", "\n", "context_input", "=", "context_input", ".", "to", "(", "device", ")", "\n", "node_input", "=", "node_input", ".", "to", "(", "device", ")", "\n", "edge_input", "=", "edge_input", ".", "to", "(", "device", ")", "\n", "type_input", "=", "type_input", ".", "to", "(", "device", ")", "\n", "aspect_input", "=", "aspect_input", ".", "to", "(", "device", ")", "\n", "aspect_output", "=", "aspect_output", ".", "to", "(", "device", ")", "\n", "\n", "# context and graph encoder", "\n", "context_embed", ",", "hidden", "=", "aspect_model", ".", "forward_context", "(", "context_input", ")", "\n", "\n", "graph_embed", "=", "aspect_model", ".", "forward_graph", "(", "node_input", ",", "edge_input", ",", "type_input", ")", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.train.batchify": [[92, 102], ["random.sample", "pairs.extend", "range", "len", "data.append", "len", "len", "util.ReviewBatch2Data"], "function", ["home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.evaluate.Hypothesis.extend", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.util.ReviewBatch2Data"], ["decoder_generate", ",", "decoder_hidden", "=", "aspect_model", "(", "context_embed", ",", "hidden", ",", "aspect_input", ",", "graph_embed", ")", "\n", "\n", "mask", "=", "torch", ".", "ne", "(", "aspect_output", ",", "PAD_ID", ")", "\n", "loss", "=", "margin_loss", "(", "decoder_generate", ",", "aspect_output", ",", "mask", ")", "\n", "\n", "return", "loss", ".", "item", "(", ")", "\n", "\n", "\n", "", "def", "batchify", "(", "pairs", ",", "bsz", ",", "vocabs", ")", ":", "\n", "    ", "nbatch", "=", "len", "(", "pairs", ")", "//", "bsz", "+", "1", "\n", "add_num", "=", "nbatch", "*", "bsz", "-", "len", "(", "pairs", ")", "\n"]], "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.train.trainIters": [[104, 232], ["print", "load.loadPrepareData", "print", "os.path.join", "print", "model.ReviewModel().to", "print", "torch.optim.Adam", "print", "os.path.join", "tensorboardX.SummaryWriter", "tqdm.tqdm", "os.path.exists", "os.makedirs", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "torch.load", "ReviewModel().to.parameters", "os.path.exists", "os.makedirs", "torch.load", "torch.load", "torch.load", "ReviewModel().to.load_state_dict", "range", "range", "ReviewModel().to.train", "tqdm.trange", "math.exp", "print", "ReviewModel().to.eval", "tensorboardX.SummaryWriter.add_scalar", "tensorboardX.SummaryWriter.add_scalar", "print", "os.path.join", "train.adjust_learning_rate", "os.path.join", "print", "train.batchify", "print", "torch.save", "torch.save", "torch.save", "os.path.join", "print", "train.batchify", "print", "torch.save", "torch.save", "torch.save", "model.ReviewModel", "len", "tensorboardX.SummaryWriter.add_scalar", "tensorboardX.SummaryWriter.add_scalar", "len", "train.train", "losses.append", "perplexities.append", "tensorboardX.SummaryWriter.add_scalar", "tensorboardX.SummaryWriter.add_scalar", "tqdm.trange.set_description", "len", "torch.no_grad", "torch.no_grad", "torch.no_grad", "len", "math.exp", "os.path.join", "torch.save", "torch.save", "torch.save", "print", "os.path.join", "os.path.join", "math.exp", "math.exp", "train.evaluate", "os.path.exists", "os.makedirs", "os.path.join", "ReviewModel().to.state_dict", "round", "round", "round", "math.exp"], "function", ["home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.None.load.loadPrepareData", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.train.train", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.train.adjust_learning_rate", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.train.batchify", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.train.batchify", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.train.train", "home.repos.pwc.inspect_result.turboLJY_CapsGNN-Review-Generation.review.train.evaluate"], ["pairs", ".", "extend", "(", "add_sam", ")", "\n", "assert", "len", "(", "pairs", ")", "%", "bsz", "==", "0", "\n", "data", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "nbatch", ")", ":", "\n", "        ", "data", ".", "append", "(", "AspectBatch2Data", "(", "vocabs", ",", "pairs", "[", "i", "*", "bsz", ":", "i", "*", "bsz", "+", "bsz", "]", ")", ")", "\n", "", "return", "data", "\n", "\n", "\n", "", "def", "trainIters", "(", "corpus", ",", "learning_rate", ",", "lr_decay_epoch", ",", "lr_decay_ratio", ",", "weight_decay", ",", "batch_size", ",", "rnn_layers", ",", "hidden_size", ",", "\n", "embed_size", ",", "node_size", ",", "capsule_size", ",", "epochs", ",", "gcn_layers", ",", "gcn_filters", ",", "capsule_num", ",", "save_dir", ",", "load_file", "=", "None", ")", ":", "\n", "    ", "print", "(", "'load data...'", ")", "\n", "vocabs", ",", "train_pairs", ",", "valid_pairs", ",", "test_pairs", "=", "loadPrepareData", "(", "corpus", ",", "save_dir", ")", "# load data", "\n", "print", "(", "'load data finish...'", ")", "\n", "\n", "data_path", "=", "os", ".", "path", ".", "join", "(", "save_dir", ",", "\"batches\"", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "data_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "data_path", ")", "\n", "\n", "", "corpus_name", "=", "corpus", "\n", "try", ":", "\n", "        ", "training_batches", "=", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "data_path", ",", "'{}_{}.tar'", ".", "format", "(", "'training_batches'", ",", "batch_size", ")", ")", ")", "\n", "", "except", "FileNotFoundError", ":", "\n", "        ", "print", "(", "'Training pairs not found, generating ...'", ")", "\n", "training_batches", "=", "batchify", "(", "train_pairs", ",", "batch_size", ",", "vocabs", ")", "\n", "print", "(", "'Complete building training pairs ...'", ")", "\n", "torch", ".", "save", "(", "training_batches", ",", "os", ".", "path", ".", "join", "(", "data_path", ",", "'{}_{}.tar'", ".", "format", "(", "'training_batches'", ",", "batch_size", ")", ")", ")", "\n", "\n", "# validation/test data", "\n", "", "eval_batch_size", "=", "10", "\n", "try", ":", "\n", "        ", "val_batches", "=", "torch", ".", "load", "(", "os", ".", "path", ".", "join", "(", "data_path", ",", "'{}_{}.tar'", ".", "format", "(", "'val_batches'", ",", "eval_batch_size", ")", ")", ")", "\n", "", "except", "FileNotFoundError", ":", "\n", "        ", "print", "(", "'Validation pairs not found, generating ...'", ")", "\n", "val_batches", "=", "batchify", "(", "valid_pairs", ",", "eval_batch_size", ",", "vocabs", ")", "\n", "print", "(", "'Complete building validation pairs ...'", ")", "\n", "torch", ".", "save", "(", "val_batches", ",", "os", ".", "path", ".", "join", "(", "data_path", ",", "'{}_{}.tar'", ".", "format", "(", "'val_batches'", ",", "eval_batch_size", ")", ")", ")", "\n", "\n", "", "print", "(", "'Building aspect model ...'", ")", "\n", "aspect_model", "=", "AspectModel", "(", "vocabs", ",", "embed_size", ",", "node_size", ",", "hidden_size", ",", "capsule_size", ",", "\n", "gcn_layers", ",", "gcn_filters", ",", "rnn_layers", ",", "capsule_num", ")", ".", "to", "(", "device", ")", "\n", "\n", "print", "(", "'Building optimizers ...'", ")", "\n", "aspect_optimizer", "=", "optim", ".", "Adam", "(", "aspect_model", ".", "parameters", "(", ")", ",", "lr", "=", "learning_rate", ",", "weight_decay", "=", "weight_decay", ")", "\n", "\n", "print", "(", "'Initializing hyper-parameter...\\n'", ")", "\n", "global_step", "=", "1", "\n", "last_epoch", "=", "1", "\n", "perplexities", "=", "[", "]", "\n", "losses", "=", "[", "]", "\n", "best_val_loss", "=", "None", "\n", "\n", "log_path", "=", "os", ".", "path", ".", "join", "(", "'ckpt/'", "+", "corpus_name", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "log_path", ")", ":", "\n", "        ", "os", ".", "makedirs", "(", "log_path", ")", "\n", "", "writer", "=", "SummaryWriter", "(", "log_path", ")", "\n", "\n", "if", "load_file", ":", "\n", "        ", "checkpoint", "=", "torch", ".", "load", "(", "load_file", ")", "\n", "aspect_model", ".", "load_state_dict", "(", "checkpoint", "[", "'aspect_model'", "]", ")", "\n", "global_step", "=", "checkpoint", "[", "'global_step'", "]", "\n", "last_epoch", "=", "checkpoint", "[", "'epoch'", "]", "+", "1", "\n", "perplexities", "=", "checkpoint", "[", "'perplexity'", "]", "\n", "losses", "=", "checkpoint", "[", "'loss'", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "losses", ")", ")", ":", "\n", "            ", "writer", ".", "add_scalar", "(", "\"Train/loss\"", ",", "losses", "[", "i", "]", ",", "i", ")", "\n", "writer", ".", "add_scalar", "(", "\"Train/perplexity\"", ",", "perplexities", "[", "i", "]", ",", "i", ")", "\n", "\n", "", "", "for", "epoch", "in", "tqdm", "(", "range", "(", "last_epoch", ",", "epochs", "+", "1", ")", ",", "desc", "=", "\"Epoch: \"", ",", "leave", "=", "True", ")", ":", "\n", "\n", "# train epoch", "\n", "        ", "aspect_model", ".", "train", "(", ")", "\n", "\n", "tr_loss", "=", "0", "\n", "steps", "=", "trange", "(", "len", "(", "training_batches", ")", ",", "desc", "=", "\"Train Loss\"", ")", "\n", "for", "step", "in", "steps", ":", "\n", "            ", "context_input", ",", "node_input", ",", "edge_input", ",", "type_input", ",", "aspect_input", ",", "aspect_output", "=", "training_batches", "[", "step", "]", "\n", "\n", "loss", "=", "train", "(", "context_input", ",", "node_input", ",", "edge_input", ",", "type_input", ",", "aspect_input", ",", "aspect_output", ",", "\n", "aspect_model", ",", "aspect_optimizer", ")", "\n", "\n", "tr_loss", "+=", "loss", "\n", "global_step", "+=", "1", "\n", "\n", "losses", ".", "append", "(", "loss", ")", "\n", "perplexities", ".", "append", "(", "math", ".", "exp", "(", "loss", ")", ")", "\n", "\n", "writer", ".", "add_scalar", "(", "\"Train/loss\"", ",", "loss", ",", "global_step", ")", "\n", "writer", ".", "add_scalar", "(", "\"Train/perplexity\"", ",", "math", ".", "exp", "(", "loss", ")", ",", "global_step", ")", "\n", "\n", "steps", ".", "set_description", "(", "\"AspectModel (Loss=%g, PPL=%g)\"", "%", "(", "round", "(", "loss", ",", "4", ")", ",", "round", "(", "math", ".", "exp", "(", "loss", ")", ",", "4", ")", ")", ")", "\n", "\n", "", "cur_loss", "=", "tr_loss", "/", "len", "(", "training_batches", ")", "\n", "cur_ppl", "=", "math", ".", "exp", "(", "cur_loss", ")", "\n", "\n", "print", "(", "'\\nTrain | Epoch: {:3d} | Avg Loss={:4.4f} | Avg PPL={:4.4f}\\n'", ".", "format", "(", "epoch", ",", "cur_loss", ",", "cur_ppl", ")", ")", "\n", "\n", "# evaluate", "\n", "aspect_model", ".", "eval", "(", ")", "\n", "with", "torch", ".", "no_grad", "(", ")", ":", "\n", "            ", "vl_loss", "=", "0", "\n", "for", "val_batch", "in", "val_batches", ":", "\n", "                ", "context_input", ",", "node_input", ",", "edge_input", ",", "type_input", ",", "aspect_input", ",", "aspect_output", "=", "val_batch", "\n", "\n", "loss", "=", "evaluate", "(", "context_input", ",", "node_input", ",", "edge_input", ",", "type_input", ",", "aspect_input", ",", "aspect_output", ",", "\n", "aspect_model", ")", "\n", "\n", "vl_loss", "+=", "loss", "\n", "", "vl_loss", "/=", "len", "(", "val_batches", ")", "\n", "vl_ppl", "=", "math", ".", "exp", "(", "vl_loss", ")", "\n", "\n", "", "writer", ".", "add_scalar", "(", "\"Valid/loss\"", ",", "vl_loss", ",", "global_step", ")", "\n", "writer", ".", "add_scalar", "(", "\"Valid/perplexity\"", ",", "vl_ppl", ",", "global_step", ")", "\n", "\n", "print", "(", "'Valid | Epoch: {:3d} | Avg Loss={:4.4f} | Avg PPL={:4.4f}\\n'", ".", "format", "(", "epoch", ",", "vl_loss", ",", "vl_ppl", ")", ")", "\n", "\n", "# Save the model if the validation loss is the best we've seen so far.", "\n", "model_path", "=", "os", ".", "path", ".", "join", "(", "save_dir", ",", "\"model\"", ")", "\n", "if", "not", "best_val_loss", "or", "vl_loss", "<", "best_val_loss", ":", "\n", "            ", "directory", "=", "os", ".", "path", ".", "join", "(", "model_path", ",", "'{}_{}_{}'", ".", "format", "(", "batch_size", ",", "hidden_size", ",", "rnn_layers", ")", ")", "\n", "if", "not", "os", ".", "path", ".", "exists", "(", "directory", ")", ":", "\n", "                ", "os", ".", "makedirs", "(", "directory", ")", "\n", "", "torch", ".", "save", "(", "{", "\n", "'global_step'", ":", "global_step", ",", "\n", "'epoch'", ":", "epoch", ",", "\n", "'aspect_model'", ":", "aspect_model", ".", "state_dict", "(", ")", ",", "\n", "'loss'", ":", "losses", ",", "\n", "'perplexity'", ":", "perplexities", "\n", "}", ",", "os", ".", "path", ".", "join", "(", "directory", ",", "'{}_{}_{}.tar'", ".", "format", "(", "epoch", ",", "round", "(", "vl_loss", ",", "4", ")", ",", "'aspect_model'", ")", ")", ")", "\n", "best_val_loss", "=", "vl_loss", "\n"]]}