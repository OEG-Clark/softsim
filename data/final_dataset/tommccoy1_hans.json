{"home.repos.pwc.inspect_result.tommccoy1_hans.None.evaluate_heur_output.format_label": [[3, 8], ["None"], "function", ["None"], ["def", "format_label", "(", "label", ")", ":", "\n", "    ", "if", "label", "==", "\"entailment\"", ":", "\n", "        ", "return", "\"entailment\"", "\n", "", "else", ":", "\n", "        ", "return", "\"non-entailment\"", "\n", "\n"]], "home.repos.pwc.inspect_result.tommccoy1_hans.None.corpus_generator.no_the": [[37, 39], ["sentence.replace"], "function", ["None"], ["def", "no_the", "(", "sentence", ")", ":", "\n", "    ", "return", "sentence", ".", "replace", "(", "\"the \"", ",", "\"\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.tommccoy1_hans.None.corpus_generator.repeaters": [[66, 80], ["corpus_generator.no_the", "no_the.split", "len", "len", "words.append", "words.append", "list", "set"], "function", ["home.repos.pwc.inspect_result.tommccoy1_hans.None.corpus_generator.no_the"], ["def", "repeaters", "(", "sentence", ")", ":", "\n", "    ", "condensed", "=", "no_the", "(", "sentence", ")", "\n", "words", "=", "[", "]", "\n", "\n", "for", "word", "in", "condensed", ".", "split", "(", ")", ":", "\n", "        ", "if", "word", "in", "lemma", ":", "\n", "            ", "words", ".", "append", "(", "lemma", "[", "word", "]", ")", "\n", "", "else", ":", "\n", "            ", "words", ".", "append", "(", "word", ")", "\n", "\n", "", "", "if", "len", "(", "list", "(", "set", "(", "words", ")", ")", ")", "==", "len", "(", "words", ")", ":", "\n", "        ", "return", "False", "\n", "", "else", ":", "\n", "        ", "return", "True", "\n", "\n"]], "home.repos.pwc.inspect_result.tommccoy1_hans.heuristic_finder_scripts.const_finder.parse_phrase_list": [[9, 43], ["parse.split", "enumerate", "const_finder.parse_phrase_list", "phrase_list.append", "len", "next_level_parse.append", "this_phrase.append"], "function", ["home.repos.pwc.inspect_result.tommccoy1_hans.heuristic_finder_scripts.const_finder.parse_phrase_list"], ["def", "parse_phrase_list", "(", "parse", ",", "phrases", ")", ":", "\n", "\n", "#print(parse)", "\n", "    ", "if", "parse", "==", "\"\"", ":", "\n", "        ", "return", "phrases", "\n", "\n", "", "phrase_list", "=", "phrases", "\n", "\n", "\n", "\n", "words", "=", "parse", ".", "split", "(", ")", "\n", "this_phrase", "=", "[", "]", "\n", "next_level_parse", "=", "[", "]", "\n", "for", "index", ",", "word", "in", "enumerate", "(", "words", ")", ":", "\n", "        ", "if", "word", "==", "\"(\"", ":", "\n", "            ", "next_level_parse", "+=", "this_phrase", "\n", "this_phrase", "=", "[", "\"(\"", "]", "\n", "\n", "", "elif", "word", "==", "\")\"", "and", "len", "(", "this_phrase", ")", ">", "0", "and", "this_phrase", "[", "0", "]", "==", "\"(\"", ":", "\n", "            ", "phrase_list", ".", "append", "(", "\" \"", ".", "join", "(", "this_phrase", "[", "1", ":", "]", ")", ")", "\n", "next_level_parse", "+=", "this_phrase", "[", "1", ":", "]", "\n", "this_phrase", "=", "[", "]", "\n", "", "elif", "word", "==", "\")\"", ":", "\n", "            ", "next_level_parse", "+=", "this_phrase", "\n", "next_level_parse", ".", "append", "(", "\")\"", ")", "\n", "this_phrase", "=", "[", "]", "\n", "", "else", ":", "\n", "            ", "this_phrase", ".", "append", "(", "word", ")", "\n", "#next_level_parse.append(word)", "\n", "\n", "#next_level_parse += this_phrase", "\n", "#print(phrase_list, \" \".join(next_level_parse))", "\n", "\n", "", "", "return", "parse_phrase_list", "(", "\" \"", ".", "join", "(", "next_level_parse", ")", ",", "phrase_list", ")", "\n", "\n"]]}