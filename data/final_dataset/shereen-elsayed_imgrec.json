{"home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV2.graphrec_amazon_fashion_ResNetFeatures_V2.Read_Data": [[35, 41], ["pandas.read_csv", "pandas.read_csv", "pandas.read_csv"], "function", ["None"], ["def", "Read_Data", "(", "path1", ",", "path3", ",", "path4", ")", ":", "\n", "#Reviews=pd.DataFrame()", "\n", "  ", "Reviews", "=", "pd", ".", "read_csv", "(", "path1", ",", "sep", "=", "','", ")", "\n", "Test", "=", "pd", ".", "read_csv", "(", "path3", ",", "sep", "=", "','", ")", "\n", "val", "=", "pd", ".", "read_csv", "(", "path4", ",", "sep", "=", "','", ")", "\n", "return", "Reviews", ",", "Test", ",", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV2.graphrec_amazon_fashion_ResNetFeatures_V2.Read_Meta": [[42, 46], ["open", "pickle.load"], "function", ["None"], ["", "def", "Read_Meta", "(", "path2", ")", ":", "\n", "  ", "with", "open", "(", "path2", ",", "'rb'", ")", "as", "handle", ":", "\n", "    ", "meta_Data", "=", "pickle", ".", "load", "(", "handle", ")", "\n", "", "return", "meta_Data", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV2.graphrec_amazon_fashion_ResNetFeatures_V2.Sampling_training_instances": [[48, 75], ["range", "random.randint", "users.append", "random.randint", "items.append", "labels.append", "range", "random.randint", "users.append", "items.append", "labels.append", "len", "random.randint"], "function", ["None"], ["", "def", "Sampling_training_instances", "(", "Data", ",", "Num_of_Negatives", ",", "batch_size", ")", ":", "\n", "  ", "users", "=", "[", "]", "\n", "items", "=", "[", "]", "\n", "labels", "=", "[", "]", "\n", "#num_users=Data['userId'].nunique()", "\n", "#print('num_users: ',num_users)", "\n", "#num_items=Data['movieId'].nunique()", "\n", "#print('num_items: ',num_items)", "\n", "for", "m", "in", "range", "(", "0", ",", "batch_size", ")", ":", "\n", "############## Add positive sample ################", "\n", "    ", "i", "=", "randint", "(", "0", ",", "num_users", "-", "1", ")", "# generate new user randomly", "\n", "select", "=", "Data", ".", "loc", "[", "Data", "[", "'reviewerID'", "]", "==", "i", "]", "\n", "users", ".", "append", "(", "i", ")", "\n", "pos", "=", "randint", "(", "0", ",", "len", "(", "select", ")", "-", "1", ")", "\n", "items", ".", "append", "(", "select", ".", "iloc", "[", "pos", ",", "1", "]", ")", "\n", "labels", ".", "append", "(", "1", ")", "\n", "################### Add negative samples ##########", "\n", "for", "j", "in", "range", "(", "0", ",", "Num_of_Negatives", ")", ":", "\n", "########## generate negative sample item ID #####  ", "\n", "      ", "Neg", "=", "randint", "(", "0", ",", "num_items", "-", "1", ")", "\n", "while", "Neg", "in", "select", "[", "'productId'", "]", ":", "\n", "        ", "Neg", "=", "randint", "(", "0", ",", "num_items", "-", "1", ")", "\n", "", "users", ".", "append", "(", "i", ")", "\n", "items", ".", "append", "(", "Neg", ")", "\n", "labels", ".", "append", "(", "0", ")", "\n", "#print('user: ',i,' item positive: ',select.iloc[pos,1],' item negative: ',Neg)", "\n", "", "", "return", "users", ",", "items", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV2.graphrec_amazon_fashion_ResNetFeatures_V2.cut_item_list": [[77, 87], ["items_chunks.append", "len", "items_chunks.append", "len"], "function", ["None"], ["", "def", "cut_item_list", "(", "items", ",", "size_chunk", ")", ":", "\n", "  ", "start", "=", "0", "\n", "next", "=", "0", "\n", "items_chunks", "=", "[", "]", "\n", "while", "(", "next", "+", "size_chunk", ")", "<", "len", "(", "items", ")", ":", "\n", "    ", "next", "=", "next", "+", "size_chunk", "\n", "items_chunks", ".", "append", "(", "items", "[", "start", ":", "next", "]", ")", "\n", "start", "=", "start", "+", "size_chunk", "\n", "", "items_chunks", ".", "append", "(", "items", "[", "next", ":", "len", "(", "items", ")", "]", ")", "# appending the remaining amount", "\n", "return", "items_chunks", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV2.graphrec_amazon_fashion_ResNetFeatures_V2.Get_Image_Features": [[90, 99], ["Images.append"], "function", ["None"], ["def", "Get_Image_Features", "(", "items_Train", ")", ":", "\n", "  ", "Images", "=", "[", "]", "\n", "for", "i", "in", "items_Train", ":", "\n", "#print('i ....   ',i,'  ',New_Meta[i]) ", "\n", "    ", "element", "=", "New_Meta", "[", "i", "]", "\n", "#print('  f  ',len(element))", "\n", "Features", "=", "element", "[", "3", "]", "[", "0", "]", "\n", "Images", ".", "append", "(", "Features", ")", "\n", "", "return", "Images", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV2.graphrec_amazon_fashion_ResNetFeatures_V2.Prepare_Testing_Data": [[101, 138], ["print", "range", "len", "users.append", "items.append", "labels.append", "range", "items_All.append", "labels_All.append", "random.randint", "items.append", "labels.append", "random.randint"], "function", ["None"], ["", "def", "Prepare_Testing_Data", "(", "Data", ",", "Num_of_Negatives", "=", "100", ")", ":", "\n", "  ", "users", "=", "[", "]", "\n", "items_All", "=", "[", "]", "\n", "labels_All", "=", "[", "]", "\n", "#num_users=Data['userId'].nunique()", "\n", "print", "(", "'num_users: '", ",", "num_users", ")", "\n", "#num_items=Data['movieId'].nunique()", "\n", "#print('num_items: ',num_items)", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "Data", ")", ")", ":", "\n", "    ", "items", "=", "[", "]", "\n", "labels", "=", "[", "]", "\n", "############## Add positive sample ################", "\n", "test_userID", "=", "Data", ".", "iloc", "[", "i", ",", "0", "]", "\n", "select", "=", "Data", ".", "loc", "[", "Data", "[", "'reviewerID'", "]", "==", "test_userID", "]", "\n", "#print(select.head) ", "\n", "users", ".", "append", "(", "test_userID", ")", "\n", "#pos=randint(0, len(select)-1) ", "\n", "test_itemID", "=", "Data", ".", "iloc", "[", "i", ",", "1", "]", "\n", "items", ".", "append", "(", "test_itemID", ")", "\n", "#index = Data[ (Data['reviewerID']==i) & (Data['productId']==pos_item) ].index", "\n", "#Data.drop(index , inplace=True)", "\n", "#Data.drop(index )", "\n", "#print('item_dropped: ',index)", "\n", "labels", ".", "append", "(", "1", ")", "\n", "################### Add negative samples ##########", "\n", "for", "j", "in", "range", "(", "0", ",", "Num_of_Negatives", ")", ":", "\n", "########## generate negative sample item ID #####  ", "\n", "      ", "Neg", "=", "randint", "(", "0", ",", "num_items", "-", "1", ")", "\n", "while", "Neg", "in", "select", "[", "'productId'", "]", ":", "\n", "        ", "Neg", "=", "randint", "(", "0", ",", "num_items", "-", "1", ")", "\n", "", "items", ".", "append", "(", "Neg", ")", "\n", "labels", ".", "append", "(", "0", ")", "\n", "", "items_All", ".", "append", "(", "items", ")", "\n", "labels_All", ".", "append", "(", "labels", ")", "\n", "#print('shape of items all: ',len(items_All),'  and element ',len(items_All[0]))", "\n", "#print(len(users))", "\n", "", "return", "users", ",", "items_All", ",", "labels_All", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV2.graphrec_amazon_fashion_ResNetFeatures_V2.Hit_Rate": [[241, 253], ["range", "print", "len", "zip", "list_labels_sorted.index", "max", "sorted", "zip"], "function", ["None"], ["def", "Hit_Rate", "(", "users_scores", ",", "labels_Test", ",", "k", ")", ":", "\n", "    ", "hits", "=", "0", "\n", "for", "u", "in", "range", "(", "0", ",", "len", "(", "users_scores", ")", ")", ":", "\n", "        ", "list_scores", "=", "users_scores", "[", "u", "]", "\n", "list_labels", "=", "labels_Test", "[", "u", "]", "\n", "#print(list_scores.index(max(list_scores))) ", "\n", "list_scores_sorted", ",", "list_labels_sorted", "=", "zip", "(", "*", "sorted", "(", "zip", "(", "list_scores", ",", "list_labels", ")", ",", "reverse", "=", "True", ")", ")", "\n", "index_of_positive", "=", "list_labels_sorted", ".", "index", "(", "max", "(", "list_labels_sorted", ")", ")", "\n", "#print('Label :  ',max(list_labels_sorted),'  index : ',index_of_positive)", "\n", "if", "index_of_positive", "<", "k", ":", "\n", "          ", "hits", "=", "hits", "+", "1", "\n", "", "", "print", "(", "'Avg hit rate= '", ",", "(", "hits", "/", "num_users", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV2.graphrec_amazon_fashion_ResNetFeatures_V2.NDCG": [[258, 262], ["sklearn.metrics.ndcg_score", "print"], "function", ["None"], ["", "def", "NDCG", "(", "users_scores", ",", "labels_Test", ")", ":", "\n", "  ", "ndcg", "=", "ndcg_score", "(", "labels_Test", ",", "users_scores", ",", "k", "=", "10", ")", "\n", "print", "(", "'NDCG = '", ",", "ndcg", ")", "\n", "return", "ndcg", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV2.graphrec_amazon_men_ResNetFeatures_V2.Read_Data": [[34, 40], ["pandas.read_csv", "pandas.read_csv", "pandas.read_csv"], "function", ["None"], ["def", "Read_Data", "(", "path1", ",", "path3", ",", "path4", ")", ":", "\n", "#Reviews=pd.DataFrame()", "\n", "  ", "Reviews", "=", "pd", ".", "read_csv", "(", "path1", ",", "sep", "=", "','", ")", "\n", "Test", "=", "pd", ".", "read_csv", "(", "path3", ",", "sep", "=", "','", ")", "\n", "val", "=", "pd", ".", "read_csv", "(", "path4", ",", "sep", "=", "','", ")", "\n", "return", "Reviews", ",", "Test", ",", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV2.graphrec_amazon_men_ResNetFeatures_V2.Read_Meta": [[41, 45], ["open", "pickle.load"], "function", ["None"], ["", "def", "Read_Meta", "(", "path2", ")", ":", "\n", "  ", "with", "open", "(", "path2", ",", "'rb'", ")", "as", "handle", ":", "\n", "    ", "meta_Data", "=", "pickle", ".", "load", "(", "handle", ")", "\n", "", "return", "meta_Data", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV2.graphrec_amazon_men_ResNetFeatures_V2.Sampling_training_instances": [[47, 74], ["range", "random.randint", "users.append", "random.randint", "items.append", "labels.append", "range", "random.randint", "users.append", "items.append", "labels.append", "len", "random.randint"], "function", ["None"], ["", "def", "Sampling_training_instances", "(", "Data", ",", "Num_of_Negatives", ",", "batch_size", ")", ":", "\n", "  ", "users", "=", "[", "]", "\n", "items", "=", "[", "]", "\n", "labels", "=", "[", "]", "\n", "#num_users=Data['userId'].nunique()", "\n", "#print('num_users: ',num_users)", "\n", "#num_items=Data['movieId'].nunique()", "\n", "#print('num_items: ',num_items)", "\n", "for", "m", "in", "range", "(", "0", ",", "batch_size", ")", ":", "\n", "############## Add positive sample ################", "\n", "    ", "i", "=", "randint", "(", "0", ",", "num_users", "-", "1", ")", "# generate new user randomly", "\n", "select", "=", "Data", ".", "loc", "[", "Data", "[", "'reviewerID'", "]", "==", "i", "]", "\n", "users", ".", "append", "(", "i", ")", "\n", "pos", "=", "randint", "(", "0", ",", "len", "(", "select", ")", "-", "1", ")", "\n", "items", ".", "append", "(", "select", ".", "iloc", "[", "pos", ",", "1", "]", ")", "\n", "labels", ".", "append", "(", "1", ")", "\n", "################### Add negative samples ##########", "\n", "for", "j", "in", "range", "(", "0", ",", "Num_of_Negatives", ")", ":", "\n", "########## generate negative sample item ID #####  ", "\n", "      ", "Neg", "=", "randint", "(", "0", ",", "num_items", "-", "1", ")", "\n", "while", "Neg", "in", "select", "[", "'productId'", "]", ":", "\n", "        ", "Neg", "=", "randint", "(", "0", ",", "num_items", "-", "1", ")", "\n", "", "users", ".", "append", "(", "i", ")", "\n", "items", ".", "append", "(", "Neg", ")", "\n", "labels", ".", "append", "(", "0", ")", "\n", "#print('user: ',i,' item positive: ',select.iloc[pos,1],' item negative: ',Neg)", "\n", "", "", "return", "users", ",", "items", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV2.graphrec_amazon_men_ResNetFeatures_V2.cut_item_list": [[76, 86], ["items_chunks.append", "len", "items_chunks.append", "len"], "function", ["None"], ["", "def", "cut_item_list", "(", "items", ",", "size_chunk", ")", ":", "\n", "  ", "start", "=", "0", "\n", "next", "=", "0", "\n", "items_chunks", "=", "[", "]", "\n", "while", "(", "next", "+", "size_chunk", ")", "<", "len", "(", "items", ")", ":", "\n", "    ", "next", "=", "next", "+", "size_chunk", "\n", "items_chunks", ".", "append", "(", "items", "[", "start", ":", "next", "]", ")", "\n", "start", "=", "start", "+", "size_chunk", "\n", "", "items_chunks", ".", "append", "(", "items", "[", "next", ":", "len", "(", "items", ")", "]", ")", "# appending the remaining amount", "\n", "return", "items_chunks", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV2.graphrec_amazon_men_ResNetFeatures_V2.Get_Image_Features": [[89, 98], ["Images.append"], "function", ["None"], ["def", "Get_Image_Features", "(", "items_Train", ")", ":", "\n", "  ", "Images", "=", "[", "]", "\n", "for", "i", "in", "items_Train", ":", "\n", "#print('i ....   ',i,'  ',New_Meta[i]) ", "\n", "    ", "element", "=", "New_Meta", "[", "i", "]", "\n", "#print('  f  ',len(element))", "\n", "Features", "=", "element", "[", "3", "]", "[", "0", "]", "\n", "Images", ".", "append", "(", "Features", ")", "\n", "", "return", "Images", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV2.graphrec_amazon_men_ResNetFeatures_V2.Prepare_Testing_Data": [[100, 137], ["print", "range", "len", "users.append", "items.append", "labels.append", "range", "items_All.append", "labels_All.append", "random.randint", "items.append", "labels.append", "random.randint"], "function", ["None"], ["", "def", "Prepare_Testing_Data", "(", "Data", ",", "Num_of_Negatives", "=", "100", ")", ":", "\n", "  ", "users", "=", "[", "]", "\n", "items_All", "=", "[", "]", "\n", "labels_All", "=", "[", "]", "\n", "#num_users=Data['userId'].nunique()", "\n", "print", "(", "'num_users: '", ",", "num_users", ")", "\n", "#num_items=Data['movieId'].nunique()", "\n", "#print('num_items: ',num_items)", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "Data", ")", ")", ":", "\n", "    ", "items", "=", "[", "]", "\n", "labels", "=", "[", "]", "\n", "############## Add positive sample ################", "\n", "test_userID", "=", "Data", ".", "iloc", "[", "i", ",", "0", "]", "\n", "select", "=", "Data", ".", "loc", "[", "Data", "[", "'reviewerID'", "]", "==", "test_userID", "]", "\n", "#print(select.head) ", "\n", "users", ".", "append", "(", "test_userID", ")", "\n", "#pos=randint(0, len(select)-1) ", "\n", "test_itemID", "=", "Data", ".", "iloc", "[", "i", ",", "1", "]", "\n", "items", ".", "append", "(", "test_itemID", ")", "\n", "#index = Data[ (Data['reviewerID']==i) & (Data['productId']==pos_item) ].index", "\n", "#Data.drop(index , inplace=True)", "\n", "#Data.drop(index )", "\n", "#print('item_dropped: ',index)", "\n", "labels", ".", "append", "(", "1", ")", "\n", "################### Add negative samples ##########", "\n", "for", "j", "in", "range", "(", "0", ",", "Num_of_Negatives", ")", ":", "\n", "########## generate negative sample item ID #####  ", "\n", "      ", "Neg", "=", "randint", "(", "0", ",", "num_items", "-", "1", ")", "\n", "while", "Neg", "in", "select", "[", "'productId'", "]", ":", "\n", "        ", "Neg", "=", "randint", "(", "0", ",", "num_items", "-", "1", ")", "\n", "", "items", ".", "append", "(", "Neg", ")", "\n", "labels", ".", "append", "(", "0", ")", "\n", "", "items_All", ".", "append", "(", "items", ")", "\n", "labels_All", ".", "append", "(", "labels", ")", "\n", "#print('shape of items all: ',len(items_All),'  and element ',len(items_All[0]))", "\n", "#print(len(users))", "\n", "", "return", "users", ",", "items_All", ",", "labels_All", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV2.graphrec_amazon_men_ResNetFeatures_V2.Hit_Rate": [[240, 252], ["range", "print", "len", "zip", "list_labels_sorted.index", "max", "sorted", "zip"], "function", ["None"], ["def", "Hit_Rate", "(", "users_scores", ",", "labels_Test", ",", "k", ")", ":", "\n", "    ", "hits", "=", "0", "\n", "for", "u", "in", "range", "(", "0", ",", "len", "(", "users_scores", ")", ")", ":", "\n", "        ", "list_scores", "=", "users_scores", "[", "u", "]", "\n", "list_labels", "=", "labels_Test", "[", "u", "]", "\n", "#print(list_scores.index(max(list_scores))) ", "\n", "list_scores_sorted", ",", "list_labels_sorted", "=", "zip", "(", "*", "sorted", "(", "zip", "(", "list_scores", ",", "list_labels", ")", ",", "reverse", "=", "True", ")", ")", "\n", "index_of_positive", "=", "list_labels_sorted", ".", "index", "(", "max", "(", "list_labels_sorted", ")", ")", "\n", "#print('Label :  ',max(list_labels_sorted),'  index : ',index_of_positive)", "\n", "if", "index_of_positive", "<", "k", ":", "\n", "          ", "hits", "=", "hits", "+", "1", "\n", "", "", "print", "(", "'Avg hit rate= '", ",", "(", "hits", "/", "num_users", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV2.graphrec_amazon_men_ResNetFeatures_V2.NDCG": [[291, 295], ["sklearn.metrics.ndcg_score", "print"], "function", ["None"], ["def", "NDCG", "(", "users_scores", ",", "labels_Test", ")", ":", "\n", "  ", "ndcg", "=", "ndcg_score", "(", "labels_Test", ",", "users_scores", ",", "k", "=", "10", ")", "\n", "print", "(", "'NDCG = '", ",", "ndcg", ")", "\n", "return", "ndcg", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV3.graphrec_fashion_finetuned_V3.Read_Data": [[31, 37], ["pandas.read_csv", "pandas.read_csv", "pandas.read_csv"], "function", ["None"], ["def", "Read_Data", "(", "path1", ",", "path3", ",", "path4", ")", ":", "\n", "#Reviews=pd.DataFrame()", "\n", "  ", "Reviews", "=", "pd", ".", "read_csv", "(", "path1", ",", "sep", "=", "','", ")", "\n", "Test", "=", "pd", ".", "read_csv", "(", "path3", ",", "sep", "=", "','", ")", "\n", "Valid", "=", "pd", ".", "read_csv", "(", "path4", ",", "sep", "=", "','", ")", "\n", "return", "Reviews", ",", "Test", ",", "Valid", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV3.graphrec_fashion_finetuned_V3.Read_Meta": [[38, 42], ["open", "pickle.load"], "function", ["None"], ["", "def", "Read_Meta", "(", "path2", ")", ":", "\n", "  ", "with", "open", "(", "path2", ",", "'rb'", ")", "as", "handle", ":", "\n", "    ", "meta_Data", "=", "pickle", ".", "load", "(", "handle", ")", "\n", "", "return", "meta_Data", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV3.graphrec_fashion_finetuned_V3.Sampling_training_instances": [[44, 67], ["range", "random.randint", "users.append", "random.randint", "items.append", "labels.append", "range", "numpy.asarray", "numpy.asarray", "numpy.asarray", "random.randint", "users.append", "items.append", "labels.append", "len", "random.randint"], "function", ["None"], ["", "def", "Sampling_training_instances", "(", "Data", ",", "Num_of_Negatives", ",", "batch_size", ")", ":", "\n", "  ", "users", "=", "[", "]", "\n", "items", "=", "[", "]", "\n", "labels", "=", "[", "]", "\n", "for", "m", "in", "range", "(", "0", ",", "batch_size", ")", ":", "\n", "############## Add positive sample ################", "\n", "    ", "i", "=", "randint", "(", "0", ",", "num_users", "-", "1", ")", "# generate new user randomly", "\n", "select", "=", "Data", ".", "loc", "[", "Data", "[", "'reviewerID'", "]", "==", "i", "]", "\n", "users", ".", "append", "(", "i", ")", "\n", "pos", "=", "randint", "(", "0", ",", "len", "(", "select", ")", "-", "1", ")", "\n", "items", ".", "append", "(", "select", ".", "iloc", "[", "pos", ",", "1", "]", ")", "\n", "labels", ".", "append", "(", "1.0", ")", "\n", "################### Add negative samples ##########", "\n", "for", "j", "in", "range", "(", "0", ",", "Num_of_Negatives", ")", ":", "\n", "########## generate negative sample item ID #####  ", "\n", "      ", "Neg", "=", "randint", "(", "0", ",", "num_items", "-", "1", ")", "\n", "while", "Neg", "in", "select", "[", "'productId'", "]", ":", "\n", "        ", "Neg", "=", "randint", "(", "0", ",", "num_items", "-", "1", ")", "\n", "", "users", ".", "append", "(", "i", ")", "\n", "items", ".", "append", "(", "Neg", ")", "\n", "labels", ".", "append", "(", "0.0", ")", "\n", "#print('user: ',i,' item positive: ',select.iloc[pos,1],' item negative: ',Neg)", "\n", "", "", "return", "np", ".", "asarray", "(", "users", ")", ",", "np", ".", "asarray", "(", "items", ")", ",", "np", ".", "asarray", "(", "labels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV3.graphrec_fashion_finetuned_V3.cut_item_list": [[69, 79], ["items_chunks.append", "len", "items_chunks.append", "len"], "function", ["None"], ["", "def", "cut_item_list", "(", "items", ",", "size_chunk", ")", ":", "\n", "  ", "start", "=", "0", "\n", "next", "=", "0", "\n", "items_chunks", "=", "[", "]", "\n", "while", "(", "next", "+", "size_chunk", ")", "<", "len", "(", "items", ")", ":", "\n", "    ", "next", "=", "next", "+", "size_chunk", "\n", "items_chunks", ".", "append", "(", "items", "[", "start", ":", "next", "]", ")", "\n", "start", "=", "start", "+", "size_chunk", "\n", "", "items_chunks", ".", "append", "(", "items", "[", "next", ":", "len", "(", "items", ")", "]", ")", "# appending the remaining amount", "\n", "return", "items_chunks", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV3.graphrec_fashion_finetuned_V3.Get_Image_Features": [[82, 91], ["numpy.asarray", "Images.append"], "function", ["None"], ["def", "Get_Image_Features", "(", "items_Train", ")", ":", "# ready Features ", "\n", "  ", "Images", "=", "[", "]", "\n", "for", "i", "in", "items_Train", ":", "\n", "#print('i ....   ',i,'  ',New_Meta[i]) ", "\n", "    ", "element", "=", "New_Meta", "[", "i", "]", "\n", "#print('  f  ',len(element))", "\n", "Features", "=", "element", "[", "3", "]", "[", "0", "]", "\n", "Images", ".", "append", "(", "Features", ")", "\n", "", "return", "np", ".", "asarray", "(", "Images", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV3.graphrec_fashion_finetuned_V3.Get_Items_Images": [[93, 123], ["range", "numpy.asarray", "len", "numpy.where", "Image.new.resize", "tensorflow.keras.applications.resnet50.preprocess_input", "numpy.asarray", "numpy.reshape", "Images.append", "PIL.Image.open", "numpy.expand_dims", "Image.new.convert", "numpy.expand_dims", "PIL.Image.new"], "function", ["None"], ["", "def", "Get_Items_Images", "(", "items_Train", ")", ":", "# read raw images", "\n", "  ", "path", "=", "'/ImageRec/Datasets/Fashion/Fashion_Raw_Images/'", "\n", "Images", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "items_Train", ")", ")", ":", "\n", "    ", "img_ind", "=", "np", ".", "where", "(", "New_Keys", "==", "items_Train", "[", "i", "]", ")", "\n", "#print(img_ind[0])", "\n", "string_name", "=", "String_item_names", "[", "img_ind", "[", "0", "]", "[", "0", "]", "]", "\n", "try", ":", "\n", "      ", "img", "=", "Image", ".", "open", "(", "path", "+", "string_name", "+", "'.jpg'", ")", "\n", "", "except", "IOError", ":", "\n", "      ", "img", "=", "Image", ".", "new", "(", "'RGB'", ",", "(", "244", ",", "244", ")", ",", "(", "255", ",", "255", ",", "255", ")", ")", "\n", "", "newsize", "=", "(", "244", ",", "244", ")", "\n", "img", "=", "img", ".", "resize", "(", "newsize", ")", "\n", "if", "(", "img", ".", "mode", ")", "==", "'RGB'", ":", "\n", "      ", "img", "=", "np", ".", "expand_dims", "(", "img", ",", "axis", "=", "0", ")", "\n", "", "else", ":", "\n", "      ", "img", "=", "img", ".", "convert", "(", "'RGB'", ")", "\n", "img", "=", "np", ".", "expand_dims", "(", "img", ",", "axis", "=", "0", ")", "\n", "", "image", "=", "preprocess_input", "(", "img", ")", "\n", "image", "=", "np", ".", "asarray", "(", "image", ")", "\n", "image", "=", "np", ".", "reshape", "(", "image", ",", "(", "244", ",", "244", ",", "3", ")", ")", "\n", "Images", ".", "append", "(", "image", ")", "\n", "'''\n    img=Image.new('RGB', (160,160), (255, 255, 255))\n    img = np.expand_dims(img, axis=0)\n    image=preprocess_input(img)\n    image=np.asarray(image)\n    image=np.reshape(image,(160,160,3))\n    '''", "\n", "", "return", "np", ".", "asarray", "(", "Images", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV3.graphrec_fashion_finetuned_V3.Prepare_Testing_Data": [[125, 157], ["print", "range", "len", "users.append", "items.append", "labels.append", "range", "items_All.append", "labels_All.append", "random.randint", "items.append", "labels.append", "random.randint"], "function", ["None"], ["", "def", "Prepare_Testing_Data", "(", "Data", ",", "Num_of_Negatives", "=", "100", ")", ":", "\n", "  ", "users", "=", "[", "]", "\n", "items_All", "=", "[", "]", "\n", "labels_All", "=", "[", "]", "\n", "#num_users=Data['userId'].nunique()", "\n", "print", "(", "'num_users: '", ",", "num_users", ")", "\n", "#num_items=Data['movieId'].nunique()", "\n", "#print('num_items: ',num_items)", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "Data", ")", ")", ":", "\n", "    ", "items", "=", "[", "]", "\n", "labels", "=", "[", "]", "\n", "############## Add positive sample ################", "\n", "test_userID", "=", "Data", ".", "iloc", "[", "i", ",", "0", "]", "\n", "select", "=", "Data", ".", "loc", "[", "Data", "[", "'reviewerID'", "]", "==", "test_userID", "]", "\n", "#print(select.head) ", "\n", "users", ".", "append", "(", "test_userID", ")", "\n", "test_itemID", "=", "Data", ".", "iloc", "[", "i", ",", "1", "]", "\n", "items", ".", "append", "(", "test_itemID", ")", "\n", "labels", ".", "append", "(", "1", ")", "\n", "################### Add negative samples ##########", "\n", "for", "j", "in", "range", "(", "0", ",", "Num_of_Negatives", ")", ":", "\n", "########## generate negative sample item ID #####  ", "\n", "      ", "Neg", "=", "randint", "(", "0", ",", "num_items", "-", "1", ")", "\n", "while", "Neg", "in", "select", "[", "'productId'", "]", ":", "\n", "        ", "Neg", "=", "randint", "(", "0", ",", "num_items", "-", "1", ")", "\n", "", "items", ".", "append", "(", "Neg", ")", "\n", "labels", ".", "append", "(", "0", ")", "\n", "", "items_All", ".", "append", "(", "items", ")", "\n", "labels_All", ".", "append", "(", "labels", ")", "\n", "#print('shape of items all: ',len(items_All),'  and element ',len(items_All[0]))", "\n", "#print(len(users))", "\n", "", "return", "users", ",", "items_All", ",", "labels_All", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV3.graphrec_fashion_finetuned_V3.Hit_Rate": [[270, 282], ["range", "print", "len", "zip", "list_labels_sorted.index", "max", "sorted", "zip"], "function", ["None"], ["def", "Hit_Rate", "(", "users_scores", ",", "labels_Test", ",", "k", ")", ":", "\n", "    ", "hits", "=", "0", "\n", "for", "u", "in", "range", "(", "0", ",", "len", "(", "users_scores", ")", ")", ":", "\n", "        ", "list_scores", "=", "users_scores", "[", "u", "]", "\n", "list_labels", "=", "labels_Test", "[", "u", "]", "\n", "#print(list_scores.index(max(list_scores))) ", "\n", "list_scores_sorted", ",", "list_labels_sorted", "=", "zip", "(", "*", "sorted", "(", "zip", "(", "list_scores", ",", "list_labels", ")", ",", "reverse", "=", "True", ")", ")", "\n", "index_of_positive", "=", "list_labels_sorted", ".", "index", "(", "max", "(", "list_labels_sorted", ")", ")", "\n", "#print('Label :  ',max(list_labels_sorted),'  index : ',index_of_positive)", "\n", "if", "index_of_positive", "<", "k", ":", "\n", "          ", "hits", "=", "hits", "+", "1", "\n", "", "", "print", "(", "'Avg hit rate= '", ",", "(", "hits", "/", "num_users", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV3.graphrec_fashion_finetuned_V3.NDCG": [[284, 288], ["sklearn.metrics.ndcg_score", "print"], "function", ["None"], ["", "def", "NDCG", "(", "users_scores", ",", "labels_Test", ")", ":", "\n", "  ", "ndcg", "=", "ndcg_score", "(", "labels_Test", ",", "users_scores", ",", "k", "=", "10", ")", "\n", "print", "(", "'NDCG = '", ",", "ndcg", ")", "\n", "return", "ndcg", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV3.graphrec_fashion_finetuned_V3.CustomLoss": [[289, 293], ["tensorflow.nn.sigmoid_cross_entropy_with_logits"], "function", ["None"], ["", "def", "CustomLoss", "(", ")", ":", "\n", "    ", "def", "loss", "(", "y_true", ",", "y_pred", ")", ":", "\n", "        ", "return", "tf", ".", "nn", ".", "sigmoid_cross_entropy_with_logits", "(", "labels", "=", "y_true", ",", "logits", "=", "y_pred", ")", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV3.graphrec_men_finetuned_V3.Read_Data": [[31, 37], ["pandas.read_csv", "pandas.read_csv", "pandas.read_csv"], "function", ["None"], ["def", "Read_Data", "(", "path1", ",", "path3", ",", "path4", ")", ":", "\n", "#Reviews=pd.DataFrame()", "\n", "  ", "Reviews", "=", "pd", ".", "read_csv", "(", "path1", ",", "sep", "=", "','", ")", "\n", "Test", "=", "pd", ".", "read_csv", "(", "path3", ",", "sep", "=", "','", ")", "\n", "Valid", "=", "pd", ".", "read_csv", "(", "path4", ",", "sep", "=", "','", ")", "\n", "return", "Reviews", ",", "Test", ",", "Valid", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV3.graphrec_men_finetuned_V3.Read_Meta": [[38, 42], ["open", "pickle.load"], "function", ["None"], ["", "def", "Read_Meta", "(", "path2", ")", ":", "\n", "  ", "with", "open", "(", "path2", ",", "'rb'", ")", "as", "handle", ":", "\n", "    ", "meta_Data", "=", "pickle", ".", "load", "(", "handle", ")", "\n", "", "return", "meta_Data", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV3.graphrec_men_finetuned_V3.Sampling_training_instances": [[44, 67], ["range", "random.randint", "users.append", "random.randint", "items.append", "labels.append", "range", "numpy.asarray", "numpy.asarray", "numpy.asarray", "random.randint", "users.append", "items.append", "labels.append", "len", "random.randint"], "function", ["None"], ["", "def", "Sampling_training_instances", "(", "Data", ",", "Num_of_Negatives", ",", "batch_size", ")", ":", "\n", "  ", "users", "=", "[", "]", "\n", "items", "=", "[", "]", "\n", "labels", "=", "[", "]", "\n", "for", "m", "in", "range", "(", "0", ",", "batch_size", ")", ":", "\n", "############## Add positive sample ################", "\n", "    ", "i", "=", "randint", "(", "0", ",", "num_users", "-", "1", ")", "# generate new user randomly", "\n", "select", "=", "Data", ".", "loc", "[", "Data", "[", "'reviewerID'", "]", "==", "i", "]", "\n", "users", ".", "append", "(", "i", ")", "\n", "pos", "=", "randint", "(", "0", ",", "len", "(", "select", ")", "-", "1", ")", "\n", "items", ".", "append", "(", "select", ".", "iloc", "[", "pos", ",", "1", "]", ")", "\n", "labels", ".", "append", "(", "1.0", ")", "\n", "################### Add negative samples ##########", "\n", "for", "j", "in", "range", "(", "0", ",", "Num_of_Negatives", ")", ":", "\n", "########## generate negative sample item ID #####  ", "\n", "      ", "Neg", "=", "randint", "(", "0", ",", "num_items", "-", "1", ")", "\n", "while", "Neg", "in", "select", "[", "'productId'", "]", ":", "\n", "        ", "Neg", "=", "randint", "(", "0", ",", "num_items", "-", "1", ")", "\n", "", "users", ".", "append", "(", "i", ")", "\n", "items", ".", "append", "(", "Neg", ")", "\n", "labels", ".", "append", "(", "0.0", ")", "\n", "#print('user: ',i,' item positive: ',select.iloc[pos,1],' item negative: ',Neg)", "\n", "", "", "return", "np", ".", "asarray", "(", "users", ")", ",", "np", ".", "asarray", "(", "items", ")", ",", "np", ".", "asarray", "(", "labels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV3.graphrec_men_finetuned_V3.cut_item_list": [[69, 79], ["items_chunks.append", "len", "items_chunks.append", "len"], "function", ["None"], ["", "def", "cut_item_list", "(", "items", ",", "size_chunk", ")", ":", "\n", "  ", "start", "=", "0", "\n", "next", "=", "0", "\n", "items_chunks", "=", "[", "]", "\n", "while", "(", "next", "+", "size_chunk", ")", "<", "len", "(", "items", ")", ":", "\n", "    ", "next", "=", "next", "+", "size_chunk", "\n", "items_chunks", ".", "append", "(", "items", "[", "start", ":", "next", "]", ")", "\n", "start", "=", "start", "+", "size_chunk", "\n", "", "items_chunks", ".", "append", "(", "items", "[", "next", ":", "len", "(", "items", ")", "]", ")", "# appending the remaining amount", "\n", "return", "items_chunks", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV3.graphrec_men_finetuned_V3.Get_Image_Features": [[82, 91], ["numpy.asarray", "Images.append"], "function", ["None"], ["def", "Get_Image_Features", "(", "items_Train", ")", ":", "# ready Features ", "\n", "  ", "Images", "=", "[", "]", "\n", "for", "i", "in", "items_Train", ":", "\n", "#print('i ....   ',i,'  ',New_Meta[i]) ", "\n", "    ", "element", "=", "New_Meta", "[", "i", "]", "\n", "#print('  f  ',len(element))", "\n", "Features", "=", "element", "[", "3", "]", "[", "0", "]", "\n", "Images", ".", "append", "(", "Features", ")", "\n", "", "return", "np", ".", "asarray", "(", "Images", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV3.graphrec_men_finetuned_V3.Get_Items_Images": [[93, 123], ["range", "numpy.asarray", "len", "numpy.where", "Image.new.resize", "tensorflow.keras.applications.resnet50.preprocess_input", "numpy.asarray", "numpy.reshape", "Images.append", "PIL.Image.open", "numpy.expand_dims", "Image.new.convert", "numpy.expand_dims", "PIL.Image.new"], "function", ["None"], ["", "def", "Get_Items_Images", "(", "items_Train", ")", ":", "# read raw images", "\n", "  ", "path", "=", "'/ImageRec/Datasets/Men/Men_Raw_Images/'", "\n", "Images", "=", "[", "]", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "items_Train", ")", ")", ":", "\n", "    ", "img_ind", "=", "np", ".", "where", "(", "New_Keys", "==", "items_Train", "[", "i", "]", ")", "\n", "#print(img_ind[0])", "\n", "string_name", "=", "String_item_names", "[", "img_ind", "[", "0", "]", "[", "0", "]", "]", "\n", "try", ":", "\n", "      ", "img", "=", "Image", ".", "open", "(", "path", "+", "string_name", "+", "'.jpg'", ")", "\n", "", "except", "IOError", ":", "\n", "      ", "img", "=", "Image", ".", "new", "(", "'RGB'", ",", "(", "244", ",", "244", ")", ",", "(", "255", ",", "255", ",", "255", ")", ")", "\n", "", "newsize", "=", "(", "244", ",", "244", ")", "\n", "img", "=", "img", ".", "resize", "(", "newsize", ")", "\n", "if", "(", "img", ".", "mode", ")", "==", "'RGB'", ":", "\n", "      ", "img", "=", "np", ".", "expand_dims", "(", "img", ",", "axis", "=", "0", ")", "\n", "", "else", ":", "\n", "      ", "img", "=", "img", ".", "convert", "(", "'RGB'", ")", "\n", "img", "=", "np", ".", "expand_dims", "(", "img", ",", "axis", "=", "0", ")", "\n", "", "image", "=", "preprocess_input", "(", "img", ")", "\n", "image", "=", "np", ".", "asarray", "(", "image", ")", "\n", "image", "=", "np", ".", "reshape", "(", "image", ",", "(", "244", ",", "244", ",", "3", ")", ")", "\n", "Images", ".", "append", "(", "image", ")", "\n", "'''\n    img=Image.new('RGB', (160,160), (255, 255, 255))\n    img = np.expand_dims(img, axis=0)\n    image=preprocess_input(img)\n    image=np.asarray(image)\n    image=np.reshape(image,(160,160,3))\n    '''", "\n", "", "return", "np", ".", "asarray", "(", "Images", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV3.graphrec_men_finetuned_V3.Prepare_Testing_Data": [[125, 157], ["print", "range", "len", "users.append", "items.append", "labels.append", "range", "items_All.append", "labels_All.append", "random.randint", "items.append", "labels.append", "random.randint"], "function", ["None"], ["", "def", "Prepare_Testing_Data", "(", "Data", ",", "Num_of_Negatives", "=", "100", ")", ":", "\n", "  ", "users", "=", "[", "]", "\n", "items_All", "=", "[", "]", "\n", "labels_All", "=", "[", "]", "\n", "#num_users=Data['userId'].nunique()", "\n", "print", "(", "'num_users: '", ",", "num_users", ")", "\n", "#num_items=Data['movieId'].nunique()", "\n", "#print('num_items: ',num_items)", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "Data", ")", ")", ":", "\n", "    ", "items", "=", "[", "]", "\n", "labels", "=", "[", "]", "\n", "############## Add positive sample ################", "\n", "test_userID", "=", "Data", ".", "iloc", "[", "i", ",", "0", "]", "\n", "select", "=", "Data", ".", "loc", "[", "Data", "[", "'reviewerID'", "]", "==", "test_userID", "]", "\n", "#print(select.head) ", "\n", "users", ".", "append", "(", "test_userID", ")", "\n", "test_itemID", "=", "Data", ".", "iloc", "[", "i", ",", "1", "]", "\n", "items", ".", "append", "(", "test_itemID", ")", "\n", "labels", ".", "append", "(", "1", ")", "\n", "################### Add negative samples ##########", "\n", "for", "j", "in", "range", "(", "0", ",", "Num_of_Negatives", ")", ":", "\n", "########## generate negative sample item ID #####  ", "\n", "      ", "Neg", "=", "randint", "(", "0", ",", "num_items", "-", "1", ")", "\n", "while", "Neg", "in", "select", "[", "'productId'", "]", ":", "\n", "        ", "Neg", "=", "randint", "(", "0", ",", "num_items", "-", "1", ")", "\n", "", "items", ".", "append", "(", "Neg", ")", "\n", "labels", ".", "append", "(", "0", ")", "\n", "", "items_All", ".", "append", "(", "items", ")", "\n", "labels_All", ".", "append", "(", "labels", ")", "\n", "#print('shape of items all: ',len(items_All),'  and element ',len(items_All[0]))", "\n", "#print(len(users))", "\n", "", "return", "users", ",", "items_All", ",", "labels_All", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV3.graphrec_men_finetuned_V3.Hit_Rate": [[264, 276], ["range", "print", "len", "zip", "list_labels_sorted.index", "max", "sorted", "zip"], "function", ["None"], ["def", "Hit_Rate", "(", "users_scores", ",", "labels_Test", ",", "k", ")", ":", "\n", "    ", "hits", "=", "0", "\n", "for", "u", "in", "range", "(", "0", ",", "len", "(", "users_scores", ")", ")", ":", "\n", "        ", "list_scores", "=", "users_scores", "[", "u", "]", "\n", "list_labels", "=", "labels_Test", "[", "u", "]", "\n", "#print(list_scores.index(max(list_scores))) ", "\n", "list_scores_sorted", ",", "list_labels_sorted", "=", "zip", "(", "*", "sorted", "(", "zip", "(", "list_scores", ",", "list_labels", ")", ",", "reverse", "=", "True", ")", ")", "\n", "index_of_positive", "=", "list_labels_sorted", ".", "index", "(", "max", "(", "list_labels_sorted", ")", ")", "\n", "#print('Label :  ',max(list_labels_sorted),'  index : ',index_of_positive)", "\n", "if", "index_of_positive", "<", "k", ":", "\n", "          ", "hits", "=", "hits", "+", "1", "\n", "", "", "print", "(", "'Avg hit rate= '", ",", "(", "hits", "/", "num_users", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV3.graphrec_men_finetuned_V3.NDCG": [[278, 282], ["sklearn.metrics.ndcg_score", "print"], "function", ["None"], ["", "def", "NDCG", "(", "users_scores", ",", "labels_Test", ")", ":", "\n", "  ", "ndcg", "=", "ndcg_score", "(", "labels_Test", ",", "users_scores", ",", "k", "=", "10", ")", "\n", "print", "(", "'NDCG = '", ",", "ndcg", ")", "\n", "return", "ndcg", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV3.graphrec_men_finetuned_V3.CustomLoss": [[283, 287], ["tensorflow.nn.sigmoid_cross_entropy_with_logits"], "function", ["None"], ["", "def", "CustomLoss", "(", ")", ":", "\n", "    ", "def", "loss", "(", "y_true", ",", "y_pred", ")", ":", "\n", "        ", "return", "tf", ".", "nn", ".", "sigmoid_cross_entropy_with_logits", "(", "labels", "=", "y_true", ",", "logits", "=", "y_pred", ")", "\n", "", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV1.graphrec_amazon_men_ResNetFeatures_V1.Read_Data": [[35, 41], ["pandas.read_csv", "pandas.read_csv", "pandas.read_csv"], "function", ["None"], ["def", "Read_Data", "(", "path1", ",", "path3", ",", "path4", ")", ":", "\n", "#Reviews=pd.DataFrame()", "\n", "  ", "Reviews", "=", "pd", ".", "read_csv", "(", "path1", ",", "sep", "=", "','", ")", "\n", "Test", "=", "pd", ".", "read_csv", "(", "path3", ",", "sep", "=", "','", ")", "\n", "val", "=", "pd", ".", "read_csv", "(", "path4", ",", "sep", "=", "','", ")", "\n", "return", "Reviews", ",", "Test", ",", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV1.graphrec_amazon_men_ResNetFeatures_V1.Read_Meta": [[42, 46], ["open", "pickle.load"], "function", ["None"], ["", "def", "Read_Meta", "(", "path2", ")", ":", "\n", "  ", "with", "open", "(", "path2", ",", "'rb'", ")", "as", "handle", ":", "\n", "    ", "meta_Data", "=", "pickle", ".", "load", "(", "handle", ")", "\n", "", "return", "meta_Data", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV1.graphrec_amazon_men_ResNetFeatures_V1.Sampling_training_instances": [[48, 75], ["range", "random.randint", "users.append", "random.randint", "items.append", "labels.append", "range", "random.randint", "users.append", "items.append", "labels.append", "len", "random.randint"], "function", ["None"], ["", "def", "Sampling_training_instances", "(", "Data", ",", "Num_of_Negatives", ",", "batch_size", ")", ":", "\n", "  ", "users", "=", "[", "]", "\n", "items", "=", "[", "]", "\n", "labels", "=", "[", "]", "\n", "#num_users=Data['userId'].nunique()", "\n", "#print('num_users: ',num_users)", "\n", "#num_items=Data['movieId'].nunique()", "\n", "#print('num_items: ',num_items)", "\n", "for", "m", "in", "range", "(", "0", ",", "batch_size", ")", ":", "\n", "############## Add positive sample ################", "\n", "    ", "i", "=", "randint", "(", "0", ",", "num_users", "-", "1", ")", "# generate new user randomly", "\n", "select", "=", "Data", ".", "loc", "[", "Data", "[", "'reviewerID'", "]", "==", "i", "]", "\n", "users", ".", "append", "(", "i", ")", "\n", "pos", "=", "randint", "(", "0", ",", "len", "(", "select", ")", "-", "1", ")", "\n", "items", ".", "append", "(", "select", ".", "iloc", "[", "pos", ",", "1", "]", ")", "\n", "labels", ".", "append", "(", "1", ")", "\n", "################### Add negative samples ##########", "\n", "for", "j", "in", "range", "(", "0", ",", "Num_of_Negatives", ")", ":", "\n", "########## generate negative sample item ID #####  ", "\n", "      ", "Neg", "=", "randint", "(", "0", ",", "num_items", "-", "1", ")", "\n", "while", "Neg", "in", "select", "[", "'productId'", "]", ":", "\n", "        ", "Neg", "=", "randint", "(", "0", ",", "num_items", "-", "1", ")", "\n", "", "users", ".", "append", "(", "i", ")", "\n", "items", ".", "append", "(", "Neg", ")", "\n", "labels", ".", "append", "(", "0", ")", "\n", "#print('user: ',i,' item positive: ',select.iloc[pos,1],' item negative: ',Neg)", "\n", "", "", "return", "users", ",", "items", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV1.graphrec_amazon_men_ResNetFeatures_V1.cut_item_list": [[77, 87], ["items_chunks.append", "len", "items_chunks.append", "len"], "function", ["None"], ["", "def", "cut_item_list", "(", "items", ",", "size_chunk", ")", ":", "\n", "  ", "start", "=", "0", "\n", "next", "=", "0", "\n", "items_chunks", "=", "[", "]", "\n", "while", "(", "next", "+", "size_chunk", ")", "<", "len", "(", "items", ")", ":", "\n", "    ", "next", "=", "next", "+", "size_chunk", "\n", "items_chunks", ".", "append", "(", "items", "[", "start", ":", "next", "]", ")", "\n", "start", "=", "start", "+", "size_chunk", "\n", "", "items_chunks", ".", "append", "(", "items", "[", "next", ":", "len", "(", "items", ")", "]", ")", "# appending the remaining amount", "\n", "return", "items_chunks", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV1.graphrec_amazon_men_ResNetFeatures_V1.Get_Image_Features": [[90, 99], ["Images.append"], "function", ["None"], ["def", "Get_Image_Features", "(", "items_Train", ")", ":", "\n", "  ", "Images", "=", "[", "]", "\n", "for", "i", "in", "items_Train", ":", "\n", "#print('i ....   ',i,'  ',New_Meta[i]) ", "\n", "    ", "element", "=", "New_Meta", "[", "i", "]", "\n", "#print('  f  ',len(element))", "\n", "Features", "=", "element", "[", "3", "]", "[", "0", "]", "\n", "Images", ".", "append", "(", "Features", ")", "\n", "", "return", "Images", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV1.graphrec_amazon_men_ResNetFeatures_V1.Prepare_Testing_Data": [[101, 138], ["print", "range", "len", "users.append", "items.append", "labels.append", "range", "items_All.append", "labels_All.append", "random.randint", "items.append", "labels.append", "random.randint"], "function", ["None"], ["", "def", "Prepare_Testing_Data", "(", "Data", ",", "Num_of_Negatives", "=", "100", ")", ":", "\n", "  ", "users", "=", "[", "]", "\n", "items_All", "=", "[", "]", "\n", "labels_All", "=", "[", "]", "\n", "#num_users=Data['userId'].nunique()", "\n", "print", "(", "'num_users: '", ",", "num_users", ")", "\n", "#num_items=Data['movieId'].nunique()", "\n", "#print('num_items: ',num_items)", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "Data", ")", ")", ":", "\n", "    ", "items", "=", "[", "]", "\n", "labels", "=", "[", "]", "\n", "############## Add positive sample ################", "\n", "test_userID", "=", "Data", ".", "iloc", "[", "i", ",", "0", "]", "\n", "select", "=", "Data", ".", "loc", "[", "Data", "[", "'reviewerID'", "]", "==", "test_userID", "]", "\n", "#print(select.head) ", "\n", "users", ".", "append", "(", "test_userID", ")", "\n", "#pos=randint(0, len(select)-1) ", "\n", "test_itemID", "=", "Data", ".", "iloc", "[", "i", ",", "1", "]", "\n", "items", ".", "append", "(", "test_itemID", ")", "\n", "#index = Data[ (Data['reviewerID']==i) & (Data['productId']==pos_item) ].index", "\n", "#Data.drop(index , inplace=True)", "\n", "#Data.drop(index )", "\n", "#print('item_dropped: ',index)", "\n", "labels", ".", "append", "(", "1", ")", "\n", "################### Add negative samples ##########", "\n", "for", "j", "in", "range", "(", "0", ",", "Num_of_Negatives", ")", ":", "\n", "########## generate negative sample item ID #####  ", "\n", "      ", "Neg", "=", "randint", "(", "0", ",", "num_items", "-", "1", ")", "\n", "while", "Neg", "in", "select", "[", "'productId'", "]", ":", "\n", "        ", "Neg", "=", "randint", "(", "0", ",", "num_items", "-", "1", ")", "\n", "", "items", ".", "append", "(", "Neg", ")", "\n", "labels", ".", "append", "(", "0", ")", "\n", "", "items_All", ".", "append", "(", "items", ")", "\n", "labels_All", ".", "append", "(", "labels", ")", "\n", "#print('shape of items all: ',len(items_All),'  and element ',len(items_All[0]))", "\n", "#print(len(users))", "\n", "", "return", "users", ",", "items_All", ",", "labels_All", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV1.graphrec_amazon_men_ResNetFeatures_V1.Hit_Rate": [[240, 252], ["range", "print", "len", "zip", "list_labels_sorted.index", "max", "sorted", "zip"], "function", ["None"], ["def", "Hit_Rate", "(", "users_scores", ",", "labels_Test", ",", "k", ")", ":", "\n", "    ", "hits", "=", "0", "\n", "for", "u", "in", "range", "(", "0", ",", "len", "(", "users_scores", ")", ")", ":", "\n", "        ", "list_scores", "=", "users_scores", "[", "u", "]", "\n", "list_labels", "=", "labels_Test", "[", "u", "]", "\n", "#print(list_scores.index(max(list_scores))) ", "\n", "list_scores_sorted", ",", "list_labels_sorted", "=", "zip", "(", "*", "sorted", "(", "zip", "(", "list_scores", ",", "list_labels", ")", ",", "reverse", "=", "True", ")", ")", "\n", "index_of_positive", "=", "list_labels_sorted", ".", "index", "(", "max", "(", "list_labels_sorted", ")", ")", "\n", "#print('Label :  ',max(list_labels_sorted),'  index : ',index_of_positive)", "\n", "if", "index_of_positive", "<", "k", ":", "\n", "          ", "hits", "=", "hits", "+", "1", "\n", "", "", "print", "(", "'Avg hit rate= '", ",", "(", "hits", "/", "num_users", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV1.graphrec_amazon_men_ResNetFeatures_V1.NDCG": [[291, 295], ["sklearn.metrics.ndcg_score", "print"], "function", ["None"], ["def", "NDCG", "(", "users_scores", ",", "labels_Test", ")", ":", "\n", "  ", "ndcg", "=", "ndcg_score", "(", "labels_Test", ",", "users_scores", ",", "k", "=", "10", ")", "\n", "print", "(", "'NDCG = '", ",", "ndcg", ")", "\n", "return", "ndcg", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV1.graphrec_amazon_fashion_ResNetFeatures_V1.Read_Data": [[35, 41], ["pandas.read_csv", "pandas.read_csv", "pandas.read_csv"], "function", ["None"], ["def", "Read_Data", "(", "path1", ",", "path3", ",", "path4", ")", ":", "\n", "#Reviews=pd.DataFrame()", "\n", "  ", "Reviews", "=", "pd", ".", "read_csv", "(", "path1", ",", "sep", "=", "','", ")", "\n", "Test", "=", "pd", ".", "read_csv", "(", "path3", ",", "sep", "=", "','", ")", "\n", "val", "=", "pd", ".", "read_csv", "(", "path4", ",", "sep", "=", "','", ")", "\n", "return", "Reviews", ",", "Test", ",", "val", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV1.graphrec_amazon_fashion_ResNetFeatures_V1.Read_Meta": [[42, 46], ["open", "pickle.load"], "function", ["None"], ["", "def", "Read_Meta", "(", "path2", ")", ":", "\n", "  ", "with", "open", "(", "path2", ",", "'rb'", ")", "as", "handle", ":", "\n", "    ", "meta_Data", "=", "pickle", ".", "load", "(", "handle", ")", "\n", "", "return", "meta_Data", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV1.graphrec_amazon_fashion_ResNetFeatures_V1.Sampling_training_instances": [[48, 75], ["range", "random.randint", "users.append", "random.randint", "items.append", "labels.append", "range", "random.randint", "users.append", "items.append", "labels.append", "len", "random.randint"], "function", ["None"], ["", "def", "Sampling_training_instances", "(", "Data", ",", "Num_of_Negatives", ",", "batch_size", ")", ":", "\n", "  ", "users", "=", "[", "]", "\n", "items", "=", "[", "]", "\n", "labels", "=", "[", "]", "\n", "#num_users=Data['userId'].nunique()", "\n", "#print('num_users: ',num_users)", "\n", "#num_items=Data['movieId'].nunique()", "\n", "#print('num_items: ',num_items)", "\n", "for", "m", "in", "range", "(", "0", ",", "batch_size", ")", ":", "\n", "############## Add positive sample ################", "\n", "    ", "i", "=", "randint", "(", "0", ",", "num_users", "-", "1", ")", "# generate new user randomly", "\n", "select", "=", "Data", ".", "loc", "[", "Data", "[", "'reviewerID'", "]", "==", "i", "]", "\n", "users", ".", "append", "(", "i", ")", "\n", "pos", "=", "randint", "(", "0", ",", "len", "(", "select", ")", "-", "1", ")", "\n", "items", ".", "append", "(", "select", ".", "iloc", "[", "pos", ",", "1", "]", ")", "\n", "labels", ".", "append", "(", "1", ")", "\n", "################### Add negative samples ##########", "\n", "for", "j", "in", "range", "(", "0", ",", "Num_of_Negatives", ")", ":", "\n", "########## generate negative sample item ID #####  ", "\n", "      ", "Neg", "=", "randint", "(", "0", ",", "num_items", "-", "1", ")", "\n", "while", "Neg", "in", "select", "[", "'productId'", "]", ":", "\n", "        ", "Neg", "=", "randint", "(", "0", ",", "num_items", "-", "1", ")", "\n", "", "users", ".", "append", "(", "i", ")", "\n", "items", ".", "append", "(", "Neg", ")", "\n", "labels", ".", "append", "(", "0", ")", "\n", "#print('user: ',i,' item positive: ',select.iloc[pos,1],' item negative: ',Neg)", "\n", "", "", "return", "users", ",", "items", ",", "labels", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV1.graphrec_amazon_fashion_ResNetFeatures_V1.cut_item_list": [[77, 87], ["items_chunks.append", "len", "items_chunks.append", "len"], "function", ["None"], ["", "def", "cut_item_list", "(", "items", ",", "size_chunk", ")", ":", "\n", "  ", "start", "=", "0", "\n", "next", "=", "0", "\n", "items_chunks", "=", "[", "]", "\n", "while", "(", "next", "+", "size_chunk", ")", "<", "len", "(", "items", ")", ":", "\n", "    ", "next", "=", "next", "+", "size_chunk", "\n", "items_chunks", ".", "append", "(", "items", "[", "start", ":", "next", "]", ")", "\n", "start", "=", "start", "+", "size_chunk", "\n", "", "items_chunks", ".", "append", "(", "items", "[", "next", ":", "len", "(", "items", ")", "]", ")", "# appending the remaining amount", "\n", "return", "items_chunks", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV1.graphrec_amazon_fashion_ResNetFeatures_V1.Get_Image_Features": [[90, 99], ["Images.append"], "function", ["None"], ["def", "Get_Image_Features", "(", "items_Train", ")", ":", "\n", "  ", "Images", "=", "[", "]", "\n", "for", "i", "in", "items_Train", ":", "\n", "#print('i ....   ',i,'  ',New_Meta[i]) ", "\n", "    ", "element", "=", "New_Meta", "[", "i", "]", "\n", "#print('  f  ',len(element))", "\n", "Features", "=", "element", "[", "3", "]", "[", "0", "]", "\n", "Images", ".", "append", "(", "Features", ")", "\n", "", "return", "Images", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV1.graphrec_amazon_fashion_ResNetFeatures_V1.Prepare_Testing_Data": [[101, 138], ["print", "range", "len", "users.append", "items.append", "labels.append", "range", "items_All.append", "labels_All.append", "random.randint", "items.append", "labels.append", "random.randint"], "function", ["None"], ["", "def", "Prepare_Testing_Data", "(", "Data", ",", "Num_of_Negatives", "=", "100", ")", ":", "\n", "  ", "users", "=", "[", "]", "\n", "items_All", "=", "[", "]", "\n", "labels_All", "=", "[", "]", "\n", "#num_users=Data['userId'].nunique()", "\n", "print", "(", "'num_users: '", ",", "num_users", ")", "\n", "#num_items=Data['movieId'].nunique()", "\n", "#print('num_items: ',num_items)", "\n", "for", "i", "in", "range", "(", "0", ",", "len", "(", "Data", ")", ")", ":", "\n", "    ", "items", "=", "[", "]", "\n", "labels", "=", "[", "]", "\n", "############## Add positive sample ################", "\n", "test_userID", "=", "Data", ".", "iloc", "[", "i", ",", "0", "]", "\n", "select", "=", "Data", ".", "loc", "[", "Data", "[", "'reviewerID'", "]", "==", "test_userID", "]", "\n", "#print(select.head) ", "\n", "users", ".", "append", "(", "test_userID", ")", "\n", "#pos=randint(0, len(select)-1) ", "\n", "test_itemID", "=", "Data", ".", "iloc", "[", "i", ",", "1", "]", "\n", "items", ".", "append", "(", "test_itemID", ")", "\n", "#index = Data[ (Data['reviewerID']==i) & (Data['productId']==pos_item) ].index", "\n", "#Data.drop(index , inplace=True)", "\n", "#Data.drop(index )", "\n", "#print('item_dropped: ',index)", "\n", "labels", ".", "append", "(", "1", ")", "\n", "################### Add negative samples ##########", "\n", "for", "j", "in", "range", "(", "0", ",", "Num_of_Negatives", ")", ":", "\n", "########## generate negative sample item ID #####  ", "\n", "      ", "Neg", "=", "randint", "(", "0", ",", "num_items", "-", "1", ")", "\n", "while", "Neg", "in", "select", "[", "'productId'", "]", ":", "\n", "        ", "Neg", "=", "randint", "(", "0", ",", "num_items", "-", "1", ")", "\n", "", "items", ".", "append", "(", "Neg", ")", "\n", "labels", ".", "append", "(", "0", ")", "\n", "", "items_All", ".", "append", "(", "items", ")", "\n", "labels_All", ".", "append", "(", "labels", ")", "\n", "#print('shape of items all: ',len(items_All),'  and element ',len(items_All[0]))", "\n", "#print(len(users))", "\n", "", "return", "users", ",", "items_All", ",", "labels_All", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV1.graphrec_amazon_fashion_ResNetFeatures_V1.Hit_Rate": [[240, 252], ["range", "print", "len", "zip", "list_labels_sorted.index", "max", "sorted", "zip"], "function", ["None"], ["def", "Hit_Rate", "(", "users_scores", ",", "labels_Test", ",", "k", ")", ":", "\n", "    ", "hits", "=", "0", "\n", "for", "u", "in", "range", "(", "0", ",", "len", "(", "users_scores", ")", ")", ":", "\n", "        ", "list_scores", "=", "users_scores", "[", "u", "]", "\n", "list_labels", "=", "labels_Test", "[", "u", "]", "\n", "#print(list_scores.index(max(list_scores))) ", "\n", "list_scores_sorted", ",", "list_labels_sorted", "=", "zip", "(", "*", "sorted", "(", "zip", "(", "list_scores", ",", "list_labels", ")", ",", "reverse", "=", "True", ")", ")", "\n", "index_of_positive", "=", "list_labels_sorted", ".", "index", "(", "max", "(", "list_labels_sorted", ")", ")", "\n", "#print('Label :  ',max(list_labels_sorted),'  index : ',index_of_positive)", "\n", "if", "index_of_positive", "<", "k", ":", "\n", "          ", "hits", "=", "hits", "+", "1", "\n", "", "", "print", "(", "'Avg hit rate= '", ",", "(", "hits", "/", "num_users", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.shereen-elsayed_imgrec.ImgRecV1.graphrec_amazon_fashion_ResNetFeatures_V1.NDCG": [[257, 261], ["sklearn.metrics.ndcg_score", "print"], "function", ["None"], ["", "def", "NDCG", "(", "users_scores", ",", "labels_Test", ")", ":", "\n", "  ", "ndcg", "=", "ndcg_score", "(", "labels_Test", ",", "users_scores", ",", "k", "=", "10", ")", "\n", "print", "(", "'NDCG = '", ",", "ndcg", ")", "\n", "return", "ndcg", "\n", "\n"]]}