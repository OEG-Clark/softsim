{"home.repos.pwc.inspect_result.maxitron93_stratified_sampling_for_XML.stratify_function.stratify.stratified_train_test_split": [[6, 102], ["datetime.datetime.now", "helper_funcs.create_instances_dict", "helper_funcs.create_instances_dict.items", "helper_funcs.create_labels_dict", "helper_funcs.score_labels", "helper_funcs.score_instances", "helper_funcs.calculate_total_score", "print", "range", "helper_funcs.create_instances_dict.items", "print", "print", "print", "print", "random.seed", "len", "labels_per_instance.append", "sum", "len", "datetime.datetime.now", "helper_funcs.calculte_threshold_score", "helper_funcs.swap_instances", "helper_funcs.create_labels_dict", "helper_funcs.score_labels", "helper_funcs.score_instances", "helper_funcs.calculate_total_score", "print", "len", "X_train.append", "y_train.append", "len", "len", "round", "X_test.append", "y_test.append", "print", "str().split", "round", "str().split", "str", "str", "datetime.datetime.now", "datetime.datetime.now"], "function", ["home.repos.pwc.inspect_result.maxitron93_stratified_sampling_for_XML.stratify_function.helper_funcs.create_instances_dict", "home.repos.pwc.inspect_result.maxitron93_stratified_sampling_for_XML.stratify_function.helper_funcs.create_labels_dict", "home.repos.pwc.inspect_result.maxitron93_stratified_sampling_for_XML.stratify_function.helper_funcs.score_labels", "home.repos.pwc.inspect_result.maxitron93_stratified_sampling_for_XML.stratify_function.helper_funcs.score_instances", "home.repos.pwc.inspect_result.maxitron93_stratified_sampling_for_XML.stratify_function.helper_funcs.calculate_total_score", "home.repos.pwc.inspect_result.maxitron93_stratified_sampling_for_XML.stratify_function.helper_funcs.calculte_threshold_score", "home.repos.pwc.inspect_result.maxitron93_stratified_sampling_for_XML.stratify_function.helper_funcs.swap_instances", "home.repos.pwc.inspect_result.maxitron93_stratified_sampling_for_XML.stratify_function.helper_funcs.create_labels_dict", "home.repos.pwc.inspect_result.maxitron93_stratified_sampling_for_XML.stratify_function.helper_funcs.score_labels", "home.repos.pwc.inspect_result.maxitron93_stratified_sampling_for_XML.stratify_function.helper_funcs.score_instances", "home.repos.pwc.inspect_result.maxitron93_stratified_sampling_for_XML.stratify_function.helper_funcs.calculate_total_score"], ["def", "stratified_train_test_split", "(", "X", ",", "y", ",", "target_test_size", ",", "random_state", "=", "None", ",", "epochs", "=", "50", ",", "swap_probability", "=", "0.1", ",", "threshold_proportion", "=", "0.1", ",", "decay", "=", "0.1", ")", ":", "\n", "\n", "    ", "if", "random_state", "!=", "None", ":", "\n", "        ", "random", ".", "seed", "(", "random_state", ")", "\n", "\n", "# To keep track of how long the initialization takes", "\n", "", "start_time", "=", "datetime", ".", "now", "(", ")", "\n", "\n", "# Keep track how how many instances have been swapped to train or test", "\n", "swap_counter", "=", "{", "\n", "'to_train'", ":", "0", ",", "\n", "'to_test'", ":", "0", ",", "\n", "}", "\n", "\n", "# 1. Create instances_dict to keep track of instance information:", "\n", "# labels: array of labels, []", "\n", "# train_or_test: string, 'train' or 'test'", "\n", "# instance_score: float, adjusted sum of label scores", "\n", "instances_dict", "=", "helper_funcs", ".", "create_instances_dict", "(", "X", ",", "y", ",", "target_test_size", ")", "\n", "\n", "# 1.5 Get average number of labels per instance", "\n", "labels_per_instance", "=", "[", "]", "\n", "for", "instance_id", ",", "instance_dict", "in", "instances_dict", ".", "items", "(", ")", ":", "\n", "        ", "labels_count", "=", "len", "(", "instance_dict", "[", "'labels'", "]", ")", "\n", "labels_per_instance", ".", "append", "(", "labels_count", ")", "\n", "", "average_labels_per_instance", "=", "sum", "(", "labels_per_instance", ")", "/", "len", "(", "labels_per_instance", ")", "\n", "\n", "# 2. Create labels_dict to keep track of label information:", "\n", "# train: int, number of times label appears in train set", "\n", "# test: int, number of times label appears in test set ", "\n", "# label_score: float, label score", "\n", "labels_dict", "=", "helper_funcs", ".", "create_labels_dict", "(", "instances_dict", ")", "\n", "\n", "# 3. Calculate the label score for each label in labels_dict", "\n", "# Positive score if too much of the label is in the test set", "\n", "# Negative score if too much of the label is in the train set", "\n", "helper_funcs", ".", "score_labels", "(", "labels_dict", ",", "target_test_size", ",", "average_labels_per_instance", ")", "\n", "\n", "# 4. Calculate the instance score for each instance in instances_dict", "\n", "# A high score means the instance is a good candidate for swapping", "\n", "helper_funcs", ".", "score_instances", "(", "instances_dict", ",", "labels_dict", ")", "\n", "\n", "# 5. Calculate the total score", "\n", "# The higher the score, the more 'imbalanced' the distribution of labels between train and test sets", "\n", "total_score", "=", "helper_funcs", ".", "calculate_total_score", "(", "instances_dict", ")", "\n", "print", "(", "f'Starting score: {round(total_score)}. Calculated in {str(datetime.now() - start_time).split(\".\")[0]}'", ")", "\n", "\n", "# Main loop to create stratified train-test split  ", "\n", "for", "epoch", "in", "range", "(", "epochs", ")", ":", "\n", "\n", "# To keep track of how long each itteration takes", "\n", "        ", "itteration_start_time", "=", "datetime", ".", "now", "(", ")", "\n", "\n", "# 6. Calculate the threshold score for swapping", "\n", "threshold_score", "=", "helper_funcs", ".", "calculte_threshold_score", "(", "instances_dict", ",", "average_labels_per_instance", ",", "epoch", ",", "threshold_proportion", ",", "decay", ")", "\n", "\n", "# 7. Swap the instances with instance_score that is greater than the threshold score", "\n", "# Probability of swapping an instance is swap_probability", "\n", "helper_funcs", ".", "swap_instances", "(", "instances_dict", ",", "threshold_score", ",", "swap_counter", ",", "target_test_size", ",", "average_labels_per_instance", ",", "epoch", ",", "swap_probability", ",", "decay", ")", "\n", "\n", "# 2. Recreate labels_dict with updated train-test split", "\n", "labels_dict", "=", "helper_funcs", ".", "create_labels_dict", "(", "instances_dict", ")", "\n", "\n", "# 3. Recalculate the label score for each label in labels_dict", "\n", "helper_funcs", ".", "score_labels", "(", "labels_dict", ",", "target_test_size", ",", "average_labels_per_instance", ")", "\n", "\n", "# 4. Recalculate the instance score for each instance in instances_dict", "\n", "helper_funcs", ".", "score_instances", "(", "instances_dict", ",", "labels_dict", ")", "\n", "\n", "# 5. Recalculate the total score", "\n", "total_score", "=", "helper_funcs", ".", "calculate_total_score", "(", "instances_dict", ")", "\n", "print", "(", "f'Epoch {epoch + 1}/{epochs} score: {round(total_score)}. Calculated in {str(datetime.now() - itteration_start_time).split(\".\")[0]}'", ")", "\n", "\n", "# Prepare X_train, X_test, y_train, y_test", "\n", "", "X_train", "=", "[", "]", "\n", "X_test", "=", "[", "]", "\n", "y_train", "=", "[", "]", "\n", "y_test", "=", "[", "]", "\n", "for", "instance_id", ",", "instance_dict", "in", "instances_dict", ".", "items", "(", ")", ":", "\n", "        ", "if", "instance_dict", "[", "'train_or_test'", "]", "==", "'train'", ":", "\n", "            ", "X_train", ".", "append", "(", "X", "[", "instance_id", "]", ")", "\n", "y_train", ".", "append", "(", "y", "[", "instance_id", "]", ")", "\n", "", "elif", "instance_dict", "[", "'train_or_test'", "]", "==", "'test'", ":", "\n", "            ", "X_test", ".", "append", "(", "X", "[", "instance_id", "]", ")", "\n", "y_test", ".", "append", "(", "y", "[", "instance_id", "]", ")", "\n", "", "else", ":", "\n", "            ", "print", "(", "f'Something went wrong: {instance_id}'", ")", "\n", "\n", "# Print some statistics", "\n", "", "", "actual_test_size", "=", "len", "(", "X_test", ")", "/", "(", "len", "(", "X_train", ")", "+", "len", "(", "X_test", ")", ")", "\n", "print", "(", "f'To train: {swap_counter[\"to_train\"]}'", ")", "\n", "print", "(", "f'To test: {swap_counter[\"to_test\"]}'", ")", "\n", "print", "(", "f'Target test size: {target_test_size}'", ")", "\n", "print", "(", "f'Actual test size: {actual_test_size}'", ")", "\n", "\n", "return", "X_train", ",", "X_test", ",", "y_train", ",", "y_test", "\n", "\n"]], "home.repos.pwc.inspect_result.maxitron93_stratified_sampling_for_XML.stratify_function.helper_funcs.create_instances_dict": [[8, 22], ["random.uniform"], "function", ["None"], ["def", "create_instances_dict", "(", "X", ",", "y", ",", "target_test_size", ")", ":", "\n", "    ", "instances_dict", "=", "{", "}", "\n", "instance_id", "=", "0", "\n", "for", "_", "in", "X", ":", "\n", "        ", "train_or_test", "=", "'train'", "\n", "if", "random", ".", "uniform", "(", "0", ",", "1", ")", "<=", "target_test_size", ":", "\n", "            ", "train_or_test", "=", "'test'", "\n", "", "instances_dict", "[", "instance_id", "]", "=", "{", "\n", "'labels'", ":", "y", "[", "instance_id", "]", ",", "\n", "'train_or_test'", ":", "train_or_test", ",", "\n", "'instance_score'", ":", "0", ",", "\n", "}", "\n", "instance_id", "+=", "1", "\n", "", "return", "instances_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.maxitron93_stratified_sampling_for_XML.stratify_function.helper_funcs.create_labels_dict": [[28, 52], ["instances_dict.items"], "function", ["None"], ["", "def", "create_labels_dict", "(", "instances_dict", ")", ":", "\n", "    ", "labels_dict", "=", "{", "}", "\n", "for", "_", ",", "instance_dict", "in", "instances_dict", ".", "items", "(", ")", ":", "\n", "        ", "train_or_test", "=", "instance_dict", "[", "'train_or_test'", "]", "\n", "for", "label", "in", "instance_dict", "[", "'labels'", "]", ":", "\n", "            ", "try", ":", "\n", "                ", "if", "train_or_test", "==", "'train'", ":", "\n", "                    ", "labels_dict", "[", "label", "]", "[", "'train'", "]", "+=", "1", "\n", "", "else", ":", "\n", "                    ", "labels_dict", "[", "label", "]", "[", "'test'", "]", "+=", "1", "\n", "", "", "except", ":", "\n", "                ", "if", "train_or_test", "==", "'train'", ":", "\n", "                    ", "labels_dict", "[", "label", "]", "=", "{", "\n", "'train'", ":", "1", ",", "\n", "'test'", ":", "0", ",", "\n", "'label_score'", ":", "0", "\n", "}", "\n", "", "else", ":", "\n", "                    ", "labels_dict", "[", "label", "]", "=", "{", "\n", "'train'", ":", "0", ",", "\n", "'test'", ":", "1", ",", "\n", "'label_score'", ":", "0", "\n", "}", "\n", "", "", "", "", "return", "labels_dict", "\n", "\n"]], "home.repos.pwc.inspect_result.maxitron93_stratified_sampling_for_XML.stratify_function.helper_funcs.score_labels": [[56, 71], ["labels_dict.items"], "function", ["None"], ["", "def", "score_labels", "(", "labels_dict", ",", "target_test_size", ",", "average_labels_per_instance", ")", ":", "\n", "    ", "for", "label", ",", "label_dict", "in", "labels_dict", ".", "items", "(", ")", ":", "\n", "        ", "label_score", "=", "0", "\n", "label_count", "=", "label_dict", "[", "'train'", "]", "+", "label_dict", "[", "'test'", "]", "\n", "if", "label_count", ">", "1", ":", "\n", "            ", "actual_test_proportion", "=", "label_dict", "[", "'test'", "]", "/", "label_count", "\n", "if", "actual_test_proportion", ">=", "target_test_size", ":", "# Too much of the label is in the test set", "\n", "                ", "label_score", "=", "(", "actual_test_proportion", "-", "target_test_size", ")", "/", "(", "1", "-", "target_test_size", ")", "\n", "if", "actual_test_proportion", ">", "0.999", ":", "\n", "                    ", "label_score", "+=", "average_labels_per_instance", "\n", "", "", "else", ":", "# Too much of the label is in the train set", "\n", "                ", "label_score", "=", "(", "actual_test_proportion", "-", "target_test_size", ")", "/", "target_test_size", "\n", "if", "actual_test_proportion", "<", "0.001", ":", "\n", "                    ", "label_score", "-=", "average_labels_per_instance", "\n", "", "", "", "labels_dict", "[", "label", "]", "[", "'label_score'", "]", "=", "label_score", "\n", "\n"]], "home.repos.pwc.inspect_result.maxitron93_stratified_sampling_for_XML.stratify_function.helper_funcs.score_instances": [[74, 95], ["instances_dict.items", "print", "print"], "function", ["None"], ["", "", "def", "score_instances", "(", "instances_dict", ",", "labels_dict", ")", ":", "\n", "    ", "for", "instance_id", ",", "instance_dict", "in", "instances_dict", ".", "items", "(", ")", ":", "\n", "        ", "instance_score", "=", "0", "\n", "train_or_test", "=", "instance_dict", "[", "'train_or_test'", "]", "\n", "for", "label", "in", "instance_dict", "[", "'labels'", "]", ":", "\n", "            ", "label_score", "=", "labels_dict", "[", "label", "]", "[", "'label_score'", "]", "\n", "if", "label_score", ">", "0", ":", "# If too much of the label is in the test set ", "\n", "                ", "if", "train_or_test", "==", "'test'", ":", "\n", "                    ", "instance_score", "+=", "label_score", "# If instance in test, increase score", "\n", "", "elif", "train_or_test", "==", "'train'", ":", "\n", "                    ", "instance_score", "-=", "label_score", "# If instance in train, decrease score", "\n", "", "else", ":", "\n", "                    ", "print", "(", "f'Something went wrong: {instance_id}'", ")", "\n", "", "", "elif", "label_score", "<", "0", ":", "# If too much of the label is in the train set", "\n", "                ", "if", "train_or_test", "==", "'train'", ":", "\n", "                    ", "instance_score", "-=", "label_score", "# If instance in train, increase score", "\n", "", "elif", "train_or_test", "==", "'test'", ":", "\n", "                    ", "instance_score", "+=", "label_score", "# If instance in test, decrease score", "\n", "", "else", ":", "\n", "                    ", "print", "(", "f'Something went wrong: {instance_id}'", ")", "\n", "", "", "", "instances_dict", "[", "instance_id", "]", "[", "'instance_score'", "]", "=", "instance_score", "\n", "\n"]], "home.repos.pwc.inspect_result.maxitron93_stratified_sampling_for_XML.stratify_function.helper_funcs.calculate_total_score": [[98, 103], ["instances_dict.items"], "function", ["None"], ["", "", "def", "calculate_total_score", "(", "instances_dict", ")", ":", "\n", "    ", "total_score", "=", "0", "\n", "for", "_", ",", "instance_dict", "in", "instances_dict", ".", "items", "(", ")", ":", "\n", "        ", "total_score", "+=", "instance_dict", "[", "'instance_score'", "]", "\n", "", "return", "total_score", "\n", "\n"]], "home.repos.pwc.inspect_result.maxitron93_stratified_sampling_for_XML.stratify_function.helper_funcs.calculte_threshold_score": [[105, 114], ["instances_dict.items", "numpy.quantile", "instance_scores.append"], "function", ["None"], ["", "def", "calculte_threshold_score", "(", "instances_dict", ",", "average_labels_per_instance", ",", "epoch", ",", "threshold_proportion", ",", "decay", ")", ":", "\n", "    ", "instance_scores", "=", "[", "]", "\n", "for", "_", ",", "instance_dict", "in", "instances_dict", ".", "items", "(", ")", ":", "\n", "        ", "if", "instance_dict", "[", "'instance_score'", "]", "<", "average_labels_per_instance", ":", "\n", "            ", "instance_scores", ".", "append", "(", "instance_dict", "[", "'instance_score'", "]", ")", "\n", "", "", "threshold_score", "=", "np", ".", "quantile", "(", "instance_scores", ",", "(", "1", "-", "(", "threshold_proportion", "/", "(", "(", "1", "+", "decay", ")", "**", "epoch", ")", ")", ")", ")", "\n", "if", "threshold_score", "<", "0", ":", "\n", "        ", "threshold_score", "=", "0", "\n", "", "return", "threshold_score", "\n", "\n"]], "home.repos.pwc.inspect_result.maxitron93_stratified_sampling_for_XML.stratify_function.helper_funcs.swap_instances": [[117, 137], ["instances_dict.items", "random.uniform", "random.uniform"], "function", ["None"], ["", "def", "swap_instances", "(", "instances_dict", ",", "threshold_score", ",", "swap_counter", ",", "average_labels_per_instance", ",", "epoch", ",", "swap_probability", ",", "decay", ")", ":", "\n", "    ", "for", "instance_id", ",", "instance_dict", "in", "instances_dict", ".", "items", "(", ")", ":", "\n", "        ", "instance_score", "=", "instance_dict", "[", "'instance_score'", "]", "\n", "if", "instance_score", ">=", "average_labels_per_instance", ":", "\n", "            ", "if", "random", ".", "uniform", "(", "0", ",", "1", ")", "<=", "0.25", "/", "(", "1.05", "**", "epoch", ")", ":", "\n", "                ", "current_group", "=", "instance_dict", "[", "'train_or_test'", "]", "\n", "if", "current_group", "==", "'train'", ":", "\n", "                    ", "instances_dict", "[", "instance_id", "]", "[", "'train_or_test'", "]", "=", "'test'", "\n", "swap_counter", "[", "'to_test'", "]", "+=", "1", "\n", "", "elif", "current_group", "==", "'test'", ":", "\n", "                    ", "instances_dict", "[", "instance_id", "]", "[", "'train_or_test'", "]", "=", "'train'", "\n", "swap_counter", "[", "'to_train'", "]", "+=", "1", "\n", "", "", "", "elif", "instance_score", ">", "threshold_score", "and", "random", ".", "uniform", "(", "0", ",", "1", ")", "<=", "swap_probability", "/", "(", "(", "1", "+", "decay", ")", "**", "epoch", ")", ":", "\n", "            ", "current_group", "=", "instance_dict", "[", "'train_or_test'", "]", "\n", "if", "current_group", "==", "'train'", ":", "\n", "                ", "instances_dict", "[", "instance_id", "]", "[", "'train_or_test'", "]", "=", "'test'", "\n", "swap_counter", "[", "'to_test'", "]", "+=", "1", "\n", "", "elif", "current_group", "==", "'test'", ":", "\n", "                ", "instances_dict", "[", "instance_id", "]", "[", "'train_or_test'", "]", "=", "'train'", "\n", "swap_counter", "[", "'to_train'", "]", "+=", "1", "\n", "", "", "", "", ""]]}