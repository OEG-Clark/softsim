{"home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.EWE_Resnet.__init__": [[41, 68], ["tensorflow.argmax", "functools.partial", "models.EWE_Resnet.pred", "models.EWE_Resnet.error_rate", "models.EWE_Resnet.snnl", "models.EWE_Resnet.cross_entropy", "models.EWE_Resnet.optimizer", "models.EWE_Resnet.snnl_gradient", "models.EWE_Resnet.ce_gradient"], "methods", ["home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.Plain_LSTM.pred", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.Plain_LSTM.error_rate", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.snnl", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.Plain_Resnet.cross_entropy", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.Plain_LSTM.optimizer", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.EWE_LSTM.snnl_gradient", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.EWE_LSTM.ce_gradient"], ["    ", "def", "__init__", "(", "self", ",", "image", ",", "label", ",", "w_label", ",", "bs", ",", "num_class", ",", "lr", ",", "factors", ",", "temperatures", ",", "target", ",", "is_training", ",", "metric", ",", "\n", "layers", ")", ":", "\n", "        ", "self", ".", "num_class", "=", "num_class", "\n", "self", ".", "batch_size", "=", "bs", "\n", "self", ".", "lr", "=", "lr", "\n", "self", ".", "b1", "=", "0.9", "\n", "self", ".", "b2", "=", "0.99", "\n", "self", ".", "epsilon", "=", "1e-5", "\n", "self", ".", "target", "=", "target", "\n", "self", ".", "w", "=", "w_label", "\n", "self", ".", "x", "=", "image", "\n", "self", ".", "Y", "=", "label", "\n", "self", ".", "y", "=", "tf", ".", "argmax", "(", "self", ".", "Y", ",", "1", ")", "\n", "self", ".", "layers", "=", "layers", "\n", "self", ".", "temp", "=", "temperatures", "\n", "self", ".", "snnl_func", "=", "functools", ".", "partial", "(", "snnl", ",", "metric", "=", "metric", ")", "\n", "self", ".", "factor_1", "=", "factors", "[", "0", "]", "\n", "self", ".", "factor_2", "=", "factors", "[", "1", "]", "\n", "self", ".", "factor_3", "=", "factors", "[", "2", "]", "\n", "self", ".", "is_training", "=", "is_training", "\n", "self", ".", "prediction", "=", "self", ".", "pred", "(", ")", "\n", "self", ".", "error", "=", "self", ".", "error_rate", "(", ")", "\n", "self", ".", "snnl_loss", "=", "self", ".", "snnl", "(", ")", "\n", "self", ".", "ce_loss", "=", "self", ".", "cross_entropy", "(", ")", "\n", "self", ".", "optimize", "=", "self", ".", "optimizer", "(", ")", "\n", "self", ".", "snnl_trigger", "=", "self", ".", "snnl_gradient", "(", ")", "\n", "self", ".", "ce_trigger", "=", "self", ".", "ce_gradient", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.EWE_Resnet.pred": [[69, 152], ["tensorflow.variable_scope", "resnet.get_residual_layer", "resnet.conv", "range", "tensorflow.cond", "range", "tensorflow.cond", "range", "res.append", "tensorflow.cond", "range", "tensorflow.cond", "resnet.relu", "resnet.global_avg_pooling", "res.append", "resnet.fully_conneted", "res.append", "tensorflow.cond", "tensorflow.greater", "tensorflow.cond", "tensorflow.greater", "tensorflow.cond", "tensorflow.greater", "res.append", "tensorflow.cond", "tensorflow.greater", "tensorflow.greater", "residual_block", "residual_block", "tensorflow.greater", "residual_block", "residual_block", "tensorflow.greater", "residual_block", "residual_block", "tensorflow.greater", "resnet.batch_norm", "resnet.batch_norm", "residual_block", "residual_block", "residual_block", "residual_block", "residual_block", "residual_block", "residual_block", "residual_block", "str", "str", "str", "str", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.get_residual_layer", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.conv", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.relu", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.global_avg_pooling", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.fully_conneted", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.batch_norm", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.batch_norm"], ["", "def", "pred", "(", "self", ",", "reuse", "=", "tf", ".", "compat", ".", "v1", ".", "AUTO_REUSE", ")", ":", "\n", "        ", "res", "=", "[", "]", "\n", "with", "tf", ".", "variable_scope", "(", "\"network\"", ",", "reuse", "=", "reuse", ")", ":", "\n", "\n", "            ", "if", "self", ".", "layers", ">", "34", ":", "\n", "                ", "residual_block", "=", "resnet", ".", "bottle_resblock", "\n", "", "else", ":", "\n", "                ", "residual_block", "=", "resnet", ".", "resblock", "\n", "\n", "", "residual_list", "=", "resnet", ".", "get_residual_layer", "(", "self", ".", "layers", ")", "\n", "\n", "ch", "=", "64", "\n", "x", "=", "self", ".", "x", "\n", "x", "=", "resnet", ".", "conv", "(", "x", ",", "channels", "=", "ch", ",", "kernel", "=", "3", ",", "stride", "=", "1", ",", "scope", "=", "'conv'", ")", "\n", "\n", "for", "i", "in", "range", "(", "residual_list", "[", "0", "]", ")", ":", "\n", "                ", "x", "=", "tf", ".", "cond", "(", "tf", ".", "greater", "(", "self", ".", "is_training", ",", "0", ")", ",", "\n", "lambda", ":", "residual_block", "(", "x", ",", "channels", "=", "ch", ",", "is_training", "=", "True", ",", "downsample", "=", "False", ",", "\n", "scope", "=", "'resblock0_'", "+", "str", "(", "i", ")", ")", ",", "\n", "lambda", ":", "residual_block", "(", "x", ",", "channels", "=", "ch", ",", "is_training", "=", "False", ",", "downsample", "=", "False", ",", "\n", "scope", "=", "'resblock0_'", "+", "str", "(", "i", ")", ")", ")", "\n", "\n", "########################################################################################################", "\n", "\n", "", "x", "=", "tf", ".", "cond", "(", "tf", ".", "greater", "(", "self", ".", "is_training", ",", "0", ")", ",", "\n", "lambda", ":", "residual_block", "(", "x", ",", "channels", "=", "ch", "*", "2", ",", "is_training", "=", "True", ",", "downsample", "=", "True", ",", "\n", "scope", "=", "'resblock1_0'", ")", ",", "\n", "lambda", ":", "residual_block", "(", "x", ",", "channels", "=", "ch", "*", "2", ",", "is_training", "=", "False", ",", "downsample", "=", "True", ",", "\n", "scope", "=", "'resblock1_0'", ")", ")", "\n", "\n", "\n", "for", "i", "in", "range", "(", "1", ",", "residual_list", "[", "1", "]", ")", ":", "\n", "                ", "x", "=", "tf", ".", "cond", "(", "tf", ".", "greater", "(", "self", ".", "is_training", ",", "0", ")", ",", "\n", "lambda", ":", "residual_block", "(", "x", ",", "channels", "=", "ch", "*", "2", ",", "is_training", "=", "True", ",", "downsample", "=", "False", ",", "\n", "scope", "=", "'resblock1_'", "+", "str", "(", "i", ")", ")", ",", "\n", "lambda", ":", "residual_block", "(", "x", ",", "channels", "=", "ch", "*", "2", ",", "is_training", "=", "False", ",", "downsample", "=", "False", ",", "\n", "scope", "=", "'resblock1_'", "+", "str", "(", "i", ")", ")", ")", "\n", "\n", "########################################################################################################", "\n", "\n", "", "x", "=", "tf", ".", "cond", "(", "tf", ".", "greater", "(", "self", ".", "is_training", ",", "0", ")", ",", "\n", "lambda", ":", "residual_block", "(", "x", ",", "channels", "=", "ch", "*", "4", ",", "is_training", "=", "True", ",", "downsample", "=", "True", ",", "\n", "scope", "=", "'resblock2_0'", ")", ",", "\n", "lambda", ":", "residual_block", "(", "x", ",", "channels", "=", "ch", "*", "4", ",", "is_training", "=", "False", ",", "downsample", "=", "True", ",", "\n", "scope", "=", "'resblock2_0'", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "1", ",", "residual_list", "[", "2", "]", ")", ":", "\n", "                ", "x", "=", "tf", ".", "cond", "(", "tf", ".", "greater", "(", "self", ".", "is_training", ",", "0", ")", ",", "\n", "lambda", ":", "residual_block", "(", "x", ",", "channels", "=", "ch", "*", "4", ",", "is_training", "=", "True", ",", "downsample", "=", "False", ",", "\n", "scope", "=", "'resblock2_'", "+", "str", "(", "i", ")", ")", ",", "\n", "lambda", ":", "residual_block", "(", "x", ",", "channels", "=", "ch", "*", "4", ",", "is_training", "=", "False", ",", "downsample", "=", "False", ",", "\n", "scope", "=", "'resblock2_'", "+", "str", "(", "i", ")", ")", ")", "\n", "########################################################################################################", "\n", "", "res", ".", "append", "(", "x", ")", "\n", "\n", "x", "=", "tf", ".", "cond", "(", "tf", ".", "greater", "(", "self", ".", "is_training", ",", "0", ")", ",", "\n", "lambda", ":", "residual_block", "(", "x", ",", "channels", "=", "ch", "*", "8", ",", "is_training", "=", "True", ",", "downsample", "=", "True", ",", "\n", "scope", "=", "'resblock_3_0'", ")", ",", "\n", "lambda", ":", "residual_block", "(", "x", ",", "channels", "=", "ch", "*", "8", ",", "is_training", "=", "False", ",", "downsample", "=", "True", ",", "\n", "scope", "=", "'resblock_3_0'", ")", ")", "\n", "\n", "\n", "for", "i", "in", "range", "(", "1", ",", "residual_list", "[", "3", "]", ")", ":", "\n", "                ", "res", ".", "append", "(", "x", ")", "\n", "x", "=", "tf", ".", "cond", "(", "tf", ".", "greater", "(", "self", ".", "is_training", ",", "0", ")", ",", "\n", "lambda", ":", "residual_block", "(", "x", ",", "channels", "=", "ch", "*", "8", ",", "is_training", "=", "True", ",", "downsample", "=", "False", ",", "\n", "scope", "=", "'resblock_3_'", "+", "str", "(", "i", ")", ")", ",", "\n", "lambda", ":", "residual_block", "(", "x", ",", "channels", "=", "ch", "*", "8", ",", "is_training", "=", "False", ",", "downsample", "=", "False", ",", "\n", "scope", "=", "'resblock_3_'", "+", "str", "(", "i", ")", ")", ")", "\n", "\n", "########################################################################################################", "\n", "\n", "", "x", "=", "tf", ".", "cond", "(", "tf", ".", "greater", "(", "self", ".", "is_training", ",", "0", ")", ",", "\n", "lambda", ":", "resnet", ".", "batch_norm", "(", "x", ",", "True", ",", "scope", "=", "'batch_norm'", ")", ",", "\n", "lambda", ":", "resnet", ".", "batch_norm", "(", "x", ",", "False", ",", "scope", "=", "'batch_norm'", ")", ")", "\n", "x", "=", "resnet", ".", "relu", "(", "x", ")", "\n", "\n", "x", "=", "resnet", ".", "global_avg_pooling", "(", "x", ")", "\n", "res", ".", "append", "(", "x", ")", "\n", "x", "=", "resnet", ".", "fully_conneted", "(", "x", ",", "units", "=", "self", ".", "num_class", ",", "scope", "=", "'logit'", ")", "\n", "res", ".", "append", "(", "x", ")", "\n", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.EWE_Resnet.error_rate": [[153, 156], ["tensorflow.not_equal", "tensorflow.reduce_mean", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast"], "methods", ["None"], ["", "", "def", "error_rate", "(", "self", ")", ":", "\n", "        ", "mistakes", "=", "tf", ".", "not_equal", "(", "tf", ".", "argmax", "(", "self", ".", "Y", ",", "1", ")", ",", "tf", ".", "argmax", "(", "self", ".", "prediction", "[", "-", "1", "]", ",", "1", ")", ")", "\n", "return", "tf", ".", "reduce_mean", "(", "tf", ".", "cast", "(", "mistakes", ",", "tf", ".", "float32", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.EWE_Resnet.snnl": [[157, 169], ["tensorflow.math.divide", "tensorflow.math.divide", "tensorflow.math.divide", "models.EWE_Resnet.snnl_func", "models.EWE_Resnet.snnl_func", "models.EWE_Resnet.snnl_func"], "methods", ["None"], ["", "def", "snnl", "(", "self", ")", ":", "\n", "        ", "x1", "=", "self", ".", "prediction", "[", "-", "2", "]", "\n", "x2", "=", "self", ".", "prediction", "[", "-", "3", "]", "\n", "x3", "=", "self", ".", "prediction", "[", "-", "4", "]", "\n", "inv_temp_1", "=", "tf", ".", "math", ".", "divide", "(", "100.", ",", "self", ".", "temp", "[", "0", "]", ")", "\n", "inv_temp_2", "=", "tf", ".", "math", ".", "divide", "(", "100.", ",", "self", ".", "temp", "[", "1", "]", ")", "\n", "inv_temp_3", "=", "tf", ".", "math", ".", "divide", "(", "100.", ",", "self", ".", "temp", "[", "2", "]", ")", "\n", "w", "=", "self", ".", "w", "\n", "loss1", "=", "self", ".", "snnl_func", "(", "x1", ",", "w", ",", "inv_temp_1", ")", "\n", "loss2", "=", "self", ".", "snnl_func", "(", "x2", ",", "w", ",", "inv_temp_2", ")", "\n", "loss3", "=", "self", ".", "snnl_func", "(", "x3", ",", "w", ",", "inv_temp_3", ")", "\n", "return", "[", "loss1", ",", "loss2", ",", "loss3", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.EWE_Resnet.cross_entropy": [[170, 174], ["tensorflow.math.log", "tensorflow.reduce_sum", "tensorflow.nn.softmax"], "methods", ["None"], ["", "def", "cross_entropy", "(", "self", ")", ":", "\n", "        ", "log_prob", "=", "tf", ".", "math", ".", "log", "(", "tf", ".", "nn", ".", "softmax", "(", "self", ".", "prediction", "[", "-", "1", "]", ")", "+", "1e-12", ")", "\n", "cross_entropy", "=", "-", "tf", ".", "reduce_sum", "(", "self", ".", "Y", "*", "log_prob", ")", "\n", "return", "cross_entropy", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.EWE_Resnet.optimizer": [[175, 181], ["tensorflow.train.AdamOptimizer", "models.EWE_Resnet.snnl", "tensorflow.cast", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.gradients", "tensorflow.greater", "tensorflow.math.reduce_mean"], "methods", ["home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.snnl"], ["", "def", "optimizer", "(", "self", ")", ":", "\n", "        ", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "lr", ",", "self", ".", "b1", ",", "self", ".", "b2", ",", "self", ".", "epsilon", ")", "\n", "snnl", "=", "self", ".", "snnl", "(", ")", "\n", "soft_nearest_neighbor", "=", "self", ".", "factor_1", "*", "snnl", "[", "0", "]", "+", "self", ".", "factor_2", "*", "snnl", "[", "1", "]", "+", "self", ".", "factor_3", "*", "snnl", "[", "2", "]", "\n", "soft_nearest_neighbor", "=", "tf", ".", "cast", "(", "tf", ".", "greater", "(", "tf", ".", "math", ".", "reduce_mean", "(", "self", ".", "w", ")", ",", "0", ")", ",", "tf", ".", "float32", ")", "*", "soft_nearest_neighbor", "\n", "return", "optimizer", ".", "minimize", "(", "self", ".", "ce_loss", "-", "soft_nearest_neighbor", ")", ",", "tf", ".", "gradients", "(", "snnl", ",", "self", ".", "temp", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.EWE_Resnet.snnl_gradient": [[182, 184], ["tensorflow.gradients"], "methods", ["None"], ["", "def", "snnl_gradient", "(", "self", ")", ":", "\n", "        ", "return", "tf", ".", "gradients", "(", "self", ".", "snnl_loss", "[", "0", "]", "+", "self", ".", "snnl_loss", "[", "1", "]", "+", "self", ".", "snnl_loss", "[", "2", "]", ",", "self", ".", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.EWE_Resnet.ce_gradient": [[185, 187], ["tensorflow.gradients", "tensorflow.unstack"], "methods", ["None"], ["", "def", "ce_gradient", "(", "self", ")", ":", "\n", "        ", "return", "tf", ".", "gradients", "(", "tf", ".", "unstack", "(", "self", ".", "prediction", "[", "-", "1", "]", ",", "axis", "=", "1", ")", "[", "self", ".", "target", "]", ",", "self", ".", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.Plain_Resnet.__init__": [[190, 206], ["tensorflow.argmax", "models.Plain_Resnet.pred", "models.Plain_Resnet.error_rate", "models.Plain_Resnet.cross_entropy", "models.Plain_Resnet.optimizer"], "methods", ["home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.Plain_LSTM.pred", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.Plain_LSTM.error_rate", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.Plain_Resnet.cross_entropy", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.Plain_LSTM.optimizer"], ["    ", "def", "__init__", "(", "self", ",", "image", ",", "label", ",", "bs", ",", "num_class", ",", "lr", ",", "is_training", ",", "layers", ")", ":", "\n", "        ", "self", ".", "num_class", "=", "num_class", "\n", "self", ".", "batch_size", "=", "bs", "\n", "self", ".", "lr", "=", "lr", "\n", "self", ".", "b1", "=", "0.9", "\n", "self", ".", "b2", "=", "0.99", "\n", "self", ".", "epsilon", "=", "1e-5", "\n", "self", ".", "x", "=", "image", "\n", "self", ".", "Y", "=", "label", "\n", "self", ".", "y", "=", "tf", ".", "argmax", "(", "self", ".", "Y", ",", "1", ")", "\n", "self", ".", "layers", "=", "layers", "\n", "self", ".", "is_training", "=", "is_training", "\n", "self", ".", "prediction", "=", "self", ".", "pred", "(", ")", "\n", "self", ".", "error", "=", "self", ".", "error_rate", "(", ")", "\n", "self", ".", "ce_loss", "=", "self", ".", "cross_entropy", "(", ")", "\n", "self", ".", "optimize", "=", "self", ".", "optimizer", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.Plain_Resnet.pred": [[207, 285], ["tensorflow.variable_scope", "resnet.get_residual_layer", "resnet.conv", "range", "tensorflow.cond", "range", "tensorflow.cond", "range", "tensorflow.cond", "range", "tensorflow.cond", "resnet.relu", "resnet.global_avg_pooling", "resnet.fully_conneted", "res.append", "tensorflow.cond", "tensorflow.greater", "tensorflow.cond", "tensorflow.greater", "tensorflow.cond", "tensorflow.greater", "tensorflow.cond", "tensorflow.greater", "tensorflow.greater", "residual_block", "residual_block", "tensorflow.greater", "residual_block", "residual_block", "tensorflow.greater", "residual_block", "residual_block", "tensorflow.greater", "resnet.batch_norm", "resnet.batch_norm", "residual_block", "residual_block", "residual_block", "residual_block", "residual_block", "residual_block", "residual_block", "residual_block", "str", "str", "str", "str", "str", "str", "str", "str"], "methods", ["home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.get_residual_layer", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.conv", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.relu", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.global_avg_pooling", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.fully_conneted", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.batch_norm", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.batch_norm"], ["", "def", "pred", "(", "self", ",", "reuse", "=", "tf", ".", "compat", ".", "v1", ".", "AUTO_REUSE", ")", ":", "\n", "        ", "res", "=", "[", "]", "\n", "with", "tf", ".", "variable_scope", "(", "\"plain_network\"", ",", "reuse", "=", "reuse", ")", ":", "\n", "\n", "            ", "if", "self", ".", "layers", ">", "34", ":", "\n", "                ", "residual_block", "=", "resnet", ".", "bottle_resblock", "\n", "", "else", ":", "\n", "                ", "residual_block", "=", "resnet", ".", "resblock", "\n", "\n", "", "residual_list", "=", "resnet", ".", "get_residual_layer", "(", "self", ".", "layers", ")", "\n", "ch", "=", "64", "\n", "x", "=", "self", ".", "x", "\n", "x", "=", "resnet", ".", "conv", "(", "x", ",", "channels", "=", "ch", ",", "kernel", "=", "3", ",", "stride", "=", "1", ",", "scope", "=", "'conv'", ")", "\n", "\n", "for", "i", "in", "range", "(", "residual_list", "[", "0", "]", ")", ":", "\n", "                ", "x", "=", "tf", ".", "cond", "(", "tf", ".", "greater", "(", "self", ".", "is_training", ",", "0", ")", ",", "\n", "lambda", ":", "residual_block", "(", "x", ",", "channels", "=", "ch", ",", "is_training", "=", "True", ",", "downsample", "=", "False", ",", "\n", "scope", "=", "'resblock0_'", "+", "str", "(", "i", ")", ")", ",", "\n", "lambda", ":", "residual_block", "(", "x", ",", "channels", "=", "ch", ",", "is_training", "=", "False", ",", "downsample", "=", "False", ",", "\n", "scope", "=", "'resblock0_'", "+", "str", "(", "i", ")", ")", ")", "\n", "\n", "########################################################################################################", "\n", "\n", "", "x", "=", "tf", ".", "cond", "(", "tf", ".", "greater", "(", "self", ".", "is_training", ",", "0", ")", ",", "\n", "lambda", ":", "residual_block", "(", "x", ",", "channels", "=", "ch", "*", "2", ",", "is_training", "=", "True", ",", "downsample", "=", "True", ",", "\n", "scope", "=", "'resblock1_0'", ")", ",", "\n", "lambda", ":", "residual_block", "(", "x", ",", "channels", "=", "ch", "*", "2", ",", "is_training", "=", "False", ",", "downsample", "=", "True", ",", "\n", "scope", "=", "'resblock1_0'", ")", ")", "\n", "\n", "\n", "for", "i", "in", "range", "(", "1", ",", "residual_list", "[", "1", "]", ")", ":", "\n", "                ", "x", "=", "tf", ".", "cond", "(", "tf", ".", "greater", "(", "self", ".", "is_training", ",", "0", ")", ",", "\n", "lambda", ":", "residual_block", "(", "x", ",", "channels", "=", "ch", "*", "2", ",", "is_training", "=", "True", ",", "downsample", "=", "False", ",", "\n", "scope", "=", "'resblock1_'", "+", "str", "(", "i", ")", ")", ",", "\n", "lambda", ":", "residual_block", "(", "x", ",", "channels", "=", "ch", "*", "2", ",", "is_training", "=", "False", ",", "downsample", "=", "False", ",", "\n", "scope", "=", "'resblock1_'", "+", "str", "(", "i", ")", ")", ")", "\n", "\n", "########################################################################################################", "\n", "\n", "", "x", "=", "tf", ".", "cond", "(", "tf", ".", "greater", "(", "self", ".", "is_training", ",", "0", ")", ",", "\n", "lambda", ":", "residual_block", "(", "x", ",", "channels", "=", "ch", "*", "4", ",", "is_training", "=", "True", ",", "downsample", "=", "True", ",", "\n", "scope", "=", "'resblock2_0'", ")", ",", "\n", "lambda", ":", "residual_block", "(", "x", ",", "channels", "=", "ch", "*", "4", ",", "is_training", "=", "False", ",", "downsample", "=", "True", ",", "\n", "scope", "=", "'resblock2_0'", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "1", ",", "residual_list", "[", "2", "]", ")", ":", "\n", "                ", "x", "=", "tf", ".", "cond", "(", "tf", ".", "greater", "(", "self", ".", "is_training", ",", "0", ")", ",", "\n", "lambda", ":", "residual_block", "(", "x", ",", "channels", "=", "ch", "*", "4", ",", "is_training", "=", "True", ",", "downsample", "=", "False", ",", "\n", "scope", "=", "'resblock2_'", "+", "str", "(", "i", ")", ")", ",", "\n", "lambda", ":", "residual_block", "(", "x", ",", "channels", "=", "ch", "*", "4", ",", "is_training", "=", "False", ",", "downsample", "=", "False", ",", "\n", "scope", "=", "'resblock2_'", "+", "str", "(", "i", ")", ")", ")", "\n", "########################################################################################################", "\n", "\n", "", "x", "=", "tf", ".", "cond", "(", "tf", ".", "greater", "(", "self", ".", "is_training", ",", "0", ")", ",", "\n", "lambda", ":", "residual_block", "(", "x", ",", "channels", "=", "ch", "*", "8", ",", "is_training", "=", "True", ",", "downsample", "=", "True", ",", "\n", "scope", "=", "'resblock_3_0'", ")", ",", "\n", "lambda", ":", "residual_block", "(", "x", ",", "channels", "=", "ch", "*", "8", ",", "is_training", "=", "False", ",", "downsample", "=", "True", ",", "\n", "scope", "=", "'resblock_3_0'", ")", ")", "\n", "\n", "for", "i", "in", "range", "(", "1", ",", "residual_list", "[", "3", "]", ")", ":", "\n", "                ", "x", "=", "tf", ".", "cond", "(", "tf", ".", "greater", "(", "self", ".", "is_training", ",", "0", ")", ",", "\n", "lambda", ":", "residual_block", "(", "x", ",", "channels", "=", "ch", "*", "8", ",", "is_training", "=", "True", ",", "downsample", "=", "False", ",", "\n", "scope", "=", "'resblock_3_'", "+", "str", "(", "i", ")", ")", ",", "\n", "lambda", ":", "residual_block", "(", "x", ",", "channels", "=", "ch", "*", "8", ",", "is_training", "=", "False", ",", "downsample", "=", "False", ",", "\n", "scope", "=", "'resblock_3_'", "+", "str", "(", "i", ")", ")", ")", "\n", "\n", "########################################################################################################", "\n", "\n", "", "x", "=", "tf", ".", "cond", "(", "tf", ".", "greater", "(", "self", ".", "is_training", ",", "0", ")", ",", "\n", "lambda", ":", "resnet", ".", "batch_norm", "(", "x", ",", "True", ",", "scope", "=", "'batch_norm'", ")", ",", "\n", "lambda", ":", "resnet", ".", "batch_norm", "(", "x", ",", "False", ",", "scope", "=", "'batch_norm'", ")", ")", "\n", "x", "=", "resnet", ".", "relu", "(", "x", ")", "\n", "\n", "x", "=", "resnet", ".", "global_avg_pooling", "(", "x", ")", "\n", "x", "=", "resnet", ".", "fully_conneted", "(", "x", ",", "units", "=", "self", ".", "num_class", ",", "scope", "=", "'logit'", ")", "\n", "res", ".", "append", "(", "x", ")", "\n", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.Plain_Resnet.cross_entropy": [[286, 290], ["tensorflow.math.log", "tensorflow.reduce_sum", "tensorflow.nn.softmax"], "methods", ["None"], ["", "", "def", "cross_entropy", "(", "self", ")", ":", "\n", "        ", "log_prob", "=", "tf", ".", "math", ".", "log", "(", "tf", ".", "nn", ".", "softmax", "(", "self", ".", "prediction", "[", "-", "1", "]", ")", "+", "1e-12", ")", "\n", "cross_entropy", "=", "-", "tf", ".", "reduce_sum", "(", "self", ".", "Y", "*", "log_prob", ")", "\n", "return", "cross_entropy", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.Plain_Resnet.optimizer": [[291, 294], ["tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize"], "methods", ["None"], ["", "def", "optimizer", "(", "self", ")", ":", "\n", "        ", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "lr", ",", "self", ".", "b1", ",", "self", ".", "b2", ",", "self", ".", "epsilon", ")", "\n", "return", "optimizer", ".", "minimize", "(", "self", ".", "ce_loss", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.Plain_Resnet.error_rate": [[295, 298], ["tensorflow.not_equal", "tensorflow.reduce_mean", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast"], "methods", ["None"], ["", "def", "error_rate", "(", "self", ")", ":", "\n", "        ", "mistakes", "=", "tf", ".", "not_equal", "(", "tf", ".", "argmax", "(", "self", ".", "Y", ",", "1", ")", ",", "tf", ".", "argmax", "(", "self", ".", "prediction", "[", "-", "1", "]", ",", "1", ")", ")", "\n", "return", "tf", ".", "reduce_mean", "(", "tf", ".", "cast", "(", "mistakes", ",", "tf", ".", "float32", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.EWE_2_conv.__init__": [[301, 331], ["tensorflow.argmax", "functools.partial", "functools.partial", "functools.partial", "functools.partial", "functools.partial", "functools.partial", "models.EWE_2_conv.pred", "models.EWE_2_conv.error_rate", "models.EWE_2_conv.snnl", "models.EWE_2_conv.ce", "models.EWE_2_conv.optimizer", "models.EWE_2_conv.snnl_gradient", "models.EWE_2_conv.ce_gradient"], "methods", ["home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.Plain_LSTM.pred", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.Plain_LSTM.error_rate", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.snnl", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.EWE_2_conv.ce", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.Plain_LSTM.optimizer", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.EWE_LSTM.snnl_gradient", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.EWE_LSTM.ce_gradient"], ["    ", "def", "__init__", "(", "self", ",", "image", ",", "label", ",", "w_label", ",", "bs", ",", "num_class", ",", "lr", ",", "factors", ",", "temperatures", ",", "target", ",", "is_training", ",", "metric", ")", ":", "\n", "        ", "self", ".", "num_class", "=", "num_class", "\n", "self", ".", "batch_size", "=", "bs", "\n", "self", ".", "lr", "=", "lr", "\n", "self", ".", "b1", "=", "0.9", "\n", "self", ".", "b2", "=", "0.99", "\n", "self", ".", "epsilon", "=", "1e-5", "\n", "self", ".", "target", "=", "target", "\n", "self", ".", "x", "=", "image", "\n", "self", ".", "Y", "=", "label", "\n", "self", ".", "w", "=", "w_label", "\n", "self", ".", "y", "=", "tf", ".", "argmax", "(", "self", ".", "Y", ",", "1", ")", "\n", "self", ".", "temp", "=", "temperatures", "\n", "self", ".", "factor_1", "=", "factors", "[", "0", "]", "\n", "self", ".", "factor_2", "=", "factors", "[", "1", "]", "\n", "self", ".", "factor_3", "=", "factors", "[", "2", "]", "\n", "self", ".", "is_training", "=", "is_training", "\n", "self", ".", "snnl_func", "=", "functools", ".", "partial", "(", "snnl", ",", "metric", "=", "metric", ")", "\n", "self", ".", "conv", "=", "functools", ".", "partial", "(", "tf", ".", "layers", ".", "conv2d", ",", "padding", "=", "\"same\"", ",", "activation", "=", "None", ")", "\n", "self", ".", "dropout", "=", "functools", ".", "partial", "(", "tf", ".", "layers", ".", "dropout", ")", "\n", "self", ".", "pool", "=", "functools", ".", "partial", "(", "tf", ".", "layers", ".", "max_pooling2d", ",", "pool_size", "=", "[", "2", ",", "2", "]", ",", "strides", "=", "2", ")", "\n", "self", ".", "fc", "=", "functools", ".", "partial", "(", "tf", ".", "layers", ".", "dense", ")", "\n", "self", ".", "bn", "=", "functools", ".", "partial", "(", "tf", ".", "layers", ".", "batch_normalization", ")", "\n", "self", ".", "prediction", "=", "self", ".", "pred", "(", ")", "\n", "self", ".", "error", "=", "self", ".", "error_rate", "(", ")", "\n", "self", ".", "snnl_loss", "=", "self", ".", "snnl", "(", ")", "\n", "self", ".", "ce_loss", "=", "self", ".", "ce", "(", ")", "\n", "self", ".", "optimize", "=", "self", ".", "optimizer", "(", ")", "\n", "self", ".", "snnl_trigger", "=", "self", ".", "snnl_gradient", "(", ")", "\n", "self", ".", "ce_trigger", "=", "self", ".", "ce_gradient", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.EWE_2_conv.pred": [[332, 349], ["models.EWE_2_conv.conv", "tensorflow.nn.relu", "models.EWE_2_conv.pool", "models.EWE_2_conv.dropout", "models.EWE_2_conv.conv", "tensorflow.nn.relu", "models.EWE_2_conv.pool", "models.EWE_2_conv.dropout", "models.EWE_2_conv.fc", "models.EWE_2_conv.dropout", "tensorflow.nn.relu", "models.EWE_2_conv.fc", "tensorflow.reshape"], "methods", ["home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.conv", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.relu", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.conv", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.relu", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.relu"], ["", "def", "pred", "(", "self", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv", "(", "self", ".", "x", ",", "filters", "=", "32", ",", "kernel_size", "=", "[", "5", ",", "5", "]", ")", "\n", "s1", "=", "x", "\n", "x", "=", "tf", ".", "nn", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "pool", "(", "x", ")", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "x", "=", "self", ".", "conv", "(", "x", ",", "filters", "=", "64", ",", "kernel_size", "=", "[", "3", ",", "3", "]", ")", "\n", "s2", "=", "x", "\n", "x", "=", "tf", ".", "nn", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "pool", "(", "x", ")", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "x", "=", "self", ".", "fc", "(", "tf", ".", "reshape", "(", "x", ",", "[", "self", ".", "batch_size", ",", "-", "1", "]", ")", ",", "units", "=", "128", ",", "activation", "=", "None", ")", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "s3", "=", "x", "\n", "x", "=", "tf", ".", "nn", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "fc", "(", "x", ",", "units", "=", "self", ".", "num_class", ")", "\n", "return", "[", "s1", ",", "s2", ",", "s3", ",", "x", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.EWE_2_conv.snnl": [[350, 363], ["tensorflow.math.divide", "tensorflow.math.divide", "tensorflow.math.divide", "models.EWE_2_conv.snnl_func", "models.EWE_2_conv.snnl_func", "models.EWE_2_conv.snnl_func"], "methods", ["None"], ["", "def", "snnl", "(", "self", ")", ":", "\n", "        ", "x1", "=", "self", ".", "prediction", "[", "0", "]", "\n", "x2", "=", "self", ".", "prediction", "[", "1", "]", "\n", "x3", "=", "self", ".", "prediction", "[", "2", "]", "\n", "w", "=", "self", ".", "w", "\n", "inv_temp_1", "=", "tf", ".", "math", ".", "divide", "(", "100.", ",", "self", ".", "temp", "[", "0", "]", ")", "\n", "inv_temp_2", "=", "tf", ".", "math", ".", "divide", "(", "100.", ",", "self", ".", "temp", "[", "1", "]", ")", "\n", "inv_temp_3", "=", "tf", ".", "math", ".", "divide", "(", "100.", ",", "self", ".", "temp", "[", "2", "]", ")", "\n", "loss1", "=", "self", ".", "snnl_func", "(", "x1", ",", "w", ",", "inv_temp_1", ")", "\n", "loss2", "=", "self", ".", "snnl_func", "(", "x2", ",", "w", ",", "inv_temp_2", ")", "\n", "loss3", "=", "self", ".", "snnl_func", "(", "x3", ",", "w", ",", "inv_temp_3", ")", "\n", "res", "=", "[", "loss1", ",", "loss2", ",", "loss3", "]", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.EWE_2_conv.ce": [[364, 368], ["tensorflow.math.log", "tensorflow.reduce_sum", "tensorflow.nn.softmax"], "methods", ["None"], ["", "def", "ce", "(", "self", ")", ":", "\n", "        ", "log_prob", "=", "tf", ".", "math", ".", "log", "(", "tf", ".", "nn", ".", "softmax", "(", "self", ".", "prediction", "[", "-", "1", "]", ")", "+", "1e-12", ")", "\n", "cross_entropy", "=", "-", "tf", ".", "reduce_sum", "(", "self", ".", "Y", "*", "log_prob", ")", "\n", "return", "cross_entropy", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.EWE_2_conv.optimizer": [[369, 376], ["models.EWE_2_conv.ce", "tensorflow.train.AdamOptimizer", "models.EWE_2_conv.snnl", "tensorflow.cast", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.gradients", "tensorflow.greater", "tensorflow.math.reduce_mean"], "methods", ["home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.EWE_2_conv.ce", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.snnl"], ["", "def", "optimizer", "(", "self", ")", ":", "\n", "        ", "cross_entropy", "=", "self", ".", "ce", "(", ")", "\n", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "lr", ",", "self", ".", "b1", ",", "self", ".", "b2", ",", "self", ".", "epsilon", ")", "\n", "snnl", "=", "self", ".", "snnl", "(", ")", "\n", "soft_nearest_neighbor", "=", "self", ".", "factor_1", "*", "snnl", "[", "0", "]", "+", "self", ".", "factor_2", "*", "snnl", "[", "1", "]", "+", "self", ".", "factor_3", "*", "snnl", "[", "2", "]", "\n", "soft_nearest_neighbor", "=", "tf", ".", "cast", "(", "tf", ".", "greater", "(", "tf", ".", "math", ".", "reduce_mean", "(", "self", ".", "w", ")", ",", "0", ")", ",", "tf", ".", "float32", ")", "*", "soft_nearest_neighbor", "\n", "return", "optimizer", ".", "minimize", "(", "cross_entropy", "-", "soft_nearest_neighbor", ")", ",", "tf", ".", "gradients", "(", "snnl", ",", "self", ".", "temp", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.EWE_2_conv.error_rate": [[377, 380], ["tensorflow.not_equal", "tensorflow.reduce_mean", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast"], "methods", ["None"], ["", "def", "error_rate", "(", "self", ")", ":", "\n", "        ", "mistakes", "=", "tf", ".", "not_equal", "(", "tf", ".", "argmax", "(", "self", ".", "Y", ",", "1", ")", ",", "tf", ".", "argmax", "(", "self", ".", "prediction", "[", "-", "1", "]", ",", "1", ")", ")", "\n", "return", "tf", ".", "reduce_mean", "(", "tf", ".", "cast", "(", "mistakes", ",", "tf", ".", "float32", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.EWE_2_conv.snnl_gradient": [[381, 383], ["tensorflow.gradients"], "methods", ["None"], ["", "def", "snnl_gradient", "(", "self", ")", ":", "\n", "        ", "return", "tf", ".", "gradients", "(", "self", ".", "snnl_loss", "[", "0", "]", "+", "self", ".", "snnl_loss", "[", "1", "]", "+", "self", ".", "snnl_loss", "[", "2", "]", ",", "self", ".", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.EWE_2_conv.ce_gradient": [[384, 386], ["tensorflow.gradients", "tensorflow.unstack"], "methods", ["None"], ["", "def", "ce_gradient", "(", "self", ")", ":", "\n", "        ", "return", "tf", ".", "gradients", "(", "tf", ".", "unstack", "(", "self", ".", "prediction", "[", "-", "1", "]", ",", "axis", "=", "1", ")", "[", "self", ".", "target", "]", ",", "self", ".", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.Plain_2_conv.__init__": [[389, 407], ["tensorflow.argmax", "functools.partial", "functools.partial", "functools.partial", "functools.partial", "functools.partial", "models.Plain_2_conv.pred", "models.Plain_2_conv.error_rate", "models.Plain_2_conv.optimizer"], "methods", ["home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.Plain_LSTM.pred", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.Plain_LSTM.error_rate", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.Plain_LSTM.optimizer"], ["    ", "def", "__init__", "(", "self", ",", "image", ",", "label", ",", "bs", ",", "num_class", ",", "lr", ",", "is_training", ")", ":", "\n", "        ", "self", ".", "num_class", "=", "num_class", "\n", "self", ".", "batch_size", "=", "bs", "\n", "self", ".", "lr", "=", "lr", "\n", "self", ".", "b1", "=", "0.9", "\n", "self", ".", "b2", "=", "0.99", "\n", "self", ".", "epsilon", "=", "1e-5", "\n", "self", ".", "x", "=", "image", "\n", "self", ".", "Y", "=", "label", "\n", "self", ".", "y", "=", "tf", ".", "argmax", "(", "self", ".", "Y", ",", "1", ")", "\n", "self", ".", "conv", "=", "functools", ".", "partial", "(", "tf", ".", "layers", ".", "conv2d", ",", "padding", "=", "\"same\"", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ")", "\n", "self", ".", "dropout", "=", "functools", ".", "partial", "(", "tf", ".", "layers", ".", "dropout", ")", "\n", "self", ".", "pool", "=", "functools", ".", "partial", "(", "tf", ".", "layers", ".", "max_pooling2d", ",", "pool_size", "=", "[", "2", ",", "2", "]", ",", "strides", "=", "2", ")", "\n", "self", ".", "fc", "=", "functools", ".", "partial", "(", "tf", ".", "layers", ".", "dense", ")", "\n", "self", ".", "bn", "=", "functools", ".", "partial", "(", "tf", ".", "layers", ".", "batch_normalization", ")", "\n", "self", ".", "prediction", "=", "self", ".", "pred", "(", ")", "\n", "self", ".", "error", "=", "self", ".", "error_rate", "(", ")", "\n", "self", ".", "optimize", "=", "self", ".", "optimizer", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.Plain_2_conv.pred": [[408, 419], ["models.Plain_2_conv.conv", "models.Plain_2_conv.pool", "models.Plain_2_conv.dropout", "models.Plain_2_conv.conv", "models.Plain_2_conv.pool", "models.Plain_2_conv.dropout", "models.Plain_2_conv.fc", "models.Plain_2_conv.dropout", "models.Plain_2_conv.fc", "tensorflow.reshape"], "methods", ["home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.conv", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.conv"], ["", "def", "pred", "(", "self", ")", ":", "\n", "        ", "conv1", "=", "self", ".", "conv", "(", "self", ".", "x", ",", "filters", "=", "32", ",", "kernel_size", "=", "[", "5", ",", "5", "]", ")", "\n", "x", "=", "self", ".", "pool", "(", "conv1", ")", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "conv2", "=", "self", ".", "conv", "(", "x", ",", "filters", "=", "64", ",", "kernel_size", "=", "[", "3", ",", "3", "]", ")", "\n", "x", "=", "self", ".", "pool", "(", "conv2", ")", "\n", "x", "=", "self", ".", "dropout", "(", "x", ")", "\n", "x", "=", "self", ".", "fc", "(", "tf", ".", "reshape", "(", "x", ",", "[", "self", ".", "batch_size", ",", "-", "1", "]", ")", ",", "units", "=", "128", ",", "activation", "=", "tf", ".", "nn", ".", "relu", ")", "\n", "drop", "=", "self", ".", "dropout", "(", "x", ")", "\n", "x", "=", "self", ".", "fc", "(", "drop", ",", "units", "=", "self", ".", "num_class", ")", "\n", "return", "[", "x", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.Plain_2_conv.optimizer": [[420, 425], ["tensorflow.math.log", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.reduce_sum", "tensorflow.nn.softmax"], "methods", ["None"], ["", "def", "optimizer", "(", "self", ")", ":", "\n", "        ", "log_prob", "=", "tf", ".", "math", ".", "log", "(", "tf", ".", "nn", ".", "softmax", "(", "self", ".", "prediction", "[", "-", "1", "]", ")", "+", "1e-12", ")", "\n", "cross_entropy", "=", "-", "tf", ".", "reduce_sum", "(", "self", ".", "Y", "*", "log_prob", ")", "\n", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "lr", ",", "self", ".", "b1", ",", "self", ".", "b2", ",", "self", ".", "epsilon", ")", "\n", "return", "optimizer", ".", "minimize", "(", "cross_entropy", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.Plain_2_conv.error_rate": [[426, 429], ["tensorflow.not_equal", "tensorflow.reduce_mean", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast"], "methods", ["None"], ["", "def", "error_rate", "(", "self", ")", ":", "\n", "        ", "mistakes", "=", "tf", ".", "not_equal", "(", "tf", ".", "argmax", "(", "self", ".", "Y", ",", "1", ")", ",", "tf", ".", "argmax", "(", "self", ".", "prediction", "[", "-", "1", "]", ",", "1", ")", ")", "\n", "return", "tf", ".", "reduce_mean", "(", "tf", ".", "cast", "(", "mistakes", ",", "tf", ".", "float32", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.EWE_LSTM.__init__": [[432, 458], ["tensorflow.argmax", "tensorflow.contrib.rnn.BasicLSTMCell", "functools.partial", "functools.partial", "models.EWE_LSTM.pred", "models.EWE_LSTM.error_rate", "models.EWE_LSTM.snnl", "models.EWE_LSTM.optimizer", "models.EWE_LSTM.snnl_gradient", "models.EWE_LSTM.ce_gradient"], "methods", ["home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.Plain_LSTM.pred", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.Plain_LSTM.error_rate", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.snnl", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.Plain_LSTM.optimizer", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.EWE_LSTM.snnl_gradient", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.EWE_LSTM.ce_gradient"], ["    ", "def", "__init__", "(", "self", ",", "image", ",", "label", ",", "w_label", ",", "bs", ",", "num_class", ",", "lr", ",", "factors", ",", "temperatures", ",", "target", ",", "is_training", ",", "metric", ")", ":", "\n", "        ", "self", ".", "num_class", "=", "num_class", "\n", "self", ".", "batch_size", "=", "bs", "\n", "self", ".", "lr", "=", "lr", "\n", "self", ".", "b1", "=", "0.9", "\n", "self", ".", "b2", "=", "0.99", "\n", "self", ".", "epsilon", "=", "1e-5", "\n", "self", ".", "target", "=", "target", "\n", "self", ".", "x", "=", "image", "\n", "self", ".", "Y", "=", "label", "\n", "self", ".", "w", "=", "w_label", "\n", "self", ".", "y", "=", "tf", ".", "argmax", "(", "self", ".", "Y", ",", "1", ")", "\n", "self", ".", "cell", "=", "tf", ".", "contrib", ".", "rnn", ".", "BasicLSTMCell", "(", "256", ")", "\n", "self", ".", "temp", "=", "temperatures", "\n", "self", ".", "factor_1", "=", "factors", "[", "0", "]", "\n", "self", ".", "factor_2", "=", "factors", "[", "1", "]", "\n", "self", ".", "factor_3", "=", "factors", "[", "2", "]", "\n", "self", ".", "is_training", "=", "is_training", "\n", "self", ".", "snnl_func", "=", "functools", ".", "partial", "(", "snnl", ",", "metric", "=", "metric", ")", "\n", "self", ".", "fc", "=", "functools", ".", "partial", "(", "tf", ".", "layers", ".", "dense", ")", "\n", "self", ".", "prediction", "=", "self", ".", "pred", "(", ")", "\n", "self", ".", "error", "=", "self", ".", "error_rate", "(", ")", "\n", "self", ".", "snnl_loss", "=", "self", ".", "snnl", "(", ")", "\n", "self", ".", "optimize", "=", "self", ".", "optimizer", "(", ")", "\n", "self", ".", "snnl_trigger", "=", "self", ".", "snnl_gradient", "(", ")", "\n", "self", ".", "ce_trigger", "=", "self", ".", "ce_gradient", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.EWE_LSTM.pred": [[459, 471], ["tensorflow.contrib.rnn.static_rnn", "res.append", "res.append", "models.EWE_LSTM.fc", "res.append", "tensorflow.nn.relu", "models.EWE_LSTM.fc", "res.append", "tensorflow.unstack", "tensorflow.squeeze", "int", "len"], "methods", ["home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.relu"], ["", "def", "pred", "(", "self", ")", ":", "\n", "        ", "res", "=", "[", "]", "\n", "x", ",", "states", "=", "tf", ".", "contrib", ".", "rnn", ".", "static_rnn", "(", "self", ".", "cell", ",", "tf", ".", "unstack", "(", "tf", ".", "squeeze", "(", "self", ".", "x", ")", ",", "axis", "=", "1", ")", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "res", ".", "append", "(", "x", "[", "int", "(", "len", "(", "x", ")", "//", "2", ")", "]", ")", "\n", "x", "=", "x", "[", "-", "1", "]", "\n", "res", ".", "append", "(", "x", ")", "\n", "x", "=", "self", ".", "fc", "(", "x", ",", "units", "=", "128", ")", "\n", "res", ".", "append", "(", "x", ")", "\n", "x", "=", "tf", ".", "nn", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "fc", "(", "x", ",", "units", "=", "self", ".", "num_class", ")", "\n", "res", ".", "append", "(", "x", ")", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.EWE_LSTM.snnl": [[472, 485], ["tensorflow.math.divide", "tensorflow.math.divide", "tensorflow.math.divide", "models.EWE_LSTM.snnl_func", "models.EWE_LSTM.snnl_func", "models.EWE_LSTM.snnl_func"], "methods", ["None"], ["", "def", "snnl", "(", "self", ")", ":", "\n", "        ", "x1", "=", "self", ".", "prediction", "[", "-", "4", "]", "\n", "x2", "=", "self", ".", "prediction", "[", "-", "3", "]", "\n", "x3", "=", "self", ".", "prediction", "[", "-", "2", "]", "\n", "w", "=", "self", ".", "w", "\n", "inv_temp_1", "=", "tf", ".", "math", ".", "divide", "(", "100.", ",", "self", ".", "temp", "[", "0", "]", ")", "\n", "inv_temp_2", "=", "tf", ".", "math", ".", "divide", "(", "100.", ",", "self", ".", "temp", "[", "1", "]", ")", "\n", "inv_temp_3", "=", "tf", ".", "math", ".", "divide", "(", "100.", ",", "self", ".", "temp", "[", "2", "]", ")", "\n", "loss1", "=", "self", ".", "snnl_func", "(", "x1", ",", "w", ",", "inv_temp_1", ")", "\n", "loss2", "=", "self", ".", "snnl_func", "(", "x2", ",", "w", ",", "inv_temp_2", ")", "\n", "loss3", "=", "self", ".", "snnl_func", "(", "x3", ",", "w", ",", "inv_temp_3", ")", "\n", "res", "=", "[", "loss1", ",", "loss2", ",", "loss3", "]", "\n", "return", "res", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.EWE_LSTM.optimizer": [[486, 494], ["tensorflow.math.log", "tensorflow.train.AdamOptimizer", "models.EWE_LSTM.snnl", "tensorflow.reduce_sum", "tensorflow.cast", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.gradients", "tensorflow.nn.softmax", "tensorflow.greater", "tensorflow.math.reduce_mean"], "methods", ["home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.snnl"], ["", "def", "optimizer", "(", "self", ")", ":", "\n", "        ", "log_prob", "=", "tf", ".", "math", ".", "log", "(", "tf", ".", "nn", ".", "softmax", "(", "self", ".", "prediction", "[", "-", "1", "]", ")", "+", "1e-12", ")", "\n", "cross_entropy", "=", "-", "tf", ".", "reduce_sum", "(", "self", ".", "Y", "*", "log_prob", ")", "\n", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "lr", ",", "self", ".", "b1", ",", "self", ".", "b2", ",", "self", ".", "epsilon", ")", "\n", "snnl", "=", "self", ".", "snnl", "(", ")", "\n", "soft_nearest_neighbor", "=", "self", ".", "factor_1", "*", "snnl", "[", "0", "]", "+", "self", ".", "factor_2", "*", "snnl", "[", "1", "]", "+", "self", ".", "factor_3", "*", "snnl", "[", "2", "]", "\n", "soft_nearest_neighbor", "=", "tf", ".", "cast", "(", "tf", ".", "greater", "(", "tf", ".", "math", ".", "reduce_mean", "(", "self", ".", "w", ")", ",", "0", ")", ",", "tf", ".", "float32", ")", "*", "soft_nearest_neighbor", "\n", "return", "optimizer", ".", "minimize", "(", "cross_entropy", "-", "soft_nearest_neighbor", ")", ",", "tf", ".", "gradients", "(", "snnl", ",", "self", ".", "temp", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.EWE_LSTM.error_rate": [[495, 498], ["tensorflow.not_equal", "tensorflow.reduce_mean", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast"], "methods", ["None"], ["", "def", "error_rate", "(", "self", ")", ":", "\n", "        ", "mistakes", "=", "tf", ".", "not_equal", "(", "tf", ".", "argmax", "(", "self", ".", "Y", ",", "1", ")", ",", "tf", ".", "argmax", "(", "self", ".", "prediction", "[", "-", "1", "]", ",", "1", ")", ")", "\n", "return", "tf", ".", "reduce_mean", "(", "tf", ".", "cast", "(", "mistakes", ",", "tf", ".", "float32", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.EWE_LSTM.snnl_gradient": [[499, 501], ["tensorflow.gradients"], "methods", ["None"], ["", "def", "snnl_gradient", "(", "self", ")", ":", "\n", "        ", "return", "tf", ".", "gradients", "(", "self", ".", "snnl_loss", "[", "0", "]", "+", "self", ".", "snnl_loss", "[", "1", "]", "+", "self", ".", "snnl_loss", "[", "2", "]", ",", "self", ".", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.EWE_LSTM.ce_gradient": [[502, 504], ["tensorflow.gradients", "tensorflow.unstack"], "methods", ["None"], ["", "def", "ce_gradient", "(", "self", ")", ":", "\n", "        ", "return", "tf", ".", "gradients", "(", "tf", ".", "unstack", "(", "self", ".", "prediction", "[", "-", "1", "]", ",", "axis", "=", "1", ")", "[", "self", ".", "target", "]", ",", "self", ".", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.Plain_LSTM.__init__": [[507, 522], ["tensorflow.argmax", "tensorflow.contrib.rnn.BasicLSTMCell", "functools.partial", "models.Plain_LSTM.pred", "models.Plain_LSTM.error_rate", "models.Plain_LSTM.optimizer"], "methods", ["home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.Plain_LSTM.pred", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.Plain_LSTM.error_rate", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.Plain_LSTM.optimizer"], ["    ", "def", "__init__", "(", "self", ",", "image", ",", "label", ",", "bs", ",", "num_class", ",", "lr", ",", "is_training", ")", ":", "\n", "        ", "self", ".", "num_class", "=", "num_class", "\n", "self", ".", "batch_size", "=", "bs", "\n", "self", ".", "lr", "=", "lr", "\n", "self", ".", "b1", "=", "0.9", "\n", "self", ".", "b2", "=", "0.99", "\n", "self", ".", "epsilon", "=", "1e-5", "\n", "self", ".", "x", "=", "image", "\n", "self", ".", "Y", "=", "label", "\n", "self", ".", "y", "=", "tf", ".", "argmax", "(", "self", ".", "Y", ",", "1", ")", "\n", "self", ".", "cell", "=", "tf", ".", "contrib", ".", "rnn", ".", "BasicLSTMCell", "(", "256", ")", "\n", "self", ".", "fc", "=", "functools", ".", "partial", "(", "tf", ".", "layers", ".", "dense", ")", "\n", "self", ".", "prediction", "=", "self", ".", "pred", "(", ")", "\n", "self", ".", "error", "=", "self", ".", "error_rate", "(", ")", "\n", "self", ".", "optimize", "=", "self", ".", "optimizer", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.Plain_LSTM.pred": [[523, 530], ["tensorflow.contrib.rnn.static_rnn", "models.Plain_LSTM.fc", "tensorflow.nn.relu", "models.Plain_LSTM.fc", "tensorflow.unstack", "tensorflow.squeeze"], "methods", ["home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.relu"], ["", "def", "pred", "(", "self", ")", ":", "\n", "        ", "x", ",", "states", "=", "tf", ".", "contrib", ".", "rnn", ".", "static_rnn", "(", "self", ".", "cell", ",", "tf", ".", "unstack", "(", "tf", ".", "squeeze", "(", "self", ".", "x", ")", ",", "axis", "=", "1", ")", ",", "dtype", "=", "tf", ".", "float32", ")", "\n", "x", "=", "x", "[", "-", "1", "]", "\n", "x", "=", "self", ".", "fc", "(", "x", ",", "units", "=", "128", ")", "\n", "x", "=", "tf", ".", "nn", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "fc", "(", "x", ",", "units", "=", "self", ".", "num_class", ")", "\n", "return", "[", "x", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.Plain_LSTM.optimizer": [[531, 536], ["tensorflow.math.log", "tensorflow.train.AdamOptimizer", "tensorflow.train.AdamOptimizer.minimize", "tensorflow.reduce_sum", "tensorflow.nn.softmax"], "methods", ["None"], ["", "def", "optimizer", "(", "self", ")", ":", "\n", "        ", "log_prob", "=", "tf", ".", "math", ".", "log", "(", "tf", ".", "nn", ".", "softmax", "(", "self", ".", "prediction", "[", "-", "1", "]", ")", "+", "1e-12", ")", "\n", "cross_entropy", "=", "-", "tf", ".", "reduce_sum", "(", "self", ".", "Y", "*", "log_prob", ")", "\n", "optimizer", "=", "tf", ".", "train", ".", "AdamOptimizer", "(", "self", ".", "lr", ",", "self", ".", "b1", ",", "self", ".", "b2", ",", "self", ".", "epsilon", ")", "\n", "return", "optimizer", ".", "minimize", "(", "cross_entropy", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.Plain_LSTM.error_rate": [[537, 540], ["tensorflow.not_equal", "tensorflow.reduce_mean", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast"], "methods", ["None"], ["", "def", "error_rate", "(", "self", ")", ":", "\n", "        ", "mistakes", "=", "tf", ".", "not_equal", "(", "tf", ".", "argmax", "(", "self", ".", "Y", ",", "1", ")", ",", "tf", ".", "argmax", "(", "self", ".", "prediction", "[", "-", "1", "]", ",", "1", ")", ")", "\n", "return", "tf", ".", "reduce_mean", "(", "tf", ".", "cast", "(", "mistakes", ",", "tf", ".", "float32", ")", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.pairwise_euclid_distance": [[11, 18], ["tensorflow.expand_dims", "tensorflow.expand_dims", "tensorflow.matmul", "tensorflow.tile", "tensorflow.tile", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.pow", "tensorflow.pow", "tensorflow.shape", "tensorflow.shape"], "function", ["None"], ["def", "pairwise_euclid_distance", "(", "A", ")", ":", "\n", "    ", "sqr_norm_A", "=", "tf", ".", "expand_dims", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "pow", "(", "A", ",", "2", ")", ",", "1", ")", ",", "0", ")", "\n", "sqr_norm_B", "=", "tf", ".", "expand_dims", "(", "tf", ".", "reduce_sum", "(", "tf", ".", "pow", "(", "A", ",", "2", ")", ",", "1", ")", ",", "1", ")", "\n", "inner_prod", "=", "tf", ".", "matmul", "(", "A", ",", "A", ",", "transpose_b", "=", "True", ")", "\n", "tile_1", "=", "tf", ".", "tile", "(", "sqr_norm_A", ",", "[", "tf", ".", "shape", "(", "A", ")", "[", "0", "]", ",", "1", "]", ")", "\n", "tile_2", "=", "tf", ".", "tile", "(", "sqr_norm_B", ",", "[", "1", ",", "tf", ".", "shape", "(", "A", ")", "[", "0", "]", "]", ")", "\n", "return", "tile_1", "+", "tile_2", "-", "2", "*", "inner_prod", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.pairwise_cos_distance": [[20, 23], ["tensorflow.nn.l2_normalize", "tensorflow.matmul"], "function", ["None"], ["", "def", "pairwise_cos_distance", "(", "A", ")", ":", "\n", "    ", "normalized_A", "=", "tf", ".", "nn", ".", "l2_normalize", "(", "A", ",", "1", ")", "\n", "return", "1", "-", "tf", ".", "matmul", "(", "normalized_A", ",", "normalized_A", ",", "transpose_b", "=", "True", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.snnl": [[25, 38], ["tensorflow.nn.relu", "tensorflow.cast", "tensorflow.clip_by_value", "tensorflow.squeeze", "models.pairwise_euclid_distance", "tensorflow.reduce_mean", "tensorflow.equal", "tensorflow.reshape", "models.pairwise_cos_distance", "NotImplementedError", "tensorflow.exp", "tensorflow.eye", "tensorflow.math.log", "tensorflow.expand_dims", "tensorflow.reshape", "tensorflow.expand_dims", "tensorflow.shape", "tensorflow.reduce_sum", "tensorflow.reduce_sum", "tensorflow.shape", "tensorflow.shape"], "function", ["home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.relu", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.pairwise_euclid_distance", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.models.pairwise_cos_distance"], ["", "def", "snnl", "(", "x", ",", "y", ",", "t", ",", "metric", "=", "'euclidean'", ")", ":", "\n", "    ", "x", "=", "tf", ".", "nn", ".", "relu", "(", "x", ")", "\n", "same_label_mask", "=", "tf", ".", "cast", "(", "tf", ".", "squeeze", "(", "tf", ".", "equal", "(", "y", ",", "tf", ".", "expand_dims", "(", "y", ",", "1", ")", ")", ")", ",", "tf", ".", "float32", ")", "\n", "if", "metric", "==", "'euclidean'", ":", "\n", "        ", "dist", "=", "pairwise_euclid_distance", "(", "tf", ".", "reshape", "(", "x", ",", "[", "tf", ".", "shape", "(", "x", ")", "[", "0", "]", ",", "-", "1", "]", ")", ")", "\n", "", "elif", "metric", "==", "'cosine'", ":", "\n", "        ", "dist", "=", "pairwise_cos_distance", "(", "tf", ".", "reshape", "(", "x", ",", "[", "tf", ".", "shape", "(", "x", ")", "[", "0", "]", ",", "-", "1", "]", ")", ")", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "(", ")", "\n", "", "exp", "=", "tf", ".", "clip_by_value", "(", "tf", ".", "exp", "(", "-", "(", "dist", "/", "t", ")", ")", "-", "tf", ".", "eye", "(", "tf", ".", "shape", "(", "x", ")", "[", "0", "]", ")", ",", "0", ",", "1", ")", "\n", "prob", "=", "(", "exp", "/", "(", "0.00001", "+", "tf", ".", "expand_dims", "(", "tf", ".", "reduce_sum", "(", "exp", ",", "1", ")", ",", "1", ")", ")", ")", "*", "same_label_mask", "\n", "loss", "=", "-", "tf", ".", "reduce_mean", "(", "tf", ".", "math", ".", "log", "(", "0.00001", "+", "tf", ".", "reduce_sum", "(", "prob", ",", "1", ")", ")", ")", "\n", "return", "loss", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.train.augment_train": [[18, 28], ["tensorflow.image.convert_image_dtype", "tensorflow.image.resize_with_crop_or_pad", "tensorflow.image.random_crop", "tensorflow.image.random_flip_left_right", "tensorflow.random.uniform", "tensorflow.contrib.image.transform", "tensorflow.image.per_image_standardization", "tensorflow.contrib.image.angles_to_projective_transforms"], "function", ["None"], ["def", "augment_train", "(", "image", ")", ":", "\n", "    ", "image", "=", "tf", ".", "image", ".", "convert_image_dtype", "(", "image", ",", "tf", ".", "float32", ")", "\n", "image", "=", "tf", ".", "image", ".", "resize_with_crop_or_pad", "(", "image", ",", "40", ",", "40", ")", "\n", "image", "=", "tf", ".", "image", ".", "random_crop", "(", "image", ",", "size", "=", "[", "image", ".", "shape", "[", "0", "]", ",", "32", ",", "32", ",", "3", "]", ")", "\n", "image", "=", "tf", ".", "image", ".", "random_flip_left_right", "(", "image", ")", "\n", "random_angles", "=", "tf", ".", "random", ".", "uniform", "(", "shape", "=", "(", "image", ".", "shape", "[", "0", "]", ",", ")", ",", "minval", "=", "-", "np", ".", "pi", "/", "8", ",", "maxval", "=", "np", ".", "pi", "/", "8", ")", "\n", "image", "=", "tf", ".", "contrib", ".", "image", ".", "transform", "(", "image", ",", "tf", ".", "contrib", ".", "image", ".", "angles_to_projective_transforms", "(", "\n", "random_angles", ",", "32", ",", "32", ")", ")", "\n", "image", "=", "tf", ".", "image", ".", "per_image_standardization", "(", "image", ")", "\n", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.train.augment_test": [[30, 34], ["tensorflow.image.convert_image_dtype", "tensorflow.image.per_image_standardization"], "function", ["None"], ["", "def", "augment_test", "(", "image", ")", ":", "\n", "    ", "image", "=", "tf", ".", "image", ".", "convert_image_dtype", "(", "image", ",", "tf", ".", "float32", ")", "\n", "image", "=", "tf", ".", "image", ".", "per_image_standardization", "(", "image", ")", "\n", "return", "image", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.train.train": [[36, 339], ["tensorflow.random.set_random_seed", "len", "int", "numpy.concatenate", "tensorflow.keras.utils.to_categorical", "tensorflow.keras.utils.to_categorical", "numpy.arange", "numpy.zeros", "numpy.zeros", "tensorflow.get_default_graph().finalize", "tensorflow.compat.v1.reset_default_graph", "tensorflow.random.set_random_seed", "tensorflow.compat.v1.placeholder", "tensorflow.compat.v1.placeholder", "tensorflow.compat.v1.placeholder", "tensorflow.compat.v1.placeholder", "tensorflow.compat.v1.placeholder", "tensorflow.compat.v1.placeholder", "tensorflow.Session", "tf.Session.run", "range", "numpy.zeros", "range", "range", "range", "numpy.average", "range", "numpy.average", "range", "numpy.concatenate", "tensorflow.get_default_graph().finalize", "tensorflow.compat.v1.reset_default_graph", "tensorflow.random.set_random_seed", "tensorflow.compat.v1.placeholder", "tensorflow.compat.v1.placeholder", "tensorflow.compat.v1.placeholder", "tensorflow.compat.v1.placeholder", "tf.Session.close", "tensorflow.Session", "tf.Session.run", "range", "range", "numpy.average", "range", "numpy.average", "tensorflow.get_default_graph().finalize", "tensorflow.compat.v1.reset_default_graph", "tensorflow.random.set_random_seed", "tensorflow.compat.v1.placeholder", "tensorflow.compat.v1.placeholder", "tensorflow.compat.v1.placeholder", "tensorflow.compat.v1.placeholder", "tf.Session.close", "tensorflow.Session", "tf.Session.run", "range", "range", "numpy.average", "range", "numpy.average", "numpy.unique", "numpy.concatenate", "numpy.zeros", "tf.Session.run", "tensorflow.cond", "ewe_model", "ewe_model", "tensorflow.global_variables_initializer", "range", "range", "numpy.average", "numpy.array", "numpy.unravel_index", "range", "range", "round", "range", "victim_error_list.append", "victim_watermark_acc_list.append", "print", "np.concatenate.append", "tensorflow.cond", "plain_model", "plain_model", "tensorflow.global_variables_initializer", "range", "extracted_error_list.append", "extracted_watermark_acc_list.append", "print", "tensorflow.cond", "plain_model", "plain_model", "tensorflow.global_variables_initializer", "range", "baseline_error_list.append", "baseline_list.append", "print", "numpy.reshape", "NotImplementedError", "numpy.ones", "numpy.zeros", "tensorflow.get_default_graph", "len", "tensorflow.greater", "numpy.random.shuffle", "tf.Session.run", "numpy.concatenate", "trigger_grad.append", "numpy.concatenate", "np.array.argmin", "numpy.concatenate", "numpy.clip", "numpy.clip", "numpy.random.shuffle", "numpy.concatenate", "tf.Session.run", "tf.Session.run", "train.train.validate_watermark"], "function", ["None"], ["", "def", "train", "(", "x_train", ",", "y_train", ",", "x_test", ",", "y_test", ",", "ewe_model", ",", "plain_model", ",", "epochs", ",", "w_epochs", ",", "lr", ",", "n_w_ratio", ",", "factors", ",", "\n", "temperatures", ",", "watermark_source", ",", "watermark_target", ",", "batch_size", ",", "w_lr", ",", "threshold", ",", "maxiter", ",", "shuffle", ",", "temp_lr", ",", "\n", "dataset", ",", "distribution", ",", "verbose", ")", ":", "\n", "    ", "tf", ".", "random", ".", "set_random_seed", "(", "seed", ")", "\n", "\n", "height", "=", "x_train", "[", "0", "]", ".", "shape", "[", "0", "]", "\n", "width", "=", "x_train", "[", "0", "]", ".", "shape", "[", "1", "]", "\n", "try", ":", "\n", "        ", "channels", "=", "x_train", "[", "0", "]", ".", "shape", "[", "2", "]", "\n", "", "except", ":", "\n", "        ", "channels", "=", "1", "\n", "", "num_class", "=", "len", "(", "np", ".", "unique", "(", "y_train", ")", ")", "\n", "half_batch_size", "=", "int", "(", "batch_size", "/", "2", ")", "\n", "\n", "target_data", "=", "x_train", "[", "y_train", "==", "watermark_target", "]", "\n", "\n", "# define the dataset and class to sample watermarked data", "\n", "if", "distribution", "==", "\"in\"", ":", "\n", "        ", "source_data", "=", "x_train", "[", "y_train", "==", "watermark_source", "]", "\n", "", "elif", "distribution", "==", "\"out\"", ":", "\n", "        ", "if", "dataset", "==", "\"mnist\"", ":", "\n", "            ", "w_dataset", "=", "\"fashion\"", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "\"data\"", ",", "f\"{w_dataset}.pkl\"", ")", ",", "'rb'", ")", "as", "f", ":", "\n", "                ", "w_data", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "x_w", ",", "y_w", "=", "w_data", "[", "\"training_images\"", "]", ",", "w_data", "[", "\"training_labels\"", "]", "\n", "", "elif", "dataset", "==", "\"fashion\"", ":", "\n", "            ", "w_dataset", "=", "\"mnist\"", "\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "\"data\"", ",", "f\"{w_dataset}.pkl\"", ")", ",", "'rb'", ")", "as", "f", ":", "\n", "                ", "w_data", "=", "pickle", ".", "load", "(", "f", ")", "\n", "", "x_w", ",", "y_w", "=", "w_data", "[", "\"training_images\"", "]", ",", "w_data", "[", "\"training_labels\"", "]", "\n", "", "elif", "\"cifar\"", "in", "dataset", ":", "\n", "            ", "import", "scipy", ".", "io", "as", "sio", "\n", "w_dataset", "=", "sio", ".", "loadmat", "(", "os", ".", "path", ".", "join", "(", "\"data\"", ",", "\"train_32x32\"", ")", ")", "\n", "x_w", ",", "y_w", "=", "np", ".", "moveaxis", "(", "w_dataset", "[", "'X'", "]", ",", "-", "1", ",", "0", ")", ",", "np", ".", "squeeze", "(", "w_dataset", "[", "'y'", "]", "-", "1", ")", "\n", "", "elif", "dataset", "==", "\"speechcmd\"", ":", "\n", "            ", "x_w", "=", "np", ".", "swapaxes", "(", "np", ".", "load", "(", "os", ".", "path", ".", "join", "(", "r\"data\"", ",", "\"sd_GSCmdV2\"", ",", "'trigger.npy'", ")", ")", ",", "1", ",", "2", ")", "\n", "y_w", "=", "np", ".", "ones", "(", "x_w", ".", "shape", "[", "0", "]", ")", "*", "watermark_source", "\n", "", "else", ":", "\n", "            ", "raise", "NotImplementedError", "(", ")", "\n", "\n", "", "x_w", "=", "np", ".", "reshape", "(", "x_w", "/", "255", ",", "[", "-", "1", ",", "height", ",", "width", ",", "channels", "]", ")", "\n", "source_data", "=", "x_w", "[", "y_w", "==", "watermark_source", "]", "\n", "", "else", ":", "\n", "        ", "raise", "NotImplementedError", "(", "\"Distribution could only be either \\'in\\' or \\'out\\'.\"", ")", "\n", "\n", "# make sure watermarked data is the same size as target data", "\n", "", "trigger", "=", "np", ".", "concatenate", "(", "[", "source_data", "]", "*", "(", "target_data", ".", "shape", "[", "0", "]", "//", "source_data", ".", "shape", "[", "0", "]", "+", "1", ")", ",", "0", ")", "[", "\n", ":", "target_data", ".", "shape", "[", "0", "]", "]", "\n", "\n", "w_label", "=", "np", ".", "concatenate", "(", "[", "np", ".", "ones", "(", "half_batch_size", ")", ",", "np", ".", "zeros", "(", "half_batch_size", ")", "]", ",", "0", ")", "\n", "y_train", "=", "tf", ".", "keras", ".", "utils", ".", "to_categorical", "(", "y_train", ",", "num_class", ")", "\n", "y_test", "=", "tf", ".", "keras", ".", "utils", ".", "to_categorical", "(", "y_test", ",", "num_class", ")", "\n", "index", "=", "np", ".", "arange", "(", "y_train", ".", "shape", "[", "0", "]", ")", "\n", "w_0", "=", "np", ".", "zeros", "(", "[", "batch_size", "]", ")", "\n", "trigger_label", "=", "np", ".", "zeros", "(", "[", "batch_size", ",", "num_class", "]", ")", "\n", "trigger_label", "[", ":", ",", "watermark_target", "]", "=", "1", "\n", "\n", "num_batch", "=", "x_train", ".", "shape", "[", "0", "]", "//", "batch_size", "\n", "w_num_batch", "=", "target_data", ".", "shape", "[", "0", "]", "//", "batch_size", "*", "2", "\n", "num_test", "=", "x_test", ".", "shape", "[", "0", "]", "//", "batch_size", "\n", "\n", "def", "validate_watermark", "(", "model_name", ",", "trigger_set", ",", "label", ")", ":", "\n", "        ", "labels", "=", "np", ".", "zeros", "(", "[", "batch_size", ",", "num_class", "]", ")", "\n", "labels", "[", ":", ",", "label", "]", "=", "1", "\n", "if", "trigger_set", ".", "shape", "[", "0", "]", "<", "batch_size", ":", "\n", "            ", "trigger_data", "=", "np", ".", "concatenate", "(", "[", "trigger_set", ",", "trigger_set", "]", ",", "0", ")", "[", ":", "batch_size", "]", "\n", "", "else", ":", "\n", "            ", "trigger_data", "=", "trigger_set", "\n", "", "error", "=", "sess", ".", "run", "(", "model_name", ".", "error", ",", "{", "x", ":", "trigger_data", ",", "y", ":", "labels", ",", "is_training", ":", "0", ",", "is_augment", ":", "0", "}", ")", "\n", "return", "1", "-", "error", "\n", "\n", "", "tf", ".", "get_default_graph", "(", ")", ".", "finalize", "(", ")", "\n", "tf", ".", "compat", ".", "v1", ".", "reset_default_graph", "(", ")", "\n", "tf", ".", "random", ".", "set_random_seed", "(", "seed", ")", "\n", "x", "=", "tf", ".", "compat", ".", "v1", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "batch_size", ",", "height", ",", "width", ",", "channels", "]", ",", "name", "=", "\"input\"", ")", "\n", "y", "=", "tf", ".", "compat", ".", "v1", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "batch_size", ",", "num_class", "]", ")", "\n", "w", "=", "tf", ".", "compat", ".", "v1", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "batch_size", "]", ")", "\n", "t", "=", "tf", ".", "compat", ".", "v1", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "len", "(", "temperatures", ")", "]", ")", "\n", "is_training", "=", "tf", ".", "compat", ".", "v1", ".", "placeholder", "(", "tf", ".", "float32", ")", "\n", "is_augment", "=", "tf", ".", "compat", ".", "v1", ".", "placeholder", "(", "tf", ".", "float32", ")", "\n", "\n", "if", "\"cifar\"", "in", "dataset", ":", "\n", "        ", "augmented_x", "=", "tf", ".", "cond", "(", "tf", ".", "greater", "(", "is_augment", ",", "0", ")", ",", "\n", "lambda", ":", "augment_train", "(", "x", ")", ",", "\n", "lambda", ":", "augment_test", "(", "x", ")", ")", "\n", "model", "=", "ewe_model", "(", "augmented_x", ",", "y", ",", "w", ",", "batch_size", ",", "num_class", ",", "lr", ",", "factors", ",", "t", ",", "watermark_target", ",", "is_training", ")", "\n", "", "else", ":", "\n", "        ", "model", "=", "ewe_model", "(", "x", ",", "y", ",", "w", ",", "batch_size", ",", "num_class", ",", "lr", ",", "factors", ",", "t", ",", "watermark_target", ",", "is_training", ")", "\n", "\n", "", "sess", "=", "tf", ".", "Session", "(", ")", "\n", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "epochs", ")", ":", "\n", "        ", "if", "shuffle", ":", "\n", "            ", "np", ".", "random", ".", "shuffle", "(", "index", ")", "\n", "x_train", "=", "x_train", "[", "index", "]", "\n", "y_train", "=", "y_train", "[", "index", "]", "\n", "", "for", "batch", "in", "range", "(", "num_batch", ")", ":", "\n", "            ", "sess", ".", "run", "(", "model", ".", "optimize", ",", "{", "x", ":", "x_train", "[", "batch", "*", "batch_size", ":", "(", "batch", "+", "1", ")", "*", "batch_size", "]", ",", "\n", "y", ":", "y_train", "[", "batch", "*", "batch_size", ":", "(", "batch", "+", "1", ")", "*", "batch_size", "]", ",", "\n", "t", ":", "temperatures", ",", "\n", "w", ":", "w_0", ",", "is_training", ":", "1", ",", "is_augment", ":", "1", "}", ")", "\n", "\n", "", "", "if", "distribution", "==", "\"in\"", ":", "\n", "        ", "trigger_grad", "=", "[", "]", "\n", "for", "batch", "in", "range", "(", "w_num_batch", ")", ":", "\n", "            ", "batch_data", "=", "np", ".", "concatenate", "(", "[", "trigger", "[", "batch", "*", "half_batch_size", ":", "(", "batch", "+", "1", ")", "*", "half_batch_size", "]", ",", "\n", "target_data", "[", "batch", "*", "half_batch_size", ":", "(", "batch", "+", "1", ")", "*", "half_batch_size", "]", "]", ",", "0", ")", "\n", "grad", "=", "sess", ".", "run", "(", "model", ".", "snnl_trigger", ",", "{", "x", ":", "batch_data", ",", "w", ":", "w_label", ",", "t", ":", "temperatures", ",", "is_training", ":", "0", ",", "\n", "is_augment", ":", "0", "}", ")", "[", "0", "]", "[", ":", "half_batch_size", "]", "\n", "trigger_grad", ".", "append", "(", "grad", ")", "\n", "", "avg_grad", "=", "np", ".", "average", "(", "np", ".", "concatenate", "(", "trigger_grad", ")", ",", "0", ")", "\n", "down_sample", "=", "np", ".", "array", "(", "[", "[", "np", ".", "sum", "(", "avg_grad", "[", "i", ":", "i", "+", "3", ",", "j", ":", "j", "+", "3", "]", ")", "for", "i", "in", "range", "(", "height", "-", "2", ")", "]", "for", "j", "in", "range", "(", "width", "-", "2", ")", "]", ")", "\n", "w_pos", "=", "np", ".", "unravel_index", "(", "down_sample", ".", "argmin", "(", ")", ",", "down_sample", ".", "shape", ")", "\n", "trigger", "[", ":", ",", "w_pos", "[", "0", "]", ":", "w_pos", "[", "0", "]", "+", "3", ",", "w_pos", "[", "1", "]", ":", "w_pos", "[", "1", "]", "+", "3", ",", "0", "]", "=", "1", "\n", "", "else", ":", "\n", "        ", "w_pos", "=", "[", "-", "1", ",", "-", "1", "]", "\n", "\n", "", "step_list", "=", "np", ".", "zeros", "(", "[", "w_num_batch", "]", ")", "\n", "snnl_change", "=", "[", "]", "\n", "for", "batch", "in", "range", "(", "w_num_batch", ")", ":", "\n", "        ", "current_trigger", "=", "trigger", "[", "batch", "*", "half_batch_size", ":", "(", "batch", "+", "1", ")", "*", "half_batch_size", "]", "\n", "for", "epoch", "in", "range", "(", "maxiter", ")", ":", "\n", "            ", "while", "validate_watermark", "(", "model", ",", "current_trigger", ",", "watermark_target", ")", ">", "threshold", "and", "step_list", "[", "batch", "]", "<", "50", ":", "\n", "                ", "step_list", "[", "batch", "]", "+=", "1", "\n", "grad", "=", "sess", ".", "run", "(", "model", ".", "ce_trigger", ",", "{", "x", ":", "np", ".", "concatenate", "(", "[", "current_trigger", ",", "current_trigger", "]", ",", "0", ")", ",", "w", ":", "w_label", ",", "\n", "is_training", ":", "0", ",", "is_augment", ":", "0", "}", ")", "[", "0", "]", "\n", "current_trigger", "=", "np", ".", "clip", "(", "current_trigger", "-", "w_lr", "*", "np", ".", "sign", "(", "grad", "[", ":", "half_batch_size", "]", ")", ",", "0", ",", "1", ")", "\n", "\n", "", "batch_data", "=", "np", ".", "concatenate", "(", "[", "current_trigger", ",", "\n", "target_data", "[", "batch", "*", "half_batch_size", ":", "(", "batch", "+", "1", ")", "*", "half_batch_size", "]", "]", ",", "0", ")", "\n", "\n", "grad", "=", "sess", ".", "run", "(", "model", ".", "snnl_trigger", ",", "{", "x", ":", "batch_data", ",", "w", ":", "w_label", ",", "\n", "t", ":", "temperatures", ",", "\n", "is_training", ":", "0", ",", "is_augment", ":", "0", "}", ")", "[", "0", "]", "\n", "\n", "current_trigger", "=", "np", ".", "clip", "(", "current_trigger", "+", "w_lr", "*", "np", ".", "sign", "(", "grad", "[", ":", "half_batch_size", "]", ")", ",", "0", ",", "1", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "5", ")", ":", "\n", "            ", "grad", "=", "sess", ".", "run", "(", "model", ".", "ce_trigger", ",", "\n", "{", "x", ":", "np", ".", "concatenate", "(", "[", "current_trigger", ",", "current_trigger", "]", ",", "0", ")", ",", "w", ":", "w_label", ",", "is_training", ":", "0", ",", "\n", "is_augment", ":", "0", "}", ")", "[", "0", "]", "\n", "current_trigger", "=", "np", ".", "clip", "(", "current_trigger", "-", "w_lr", "*", "np", ".", "sign", "(", "grad", "[", ":", "half_batch_size", "]", ")", ",", "0", ",", "1", ")", "\n", "", "trigger", "[", "batch", "*", "half_batch_size", ":", "(", "batch", "+", "1", ")", "*", "half_batch_size", "]", "=", "current_trigger", "\n", "\n", "", "for", "epoch", "in", "range", "(", "round", "(", "(", "w_epochs", "*", "num_batch", "/", "w_num_batch", ")", ")", ")", ":", "\n", "        ", "if", "shuffle", ":", "\n", "            ", "np", ".", "random", ".", "shuffle", "(", "index", ")", "\n", "x_train", "=", "x_train", "[", "index", "]", "\n", "y_train", "=", "y_train", "[", "index", "]", "\n", "", "j", "=", "0", "\n", "normal", "=", "0", "\n", "for", "batch", "in", "range", "(", "w_num_batch", ")", ":", "\n", "            ", "if", "n_w_ratio", ">=", "1", ":", "\n", "                ", "for", "i", "in", "range", "(", "int", "(", "n_w_ratio", ")", ")", ":", "\n", "                    ", "if", "j", ">=", "num_batch", ":", "\n", "                        ", "j", "=", "0", "\n", "", "sess", ".", "run", "(", "model", ".", "optimize", ",", "{", "x", ":", "x_train", "[", "j", "*", "batch_size", ":", "(", "j", "+", "1", ")", "*", "batch_size", "]", ",", "\n", "y", ":", "y_train", "[", "j", "*", "batch_size", ":", "(", "j", "+", "1", ")", "*", "batch_size", "]", ",", "w", ":", "w_0", ",", "\n", "t", ":", "temperatures", ",", "\n", "is_training", ":", "1", ",", "is_augment", ":", "1", "}", ")", "\n", "j", "+=", "1", "\n", "normal", "+=", "1", "\n", "", "", "if", "n_w_ratio", ">", "0", "and", "n_w_ratio", "%", "1", "!=", "0", "and", "n_w_ratio", "*", "batch", ">=", "j", ":", "\n", "                ", "if", "j", ">=", "num_batch", ":", "\n", "                    ", "j", "=", "0", "\n", "", "sess", ".", "run", "(", "model", ".", "optimize", ",", "{", "x", ":", "x_train", "[", "j", "*", "batch_size", ":", "(", "j", "+", "1", ")", "*", "batch_size", "]", ",", "\n", "y", ":", "y_train", "[", "j", "*", "batch_size", ":", "(", "j", "+", "1", ")", "*", "batch_size", "]", ",", "w", ":", "w_0", ",", "\n", "t", ":", "temperatures", ",", "\n", "is_training", ":", "1", ",", "is_augment", ":", "1", "}", ")", "\n", "j", "+=", "1", "\n", "normal", "+=", "1", "\n", "", "batch_data", "=", "np", ".", "concatenate", "(", "[", "trigger", "[", "batch", "*", "half_batch_size", ":", "(", "batch", "+", "1", ")", "*", "half_batch_size", "]", ",", "\n", "target_data", "[", "batch", "*", "half_batch_size", ":", "(", "batch", "+", "1", ")", "*", "half_batch_size", "]", "]", ",", "0", ")", "\n", "\n", "_", ",", "temp_grad", "=", "sess", ".", "run", "(", "model", ".", "optimize", ",", "{", "x", ":", "batch_data", ",", "y", ":", "trigger_label", ",", "w", ":", "w_label", ",", "t", ":", "temperatures", ",", "\n", "is_training", ":", "1", ",", "is_augment", ":", "0", "}", ")", "\n", "temperatures", "-=", "temp_lr", "*", "temp_grad", "[", "0", "]", "\n", "\n", "", "", "victim_error_list", "=", "[", "]", "\n", "for", "batch", "in", "range", "(", "num_test", ")", ":", "\n", "        ", "victim_error_list", ".", "append", "(", "sess", ".", "run", "(", "model", ".", "error", ",", "{", "x", ":", "x_test", "[", "batch", "*", "batch_size", ":", "(", "batch", "+", "1", ")", "*", "batch_size", "]", ",", "\n", "y", ":", "y_test", "[", "batch", "*", "batch_size", ":", "(", "batch", "+", "1", ")", "*", "batch_size", "]", ",", "\n", "is_training", ":", "0", ",", "is_augment", ":", "0", "}", ")", ")", "\n", "", "victim_error", "=", "np", ".", "average", "(", "victim_error_list", ")", "\n", "\n", "victim_watermark_acc_list", "=", "[", "]", "\n", "for", "batch", "in", "range", "(", "w_num_batch", ")", ":", "\n", "        ", "victim_watermark_acc_list", ".", "append", "(", "validate_watermark", "(", "\n", "model", ",", "trigger", "[", "batch", "*", "half_batch_size", ":", "(", "batch", "+", "1", ")", "*", "half_batch_size", "]", ",", "watermark_target", ")", ")", "\n", "", "victim_watermark_acc", "=", "np", ".", "average", "(", "victim_watermark_acc_list", ")", "\n", "if", "verbose", ":", "\n", "        ", "print", "(", "f\"Victim Model || validation accuracy: {1 - victim_error}, \"", "\n", "f\"watermark success: {victim_watermark_acc}\"", ")", "\n", "\n", "# Attack", "\n", "", "extracted_label", "=", "[", "]", "\n", "for", "batch", "in", "range", "(", "num_batch", ")", ":", "\n", "        ", "output", "=", "sess", ".", "run", "(", "model", ".", "prediction", ",", "{", "x", ":", "x_train", "[", "batch", "*", "batch_size", ":", "(", "batch", "+", "1", ")", "*", "batch_size", "]", ",", "is_training", ":", "0", ",", "\n", "is_augment", ":", "0", "}", ")", "[", "-", "1", "]", "\n", "extracted_label", ".", "append", "(", "output", "==", "np", ".", "max", "(", "output", ",", "1", ",", "keepdims", "=", "True", ")", ")", "\n", "", "extracted_label", "=", "np", ".", "concatenate", "(", "extracted_label", ",", "0", ")", "\n", "extracted_data", "=", "x_train", "[", ":", "extracted_label", ".", "shape", "[", "0", "]", "]", "\n", "\n", "tf", ".", "get_default_graph", "(", ")", ".", "finalize", "(", ")", "\n", "tf", ".", "compat", ".", "v1", ".", "reset_default_graph", "(", ")", "\n", "tf", ".", "random", ".", "set_random_seed", "(", "seed", ")", "\n", "x", "=", "tf", ".", "compat", ".", "v1", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "batch_size", ",", "height", ",", "width", ",", "channels", "]", ",", "name", "=", "\"input\"", ")", "\n", "y", "=", "tf", ".", "compat", ".", "v1", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "batch_size", ",", "num_class", "]", ")", "\n", "is_training", "=", "tf", ".", "compat", ".", "v1", ".", "placeholder", "(", "tf", ".", "float32", ")", "\n", "is_augment", "=", "tf", ".", "compat", ".", "v1", ".", "placeholder", "(", "tf", ".", "float32", ")", "\n", "\n", "if", "\"cifar\"", "in", "dataset", ":", "\n", "        ", "augmented_x", "=", "tf", ".", "cond", "(", "tf", ".", "greater", "(", "is_augment", ",", "0", ")", ",", "\n", "lambda", ":", "augment_train", "(", "x", ")", ",", "\n", "lambda", ":", "augment_test", "(", "x", ")", ")", "\n", "model", "=", "plain_model", "(", "augmented_x", ",", "y", ",", "batch_size", ",", "num_class", ",", "lr", ",", "is_training", ")", "\n", "", "else", ":", "\n", "        ", "model", "=", "plain_model", "(", "x", ",", "y", ",", "batch_size", ",", "num_class", ",", "lr", ",", "is_training", ")", "\n", "\n", "", "sess", ".", "close", "(", ")", "\n", "sess", "=", "tf", ".", "Session", "(", ")", "\n", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "epochs", "+", "w_epochs", ")", ":", "\n", "        ", "if", "shuffle", ":", "\n", "            ", "np", ".", "random", ".", "shuffle", "(", "index", ")", "\n", "x_train", "=", "x_train", "[", "index", "]", "\n", "y_train", "=", "y_train", "[", "index", "]", "\n", "", "for", "batch", "in", "range", "(", "num_batch", ")", ":", "\n", "            ", "sess", ".", "run", "(", "model", ".", "optimize", ",", "{", "x", ":", "extracted_data", "[", "batch", "*", "batch_size", ":", "(", "batch", "+", "1", ")", "*", "batch_size", "]", ",", "\n", "y", ":", "extracted_label", "[", "batch", "*", "batch_size", ":", "(", "batch", "+", "1", ")", "*", "batch_size", "]", ",", "\n", "is_training", ":", "1", ",", "is_augment", ":", "1", "}", ")", "\n", "\n", "", "", "extracted_error_list", "=", "[", "]", "\n", "for", "batch", "in", "range", "(", "num_test", ")", ":", "\n", "        ", "true_label", "=", "y_test", "[", "batch", "*", "batch_size", ":", "(", "batch", "+", "1", ")", "*", "batch_size", "]", "\n", "extracted_error_list", ".", "append", "(", "\n", "sess", ".", "run", "(", "model", ".", "error", ",", "{", "x", ":", "x_test", "[", "batch", "*", "batch_size", ":", "(", "batch", "+", "1", ")", "*", "batch_size", "]", ",", "y", ":", "true_label", ",", "\n", "is_training", ":", "0", ",", "is_augment", ":", "0", "}", ")", ")", "\n", "", "extracted_error", "=", "np", ".", "average", "(", "extracted_error_list", ")", "\n", "\n", "extracted_watermark_acc_list", "=", "[", "]", "\n", "for", "batch", "in", "range", "(", "w_num_batch", ")", ":", "\n", "        ", "extracted_watermark_acc_list", ".", "append", "(", "validate_watermark", "(", "\n", "model", ",", "trigger", "[", "batch", "*", "half_batch_size", ":", "(", "batch", "+", "1", ")", "*", "half_batch_size", "]", ",", "watermark_target", ")", ")", "\n", "", "extracted_watermark_acc", "=", "np", ".", "average", "(", "extracted_watermark_acc_list", ")", "\n", "if", "verbose", ":", "\n", "        ", "print", "(", "f\"Extracted Model || validation accuracy: {1 - extracted_error},\"", "\n", "f\" watermark success: {extracted_watermark_acc}\"", ")", "\n", "\n", "\n", "# Clean model for comparison", "\n", "", "tf", ".", "get_default_graph", "(", ")", ".", "finalize", "(", ")", "\n", "tf", ".", "compat", ".", "v1", ".", "reset_default_graph", "(", ")", "\n", "tf", ".", "random", ".", "set_random_seed", "(", "seed", ")", "\n", "x", "=", "tf", ".", "compat", ".", "v1", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "batch_size", ",", "height", ",", "width", ",", "channels", "]", ",", "name", "=", "\"input\"", ")", "\n", "y", "=", "tf", ".", "compat", ".", "v1", ".", "placeholder", "(", "tf", ".", "float32", ",", "[", "batch_size", ",", "num_class", "]", ")", "\n", "is_training", "=", "tf", ".", "compat", ".", "v1", ".", "placeholder", "(", "tf", ".", "float32", ")", "\n", "is_augment", "=", "tf", ".", "compat", ".", "v1", ".", "placeholder", "(", "tf", ".", "float32", ")", "\n", "\n", "if", "\"cifar\"", "in", "dataset", ":", "\n", "        ", "augmented_x", "=", "tf", ".", "cond", "(", "tf", ".", "greater", "(", "is_augment", ",", "0", ")", ",", "\n", "lambda", ":", "augment_train", "(", "x", ")", ",", "\n", "lambda", ":", "augment_test", "(", "x", ")", ")", "\n", "model", "=", "plain_model", "(", "augmented_x", ",", "y", ",", "batch_size", ",", "num_class", ",", "lr", ",", "is_training", ")", "\n", "", "else", ":", "\n", "        ", "model", "=", "plain_model", "(", "x", ",", "y", ",", "batch_size", ",", "num_class", ",", "lr", ",", "is_training", ")", "\n", "\n", "", "sess", ".", "close", "(", ")", "\n", "sess", "=", "tf", ".", "Session", "(", ")", "\n", "sess", ".", "run", "(", "tf", ".", "global_variables_initializer", "(", ")", ")", "\n", "\n", "for", "epoch", "in", "range", "(", "epochs", "+", "w_epochs", ")", ":", "\n", "        ", "if", "shuffle", ":", "\n", "            ", "np", ".", "random", ".", "shuffle", "(", "index", ")", "\n", "x_train", "=", "x_train", "[", "index", "]", "\n", "y_train", "=", "y_train", "[", "index", "]", "\n", "", "for", "batch", "in", "range", "(", "num_batch", ")", ":", "\n", "            ", "sess", ".", "run", "(", "model", ".", "optimize", ",", "{", "x", ":", "x_train", "[", "batch", "*", "batch_size", ":", "(", "batch", "+", "1", ")", "*", "batch_size", "]", ",", "\n", "y", ":", "y_train", "[", "batch", "*", "batch_size", ":", "(", "batch", "+", "1", ")", "*", "batch_size", "]", ",", "\n", "is_training", ":", "1", ",", "is_augment", ":", "1", "}", ")", "\n", "\n", "", "", "baseline_error_list", "=", "[", "]", "\n", "for", "batch", "in", "range", "(", "num_test", ")", ":", "\n", "        ", "baseline_error_list", ".", "append", "(", "sess", ".", "run", "(", "model", ".", "error", ",", "{", "x", ":", "x_test", "[", "batch", "*", "batch_size", ":", "(", "batch", "+", "1", ")", "*", "batch_size", "]", ",", "\n", "y", ":", "y_test", "[", "batch", "*", "batch_size", ":", "(", "batch", "+", "1", ")", "*", "batch_size", "]", ",", "\n", "is_training", ":", "0", ",", "is_augment", ":", "0", "}", ")", ")", "\n", "", "baseline_error", "=", "np", ".", "average", "(", "baseline_error_list", ")", "\n", "\n", "baseline_list", "=", "[", "]", "\n", "for", "batch", "in", "range", "(", "w_num_batch", ")", ":", "\n", "        ", "baseline_list", ".", "append", "(", "validate_watermark", "(", "\n", "model", ",", "trigger", "[", "batch", "*", "half_batch_size", ":", "(", "batch", "+", "1", ")", "*", "half_batch_size", "]", ",", "watermark_target", ")", ")", "\n", "", "baseline_watermark", "=", "np", ".", "average", "(", "baseline_list", ")", "\n", "\n", "if", "verbose", ":", "\n", "        ", "print", "(", "f\"Clean Model || validation accuracy: {1 - baseline_error}, \"", "\n", "f\"watermark success: {baseline_watermark}\"", ")", "\n", "\n", "\n", "", "return", "1", "-", "victim_error", ",", "victim_watermark_acc", ",", "1", "-", "extracted_error", ",", "extracted_watermark_acc", ",", "1", "-", "baseline_error", ",", "baseline_watermark", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.conv": [[21, 29], ["tensorflow.variable_scope", "tensorflow.layers.conv2d"], "function", ["None"], ["def", "conv", "(", "x", ",", "channels", ",", "kernel", "=", "4", ",", "stride", "=", "2", ",", "padding", "=", "'SAME'", ",", "use_bias", "=", "True", ",", "scope", "=", "'conv_0'", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "scope", ")", ":", "\n", "        ", "x", "=", "tf", ".", "layers", ".", "conv2d", "(", "inputs", "=", "x", ",", "filters", "=", "channels", ",", "\n", "kernel_size", "=", "kernel", ",", "kernel_initializer", "=", "weight_init", ",", "\n", "kernel_regularizer", "=", "weight_regularizer", ",", "\n", "strides", "=", "stride", ",", "use_bias", "=", "use_bias", ",", "padding", "=", "padding", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.fully_conneted": [[30, 36], ["tensorflow.variable_scope", "resnet.flatten", "tensorflow.layers.dense"], "function", ["home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.flatten"], ["", "", "def", "fully_conneted", "(", "x", ",", "units", ",", "use_bias", "=", "True", ",", "scope", "=", "'fully_0'", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "scope", ")", ":", "\n", "        ", "x", "=", "flatten", "(", "x", ")", "\n", "x", "=", "tf", ".", "layers", ".", "dense", "(", "x", ",", "units", "=", "units", ",", "kernel_initializer", "=", "weight_init", ",", "kernel_regularizer", "=", "weight_regularizer", ",", "use_bias", "=", "use_bias", ")", "\n", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.resblock": [[37, 56], ["tensorflow.variable_scope", "resnet.batch_norm", "resnet.relu", "resnet.batch_norm", "resnet.relu", "resnet.conv", "resnet.conv", "resnet.conv", "resnet.conv"], "function", ["home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.batch_norm", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.relu", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.batch_norm", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.relu", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.conv", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.conv", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.conv", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.conv"], ["", "", "def", "resblock", "(", "x_init", ",", "channels", ",", "is_training", "=", "True", ",", "use_bias", "=", "True", ",", "downsample", "=", "False", ",", "scope", "=", "'resblock'", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "scope", ")", ":", "\n", "\n", "        ", "x", "=", "batch_norm", "(", "x_init", ",", "is_training", ",", "scope", "=", "'batch_norm_0'", ")", "\n", "x", "=", "relu", "(", "x", ")", "\n", "\n", "\n", "if", "downsample", ":", "\n", "            ", "x", "=", "conv", "(", "x", ",", "channels", ",", "kernel", "=", "3", ",", "stride", "=", "2", ",", "use_bias", "=", "use_bias", ",", "scope", "=", "'conv_0'", ")", "\n", "x_init", "=", "conv", "(", "x_init", ",", "channels", ",", "kernel", "=", "1", ",", "stride", "=", "2", ",", "use_bias", "=", "use_bias", ",", "scope", "=", "'conv_init'", ")", "\n", "\n", "", "else", ":", "\n", "            ", "x", "=", "conv", "(", "x", ",", "channels", ",", "kernel", "=", "3", ",", "stride", "=", "1", ",", "use_bias", "=", "use_bias", ",", "scope", "=", "'conv_0'", ")", "\n", "\n", "", "x", "=", "batch_norm", "(", "x", ",", "is_training", ",", "scope", "=", "'batch_norm_1'", ")", "\n", "x", "=", "relu", "(", "x", ")", "\n", "x", "=", "conv", "(", "x", ",", "channels", ",", "kernel", "=", "3", ",", "stride", "=", "1", ",", "use_bias", "=", "use_bias", ",", "scope", "=", "'conv_1'", ")", "\n", "\n", "return", "x", "+", "x_init", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.non_resblock": [[58, 72], ["tensorflow.variable_scope", "resnet.batch_norm", "resnet.relu", "resnet.conv", "resnet.conv"], "function", ["home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.batch_norm", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.relu", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.conv", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.conv"], ["", "", "def", "non_resblock", "(", "x_init", ",", "channels", ",", "is_training", "=", "True", ",", "use_bias", "=", "True", ",", "downsample", "=", "False", ",", "scope", "=", "'non_resblock'", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "scope", ")", ":", "\n", "\n", "        ", "x", "=", "batch_norm", "(", "x_init", ",", "is_training", ",", "scope", "=", "'batch_norm_0'", ")", "\n", "x", "=", "relu", "(", "x", ")", "\n", "\n", "\n", "if", "downsample", ":", "\n", "            ", "x", "=", "conv", "(", "x", ",", "channels", ",", "kernel", "=", "3", ",", "stride", "=", "2", ",", "use_bias", "=", "use_bias", ",", "scope", "=", "'conv_0'", ")", "\n", "\n", "", "else", ":", "\n", "            ", "x", "=", "conv", "(", "x", ",", "channels", ",", "kernel", "=", "3", ",", "stride", "=", "1", ",", "use_bias", "=", "use_bias", ",", "scope", "=", "'conv_0'", ")", "\n", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.bottle_resblock": [[74, 96], ["tensorflow.variable_scope", "resnet.batch_norm", "resnet.relu", "resnet.conv", "resnet.batch_norm", "resnet.relu", "resnet.batch_norm", "resnet.relu", "resnet.conv", "resnet.conv", "resnet.conv", "resnet.conv", "resnet.conv"], "function", ["home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.batch_norm", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.relu", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.conv", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.batch_norm", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.relu", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.batch_norm", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.relu", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.conv", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.conv", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.conv", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.conv", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.conv"], ["", "", "def", "bottle_resblock", "(", "x_init", ",", "channels", ",", "is_training", "=", "True", ",", "use_bias", "=", "True", ",", "downsample", "=", "False", ",", "scope", "=", "'bottle_resblock'", ")", ":", "\n", "    ", "with", "tf", ".", "variable_scope", "(", "scope", ")", ":", "\n", "        ", "x", "=", "batch_norm", "(", "x_init", ",", "is_training", ",", "scope", "=", "'batch_norm_1x1_front'", ")", "\n", "shortcut", "=", "relu", "(", "x", ")", "\n", "\n", "x", "=", "conv", "(", "shortcut", ",", "channels", ",", "kernel", "=", "1", ",", "stride", "=", "1", ",", "use_bias", "=", "use_bias", ",", "scope", "=", "'conv_1x1_front'", ")", "\n", "x", "=", "batch_norm", "(", "x", ",", "is_training", ",", "scope", "=", "'batch_norm_3x3'", ")", "\n", "x", "=", "relu", "(", "x", ")", "\n", "\n", "if", "downsample", ":", "\n", "            ", "x", "=", "conv", "(", "x", ",", "channels", ",", "kernel", "=", "3", ",", "stride", "=", "2", ",", "use_bias", "=", "use_bias", ",", "scope", "=", "'conv_0'", ")", "\n", "shortcut", "=", "conv", "(", "shortcut", ",", "channels", "*", "4", ",", "kernel", "=", "1", ",", "stride", "=", "2", ",", "use_bias", "=", "use_bias", ",", "scope", "=", "'conv_init'", ")", "\n", "\n", "", "else", ":", "\n", "            ", "x", "=", "conv", "(", "x", ",", "channels", ",", "kernel", "=", "3", ",", "stride", "=", "1", ",", "use_bias", "=", "use_bias", ",", "scope", "=", "'conv_0'", ")", "\n", "shortcut", "=", "conv", "(", "shortcut", ",", "channels", "*", "4", ",", "kernel", "=", "1", ",", "stride", "=", "1", ",", "use_bias", "=", "use_bias", ",", "scope", "=", "'conv_init'", ")", "\n", "\n", "", "x", "=", "batch_norm", "(", "x", ",", "is_training", ",", "scope", "=", "'batch_norm_1x1_back'", ")", "\n", "x", "=", "relu", "(", "x", ")", "\n", "x", "=", "conv", "(", "x", ",", "channels", "*", "4", ",", "kernel", "=", "1", ",", "stride", "=", "1", ",", "use_bias", "=", "use_bias", ",", "scope", "=", "'conv_1x1_back'", ")", "\n", "\n", "return", "x", "+", "shortcut", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.get_residual_layer": [[99, 118], ["None"], "function", ["None"], ["", "", "def", "get_residual_layer", "(", "res_n", ")", ":", "\n", "    ", "x", "=", "[", "]", "\n", "\n", "if", "res_n", "==", "18", ":", "\n", "        ", "x", "=", "[", "2", ",", "2", ",", "2", ",", "2", "]", "\n", "\n", "", "if", "res_n", "==", "34", ":", "\n", "        ", "x", "=", "[", "3", ",", "4", ",", "6", ",", "3", "]", "\n", "\n", "", "if", "res_n", "==", "50", ":", "\n", "        ", "x", "=", "[", "3", ",", "4", ",", "6", ",", "3", "]", "\n", "\n", "", "if", "res_n", "==", "101", ":", "\n", "        ", "x", "=", "[", "3", ",", "4", ",", "23", ",", "3", "]", "\n", "\n", "", "if", "res_n", "==", "152", ":", "\n", "        ", "x", "=", "[", "3", ",", "8", ",", "36", ",", "3", "]", "\n", "\n", "", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.flatten": [[125, 127], ["tensorflow.layers.flatten"], "function", ["home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.flatten"], ["", "def", "flatten", "(", "x", ")", ":", "\n", "    ", "return", "tf", ".", "layers", ".", "flatten", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.global_avg_pooling": [[128, 131], ["tensorflow.reduce_mean"], "function", ["None"], ["", "def", "global_avg_pooling", "(", "x", ")", ":", "\n", "    ", "gap", "=", "tf", ".", "reduce_mean", "(", "x", ",", "axis", "=", "[", "1", ",", "2", "]", ",", "keepdims", "=", "True", ")", "\n", "return", "gap", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.avg_pooling": [[132, 134], ["tensorflow.layers.average_pooling2d"], "function", ["None"], ["", "def", "avg_pooling", "(", "x", ")", ":", "\n", "    ", "return", "tf", ".", "layers", ".", "average_pooling2d", "(", "x", ",", "pool_size", "=", "2", ",", "strides", "=", "2", ",", "padding", "=", "'SAME'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.relu": [[140, 142], ["tensorflow.nn.relu"], "function", ["home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.relu"], ["", "def", "relu", "(", "x", ")", ":", "\n", "    ", "return", "tf", ".", "nn", ".", "relu", "(", "x", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.batch_norm": [[148, 153], ["tensorflow.layers.batch_norm"], "function", ["home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.batch_norm"], ["", "def", "batch_norm", "(", "x", ",", "is_training", "=", "True", ",", "scope", "=", "'batch_norm'", ")", ":", "\n", "    ", "return", "tf_contrib", ".", "layers", ".", "batch_norm", "(", "x", ",", "\n", "decay", "=", "0.9", ",", "epsilon", "=", "1e-05", ",", "\n", "center", "=", "True", ",", "scale", "=", "True", ",", "updates_collections", "=", "None", ",", "\n", "is_training", "=", "is_training", ",", "scope", "=", "scope", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.None.resnet.classification_loss": [[158, 164], ["tensorflow.reduce_mean", "tensorflow.equal", "tensorflow.reduce_mean", "tensorflow.nn.softmax_cross_entropy_with_logits_v2", "tensorflow.argmax", "tensorflow.argmax", "tensorflow.cast"], "function", ["None"], ["", "def", "classification_loss", "(", "logit", ",", "label", ")", ":", "\n", "    ", "loss", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "nn", ".", "softmax_cross_entropy_with_logits_v2", "(", "labels", "=", "label", ",", "logits", "=", "logit", ")", ")", "\n", "prediction", "=", "tf", ".", "equal", "(", "tf", ".", "argmax", "(", "logit", ",", "-", "1", ")", ",", "tf", ".", "argmax", "(", "label", ",", "-", "1", ")", ")", "\n", "accuracy", "=", "tf", ".", "reduce_mean", "(", "tf", ".", "cast", "(", "prediction", ",", "tf", ".", "float32", ")", ")", "\n", "\n", "return", "loss", ",", "accuracy", "\n", "", ""]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.data.prepare_speechcmd.CustomPrepareGoogleSpeechCmd": [[15, 39], ["prepare_speechcmd._DownloadGoogleSpeechCmdV2", "prepare_speechcmd.WAV2Numpy", "prepare_speechcmd.WAV2Numpy", "os.walk", "os.walk", "numpy.array().any", "numpy.array().any", "prepare_speechcmd._getFileCategory", "prepare_speechcmd._getFileCategory", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "f.endswith", "f.endswith", "root.endswith", "root.endswith", "GSCmdV2Categs.keys", "GSCmdV2Categs.keys"], "function", ["home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.data.prepare_speechcmd._DownloadGoogleSpeechCmdV2", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.data.prepare_speechcmd.WAV2Numpy", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.data.prepare_speechcmd.WAV2Numpy", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.data.prepare_speechcmd._getFileCategory", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.data.prepare_speechcmd._getFileCategory"], ["def", "CustomPrepareGoogleSpeechCmd", "(", ")", ":", "\n", "    ", "_DownloadGoogleSpeechCmdV2", "(", ")", "\n", "basePath", "=", "'sd_GSCmdV2'", "\n", "\n", "GSCmdV2Categs", "=", "{", "'left'", ":", "0", ",", "'right'", ":", "1", ",", "'up'", ":", "2", ",", "'down'", ":", "3", ",", "'yes'", ":", "4", ",", "'no'", ":", "5", ",", "'on'", ":", "6", ",", "'off'", ":", "7", ",", "'stop'", ":", "8", ",", "\n", "'go'", ":", "9", "}", "\n", "\n", "WAV2Numpy", "(", "basePath", "+", "'/test/'", ")", "\n", "WAV2Numpy", "(", "basePath", "+", "'/train/'", ")", "\n", "\n", "trainWAVs", "=", "[", "]", "\n", "for", "root", ",", "dirs", ",", "files", "in", "os", ".", "walk", "(", "basePath", "+", "'/train/'", ")", ":", "\n", "        ", "if", "np", ".", "array", "(", "[", "root", ".", "endswith", "(", "i", ")", "for", "i", "in", "GSCmdV2Categs", ".", "keys", "(", ")", "]", ")", ".", "any", "(", ")", ":", "\n", "            ", "trainWAVs", "+=", "[", "root", "+", "'/'", "+", "f", "for", "f", "in", "files", "if", "f", ".", "endswith", "(", "'.wav.npy'", ")", "]", "\n", "\n", "", "", "testWAVsREAL", "=", "[", "]", "\n", "for", "root", ",", "dirs", ",", "files", "in", "os", ".", "walk", "(", "basePath", "+", "'/test/'", ")", ":", "\n", "        ", "if", "np", ".", "array", "(", "[", "root", ".", "endswith", "(", "i", ")", "for", "i", "in", "GSCmdV2Categs", ".", "keys", "(", ")", "]", ")", ".", "any", "(", ")", ":", "\n", "            ", "testWAVsREAL", "+=", "[", "root", "+", "'/'", "+", "f", "for", "f", "in", "files", "if", "f", ".", "endswith", "(", "'.wav.npy'", ")", "]", "\n", "\n", "", "", "trainWAVlabels", "=", "[", "_getFileCategory", "(", "f", ",", "GSCmdV2Categs", ")", "for", "f", "in", "trainWAVs", "]", "\n", "testWAVREALlabels", "=", "[", "_getFileCategory", "(", "f", ",", "GSCmdV2Categs", ")", "for", "f", "in", "testWAVsREAL", "]", "\n", "\n", "return", "np", ".", "array", "(", "trainWAVs", ")", ",", "np", ".", "array", "(", "trainWAVlabels", ")", ",", "np", ".", "array", "(", "testWAVsREAL", ")", ",", "np", ".", "array", "(", "testWAVREALlabels", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.data.prepare_speechcmd._getFileCategory": [[41, 47], ["os.path.basename", "catDict.get", "os.path.dirname"], "function", ["None"], ["", "def", "_getFileCategory", "(", "file", ",", "catDict", ")", ":", "\n", "    ", "\"\"\"\n    Receives a file with name sd_GSCmdV2/train/<cat>/<filename> and returns an integer that is catDict[cat]\n    \"\"\"", "\n", "categ", "=", "os", ".", "path", ".", "basename", "(", "os", ".", "path", ".", "dirname", "(", "file", ")", ")", "\n", "return", "catDict", ".", "get", "(", "categ", ",", "0", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.data.prepare_speechcmd._DownloadGoogleSpeechCmdV2": [[49, 69], ["os.path.isdir", "print", "prepare_speechcmd._downloadFile", "prepare_speechcmd._downloadFile", "os.path.isdir", "prepare_speechcmd._extractTar", "os.path.isdir", "prepare_speechcmd._extractTar", "os.path.exists", "os.makedirs"], "function", ["home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.data.prepare_speechcmd._downloadFile", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.data.prepare_speechcmd._downloadFile", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.data.prepare_speechcmd._extractTar", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.data.prepare_speechcmd._extractTar"], ["", "def", "_DownloadGoogleSpeechCmdV2", "(", "forceDownload", "=", "False", ")", ":", "\n", "    ", "\"\"\"\n    Downloads Google Speech commands dataset version 2\n    \"\"\"", "\n", "if", "os", ".", "path", ".", "isdir", "(", "\"sd_GSCmdV2/\"", ")", "and", "not", "forceDownload", ":", "\n", "        ", "print", "(", "'Google Speech commands dataset version 2 already exists. Skipping download.'", ")", "\n", "", "else", ":", "\n", "        ", "if", "not", "os", ".", "path", ".", "exists", "(", "\"sd_GSCmdV2/\"", ")", ":", "\n", "            ", "os", ".", "makedirs", "(", "\"sd_GSCmdV2/\"", ")", "\n", "", "trainFiles", "=", "'http://download.tensorflow.org/data/speech_commands_v0.02.tar.gz'", "\n", "testFiles", "=", "'http://download.tensorflow.org/data/speech_commands_test_set_v0.02.tar.gz'", "\n", "_downloadFile", "(", "testFiles", ",", "'sd_GSCmdV2/test.tar.gz'", ")", "\n", "_downloadFile", "(", "trainFiles", ",", "'sd_GSCmdV2/train.tar.gz'", ")", "\n", "\n", "# extract files", "\n", "", "if", "not", "os", ".", "path", ".", "isdir", "(", "\"sd_GSCmdV2/test/\"", ")", ":", "\n", "        ", "_extractTar", "(", "'sd_GSCmdV2/test.tar.gz'", ",", "'sd_GSCmdV2/test/'", ")", "\n", "\n", "", "if", "not", "os", ".", "path", ".", "isdir", "(", "\"sd_GSCmdV2/train/\"", ")", ":", "\n", "        ", "_extractTar", "(", "'sd_GSCmdV2/train.tar.gz'", ",", "'sd_GSCmdV2/train/'", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.data.prepare_speechcmd._downloadFile": [[72, 88], ["requests.get", "int", "print", "requests.get.headers.get", "open", "tqdm.tqdm", "print", "requests.get.iter_content", "f.write", "math.ceil", "len"], "function", ["None"], ["", "", "def", "_downloadFile", "(", "url", ",", "fName", ")", ":", "\n", "# Streaming, so we can iterate over the response.", "\n", "    ", "r", "=", "requests", ".", "get", "(", "url", ",", "stream", "=", "True", ")", "\n", "\n", "# Total size in bytes.", "\n", "total_size", "=", "int", "(", "r", ".", "headers", ".", "get", "(", "'content-length'", ",", "0", ")", ")", ";", "\n", "block_size", "=", "1024", "\n", "wrote", "=", "0", "\n", "print", "(", "'Downloading {} into {}'", ".", "format", "(", "url", ",", "fName", ")", ")", "\n", "with", "open", "(", "fName", ",", "'wb'", ")", "as", "f", ":", "\n", "        ", "for", "data", "in", "tqdm", "(", "r", ".", "iter_content", "(", "block_size", ")", ",", "total", "=", "math", ".", "ceil", "(", "total_size", "//", "block_size", ")", ",", "unit", "=", "'KB'", ",", "\n", "unit_scale", "=", "True", ")", ":", "\n", "            ", "wrote", "=", "wrote", "+", "len", "(", "data", ")", "\n", "f", ".", "write", "(", "data", ")", "\n", "", "", "if", "total_size", "!=", "0", "and", "wrote", "!=", "total_size", ":", "\n", "        ", "print", "(", "\"ERROR, something went wrong\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.data.prepare_speechcmd._extractTar": [[90, 100], ["print", "fname.endswith", "tarfile.open", "tarfile.open.extractall", "tarfile.open.close", "fname.endswith", "tarfile.open", "tarfile.open.extractall", "tarfile.open.close"], "function", ["None"], ["", "", "def", "_extractTar", "(", "fname", ",", "folder", ")", ":", "\n", "    ", "print", "(", "'Extracting {} into {}'", ".", "format", "(", "fname", ",", "folder", ")", ")", "\n", "if", "(", "fname", ".", "endswith", "(", "\"tar.gz\"", ")", ")", ":", "\n", "        ", "tar", "=", "tarfile", ".", "open", "(", "fname", ",", "\"r:gz\"", ")", "\n", "tar", ".", "extractall", "(", "path", "=", "folder", ")", "\n", "tar", ".", "close", "(", ")", "\n", "", "elif", "(", "fname", ".", "endswith", "(", "\"tar\"", ")", ")", ":", "\n", "        ", "tar", "=", "tarfile", ".", "open", "(", "fname", ",", "\"r:\"", ")", "\n", "tar", ".", "extractall", "(", "path", "=", "folder", ")", "\n", "tar", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.data.prepare_speechcmd.WAV2Numpy": [[102, 120], ["os.walk", "tqdm.tqdm", "librosa.load", "numpy.save", "os.remove", "os.path.join", "f.endswith"], "function", ["None"], ["", "", "def", "WAV2Numpy", "(", "folder", ",", "sr", "=", "None", ")", ":", "\n", "    ", "\"\"\"\n    Recursively converts WAV to numpy arrays. Deletes the WAV files in the process\n\n    folder - folder to convert.\n    \"\"\"", "\n", "allFiles", "=", "[", "]", "\n", "for", "root", ",", "dirs", ",", "files", "in", "os", ".", "walk", "(", "folder", ")", ":", "\n", "        ", "allFiles", "+=", "[", "os", ".", "path", ".", "join", "(", "root", ",", "f", ")", "for", "f", "in", "files", "if", "f", ".", "endswith", "(", "'.wav'", ")", "]", "\n", "\n", "", "for", "file", "in", "tqdm", "(", "allFiles", ")", ":", "\n", "        ", "y", ",", "sr", "=", "librosa", ".", "load", "(", "file", ",", "sr", "=", "None", ")", "\n", "\n", "# if we want to write the file later", "\n", "# librosa.output.write_wav('file.wav', y, sr, norm=False)", "\n", "\n", "np", ".", "save", "(", "file", "+", "'.npy'", ",", "y", ")", "\n", "os", ".", "remove", "(", "file", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.data.prepare_speechcmd.load_audio": [[122, 137], ["numpy.vstack", "numpy.load", "output.append", "numpy.random.randint", "output.append", "numpy.random.randint", "numpy.zeros", "output.append"], "function", ["None"], ["", "", "def", "load_audio", "(", "data", ",", "dim", ")", ":", "\n", "    ", "output", "=", "[", "]", "\n", "for", "i", "in", "data", ":", "\n", "        ", "audio", "=", "np", ".", "load", "(", "i", ")", "\n", "if", "audio", ".", "shape", "[", "0", "]", "==", "dim", ":", "\n", "            ", "output", ".", "append", "(", "audio", ")", "\n", "", "elif", "audio", ".", "shape", "[", "0", "]", ">", "dim", ":", "\n", "            ", "randPos", "=", "np", ".", "random", ".", "randint", "(", "audio", ".", "shape", "[", "0", "]", "-", "dim", ")", "\n", "output", ".", "append", "(", "audio", "[", "randPos", ":", "randPos", "+", "dim", "]", ")", "\n", "", "else", ":", "\n", "            ", "randPos", "=", "np", ".", "random", ".", "randint", "(", "dim", "-", "audio", ".", "shape", "[", "0", "]", ")", "\n", "temp", "=", "np", ".", "zeros", "(", "dim", ")", "\n", "temp", "[", "randPos", ":", "randPos", "+", "audio", ".", "shape", "[", "0", "]", "]", "=", "audio", "\n", "output", ".", "append", "(", "temp", ")", "\n", "", "", "return", "np", ".", "vstack", "(", "output", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.data.prepare_speechcmd.prepareOODtrigger": [[139, 153], ["prepare_speechcmd._DownloadGoogleSpeechCmdV2", "prepare_speechcmd.WAV2Numpy", "prepare_speechcmd.WAV2Numpy", "os.walk", "numpy.array", "numpy.array().any", "numpy.array", "f.endswith", "root.endswith"], "function", ["home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.data.prepare_speechcmd._DownloadGoogleSpeechCmdV2", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.data.prepare_speechcmd.WAV2Numpy", "home.repos.pwc.inspect_result.cleverhans-lab_entangled-watermark.data.prepare_speechcmd.WAV2Numpy"], ["", "def", "prepareOODtrigger", "(", "category", "=", "'one'", ")", ":", "\n", "# note category could be set to 'zero' to 'nine' (string)", "\n", "    ", "_DownloadGoogleSpeechCmdV2", "(", ")", "\n", "basePath", "=", "'sd_GSCmdV2'", "\n", "\n", "WAV2Numpy", "(", "basePath", "+", "'/test/'", ")", "\n", "WAV2Numpy", "(", "basePath", "+", "'/train/'", ")", "\n", "\n", "trainWAVs", "=", "[", "]", "\n", "for", "root", ",", "dirs", ",", "files", "in", "os", ".", "walk", "(", "basePath", "+", "'/train/'", ")", ":", "\n", "        ", "if", "np", ".", "array", "(", "[", "root", ".", "endswith", "(", "category", ")", "]", ")", ".", "any", "(", ")", ":", "\n", "            ", "trainWAVs", "+=", "[", "root", "+", "'/'", "+", "f", "for", "f", "in", "files", "if", "f", ".", "endswith", "(", "'.wav.npy'", ")", "]", "\n", "\n", "", "", "return", "np", ".", "array", "(", "trainWAVs", ")", "\n", "\n"]]}