{"home.repos.pwc.inspect_result.bangxiangyong_bae-ood-images.None._train_models_images.train_model_images": [[16, 239], ["int", "torchvision.transforms.Compose", "Encoder", "infer_decoder", "print", "pprint.pprint", "baetorch.baetorch.models.bae_vi.VAE.fit", "np.isnan", "baetorch.baetorch.test_suite.run_test_model", "baetorch.baetorch.util.misc.save_bae_model", "int", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "infer_decoder", "Autoencoder", "Autoencoder", "int", "str().replace", "baetorch.baetorch.models.bae_ensemble.BAE_Ensemble", "str", "baetorch.baetorch.lr_range_finder.run_auto_lr_range", "baetorch.baetorch.models.bae_vi.VAE.fit", "np.sum", "ValueError", "torchvision.transforms.ToTensor", "torchvision.datasets.CIFAR10", "torchvision.datasets.CIFAR10", "torchvision.datasets.SVHN", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "ConvLayers", "DenseLayers", "DenseLayers", "baetorch.baetorch.models.bae_ensemble.BAE_Ensemble", "print", "baetorch.baetorch.lr_range_finder.run_auto_lr_range", "torchvision.datasets.SVHN", "torchvision.datasets.SVHN", "torchvision.datasets.CIFAR10", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "str", "baetorch.baetorch.models.bae_mcdropout.BAE_MCDropout", "torchvision.datasets.FashionMNIST", "torchvision.datasets.FashionMNIST", "torchvision.datasets.MNIST", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "torch.utils.data.DataLoader", "baetorch.baetorch.models.bae_vi.BAE_VI", "torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "torchvision.datasets.FashionMNIST", "baetorch.baetorch.models.bae_vi.VAE", "torchvision.transforms.Compose", "str", "torchvision.transforms.Compose", "torchvision.transforms.Compose", "torchvision.transforms.ToTensor", "torchvision.transforms.ToTensor", "torchvision.transforms.ToTensor"], "function", ["None"], ["def", "train_model_images", "(", "train_set_name", ",", "likelihood_choice", ",", "model_type", ",", "latent_dim_multiplier", ",", "capacity_multiplier", ",", "decoder_sigma_choice", ",", "num_epoch_mu", ",", "num_epoch_sigma", ",", "latent_dim", "=", "10", ",", "conv_filters", "=", "[", "32", ",", "64", ",", "128", "]", ",", "train_batch_size", "=", "100", ",", "use_cuda", "=", "False", ",", "weight_decay", "=", "0.1", ")", ":", "\n", "#Update actual parameters based on selected choices", "\n", "    ", "if", "likelihood_choice", "==", "\"bernoulli\"", ":", "\n", "        ", "likelihood", "=", "\"bernoulli\"", "\n", "homoscedestic_mode", "=", "\"none\"", "\n", "heteroscedestic", "=", "False", "\n", "", "elif", "likelihood_choice", "==", "\"cbernoulli\"", ":", "\n", "        ", "likelihood", "=", "\"cbernoulli\"", "\n", "homoscedestic_mode", "=", "\"none\"", "\n", "heteroscedestic", "=", "False", "\n", "", "elif", "likelihood_choice", "==", "\"gaussian_none\"", ":", "\n", "        ", "likelihood", "=", "\"gaussian\"", "\n", "homoscedestic_mode", "=", "\"none\"", "\n", "heteroscedestic", "=", "False", "\n", "", "elif", "likelihood_choice", "==", "\"gaussian_homo\"", ":", "\n", "        ", "likelihood", "=", "\"gaussian\"", "\n", "homoscedestic_mode", "=", "\"every\"", "\n", "heteroscedestic", "=", "False", "\n", "", "elif", "likelihood_choice", "==", "\"gaussian_hetero\"", ":", "\n", "        ", "likelihood", "=", "\"gaussian\"", "\n", "homoscedestic_mode", "=", "\"none\"", "\n", "heteroscedestic", "=", "True", "\n", "\n", "", "if", "train_set_name", "==", "\"CIFAR\"", ":", "\n", "        ", "input_dim", "=", "32", "\n", "input_channel", "=", "3", "\n", "conv_filters", "=", "[", "32", ",", "64", ",", "128", "]", "\n", "conv_kernel", "=", "[", "4", ",", "4", ",", "4", "]", "\n", "conv_stride", "=", "[", "2", ",", "1", ",", "2", "]", "\n", "\n", "plot_output_reshape_size", "=", "(", "32", ",", "32", ",", "input_channel", ")", "\n", "\n", "", "elif", "train_set_name", "==", "\"SVHN\"", ":", "\n", "\n", "        ", "input_dim", "=", "32", "\n", "input_channel", "=", "3", "\n", "conv_filters", "=", "[", "32", ",", "64", ",", "128", "]", "\n", "conv_kernel", "=", "[", "4", ",", "4", ",", "4", "]", "\n", "conv_stride", "=", "[", "2", ",", "1", ",", "2", "]", "\n", "\n", "plot_output_reshape_size", "=", "(", "32", ",", "32", ",", "input_channel", ")", "\n", "\n", "\n", "", "elif", "train_set_name", "==", "\"FashionMNIST\"", ":", "\n", "        ", "input_dim", "=", "28", "\n", "input_channel", "=", "1", "\n", "conv_filters", "=", "[", "32", ",", "64", "]", "\n", "conv_kernel", "=", "[", "4", ",", "4", "]", "\n", "conv_stride", "=", "[", "2", ",", "1", "]", "\n", "plot_output_reshape_size", "=", "(", "28", ",", "28", ")", "\n", "\n", "\n", "", "elif", "train_set_name", "==", "\"MNIST\"", ":", "\n", "        ", "input_dim", "=", "28", "\n", "input_channel", "=", "1", "\n", "conv_filters", "=", "[", "32", ",", "64", "]", "\n", "conv_kernel", "=", "[", "4", ",", "4", "]", "\n", "conv_stride", "=", "[", "2", ",", "1", "]", "\n", "plot_output_reshape_size", "=", "(", "28", ",", "28", ")", "\n", "\n", "\n", "", "conv_filters", "=", "[", "int", "(", "i", "*", "capacity_multiplier", ")", "for", "i", "in", "conv_filters", "]", "\n", "latent_dim", "=", "int", "(", "latent_dim", "*", "latent_dim_multiplier", ")", "\n", "\n", "#----LOAD DATA------", "\n", "test_samples", "=", "1000", "\n", "data_transform", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "ToTensor", "(", ")", "]", ")", "\n", "if", "train_set_name", "==", "\"CIFAR\"", ":", "\n", "        ", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "datasets", ".", "CIFAR10", "(", "'data-cifar'", ",", "train", "=", "True", ",", "download", "=", "True", ",", "\n", "transform", "=", "data_transform", "\n", ")", ",", "batch_size", "=", "train_batch_size", ",", "shuffle", "=", "True", ")", "\n", "test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "datasets", ".", "CIFAR10", "(", "'data-cifar'", ",", "train", "=", "False", ",", "download", "=", "True", ",", "\n", "transform", "=", "data_transform", "\n", ")", ",", "batch_size", "=", "test_samples", ",", "shuffle", "=", "True", ")", "\n", "ood_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "datasets", ".", "SVHN", "(", "'data-svhn'", ",", "split", "=", "\"test\"", ",", "download", "=", "True", ",", "\n", "transform", "=", "data_transform", "\n", ")", ",", "batch_size", "=", "test_samples", ",", "shuffle", "=", "True", ")", "\n", "", "elif", "train_set_name", "==", "\"SVHN\"", ":", "\n", "        ", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "datasets", ".", "SVHN", "(", "'data-svhn'", ",", "split", "=", "\"train\"", ",", "download", "=", "True", ",", "\n", "transform", "=", "data_transform", "\n", ")", ",", "batch_size", "=", "train_batch_size", ",", "shuffle", "=", "True", ")", "\n", "\n", "test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "datasets", ".", "SVHN", "(", "'data-svhn'", ",", "split", "=", "\"test\"", ",", "download", "=", "True", ",", "\n", "transform", "=", "data_transform", "\n", ")", ",", "batch_size", "=", "test_samples", ",", "shuffle", "=", "True", ")", "\n", "ood_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "datasets", ".", "CIFAR10", "(", "'data-cifar'", ",", "train", "=", "False", ",", "download", "=", "True", ",", "\n", "transform", "=", "data_transform", "\n", ")", ",", "batch_size", "=", "test_samples", ",", "shuffle", "=", "True", ")", "\n", "", "elif", "train_set_name", "==", "\"FashionMNIST\"", ":", "\n", "        ", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "datasets", ".", "FashionMNIST", "(", "'data-fashion-mnist'", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "data_transform", ")", ",", "batch_size", "=", "train_batch_size", ",", "shuffle", "=", "True", ")", "\n", "test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "datasets", ".", "FashionMNIST", "(", "'data-fashion-mnist'", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "data_transform", ")", ",", "batch_size", "=", "test_samples", ",", "shuffle", "=", "True", ")", "\n", "ood_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "datasets", ".", "MNIST", "(", "'data-mnist'", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "ToTensor", "(", ")", ",", "]", ")", ")", ",", "batch_size", "=", "test_samples", ",", "shuffle", "=", "True", ")", "\n", "\n", "", "elif", "train_set_name", "==", "\"MNIST\"", ":", "\n", "        ", "train_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "datasets", ".", "MNIST", "(", "'data-mnist'", ",", "train", "=", "True", ",", "download", "=", "True", ",", "transform", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "ToTensor", "(", ")", ",", "]", ")", ")", ",", "batch_size", "=", "train_batch_size", ",", "shuffle", "=", "True", ")", "\n", "test_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "datasets", ".", "MNIST", "(", "'data-mnist'", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "transforms", ".", "Compose", "(", "[", "transforms", ".", "ToTensor", "(", ")", ",", "]", ")", ")", ",", "batch_size", "=", "test_samples", ",", "shuffle", "=", "True", ")", "\n", "ood_loader", "=", "torch", ".", "utils", ".", "data", ".", "DataLoader", "(", "\n", "datasets", ".", "FashionMNIST", "(", "'data-fashion-mnist'", ",", "train", "=", "False", ",", "download", "=", "True", ",", "transform", "=", "data_transform", ")", ",", "batch_size", "=", "test_samples", ",", "shuffle", "=", "True", ")", "\n", "\n", "#----SPECIFY MODEL---------", "\n", "\n", "#model architecture", "\n", "", "conv_architecture", "=", "[", "input_channel", "]", "+", "conv_filters", "\n", "\n", "#specify encoder", "\n", "#with convolutional layers and hidden dense layer", "\n", "encoder", "=", "Encoder", "(", "[", "ConvLayers", "(", "input_dim", "=", "input_dim", ",", "conv_architecture", "=", "conv_architecture", ",", "conv_kernel", "=", "conv_kernel", ",", "\n", "conv_stride", "=", "conv_stride", ",", "activation", "=", "\"leakyrelu\"", ",", "last_activation", "=", "\"sigmoid\"", ")", ",", "\n", "DenseLayers", "(", "architecture", "=", "[", "]", ",", "output_size", "=", "latent_dim", ")", "]", ")", "\n", "\n", "\n", "#specify decoder-mu and sigma", "\n", "decoder_mu", "=", "infer_decoder", "(", "encoder", ",", "last_activation", "=", "\"sigmoid\"", ")", "#symmetrical to encoder", "\n", "if", "decoder_sigma_choice", "==", "\"infer\"", ":", "\n", "        ", "decoder_sig", "=", "infer_decoder", "(", "encoder", ",", "last_activation", "=", "\"none\"", ")", "\n", "", "elif", "decoder_sigma_choice", "==", "\"dense\"", ":", "\n", "        ", "decoder_sig", "=", "DenseLayers", "(", "input_size", "=", "latent_dim", ",", "\n", "output_size", "=", "input_channel", "*", "input_dim", "*", "input_dim", ",", "\n", "architecture", "=", "[", "100", ",", "500", "]", ")", "#dense layers only", "\n", "\n", "#combine them into autoencoder", "\n", "", "if", "heteroscedestic", "==", "False", ":", "\n", "        ", "autoencoder", "=", "Autoencoder", "(", "encoder", ",", "decoder_mu", ")", "\n", "", "else", ":", "\n", "        ", "autoencoder", "=", "Autoencoder", "(", "encoder", ",", "decoder_mu", ",", "decoder_sig", ")", "\n", "\n", "\n", "#infer metadata name of model", "\n", "", "if", "weight_decay", ">=", "1", ":", "\n", "        ", "weight_decay", "=", "int", "(", "weight_decay", ")", "\n", "", "model_metaname", "=", "model_type", "+", "\"_\"", "+", "train_set_name", "+", "\"_L\"", "+", "str", "(", "latent_dim", ")", "+", "\"_\"", "+", "likelihood_choice", "+", "\"_\"", "+", "\"wd\"", "+", "str", "(", "weight_decay", ")", ".", "replace", "(", "\".\"", ",", "\"\"", ")", "\n", "\n", "#instantiate BAE model", "\n", "if", "model_type", "==", "\"vanilla\"", ":", "\n", "        ", "bae_model", "=", "BAE_Ensemble", "(", "model_name", "=", "model_metaname", ",", "\n", "autoencoder", "=", "autoencoder", ",", "use_cuda", "=", "use_cuda", ",", "\n", "anchored", "=", "True", ",", "weight_decay", "=", "weight_decay", ",", "\n", "num_samples", "=", "1", ",", "homoscedestic_mode", "=", "homoscedestic_mode", ",", "\n", "likelihood", "=", "likelihood", ")", "\n", "", "elif", "model_type", "==", "\"ensemble\"", ":", "\n", "        ", "bae_model", "=", "BAE_Ensemble", "(", "model_name", "=", "model_metaname", ",", "\n", "autoencoder", "=", "autoencoder", ",", "use_cuda", "=", "use_cuda", ",", "\n", "anchored", "=", "True", ",", "weight_decay", "=", "weight_decay", ",", "\n", "num_samples", "=", "5", ",", "homoscedestic_mode", "=", "homoscedestic_mode", ",", "\n", "likelihood", "=", "likelihood", ")", "\n", "", "elif", "model_type", "==", "\"mcdropout\"", ":", "\n", "        ", "bae_model", "=", "BAE_MCDropout", "(", "model_name", "=", "model_metaname", ",", "autoencoder", "=", "autoencoder", ",", "\n", "dropout_p", "=", "0.1", ",", "weight_decay", "=", "weight_decay", ",", "anchored", "=", "True", ",", "\n", "num_train_samples", "=", "5", ",", "num_samples", "=", "10", ",", "use_cuda", "=", "use_cuda", ",", "homoscedestic_mode", "=", "homoscedestic_mode", ",", "likelihood", "=", "likelihood", ")", "\n", "", "elif", "model_type", "==", "\"vi\"", ":", "\n", "        ", "bae_model", "=", "BAE_VI", "(", "model_name", "=", "model_metaname", ",", "autoencoder", "=", "autoencoder", ",", "\n", "num_train_samples", "=", "5", ",", "\n", "num_samples", "=", "10", ",", "#during prediction only", "\n", "use_cuda", "=", "use_cuda", ",", "\n", "weight_decay", "=", "weight_decay", ",", "homoscedestic_mode", "=", "homoscedestic_mode", ",", "likelihood", "=", "likelihood", ")", "\n", "", "elif", "model_type", "==", "\"vae\"", ":", "\n", "        ", "bae_model", "=", "VAE", "(", "model_name", "=", "model_metaname", ",", "autoencoder", "=", "autoencoder", ",", "\n", "num_train_samples", "=", "5", ",", "\n", "num_samples", "=", "10", ",", "#during prediction only", "\n", "use_cuda", "=", "use_cuda", ",", "beta", "=", "weight_decay", ",", "\n", "weight_decay", "=", "weight_decay", ",", "homoscedestic_mode", "=", "homoscedestic_mode", ",", "likelihood", "=", "likelihood", ")", "\n", "\n", "#save model meta data", "\n", "", "model_metadata", "=", "{", "\"model_metaname\"", ":", "model_metaname", ",", "\n", "\"train_set_name\"", ":", "train_set_name", ",", "\n", "\"model_type\"", ":", "model_type", ",", "\n", "\"num_epoch_mu\"", ":", "num_epoch_mu", ",", "\n", "\"latent_dim\"", ":", "latent_dim", ",", "\n", "\"capacity\"", ":", "str", "(", "conv_filters", ")", ",", "\n", "\"likelihood\"", ":", "likelihood", ",", "\n", "\"weight_decay\"", ":", "weight_decay", ",", "\n", "}", "\n", "bae_model", ".", "metadata", "=", "model_metadata", "\n", "\n", "print", "(", "\"TRAINING MODEL METADATA:\"", ")", "\n", "pprint", "(", "model_metadata", ")", "\n", "\n", "#------TRAINING------", "\n", "#train mu network", "\n", "try", ":", "\n", "        ", "run_auto_lr_range", "(", "train_loader", ",", "bae_model", ",", "run_full", "=", "False", ")", "\n", "", "except", "Exception", "as", "e", ":", "\n", "        ", "print", "(", "e", ")", "\n", "run_auto_lr_range", "(", "train_loader", ",", "bae_model", ",", "run_full", "=", "True", ")", "\n", "", "bae_model", ".", "fit", "(", "train_loader", ",", "num_epochs", "=", "num_epoch_mu", ")", "\n", "\n", "#train sigma network", "\n", "if", "bae_model", ".", "decoder_sigma_enabled", ":", "\n", "        ", "bae_model", ".", "scheduler_enabled", "=", "False", "#need to set scheduler off", "\n", "bae_model", ".", "learning_rate_sig", "=", "1e-5", "#set it to constant learning rate", "\n", "bae_model", ".", "fit", "(", "train_loader", ",", "num_epochs", "=", "num_epoch_sigma", ",", "mode", "=", "\"sigma\"", ",", "sigma_train", "=", "\"separate\"", ")", "\n", "\n", "#if model has reached nan in its loss", "\n", "", "if", "np", ".", "isnan", "(", "np", ".", "sum", "(", "bae_model", ".", "losses", ")", ")", ":", "\n", "        ", "raise", "ValueError", "(", "\"NaN in training loss\"", ")", "\n", "\n", "#------PRE EVALUATION----", "\n", "#for each model, evaluate and plot:", "\n", "", "bae_models", "=", "[", "bae_model", "]", "\n", "id_data_test", "=", "test_loader", "\n", "ood_data_list", "=", "[", "ood_loader", "]", "\n", "ood_names", "=", "[", "\"OOD\"", "]", "\n", "\n", "#run evaluation test of model on ood data set", "\n", "run_test_model", "(", "bae_models", "=", "bae_models", ",", "id_data_test", "=", "test_loader", ",", "\n", "ood_data_list", "=", "ood_data_list", ",", "id_data_name", "=", "train_set_name", ",", "ood_data_names", "=", "ood_names", ",", "\n", "output_reshape_size", "=", "plot_output_reshape_size", ")", "\n", "\n", "#save model", "\n", "save_bae_model", "(", "bae_model", ",", "folder", "=", "\"trained_models/\"", "+", "train_set_name", "+", "\"/\"", ")", "\n", "\n", "return", "bae_model", "\n", "", ""]], "home.repos.pwc.inspect_result.bangxiangyong_bae-ood-images.None.image_publication_pcc_ll.log_bernoulli_loss": [[118, 127], ["np.nan_to_num", "np.sum", "np.mean", "np.log", "np.log"], "function", ["None"], ["", "def", "log_bernoulli_loss", "(", "y_pred", ",", "y_true", ",", "reduction", "=", "\"none\"", ")", ":", "\n", "    ", "bce", "=", "-", "(", "y_true", "*", "np", ".", "log", "(", "y_pred", ")", "+", "(", "1", "-", "y_true", ")", "*", "np", ".", "log", "(", "1", "-", "y_pred", ")", ")", "\n", "bce", "=", "np", ".", "nan_to_num", "(", "bce", ",", "nan", "=", "0", ",", "posinf", "=", "100", ",", "neginf", "=", "-", "100", ")", "\n", "if", "reduction", "==", "\"sum\"", ":", "\n", "        ", "return", "np", ".", "sum", "(", "bce", ")", "\n", "", "elif", "reduction", "==", "\"mean\"", ":", "\n", "        ", "return", "np", ".", "mean", "(", "bce", ")", "\n", "", "else", ":", "#none", "\n", "        ", "return", "bce", "\n", "\n"]], "home.repos.pwc.inspect_result.bangxiangyong_bae-ood-images.None.image_publication_pcc_ll.log_bernoulli_loss_np": [[128, 134], ["flatten_np", "flatten_np", "np.nan_to_num", "np.log", "np.log"], "function", ["None"], ["", "", "def", "log_bernoulli_loss_np", "(", "y_pred", ",", "y_true", ")", ":", "\n", "    ", "y_pred", "=", "flatten_np", "(", "y_pred", ")", "\n", "y_true", "=", "flatten_np", "(", "y_true", ")", "\n", "bce", "=", "-", "(", "y_true", "*", "np", ".", "log", "(", "y_pred", ")", "+", "(", "1", "-", "y_true", ")", "*", "np", ".", "log", "(", "1", "-", "y_pred", ")", ")", "\n", "bce", "=", "np", ".", "nan_to_num", "(", "bce", ",", "nan", "=", "0", ",", "posinf", "=", "100", ",", "neginf", "=", "-", "100", ")", "\n", "return", "bce", "\n", "\n"]], "home.repos.pwc.inspect_result.bangxiangyong_bae-ood-images.None.image_publication_pcc_ll.log_gaussian_loss": [[135, 140], ["flatten_np", "flatten_np"], "function", ["None"], ["", "def", "log_gaussian_loss", "(", "y_pred_mu", ",", "y_true", ")", ":", "\n", "    ", "y_pred_mu", "=", "flatten_np", "(", "y_pred_mu", ")", "\n", "y_true", "=", "flatten_np", "(", "y_true", ")", "\n", "mse", "=", "(", "y_pred_mu", "-", "y_true", ")", "**", "2", "\n", "return", "mse", "\n", "\n"]], "home.repos.pwc.inspect_result.bangxiangyong_bae-ood-images.None.image_publication_pcc_ll.plot_maximum_LL": [[150, 160], ["plt.figure", "plt.plot", "plt.xlabel", "plt.ylabel", "plt.tight_layout", "int", "int"], "function", ["None"], ["def", "plot_maximum_LL", "(", "const_range", ",", "range_max", ",", "dpi", "=", "500", ",", "figsize_scale", "=", "2.5", ")", ":", "\n", "    ", "figsize_scale", "=", "2.5", "\n", "figsize", "=", "(", "int", "(", "1.5", "*", "figsize_scale", ")", ",", "int", "(", "1", "*", "figsize_scale", ")", ")", "\n", "plt", ".", "figure", "(", "figsize", "=", "figsize", ",", "dpi", "=", "dpi", ")", "\n", "plt", ".", "plot", "(", "const_range", ",", "range_max", ")", "\n", "font_size_label", "=", "\"small\"", "\n", "plt", ".", "xlabel", "(", "\"x\"", ",", "fontsize", "=", "font_size_label", ")", "\n", "plt", ".", "ylabel", "(", "\"Maximum Log-likelihood\"", ",", "fontsize", "=", "font_size_label", ")", "\n", "\n", "plt", ".", "tight_layout", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bangxiangyong_bae-ood-images.None.image_publication_pcc_ll.calc_proportion_zeros": [[216, 221], ["image.reshape.reshape", "np.argwhere"], "function", ["None"], ["def", "calc_proportion_zeros", "(", "image", ",", "threshold", "=", "0.", ")", ":", "\n", "    ", "image", "=", "image", ".", "reshape", "(", "-", "1", ")", "\n", "total_pixels", "=", "image", ".", "shape", "[", "0", "]", "\n", "proportion_zeros", "=", "np", ".", "argwhere", "(", "image", "<=", "threshold", ")", ".", "shape", "[", "0", "]", "/", "total_pixels", "\n", "return", "proportion_zeros", "\n", "\n"]], "home.repos.pwc.inspect_result.bangxiangyong_bae-ood-images.None.image_publication_pcc_ll.set_legend_marksersize": [[280, 283], ["range", "len"], "function", ["None"], ["def", "set_legend_marksersize", "(", "lgnd", ",", "fixed_size", "=", "30", ")", ":", "\n", "    ", "for", "i", "in", "range", "(", "len", "(", "lgnd", ".", "legendHandles", ")", ")", ":", "\n", "        ", "lgnd", ".", "legendHandles", "[", "i", "]", ".", "_sizes", "=", "[", "fixed_size", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.bangxiangyong_bae-ood-images.None.image_publication_pcc_ll.str_deci": [[293, 295], ["round", "str"], "function", ["None"], ["def", "str_deci", "(", "number", ",", "num_deci", "=", "2", ")", ":", "\n", "    ", "return", "(", "\"{0:.\"", "+", "str", "(", "num_deci", ")", "+", "\"f}\"", ")", ".", "format", "(", "round", "(", "number", ",", "num_deci", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bangxiangyong_bae-ood-images.None.image_publication_ism_hist.log_bernoulli_loss": [[114, 123], ["np.nan_to_num", "np.sum", "np.mean", "np.log", "np.log"], "function", ["None"], ["def", "log_bernoulli_loss", "(", "y_pred", ",", "y_true", ",", "reduction", "=", "\"none\"", ")", ":", "\n", "    ", "bce", "=", "-", "(", "y_true", "*", "np", ".", "log", "(", "y_pred", ")", "+", "(", "1", "-", "y_true", ")", "*", "np", ".", "log", "(", "1", "-", "y_pred", ")", ")", "\n", "bce", "=", "np", ".", "nan_to_num", "(", "bce", ",", "nan", "=", "0", ",", "posinf", "=", "100", ",", "neginf", "=", "-", "100", ")", "\n", "if", "reduction", "==", "\"sum\"", ":", "\n", "        ", "return", "np", ".", "sum", "(", "bce", ")", "\n", "", "elif", "reduction", "==", "\"mean\"", ":", "\n", "        ", "return", "np", ".", "mean", "(", "bce", ")", "\n", "", "else", ":", "#none", "\n", "        ", "return", "bce", "\n", "\n"]], "home.repos.pwc.inspect_result.bangxiangyong_bae-ood-images.None.image_publication_ism_hist.log_bernoulli_loss_np": [[124, 130], ["flatten_np", "flatten_np", "np.nan_to_num", "np.log", "np.log"], "function", ["None"], ["", "", "def", "log_bernoulli_loss_np", "(", "y_pred", ",", "y_true", ")", ":", "\n", "    ", "y_pred", "=", "flatten_np", "(", "y_pred", ")", "\n", "y_true", "=", "flatten_np", "(", "y_true", ")", "\n", "bce", "=", "-", "(", "y_true", "*", "np", ".", "log", "(", "y_pred", ")", "+", "(", "1", "-", "y_true", ")", "*", "np", ".", "log", "(", "1", "-", "y_pred", ")", ")", "\n", "bce", "=", "np", ".", "nan_to_num", "(", "bce", ",", "nan", "=", "0", ",", "posinf", "=", "100", ",", "neginf", "=", "-", "100", ")", "\n", "return", "bce", "\n", "\n"]], "home.repos.pwc.inspect_result.bangxiangyong_bae-ood-images.None.image_publication_ism_hist.log_gaussian_loss": [[131, 136], ["flatten_np", "flatten_np"], "function", ["None"], ["", "def", "log_gaussian_loss", "(", "y_pred_mu", ",", "y_true", ")", ":", "\n", "    ", "y_pred_mu", "=", "flatten_np", "(", "y_pred_mu", ")", "\n", "y_true", "=", "flatten_np", "(", "y_true", ")", "\n", "mse", "=", "(", "y_pred_mu", "-", "y_true", ")", "**", "2", "\n", "return", "mse", "\n", "\n"]], "home.repos.pwc.inspect_result.bangxiangyong_bae-ood-images.None.image_publication_ism_hist.set_legend_marksersize": [[143, 146], ["range", "len"], "function", ["None"], ["def", "set_legend_marksersize", "(", "lgnd", ",", "fixed_size", "=", "30", ")", ":", "\n", "    ", "for", "i", "in", "range", "(", "len", "(", "lgnd", ".", "legendHandles", ")", ")", ":", "\n", "        ", "lgnd", ".", "legendHandles", "[", "i", "]", ".", "_sizes", "=", "[", "fixed_size", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.bangxiangyong_bae-ood-images.None.image_publication_ism_hist.mse": [[154, 156], ["np.mean"], "function", ["None"], ["def", "mse", "(", "x", ",", "y", ",", "ax", "=", "-", "1", ")", ":", "\n", "    ", "return", "np", ".", "mean", "(", "(", "x", "-", "y", ")", "**", "2", ",", "axis", "=", "ax", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.bangxiangyong_bae-ood-images.None.image_publication_ism_hist.calc_image_similarity": [[157, 190], ["range", "range", "ism_ood.append", "ism_test.append", "method", "method", "image_publication_ism_hist.calc_image_similarity.convert_image_int"], "function", ["None"], ["", "def", "calc_image_similarity", "(", "results_ood", ",", "results_test", ",", "method_id", "=", "\"mse\"", ")", ":", "\n", "    ", "def", "convert_image_int", "(", "image", ")", ":", "\n", "        ", "return", "(", "image", ".", "flatten", "(", ")", "*", "255", ")", ".", "astype", "(", "int", ")", "\n", "\n", "", "ism_ood", "=", "[", "]", "\n", "ism_test", "=", "[", "]", "\n", "method_map", "=", "{", "\"nmi\"", ":", "normalized_mutual_info_score", ",", "\n", "\"mi\"", ":", "mutual_info_score", ",", "\n", "\"ssim\"", ":", "ssim", ",", "\n", "\"bce\"", ":", "log_bernoulli_loss", ",", "\n", "\"psnr\"", ":", "peak_signal_noise_ratio", ",", "\n", "\"mse\"", ":", "mse", "\n", "}", "\n", "method", "=", "method_map", "[", "method_id", "]", "\n", "\n", "for", "i", "in", "range", "(", "results_ood", "[", "\"mu\"", "]", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "if", "method_id", "==", "\"nmi\"", "or", "method_id", "==", "\"mi\"", ":", "\n", "            ", "ism_score", "=", "method", "(", "convert_image_int", "(", "results_ood", "[", "\"mu\"", "]", "[", "i", "]", ")", ",", "convert_image_int", "(", "results_ood", "[", "\"input\"", "]", "[", "i", "]", ")", ")", "\n", "", "elif", "method_id", "==", "\"bce\"", "or", "method_id", "==", "\"mse\"", ":", "\n", "            ", "ism_score", "=", "np", ".", "mean", "(", "method", "(", "results_ood", "[", "\"mu\"", "]", "[", "i", "]", ".", "flatten", "(", ")", ",", "results_ood", "[", "\"input\"", "]", "[", "i", "]", ".", "flatten", "(", ")", ")", ")", "*", "-", "1", "\n", "", "else", ":", "\n", "            ", "ism_score", "=", "method", "(", "results_ood", "[", "\"mu\"", "]", "[", "i", "]", ".", "flatten", "(", ")", ",", "results_ood", "[", "\"input\"", "]", "[", "i", "]", ".", "flatten", "(", ")", ")", "\n", "", "ism_ood", ".", "append", "(", "ism_score", ")", "\n", "\n", "", "for", "i", "in", "range", "(", "results_test", "[", "\"mu\"", "]", ".", "shape", "[", "0", "]", ")", ":", "\n", "        ", "if", "method_id", "==", "\"nmi\"", "or", "method_id", "==", "\"mi\"", ":", "\n", "            ", "ism_score", "=", "method", "(", "convert_image_int", "(", "results_test", "[", "\"mu\"", "]", "[", "i", "]", ")", ",", "convert_image_int", "(", "results_test", "[", "\"input\"", "]", "[", "i", "]", ")", ")", "\n", "", "elif", "method_id", "==", "\"bce\"", "or", "method_id", "==", "\"mse\"", ":", "\n", "            ", "ism_score", "=", "np", ".", "mean", "(", "method", "(", "results_test", "[", "\"mu\"", "]", "[", "i", "]", ".", "flatten", "(", ")", ",", "results_test", "[", "\"input\"", "]", "[", "i", "]", ".", "flatten", "(", ")", ")", ")", "*", "-", "1", "\n", "", "else", ":", "\n", "            ", "ism_score", "=", "method", "(", "results_test", "[", "\"mu\"", "]", "[", "i", "]", ".", "flatten", "(", ")", ",", "results_test", "[", "\"input\"", "]", "[", "i", "]", ".", "flatten", "(", ")", ")", "\n", "", "ism_test", ".", "append", "(", "ism_score", ")", "\n", "", "return", "ism_test", ",", "ism_ood", "\n", "\n"]], "home.repos.pwc.inspect_result.bangxiangyong_bae-ood-images.None.image_publication_ism_hist.ax_kde": [[215, 217], ["pandas.DataFrame().plot", "pandas.DataFrame"], "function", ["None"], ["def", "ax_kde", "(", "ax", ",", "data", ")", ":", "\n", "    ", "pd", ".", "DataFrame", "(", "data", ")", ".", "plot", "(", "kind", "=", "'density'", ",", "ax", "=", "ax", ")", "\n", "\n"]]}