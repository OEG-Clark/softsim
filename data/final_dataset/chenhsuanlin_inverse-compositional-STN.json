{"home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.traffic-sign-tensorflow.options.set": [[6, 85], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "int", "numpy.array", "numpy.array", "numpy.array", "warp.fit", "warp.fit", "print", "print", "print", "print", "print", "print", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "int", "int", "numpy.floor", "int", "int", "int", "int", "print", "print", "print", "parser.parse_args.size.split", "parser.parse_args.sizeFull.split", "numpy.sqrt", "util.toGreen", "util.toGreen", "util.toYellow", "util.toYellow", "util.toYellow", "util.toYellow", "util.toYellow", "util.toYellow", "util.toYellow", "util.toMagenta", "util.toYellow", "util.toYellow", "util.toYellow", "util.toYellow"], "function", ["home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.fit", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.fit", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toGreen", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toGreen", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toYellow", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toYellow", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toYellow", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toYellow", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toYellow", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toYellow", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toYellow", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toMagenta", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toYellow", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toYellow", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toYellow", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toYellow"], ["def", "set", "(", "training", ")", ":", "\n", "\n", "# parse input arguments", "\n", "\t", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\"netType\"", ",", "choices", "=", "[", "\"CNN\"", ",", "\"STN\"", ",", "\"IC-STN\"", "]", ",", "help", "=", "\"type of network\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--group\"", ",", "default", "=", "\"0\"", ",", "help", "=", "\"name for group\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--model\"", ",", "default", "=", "\"test\"", ",", "help", "=", "\"name for model instance\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--size\"", ",", "default", "=", "\"36x36\"", ",", "help", "=", "\"image resolution\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--sizeFull\"", ",", "default", "=", "\"50x50\"", ",", "help", "=", "\"full image resolution\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--warpType\"", ",", "default", "=", "\"homography\"", ",", "help", "=", "\"type of warp function on images\"", ",", "\n", "choices", "=", "[", "\"translation\"", ",", "\"similarity\"", ",", "\"affine\"", ",", "\"homography\"", "]", ")", "\n", "parser", ".", "add_argument", "(", "\"--warpN\"", ",", "type", "=", "int", ",", "default", "=", "4", ",", "help", "=", "\"number of recurrent transformations (for IC-STN)\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--stdC\"", ",", "type", "=", "float", ",", "default", "=", "0.01", ",", "help", "=", "\"initialization stddev (classification network)\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--stdGP\"", ",", "type", "=", "float", ",", "default", "=", "0.001", ",", "help", "=", "\"initialization stddev (geometric predictor)\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--pertScale\"", ",", "type", "=", "float", ",", "default", "=", "0.25", ",", "help", "=", "\"initial perturbation scale\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--transScale\"", ",", "type", "=", "float", ",", "default", "=", "0.25", ",", "help", "=", "\"initial translation scale\"", ")", "\n", "if", "training", ":", "# training", "\n", "\t\t", "parser", ".", "add_argument", "(", "\"--batchSize\"", ",", "type", "=", "int", ",", "default", "=", "100", ",", "help", "=", "\"batch size for SGD\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--lrC\"", ",", "type", "=", "float", ",", "default", "=", "1e-2", ",", "help", "=", "\"learning rate (classification network)\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--lrCdecay\"", ",", "type", "=", "float", ",", "default", "=", "0.1", ",", "help", "=", "\"learning rate decay (classification network)\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--lrCstep\"", ",", "type", "=", "int", ",", "default", "=", "500000", ",", "help", "=", "\"learning rate decay step size (classification network)\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--lrGP\"", ",", "type", "=", "float", ",", "default", "=", "None", ",", "help", "=", "\"learning rate (geometric predictor)\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--lrGPdecay\"", ",", "type", "=", "float", ",", "default", "=", "0.1", ",", "help", "=", "\"learning rate decay (geometric predictor)\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--lrGPstep\"", ",", "type", "=", "int", ",", "default", "=", "500000", ",", "help", "=", "\"learning rate decay step size (geometric predictor)\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--fromIt\"", ",", "type", "=", "int", ",", "default", "=", "0", ",", "help", "=", "\"resume training from iteration number\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--toIt\"", ",", "type", "=", "int", ",", "default", "=", "1000000", ",", "help", "=", "\"run training to iteration number\"", ")", "\n", "", "else", ":", "# evaluation", "\n", "\t\t", "parser", ".", "add_argument", "(", "\"--batchSize\"", ",", "type", "=", "int", ",", "default", "=", "1", ",", "help", "=", "\"batch size for evaluation\"", ")", "\n", "", "opt", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "if", "opt", ".", "lrGP", "is", "None", ":", "opt", ".", "lrGP", "=", "0", "if", "opt", ".", "netType", "==", "\"CNN\"", "else", "1e-3", "if", "opt", ".", "netType", "==", "\"STN\"", "else", "3e-5", "if", "opt", ".", "netType", "==", "\"IC-STN\"", "else", "None", "\n", "\n", "# --- below are automatically set ---", "\n", "opt", ".", "training", "=", "training", "\n", "opt", ".", "H", ",", "opt", ".", "W", "=", "[", "int", "(", "x", ")", "for", "x", "in", "opt", ".", "size", ".", "split", "(", "\"x\"", ")", "]", "\n", "opt", ".", "fullH", ",", "opt", ".", "fullW", "=", "[", "int", "(", "x", ")", "for", "x", "in", "opt", ".", "sizeFull", ".", "split", "(", "\"x\"", ")", "]", "\n", "opt", ".", "visBlockSize", "=", "int", "(", "np", ".", "floor", "(", "np", ".", "sqrt", "(", "opt", ".", "batchSize", ")", ")", ")", "\n", "opt", ".", "warpDim", "=", "2", "if", "opt", ".", "warpType", "==", "\"translation\"", "else", "4", "if", "opt", ".", "warpType", "==", "\"similarity\"", "else", "6", "if", "opt", ".", "warpType", "==", "\"affine\"", "else", "8", "if", "opt", ".", "warpType", "==", "\"homography\"", "else", "None", "\n", "opt", ".", "labelN", "=", "43", "\n", "opt", ".", "canon4pts", "=", "np", ".", "array", "(", "[", "[", "-", "1", ",", "-", "1", "]", ",", "[", "-", "1", ",", "1", "]", ",", "[", "1", ",", "1", "]", ",", "[", "1", ",", "-", "1", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "opt", ".", "image4pts", "=", "np", ".", "array", "(", "[", "[", "0", ",", "0", "]", ",", "[", "0", ",", "opt", ".", "H", "-", "1", "]", ",", "[", "opt", ".", "W", "-", "1", ",", "opt", ".", "H", "-", "1", "]", ",", "[", "opt", ".", "W", "-", "1", ",", "0", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "opt", ".", "bbox", "=", "[", "int", "(", "opt", ".", "fullW", "/", "2", "-", "opt", ".", "W", "/", "2", ")", ",", "int", "(", "opt", ".", "fullH", "/", "2", "-", "opt", ".", "H", "/", "2", ")", ",", "int", "(", "opt", ".", "fullW", "/", "2", "+", "opt", ".", "W", "/", "2", ")", ",", "int", "(", "opt", ".", "fullH", "/", "2", "+", "opt", ".", "H", "/", "2", ")", "]", "\n", "opt", ".", "bbox4pts", "=", "np", ".", "array", "(", "[", "[", "opt", ".", "bbox", "[", "0", "]", ",", "opt", ".", "bbox", "[", "1", "]", "]", ",", "[", "opt", ".", "bbox", "[", "0", "]", ",", "opt", ".", "bbox", "[", "3", "]", "]", ",", "\n", "[", "opt", ".", "bbox", "[", "2", "]", ",", "opt", ".", "bbox", "[", "3", "]", "]", ",", "[", "opt", ".", "bbox", "[", "2", "]", ",", "opt", ".", "bbox", "[", "1", "]", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "opt", ".", "refMtrx", "=", "warp", ".", "fit", "(", "Xsrc", "=", "opt", ".", "canon4pts", ",", "Xdst", "=", "opt", ".", "image4pts", ")", "\n", "opt", ".", "bboxRefMtrx", "=", "warp", ".", "fit", "(", "Xsrc", "=", "opt", ".", "canon4pts", ",", "Xdst", "=", "opt", ".", "bbox4pts", ")", "\n", "if", "opt", ".", "netType", "==", "\"STN\"", ":", "opt", ".", "warpN", "=", "1", "\n", "\n", "print", "(", "\"({0}) {1}\"", ".", "format", "(", "\n", "util", ".", "toGreen", "(", "\"{0}\"", ".", "format", "(", "opt", ".", "group", ")", ")", ",", "\n", "util", ".", "toGreen", "(", "\"{0}\"", ".", "format", "(", "opt", ".", "model", ")", ")", ")", ")", "\n", "print", "(", "\"------------------------------------------\"", ")", "\n", "print", "(", "\"network type: {0}, recurrent warps: {1}\"", ".", "format", "(", "\n", "util", ".", "toYellow", "(", "\"{0}\"", ".", "format", "(", "opt", ".", "netType", ")", ")", ",", "\n", "util", ".", "toYellow", "(", "\"{0}\"", ".", "format", "(", "opt", ".", "warpN", "if", "opt", ".", "netType", "==", "\"IC-STN\"", "else", "\"X\"", ")", ")", ")", ")", "\n", "print", "(", "\"batch size: {0}, image size: {1}x{2}\"", ".", "format", "(", "\n", "util", ".", "toYellow", "(", "\"{0}\"", ".", "format", "(", "opt", ".", "batchSize", ")", ")", ",", "\n", "util", ".", "toYellow", "(", "\"{0}\"", ".", "format", "(", "opt", ".", "H", ")", ")", ",", "\n", "util", ".", "toYellow", "(", "\"{0}\"", ".", "format", "(", "opt", ".", "W", ")", ")", ")", ")", "\n", "print", "(", "\"warpScale: (pert) {0} (trans) {1}\"", ".", "format", "(", "\n", "util", ".", "toYellow", "(", "\"{0}\"", ".", "format", "(", "opt", ".", "pertScale", ")", ")", ",", "\n", "util", ".", "toYellow", "(", "\"{0}\"", ".", "format", "(", "opt", ".", "transScale", ")", ")", ")", ")", "\n", "if", "training", ":", "\n", "\t\t", "print", "(", "\"[geometric predictor]    stddev={0}, lr={1}\"", ".", "format", "(", "\n", "util", ".", "toYellow", "(", "\"{0:.0e}\"", ".", "format", "(", "opt", ".", "stdGP", ")", ")", ",", "\n", "util", ".", "toYellow", "(", "\"{0:.0e}\"", ".", "format", "(", "opt", ".", "lrGP", ")", ")", ")", ")", "\n", "print", "(", "\"[classification network] stddev={0}, lr={1}\"", ".", "format", "(", "\n", "util", ".", "toYellow", "(", "\"{0:.0e}\"", ".", "format", "(", "opt", ".", "stdC", ")", ")", ",", "\n", "util", ".", "toYellow", "(", "\"{0:.0e}\"", ".", "format", "(", "opt", ".", "lrC", ")", ")", ")", ")", "\n", "", "print", "(", "\"------------------------------------------\"", ")", "\n", "if", "training", ":", "\n", "\t\t", "print", "(", "util", ".", "toMagenta", "(", "\"training model ({0}) {1}...\"", ".", "format", "(", "opt", ".", "group", ",", "opt", ".", "model", ")", ")", ")", "\n", "\n", "", "return", "opt", "\n", "", ""]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.traffic-sign-tensorflow.graph.fullCNN": [[7, 36], ["graph.createVariable", "graph.createVariable", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.nn.conv2d", "tensorflow.matmul", "tensorflow.variable_scope", "graph.fullCNN.conv2Layer"], "function", ["home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.graph.createVariable", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.graph.createVariable"], ["def", "fullCNN", "(", "opt", ",", "image", ")", ":", "\n", "\t", "def", "conv2Layer", "(", "opt", ",", "feat", ",", "outDim", ")", ":", "\n", "\t\t", "weight", ",", "bias", "=", "createVariable", "(", "opt", ",", "[", "7", ",", "7", ",", "int", "(", "feat", ".", "shape", "[", "-", "1", "]", ")", ",", "outDim", "]", ",", "stddev", "=", "opt", ".", "stdC", ")", "\n", "conv", "=", "tf", ".", "nn", ".", "conv2d", "(", "feat", ",", "weight", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "\"VALID\"", ")", "+", "bias", "\n", "return", "conv", "\n", "", "def", "linearLayer", "(", "opt", ",", "feat", ",", "outDim", ")", ":", "\n", "\t\t", "weight", ",", "bias", "=", "createVariable", "(", "opt", ",", "[", "int", "(", "feat", ".", "shape", "[", "-", "1", "]", ")", ",", "outDim", "]", ",", "stddev", "=", "opt", ".", "stdC", ")", "\n", "fc", "=", "tf", ".", "matmul", "(", "feat", ",", "weight", ")", "+", "bias", "\n", "return", "fc", "\n", "", "with", "tf", ".", "variable_scope", "(", "\"classifier\"", ")", ":", "\n", "\t\t", "feat", "=", "image", "\n", "with", "tf", ".", "variable_scope", "(", "\"conv1\"", ")", ":", "\n", "\t\t\t", "feat", "=", "conv2Layer", "(", "opt", ",", "feat", ",", "6", ")", "\n", "feat", "=", "tf", ".", "nn", ".", "relu", "(", "feat", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "\"conv2\"", ")", ":", "\n", "\t\t\t", "feat", "=", "conv2Layer", "(", "opt", ",", "feat", ",", "12", ")", "\n", "feat", "=", "tf", ".", "nn", ".", "relu", "(", "feat", ")", "\n", "feat", "=", "tf", ".", "nn", ".", "max_pool", "(", "feat", ",", "ksize", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "strides", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "padding", "=", "\"VALID\"", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "\"conv3\"", ")", ":", "\n", "\t\t\t", "feat", "=", "conv2Layer", "(", "opt", ",", "feat", ",", "24", ")", "\n", "feat", "=", "tf", ".", "nn", ".", "relu", "(", "feat", ")", "\n", "", "feat", "=", "tf", ".", "reshape", "(", "feat", ",", "[", "opt", ".", "batchSize", ",", "-", "1", "]", ")", "\n", "with", "tf", ".", "variable_scope", "(", "\"fc4\"", ")", ":", "\n", "\t\t\t", "feat", "=", "linearLayer", "(", "opt", ",", "feat", ",", "200", ")", "\n", "feat", "=", "tf", ".", "nn", ".", "relu", "(", "feat", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "\"fc5\"", ")", ":", "\n", "\t\t\t", "feat", "=", "linearLayer", "(", "opt", ",", "feat", ",", "opt", ".", "labelN", ")", "\n", "", "output", "=", "feat", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.traffic-sign-tensorflow.graph.CNN": [[38, 61], ["graph.createVariable", "graph.createVariable", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.nn.conv2d", "tensorflow.matmul", "tensorflow.variable_scope", "graph.fullCNN.conv2Layer"], "function", ["home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.graph.createVariable", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.graph.createVariable"], ["", "def", "CNN", "(", "opt", ",", "image", ")", ":", "\n", "\t", "def", "conv2Layer", "(", "opt", ",", "feat", ",", "outDim", ")", ":", "\n", "\t\t", "weight", ",", "bias", "=", "createVariable", "(", "opt", ",", "[", "7", ",", "7", ",", "int", "(", "feat", ".", "shape", "[", "-", "1", "]", ")", ",", "outDim", "]", ",", "stddev", "=", "opt", ".", "stdC", ")", "\n", "conv", "=", "tf", ".", "nn", ".", "conv2d", "(", "feat", ",", "weight", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "\"VALID\"", ")", "+", "bias", "\n", "return", "conv", "\n", "", "def", "linearLayer", "(", "opt", ",", "feat", ",", "outDim", ")", ":", "\n", "\t\t", "weight", ",", "bias", "=", "createVariable", "(", "opt", ",", "[", "int", "(", "feat", ".", "shape", "[", "-", "1", "]", ")", ",", "outDim", "]", ",", "stddev", "=", "opt", ".", "stdC", ")", "\n", "fc", "=", "tf", ".", "matmul", "(", "feat", ",", "weight", ")", "+", "bias", "\n", "return", "fc", "\n", "", "with", "tf", ".", "variable_scope", "(", "\"classifier\"", ")", ":", "\n", "\t\t", "feat", "=", "image", "\n", "with", "tf", ".", "variable_scope", "(", "\"conv1\"", ")", ":", "\n", "\t\t\t", "feat", "=", "conv2Layer", "(", "opt", ",", "feat", ",", "6", ")", "\n", "feat", "=", "tf", ".", "nn", ".", "relu", "(", "feat", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "\"conv2\"", ")", ":", "\n", "\t\t\t", "feat", "=", "conv2Layer", "(", "opt", ",", "feat", ",", "12", ")", "\n", "feat", "=", "tf", ".", "nn", ".", "relu", "(", "feat", ")", "\n", "feat", "=", "tf", ".", "nn", ".", "max_pool", "(", "feat", ",", "ksize", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "strides", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "padding", "=", "\"VALID\"", ")", "\n", "", "feat", "=", "tf", ".", "reshape", "(", "feat", ",", "[", "opt", ".", "batchSize", ",", "-", "1", "]", ")", "\n", "with", "tf", ".", "variable_scope", "(", "\"fc3\"", ")", ":", "\n", "\t\t\t", "feat", "=", "linearLayer", "(", "opt", ",", "feat", ",", "opt", ".", "labelN", ")", "\n", "", "output", "=", "feat", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.traffic-sign-tensorflow.graph.STN": [[63, 89], ["warp.vec2mtrx", "warp.transformImage", "imageWarpAll.append", "graph.createVariable", "graph.createVariable", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.nn.conv2d", "tensorflow.matmul", "tensorflow.variable_scope", "graph.fullCNN.conv2Layer"], "function", ["home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.vec2mtrx", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.transformImage", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.graph.createVariable", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.graph.createVariable"], ["", "def", "STN", "(", "opt", ",", "image", ")", ":", "\n", "\t", "def", "conv2Layer", "(", "opt", ",", "feat", ",", "outDim", ")", ":", "\n", "\t\t", "weight", ",", "bias", "=", "createVariable", "(", "opt", ",", "[", "7", ",", "7", ",", "int", "(", "feat", ".", "shape", "[", "-", "1", "]", ")", ",", "outDim", "]", ",", "stddev", "=", "opt", ".", "stdGP", ")", "\n", "conv", "=", "tf", ".", "nn", ".", "conv2d", "(", "feat", ",", "weight", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "\"VALID\"", ")", "+", "bias", "\n", "return", "conv", "\n", "", "def", "linearLayer", "(", "opt", ",", "feat", ",", "outDim", ")", ":", "\n", "\t\t", "weight", ",", "bias", "=", "createVariable", "(", "opt", ",", "[", "int", "(", "feat", ".", "shape", "[", "-", "1", "]", ")", ",", "outDim", "]", ",", "stddev", "=", "opt", ".", "stdGP", ")", "\n", "fc", "=", "tf", ".", "matmul", "(", "feat", ",", "weight", ")", "+", "bias", "\n", "return", "fc", "\n", "", "imageWarpAll", "=", "[", "image", "]", "\n", "with", "tf", ".", "variable_scope", "(", "\"geometric\"", ")", ":", "\n", "\t\t", "feat", "=", "image", "\n", "with", "tf", ".", "variable_scope", "(", "\"conv1\"", ")", ":", "\n", "\t\t\t", "feat", "=", "conv2Layer", "(", "opt", ",", "feat", ",", "6", ")", "\n", "feat", "=", "tf", ".", "nn", ".", "relu", "(", "feat", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "\"conv2\"", ")", ":", "\n", "\t\t\t", "feat", "=", "conv2Layer", "(", "opt", ",", "feat", ",", "24", ")", "\n", "feat", "=", "tf", ".", "nn", ".", "relu", "(", "feat", ")", "\n", "", "feat", "=", "tf", ".", "reshape", "(", "feat", ",", "[", "opt", ".", "batchSize", ",", "-", "1", "]", ")", "\n", "with", "tf", ".", "variable_scope", "(", "\"fc3\"", ")", ":", "\n", "\t\t\t", "feat", "=", "linearLayer", "(", "opt", ",", "feat", ",", "opt", ".", "warpDim", ")", "\n", "", "p", "=", "feat", "\n", "", "pMtrx", "=", "warp", ".", "vec2mtrx", "(", "opt", ",", "p", ")", "\n", "imageWarp", "=", "warp", ".", "transformImage", "(", "opt", ",", "image", ",", "pMtrx", ")", "\n", "imageWarpAll", ".", "append", "(", "imageWarp", ")", "\n", "return", "imageWarpAll", "\n", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.traffic-sign-tensorflow.graph.ICSTN": [[91, 122], ["range", "warp.vec2mtrx", "warp.transformCropImage", "imageWarpAll.append", "graph.createVariable", "graph.createVariable", "warp.compose", "tensorflow.nn.conv2d", "tensorflow.matmul", "tensorflow.variable_scope", "warp.vec2mtrx", "warp.transformCropImage", "imageWarpAll.append", "tensorflow.reshape", "int", "int", "tensorflow.variable_scope", "graph.fullCNN.conv2Layer"], "function", ["home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.vec2mtrx", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.traffic-sign-tensorflow.warp.transformCropImage", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.graph.createVariable", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.graph.createVariable", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.compose", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.vec2mtrx", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.traffic-sign-tensorflow.warp.transformCropImage"], ["", "def", "ICSTN", "(", "opt", ",", "imageFull", ",", "p", ")", ":", "\n", "\t", "def", "conv2Layer", "(", "opt", ",", "feat", ",", "outDim", ")", ":", "\n", "\t\t", "weight", ",", "bias", "=", "createVariable", "(", "opt", ",", "[", "7", ",", "7", ",", "int", "(", "feat", ".", "shape", "[", "-", "1", "]", ")", ",", "outDim", "]", ",", "stddev", "=", "opt", ".", "stdGP", ")", "\n", "conv", "=", "tf", ".", "nn", ".", "conv2d", "(", "feat", ",", "weight", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "\"VALID\"", ")", "+", "bias", "\n", "return", "conv", "\n", "", "def", "linearLayer", "(", "opt", ",", "feat", ",", "outDim", ")", ":", "\n", "\t\t", "weight", ",", "bias", "=", "createVariable", "(", "opt", ",", "[", "int", "(", "feat", ".", "shape", "[", "-", "1", "]", ")", ",", "outDim", "]", ",", "stddev", "=", "opt", ".", "stdGP", ")", "\n", "fc", "=", "tf", ".", "matmul", "(", "feat", ",", "weight", ")", "+", "bias", "\n", "return", "fc", "\n", "", "imageWarpAll", "=", "[", "]", "\n", "for", "l", "in", "range", "(", "opt", ".", "warpN", ")", ":", "\n", "\t\t", "with", "tf", ".", "variable_scope", "(", "\"geometric\"", ",", "reuse", "=", "l", ">", "0", ")", ":", "\n", "\t\t\t", "pMtrx", "=", "warp", ".", "vec2mtrx", "(", "opt", ",", "p", ")", "\n", "imageWarp", "=", "warp", ".", "transformCropImage", "(", "opt", ",", "imageFull", ",", "pMtrx", ")", "\n", "imageWarpAll", ".", "append", "(", "imageWarp", ")", "\n", "feat", "=", "imageWarp", "\n", "with", "tf", ".", "variable_scope", "(", "\"conv1\"", ")", ":", "\n", "\t\t\t\t", "feat", "=", "conv2Layer", "(", "opt", ",", "feat", ",", "6", ")", "\n", "feat", "=", "tf", ".", "nn", ".", "relu", "(", "feat", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "\"conv2\"", ")", ":", "\n", "\t\t\t\t", "feat", "=", "conv2Layer", "(", "opt", ",", "feat", ",", "24", ")", "\n", "feat", "=", "tf", ".", "nn", ".", "relu", "(", "feat", ")", "\n", "", "feat", "=", "tf", ".", "reshape", "(", "feat", ",", "[", "opt", ".", "batchSize", ",", "-", "1", "]", ")", "\n", "with", "tf", ".", "variable_scope", "(", "\"fc3\"", ")", ":", "\n", "\t\t\t\t", "feat", "=", "linearLayer", "(", "opt", ",", "feat", ",", "opt", ".", "warpDim", ")", "\n", "", "dp", "=", "feat", "\n", "", "p", "=", "warp", ".", "compose", "(", "opt", ",", "p", ",", "dp", ")", "\n", "", "pMtrx", "=", "warp", ".", "vec2mtrx", "(", "opt", ",", "p", ")", "\n", "imageWarp", "=", "warp", ".", "transformCropImage", "(", "opt", ",", "imageFull", ",", "pMtrx", ")", "\n", "imageWarpAll", ".", "append", "(", "imageWarp", ")", "\n", "return", "imageWarpAll", "\n", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.traffic-sign-tensorflow.graph.createVariable": [[124, 131], ["tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.random_normal_initializer", "tensorflow.random_normal_initializer"], "function", ["None"], ["", "def", "createVariable", "(", "opt", ",", "weightShape", ",", "biasShape", "=", "None", ",", "stddev", "=", "None", ")", ":", "\n", "\t", "if", "biasShape", "is", "None", ":", "biasShape", "=", "[", "weightShape", "[", "-", "1", "]", "]", "\n", "weight", "=", "tf", ".", "get_variable", "(", "\"weight\"", ",", "shape", "=", "weightShape", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "stddev", "=", "stddev", ")", ")", "\n", "bias", "=", "tf", ".", "get_variable", "(", "\"bias\"", ",", "shape", "=", "biasShape", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "stddev", "=", "stddev", ")", ")", "\n", "return", "weight", ",", "bias", "\n", "", ""]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.traffic-sign-tensorflow.data.loadGTSRB": [[11, 70], ["numpy.load", "GTSRB[].item", "GTSRB[].item", "os.path.exists", "os.makedirs", "os.system", "os.system", "os.system", "os.system", "os.system", "os.system", "print", "range", "print", "numpy.savez", "os.system", "os.path.dirname", "numpy.array", "numpy.array", "numpy.array", "open", "csv.reader", "next", "numpy.array", "numpy.array", "numpy.array", "open", "csv.reader", "next", "matplotlib.imread", "scipy.misc.imresize", "scipy.misc.imresize", "images.append", "bboxes.append", "labels.append", "matplotlib.imread", "scipy.misc.imresize", "scipy.misc.imresize", "images.append", "bboxes.append", "labels.append", "int", "int", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float", "float"], "function", ["home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.imread", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.imread"], ["def", "loadGTSRB", "(", "opt", ",", "fname", ")", ":", "\n", "\t", "if", "not", "os", ".", "path", ".", "exists", "(", "fname", ")", ":", "\n", "# download and preprocess GTSRB dataset", "\n", "\t\t", "os", ".", "makedirs", "(", "os", ".", "path", ".", "dirname", "(", "fname", ")", ")", "\n", "os", ".", "system", "(", "\"wget -O data/GTSRB_Final_Training_Images.zip http://benchmark.ini.rub.de/Dataset/GTSRB_Final_Training_Images.zip\"", ")", "\n", "os", ".", "system", "(", "\"wget -O data/GTSRB_Final_Test_Images.zip http://benchmark.ini.rub.de/Dataset/GTSRB_Final_Test_Images.zip\"", ")", "\n", "os", ".", "system", "(", "\"wget -O data/GTSRB_Final_Test_GT.zip http://benchmark.ini.rub.de/Dataset/GTSRB_Final_Test_GT.zip\"", ")", "\n", "os", ".", "system", "(", "\"cd data && unzip GTSRB_Final_Training_Images.zip\"", ")", "\n", "os", ".", "system", "(", "\"cd data && unzip GTSRB_Final_Test_Images.zip\"", ")", "\n", "os", ".", "system", "(", "\"cd data && unzip GTSRB_Final_Test_GT.zip\"", ")", "\n", "# training data", "\n", "print", "(", "\"preparing training data...\"", ")", "\n", "images", ",", "bboxes", ",", "labels", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "c", "in", "range", "(", "43", ")", ":", "\n", "\t\t\t", "prefix", "=", "\"data/GTSRB/Final_Training/Images/{0:05d}\"", ".", "format", "(", "c", ")", "\n", "with", "open", "(", "\"{0}/GT-{1:05d}.csv\"", ".", "format", "(", "prefix", ",", "c", ")", ")", "as", "file", ":", "\n", "\t\t\t\t", "reader", "=", "csv", ".", "reader", "(", "file", ",", "delimiter", "=", "\";\"", ")", "\n", "next", "(", "reader", ")", "\n", "for", "line", "in", "reader", ":", "\n", "\t\t\t\t\t", "img", "=", "plt", ".", "imread", "(", "prefix", "+", "\"/\"", "+", "line", "[", "0", "]", ")", "\n", "rawH", ",", "rawW", "=", "img", ".", "shape", "[", "0", "]", ",", "img", ".", "shape", "[", "1", "]", "\n", "scaleH", ",", "scaleW", "=", "float", "(", "opt", ".", "fullH", ")", "/", "rawH", ",", "float", "(", "opt", ".", "fullW", ")", "/", "rawW", "\n", "imgResize", "=", "scipy", ".", "misc", ".", "imresize", "(", "img", ",", "(", "opt", ".", "fullH", ",", "opt", ".", "fullW", ",", "3", ")", ")", "\n", "images", ".", "append", "(", "imgResize", ")", "\n", "bboxes", ".", "append", "(", "[", "float", "(", "line", "[", "3", "]", ")", "*", "scaleW", ",", "float", "(", "line", "[", "4", "]", ")", "*", "scaleH", ",", "\n", "float", "(", "line", "[", "5", "]", ")", "*", "scaleW", ",", "float", "(", "line", "[", "6", "]", ")", "*", "scaleH", "]", ")", "\n", "labels", ".", "append", "(", "int", "(", "line", "[", "7", "]", ")", ")", "\n", "", "", "", "trainData", "=", "{", "\n", "\"image\"", ":", "np", ".", "array", "(", "images", ")", ",", "\n", "\"bbox\"", ":", "np", ".", "array", "(", "bboxes", ")", ",", "\n", "\"label\"", ":", "np", ".", "array", "(", "labels", ")", "\n", "}", "\n", "# test data", "\n", "print", "(", "\"preparing test data...\"", ")", "\n", "images", ",", "bboxes", ",", "labels", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "prefix", "=", "\"data/GTSRB/Final_Test/Images/\"", "\n", "with", "open", "(", "\"data/GT-final_test.csv\"", ")", "as", "file", ":", "\n", "\t\t\t", "reader", "=", "csv", ".", "reader", "(", "file", ",", "delimiter", "=", "\";\"", ")", "\n", "next", "(", "reader", ")", "\n", "for", "line", "in", "reader", ":", "\n", "\t\t\t\t", "img", "=", "plt", ".", "imread", "(", "prefix", "+", "\"/\"", "+", "line", "[", "0", "]", ")", "\n", "rawH", ",", "rawW", "=", "img", ".", "shape", "[", "0", "]", ",", "img", ".", "shape", "[", "1", "]", "\n", "scaleH", ",", "scaleW", "=", "float", "(", "opt", ".", "fullH", ")", "/", "rawH", ",", "float", "(", "opt", ".", "fullW", ")", "/", "rawW", "\n", "imgResize", "=", "scipy", ".", "misc", ".", "imresize", "(", "img", ",", "(", "opt", ".", "fullH", ",", "opt", ".", "fullW", ",", "3", ")", ")", "\n", "images", ".", "append", "(", "imgResize", ")", "\n", "bboxes", ".", "append", "(", "[", "float", "(", "line", "[", "3", "]", ")", "*", "scaleW", ",", "float", "(", "line", "[", "4", "]", ")", "*", "scaleH", ",", "\n", "float", "(", "line", "[", "5", "]", ")", "*", "scaleW", ",", "float", "(", "line", "[", "6", "]", ")", "*", "scaleH", "]", ")", "\n", "labels", ".", "append", "(", "int", "(", "line", "[", "7", "]", ")", ")", "\n", "", "", "testData", "=", "{", "\n", "\"image\"", ":", "np", ".", "array", "(", "images", ")", ",", "\n", "\"bbox\"", ":", "np", ".", "array", "(", "bboxes", ")", ",", "\n", "\"label\"", ":", "np", ".", "array", "(", "labels", ")", "\n", "}", "\n", "np", ".", "savez", "(", "fname", ",", "train", "=", "trainData", ",", "test", "=", "testData", ")", "\n", "os", ".", "system", "(", "\"rm -rf data/*.zip\"", ")", "\n", "", "GTSRB", "=", "np", ".", "load", "(", "fname", ")", "\n", "trainData", "=", "GTSRB", "[", "\"train\"", "]", ".", "item", "(", ")", "\n", "testData", "=", "GTSRB", "[", "\"test\"", "]", ".", "item", "(", ")", "\n", "return", "trainData", ",", "testData", "\n", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.traffic-sign-tensorflow.data.genPerturbations": [[72, 102], ["tensorflow.name_scope", "numpy.tile", "numpy.tile", "numpy.zeros", "numpy.ones", "tensorflow.concat", "tensorflow.expand_dims", "tensorflow.to_float", "tensorflow.expand_dims", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.concat", "tensorflow.matrix_solve", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "tensorflow.concat", "tensorflow.matrix_solve_ls", "tensorflow.stack", "tensorflow.stack", "numpy.stack", "numpy.stack", "numpy.stack", "numpy.stack", "numpy.stack", "numpy.stack"], "function", ["None"], ["", "def", "genPerturbations", "(", "opt", ")", ":", "\n", "\t", "with", "tf", ".", "name_scope", "(", "\"genPerturbations\"", ")", ":", "\n", "\t\t", "X", "=", "np", ".", "tile", "(", "opt", ".", "canon4pts", "[", ":", ",", "0", "]", ",", "[", "opt", ".", "batchSize", ",", "1", "]", ")", "\n", "Y", "=", "np", ".", "tile", "(", "opt", ".", "canon4pts", "[", ":", ",", "1", "]", ",", "[", "opt", ".", "batchSize", ",", "1", "]", ")", "\n", "dX", "=", "tf", ".", "random_normal", "(", "[", "opt", ".", "batchSize", ",", "4", "]", ")", "*", "opt", ".", "pertScale", "+", "tf", ".", "random_normal", "(", "[", "opt", ".", "batchSize", ",", "1", "]", ")", "*", "opt", ".", "transScale", "\n", "dY", "=", "tf", ".", "random_normal", "(", "[", "opt", ".", "batchSize", ",", "4", "]", ")", "*", "opt", ".", "pertScale", "+", "tf", ".", "random_normal", "(", "[", "opt", ".", "batchSize", ",", "1", "]", ")", "*", "opt", ".", "transScale", "\n", "O", "=", "np", ".", "zeros", "(", "[", "opt", ".", "batchSize", ",", "4", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "I", "=", "np", ".", "ones", "(", "[", "opt", ".", "batchSize", ",", "4", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "# fit warp parameters to generated displacements", "\n", "if", "opt", ".", "warpType", "==", "\"homography\"", ":", "\n", "\t\t\t", "A", "=", "tf", ".", "concat", "(", "[", "tf", ".", "stack", "(", "[", "X", ",", "Y", ",", "I", ",", "O", ",", "O", ",", "O", ",", "-", "X", "*", "(", "X", "+", "dX", ")", ",", "-", "Y", "*", "(", "X", "+", "dX", ")", "]", ",", "axis", "=", "-", "1", ")", ",", "\n", "tf", ".", "stack", "(", "[", "O", ",", "O", ",", "O", ",", "X", ",", "Y", ",", "I", ",", "-", "X", "*", "(", "Y", "+", "dY", ")", ",", "-", "Y", "*", "(", "Y", "+", "dY", ")", "]", ",", "axis", "=", "-", "1", ")", "]", ",", "1", ")", "\n", "b", "=", "tf", ".", "expand_dims", "(", "tf", ".", "concat", "(", "[", "X", "+", "dX", ",", "Y", "+", "dY", "]", ",", "1", ")", ",", "-", "1", ")", "\n", "pPert", "=", "tf", ".", "matrix_solve", "(", "A", ",", "b", ")", "[", ":", ",", ":", ",", "0", "]", "\n", "pPert", "-=", "tf", ".", "to_float", "(", "[", "[", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", "]", "]", ")", "\n", "", "else", ":", "\n", "\t\t\t", "if", "opt", ".", "warpType", "==", "\"translation\"", ":", "\n", "\t\t\t\t", "J", "=", "np", ".", "concatenate", "(", "[", "np", ".", "stack", "(", "[", "I", ",", "O", "]", ",", "axis", "=", "-", "1", ")", ",", "\n", "np", ".", "stack", "(", "[", "O", ",", "I", "]", ",", "axis", "=", "-", "1", ")", "]", ",", "axis", "=", "1", ")", "\n", "", "if", "opt", ".", "warpType", "==", "\"similarity\"", ":", "\n", "\t\t\t\t", "J", "=", "np", ".", "concatenate", "(", "[", "np", ".", "stack", "(", "[", "X", ",", "Y", ",", "I", ",", "O", "]", ",", "axis", "=", "-", "1", ")", ",", "\n", "np", ".", "stack", "(", "[", "-", "Y", ",", "X", ",", "O", ",", "I", "]", ",", "axis", "=", "-", "1", ")", "]", ",", "axis", "=", "1", ")", "\n", "", "if", "opt", ".", "warpType", "==", "\"affine\"", ":", "\n", "\t\t\t\t", "J", "=", "np", ".", "concatenate", "(", "[", "np", ".", "stack", "(", "[", "X", ",", "Y", ",", "I", ",", "O", ",", "O", ",", "O", "]", ",", "axis", "=", "-", "1", ")", ",", "\n", "np", ".", "stack", "(", "[", "O", ",", "O", ",", "O", ",", "X", ",", "Y", ",", "I", "]", ",", "axis", "=", "-", "1", ")", "]", ",", "axis", "=", "1", ")", "\n", "", "dXY", "=", "tf", ".", "expand_dims", "(", "tf", ".", "concat", "(", "[", "dX", ",", "dY", "]", ",", "1", ")", ",", "-", "1", ")", "\n", "pPert", "=", "tf", ".", "matrix_solve_ls", "(", "J", ",", "dXY", ")", "[", ":", ",", ":", ",", "0", "]", "\n", "", "", "return", "pPert", "\n", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.traffic-sign-tensorflow.data.makeBatch": [[104, 114], ["len", "numpy.random.randint"], "function", ["None"], ["", "def", "makeBatch", "(", "opt", ",", "data", ",", "PH", ")", ":", "\n", "\t", "N", "=", "len", "(", "data", "[", "\"image\"", "]", ")", "\n", "randIdx", "=", "np", ".", "random", ".", "randint", "(", "N", ",", "size", "=", "[", "opt", ".", "batchSize", "]", ")", "\n", "# put data in placeholders", "\n", "[", "image", ",", "label", "]", "=", "PH", "\n", "batch", "=", "{", "\n", "image", ":", "data", "[", "\"image\"", "]", "[", "randIdx", "]", "/", "255.0", ",", "\n", "label", ":", "data", "[", "\"label\"", "]", "[", "randIdx", "]", ",", "\n", "}", "\n", "return", "batch", "\n", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.traffic-sign-tensorflow.data.evalTest": [[116, 153], ["len", "int", "range", "numpy.ceil", "numpy.zeros", "sess.run", "pred[].sum", "float", "len", "numpy.arange", "numpy.arange", "len", "range", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "len", "len", "[].append", "[].append", "numpy.mean", "numpy.mean", "numpy.var", "numpy.var", "len"], "function", ["None"], ["", "def", "evalTest", "(", "opt", ",", "sess", ",", "data", ",", "PH", ",", "prediction", ",", "imagesEval", "=", "[", "]", ")", ":", "\n", "\t", "N", "=", "len", "(", "data", "[", "\"image\"", "]", ")", "\n", "# put data in placeholders", "\n", "[", "image", ",", "label", "]", "=", "PH", "\n", "batchN", "=", "int", "(", "np", ".", "ceil", "(", "N", "/", "opt", ".", "batchSize", ")", ")", "\n", "warped", "=", "[", "{", "}", ",", "{", "}", "]", "\n", "count", "=", "0", "\n", "for", "b", "in", "range", "(", "batchN", ")", ":", "\n", "# use some dummy data (0) as batch filler if necessary", "\n", "\t\t", "if", "b", "!=", "batchN", "-", "1", ":", "\n", "\t\t\t", "realIdx", "=", "np", ".", "arange", "(", "opt", ".", "batchSize", "*", "b", ",", "opt", ".", "batchSize", "*", "(", "b", "+", "1", ")", ")", "\n", "", "else", ":", "\n", "\t\t\t", "realIdx", "=", "np", ".", "arange", "(", "opt", ".", "batchSize", "*", "b", ",", "N", ")", "\n", "", "idx", "=", "np", ".", "zeros", "(", "[", "opt", ".", "batchSize", "]", ",", "dtype", "=", "int", ")", "\n", "idx", "[", ":", "len", "(", "realIdx", ")", "]", "=", "realIdx", "\n", "batch", "=", "{", "\n", "image", ":", "data", "[", "\"image\"", "]", "[", "idx", "]", "/", "255.0", ",", "\n", "label", ":", "data", "[", "\"label\"", "]", "[", "idx", "]", ",", "\n", "}", "\n", "evalList", "=", "sess", ".", "run", "(", "[", "prediction", "]", "+", "imagesEval", ",", "feed_dict", "=", "batch", ")", "\n", "pred", "=", "evalList", "[", "0", "]", "\n", "count", "+=", "pred", "[", ":", "len", "(", "realIdx", ")", "]", ".", "sum", "(", ")", "\n", "if", "len", "(", "imagesEval", ")", ">", "0", ":", "\n", "\t\t\t", "imgs", "=", "evalList", "[", "1", ":", "]", "\n", "for", "i", "in", "range", "(", "len", "(", "realIdx", ")", ")", ":", "\n", "\t\t\t\t", "if", "data", "[", "\"label\"", "]", "[", "idx", "[", "i", "]", "]", "not", "in", "warped", "[", "0", "]", ":", "warped", "[", "0", "]", "[", "data", "[", "\"label\"", "]", "[", "idx", "[", "i", "]", "]", "]", "=", "[", "]", "\n", "if", "data", "[", "\"label\"", "]", "[", "idx", "[", "i", "]", "]", "not", "in", "warped", "[", "1", "]", ":", "warped", "[", "1", "]", "[", "data", "[", "\"label\"", "]", "[", "idx", "[", "i", "]", "]", "]", "=", "[", "]", "\n", "warped", "[", "0", "]", "[", "data", "[", "\"label\"", "]", "[", "idx", "[", "i", "]", "]", "]", ".", "append", "(", "imgs", "[", "0", "]", "[", "i", "]", ")", "\n", "warped", "[", "1", "]", "[", "data", "[", "\"label\"", "]", "[", "idx", "[", "i", "]", "]", "]", ".", "append", "(", "imgs", "[", "1", "]", "[", "i", "]", ")", "\n", "", "", "", "accuracy", "=", "float", "(", "count", ")", "/", "N", "\n", "if", "len", "(", "imagesEval", ")", ">", "0", ":", "\n", "\t\t", "mean", "=", "[", "np", ".", "array", "(", "[", "np", ".", "mean", "(", "warped", "[", "0", "]", "[", "l", "]", ",", "axis", "=", "0", ")", "for", "l", "in", "warped", "[", "0", "]", "]", ")", ",", "\n", "np", ".", "array", "(", "[", "np", ".", "mean", "(", "warped", "[", "1", "]", "[", "l", "]", ",", "axis", "=", "0", ")", "for", "l", "in", "warped", "[", "1", "]", "]", ")", "]", "\n", "var", "=", "[", "np", ".", "array", "(", "[", "np", ".", "var", "(", "warped", "[", "0", "]", "[", "l", "]", ",", "axis", "=", "0", ")", "for", "l", "in", "warped", "[", "0", "]", "]", ")", ",", "\n", "np", ".", "array", "(", "[", "np", ".", "var", "(", "warped", "[", "1", "]", "[", "l", "]", ",", "axis", "=", "0", ")", "for", "l", "in", "warped", "[", "1", "]", "]", ")", "]", "\n", "", "else", ":", "mean", ",", "var", "=", "None", ",", "None", "\n", "return", "accuracy", ",", "mean", ",", "var", "\n", "", ""]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.traffic-sign-tensorflow.warp.fit": [[6, 15], ["len", "numpy.concatenate", "numpy.concatenate", "[].squeeze", "numpy.array", "numpy.zeros", "numpy.ones", "numpy.stack", "numpy.stack", "scipy.linalg.lstsq"], "function", ["None"], ["def", "fit", "(", "Xsrc", ",", "Xdst", ")", ":", "\n", "\t", "ptsN", "=", "len", "(", "Xsrc", ")", "\n", "X", ",", "Y", ",", "U", ",", "V", ",", "O", ",", "I", "=", "Xsrc", "[", ":", ",", "0", "]", ",", "Xsrc", "[", ":", ",", "1", "]", ",", "Xdst", "[", ":", ",", "0", "]", ",", "Xdst", "[", ":", ",", "1", "]", ",", "np", ".", "zeros", "(", "[", "ptsN", "]", ")", ",", "np", ".", "ones", "(", "[", "ptsN", "]", ")", "\n", "A", "=", "np", ".", "concatenate", "(", "(", "np", ".", "stack", "(", "[", "X", ",", "Y", ",", "I", ",", "O", ",", "O", ",", "O", "]", ",", "axis", "=", "1", ")", ",", "\n", "np", ".", "stack", "(", "[", "O", ",", "O", ",", "O", ",", "X", ",", "Y", ",", "I", "]", ",", "axis", "=", "1", ")", ")", ",", "axis", "=", "0", ")", "\n", "b", "=", "np", ".", "concatenate", "(", "(", "U", ",", "V", ")", ",", "axis", "=", "0", ")", "\n", "p1", ",", "p2", ",", "p3", ",", "p4", ",", "p5", ",", "p6", "=", "scipy", ".", "linalg", ".", "lstsq", "(", "A", ",", "b", ")", "[", "0", "]", ".", "squeeze", "(", ")", "\n", "pMtrx", "=", "np", ".", "array", "(", "[", "[", "p1", ",", "p2", ",", "p3", "]", ",", "[", "p4", ",", "p5", ",", "p6", "]", ",", "[", "0", ",", "0", ",", "1", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "return", "pMtrx", "\n", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.traffic-sign-tensorflow.warp.compose": [[17, 25], ["tensorflow.name_scope", "warp.vec2mtrx", "warp.vec2mtrx", "tensorflow.matmul", "warp.mtrx2vec"], "function", ["home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.vec2mtrx", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.vec2mtrx", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.mtrx2vec"], ["", "def", "compose", "(", "opt", ",", "p", ",", "dp", ")", ":", "\n", "\t", "with", "tf", ".", "name_scope", "(", "\"compose\"", ")", ":", "\n", "\t\t", "pMtrx", "=", "vec2mtrx", "(", "opt", ",", "p", ")", "\n", "dpMtrx", "=", "vec2mtrx", "(", "opt", ",", "dp", ")", "\n", "pMtrxNew", "=", "tf", ".", "matmul", "(", "dpMtrx", ",", "pMtrx", ")", "\n", "pMtrxNew", "/=", "pMtrxNew", "[", ":", ",", "2", ":", "3", ",", "2", ":", "3", "]", "\n", "pNew", "=", "mtrx2vec", "(", "opt", ",", "pMtrxNew", ")", "\n", "", "return", "pNew", "\n", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.traffic-sign-tensorflow.warp.inverse": [[27, 33], ["tensorflow.name_scope", "warp.vec2mtrx", "tensorflow.matrix_inverse", "warp.mtrx2vec"], "function", ["home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.vec2mtrx", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.mtrx2vec"], ["", "def", "inverse", "(", "opt", ",", "p", ")", ":", "\n", "\t", "with", "tf", ".", "name_scope", "(", "\"inverse\"", ")", ":", "\n", "\t\t", "pMtrx", "=", "vec2mtrx", "(", "opt", ",", "p", ")", "\n", "pInvMtrx", "=", "tf", ".", "matrix_inverse", "(", "pMtrx", ")", "\n", "pInv", "=", "mtrx2vec", "(", "opt", ",", "pInvMtrx", ")", "\n", "", "return", "pInv", "\n", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.traffic-sign-tensorflow.warp.vec2mtrx": [[35, 52], ["tensorflow.name_scope", "tensorflow.zeros", "tensorflow.ones", "tensorflow.unstack", "tensorflow.transpose", "tensorflow.unstack", "tensorflow.transpose", "tensorflow.unstack", "tensorflow.transpose", "tensorflow.unstack", "tensorflow.transpose", "tensorflow.stack", "tensorflow.stack", "tensorflow.stack", "tensorflow.stack"], "function", ["None"], ["", "def", "vec2mtrx", "(", "opt", ",", "p", ")", ":", "\n", "\t", "with", "tf", ".", "name_scope", "(", "\"vec2mtrx\"", ")", ":", "\n", "\t\t", "O", "=", "tf", ".", "zeros", "(", "[", "opt", ".", "batchSize", "]", ")", "\n", "I", "=", "tf", ".", "ones", "(", "[", "opt", ".", "batchSize", "]", ")", "\n", "if", "opt", ".", "warpType", "==", "\"translation\"", ":", "\n", "\t\t\t", "tx", ",", "ty", "=", "tf", ".", "unstack", "(", "p", ",", "axis", "=", "1", ")", "\n", "pMtrx", "=", "tf", ".", "transpose", "(", "tf", ".", "stack", "(", "[", "[", "I", ",", "O", ",", "tx", "]", ",", "[", "O", ",", "I", ",", "ty", "]", ",", "[", "O", ",", "O", ",", "I", "]", "]", ")", ",", "perm", "=", "[", "2", ",", "0", ",", "1", "]", ")", "\n", "", "if", "opt", ".", "warpType", "==", "\"similarity\"", ":", "\n", "\t\t\t", "pc", ",", "ps", ",", "tx", ",", "ty", "=", "tf", ".", "unstack", "(", "p", ",", "axis", "=", "1", ")", "\n", "pMtrx", "=", "tf", ".", "transpose", "(", "tf", ".", "stack", "(", "[", "[", "I", "+", "pc", ",", "-", "ps", ",", "tx", "]", ",", "[", "ps", ",", "I", "+", "pc", ",", "ty", "]", ",", "[", "O", ",", "O", ",", "I", "]", "]", ")", ",", "perm", "=", "[", "2", ",", "0", ",", "1", "]", ")", "\n", "", "if", "opt", ".", "warpType", "==", "\"affine\"", ":", "\n", "\t\t\t", "p1", ",", "p2", ",", "p3", ",", "p4", ",", "p5", ",", "p6", ",", "p7", ",", "p8", "=", "tf", ".", "unstack", "(", "p", ",", "axis", "=", "1", ")", "\n", "pMtrx", "=", "tf", ".", "transpose", "(", "tf", ".", "stack", "(", "[", "[", "I", "+", "p1", ",", "p2", ",", "p3", "]", ",", "[", "p4", ",", "I", "+", "p5", ",", "p6", "]", ",", "[", "O", ",", "O", ",", "I", "]", "]", ")", ",", "perm", "=", "[", "2", ",", "0", ",", "1", "]", ")", "\n", "", "if", "opt", ".", "warpType", "==", "\"homography\"", ":", "\n", "\t\t\t", "p1", ",", "p2", ",", "p3", ",", "p4", ",", "p5", ",", "p6", ",", "p7", ",", "p8", "=", "tf", ".", "unstack", "(", "p", ",", "axis", "=", "1", ")", "\n", "pMtrx", "=", "tf", ".", "transpose", "(", "tf", ".", "stack", "(", "[", "[", "I", "+", "p1", ",", "p2", ",", "p3", "]", ",", "[", "p4", ",", "I", "+", "p5", ",", "p6", "]", ",", "[", "p7", ",", "p8", ",", "I", "]", "]", ")", ",", "perm", "=", "[", "2", ",", "0", ",", "1", "]", ")", "\n", "", "", "return", "pMtrx", "\n", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.traffic-sign-tensorflow.warp.mtrx2vec": [[54, 65], ["tensorflow.name_scope", "tensorflow.unstack", "tensorflow.unstack", "tensorflow.unstack", "tensorflow.unstack", "tensorflow.stack", "tensorflow.stack", "tensorflow.stack", "tensorflow.stack"], "function", ["None"], ["", "def", "mtrx2vec", "(", "opt", ",", "pMtrx", ")", ":", "\n", "\t", "with", "tf", ".", "name_scope", "(", "\"mtrx2vec\"", ")", ":", "\n", "\t\t", "[", "row0", ",", "row1", ",", "row2", "]", "=", "tf", ".", "unstack", "(", "pMtrx", ",", "axis", "=", "1", ")", "\n", "[", "e00", ",", "e01", ",", "e02", "]", "=", "tf", ".", "unstack", "(", "row0", ",", "axis", "=", "1", ")", "\n", "[", "e10", ",", "e11", ",", "e12", "]", "=", "tf", ".", "unstack", "(", "row1", ",", "axis", "=", "1", ")", "\n", "[", "e20", ",", "e21", ",", "e22", "]", "=", "tf", ".", "unstack", "(", "row2", ",", "axis", "=", "1", ")", "\n", "if", "opt", ".", "warpType", "==", "\"translation\"", ":", "p", "=", "tf", ".", "stack", "(", "[", "e02", ",", "e12", "]", ",", "axis", "=", "1", ")", "\n", "if", "opt", ".", "warpType", "==", "\"similarity\"", ":", "p", "=", "tf", ".", "stack", "(", "[", "e00", "-", "1", ",", "e10", ",", "e02", ",", "e12", "]", ",", "axis", "=", "1", ")", "\n", "if", "opt", ".", "warpType", "==", "\"affine\"", ":", "p", "=", "tf", ".", "stack", "(", "[", "e00", "-", "1", ",", "e01", ",", "e02", ",", "e10", ",", "e11", "-", "1", ",", "e12", "]", ",", "axis", "=", "1", ")", "\n", "if", "opt", ".", "warpType", "==", "\"homography\"", ":", "p", "=", "tf", ".", "stack", "(", "[", "e00", "-", "1", ",", "e01", ",", "e02", ",", "e10", ",", "e11", "-", "1", ",", "e12", ",", "e20", ",", "e21", "]", ",", "axis", "=", "1", ")", "\n", "", "return", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.traffic-sign-tensorflow.warp.transformImage": [[67, 108], ["tensorflow.name_scope", "tensorflow.tile", "tensorflow.matmul", "numpy.meshgrid", "numpy.tile().astype", "tensorflow.matmul", "tensorflow.unstack", "tensorflow.reshape", "tensorflow.reshape", "numpy.tile", "tensorflow.reshape", "tensorflow.concat", "tensorflow.fill", "tensorflow.where", "tensorflow.where", "tensorflow.where", "tensorflow.where", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.expand_dims", "numpy.linspace", "numpy.linspace", "X.flatten", "Y.flatten", "numpy.stack", "tensorflow.floor", "tensorflow.ceil", "tensorflow.floor", "tensorflow.ceil", "tensorflow.to_int32", "tensorflow.to_int32", "tensorflow.to_int32", "tensorflow.to_int32", "numpy.arange().reshape", "warp.transformImage.insideImage"], "function", ["None"], ["", "def", "transformImage", "(", "opt", ",", "image", ",", "pMtrx", ")", ":", "\n", "\t", "with", "tf", ".", "name_scope", "(", "\"transformImage\"", ")", ":", "\n", "\t\t", "refMtrx", "=", "tf", ".", "tile", "(", "tf", ".", "expand_dims", "(", "opt", ".", "refMtrx", ",", "axis", "=", "0", ")", ",", "[", "opt", ".", "batchSize", ",", "1", ",", "1", "]", ")", "\n", "transMtrx", "=", "tf", ".", "matmul", "(", "refMtrx", ",", "pMtrx", ")", "\n", "# warp the canonical coordinates", "\n", "X", ",", "Y", "=", "np", ".", "meshgrid", "(", "np", ".", "linspace", "(", "-", "1", ",", "1", ",", "opt", ".", "W", ")", ",", "np", ".", "linspace", "(", "-", "1", ",", "1", ",", "opt", ".", "H", ")", ")", "\n", "X", ",", "Y", "=", "X", ".", "flatten", "(", ")", ",", "Y", ".", "flatten", "(", ")", "\n", "XYhom", "=", "np", ".", "stack", "(", "[", "X", ",", "Y", ",", "np", ".", "ones_like", "(", "X", ")", "]", ",", "axis", "=", "1", ")", ".", "T", "\n", "XYhom", "=", "np", ".", "tile", "(", "XYhom", ",", "[", "opt", ".", "batchSize", ",", "1", ",", "1", "]", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "XYwarpHom", "=", "tf", ".", "matmul", "(", "transMtrx", ",", "XYhom", ")", "\n", "XwarpHom", ",", "YwarpHom", ",", "ZwarpHom", "=", "tf", ".", "unstack", "(", "XYwarpHom", ",", "axis", "=", "1", ")", "\n", "Xwarp", "=", "tf", ".", "reshape", "(", "XwarpHom", "/", "(", "ZwarpHom", "+", "1e-8", ")", ",", "[", "opt", ".", "batchSize", ",", "opt", ".", "H", ",", "opt", ".", "W", "]", ")", "\n", "Ywarp", "=", "tf", ".", "reshape", "(", "YwarpHom", "/", "(", "ZwarpHom", "+", "1e-8", ")", ",", "[", "opt", ".", "batchSize", ",", "opt", ".", "H", ",", "opt", ".", "W", "]", ")", "\n", "# get the integer sampling coordinates", "\n", "Xfloor", ",", "Xceil", "=", "tf", ".", "floor", "(", "Xwarp", ")", ",", "tf", ".", "ceil", "(", "Xwarp", ")", "\n", "Yfloor", ",", "Yceil", "=", "tf", ".", "floor", "(", "Ywarp", ")", ",", "tf", ".", "ceil", "(", "Ywarp", ")", "\n", "XfloorInt", ",", "XceilInt", "=", "tf", ".", "to_int32", "(", "Xfloor", ")", ",", "tf", ".", "to_int32", "(", "Xceil", ")", "\n", "YfloorInt", ",", "YceilInt", "=", "tf", ".", "to_int32", "(", "Yfloor", ")", ",", "tf", ".", "to_int32", "(", "Yceil", ")", "\n", "imageIdx", "=", "np", ".", "tile", "(", "np", ".", "arange", "(", "opt", ".", "batchSize", ")", ".", "reshape", "(", "[", "opt", ".", "batchSize", ",", "1", ",", "1", "]", ")", ",", "[", "1", ",", "opt", ".", "H", ",", "opt", ".", "W", "]", ")", "\n", "imageVec", "=", "tf", ".", "reshape", "(", "image", ",", "[", "-", "1", ",", "int", "(", "image", ".", "shape", "[", "-", "1", "]", ")", "]", ")", "\n", "imageVecOut", "=", "tf", ".", "concat", "(", "[", "imageVec", ",", "tf", ".", "zeros", "(", "[", "1", ",", "int", "(", "image", ".", "shape", "[", "-", "1", "]", ")", "]", ")", "]", ",", "axis", "=", "0", ")", "\n", "idxUL", "=", "(", "imageIdx", "*", "opt", ".", "H", "+", "YfloorInt", ")", "*", "opt", ".", "W", "+", "XfloorInt", "\n", "idxUR", "=", "(", "imageIdx", "*", "opt", ".", "H", "+", "YfloorInt", ")", "*", "opt", ".", "W", "+", "XceilInt", "\n", "idxBL", "=", "(", "imageIdx", "*", "opt", ".", "H", "+", "YceilInt", ")", "*", "opt", ".", "W", "+", "XfloorInt", "\n", "idxBR", "=", "(", "imageIdx", "*", "opt", ".", "H", "+", "YceilInt", ")", "*", "opt", ".", "W", "+", "XceilInt", "\n", "idxOutside", "=", "tf", ".", "fill", "(", "[", "opt", ".", "batchSize", ",", "opt", ".", "H", ",", "opt", ".", "W", "]", ",", "opt", ".", "batchSize", "*", "opt", ".", "H", "*", "opt", ".", "W", ")", "\n", "def", "insideImage", "(", "Xint", ",", "Yint", ")", ":", "\n", "\t\t\t", "return", "(", "Xint", ">=", "0", ")", "&", "(", "Xint", "<", "opt", ".", "W", ")", "&", "(", "Yint", ">=", "0", ")", "&", "(", "Yint", "<", "opt", ".", "H", ")", "\n", "", "idxUL", "=", "tf", ".", "where", "(", "insideImage", "(", "XfloorInt", ",", "YfloorInt", ")", ",", "idxUL", ",", "idxOutside", ")", "\n", "idxUR", "=", "tf", ".", "where", "(", "insideImage", "(", "XceilInt", ",", "YfloorInt", ")", ",", "idxUR", ",", "idxOutside", ")", "\n", "idxBL", "=", "tf", ".", "where", "(", "insideImage", "(", "XfloorInt", ",", "YceilInt", ")", ",", "idxBL", ",", "idxOutside", ")", "\n", "idxBR", "=", "tf", ".", "where", "(", "insideImage", "(", "XceilInt", ",", "YceilInt", ")", ",", "idxBR", ",", "idxOutside", ")", "\n", "# bilinear interpolation", "\n", "Xratio", "=", "tf", ".", "reshape", "(", "Xwarp", "-", "Xfloor", ",", "[", "opt", ".", "batchSize", ",", "opt", ".", "H", ",", "opt", ".", "W", ",", "1", "]", ")", "\n", "Yratio", "=", "tf", ".", "reshape", "(", "Ywarp", "-", "Yfloor", ",", "[", "opt", ".", "batchSize", ",", "opt", ".", "H", ",", "opt", ".", "W", ",", "1", "]", ")", "\n", "imageUL", "=", "tf", ".", "to_float", "(", "tf", ".", "gather", "(", "imageVecOut", ",", "idxUL", ")", ")", "*", "(", "1", "-", "Xratio", ")", "*", "(", "1", "-", "Yratio", ")", "\n", "imageUR", "=", "tf", ".", "to_float", "(", "tf", ".", "gather", "(", "imageVecOut", ",", "idxUR", ")", ")", "*", "(", "Xratio", ")", "*", "(", "1", "-", "Yratio", ")", "\n", "imageBL", "=", "tf", ".", "to_float", "(", "tf", ".", "gather", "(", "imageVecOut", ",", "idxBL", ")", ")", "*", "(", "1", "-", "Xratio", ")", "*", "(", "Yratio", ")", "\n", "imageBR", "=", "tf", ".", "to_float", "(", "tf", ".", "gather", "(", "imageVecOut", ",", "idxBR", ")", ")", "*", "(", "Xratio", ")", "*", "(", "Yratio", ")", "\n", "imageWarp", "=", "imageUL", "+", "imageUR", "+", "imageBL", "+", "imageBR", "\n", "", "return", "imageWarp", "\n", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.traffic-sign-tensorflow.warp.transformCropImage": [[110, 151], ["tensorflow.name_scope", "tensorflow.tile", "tensorflow.matmul", "numpy.meshgrid", "numpy.tile().astype", "tensorflow.matmul", "tensorflow.unstack", "tensorflow.reshape", "tensorflow.reshape", "numpy.tile", "tensorflow.reshape", "tensorflow.concat", "tensorflow.fill", "tensorflow.where", "tensorflow.where", "tensorflow.where", "tensorflow.where", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.expand_dims", "numpy.linspace", "numpy.linspace", "X.flatten", "Y.flatten", "numpy.stack", "tensorflow.floor", "tensorflow.ceil", "tensorflow.floor", "tensorflow.ceil", "tensorflow.to_int32", "tensorflow.to_int32", "tensorflow.to_int32", "tensorflow.to_int32", "numpy.arange().reshape", "warp.transformImage.insideImage"], "function", ["None"], ["", "def", "transformCropImage", "(", "opt", ",", "imageFull", ",", "pMtrx", ")", ":", "\n", "\t", "with", "tf", ".", "name_scope", "(", "\"transformImage\"", ")", ":", "\n", "\t\t", "refMtrx", "=", "tf", ".", "tile", "(", "tf", ".", "expand_dims", "(", "opt", ".", "bboxRefMtrx", ",", "axis", "=", "0", ")", ",", "[", "opt", ".", "batchSize", ",", "1", ",", "1", "]", ")", "\n", "transMtrx", "=", "tf", ".", "matmul", "(", "refMtrx", ",", "pMtrx", ")", "\n", "# warp the canonical coordinates", "\n", "X", ",", "Y", "=", "np", ".", "meshgrid", "(", "np", ".", "linspace", "(", "-", "1", ",", "1", ",", "opt", ".", "W", ")", ",", "np", ".", "linspace", "(", "-", "1", ",", "1", ",", "opt", ".", "H", ")", ")", "\n", "X", ",", "Y", "=", "X", ".", "flatten", "(", ")", ",", "Y", ".", "flatten", "(", ")", "\n", "XYhom", "=", "np", ".", "stack", "(", "[", "X", ",", "Y", ",", "np", ".", "ones_like", "(", "X", ")", "]", ",", "axis", "=", "1", ")", ".", "T", "\n", "XYhom", "=", "np", ".", "tile", "(", "XYhom", ",", "[", "opt", ".", "batchSize", ",", "1", ",", "1", "]", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "XYwarpHom", "=", "tf", ".", "matmul", "(", "transMtrx", ",", "XYhom", ")", "\n", "XwarpHom", ",", "YwarpHom", ",", "ZwarpHom", "=", "tf", ".", "unstack", "(", "XYwarpHom", ",", "axis", "=", "1", ")", "\n", "Xwarp", "=", "tf", ".", "reshape", "(", "XwarpHom", "/", "(", "ZwarpHom", "+", "1e-8", ")", ",", "[", "opt", ".", "batchSize", ",", "opt", ".", "H", ",", "opt", ".", "W", "]", ")", "\n", "Ywarp", "=", "tf", ".", "reshape", "(", "YwarpHom", "/", "(", "ZwarpHom", "+", "1e-8", ")", ",", "[", "opt", ".", "batchSize", ",", "opt", ".", "H", ",", "opt", ".", "W", "]", ")", "\n", "# get the integer sampling coordinates", "\n", "Xfloor", ",", "Xceil", "=", "tf", ".", "floor", "(", "Xwarp", ")", ",", "tf", ".", "ceil", "(", "Xwarp", ")", "\n", "Yfloor", ",", "Yceil", "=", "tf", ".", "floor", "(", "Ywarp", ")", ",", "tf", ".", "ceil", "(", "Ywarp", ")", "\n", "XfloorInt", ",", "XceilInt", "=", "tf", ".", "to_int32", "(", "Xfloor", ")", ",", "tf", ".", "to_int32", "(", "Xceil", ")", "\n", "YfloorInt", ",", "YceilInt", "=", "tf", ".", "to_int32", "(", "Yfloor", ")", ",", "tf", ".", "to_int32", "(", "Yceil", ")", "\n", "imageIdx", "=", "np", ".", "tile", "(", "np", ".", "arange", "(", "opt", ".", "batchSize", ")", ".", "reshape", "(", "[", "opt", ".", "batchSize", ",", "1", ",", "1", "]", ")", ",", "[", "1", ",", "opt", ".", "H", ",", "opt", ".", "W", "]", ")", "\n", "imageVec", "=", "tf", ".", "reshape", "(", "imageFull", ",", "[", "-", "1", ",", "int", "(", "imageFull", ".", "shape", "[", "-", "1", "]", ")", "]", ")", "\n", "imageVecOut", "=", "tf", ".", "concat", "(", "[", "imageVec", ",", "tf", ".", "zeros", "(", "[", "1", ",", "int", "(", "imageFull", ".", "shape", "[", "-", "1", "]", ")", "]", ")", "]", ",", "axis", "=", "0", ")", "\n", "idxUL", "=", "(", "imageIdx", "*", "opt", ".", "fullH", "+", "YfloorInt", ")", "*", "opt", ".", "fullW", "+", "XfloorInt", "\n", "idxUR", "=", "(", "imageIdx", "*", "opt", ".", "fullH", "+", "YfloorInt", ")", "*", "opt", ".", "fullW", "+", "XceilInt", "\n", "idxBL", "=", "(", "imageIdx", "*", "opt", ".", "fullH", "+", "YceilInt", ")", "*", "opt", ".", "fullW", "+", "XfloorInt", "\n", "idxBR", "=", "(", "imageIdx", "*", "opt", ".", "fullH", "+", "YceilInt", ")", "*", "opt", ".", "fullW", "+", "XceilInt", "\n", "idxOutside", "=", "tf", ".", "fill", "(", "[", "opt", ".", "batchSize", ",", "opt", ".", "H", ",", "opt", ".", "W", "]", ",", "opt", ".", "batchSize", "*", "opt", ".", "fullH", "*", "opt", ".", "fullW", ")", "\n", "def", "insideImage", "(", "Xint", ",", "Yint", ")", ":", "\n", "\t\t\t", "return", "(", "Xint", ">=", "0", ")", "&", "(", "Xint", "<", "opt", ".", "fullW", ")", "&", "(", "Yint", ">=", "0", ")", "&", "(", "Yint", "<", "opt", ".", "fullH", ")", "\n", "", "idxUL", "=", "tf", ".", "where", "(", "insideImage", "(", "XfloorInt", ",", "YfloorInt", ")", ",", "idxUL", ",", "idxOutside", ")", "\n", "idxUR", "=", "tf", ".", "where", "(", "insideImage", "(", "XceilInt", ",", "YfloorInt", ")", ",", "idxUR", ",", "idxOutside", ")", "\n", "idxBL", "=", "tf", ".", "where", "(", "insideImage", "(", "XfloorInt", ",", "YceilInt", ")", ",", "idxBL", ",", "idxOutside", ")", "\n", "idxBR", "=", "tf", ".", "where", "(", "insideImage", "(", "XceilInt", ",", "YceilInt", ")", ",", "idxBR", ",", "idxOutside", ")", "\n", "# bilinear interpolation", "\n", "Xratio", "=", "tf", ".", "reshape", "(", "Xwarp", "-", "Xfloor", ",", "[", "opt", ".", "batchSize", ",", "opt", ".", "H", ",", "opt", ".", "W", ",", "1", "]", ")", "\n", "Yratio", "=", "tf", ".", "reshape", "(", "Ywarp", "-", "Yfloor", ",", "[", "opt", ".", "batchSize", ",", "opt", ".", "H", ",", "opt", ".", "W", ",", "1", "]", ")", "\n", "imageUL", "=", "tf", ".", "to_float", "(", "tf", ".", "gather", "(", "imageVecOut", ",", "idxUL", ")", ")", "*", "(", "1", "-", "Xratio", ")", "*", "(", "1", "-", "Yratio", ")", "\n", "imageUR", "=", "tf", ".", "to_float", "(", "tf", ".", "gather", "(", "imageVecOut", ",", "idxUR", ")", ")", "*", "(", "Xratio", ")", "*", "(", "1", "-", "Yratio", ")", "\n", "imageBL", "=", "tf", ".", "to_float", "(", "tf", ".", "gather", "(", "imageVecOut", ",", "idxBL", ")", ")", "*", "(", "1", "-", "Xratio", ")", "*", "(", "Yratio", ")", "\n", "imageBR", "=", "tf", ".", "to_float", "(", "tf", ".", "gather", "(", "imageVecOut", ",", "idxBR", ")", ")", "*", "(", "Xratio", ")", "*", "(", "Yratio", ")", "\n", "imageWarp", "=", "imageUL", "+", "imageUR", "+", "imageBL", "+", "imageBR", "\n", "", "return", "imageWarp", "\n", "", ""]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.traffic-sign-tensorflow.util.mkdir": [[7, 9], ["os.path.exists", "os.mkdir"], "function", ["home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.mkdir"], ["def", "mkdir", "(", "path", ")", ":", "\n", "\t", "if", "not", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "os", ".", "mkdir", "(", "path", ")", "\n", "", "def", "imread", "(", "fname", ")", ":", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.traffic-sign-tensorflow.util.imread": [[9, 11], ["scipy.misc.imread"], "function", ["home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.imread"], ["", "def", "imread", "(", "fname", ")", ":", "\n", "\t", "return", "scipy", ".", "misc", ".", "imread", "(", "fname", ")", "/", "255.0", "\n", "", "def", "imsave", "(", "fname", ",", "array", ")", ":", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.traffic-sign-tensorflow.util.imsave": [[11, 13], ["scipy.misc.toimage().save", "scipy.misc.toimage"], "function", ["None"], ["", "def", "imsave", "(", "fname", ",", "array", ")", ":", "\n", "\t", "scipy", ".", "misc", ".", "toimage", "(", "array", ",", "cmin", "=", "0.0", ",", "cmax", "=", "1.0", ")", ".", "save", "(", "fname", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.traffic-sign-tensorflow.util.toRed": [[15, 16], ["termcolor.colored"], "function", ["None"], ["", "def", "toRed", "(", "content", ")", ":", "return", "termcolor", ".", "colored", "(", "content", ",", "\"red\"", ",", "attrs", "=", "[", "\"bold\"", "]", ")", "\n", "def", "toGreen", "(", "content", ")", ":", "return", "termcolor", ".", "colored", "(", "content", ",", "\"green\"", ",", "attrs", "=", "[", "\"bold\"", "]", ")", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.traffic-sign-tensorflow.util.toGreen": [[16, 17], ["termcolor.colored"], "function", ["None"], ["def", "toGreen", "(", "content", ")", ":", "return", "termcolor", ".", "colored", "(", "content", ",", "\"green\"", ",", "attrs", "=", "[", "\"bold\"", "]", ")", "\n", "def", "toBlue", "(", "content", ")", ":", "return", "termcolor", ".", "colored", "(", "content", ",", "\"blue\"", ",", "attrs", "=", "[", "\"bold\"", "]", ")", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.traffic-sign-tensorflow.util.toBlue": [[17, 18], ["termcolor.colored"], "function", ["None"], ["def", "toBlue", "(", "content", ")", ":", "return", "termcolor", ".", "colored", "(", "content", ",", "\"blue\"", ",", "attrs", "=", "[", "\"bold\"", "]", ")", "\n", "def", "toCyan", "(", "content", ")", ":", "return", "termcolor", ".", "colored", "(", "content", ",", "\"cyan\"", ",", "attrs", "=", "[", "\"bold\"", "]", ")", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.traffic-sign-tensorflow.util.toCyan": [[18, 19], ["termcolor.colored"], "function", ["None"], ["def", "toCyan", "(", "content", ")", ":", "return", "termcolor", ".", "colored", "(", "content", ",", "\"cyan\"", ",", "attrs", "=", "[", "\"bold\"", "]", ")", "\n", "def", "toYellow", "(", "content", ")", ":", "return", "termcolor", ".", "colored", "(", "content", ",", "\"yellow\"", ",", "attrs", "=", "[", "\"bold\"", "]", ")", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.traffic-sign-tensorflow.util.toYellow": [[19, 20], ["termcolor.colored"], "function", ["None"], ["def", "toYellow", "(", "content", ")", ":", "return", "termcolor", ".", "colored", "(", "content", ",", "\"yellow\"", ",", "attrs", "=", "[", "\"bold\"", "]", ")", "\n", "def", "toMagenta", "(", "content", ")", ":", "return", "termcolor", ".", "colored", "(", "content", ",", "\"magenta\"", ",", "attrs", "=", "[", "\"bold\"", "]", ")", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.traffic-sign-tensorflow.util.toMagenta": [[20, 21], ["termcolor.colored"], "function", ["None"], ["def", "toMagenta", "(", "content", ")", ":", "return", "termcolor", ".", "colored", "(", "content", ",", "\"magenta\"", ",", "attrs", "=", "[", "\"bold\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.traffic-sign-tensorflow.util.imageSummary": [[23, 32], ["tensorflow.batch_to_space", "tensorflow.reshape", "tensorflow.transpose", "tensorflow.reshape", "tensorflow.cast", "tensorflow.summary.image"], "function", ["None"], ["def", "imageSummary", "(", "opt", ",", "image", ",", "tag", ",", "H", ",", "W", ")", ":", "\n", "\t", "blockSize", "=", "opt", ".", "visBlockSize", "\n", "imageOne", "=", "tf", ".", "batch_to_space", "(", "image", "[", ":", "blockSize", "**", "2", "]", ",", "crops", "=", "[", "[", "0", ",", "0", "]", ",", "[", "0", ",", "0", "]", "]", ",", "block_size", "=", "blockSize", ")", "\n", "imagePermute", "=", "tf", ".", "reshape", "(", "imageOne", ",", "[", "H", ",", "blockSize", ",", "W", ",", "blockSize", ",", "-", "1", "]", ")", "\n", "imageTransp", "=", "tf", ".", "transpose", "(", "imagePermute", ",", "[", "1", ",", "0", ",", "3", ",", "2", ",", "4", "]", ")", "\n", "imageBlocks", "=", "tf", ".", "reshape", "(", "imageTransp", ",", "[", "1", ",", "H", "*", "blockSize", ",", "W", "*", "blockSize", ",", "-", "1", "]", ")", "\n", "imageBlocks", "=", "tf", ".", "cast", "(", "imageBlocks", "*", "255", ",", "tf", ".", "uint8", ")", "\n", "summary", "=", "tf", ".", "summary", ".", "image", "(", "tag", ",", "imageBlocks", ")", "\n", "return", "summary", "\n", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.traffic-sign-tensorflow.util.imageSummaryMeanVar": [[34, 43], ["tensorflow.concat", "tensorflow.batch_to_space_nd", "tensorflow.reshape", "tensorflow.transpose", "tensorflow.reshape", "tensorflow.summary.image", "numpy.zeros"], "function", ["None"], ["", "def", "imageSummaryMeanVar", "(", "opt", ",", "image", ",", "tag", ",", "H", ",", "W", ")", ":", "\n", "\t", "image", "=", "tf", ".", "concat", "(", "[", "image", ",", "np", ".", "zeros", "(", "[", "2", ",", "H", ",", "W", ",", "3", "]", ")", "]", ",", "axis", "=", "0", ")", "\n", "imageOne", "=", "tf", ".", "batch_to_space_nd", "(", "image", ",", "crops", "=", "[", "[", "0", ",", "0", "]", ",", "[", "0", ",", "0", "]", "]", ",", "block_shape", "=", "[", "5", ",", "9", "]", ")", "\n", "imagePermute", "=", "tf", ".", "reshape", "(", "imageOne", ",", "[", "H", ",", "5", ",", "W", ",", "9", ",", "-", "1", "]", ")", "\n", "imageTransp", "=", "tf", ".", "transpose", "(", "imagePermute", ",", "[", "1", ",", "0", ",", "3", ",", "2", ",", "4", "]", ")", "\n", "imageBlocks", "=", "tf", ".", "reshape", "(", "imageTransp", ",", "[", "1", ",", "H", "*", "5", ",", "W", "*", "9", ",", "-", "1", "]", ")", "\n", "# imageBlocks = tf.cast(imageBlocks*255,tf.uint8)", "\n", "summary", "=", "tf", ".", "summary", ".", "image", "(", "tag", ",", "imageBlocks", ")", "\n", "return", "summary", "\n", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.traffic-sign-tensorflow.util.setOptimizer": [[45, 57], ["tensorflow.gradients", "tensorflow.train.GradientDescentOptimizer().apply_gradients", "zip", "len", "tensorflow.gradients", "tensorflow.train.GradientDescentOptimizer().apply_gradients", "tensorflow.group", "tensorflow.global_variables", "tensorflow.global_variables", "tensorflow.train.GradientDescentOptimizer", "zip", "tensorflow.train.GradientDescentOptimizer"], "function", ["None"], ["", "def", "setOptimizer", "(", "opt", ",", "loss", ",", "lrGP", ",", "lrC", ")", ":", "\n", "\t", "varsGP", "=", "[", "v", "for", "v", "in", "tf", ".", "global_variables", "(", ")", "if", "\"geometric\"", "in", "v", ".", "name", "]", "\n", "varsC", "=", "[", "v", "for", "v", "in", "tf", ".", "global_variables", "(", ")", "if", "\"classifier\"", "in", "v", ".", "name", "]", "\n", "gradC", "=", "tf", ".", "gradients", "(", "loss", ",", "varsC", ")", "\n", "optimC", "=", "tf", ".", "train", ".", "GradientDescentOptimizer", "(", "lrC", ")", ".", "apply_gradients", "(", "zip", "(", "gradC", ",", "varsC", ")", ")", "\n", "if", "len", "(", "varsGP", ")", ">", "0", ":", "\n", "\t\t", "gradGP", "=", "tf", ".", "gradients", "(", "loss", ",", "varsGP", ")", "\n", "optimGP", "=", "tf", ".", "train", ".", "GradientDescentOptimizer", "(", "lrGP", ")", ".", "apply_gradients", "(", "zip", "(", "gradGP", ",", "varsGP", ")", ")", "\n", "optim", "=", "tf", ".", "group", "(", "optimC", ",", "optimGP", ")", "\n", "", "else", ":", "\n", "\t\t", "optim", "=", "optimC", "\n", "", "return", "optim", "\n", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.traffic-sign-tensorflow.util.restoreModel": [[59, 61], ["saver.restore"], "function", ["None"], ["", "def", "restoreModel", "(", "opt", ",", "sess", ",", "saver", ",", "it", ")", ":", "\n", "\t", "saver", ".", "restore", "(", "sess", ",", "\"models_{0}/{1}_it{2}.ckpt\"", ".", "format", "(", "opt", ".", "group", ",", "opt", ".", "model", ",", "it", ",", "opt", ".", "warpN", ")", ")", "\n", "# save model", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.traffic-sign-tensorflow.util.saveModel": [[62, 64], ["saver.save"], "function", ["None"], ["", "def", "saveModel", "(", "opt", ",", "sess", ",", "saver", ",", "it", ")", ":", "\n", "\t", "saver", ".", "save", "(", "sess", ",", "\"models_{0}/{1}_it{2}.ckpt\"", ".", "format", "(", "opt", ".", "group", ",", "opt", ".", "model", ",", "it", ",", "opt", ".", "warpN", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.options.set": [[6, 79], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "int", "numpy.array", "numpy.array", "warp.fit", "print", "print", "print", "print", "print", "print", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "int", "numpy.floor", "print", "print", "print", "parser.parse_args.size.split", "numpy.sqrt", "util.toGreen", "util.toGreen", "util.toYellow", "util.toYellow", "util.toYellow", "util.toYellow", "util.toYellow", "util.toYellow", "util.toYellow", "util.toMagenta", "util.toYellow", "util.toYellow", "util.toYellow", "util.toYellow"], "function", ["home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.fit", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toGreen", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toGreen", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toYellow", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toYellow", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toYellow", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toYellow", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toYellow", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toYellow", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toYellow", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toMagenta", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toYellow", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toYellow", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toYellow", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toYellow"], ["def", "set", "(", "training", ")", ":", "\n", "\n", "# parse input arguments", "\n", "\t", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\"netType\"", ",", "choices", "=", "[", "\"CNN\"", ",", "\"STN\"", ",", "\"IC-STN\"", "]", ",", "help", "=", "\"type of network\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--group\"", ",", "default", "=", "\"0\"", ",", "help", "=", "\"name for group\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--model\"", ",", "default", "=", "\"test\"", ",", "help", "=", "\"name for model instance\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--size\"", ",", "default", "=", "\"36x36\"", ",", "help", "=", "\"image resolution\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--sizeFull\"", ",", "default", "=", "\"50x50\"", ",", "help", "=", "\"full image resolution\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--warpType\"", ",", "default", "=", "\"homography\"", ",", "help", "=", "\"type of warp function on images\"", ",", "\n", "choices", "=", "[", "\"translation\"", ",", "\"similarity\"", ",", "\"affine\"", ",", "\"homography\"", "]", ")", "\n", "parser", ".", "add_argument", "(", "\"--warpN\"", ",", "type", "=", "int", ",", "default", "=", "4", ",", "help", "=", "\"number of recurrent transformations (for IC-STN)\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--stdC\"", ",", "type", "=", "float", ",", "default", "=", "0.01", ",", "help", "=", "\"initialization stddev (classification network)\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--stdGP\"", ",", "type", "=", "float", ",", "default", "=", "0.001", ",", "help", "=", "\"initialization stddev (geometric predictor)\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--pertScale\"", ",", "type", "=", "float", ",", "default", "=", "0.25", ",", "help", "=", "\"initial perturbation scale\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--transScale\"", ",", "type", "=", "float", ",", "default", "=", "0.25", ",", "help", "=", "\"initial translation scale\"", ")", "\n", "if", "training", ":", "# training", "\n", "\t\t", "parser", ".", "add_argument", "(", "\"--batchSize\"", ",", "type", "=", "int", ",", "default", "=", "100", ",", "help", "=", "\"batch size for SGD\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--lrC\"", ",", "type", "=", "float", ",", "default", "=", "1e-2", ",", "help", "=", "\"learning rate (classification network)\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--lrCdecay\"", ",", "type", "=", "float", ",", "default", "=", "0.1", ",", "help", "=", "\"learning rate decay (classification network)\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--lrCstep\"", ",", "type", "=", "int", ",", "default", "=", "500000", ",", "help", "=", "\"learning rate decay step size (classification network)\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--lrGP\"", ",", "type", "=", "float", ",", "default", "=", "None", ",", "help", "=", "\"learning rate (geometric predictor)\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--lrGPdecay\"", ",", "type", "=", "float", ",", "default", "=", "0.1", ",", "help", "=", "\"learning rate decay (geometric predictor)\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--lrGPstep\"", ",", "type", "=", "int", ",", "default", "=", "500000", ",", "help", "=", "\"learning rate decay step size (geometric predictor)\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--fromIt\"", ",", "type", "=", "int", ",", "default", "=", "0", ",", "help", "=", "\"resume training from iteration number\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--toIt\"", ",", "type", "=", "int", ",", "default", "=", "1000000", ",", "help", "=", "\"run training to iteration number\"", ")", "\n", "", "else", ":", "# evaluation", "\n", "\t\t", "parser", ".", "add_argument", "(", "\"--batchSize\"", ",", "type", "=", "int", ",", "default", "=", "1", ",", "help", "=", "\"batch size for evaluation\"", ")", "\n", "", "opt", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "if", "opt", ".", "lrGP", "is", "None", ":", "opt", ".", "lrGP", "=", "0", "if", "opt", ".", "netType", "==", "\"CNN\"", "else", "1e-3", "if", "opt", ".", "netType", "==", "\"STN\"", "else", "3e-5", "if", "opt", ".", "netType", "==", "\"IC-STN\"", "else", "None", "\n", "\n", "# --- below are automatically set ---", "\n", "opt", ".", "training", "=", "training", "\n", "opt", ".", "H", ",", "opt", ".", "W", "=", "[", "int", "(", "x", ")", "for", "x", "in", "opt", ".", "size", ".", "split", "(", "\"x\"", ")", "]", "\n", "opt", ".", "fullH", ",", "opt", ".", "fullW", "=", "[", "int", "(", "x", ")", "for", "x", "in", "opt", ".", "sizeFull", ".", "split", "(", "\"x\"", ")", "]", "\n", "opt", ".", "visBlockSize", "=", "int", "(", "np", ".", "floor", "(", "np", ".", "sqrt", "(", "opt", ".", "batchSize", ")", ")", ")", "\n", "opt", ".", "warpDim", "=", "2", "if", "opt", ".", "warpType", "==", "\"translation\"", "else", "4", "if", "opt", ".", "warpType", "==", "\"similarity\"", "else", "6", "if", "opt", ".", "warpType", "==", "\"affine\"", "else", "8", "if", "opt", ".", "warpType", "==", "\"homography\"", "else", "None", "\n", "opt", ".", "labelN", "=", "43", "\n", "opt", ".", "canon4pts", "=", "np", ".", "array", "(", "[", "[", "-", "1", ",", "-", "1", "]", ",", "[", "-", "1", ",", "1", "]", ",", "[", "1", ",", "1", "]", ",", "[", "1", ",", "-", "1", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "opt", ".", "image4pts", "=", "np", ".", "array", "(", "[", "[", "0", ",", "0", "]", ",", "[", "0", ",", "opt", ".", "H", "-", "1", "]", ",", "[", "opt", ".", "W", "-", "1", ",", "opt", ".", "H", "-", "1", "]", ",", "[", "opt", ".", "W", "-", "1", ",", "0", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "opt", ".", "bbox", "=", "[", "int", "(", "opt", ".", "fullW", "/", "2", "-", "opt", ".", "W", "/", "2", ")", ",", "int", "(", "opt", ".", "fullH", "/", "2", "-", "opt", ".", "H", "/", "2", ")", ",", "int", "(", "opt", ".", "fullW", "/", "2", "+", "opt", ".", "W", "/", "2", ")", ",", "int", "(", "opt", ".", "fullH", "/", "2", "+", "opt", ".", "H", "/", "2", ")", "]", "\n", "opt", ".", "bbox4pts", "=", "np", ".", "array", "(", "[", "[", "opt", ".", "bbox", "[", "0", "]", ",", "opt", ".", "bbox", "[", "1", "]", "]", ",", "[", "opt", ".", "bbox", "[", "0", "]", ",", "opt", ".", "bbox", "[", "3", "]", "]", ",", "\n", "[", "opt", ".", "bbox", "[", "2", "]", ",", "opt", ".", "bbox", "[", "3", "]", "]", ",", "[", "opt", ".", "bbox", "[", "2", "]", ",", "opt", ".", "bbox", "[", "1", "]", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "opt", ".", "refMtrx", "=", "warp", ".", "fit", "(", "Xsrc", "=", "opt", ".", "canon4pts", ",", "Xdst", "=", "opt", ".", "image4pts", ")", "\n", "opt", ".", "bboxRefMtrx", "=", "warp", ".", "fit", "(", "Xsrc", "=", "opt", ".", "canon4pts", ",", "Xdst", "=", "opt", ".", "bbox4pts", ")", "\n", "if", "opt", ".", "netType", "==", "\"STN\"", ":", "opt", ".", "warpN", "=", "1", "\n", "\n", "print", "(", "\"({0}) {1}\"", ".", "format", "(", "\n", "util", ".", "toGreen", "(", "\"{0}\"", ".", "format", "(", "opt", ".", "group", ")", ")", ",", "\n", "util", ".", "toGreen", "(", "\"{0}\"", ".", "format", "(", "opt", ".", "model", ")", ")", ")", ")", "\n", "print", "(", "\"------------------------------------------\"", ")", "\n", "print", "(", "\"network type: {0}, recurrent warps: {1}\"", ".", "format", "(", "\n", "util", ".", "toYellow", "(", "\"{0}\"", ".", "format", "(", "opt", ".", "netType", ")", ")", ",", "\n", "util", ".", "toYellow", "(", "\"{0}\"", ".", "format", "(", "opt", ".", "warpN", "if", "opt", ".", "netType", "==", "\"IC-STN\"", "else", "\"X\"", ")", ")", ")", ")", "\n", "print", "(", "\"batch size: {0}, image size: {1}x{2}\"", ".", "format", "(", "\n", "util", ".", "toYellow", "(", "\"{0}\"", ".", "format", "(", "opt", ".", "batchSize", ")", ")", ",", "\n", "util", ".", "toYellow", "(", "\"{0}\"", ".", "format", "(", "opt", ".", "H", ")", ")", ",", "\n", "util", ".", "toYellow", "(", "\"{0}\"", ".", "format", "(", "opt", ".", "W", ")", ")", ")", ")", "\n", "print", "(", "\"warpScale: (pert) {0} (trans) {1}\"", ".", "format", "(", "\n", "util", ".", "toYellow", "(", "\"{0}\"", ".", "format", "(", "opt", ".", "pertScale", ")", ")", ",", "\n", "util", ".", "toYellow", "(", "\"{0}\"", ".", "format", "(", "opt", ".", "transScale", ")", ")", ")", ")", "\n", "if", "training", ":", "\n", "\t\t", "print", "(", "\"[geometric predictor]    stddev={0}, lr={1}\"", ".", "format", "(", "\n", "util", ".", "toYellow", "(", "\"{0:.0e}\"", ".", "format", "(", "opt", ".", "stdGP", ")", ")", ",", "\n", "util", ".", "toYellow", "(", "\"{0:.0e}\"", ".", "format", "(", "opt", ".", "lrGP", ")", ")", ")", ")", "\n", "print", "(", "\"[classification network] stddev={0}, lr={1}\"", ".", "format", "(", "\n", "util", ".", "toYellow", "(", "\"{0:.0e}\"", ".", "format", "(", "opt", ".", "stdC", ")", ")", ",", "\n", "util", ".", "toYellow", "(", "\"{0:.0e}\"", ".", "format", "(", "opt", ".", "lrC", ")", ")", ")", ")", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.graph.fullCNN": [[7, 39], ["graph.createVariable", "graph.createVariable", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.nn.conv2d", "tensorflow.matmul", "tensorflow.variable_scope", "graph.fullCNN.conv2Layer"], "function", ["home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.graph.createVariable", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.graph.createVariable"], ["def", "fullCNN", "(", "opt", ",", "image", ")", ":", "\n", "\t", "def", "conv2Layer", "(", "opt", ",", "feat", ",", "outDim", ")", ":", "\n", "\t\t", "weight", ",", "bias", "=", "createVariable", "(", "opt", ",", "[", "7", ",", "7", ",", "int", "(", "feat", ".", "shape", "[", "-", "1", "]", ")", ",", "outDim", "]", ",", "stddev", "=", "opt", ".", "stdC", ")", "\n", "conv", "=", "tf", ".", "nn", ".", "conv2d", "(", "feat", ",", "weight", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "\"VALID\"", ")", "+", "bias", "\n", "return", "conv", "\n", "", "def", "linearLayer", "(", "opt", ",", "feat", ",", "outDim", ")", ":", "\n", "\t\t", "weight", ",", "bias", "=", "createVariable", "(", "opt", ",", "[", "int", "(", "feat", ".", "shape", "[", "-", "1", "]", ")", ",", "outDim", "]", ",", "stddev", "=", "opt", ".", "stdC", ")", "\n", "fc", "=", "tf", ".", "matmul", "(", "feat", ",", "weight", ")", "+", "bias", "\n", "return", "fc", "\n", "", "with", "tf", ".", "variable_scope", "(", "\"classifier\"", ")", ":", "\n", "\t\t", "feat", "=", "image", "\n", "with", "tf", ".", "variable_scope", "(", "\"conv1\"", ")", ":", "\n", "\t\t\t", "feat", "=", "conv2Layer", "(", "opt", ",", "feat", ",", "6", ")", "\n", "feat", "=", "tf", ".", "nn", ".", "relu", "(", "feat", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "\"conv2\"", ")", ":", "\n", "\t\t\t", "feat", "=", "conv2Layer", "(", "opt", ",", "feat", ",", "12", ")", "\n", "feat", "=", "tf", ".", "nn", ".", "relu", "(", "feat", ")", "\n", "feat", "=", "tf", ".", "nn", ".", "max_pool", "(", "feat", ",", "ksize", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "strides", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "padding", "=", "\"VALID\"", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "\"conv3\"", ")", ":", "\n", "\t\t\t", "feat", "=", "conv2Layer", "(", "opt", ",", "feat", ",", "24", ")", "\n", "feat", "=", "tf", ".", "nn", ".", "relu", "(", "feat", ")", "\n", "", "feat", "=", "tf", ".", "reshape", "(", "feat", ",", "[", "opt", ".", "batchSize", ",", "-", "1", "]", ")", "\n", "with", "tf", ".", "variable_scope", "(", "\"fc4\"", ")", ":", "\n", "\t\t\t", "feat", "=", "linearLayer", "(", "opt", ",", "feat", ",", "200", ")", "\n", "feat", "=", "tf", ".", "nn", ".", "relu", "(", "feat", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "\"fc5\"", ")", ":", "\n", "\t\t\t", "feat", "=", "linearLayer", "(", "opt", ",", "feat", ",", "opt", ".", "labelN", ")", "\n", "", "output", "=", "feat", "\n", "", "return", "output", "\n", "\n", "# build classification network", "\n", "", "def", "CNN", "(", "opt", ",", "image", ")", ":", "\n", "\t", "def", "conv2Layer", "(", "opt", ",", "feat", ",", "outDim", ")", ":", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.graph.CNN": [[41, 60], ["graph.createVariable", "graph.createVariable", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.nn.conv2d", "tensorflow.matmul", "tensorflow.variable_scope", "graph.fullCNN.conv2Layer"], "function", ["home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.graph.createVariable", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.graph.createVariable"], ["conv", "=", "tf", ".", "nn", ".", "conv2d", "(", "feat", ",", "weight", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "\"VALID\"", ")", "+", "bias", "\n", "return", "conv", "\n", "", "def", "linearLayer", "(", "opt", ",", "feat", ",", "outDim", ")", ":", "\n", "\t\t", "weight", ",", "bias", "=", "createVariable", "(", "opt", ",", "[", "int", "(", "feat", ".", "shape", "[", "-", "1", "]", ")", ",", "outDim", "]", ",", "stddev", "=", "opt", ".", "stdC", ")", "\n", "fc", "=", "tf", ".", "matmul", "(", "feat", ",", "weight", ")", "+", "bias", "\n", "return", "fc", "\n", "", "with", "tf", ".", "variable_scope", "(", "\"classifier\"", ")", ":", "\n", "\t\t", "feat", "=", "image", "\n", "with", "tf", ".", "variable_scope", "(", "\"conv1\"", ")", ":", "\n", "\t\t\t", "feat", "=", "conv2Layer", "(", "opt", ",", "feat", ",", "6", ")", "\n", "feat", "=", "tf", ".", "nn", ".", "relu", "(", "feat", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "\"conv2\"", ")", ":", "\n", "\t\t\t", "feat", "=", "conv2Layer", "(", "opt", ",", "feat", ",", "12", ")", "\n", "feat", "=", "tf", ".", "nn", ".", "relu", "(", "feat", ")", "\n", "feat", "=", "tf", ".", "nn", ".", "max_pool", "(", "feat", ",", "ksize", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "strides", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "padding", "=", "\"VALID\"", ")", "\n", "", "feat", "=", "tf", ".", "reshape", "(", "feat", ",", "[", "opt", ".", "batchSize", ",", "-", "1", "]", ")", "\n", "with", "tf", ".", "variable_scope", "(", "\"fc3\"", ")", ":", "\n", "\t\t\t", "feat", "=", "linearLayer", "(", "opt", ",", "feat", ",", "opt", ".", "labelN", ")", "\n", "", "output", "=", "feat", "\n", "", "return", "output", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.graph.STN": [[62, 92], ["warp.vec2mtrx", "warp.transformImage", "imageWarpAll.append", "graph.createVariable", "graph.createVariable", "tensorflow.variable_scope", "tensorflow.reshape", "tensorflow.nn.conv2d", "tensorflow.matmul", "tensorflow.variable_scope", "graph.fullCNN.conv2Layer"], "function", ["home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.vec2mtrx", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.transformImage", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.graph.createVariable", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.graph.createVariable"], ["# build Spatial Transformer Network", "\n", "", "def", "STN", "(", "opt", ",", "image", ")", ":", "\n", "\t", "def", "conv2Layer", "(", "opt", ",", "feat", ",", "outDim", ")", ":", "\n", "\t\t", "weight", ",", "bias", "=", "createVariable", "(", "opt", ",", "[", "7", ",", "7", ",", "int", "(", "feat", ".", "shape", "[", "-", "1", "]", ")", ",", "outDim", "]", ",", "stddev", "=", "opt", ".", "stdGP", ")", "\n", "conv", "=", "tf", ".", "nn", ".", "conv2d", "(", "feat", ",", "weight", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "\"VALID\"", ")", "+", "bias", "\n", "return", "conv", "\n", "", "def", "linearLayer", "(", "opt", ",", "feat", ",", "outDim", ")", ":", "\n", "\t\t", "weight", ",", "bias", "=", "createVariable", "(", "opt", ",", "[", "int", "(", "feat", ".", "shape", "[", "-", "1", "]", ")", ",", "outDim", "]", ",", "stddev", "=", "opt", ".", "stdGP", ")", "\n", "fc", "=", "tf", ".", "matmul", "(", "feat", ",", "weight", ")", "+", "bias", "\n", "return", "fc", "\n", "", "imageWarpAll", "=", "[", "image", "]", "\n", "with", "tf", ".", "variable_scope", "(", "\"geometric\"", ")", ":", "\n", "\t\t", "feat", "=", "image", "\n", "with", "tf", ".", "variable_scope", "(", "\"conv1\"", ")", ":", "\n", "\t\t\t", "feat", "=", "conv2Layer", "(", "opt", ",", "feat", ",", "6", ")", "\n", "feat", "=", "tf", ".", "nn", ".", "relu", "(", "feat", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "\"conv2\"", ")", ":", "\n", "\t\t\t", "feat", "=", "conv2Layer", "(", "opt", ",", "feat", ",", "24", ")", "\n", "feat", "=", "tf", ".", "nn", ".", "relu", "(", "feat", ")", "\n", "", "feat", "=", "tf", ".", "reshape", "(", "feat", ",", "[", "opt", ".", "batchSize", ",", "-", "1", "]", ")", "\n", "with", "tf", ".", "variable_scope", "(", "\"fc3\"", ")", ":", "\n", "\t\t\t", "feat", "=", "linearLayer", "(", "opt", ",", "feat", ",", "opt", ".", "warpDim", ")", "\n", "", "p", "=", "feat", "\n", "", "pMtrx", "=", "warp", ".", "vec2mtrx", "(", "opt", ",", "p", ")", "\n", "imageWarp", "=", "warp", ".", "transformImage", "(", "opt", ",", "image", ",", "pMtrx", ")", "\n", "imageWarpAll", ".", "append", "(", "imageWarp", ")", "\n", "return", "imageWarpAll", "\n", "\n", "# build Inverse Compositional STN", "\n", "", "def", "ICSTN", "(", "opt", ",", "imageFull", ",", "p", ")", ":", "\n", "\t", "def", "conv2Layer", "(", "opt", ",", "feat", ",", "outDim", ")", ":", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.graph.ICSTN": [[94, 129], ["range", "warp.vec2mtrx", "warp.transformImage", "imageWarpAll.append", "graph.createVariable", "graph.createVariable", "warp.compose", "tensorflow.nn.conv2d", "tensorflow.matmul", "tensorflow.variable_scope", "warp.vec2mtrx", "warp.transformImage", "imageWarpAll.append", "tensorflow.reshape", "int", "int", "tensorflow.variable_scope", "graph.fullCNN.conv2Layer"], "function", ["home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.vec2mtrx", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.transformImage", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.graph.createVariable", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.graph.createVariable", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.compose", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.vec2mtrx", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.transformImage"], ["conv", "=", "tf", ".", "nn", ".", "conv2d", "(", "feat", ",", "weight", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "\"VALID\"", ")", "+", "bias", "\n", "return", "conv", "\n", "", "def", "linearLayer", "(", "opt", ",", "feat", ",", "outDim", ")", ":", "\n", "\t\t", "weight", ",", "bias", "=", "createVariable", "(", "opt", ",", "[", "int", "(", "feat", ".", "shape", "[", "-", "1", "]", ")", ",", "outDim", "]", ",", "stddev", "=", "opt", ".", "stdGP", ")", "\n", "fc", "=", "tf", ".", "matmul", "(", "feat", ",", "weight", ")", "+", "bias", "\n", "return", "fc", "\n", "", "imageWarpAll", "=", "[", "]", "\n", "for", "l", "in", "range", "(", "opt", ".", "warpN", ")", ":", "\n", "\t\t", "with", "tf", ".", "variable_scope", "(", "\"geometric\"", ",", "reuse", "=", "l", ">", "0", ")", ":", "\n", "\t\t\t", "pMtrx", "=", "warp", ".", "vec2mtrx", "(", "opt", ",", "p", ")", "\n", "imageWarp", "=", "warp", ".", "transformCropImage", "(", "opt", ",", "imageFull", ",", "pMtrx", ")", "\n", "imageWarpAll", ".", "append", "(", "imageWarp", ")", "\n", "feat", "=", "imageWarp", "\n", "with", "tf", ".", "variable_scope", "(", "\"conv1\"", ")", ":", "\n", "\t\t\t\t", "feat", "=", "conv2Layer", "(", "opt", ",", "feat", ",", "6", ")", "\n", "feat", "=", "tf", ".", "nn", ".", "relu", "(", "feat", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "\"conv2\"", ")", ":", "\n", "\t\t\t\t", "feat", "=", "conv2Layer", "(", "opt", ",", "feat", ",", "24", ")", "\n", "feat", "=", "tf", ".", "nn", ".", "relu", "(", "feat", ")", "\n", "", "feat", "=", "tf", ".", "reshape", "(", "feat", ",", "[", "opt", ".", "batchSize", ",", "-", "1", "]", ")", "\n", "with", "tf", ".", "variable_scope", "(", "\"fc3\"", ")", ":", "\n", "\t\t\t\t", "feat", "=", "linearLayer", "(", "opt", ",", "feat", ",", "opt", ".", "warpDim", ")", "\n", "", "dp", "=", "feat", "\n", "", "p", "=", "warp", ".", "compose", "(", "opt", ",", "p", ",", "dp", ")", "\n", "", "pMtrx", "=", "warp", ".", "vec2mtrx", "(", "opt", ",", "p", ")", "\n", "imageWarp", "=", "warp", ".", "transformCropImage", "(", "opt", ",", "imageFull", ",", "pMtrx", ")", "\n", "imageWarpAll", ".", "append", "(", "imageWarp", ")", "\n", "return", "imageWarpAll", "\n", "\n", "# auxiliary function for creating weight and bias", "\n", "", "def", "createVariable", "(", "opt", ",", "weightShape", ",", "biasShape", "=", "None", ",", "stddev", "=", "None", ")", ":", "\n", "\t", "if", "biasShape", "is", "None", ":", "biasShape", "=", "[", "weightShape", "[", "-", "1", "]", "]", "\n", "weight", "=", "tf", ".", "get_variable", "(", "\"weight\"", ",", "shape", "=", "weightShape", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "stddev", "=", "stddev", ")", ")", "\n", "bias", "=", "tf", ".", "get_variable", "(", "\"bias\"", ",", "shape", "=", "biasShape", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "stddev", "=", "stddev", ")", ")", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.graph.createVariable": [[131, 138], ["tensorflow.get_variable", "tensorflow.get_variable", "tensorflow.random_normal_initializer", "tensorflow.random_normal_initializer"], "function", ["None"], ["", ""]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.data.loadMNIST": [[9, 29], ["numpy.load", "MNIST[].item", "MNIST[].item", "MNIST[].item", "os.path.exists", "input_data.read_data_sets", "input_data.read_data_sets.train.images.reshape().astype", "input_data.read_data_sets.validation.images.reshape().astype", "input_data.read_data_sets.test.images.reshape().astype", "numpy.argmax", "numpy.argmax", "numpy.argmax", "os.makedirs", "numpy.savez", "os.system", "input_data.read_data_sets.train.labels.astype", "input_data.read_data_sets.validation.labels.astype", "input_data.read_data_sets.test.labels.astype", "os.path.dirname", "input_data.read_data_sets.train.images.reshape", "input_data.read_data_sets.validation.images.reshape", "input_data.read_data_sets.test.images.reshape"], "function", ["None"], ["\n", "# load GTSRB data", "\n", "def", "loadGTSRB", "(", "opt", ",", "fname", ")", ":", "\n", "\t", "if", "not", "os", ".", "path", ".", "exists", "(", "fname", ")", ":", "\n", "# download and preprocess GTSRB dataset", "\n", "\t\t", "os", ".", "makedirs", "(", "os", ".", "path", ".", "dirname", "(", "fname", ")", ")", "\n", "os", ".", "system", "(", "\"wget -O data/GTSRB_Final_Training_Images.zip http://benchmark.ini.rub.de/Dataset/GTSRB_Final_Training_Images.zip\"", ")", "\n", "os", ".", "system", "(", "\"wget -O data/GTSRB_Final_Test_Images.zip http://benchmark.ini.rub.de/Dataset/GTSRB_Final_Test_Images.zip\"", ")", "\n", "os", ".", "system", "(", "\"wget -O data/GTSRB_Final_Test_GT.zip http://benchmark.ini.rub.de/Dataset/GTSRB_Final_Test_GT.zip\"", ")", "\n", "os", ".", "system", "(", "\"cd data && unzip GTSRB_Final_Training_Images.zip\"", ")", "\n", "os", ".", "system", "(", "\"cd data && unzip GTSRB_Final_Test_Images.zip\"", ")", "\n", "os", ".", "system", "(", "\"cd data && unzip GTSRB_Final_Test_GT.zip\"", ")", "\n", "# training data", "\n", "print", "(", "\"preparing training data...\"", ")", "\n", "images", ",", "bboxes", ",", "labels", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "c", "in", "range", "(", "43", ")", ":", "\n", "\t\t\t", "prefix", "=", "\"data/GTSRB/Final_Training/Images/{0:05d}\"", ".", "format", "(", "c", ")", "\n", "with", "open", "(", "\"{0}/GT-{1:05d}.csv\"", ".", "format", "(", "prefix", ",", "c", ")", ")", "as", "file", ":", "\n", "\t\t\t\t", "reader", "=", "csv", ".", "reader", "(", "file", ",", "delimiter", "=", "\";\"", ")", "\n", "next", "(", "reader", ")", "\n", "for", "line", "in", "reader", ":", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.data.genPerturbations": [[31, 61], ["tensorflow.name_scope", "numpy.tile", "numpy.tile", "numpy.zeros", "numpy.ones", "tensorflow.concat", "tensorflow.expand_dims", "tensorflow.to_float", "tensorflow.expand_dims", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.random_normal", "tensorflow.concat", "tensorflow.matrix_solve", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "tensorflow.concat", "tensorflow.matrix_solve_ls", "tensorflow.stack", "tensorflow.stack", "numpy.stack", "numpy.stack", "numpy.stack", "numpy.stack", "numpy.stack", "numpy.stack"], "function", ["None"], ["rawH", ",", "rawW", "=", "img", ".", "shape", "[", "0", "]", ",", "img", ".", "shape", "[", "1", "]", "\n", "scaleH", ",", "scaleW", "=", "float", "(", "opt", ".", "fullH", ")", "/", "rawH", ",", "float", "(", "opt", ".", "fullW", ")", "/", "rawW", "\n", "imgResize", "=", "scipy", ".", "misc", ".", "imresize", "(", "img", ",", "(", "opt", ".", "fullH", ",", "opt", ".", "fullW", ",", "3", ")", ")", "\n", "images", ".", "append", "(", "imgResize", ")", "\n", "bboxes", ".", "append", "(", "[", "float", "(", "line", "[", "3", "]", ")", "*", "scaleW", ",", "float", "(", "line", "[", "4", "]", ")", "*", "scaleH", ",", "\n", "float", "(", "line", "[", "5", "]", ")", "*", "scaleW", ",", "float", "(", "line", "[", "6", "]", ")", "*", "scaleH", "]", ")", "\n", "labels", ".", "append", "(", "int", "(", "line", "[", "7", "]", ")", ")", "\n", "", "", "", "trainData", "=", "{", "\n", "\"image\"", ":", "np", ".", "array", "(", "images", ")", ",", "\n", "\"bbox\"", ":", "np", ".", "array", "(", "bboxes", ")", ",", "\n", "\"label\"", ":", "np", ".", "array", "(", "labels", ")", "\n", "}", "\n", "# test data", "\n", "print", "(", "\"preparing test data...\"", ")", "\n", "images", ",", "bboxes", ",", "labels", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "prefix", "=", "\"data/GTSRB/Final_Test/Images/\"", "\n", "with", "open", "(", "\"data/GT-final_test.csv\"", ")", "as", "file", ":", "\n", "\t\t\t", "reader", "=", "csv", ".", "reader", "(", "file", ",", "delimiter", "=", "\";\"", ")", "\n", "next", "(", "reader", ")", "\n", "for", "line", "in", "reader", ":", "\n", "\t\t\t\t", "img", "=", "plt", ".", "imread", "(", "prefix", "+", "\"/\"", "+", "line", "[", "0", "]", ")", "\n", "rawH", ",", "rawW", "=", "img", ".", "shape", "[", "0", "]", ",", "img", ".", "shape", "[", "1", "]", "\n", "scaleH", ",", "scaleW", "=", "float", "(", "opt", ".", "fullH", ")", "/", "rawH", ",", "float", "(", "opt", ".", "fullW", ")", "/", "rawW", "\n", "imgResize", "=", "scipy", ".", "misc", ".", "imresize", "(", "img", ",", "(", "opt", ".", "fullH", ",", "opt", ".", "fullW", ",", "3", ")", ")", "\n", "images", ".", "append", "(", "imgResize", ")", "\n", "bboxes", ".", "append", "(", "[", "float", "(", "line", "[", "3", "]", ")", "*", "scaleW", ",", "float", "(", "line", "[", "4", "]", ")", "*", "scaleH", ",", "\n", "float", "(", "line", "[", "5", "]", ")", "*", "scaleW", ",", "float", "(", "line", "[", "6", "]", ")", "*", "scaleH", "]", ")", "\n", "labels", ".", "append", "(", "int", "(", "line", "[", "7", "]", ")", ")", "\n", "", "", "testData", "=", "{", "\n", "\"image\"", ":", "np", ".", "array", "(", "images", ")", ",", "\n", "\"bbox\"", ":", "np", ".", "array", "(", "bboxes", ")", ",", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.data.makeBatch": [[63, 73], ["len", "numpy.random.randint"], "function", ["None"], ["}", "\n", "np", ".", "savez", "(", "fname", ",", "train", "=", "trainData", ",", "test", "=", "testData", ")", "\n", "os", ".", "system", "(", "\"rm -rf data/*.zip\"", ")", "\n", "", "GTSRB", "=", "np", ".", "load", "(", "fname", ")", "\n", "trainData", "=", "GTSRB", "[", "\"train\"", "]", ".", "item", "(", ")", "\n", "testData", "=", "GTSRB", "[", "\"test\"", "]", ".", "item", "(", ")", "\n", "return", "trainData", ",", "testData", "\n", "\n", "# generate training batch", "\n", "", "def", "genPerturbations", "(", "opt", ")", ":", "\n", "\t", "with", "tf", ".", "name_scope", "(", "\"genPerturbations\"", ")", ":", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.data.evalTest": [[75, 113], ["len", "int", "range", "numpy.ceil", "numpy.zeros", "sess.run", "pred[].sum", "float", "numpy.arange", "numpy.arange", "range", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "len", "len", "[].append", "[].append", "numpy.mean", "numpy.mean", "numpy.var", "numpy.var", "len"], "function", ["None"], ["Y", "=", "np", ".", "tile", "(", "opt", ".", "canon4pts", "[", ":", ",", "1", "]", ",", "[", "opt", ".", "batchSize", ",", "1", "]", ")", "\n", "dX", "=", "tf", ".", "random_normal", "(", "[", "opt", ".", "batchSize", ",", "4", "]", ")", "*", "opt", ".", "pertScale", "+", "tf", ".", "random_normal", "(", "[", "opt", ".", "batchSize", ",", "1", "]", ")", "*", "opt", ".", "transScale", "\n", "dY", "=", "tf", ".", "random_normal", "(", "[", "opt", ".", "batchSize", ",", "4", "]", ")", "*", "opt", ".", "pertScale", "+", "tf", ".", "random_normal", "(", "[", "opt", ".", "batchSize", ",", "1", "]", ")", "*", "opt", ".", "transScale", "\n", "O", "=", "np", ".", "zeros", "(", "[", "opt", ".", "batchSize", ",", "4", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "I", "=", "np", ".", "ones", "(", "[", "opt", ".", "batchSize", ",", "4", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "# fit warp parameters to generated displacements", "\n", "if", "opt", ".", "warpType", "==", "\"homography\"", ":", "\n", "\t\t\t", "A", "=", "tf", ".", "concat", "(", "[", "tf", ".", "stack", "(", "[", "X", ",", "Y", ",", "I", ",", "O", ",", "O", ",", "O", ",", "-", "X", "*", "(", "X", "+", "dX", ")", ",", "-", "Y", "*", "(", "X", "+", "dX", ")", "]", ",", "axis", "=", "-", "1", ")", ",", "\n", "tf", ".", "stack", "(", "[", "O", ",", "O", ",", "O", ",", "X", ",", "Y", ",", "I", ",", "-", "X", "*", "(", "Y", "+", "dY", ")", ",", "-", "Y", "*", "(", "Y", "+", "dY", ")", "]", ",", "axis", "=", "-", "1", ")", "]", ",", "1", ")", "\n", "b", "=", "tf", ".", "expand_dims", "(", "tf", ".", "concat", "(", "[", "X", "+", "dX", ",", "Y", "+", "dY", "]", ",", "1", ")", ",", "-", "1", ")", "\n", "pPert", "=", "tf", ".", "matrix_solve", "(", "A", ",", "b", ")", "[", ":", ",", ":", ",", "0", "]", "\n", "pPert", "-=", "tf", ".", "to_float", "(", "[", "[", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", "]", "]", ")", "\n", "", "else", ":", "\n", "\t\t\t", "if", "opt", ".", "warpType", "==", "\"translation\"", ":", "\n", "\t\t\t\t", "J", "=", "np", ".", "concatenate", "(", "[", "np", ".", "stack", "(", "[", "I", ",", "O", "]", ",", "axis", "=", "-", "1", ")", ",", "\n", "np", ".", "stack", "(", "[", "O", ",", "I", "]", ",", "axis", "=", "-", "1", ")", "]", ",", "axis", "=", "1", ")", "\n", "", "if", "opt", ".", "warpType", "==", "\"similarity\"", ":", "\n", "\t\t\t\t", "J", "=", "np", ".", "concatenate", "(", "[", "np", ".", "stack", "(", "[", "X", ",", "Y", ",", "I", ",", "O", "]", ",", "axis", "=", "-", "1", ")", ",", "\n", "np", ".", "stack", "(", "[", "-", "Y", ",", "X", ",", "O", ",", "I", "]", ",", "axis", "=", "-", "1", ")", "]", ",", "axis", "=", "1", ")", "\n", "", "if", "opt", ".", "warpType", "==", "\"affine\"", ":", "\n", "\t\t\t\t", "J", "=", "np", ".", "concatenate", "(", "[", "np", ".", "stack", "(", "[", "X", ",", "Y", ",", "I", ",", "O", ",", "O", ",", "O", "]", ",", "axis", "=", "-", "1", ")", ",", "\n", "np", ".", "stack", "(", "[", "O", ",", "O", ",", "O", ",", "X", ",", "Y", ",", "I", "]", ",", "axis", "=", "-", "1", ")", "]", ",", "axis", "=", "1", ")", "\n", "", "dXY", "=", "tf", ".", "expand_dims", "(", "tf", ".", "concat", "(", "[", "dX", ",", "dY", "]", ",", "1", ")", ",", "-", "1", ")", "\n", "pPert", "=", "tf", ".", "matrix_solve_ls", "(", "J", ",", "dXY", ")", "[", ":", ",", ":", ",", "0", "]", "\n", "", "", "return", "pPert", "\n", "\n", "# make training batch", "\n", "", "def", "makeBatch", "(", "opt", ",", "data", ",", "PH", ")", ":", "\n", "\t", "N", "=", "len", "(", "data", "[", "\"image\"", "]", ")", "\n", "randIdx", "=", "np", ".", "random", ".", "randint", "(", "N", ",", "size", "=", "[", "opt", ".", "batchSize", "]", ")", "\n", "# put data in placeholders", "\n", "[", "image", ",", "label", "]", "=", "PH", "\n", "batch", "=", "{", "\n", "image", ":", "data", "[", "\"image\"", "]", "[", "randIdx", "]", "/", "255.0", ",", "\n", "label", ":", "data", "[", "\"label\"", "]", "[", "randIdx", "]", ",", "\n", "}", "\n", "return", "batch", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.warp.fit": [[6, 15], ["len", "numpy.concatenate", "numpy.concatenate", "[].squeeze", "numpy.array", "numpy.zeros", "numpy.ones", "numpy.stack", "numpy.stack", "scipy.linalg.lstsq"], "function", ["None"], ["def", "fit", "(", "Xsrc", ",", "Xdst", ")", ":", "\n", "\t", "ptsN", "=", "len", "(", "Xsrc", ")", "\n", "X", ",", "Y", ",", "U", ",", "V", ",", "O", ",", "I", "=", "Xsrc", "[", ":", ",", "0", "]", ",", "Xsrc", "[", ":", ",", "1", "]", ",", "Xdst", "[", ":", ",", "0", "]", ",", "Xdst", "[", ":", ",", "1", "]", ",", "np", ".", "zeros", "(", "[", "ptsN", "]", ")", ",", "np", ".", "ones", "(", "[", "ptsN", "]", ")", "\n", "A", "=", "np", ".", "concatenate", "(", "(", "np", ".", "stack", "(", "[", "X", ",", "Y", ",", "I", ",", "O", ",", "O", ",", "O", "]", ",", "axis", "=", "1", ")", ",", "\n", "np", ".", "stack", "(", "[", "O", ",", "O", ",", "O", ",", "X", ",", "Y", ",", "I", "]", ",", "axis", "=", "1", ")", ")", ",", "axis", "=", "0", ")", "\n", "b", "=", "np", ".", "concatenate", "(", "(", "U", ",", "V", ")", ",", "axis", "=", "0", ")", "\n", "p1", ",", "p2", ",", "p3", ",", "p4", ",", "p5", ",", "p6", "=", "scipy", ".", "linalg", ".", "lstsq", "(", "A", ",", "b", ")", "[", "0", "]", ".", "squeeze", "(", ")", "\n", "pMtrx", "=", "np", ".", "array", "(", "[", "[", "p1", ",", "p2", ",", "p3", "]", ",", "[", "p4", ",", "p5", ",", "p6", "]", ",", "[", "0", ",", "0", ",", "1", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "return", "pMtrx", "\n", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.warp.compose": [[17, 25], ["tensorflow.name_scope", "warp.vec2mtrx", "warp.vec2mtrx", "tensorflow.matmul", "warp.mtrx2vec"], "function", ["home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.vec2mtrx", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.vec2mtrx", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.mtrx2vec"], ["", "def", "compose", "(", "opt", ",", "p", ",", "dp", ")", ":", "\n", "\t", "with", "tf", ".", "name_scope", "(", "\"compose\"", ")", ":", "\n", "\t\t", "pMtrx", "=", "vec2mtrx", "(", "opt", ",", "p", ")", "\n", "dpMtrx", "=", "vec2mtrx", "(", "opt", ",", "dp", ")", "\n", "pMtrxNew", "=", "tf", ".", "matmul", "(", "dpMtrx", ",", "pMtrx", ")", "\n", "pMtrxNew", "/=", "pMtrxNew", "[", ":", ",", "2", ":", "3", ",", "2", ":", "3", "]", "\n", "pNew", "=", "mtrx2vec", "(", "opt", ",", "pMtrxNew", ")", "\n", "", "return", "pNew", "\n", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.warp.inverse": [[27, 33], ["tensorflow.name_scope", "warp.vec2mtrx", "tensorflow.matrix_inverse", "warp.mtrx2vec"], "function", ["home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.vec2mtrx", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.mtrx2vec"], ["", "def", "inverse", "(", "opt", ",", "p", ")", ":", "\n", "\t", "with", "tf", ".", "name_scope", "(", "\"inverse\"", ")", ":", "\n", "\t\t", "pMtrx", "=", "vec2mtrx", "(", "opt", ",", "p", ")", "\n", "pInvMtrx", "=", "tf", ".", "matrix_inverse", "(", "pMtrx", ")", "\n", "pInv", "=", "mtrx2vec", "(", "opt", ",", "pInvMtrx", ")", "\n", "", "return", "pInv", "\n", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.warp.vec2mtrx": [[35, 52], ["tensorflow.name_scope", "tensorflow.zeros", "tensorflow.ones", "tensorflow.unstack", "tensorflow.transpose", "tensorflow.unstack", "tensorflow.transpose", "tensorflow.unstack", "tensorflow.transpose", "tensorflow.unstack", "tensorflow.transpose", "tensorflow.stack", "tensorflow.stack", "tensorflow.stack", "tensorflow.stack"], "function", ["None"], ["", "def", "vec2mtrx", "(", "opt", ",", "p", ")", ":", "\n", "\t", "with", "tf", ".", "name_scope", "(", "\"vec2mtrx\"", ")", ":", "\n", "\t\t", "O", "=", "tf", ".", "zeros", "(", "[", "opt", ".", "batchSize", "]", ")", "\n", "I", "=", "tf", ".", "ones", "(", "[", "opt", ".", "batchSize", "]", ")", "\n", "if", "opt", ".", "warpType", "==", "\"translation\"", ":", "\n", "\t\t\t", "tx", ",", "ty", "=", "tf", ".", "unstack", "(", "p", ",", "axis", "=", "1", ")", "\n", "pMtrx", "=", "tf", ".", "transpose", "(", "tf", ".", "stack", "(", "[", "[", "I", ",", "O", ",", "tx", "]", ",", "[", "O", ",", "I", ",", "ty", "]", ",", "[", "O", ",", "O", ",", "I", "]", "]", ")", ",", "perm", "=", "[", "2", ",", "0", ",", "1", "]", ")", "\n", "", "if", "opt", ".", "warpType", "==", "\"similarity\"", ":", "\n", "\t\t\t", "pc", ",", "ps", ",", "tx", ",", "ty", "=", "tf", ".", "unstack", "(", "p", ",", "axis", "=", "1", ")", "\n", "pMtrx", "=", "tf", ".", "transpose", "(", "tf", ".", "stack", "(", "[", "[", "I", "+", "pc", ",", "-", "ps", ",", "tx", "]", ",", "[", "ps", ",", "I", "+", "pc", ",", "ty", "]", ",", "[", "O", ",", "O", ",", "I", "]", "]", ")", ",", "perm", "=", "[", "2", ",", "0", ",", "1", "]", ")", "\n", "", "if", "opt", ".", "warpType", "==", "\"affine\"", ":", "\n", "\t\t\t", "p1", ",", "p2", ",", "p3", ",", "p4", ",", "p5", ",", "p6", ",", "p7", ",", "p8", "=", "tf", ".", "unstack", "(", "p", ",", "axis", "=", "1", ")", "\n", "pMtrx", "=", "tf", ".", "transpose", "(", "tf", ".", "stack", "(", "[", "[", "I", "+", "p1", ",", "p2", ",", "p3", "]", ",", "[", "p4", ",", "I", "+", "p5", ",", "p6", "]", ",", "[", "O", ",", "O", ",", "I", "]", "]", ")", ",", "perm", "=", "[", "2", ",", "0", ",", "1", "]", ")", "\n", "", "if", "opt", ".", "warpType", "==", "\"homography\"", ":", "\n", "\t\t\t", "p1", ",", "p2", ",", "p3", ",", "p4", ",", "p5", ",", "p6", ",", "p7", ",", "p8", "=", "tf", ".", "unstack", "(", "p", ",", "axis", "=", "1", ")", "\n", "pMtrx", "=", "tf", ".", "transpose", "(", "tf", ".", "stack", "(", "[", "[", "I", "+", "p1", ",", "p2", ",", "p3", "]", ",", "[", "p4", ",", "I", "+", "p5", ",", "p6", "]", ",", "[", "p7", ",", "p8", ",", "I", "]", "]", ")", ",", "perm", "=", "[", "2", ",", "0", ",", "1", "]", ")", "\n", "", "", "return", "pMtrx", "\n", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.warp.mtrx2vec": [[54, 65], ["tensorflow.name_scope", "tensorflow.unstack", "tensorflow.unstack", "tensorflow.unstack", "tensorflow.unstack", "tensorflow.stack", "tensorflow.stack", "tensorflow.stack", "tensorflow.stack"], "function", ["None"], ["", "def", "mtrx2vec", "(", "opt", ",", "pMtrx", ")", ":", "\n", "\t", "with", "tf", ".", "name_scope", "(", "\"mtrx2vec\"", ")", ":", "\n", "\t\t", "[", "row0", ",", "row1", ",", "row2", "]", "=", "tf", ".", "unstack", "(", "pMtrx", ",", "axis", "=", "1", ")", "\n", "[", "e00", ",", "e01", ",", "e02", "]", "=", "tf", ".", "unstack", "(", "row0", ",", "axis", "=", "1", ")", "\n", "[", "e10", ",", "e11", ",", "e12", "]", "=", "tf", ".", "unstack", "(", "row1", ",", "axis", "=", "1", ")", "\n", "[", "e20", ",", "e21", ",", "e22", "]", "=", "tf", ".", "unstack", "(", "row2", ",", "axis", "=", "1", ")", "\n", "if", "opt", ".", "warpType", "==", "\"translation\"", ":", "p", "=", "tf", ".", "stack", "(", "[", "e02", ",", "e12", "]", ",", "axis", "=", "1", ")", "\n", "if", "opt", ".", "warpType", "==", "\"similarity\"", ":", "p", "=", "tf", ".", "stack", "(", "[", "e00", "-", "1", ",", "e10", ",", "e02", ",", "e12", "]", ",", "axis", "=", "1", ")", "\n", "if", "opt", ".", "warpType", "==", "\"affine\"", ":", "p", "=", "tf", ".", "stack", "(", "[", "e00", "-", "1", ",", "e01", ",", "e02", ",", "e10", ",", "e11", "-", "1", ",", "e12", "]", ",", "axis", "=", "1", ")", "\n", "if", "opt", ".", "warpType", "==", "\"homography\"", ":", "p", "=", "tf", ".", "stack", "(", "[", "e00", "-", "1", ",", "e01", ",", "e02", ",", "e10", ",", "e11", "-", "1", ",", "e12", ",", "e20", ",", "e21", "]", ",", "axis", "=", "1", ")", "\n", "", "return", "p", "\n", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.warp.transformImage": [[67, 108], ["tensorflow.name_scope", "tensorflow.tile", "tensorflow.matmul", "numpy.meshgrid", "numpy.tile().astype", "tensorflow.matmul", "tensorflow.unstack", "tensorflow.reshape", "tensorflow.reshape", "numpy.tile", "tensorflow.reshape", "tensorflow.concat", "tensorflow.fill", "tensorflow.where", "tensorflow.where", "tensorflow.where", "tensorflow.where", "tensorflow.reshape", "tensorflow.reshape", "tensorflow.expand_dims", "numpy.linspace", "numpy.linspace", "X.flatten", "Y.flatten", "numpy.stack", "tensorflow.floor", "tensorflow.ceil", "tensorflow.floor", "tensorflow.ceil", "tensorflow.to_int32", "tensorflow.to_int32", "tensorflow.to_int32", "tensorflow.to_int32", "numpy.arange().reshape", "warp.transformImage.insideImage"], "function", ["None"], ["", "def", "transformImage", "(", "opt", ",", "image", ",", "pMtrx", ")", ":", "\n", "\t", "with", "tf", ".", "name_scope", "(", "\"transformImage\"", ")", ":", "\n", "\t\t", "refMtrx", "=", "tf", ".", "tile", "(", "tf", ".", "expand_dims", "(", "opt", ".", "refMtrx", ",", "axis", "=", "0", ")", ",", "[", "opt", ".", "batchSize", ",", "1", ",", "1", "]", ")", "\n", "transMtrx", "=", "tf", ".", "matmul", "(", "refMtrx", ",", "pMtrx", ")", "\n", "# warp the canonical coordinates", "\n", "X", ",", "Y", "=", "np", ".", "meshgrid", "(", "np", ".", "linspace", "(", "-", "1", ",", "1", ",", "opt", ".", "W", ")", ",", "np", ".", "linspace", "(", "-", "1", ",", "1", ",", "opt", ".", "H", ")", ")", "\n", "X", ",", "Y", "=", "X", ".", "flatten", "(", ")", ",", "Y", ".", "flatten", "(", ")", "\n", "XYhom", "=", "np", ".", "stack", "(", "[", "X", ",", "Y", ",", "np", ".", "ones_like", "(", "X", ")", "]", ",", "axis", "=", "1", ")", ".", "T", "\n", "XYhom", "=", "np", ".", "tile", "(", "XYhom", ",", "[", "opt", ".", "batchSize", ",", "1", ",", "1", "]", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "XYwarpHom", "=", "tf", ".", "matmul", "(", "transMtrx", ",", "XYhom", ")", "\n", "XwarpHom", ",", "YwarpHom", ",", "ZwarpHom", "=", "tf", ".", "unstack", "(", "XYwarpHom", ",", "axis", "=", "1", ")", "\n", "Xwarp", "=", "tf", ".", "reshape", "(", "XwarpHom", "/", "(", "ZwarpHom", "+", "1e-8", ")", ",", "[", "opt", ".", "batchSize", ",", "opt", ".", "H", ",", "opt", ".", "W", "]", ")", "\n", "Ywarp", "=", "tf", ".", "reshape", "(", "YwarpHom", "/", "(", "ZwarpHom", "+", "1e-8", ")", ",", "[", "opt", ".", "batchSize", ",", "opt", ".", "H", ",", "opt", ".", "W", "]", ")", "\n", "# get the integer sampling coordinates", "\n", "Xfloor", ",", "Xceil", "=", "tf", ".", "floor", "(", "Xwarp", ")", ",", "tf", ".", "ceil", "(", "Xwarp", ")", "\n", "Yfloor", ",", "Yceil", "=", "tf", ".", "floor", "(", "Ywarp", ")", ",", "tf", ".", "ceil", "(", "Ywarp", ")", "\n", "XfloorInt", ",", "XceilInt", "=", "tf", ".", "to_int32", "(", "Xfloor", ")", ",", "tf", ".", "to_int32", "(", "Xceil", ")", "\n", "YfloorInt", ",", "YceilInt", "=", "tf", ".", "to_int32", "(", "Yfloor", ")", ",", "tf", ".", "to_int32", "(", "Yceil", ")", "\n", "imageIdx", "=", "np", ".", "tile", "(", "np", ".", "arange", "(", "opt", ".", "batchSize", ")", ".", "reshape", "(", "[", "opt", ".", "batchSize", ",", "1", ",", "1", "]", ")", ",", "[", "1", ",", "opt", ".", "H", ",", "opt", ".", "W", "]", ")", "\n", "imageVec", "=", "tf", ".", "reshape", "(", "image", ",", "[", "-", "1", ",", "int", "(", "image", ".", "shape", "[", "-", "1", "]", ")", "]", ")", "\n", "imageVecOut", "=", "tf", ".", "concat", "(", "[", "imageVec", ",", "tf", ".", "zeros", "(", "[", "1", ",", "int", "(", "image", ".", "shape", "[", "-", "1", "]", ")", "]", ")", "]", ",", "axis", "=", "0", ")", "\n", "idxUL", "=", "(", "imageIdx", "*", "opt", ".", "H", "+", "YfloorInt", ")", "*", "opt", ".", "W", "+", "XfloorInt", "\n", "idxUR", "=", "(", "imageIdx", "*", "opt", ".", "H", "+", "YfloorInt", ")", "*", "opt", ".", "W", "+", "XceilInt", "\n", "idxBL", "=", "(", "imageIdx", "*", "opt", ".", "H", "+", "YceilInt", ")", "*", "opt", ".", "W", "+", "XfloorInt", "\n", "idxBR", "=", "(", "imageIdx", "*", "opt", ".", "H", "+", "YceilInt", ")", "*", "opt", ".", "W", "+", "XceilInt", "\n", "idxOutside", "=", "tf", ".", "fill", "(", "[", "opt", ".", "batchSize", ",", "opt", ".", "H", ",", "opt", ".", "W", "]", ",", "opt", ".", "batchSize", "*", "opt", ".", "H", "*", "opt", ".", "W", ")", "\n", "def", "insideImage", "(", "Xint", ",", "Yint", ")", ":", "\n", "\t\t\t", "return", "(", "Xint", ">=", "0", ")", "&", "(", "Xint", "<", "opt", ".", "W", ")", "&", "(", "Yint", ">=", "0", ")", "&", "(", "Yint", "<", "opt", ".", "H", ")", "\n", "", "idxUL", "=", "tf", ".", "where", "(", "insideImage", "(", "XfloorInt", ",", "YfloorInt", ")", ",", "idxUL", ",", "idxOutside", ")", "\n", "idxUR", "=", "tf", ".", "where", "(", "insideImage", "(", "XceilInt", ",", "YfloorInt", ")", ",", "idxUR", ",", "idxOutside", ")", "\n", "idxBL", "=", "tf", ".", "where", "(", "insideImage", "(", "XfloorInt", ",", "YceilInt", ")", ",", "idxBL", ",", "idxOutside", ")", "\n", "idxBR", "=", "tf", ".", "where", "(", "insideImage", "(", "XceilInt", ",", "YceilInt", ")", ",", "idxBR", ",", "idxOutside", ")", "\n", "# bilinear interpolation", "\n", "Xratio", "=", "tf", ".", "reshape", "(", "Xwarp", "-", "Xfloor", ",", "[", "opt", ".", "batchSize", ",", "opt", ".", "H", ",", "opt", ".", "W", ",", "1", "]", ")", "\n", "Yratio", "=", "tf", ".", "reshape", "(", "Ywarp", "-", "Yfloor", ",", "[", "opt", ".", "batchSize", ",", "opt", ".", "H", ",", "opt", ".", "W", ",", "1", "]", ")", "\n", "imageUL", "=", "tf", ".", "to_float", "(", "tf", ".", "gather", "(", "imageVecOut", ",", "idxUL", ")", ")", "*", "(", "1", "-", "Xratio", ")", "*", "(", "1", "-", "Yratio", ")", "\n", "imageUR", "=", "tf", ".", "to_float", "(", "tf", ".", "gather", "(", "imageVecOut", ",", "idxUR", ")", ")", "*", "(", "Xratio", ")", "*", "(", "1", "-", "Yratio", ")", "\n", "imageBL", "=", "tf", ".", "to_float", "(", "tf", ".", "gather", "(", "imageVecOut", ",", "idxBL", ")", ")", "*", "(", "1", "-", "Xratio", ")", "*", "(", "Yratio", ")", "\n", "imageBR", "=", "tf", ".", "to_float", "(", "tf", ".", "gather", "(", "imageVecOut", ",", "idxBR", ")", ")", "*", "(", "Xratio", ")", "*", "(", "Yratio", ")", "\n", "imageWarp", "=", "imageUL", "+", "imageUR", "+", "imageBL", "+", "imageBR", "\n", "", "return", "imageWarp", "\n", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.util.mkdir": [[7, 9], ["os.path.exists", "os.mkdir"], "function", ["home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.mkdir"], ["def", "mkdir", "(", "path", ")", ":", "\n", "\t", "if", "not", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "os", ".", "mkdir", "(", "path", ")", "\n", "", "def", "imread", "(", "fname", ")", ":", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.util.imread": [[9, 11], ["scipy.misc.imread"], "function", ["home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.imread"], ["", "def", "imread", "(", "fname", ")", ":", "\n", "\t", "return", "scipy", ".", "misc", ".", "imread", "(", "fname", ")", "/", "255.0", "\n", "", "def", "imsave", "(", "fname", ",", "array", ")", ":", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.util.imsave": [[11, 13], ["scipy.misc.toimage().save", "scipy.misc.toimage"], "function", ["None"], ["", "def", "imsave", "(", "fname", ",", "array", ")", ":", "\n", "\t", "scipy", ".", "misc", ".", "toimage", "(", "array", ",", "cmin", "=", "0.0", ",", "cmax", "=", "1.0", ")", ".", "save", "(", "fname", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.util.toRed": [[15, 16], ["termcolor.colored"], "function", ["None"], ["", "def", "toRed", "(", "content", ")", ":", "return", "termcolor", ".", "colored", "(", "content", ",", "\"red\"", ",", "attrs", "=", "[", "\"bold\"", "]", ")", "\n", "def", "toGreen", "(", "content", ")", ":", "return", "termcolor", ".", "colored", "(", "content", ",", "\"green\"", ",", "attrs", "=", "[", "\"bold\"", "]", ")", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.util.toGreen": [[16, 17], ["termcolor.colored"], "function", ["None"], ["def", "toGreen", "(", "content", ")", ":", "return", "termcolor", ".", "colored", "(", "content", ",", "\"green\"", ",", "attrs", "=", "[", "\"bold\"", "]", ")", "\n", "def", "toBlue", "(", "content", ")", ":", "return", "termcolor", ".", "colored", "(", "content", ",", "\"blue\"", ",", "attrs", "=", "[", "\"bold\"", "]", ")", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.util.toBlue": [[17, 18], ["termcolor.colored"], "function", ["None"], ["def", "toBlue", "(", "content", ")", ":", "return", "termcolor", ".", "colored", "(", "content", ",", "\"blue\"", ",", "attrs", "=", "[", "\"bold\"", "]", ")", "\n", "def", "toCyan", "(", "content", ")", ":", "return", "termcolor", ".", "colored", "(", "content", ",", "\"cyan\"", ",", "attrs", "=", "[", "\"bold\"", "]", ")", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.util.toCyan": [[18, 19], ["termcolor.colored"], "function", ["None"], ["def", "toCyan", "(", "content", ")", ":", "return", "termcolor", ".", "colored", "(", "content", ",", "\"cyan\"", ",", "attrs", "=", "[", "\"bold\"", "]", ")", "\n", "def", "toYellow", "(", "content", ")", ":", "return", "termcolor", ".", "colored", "(", "content", ",", "\"yellow\"", ",", "attrs", "=", "[", "\"bold\"", "]", ")", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.util.toYellow": [[19, 20], ["termcolor.colored"], "function", ["None"], ["def", "toYellow", "(", "content", ")", ":", "return", "termcolor", ".", "colored", "(", "content", ",", "\"yellow\"", ",", "attrs", "=", "[", "\"bold\"", "]", ")", "\n", "def", "toMagenta", "(", "content", ")", ":", "return", "termcolor", ".", "colored", "(", "content", ",", "\"magenta\"", ",", "attrs", "=", "[", "\"bold\"", "]", ")", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.util.toMagenta": [[20, 21], ["termcolor.colored"], "function", ["None"], ["def", "toMagenta", "(", "content", ")", ":", "return", "termcolor", ".", "colored", "(", "content", ",", "\"magenta\"", ",", "attrs", "=", "[", "\"bold\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.util.imageSummary": [[23, 32], ["tensorflow.batch_to_space", "tensorflow.reshape", "tensorflow.transpose", "tensorflow.reshape", "tensorflow.cast", "tensorflow.summary.image"], "function", ["None"], ["def", "imageSummary", "(", "opt", ",", "image", ",", "tag", ",", "H", ",", "W", ")", ":", "\n", "\t", "blockSize", "=", "opt", ".", "visBlockSize", "\n", "imageOne", "=", "tf", ".", "batch_to_space", "(", "image", "[", ":", "blockSize", "**", "2", "]", ",", "crops", "=", "[", "[", "0", ",", "0", "]", ",", "[", "0", ",", "0", "]", "]", ",", "block_size", "=", "blockSize", ")", "\n", "imagePermute", "=", "tf", ".", "reshape", "(", "imageOne", ",", "[", "H", ",", "blockSize", ",", "W", ",", "blockSize", ",", "-", "1", "]", ")", "\n", "imageTransp", "=", "tf", ".", "transpose", "(", "imagePermute", ",", "[", "1", ",", "0", ",", "3", ",", "2", ",", "4", "]", ")", "\n", "imageBlocks", "=", "tf", ".", "reshape", "(", "imageTransp", ",", "[", "1", ",", "H", "*", "blockSize", ",", "W", "*", "blockSize", ",", "-", "1", "]", ")", "\n", "imageBlocks", "=", "tf", ".", "cast", "(", "imageBlocks", "*", "255", ",", "tf", ".", "uint8", ")", "\n", "summary", "=", "tf", ".", "summary", ".", "image", "(", "tag", ",", "imageBlocks", ")", "\n", "return", "summary", "\n", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.util.imageSummaryMeanVar": [[34, 42], ["tensorflow.batch_to_space_nd", "tensorflow.reshape", "tensorflow.transpose", "tensorflow.reshape", "tensorflow.cast", "tensorflow.summary.image"], "function", ["None"], ["", "def", "imageSummaryMeanVar", "(", "opt", ",", "image", ",", "tag", ",", "H", ",", "W", ")", ":", "\n", "\t", "image", "=", "tf", ".", "concat", "(", "[", "image", ",", "np", ".", "zeros", "(", "[", "2", ",", "H", ",", "W", ",", "3", "]", ")", "]", ",", "axis", "=", "0", ")", "\n", "imageOne", "=", "tf", ".", "batch_to_space_nd", "(", "image", ",", "crops", "=", "[", "[", "0", ",", "0", "]", ",", "[", "0", ",", "0", "]", "]", ",", "block_shape", "=", "[", "5", ",", "9", "]", ")", "\n", "imagePermute", "=", "tf", ".", "reshape", "(", "imageOne", ",", "[", "H", ",", "5", ",", "W", ",", "9", ",", "-", "1", "]", ")", "\n", "imageTransp", "=", "tf", ".", "transpose", "(", "imagePermute", ",", "[", "1", ",", "0", ",", "3", ",", "2", ",", "4", "]", ")", "\n", "imageBlocks", "=", "tf", ".", "reshape", "(", "imageTransp", ",", "[", "1", ",", "H", "*", "5", ",", "W", "*", "9", ",", "-", "1", "]", ")", "\n", "# imageBlocks = tf.cast(imageBlocks*255,tf.uint8)", "\n", "summary", "=", "tf", ".", "summary", ".", "image", "(", "tag", ",", "imageBlocks", ")", "\n", "return", "summary", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.util.setOptimizer": [[44, 56], ["tensorflow.gradients", "tensorflow.train.GradientDescentOptimizer().apply_gradients", "zip", "len", "tensorflow.gradients", "tensorflow.train.GradientDescentOptimizer().apply_gradients", "tensorflow.group", "tensorflow.global_variables", "tensorflow.global_variables", "tensorflow.train.GradientDescentOptimizer", "zip", "tensorflow.train.GradientDescentOptimizer"], "function", ["None"], ["# set optimizer for different learning rates", "\n", "", "def", "setOptimizer", "(", "opt", ",", "loss", ",", "lrGP", ",", "lrC", ")", ":", "\n", "\t", "varsGP", "=", "[", "v", "for", "v", "in", "tf", ".", "global_variables", "(", ")", "if", "\"geometric\"", "in", "v", ".", "name", "]", "\n", "varsC", "=", "[", "v", "for", "v", "in", "tf", ".", "global_variables", "(", ")", "if", "\"classifier\"", "in", "v", ".", "name", "]", "\n", "gradC", "=", "tf", ".", "gradients", "(", "loss", ",", "varsC", ")", "\n", "optimC", "=", "tf", ".", "train", ".", "GradientDescentOptimizer", "(", "lrC", ")", ".", "apply_gradients", "(", "zip", "(", "gradC", ",", "varsC", ")", ")", "\n", "if", "len", "(", "varsGP", ")", ">", "0", ":", "\n", "\t\t", "gradGP", "=", "tf", ".", "gradients", "(", "loss", ",", "varsGP", ")", "\n", "optimGP", "=", "tf", ".", "train", ".", "GradientDescentOptimizer", "(", "lrGP", ")", ".", "apply_gradients", "(", "zip", "(", "gradGP", ",", "varsGP", ")", ")", "\n", "optim", "=", "tf", ".", "group", "(", "optimC", ",", "optimGP", ")", "\n", "", "else", ":", "\n", "\t\t", "optim", "=", "optimC", "\n", "", "return", "optim", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.util.restoreModel": [[58, 60], ["saver.restore"], "function", ["None"], ["# restore model", "\n", "", "def", "restoreModel", "(", "opt", ",", "sess", ",", "saver", ",", "it", ")", ":", "\n", "\t", "saver", ".", "restore", "(", "sess", ",", "\"models_{0}/{1}_it{2}.ckpt\"", ".", "format", "(", "opt", ".", "group", ",", "opt", ".", "model", ",", "it", ",", "opt", ".", "warpN", ")", ")", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-tensorflow.util.saveModel": [[61, 63], ["saver.save"], "function", ["None"], ["# save model", "\n", "", "def", "saveModel", "(", "opt", ",", "sess", ",", "saver", ",", "it", ")", ":", "\n", "\t", "saver", ".", "save", "(", "sess", ",", "\"models_{0}/{1}_it{2}.ckpt\"", ".", "format", "(", "opt", ".", "group", ",", "opt", ".", "model", ",", "it", ",", "opt", ".", "warpN", ")", ")", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.options.set": [[7, 81], ["argparse.ArgumentParser", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.parse_args", "torch.cuda.is_available", "torch.set_default_tensor_type", "int", "numpy.array", "numpy.array", "numpy.eye().astype", "print", "print", "print", "print", "print", "print", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "argparse.ArgumentParser.add_argument", "int", "numpy.floor", "print", "print", "print", "parser.parse_args.size.split", "numpy.sqrt", "numpy.eye", "util.toGreen", "util.toGreen", "util.toYellow", "util.toYellow", "util.toYellow", "util.toYellow", "util.toYellow", "util.toYellow", "util.toYellow", "util.toMagenta", "util.toYellow", "util.toYellow", "util.toYellow", "util.toYellow"], "function", ["home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toGreen", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toGreen", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toYellow", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toYellow", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toYellow", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toYellow", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toYellow", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toYellow", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toYellow", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toMagenta", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toYellow", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toYellow", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toYellow", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toYellow"], ["\n", "# parse input arguments", "\n", "\t", "parser", "=", "argparse", ".", "ArgumentParser", "(", ")", "\n", "parser", ".", "add_argument", "(", "\"netType\"", ",", "choices", "=", "[", "\"CNN\"", ",", "\"STN\"", ",", "\"IC-STN\"", "]", ",", "help", "=", "\"type of network\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--group\"", ",", "default", "=", "\"0\"", ",", "help", "=", "\"name for group\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--model\"", ",", "default", "=", "\"test\"", ",", "help", "=", "\"name for model instance\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--size\"", ",", "default", "=", "\"36x36\"", ",", "help", "=", "\"image resolution\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--sizeFull\"", ",", "default", "=", "\"50x50\"", ",", "help", "=", "\"full image resolution\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--warpType\"", ",", "default", "=", "\"homography\"", ",", "help", "=", "\"type of warp function on images\"", ",", "\n", "choices", "=", "[", "\"translation\"", ",", "\"similarity\"", ",", "\"affine\"", ",", "\"homography\"", "]", ")", "\n", "parser", ".", "add_argument", "(", "\"--warpN\"", ",", "type", "=", "int", ",", "default", "=", "4", ",", "help", "=", "\"number of recurrent transformations (for IC-STN)\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--stdC\"", ",", "type", "=", "float", ",", "default", "=", "0.01", ",", "help", "=", "\"initialization stddev (classification network)\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--stdGP\"", ",", "type", "=", "float", ",", "default", "=", "0.001", ",", "help", "=", "\"initialization stddev (geometric predictor)\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--pertScale\"", ",", "type", "=", "float", ",", "default", "=", "0.25", ",", "help", "=", "\"initial perturbation scale\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--transScale\"", ",", "type", "=", "float", ",", "default", "=", "0.25", ",", "help", "=", "\"initial translation scale\"", ")", "\n", "if", "training", ":", "# training", "\n", "\t\t", "parser", ".", "add_argument", "(", "\"--batchSize\"", ",", "type", "=", "int", ",", "default", "=", "100", ",", "help", "=", "\"batch size for SGD\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--lrC\"", ",", "type", "=", "float", ",", "default", "=", "1e-2", ",", "help", "=", "\"learning rate (classification network)\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--lrCdecay\"", ",", "type", "=", "float", ",", "default", "=", "0.1", ",", "help", "=", "\"learning rate decay (classification network)\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--lrCstep\"", ",", "type", "=", "int", ",", "default", "=", "500000", ",", "help", "=", "\"learning rate decay step size (classification network)\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--lrGP\"", ",", "type", "=", "float", ",", "default", "=", "None", ",", "help", "=", "\"learning rate (geometric predictor)\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--lrGPdecay\"", ",", "type", "=", "float", ",", "default", "=", "0.1", ",", "help", "=", "\"learning rate decay (geometric predictor)\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--lrGPstep\"", ",", "type", "=", "int", ",", "default", "=", "500000", ",", "help", "=", "\"learning rate decay step size (geometric predictor)\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--fromIt\"", ",", "type", "=", "int", ",", "default", "=", "0", ",", "help", "=", "\"resume training from iteration number\"", ")", "\n", "parser", ".", "add_argument", "(", "\"--toIt\"", ",", "type", "=", "int", ",", "default", "=", "1000000", ",", "help", "=", "\"run training to iteration number\"", ")", "\n", "", "else", ":", "# evaluation", "\n", "\t\t", "parser", ".", "add_argument", "(", "\"--batchSize\"", ",", "type", "=", "int", ",", "default", "=", "1", ",", "help", "=", "\"batch size for evaluation\"", ")", "\n", "", "opt", "=", "parser", ".", "parse_args", "(", ")", "\n", "\n", "if", "opt", ".", "lrGP", "is", "None", ":", "opt", ".", "lrGP", "=", "0", "if", "opt", ".", "netType", "==", "\"CNN\"", "else", "1e-3", "if", "opt", ".", "netType", "==", "\"STN\"", "else", "3e-5", "if", "opt", ".", "netType", "==", "\"IC-STN\"", "else", "None", "\n", "\n", "# --- below are automatically set ---", "\n", "opt", ".", "training", "=", "training", "\n", "opt", ".", "H", ",", "opt", ".", "W", "=", "[", "int", "(", "x", ")", "for", "x", "in", "opt", ".", "size", ".", "split", "(", "\"x\"", ")", "]", "\n", "opt", ".", "fullH", ",", "opt", ".", "fullW", "=", "[", "int", "(", "x", ")", "for", "x", "in", "opt", ".", "sizeFull", ".", "split", "(", "\"x\"", ")", "]", "\n", "opt", ".", "visBlockSize", "=", "int", "(", "np", ".", "floor", "(", "np", ".", "sqrt", "(", "opt", ".", "batchSize", ")", ")", ")", "\n", "opt", ".", "warpDim", "=", "2", "if", "opt", ".", "warpType", "==", "\"translation\"", "else", "4", "if", "opt", ".", "warpType", "==", "\"similarity\"", "else", "6", "if", "opt", ".", "warpType", "==", "\"affine\"", "else", "8", "if", "opt", ".", "warpType", "==", "\"homography\"", "else", "None", "\n", "opt", ".", "labelN", "=", "43", "\n", "opt", ".", "canon4pts", "=", "np", ".", "array", "(", "[", "[", "-", "1", ",", "-", "1", "]", ",", "[", "-", "1", ",", "1", "]", ",", "[", "1", ",", "1", "]", ",", "[", "1", ",", "-", "1", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "opt", ".", "image4pts", "=", "np", ".", "array", "(", "[", "[", "0", ",", "0", "]", ",", "[", "0", ",", "opt", ".", "H", "-", "1", "]", ",", "[", "opt", ".", "W", "-", "1", ",", "opt", ".", "H", "-", "1", "]", ",", "[", "opt", ".", "W", "-", "1", ",", "0", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "opt", ".", "bbox", "=", "[", "int", "(", "opt", ".", "fullW", "/", "2", "-", "opt", ".", "W", "/", "2", ")", ",", "int", "(", "opt", ".", "fullH", "/", "2", "-", "opt", ".", "H", "/", "2", ")", ",", "int", "(", "opt", ".", "fullW", "/", "2", "+", "opt", ".", "W", "/", "2", ")", ",", "int", "(", "opt", ".", "fullH", "/", "2", "+", "opt", ".", "H", "/", "2", ")", "]", "\n", "opt", ".", "bbox4pts", "=", "np", ".", "array", "(", "[", "[", "opt", ".", "bbox", "[", "0", "]", ",", "opt", ".", "bbox", "[", "1", "]", "]", ",", "[", "opt", ".", "bbox", "[", "0", "]", ",", "opt", ".", "bbox", "[", "3", "]", "]", ",", "\n", "[", "opt", ".", "bbox", "[", "2", "]", ",", "opt", ".", "bbox", "[", "3", "]", "]", ",", "[", "opt", ".", "bbox", "[", "2", "]", ",", "opt", ".", "bbox", "[", "1", "]", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "opt", ".", "refMtrx", "=", "warp", ".", "fit", "(", "Xsrc", "=", "opt", ".", "canon4pts", ",", "Xdst", "=", "opt", ".", "image4pts", ")", "\n", "opt", ".", "bboxRefMtrx", "=", "warp", ".", "fit", "(", "Xsrc", "=", "opt", ".", "canon4pts", ",", "Xdst", "=", "opt", ".", "bbox4pts", ")", "\n", "if", "opt", ".", "netType", "==", "\"STN\"", ":", "opt", ".", "warpN", "=", "1", "\n", "\n", "print", "(", "\"({0}) {1}\"", ".", "format", "(", "\n", "util", ".", "toGreen", "(", "\"{0}\"", ".", "format", "(", "opt", ".", "group", ")", ")", ",", "\n", "util", ".", "toGreen", "(", "\"{0}\"", ".", "format", "(", "opt", ".", "model", ")", ")", ")", ")", "\n", "print", "(", "\"------------------------------------------\"", ")", "\n", "print", "(", "\"network type: {0}, recurrent warps: {1}\"", ".", "format", "(", "\n", "util", ".", "toYellow", "(", "\"{0}\"", ".", "format", "(", "opt", ".", "netType", ")", ")", ",", "\n", "util", ".", "toYellow", "(", "\"{0}\"", ".", "format", "(", "opt", ".", "warpN", "if", "opt", ".", "netType", "==", "\"IC-STN\"", "else", "\"X\"", ")", ")", ")", ")", "\n", "print", "(", "\"batch size: {0}, image size: {1}x{2}\"", ".", "format", "(", "\n", "util", ".", "toYellow", "(", "\"{0}\"", ".", "format", "(", "opt", ".", "batchSize", ")", ")", ",", "\n", "util", ".", "toYellow", "(", "\"{0}\"", ".", "format", "(", "opt", ".", "H", ")", ")", ",", "\n", "util", ".", "toYellow", "(", "\"{0}\"", ".", "format", "(", "opt", ".", "W", ")", ")", ")", ")", "\n", "print", "(", "\"warpScale: (pert) {0} (trans) {1}\"", ".", "format", "(", "\n", "util", ".", "toYellow", "(", "\"{0}\"", ".", "format", "(", "opt", ".", "pertScale", ")", ")", ",", "\n", "util", ".", "toYellow", "(", "\"{0}\"", ".", "format", "(", "opt", ".", "transScale", ")", ")", ")", ")", "\n", "if", "training", ":", "\n", "\t\t", "print", "(", "\"[geometric predictor]    stddev={0}, lr={1}\"", ".", "format", "(", "\n", "util", ".", "toYellow", "(", "\"{0:.0e}\"", ".", "format", "(", "opt", ".", "stdGP", ")", ")", ",", "\n", "util", ".", "toYellow", "(", "\"{0:.0e}\"", ".", "format", "(", "opt", ".", "lrGP", ")", ")", ")", ")", "\n", "print", "(", "\"[classification network] stddev={0}, lr={1}\"", ".", "format", "(", "\n", "util", ".", "toYellow", "(", "\"{0:.0e}\"", ".", "format", "(", "opt", ".", "stdC", ")", ")", ",", "\n", "util", ".", "toYellow", "(", "\"{0:.0e}\"", ".", "format", "(", "opt", ".", "lrC", ")", ")", ")", ")", "\n", "", "print", "(", "\"------------------------------------------\"", ")", "\n", "if", "training", ":", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.graph.FullCNN.__init__": [[8, 32], ["super().__init__", "torch.nn.Sequential", "torch.nn.Sequential", "graph.initialize", "torch.nn.Conv2d", "torch.nn.Linear", "torch.nn.MaxPool2d", "graph.FullCNN.__init__.conv2Layer"], "methods", ["home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.Visdom.__init__", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.graph.initialize"], ["\t", "def", "conv2Layer", "(", "opt", ",", "feat", ",", "outDim", ")", ":", "\n", "\t\t", "weight", ",", "bias", "=", "createVariable", "(", "opt", ",", "[", "7", ",", "7", ",", "int", "(", "feat", ".", "shape", "[", "-", "1", "]", ")", ",", "outDim", "]", ",", "stddev", "=", "opt", ".", "stdC", ")", "\n", "conv", "=", "tf", ".", "nn", ".", "conv2d", "(", "feat", ",", "weight", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "\"VALID\"", ")", "+", "bias", "\n", "return", "conv", "\n", "", "def", "linearLayer", "(", "opt", ",", "feat", ",", "outDim", ")", ":", "\n", "\t\t", "weight", ",", "bias", "=", "createVariable", "(", "opt", ",", "[", "int", "(", "feat", ".", "shape", "[", "-", "1", "]", ")", ",", "outDim", "]", ",", "stddev", "=", "opt", ".", "stdC", ")", "\n", "fc", "=", "tf", ".", "matmul", "(", "feat", ",", "weight", ")", "+", "bias", "\n", "return", "fc", "\n", "", "with", "tf", ".", "variable_scope", "(", "\"classifier\"", ")", ":", "\n", "\t\t", "feat", "=", "image", "\n", "with", "tf", ".", "variable_scope", "(", "\"conv1\"", ")", ":", "\n", "\t\t\t", "feat", "=", "conv2Layer", "(", "opt", ",", "feat", ",", "6", ")", "\n", "feat", "=", "tf", ".", "nn", ".", "relu", "(", "feat", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "\"conv2\"", ")", ":", "\n", "\t\t\t", "feat", "=", "conv2Layer", "(", "opt", ",", "feat", ",", "12", ")", "\n", "feat", "=", "tf", ".", "nn", ".", "relu", "(", "feat", ")", "\n", "feat", "=", "tf", ".", "nn", ".", "max_pool", "(", "feat", ",", "ksize", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "strides", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "padding", "=", "\"VALID\"", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "\"conv3\"", ")", ":", "\n", "\t\t\t", "feat", "=", "conv2Layer", "(", "opt", ",", "feat", ",", "24", ")", "\n", "feat", "=", "tf", ".", "nn", ".", "relu", "(", "feat", ")", "\n", "", "feat", "=", "tf", ".", "reshape", "(", "feat", ",", "[", "opt", ".", "batchSize", ",", "-", "1", "]", ")", "\n", "with", "tf", ".", "variable_scope", "(", "\"fc4\"", ")", ":", "\n", "\t\t\t", "feat", "=", "linearLayer", "(", "opt", ",", "feat", ",", "200", ")", "\n", "feat", "=", "tf", ".", "nn", ".", "relu", "(", "feat", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "\"fc5\"", ")", ":", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.graph.FullCNN.forward": [[32, 38], ["graph.FullCNN.conv2Layers().reshape", "graph.FullCNN.linearLayers", "graph.FullCNN.conv2Layers"], "methods", ["None"], ["", "with", "tf", ".", "variable_scope", "(", "\"fc5\"", ")", ":", "\n", "\t\t\t", "feat", "=", "linearLayer", "(", "opt", ",", "feat", ",", "opt", ".", "labelN", ")", "\n", "", "output", "=", "feat", "\n", "", "return", "output", "\n", "\n", "# build classification network", "\n", "", "def", "CNN", "(", "opt", ",", "image", ")", ":", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.graph.CNN.__init__": [[41, 61], ["super().__init__", "torch.nn.Sequential", "torch.nn.Sequential", "graph.initialize", "torch.nn.Conv2d", "torch.nn.Linear", "torch.nn.MaxPool2d", "graph.CNN.__init__.conv2Layer"], "methods", ["home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.Visdom.__init__", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.graph.initialize"], ["conv", "=", "tf", ".", "nn", ".", "conv2d", "(", "feat", ",", "weight", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "\"VALID\"", ")", "+", "bias", "\n", "return", "conv", "\n", "", "def", "linearLayer", "(", "opt", ",", "feat", ",", "outDim", ")", ":", "\n", "\t\t", "weight", ",", "bias", "=", "createVariable", "(", "opt", ",", "[", "int", "(", "feat", ".", "shape", "[", "-", "1", "]", ")", ",", "outDim", "]", ",", "stddev", "=", "opt", ".", "stdC", ")", "\n", "fc", "=", "tf", ".", "matmul", "(", "feat", ",", "weight", ")", "+", "bias", "\n", "return", "fc", "\n", "", "with", "tf", ".", "variable_scope", "(", "\"classifier\"", ")", ":", "\n", "\t\t", "feat", "=", "image", "\n", "with", "tf", ".", "variable_scope", "(", "\"conv1\"", ")", ":", "\n", "\t\t\t", "feat", "=", "conv2Layer", "(", "opt", ",", "feat", ",", "6", ")", "\n", "feat", "=", "tf", ".", "nn", ".", "relu", "(", "feat", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "\"conv2\"", ")", ":", "\n", "\t\t\t", "feat", "=", "conv2Layer", "(", "opt", ",", "feat", ",", "12", ")", "\n", "feat", "=", "tf", ".", "nn", ".", "relu", "(", "feat", ")", "\n", "feat", "=", "tf", ".", "nn", ".", "max_pool", "(", "feat", ",", "ksize", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "strides", "=", "[", "1", ",", "2", ",", "2", ",", "1", "]", ",", "padding", "=", "\"VALID\"", ")", "\n", "", "feat", "=", "tf", ".", "reshape", "(", "feat", ",", "[", "opt", ".", "batchSize", ",", "-", "1", "]", ")", "\n", "with", "tf", ".", "variable_scope", "(", "\"fc3\"", ")", ":", "\n", "\t\t\t", "feat", "=", "linearLayer", "(", "opt", ",", "feat", ",", "opt", ".", "labelN", ")", "\n", "", "output", "=", "feat", "\n", "", "return", "output", "\n", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.graph.CNN.forward": [[61, 67], ["graph.CNN.conv2Layers().reshape", "graph.CNN.linearLayers", "graph.CNN.conv2Layers"], "methods", ["None"], ["\n", "# build Spatial Transformer Network", "\n", "", "def", "STN", "(", "opt", ",", "image", ")", ":", "\n", "\t", "def", "conv2Layer", "(", "opt", ",", "feat", ",", "outDim", ")", ":", "\n", "\t\t", "weight", ",", "bias", "=", "createVariable", "(", "opt", ",", "[", "7", ",", "7", ",", "int", "(", "feat", ".", "shape", "[", "-", "1", "]", ")", ",", "outDim", "]", ",", "stddev", "=", "opt", ".", "stdGP", ")", "\n", "conv", "=", "tf", ".", "nn", ".", "conv2d", "(", "feat", ",", "weight", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "\"VALID\"", ")", "+", "bias", "\n", "return", "conv", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.graph.Identity.__init__": [[70, 71], ["super().__init__"], "methods", ["home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.Visdom.__init__"], ["fc", "=", "tf", ".", "matmul", "(", "feat", ",", "weight", ")", "+", "bias", "\n", "return", "fc", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.graph.Identity.forward": [[71, 72], ["None"], "methods", ["None"], ["return", "fc", "\n", "", "imageWarpAll", "=", "[", "image", "]", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.graph.STN.__init__": [[75, 97], ["super().__init__", "torch.nn.Sequential", "torch.nn.Sequential", "graph.initialize", "torch.nn.Conv2d", "torch.nn.Linear", "torch.nn.MaxPool2d", "graph.STN.__init__.conv2Layer"], "methods", ["home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.Visdom.__init__", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.graph.initialize"], ["with", "tf", ".", "variable_scope", "(", "\"conv1\"", ")", ":", "\n", "\t\t\t", "feat", "=", "conv2Layer", "(", "opt", ",", "feat", ",", "6", ")", "\n", "feat", "=", "tf", ".", "nn", ".", "relu", "(", "feat", ")", "\n", "", "with", "tf", ".", "variable_scope", "(", "\"conv2\"", ")", ":", "\n", "\t\t\t", "feat", "=", "conv2Layer", "(", "opt", ",", "feat", ",", "24", ")", "\n", "feat", "=", "tf", ".", "nn", ".", "relu", "(", "feat", ")", "\n", "", "feat", "=", "tf", ".", "reshape", "(", "feat", ",", "[", "opt", ".", "batchSize", ",", "-", "1", "]", ")", "\n", "with", "tf", ".", "variable_scope", "(", "\"fc3\"", ")", ":", "\n", "\t\t\t", "feat", "=", "linearLayer", "(", "opt", ",", "feat", ",", "opt", ".", "warpDim", ")", "\n", "", "p", "=", "feat", "\n", "", "pMtrx", "=", "warp", ".", "vec2mtrx", "(", "opt", ",", "p", ")", "\n", "imageWarp", "=", "warp", ".", "transformImage", "(", "opt", ",", "image", ",", "pMtrx", ")", "\n", "imageWarpAll", ".", "append", "(", "imageWarp", ")", "\n", "return", "imageWarpAll", "\n", "\n", "# build Inverse Compositional STN", "\n", "", "def", "ICSTN", "(", "opt", ",", "imageFull", ",", "p", ")", ":", "\n", "\t", "def", "conv2Layer", "(", "opt", ",", "feat", ",", "outDim", ")", ":", "\n", "\t\t", "weight", ",", "bias", "=", "createVariable", "(", "opt", ",", "[", "7", ",", "7", ",", "int", "(", "feat", ".", "shape", "[", "-", "1", "]", ")", ",", "outDim", "]", ",", "stddev", "=", "opt", ".", "stdGP", ")", "\n", "conv", "=", "tf", ".", "nn", ".", "conv2d", "(", "feat", ",", "weight", ",", "strides", "=", "[", "1", ",", "1", ",", "1", ",", "1", "]", ",", "padding", "=", "\"VALID\"", ")", "+", "bias", "\n", "return", "conv", "\n", "", "def", "linearLayer", "(", "opt", ",", "feat", ",", "outDim", ")", ":", "\n", "\t\t", "weight", ",", "bias", "=", "createVariable", "(", "opt", ",", "[", "int", "(", "feat", ".", "shape", "[", "-", "1", "]", ")", ",", "outDim", "]", ",", "stddev", "=", "opt", ".", "stdGP", ")", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.graph.STN.forward": [[97, 107], ["graph.STN.conv2Layers().reshape", "graph.STN.linearLayers", "warp.vec2mtrx", "warp.transformImage", "imageWarpAll.append", "graph.STN.conv2Layers"], "methods", ["home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.vec2mtrx", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.transformImage"], ["\t\t", "weight", ",", "bias", "=", "createVariable", "(", "opt", ",", "[", "int", "(", "feat", ".", "shape", "[", "-", "1", "]", ")", ",", "outDim", "]", ",", "stddev", "=", "opt", ".", "stdGP", ")", "\n", "fc", "=", "tf", ".", "matmul", "(", "feat", ",", "weight", ")", "+", "bias", "\n", "return", "fc", "\n", "", "imageWarpAll", "=", "[", "]", "\n", "for", "l", "in", "range", "(", "opt", ".", "warpN", ")", ":", "\n", "\t\t", "with", "tf", ".", "variable_scope", "(", "\"geometric\"", ",", "reuse", "=", "l", ">", "0", ")", ":", "\n", "\t\t\t", "pMtrx", "=", "warp", ".", "vec2mtrx", "(", "opt", ",", "p", ")", "\n", "imageWarp", "=", "warp", ".", "transformCropImage", "(", "opt", ",", "imageFull", ",", "pMtrx", ")", "\n", "imageWarpAll", ".", "append", "(", "imageWarp", ")", "\n", "feat", "=", "imageWarp", "\n", "with", "tf", ".", "variable_scope", "(", "\"conv1\"", ")", ":", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.graph.ICSTN.__init__": [[110, 132], ["super().__init__", "torch.nn.Sequential", "torch.nn.Sequential", "graph.initialize", "torch.nn.Conv2d", "torch.nn.Linear", "torch.nn.MaxPool2d", "graph.ICSTN.__init__.conv2Layer"], "methods", ["home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.Visdom.__init__", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.graph.initialize"], ["", "with", "tf", ".", "variable_scope", "(", "\"conv2\"", ")", ":", "\n", "\t\t\t\t", "feat", "=", "conv2Layer", "(", "opt", ",", "feat", ",", "24", ")", "\n", "feat", "=", "tf", ".", "nn", ".", "relu", "(", "feat", ")", "\n", "", "feat", "=", "tf", ".", "reshape", "(", "feat", ",", "[", "opt", ".", "batchSize", ",", "-", "1", "]", ")", "\n", "with", "tf", ".", "variable_scope", "(", "\"fc3\"", ")", ":", "\n", "\t\t\t\t", "feat", "=", "linearLayer", "(", "opt", ",", "feat", ",", "opt", ".", "warpDim", ")", "\n", "", "dp", "=", "feat", "\n", "", "p", "=", "warp", ".", "compose", "(", "opt", ",", "p", ",", "dp", ")", "\n", "", "pMtrx", "=", "warp", ".", "vec2mtrx", "(", "opt", ",", "p", ")", "\n", "imageWarp", "=", "warp", ".", "transformCropImage", "(", "opt", ",", "imageFull", ",", "pMtrx", ")", "\n", "imageWarpAll", ".", "append", "(", "imageWarp", ")", "\n", "return", "imageWarpAll", "\n", "\n", "# auxiliary function for creating weight and bias", "\n", "", "def", "createVariable", "(", "opt", ",", "weightShape", ",", "biasShape", "=", "None", ",", "stddev", "=", "None", ")", ":", "\n", "\t", "if", "biasShape", "is", "None", ":", "biasShape", "=", "[", "weightShape", "[", "-", "1", "]", "]", "\n", "weight", "=", "tf", ".", "get_variable", "(", "\"weight\"", ",", "shape", "=", "weightShape", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "stddev", "=", "stddev", ")", ")", "\n", "bias", "=", "tf", ".", "get_variable", "(", "\"bias\"", ",", "shape", "=", "biasShape", ",", "dtype", "=", "tf", ".", "float32", ",", "\n", "initializer", "=", "tf", ".", "random_normal_initializer", "(", "stddev", "=", "stddev", ")", ")", "\n", "return", "weight", ",", "bias", "\n", "", ""]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.graph.ICSTN.forward": [[132, 147], ["range", "warp.vec2mtrx", "warp.transformImage", "imageWarpAll.append", "warp.vec2mtrx", "warp.transformImage", "imageWarpAll.append", "graph.ICSTN.conv2Layers().reshape", "graph.ICSTN.linearLayers", "warp.compose", "graph.ICSTN.conv2Layers"], "methods", ["home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.vec2mtrx", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.transformImage", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.vec2mtrx", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.transformImage", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.compose"], []], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.graph.initialize": [[149, 162], ["isinstance", "isinstance", "m.weight.data.normal_", "m.bias.data.normal_", "m.weight.data.zero_", "m.bias.data.zero_", "m.weight.data.normal_", "m.bias.data.normal_"], "function", ["None"], []], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.data.loadMNIST": [[10, 20], ["os.makedirs", "torchvision.datasets.MNIST", "torchvision.datasets.MNIST", "torch.tensor", "torch.tensor", "torch.tensor", "torch.tensor", "numpy.array", "numpy.array"], "function", ["None"], ["# load GTSRB data", "\n", "def", "loadGTSRB", "(", "opt", ",", "fname", ")", ":", "\n", "\t", "if", "not", "os", ".", "path", ".", "exists", "(", "fname", ")", ":", "\n", "# download and preprocess GTSRB dataset", "\n", "\t\t", "os", ".", "makedirs", "(", "os", ".", "path", ".", "dirname", "(", "fname", ")", ")", "\n", "os", ".", "system", "(", "\"wget -O data/GTSRB_Final_Training_Images.zip http://benchmark.ini.rub.de/Dataset/GTSRB_Final_Training_Images.zip\"", ")", "\n", "os", ".", "system", "(", "\"wget -O data/GTSRB_Final_Test_Images.zip http://benchmark.ini.rub.de/Dataset/GTSRB_Final_Test_Images.zip\"", ")", "\n", "os", ".", "system", "(", "\"wget -O data/GTSRB_Final_Test_GT.zip http://benchmark.ini.rub.de/Dataset/GTSRB_Final_Test_GT.zip\"", ")", "\n", "os", ".", "system", "(", "\"cd data && unzip GTSRB_Final_Training_Images.zip\"", ")", "\n", "os", ".", "system", "(", "\"cd data && unzip GTSRB_Final_Test_Images.zip\"", ")", "\n", "os", ".", "system", "(", "\"cd data && unzip GTSRB_Final_Test_GT.zip\"", ")", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.data.genPerturbations": [[22, 54], ["numpy.tile", "numpy.tile", "numpy.zeros", "numpy.ones", "torch.from_numpy().cuda", "dX.astype", "dY.astype", "numpy.concatenate", "numpy.expand_dims", "numpy.matmul().squeeze", "numpy.array", "numpy.expand_dims", "numpy.transpose", "numpy.matmul().squeeze", "numpy.random.randn", "numpy.random.randn", "numpy.random.randn", "numpy.random.randn", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "numpy.concatenate", "torch.from_numpy", "numpy.stack", "numpy.stack", "numpy.matmul", "numpy.matmul", "numpy.linalg.inv", "numpy.stack", "numpy.stack", "numpy.stack", "numpy.stack", "numpy.stack", "numpy.stack", "numpy.linalg.inv", "numpy.matmul", "numpy.matmul"], "function", ["None"], ["print", "(", "\"preparing training data...\"", ")", "\n", "images", ",", "bboxes", ",", "labels", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "for", "c", "in", "range", "(", "43", ")", ":", "\n", "\t\t\t", "prefix", "=", "\"data/GTSRB/Final_Training/Images/{0:05d}\"", ".", "format", "(", "c", ")", "\n", "with", "open", "(", "\"{0}/GT-{1:05d}.csv\"", ".", "format", "(", "prefix", ",", "c", ")", ")", "as", "file", ":", "\n", "\t\t\t\t", "reader", "=", "csv", ".", "reader", "(", "file", ",", "delimiter", "=", "\";\"", ")", "\n", "next", "(", "reader", ")", "\n", "for", "line", "in", "reader", ":", "\n", "\t\t\t\t\t", "img", "=", "plt", ".", "imread", "(", "prefix", "+", "\"/\"", "+", "line", "[", "0", "]", ")", "\n", "rawH", ",", "rawW", "=", "img", ".", "shape", "[", "0", "]", ",", "img", ".", "shape", "[", "1", "]", "\n", "scaleH", ",", "scaleW", "=", "float", "(", "opt", ".", "fullH", ")", "/", "rawH", ",", "float", "(", "opt", ".", "fullW", ")", "/", "rawW", "\n", "imgResize", "=", "scipy", ".", "misc", ".", "imresize", "(", "img", ",", "(", "opt", ".", "fullH", ",", "opt", ".", "fullW", ",", "3", ")", ")", "\n", "images", ".", "append", "(", "imgResize", ")", "\n", "bboxes", ".", "append", "(", "[", "float", "(", "line", "[", "3", "]", ")", "*", "scaleW", ",", "float", "(", "line", "[", "4", "]", ")", "*", "scaleH", ",", "\n", "float", "(", "line", "[", "5", "]", ")", "*", "scaleW", ",", "float", "(", "line", "[", "6", "]", ")", "*", "scaleH", "]", ")", "\n", "labels", ".", "append", "(", "int", "(", "line", "[", "7", "]", ")", ")", "\n", "", "", "", "trainData", "=", "{", "\n", "\"image\"", ":", "np", ".", "array", "(", "images", ")", ",", "\n", "\"bbox\"", ":", "np", ".", "array", "(", "bboxes", ")", ",", "\n", "\"label\"", ":", "np", ".", "array", "(", "labels", ")", "\n", "}", "\n", "# test data", "\n", "print", "(", "\"preparing test data...\"", ")", "\n", "images", ",", "bboxes", ",", "labels", "=", "[", "]", ",", "[", "]", ",", "[", "]", "\n", "prefix", "=", "\"data/GTSRB/Final_Test/Images/\"", "\n", "with", "open", "(", "\"data/GT-final_test.csv\"", ")", "as", "file", ":", "\n", "\t\t\t", "reader", "=", "csv", ".", "reader", "(", "file", ",", "delimiter", "=", "\";\"", ")", "\n", "next", "(", "reader", ")", "\n", "for", "line", "in", "reader", ":", "\n", "\t\t\t\t", "img", "=", "plt", ".", "imread", "(", "prefix", "+", "\"/\"", "+", "line", "[", "0", "]", ")", "\n", "rawH", ",", "rawW", "=", "img", ".", "shape", "[", "0", "]", ",", "img", ".", "shape", "[", "1", "]", "\n", "scaleH", ",", "scaleW", "=", "float", "(", "opt", ".", "fullH", ")", "/", "rawH", ",", "float", "(", "opt", ".", "fullW", ")", "/", "rawW", "\n", "imgResize", "=", "scipy", ".", "misc", ".", "imresize", "(", "img", ",", "(", "opt", ".", "fullH", ",", "opt", ".", "fullW", ",", "3", ")", ")", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.data.makeBatch": [[56, 64], ["len", "numpy.random.randint", "[].cuda", "[].cuda"], "function", ["None"], ["bboxes", ".", "append", "(", "[", "float", "(", "line", "[", "3", "]", ")", "*", "scaleW", ",", "float", "(", "line", "[", "4", "]", ")", "*", "scaleH", ",", "\n", "float", "(", "line", "[", "5", "]", ")", "*", "scaleW", ",", "float", "(", "line", "[", "6", "]", ")", "*", "scaleH", "]", ")", "\n", "labels", ".", "append", "(", "int", "(", "line", "[", "7", "]", ")", ")", "\n", "", "", "testData", "=", "{", "\n", "\"image\"", ":", "np", ".", "array", "(", "images", ")", ",", "\n", "\"bbox\"", ":", "np", ".", "array", "(", "bboxes", ")", ",", "\n", "\"label\"", ":", "np", ".", "array", "(", "labels", ")", "\n", "}", "\n", "np", ".", "savez", "(", "fname", ",", "train", "=", "trainData", ",", "test", "=", "testData", ")", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.data.evalTest": [[66, 113], ["geometric.eval", "classifier.eval", "len", "int", "range", "geometric.train", "classifier.train", "numpy.ceil", "numpy.zeros", "[].cuda", "[].cuda", "[].cuda.data.unsqueeze_", "data.genPerturbations", "warp.vec2mtrx", "warp.transformImage", "classifier", "classifier.max", "int", "float", "numpy.arange", "numpy.arange", "geometric", "geometric", "warp.transformImage.detach().cpu().numpy", "imageWarp.detach().cpu().numpy", "range", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "len", "len", "[].item", "[].append", "[].append", "warp.transformImage.detach().cpu", "imageWarp.detach().cpu", "numpy.mean", "numpy.mean", "numpy.var", "numpy.var", "warp.transformImage.detach", "imageWarp.detach"], "function", ["home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.data.genPerturbations", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.vec2mtrx", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.transformImage"], ["", "GTSRB", "=", "np", ".", "load", "(", "fname", ")", "\n", "trainData", "=", "GTSRB", "[", "\"train\"", "]", ".", "item", "(", ")", "\n", "testData", "=", "GTSRB", "[", "\"test\"", "]", ".", "item", "(", ")", "\n", "return", "trainData", ",", "testData", "\n", "\n", "# generate training batch", "\n", "", "def", "genPerturbations", "(", "opt", ")", ":", "\n", "\t", "with", "tf", ".", "name_scope", "(", "\"genPerturbations\"", ")", ":", "\n", "\t\t", "X", "=", "np", ".", "tile", "(", "opt", ".", "canon4pts", "[", ":", ",", "0", "]", ",", "[", "opt", ".", "batchSize", ",", "1", "]", ")", "\n", "Y", "=", "np", ".", "tile", "(", "opt", ".", "canon4pts", "[", ":", ",", "1", "]", ",", "[", "opt", ".", "batchSize", ",", "1", "]", ")", "\n", "dX", "=", "tf", ".", "random_normal", "(", "[", "opt", ".", "batchSize", ",", "4", "]", ")", "*", "opt", ".", "pertScale", "+", "tf", ".", "random_normal", "(", "[", "opt", ".", "batchSize", ",", "1", "]", ")", "*", "opt", ".", "transScale", "\n", "dY", "=", "tf", ".", "random_normal", "(", "[", "opt", ".", "batchSize", ",", "4", "]", ")", "*", "opt", ".", "pertScale", "+", "tf", ".", "random_normal", "(", "[", "opt", ".", "batchSize", ",", "1", "]", ")", "*", "opt", ".", "transScale", "\n", "O", "=", "np", ".", "zeros", "(", "[", "opt", ".", "batchSize", ",", "4", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "I", "=", "np", ".", "ones", "(", "[", "opt", ".", "batchSize", ",", "4", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "# fit warp parameters to generated displacements", "\n", "if", "opt", ".", "warpType", "==", "\"homography\"", ":", "\n", "\t\t\t", "A", "=", "tf", ".", "concat", "(", "[", "tf", ".", "stack", "(", "[", "X", ",", "Y", ",", "I", ",", "O", ",", "O", ",", "O", ",", "-", "X", "*", "(", "X", "+", "dX", ")", ",", "-", "Y", "*", "(", "X", "+", "dX", ")", "]", ",", "axis", "=", "-", "1", ")", ",", "\n", "tf", ".", "stack", "(", "[", "O", ",", "O", ",", "O", ",", "X", ",", "Y", ",", "I", ",", "-", "X", "*", "(", "Y", "+", "dY", ")", ",", "-", "Y", "*", "(", "Y", "+", "dY", ")", "]", ",", "axis", "=", "-", "1", ")", "]", ",", "1", ")", "\n", "b", "=", "tf", ".", "expand_dims", "(", "tf", ".", "concat", "(", "[", "X", "+", "dX", ",", "Y", "+", "dY", "]", ",", "1", ")", ",", "-", "1", ")", "\n", "pPert", "=", "tf", ".", "matrix_solve", "(", "A", ",", "b", ")", "[", ":", ",", ":", ",", "0", "]", "\n", "pPert", "-=", "tf", ".", "to_float", "(", "[", "[", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", "]", "]", ")", "\n", "", "else", ":", "\n", "\t\t\t", "if", "opt", ".", "warpType", "==", "\"translation\"", ":", "\n", "\t\t\t\t", "J", "=", "np", ".", "concatenate", "(", "[", "np", ".", "stack", "(", "[", "I", ",", "O", "]", ",", "axis", "=", "-", "1", ")", ",", "\n", "np", ".", "stack", "(", "[", "O", ",", "I", "]", ",", "axis", "=", "-", "1", ")", "]", ",", "axis", "=", "1", ")", "\n", "", "if", "opt", ".", "warpType", "==", "\"similarity\"", ":", "\n", "\t\t\t\t", "J", "=", "np", ".", "concatenate", "(", "[", "np", ".", "stack", "(", "[", "X", ",", "Y", ",", "I", ",", "O", "]", ",", "axis", "=", "-", "1", ")", ",", "\n", "np", ".", "stack", "(", "[", "-", "Y", ",", "X", ",", "O", ",", "I", "]", ",", "axis", "=", "-", "1", ")", "]", ",", "axis", "=", "1", ")", "\n", "", "if", "opt", ".", "warpType", "==", "\"affine\"", ":", "\n", "\t\t\t\t", "J", "=", "np", ".", "concatenate", "(", "[", "np", ".", "stack", "(", "[", "X", ",", "Y", ",", "I", ",", "O", ",", "O", ",", "O", "]", ",", "axis", "=", "-", "1", ")", ",", "\n", "np", ".", "stack", "(", "[", "O", ",", "O", ",", "O", ",", "X", ",", "Y", ",", "I", "]", ",", "axis", "=", "-", "1", ")", "]", ",", "axis", "=", "1", ")", "\n", "", "dXY", "=", "tf", ".", "expand_dims", "(", "tf", ".", "concat", "(", "[", "dX", ",", "dY", "]", ",", "1", ")", ",", "-", "1", ")", "\n", "pPert", "=", "tf", ".", "matrix_solve_ls", "(", "J", ",", "dXY", ")", "[", ":", ",", ":", ",", "0", "]", "\n", "", "", "return", "pPert", "\n", "\n", "# make training batch", "\n", "", "def", "makeBatch", "(", "opt", ",", "data", ",", "PH", ")", ":", "\n", "\t", "N", "=", "len", "(", "data", "[", "\"image\"", "]", ")", "\n", "randIdx", "=", "np", ".", "random", ".", "randint", "(", "N", ",", "size", "=", "[", "opt", ".", "batchSize", "]", ")", "\n", "# put data in placeholders", "\n", "[", "image", ",", "label", "]", "=", "PH", "\n", "batch", "=", "{", "\n", "image", ":", "data", "[", "\"image\"", "]", "[", "randIdx", "]", "/", "255.0", ",", "\n", "label", ":", "data", "[", "\"label\"", "]", "[", "randIdx", "]", ",", "\n", "}", "\n", "return", "batch", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.fit": [[8, 17], ["len", "numpy.concatenate", "numpy.concatenate", "[].squeeze", "numpy.array", "numpy.zeros", "numpy.ones", "numpy.stack", "numpy.stack", "scipy.linalg.lstsq"], "function", ["None"], ["X", ",", "Y", ",", "U", ",", "V", ",", "O", ",", "I", "=", "Xsrc", "[", ":", ",", "0", "]", ",", "Xsrc", "[", ":", ",", "1", "]", ",", "Xdst", "[", ":", ",", "0", "]", ",", "Xdst", "[", ":", ",", "1", "]", ",", "np", ".", "zeros", "(", "[", "ptsN", "]", ")", ",", "np", ".", "ones", "(", "[", "ptsN", "]", ")", "\n", "A", "=", "np", ".", "concatenate", "(", "(", "np", ".", "stack", "(", "[", "X", ",", "Y", ",", "I", ",", "O", ",", "O", ",", "O", "]", ",", "axis", "=", "1", ")", ",", "\n", "np", ".", "stack", "(", "[", "O", ",", "O", ",", "O", ",", "X", ",", "Y", ",", "I", "]", ",", "axis", "=", "1", ")", ")", ",", "axis", "=", "0", ")", "\n", "b", "=", "np", ".", "concatenate", "(", "(", "U", ",", "V", ")", ",", "axis", "=", "0", ")", "\n", "p1", ",", "p2", ",", "p3", ",", "p4", ",", "p5", ",", "p6", "=", "scipy", ".", "linalg", ".", "lstsq", "(", "A", ",", "b", ")", "[", "0", "]", ".", "squeeze", "(", ")", "\n", "pMtrx", "=", "np", ".", "array", "(", "[", "[", "p1", ",", "p2", ",", "p3", "]", ",", "[", "p4", ",", "p5", ",", "p6", "]", ",", "[", "0", ",", "0", ",", "1", "]", "]", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "return", "pMtrx", "\n", "\n", "# compute composition of warp parameters", "\n", "", "def", "compose", "(", "opt", ",", "p", ",", "dp", ")", ":", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.compose": [[19, 26], ["warp.vec2mtrx", "warp.vec2mtrx", "vec2mtrx.matmul", "warp.mtrx2vec"], "function", ["home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.vec2mtrx", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.vec2mtrx", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.mtrx2vec"], ["\t\t", "pMtrx", "=", "vec2mtrx", "(", "opt", ",", "p", ")", "\n", "dpMtrx", "=", "vec2mtrx", "(", "opt", ",", "dp", ")", "\n", "pMtrxNew", "=", "tf", ".", "matmul", "(", "dpMtrx", ",", "pMtrx", ")", "\n", "pMtrxNew", "/=", "pMtrxNew", "[", ":", ",", "2", ":", "3", ",", "2", ":", "3", "]", "\n", "pNew", "=", "mtrx2vec", "(", "opt", ",", "pMtrxNew", ")", "\n", "", "return", "pNew", "\n", "\n", "# compute inverse of warp parameters", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.inverse": [[28, 33], ["warp.vec2mtrx", "vec2mtrx.inverse", "warp.mtrx2vec"], "function", ["home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.vec2mtrx", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.inverse", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.mtrx2vec"], ["\t", "with", "tf", ".", "name_scope", "(", "\"inverse\"", ")", ":", "\n", "\t\t", "pMtrx", "=", "vec2mtrx", "(", "opt", ",", "p", ")", "\n", "pInvMtrx", "=", "tf", ".", "matrix_inverse", "(", "pMtrx", ")", "\n", "pInv", "=", "mtrx2vec", "(", "opt", ",", "pInvMtrx", ")", "\n", "", "return", "pInv", "\n", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.vec2mtrx": [[35, 59], ["torch.zeros().cuda", "torch.ones().cuda", "torch.unbind", "torch.stack", "torch.unbind", "torch.stack", "torch.unbind", "torch.stack", "torch.unbind", "torch.stack", "torch.zeros", "torch.ones", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack", "torch.stack"], "function", ["None"], ["", "def", "vec2mtrx", "(", "opt", ",", "p", ")", ":", "\n", "\t", "with", "tf", ".", "name_scope", "(", "\"vec2mtrx\"", ")", ":", "\n", "\t\t", "O", "=", "tf", ".", "zeros", "(", "[", "opt", ".", "batchSize", "]", ")", "\n", "I", "=", "tf", ".", "ones", "(", "[", "opt", ".", "batchSize", "]", ")", "\n", "if", "opt", ".", "warpType", "==", "\"translation\"", ":", "\n", "\t\t\t", "tx", ",", "ty", "=", "tf", ".", "unstack", "(", "p", ",", "axis", "=", "1", ")", "\n", "pMtrx", "=", "tf", ".", "transpose", "(", "tf", ".", "stack", "(", "[", "[", "I", ",", "O", ",", "tx", "]", ",", "[", "O", ",", "I", ",", "ty", "]", ",", "[", "O", ",", "O", ",", "I", "]", "]", ")", ",", "perm", "=", "[", "2", ",", "0", ",", "1", "]", ")", "\n", "", "if", "opt", ".", "warpType", "==", "\"similarity\"", ":", "\n", "\t\t\t", "pc", ",", "ps", ",", "tx", ",", "ty", "=", "tf", ".", "unstack", "(", "p", ",", "axis", "=", "1", ")", "\n", "pMtrx", "=", "tf", ".", "transpose", "(", "tf", ".", "stack", "(", "[", "[", "I", "+", "pc", ",", "-", "ps", ",", "tx", "]", ",", "[", "ps", ",", "I", "+", "pc", ",", "ty", "]", ",", "[", "O", ",", "O", ",", "I", "]", "]", ")", ",", "perm", "=", "[", "2", ",", "0", ",", "1", "]", ")", "\n", "", "if", "opt", ".", "warpType", "==", "\"affine\"", ":", "\n", "\t\t\t", "p1", ",", "p2", ",", "p3", ",", "p4", ",", "p5", ",", "p6", ",", "p7", ",", "p8", "=", "tf", ".", "unstack", "(", "p", ",", "axis", "=", "1", ")", "\n", "pMtrx", "=", "tf", ".", "transpose", "(", "tf", ".", "stack", "(", "[", "[", "I", "+", "p1", ",", "p2", ",", "p3", "]", ",", "[", "p4", ",", "I", "+", "p5", ",", "p6", "]", ",", "[", "O", ",", "O", ",", "I", "]", "]", ")", ",", "perm", "=", "[", "2", ",", "0", ",", "1", "]", ")", "\n", "", "if", "opt", ".", "warpType", "==", "\"homography\"", ":", "\n", "\t\t\t", "p1", ",", "p2", ",", "p3", ",", "p4", ",", "p5", ",", "p6", ",", "p7", ",", "p8", "=", "tf", ".", "unstack", "(", "p", ",", "axis", "=", "1", ")", "\n", "pMtrx", "=", "tf", ".", "transpose", "(", "tf", ".", "stack", "(", "[", "[", "I", "+", "p1", ",", "p2", ",", "p3", "]", ",", "[", "p4", ",", "I", "+", "p5", ",", "p6", "]", ",", "[", "p7", ",", "p8", ",", "I", "]", "]", ")", ",", "perm", "=", "[", "2", ",", "0", ",", "1", "]", ")", "\n", "", "", "return", "pMtrx", "\n", "\n", "# convert warp matrix to parameters", "\n", "", "def", "mtrx2vec", "(", "opt", ",", "pMtrx", ")", ":", "\n", "\t", "with", "tf", ".", "name_scope", "(", "\"mtrx2vec\"", ")", ":", "\n", "\t\t", "[", "row0", ",", "row1", ",", "row2", "]", "=", "tf", ".", "unstack", "(", "pMtrx", ",", "axis", "=", "1", ")", "\n", "[", "e00", ",", "e01", ",", "e02", "]", "=", "tf", ".", "unstack", "(", "row0", ",", "axis", "=", "1", ")", "\n", "[", "e10", ",", "e11", ",", "e12", "]", "=", "tf", ".", "unstack", "(", "row1", ",", "axis", "=", "1", ")", "\n", "[", "e20", ",", "e21", ",", "e22", "]", "=", "tf", ".", "unstack", "(", "row2", ",", "axis", "=", "1", ")", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.mtrx2vec": [[61, 71], ["torch.unbind", "torch.unbind", "torch.unbind", "torch.unbind", "torch.stack", "torch.stack", "torch.stack", "torch.stack"], "function", ["None"], ["if", "opt", ".", "warpType", "==", "\"similarity\"", ":", "p", "=", "tf", ".", "stack", "(", "[", "e00", "-", "1", ",", "e10", ",", "e02", ",", "e12", "]", ",", "axis", "=", "1", ")", "\n", "if", "opt", ".", "warpType", "==", "\"affine\"", ":", "p", "=", "tf", ".", "stack", "(", "[", "e00", "-", "1", ",", "e01", ",", "e02", ",", "e10", ",", "e11", "-", "1", ",", "e12", "]", ",", "axis", "=", "1", ")", "\n", "if", "opt", ".", "warpType", "==", "\"homography\"", ":", "p", "=", "tf", ".", "stack", "(", "[", "e00", "-", "1", ",", "e01", ",", "e02", ",", "e10", ",", "e11", "-", "1", ",", "e12", ",", "e20", ",", "e21", "]", ",", "axis", "=", "1", ")", "\n", "", "return", "p", "\n", "\n", "# warp the image", "\n", "", "def", "transformImage", "(", "opt", ",", "image", ",", "pMtrx", ")", ":", "\n", "\t", "with", "tf", ".", "name_scope", "(", "\"transformImage\"", ")", ":", "\n", "\t\t", "refMtrx", "=", "tf", ".", "tile", "(", "tf", ".", "expand_dims", "(", "opt", ".", "refMtrx", ",", "axis", "=", "0", ")", ",", "[", "opt", ".", "batchSize", ",", "1", ",", "1", "]", ")", "\n", "transMtrx", "=", "tf", ".", "matmul", "(", "refMtrx", ",", "pMtrx", ")", "\n", "# warp the canonical coordinates", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.warp.transformImage": [[73, 91], ["torch.from_numpy().cuda", "refMtrx.repeat.repeat", "refMtrx.repeat.matmul", "numpy.meshgrid", "numpy.tile().astype", "torch.from_numpy().cuda", "refMtrx.matmul.matmul", "torch.unbind", "torch.stack", "torch.nn.functional.grid_sample", "numpy.linspace", "numpy.linspace", "X.flatten", "Y.flatten", "numpy.stack", "torch.from_numpy", "numpy.tile", "torch.from_numpy", "numpy.ones_like"], "function", ["None"], ["X", ",", "Y", "=", "X", ".", "flatten", "(", ")", ",", "Y", ".", "flatten", "(", ")", "\n", "XYhom", "=", "np", ".", "stack", "(", "[", "X", ",", "Y", ",", "np", ".", "ones_like", "(", "X", ")", "]", ",", "axis", "=", "1", ")", ".", "T", "\n", "XYhom", "=", "np", ".", "tile", "(", "XYhom", ",", "[", "opt", ".", "batchSize", ",", "1", ",", "1", "]", ")", ".", "astype", "(", "np", ".", "float32", ")", "\n", "XYwarpHom", "=", "tf", ".", "matmul", "(", "transMtrx", ",", "XYhom", ")", "\n", "XwarpHom", ",", "YwarpHom", ",", "ZwarpHom", "=", "tf", ".", "unstack", "(", "XYwarpHom", ",", "axis", "=", "1", ")", "\n", "Xwarp", "=", "tf", ".", "reshape", "(", "XwarpHom", "/", "(", "ZwarpHom", "+", "1e-8", ")", ",", "[", "opt", ".", "batchSize", ",", "opt", ".", "H", ",", "opt", ".", "W", "]", ")", "\n", "Ywarp", "=", "tf", ".", "reshape", "(", "YwarpHom", "/", "(", "ZwarpHom", "+", "1e-8", ")", ",", "[", "opt", ".", "batchSize", ",", "opt", ".", "H", ",", "opt", ".", "W", "]", ")", "\n", "# get the integer sampling coordinates", "\n", "Xfloor", ",", "Xceil", "=", "tf", ".", "floor", "(", "Xwarp", ")", ",", "tf", ".", "ceil", "(", "Xwarp", ")", "\n", "Yfloor", ",", "Yceil", "=", "tf", ".", "floor", "(", "Ywarp", ")", ",", "tf", ".", "ceil", "(", "Ywarp", ")", "\n", "XfloorInt", ",", "XceilInt", "=", "tf", ".", "to_int32", "(", "Xfloor", ")", ",", "tf", ".", "to_int32", "(", "Xceil", ")", "\n", "YfloorInt", ",", "YceilInt", "=", "tf", ".", "to_int32", "(", "Yfloor", ")", ",", "tf", ".", "to_int32", "(", "Yceil", ")", "\n", "imageIdx", "=", "np", ".", "tile", "(", "np", ".", "arange", "(", "opt", ".", "batchSize", ")", ".", "reshape", "(", "[", "opt", ".", "batchSize", ",", "1", ",", "1", "]", ")", ",", "[", "1", ",", "opt", ".", "H", ",", "opt", ".", "W", "]", ")", "\n", "imageVec", "=", "tf", ".", "reshape", "(", "image", ",", "[", "-", "1", ",", "int", "(", "image", ".", "shape", "[", "-", "1", "]", ")", "]", ")", "\n", "imageVecOut", "=", "tf", ".", "concat", "(", "[", "imageVec", ",", "tf", ".", "zeros", "(", "[", "1", ",", "int", "(", "image", ".", "shape", "[", "-", "1", "]", ")", "]", ")", "]", ",", "axis", "=", "0", ")", "\n", "idxUL", "=", "(", "imageIdx", "*", "opt", ".", "H", "+", "YfloorInt", ")", "*", "opt", ".", "W", "+", "XfloorInt", "\n", "idxUR", "=", "(", "imageIdx", "*", "opt", ".", "H", "+", "YfloorInt", ")", "*", "opt", ".", "W", "+", "XceilInt", "\n", "idxBL", "=", "(", "imageIdx", "*", "opt", ".", "H", "+", "YceilInt", ")", "*", "opt", ".", "W", "+", "XfloorInt", "\n", "idxBR", "=", "(", "imageIdx", "*", "opt", ".", "H", "+", "YceilInt", ")", "*", "opt", ".", "W", "+", "XceilInt", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.Visdom.__init__": [[33, 38], ["visdom.Visdom"], "methods", ["None"], ["# make image summary from image batch (mean/variance)", "\n", "", "def", "imageSummaryMeanVar", "(", "opt", ",", "image", ",", "tag", ",", "H", ",", "W", ")", ":", "\n", "\t", "image", "=", "tf", ".", "concat", "(", "[", "image", ",", "np", ".", "zeros", "(", "[", "2", ",", "H", ",", "W", ",", "3", "]", ")", "]", ",", "axis", "=", "0", ")", "\n", "imageOne", "=", "tf", ".", "batch_to_space_nd", "(", "image", ",", "crops", "=", "[", "[", "0", ",", "0", "]", ",", "[", "0", ",", "0", "]", "]", ",", "block_shape", "=", "[", "5", ",", "9", "]", ")", "\n", "imagePermute", "=", "tf", ".", "reshape", "(", "imageOne", ",", "[", "H", ",", "5", ",", "W", ",", "9", ",", "-", "1", "]", ")", "\n", "imageTransp", "=", "tf", ".", "transpose", "(", "imagePermute", ",", "[", "1", ",", "0", ",", "3", ",", "2", ",", "4", "]", ")", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.Visdom.tileImages": [[38, 44], ["images.reshape.reshape.reshape", "numpy.concatenate", "len", "list", "numpy.concatenate"], "methods", ["None"], ["imageTransp", "=", "tf", ".", "transpose", "(", "imagePermute", ",", "[", "1", ",", "0", ",", "3", ",", "2", ",", "4", "]", ")", "\n", "imageBlocks", "=", "tf", ".", "reshape", "(", "imageTransp", ",", "[", "1", ",", "H", "*", "5", ",", "W", "*", "9", ",", "-", "1", "]", ")", "\n", "# imageBlocks = tf.cast(imageBlocks*255,tf.uint8)", "\n", "summary", "=", "tf", ".", "summary", ".", "image", "(", "tag", ",", "imageBlocks", ")", "\n", "return", "summary", "\n", "\n", "# set optimizer for different learning rates", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.Visdom.trainLoss": [[44, 51], ["float", "float.detach().cpu().numpy", "util.Visdom.vis.line", "util.Visdom.vis.line", "float.detach().cpu", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "float.detach"], "methods", ["None"], ["# set optimizer for different learning rates", "\n", "", "def", "setOptimizer", "(", "opt", ",", "loss", ",", "lrGP", ",", "lrC", ")", ":", "\n", "\t", "varsGP", "=", "[", "v", "for", "v", "in", "tf", ".", "global_variables", "(", ")", "if", "\"geometric\"", "in", "v", ".", "name", "]", "\n", "varsC", "=", "[", "v", "for", "v", "in", "tf", ".", "global_variables", "(", ")", "if", "\"classifier\"", "in", "v", ".", "name", "]", "\n", "gradC", "=", "tf", ".", "gradients", "(", "loss", ",", "varsC", ")", "\n", "optimC", "=", "tf", ".", "train", ".", "GradientDescentOptimizer", "(", "lrC", ")", ".", "apply_gradients", "(", "zip", "(", "gradC", ",", "varsC", ")", ")", "\n", "if", "len", "(", "varsGP", ")", ">", "0", ":", "\n", "\t\t", "gradGP", "=", "tf", ".", "gradients", "(", "loss", ",", "varsGP", ")", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.Visdom.testLoss": [[51, 57], ["util.Visdom.vis.line", "util.Visdom.vis.line", "numpy.array", "numpy.array", "numpy.array", "numpy.array"], "methods", ["None"], ["\t\t", "gradGP", "=", "tf", ".", "gradients", "(", "loss", ",", "varsGP", ")", "\n", "optimGP", "=", "tf", ".", "train", ".", "GradientDescentOptimizer", "(", "lrGP", ")", ".", "apply_gradients", "(", "zip", "(", "gradGP", ",", "varsGP", ")", ")", "\n", "optim", "=", "tf", ".", "group", "(", "optimC", ",", "optimGP", ")", "\n", "", "else", ":", "\n", "\t\t", "optim", "=", "optimC", "\n", "", "return", "optim", "\n", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.Visdom.meanVar": [[57, 64], ["util.Visdom.vis.image", "util.Visdom.vis.image", "util.Visdom.vis.image", "util.Visdom.vis.image", "util.Visdom.tileImages", "mean[].clip", "mean[].clip", "var[].clip", "var[].clip", "util.Visdom.tileImages"], "methods", ["home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.Visdom.tileImages", "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.Visdom.tileImages"], ["\n", "# restore model", "\n", "", "def", "restoreModel", "(", "opt", ",", "sess", ",", "saver", ",", "it", ")", ":", "\n", "\t", "saver", ".", "restore", "(", "sess", ",", "\"models_{0}/{1}_it{2}.ckpt\"", ".", "format", "(", "opt", ".", "group", ",", "opt", ".", "model", ",", "it", ",", "opt", ".", "warpN", ")", ")", "\n", "# save model", "\n", "", "def", "saveModel", "(", "opt", ",", "sess", ",", "saver", ",", "it", ")", ":", "\n", "\t", "saver", ".", "save", "(", "sess", ",", "\"models_{0}/{1}_it{2}.ckpt\"", ".", "format", "(", "opt", ".", "group", ",", "opt", ".", "model", ",", "it", ",", "opt", ".", "warpN", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.mkdir": [[8, 10], ["os.path.exists", "os.mkdir"], "function", ["home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.mkdir"], ["\t", "if", "not", "os", ".", "path", ".", "exists", "(", "path", ")", ":", "os", ".", "mkdir", "(", "path", ")", "\n", "", "def", "imread", "(", "fname", ")", ":", "\n", "\t", "return", "scipy", ".", "misc", ".", "imread", "(", "fname", ")", "/", "255.0", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.imread": [[10, 12], ["scipy.misc.imread"], "function", ["home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.imread"], ["\t", "return", "scipy", ".", "misc", ".", "imread", "(", "fname", ")", "/", "255.0", "\n", "", "def", "imsave", "(", "fname", ",", "array", ")", ":", "\n", "\t", "scipy", ".", "misc", ".", "toimage", "(", "array", ",", "cmin", "=", "0.0", ",", "cmax", "=", "1.0", ")", ".", "save", "(", "fname", ")", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.imsave": [[12, 14], ["scipy.misc.toimage().save", "scipy.misc.toimage"], "function", ["None"], ["\t", "scipy", ".", "misc", ".", "toimage", "(", "array", ",", "cmin", "=", "0.0", ",", "cmax", "=", "1.0", ")", ".", "save", "(", "fname", ")", "\n", "\n", "# convert to colored strings", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toRed": [[16, 17], ["termcolor.colored"], "function", ["None"], ["def", "toGreen", "(", "content", ")", ":", "return", "termcolor", ".", "colored", "(", "content", ",", "\"green\"", ",", "attrs", "=", "[", "\"bold\"", "]", ")", "\n", "def", "toBlue", "(", "content", ")", ":", "return", "termcolor", ".", "colored", "(", "content", ",", "\"blue\"", ",", "attrs", "=", "[", "\"bold\"", "]", ")", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toGreen": [[17, 18], ["termcolor.colored"], "function", ["None"], ["def", "toBlue", "(", "content", ")", ":", "return", "termcolor", ".", "colored", "(", "content", ",", "\"blue\"", ",", "attrs", "=", "[", "\"bold\"", "]", ")", "\n", "def", "toCyan", "(", "content", ")", ":", "return", "termcolor", ".", "colored", "(", "content", ",", "\"cyan\"", ",", "attrs", "=", "[", "\"bold\"", "]", ")", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toBlue": [[18, 19], ["termcolor.colored"], "function", ["None"], ["def", "toCyan", "(", "content", ")", ":", "return", "termcolor", ".", "colored", "(", "content", ",", "\"cyan\"", ",", "attrs", "=", "[", "\"bold\"", "]", ")", "\n", "def", "toYellow", "(", "content", ")", ":", "return", "termcolor", ".", "colored", "(", "content", ",", "\"yellow\"", ",", "attrs", "=", "[", "\"bold\"", "]", ")", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toCyan": [[19, 20], ["termcolor.colored"], "function", ["None"], ["def", "toYellow", "(", "content", ")", ":", "return", "termcolor", ".", "colored", "(", "content", ",", "\"yellow\"", ",", "attrs", "=", "[", "\"bold\"", "]", ")", "\n", "def", "toMagenta", "(", "content", ")", ":", "return", "termcolor", ".", "colored", "(", "content", ",", "\"magenta\"", ",", "attrs", "=", "[", "\"bold\"", "]", ")", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toYellow": [[20, 21], ["termcolor.colored"], "function", ["None"], ["def", "toMagenta", "(", "content", ")", ":", "return", "termcolor", ".", "colored", "(", "content", ",", "\"magenta\"", ",", "attrs", "=", "[", "\"bold\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.toMagenta": [[21, 22], ["termcolor.colored"], "function", ["None"], ["\n", "# make image summary from image batch", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.restoreModel": [[24, 27], ["geometric.load_state_dict", "classifier.load_state_dict", "torch.load", "torch.load"], "function", ["None"], ["\t", "blockSize", "=", "opt", ".", "visBlockSize", "\n", "imageOne", "=", "tf", ".", "batch_to_space", "(", "image", "[", ":", "blockSize", "**", "2", "]", ",", "crops", "=", "[", "[", "0", ",", "0", "]", ",", "[", "0", ",", "0", "]", "]", ",", "block_size", "=", "blockSize", ")", "\n", "imagePermute", "=", "tf", ".", "reshape", "(", "imageOne", ",", "[", "H", ",", "blockSize", ",", "W", ",", "blockSize", ",", "-", "1", "]", ")", "\n", "imageTransp", "=", "tf", ".", "transpose", "(", "imagePermute", ",", "[", "1", ",", "0", ",", "3", ",", "2", ",", "4", "]", ")", "\n"]], "home.repos.pwc.inspect_result.chenhsuanlin_inverse-compositional-STN.MNIST-pytorch.util.saveModel": [[28, 31], ["torch.save", "torch.save", "geometric.state_dict", "classifier.state_dict"], "function", ["None"], ["imageBlocks", "=", "tf", ".", "reshape", "(", "imageTransp", ",", "[", "1", ",", "H", "*", "blockSize", ",", "W", "*", "blockSize", ",", "-", "1", "]", ")", "\n", "imageBlocks", "=", "tf", ".", "cast", "(", "imageBlocks", "*", "255", ",", "tf", ".", "uint8", ")", "\n", "summary", "=", "tf", ".", "summary", ".", "image", "(", "tag", ",", "imageBlocks", ")", "\n", "return", "summary", "\n"]]}