{"home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.None.demo_unseen.adjust_learning_rate": [[195, 207], ["writer.add_scalar"], "function", ["None"], ["def", "adjust_learning_rate", "(", "optimizer", ",", "epoch", ")", ":", "\n", "    ", "\"\"\"Sets the learning rate to the initial LR decayed by 10 every 30 epochs\"\"\"", "\n", "if", "epoch", "<", "20", ":", "\n", "        ", "lr", "=", "args", ".", "lr", "\n", "", "elif", "epoch", ">=", "20", "and", "epoch", "<", "40", ":", "\n", "        ", "lr", "=", "args", ".", "lr", "*", "0.1", "\n", "", "else", ":", "\n", "        ", "lr", "=", "args", ".", "lr", "*", "0.01", "\n", "\n", "", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "lr", "\n", "", "writer", ".", "add_scalar", "(", "'lr'", ",", "lr", ",", "epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.None.demo_unseen.train": [[210, 253], ["print", "demo_unseen.adjust_learning_rate", "AverageMeter", "AverageMeter", "AverageMeter", "net.train", "time.time", "enumerate", "writer.add_scalar", "net.apply", "AverageMeter.update", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "optimizer.zero_grad", "net", "criterion", "criterion.backward", "optimizer.step", "AverageMeter.update", "AverageMeter.update", "time.time", "print", "inputs1.to", "inputs2.to", "targets.to", "indexes.to", "criterion.item", "torch.cat.size", "time.time", "time.time", "len"], "function", ["home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.None.demo_seen.adjust_learning_rate", "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.None.demo_seen.train"], ["", "def", "train", "(", "epoch", ")", ":", "\n", "    ", "print", "(", "'\\nEpoch: %d'", "%", "epoch", ")", "\n", "adjust_learning_rate", "(", "optimizer", ",", "epoch", ")", "\n", "train_loss", "=", "AverageMeter", "(", ")", "\n", "data_time", "=", "AverageMeter", "(", ")", "\n", "batch_time", "=", "AverageMeter", "(", ")", "\n", "correct", "=", "0", "\n", "total", "=", "0", "\n", "\n", "# switch to train mode", "\n", "net", ".", "train", "(", ")", "\n", "\n", "if", "freeze_bn", ":", "\n", "        ", "net", ".", "apply", "(", "set_bn_to_eval", ")", "\n", "\n", "", "end", "=", "time", ".", "time", "(", ")", "\n", "for", "batch_idx", ",", "(", "inputs1", ",", "inputs2", ",", "targets", ",", "indexes", ")", "in", "enumerate", "(", "trainloader", ")", ":", "\n", "        ", "data_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "inputs1", ",", "inputs2", ",", "targets", ",", "indexes", "=", "inputs1", ".", "to", "(", "device", ")", ",", "inputs2", ".", "to", "(", "device", ")", ",", "targets", ".", "to", "(", "device", ")", ",", "indexes", ".", "to", "(", "device", ")", "\n", "\n", "inputs", "=", "torch", ".", "cat", "(", "(", "inputs1", ",", "inputs2", ")", ",", "0", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "features", "=", "net", "(", "inputs", ")", "\n", "\n", "loss", "=", "criterion", "(", "features", ",", "indexes", ")", "\n", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "train_loss", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "\n", "# measure elapsed time", "\n", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "\n", "# if batch_idx%20 ==0:", "\n", "print", "(", "'Epoch: [{}][{}/{}]'", "\n", "'Time: {batch_time.val:.3f} ({batch_time.avg:.3f}) '", "\n", "'Data: {data_time.val:.3f} ({data_time.avg:.3f}) '", "\n", "'Loss: {train_loss.val:.4f} ({train_loss.avg:.4f}) '", ".", "format", "(", "\n", "epoch", ",", "batch_idx", ",", "len", "(", "trainloader", ")", ",", "batch_time", "=", "batch_time", ",", "data_time", "=", "data_time", ",", "train_loss", "=", "train_loss", ")", ")", "\n", "", "writer", ".", "add_scalar", "(", "'loss'", ",", "train_loss", ".", "avg", ",", "epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.None.demo_unseen.compute_knn": [[254, 269], ["len", "numpy.arange", "xrange", "np.arange.astype", "numpy.random.choice", "numpy.argpartition"], "function", ["None"], ["", "def", "compute_knn", "(", "dist_feat", ",", "trainLabels", ",", "knn", "=", "5", ",", "epoch", "=", "8", ")", ":", "\n", "    ", "''' compute the knn according to instance id/ class id\n    '''", "\n", "ndata", "=", "len", "(", "trainLabels", ")", "\n", "nnIndex", "=", "np", ".", "arange", "(", "ndata", ")", "\n", "\n", "top_acc", "=", "0.", "\n", "# compute the instance knn", "\n", "for", "i", "in", "xrange", "(", "ndata", ")", ":", "\n", "        ", "dist_feat", "[", "i", ",", "i", "]", "=", "-", "1000", "\n", "dist_tmp", "=", "dist_feat", "[", "i", ",", ":", "]", "\n", "ind", "=", "np", ".", "argpartition", "(", "dist_tmp", ",", "-", "knn", ")", "[", "-", "knn", ":", "]", "\n", "# random 1nn and augmented sample for positive ", "\n", "nnIndex", "[", "i", "]", "=", "np", ".", "random", ".", "choice", "(", "[", "ind", "[", "0", "]", ",", "i", "]", ")", "\n", "", "return", "nnIndex", ".", "astype", "(", "np", ".", "int32", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.None.BatchAverage.BatchCriterion.__init__": [[10, 15], ["torch.nn.Module.__init__", "torch.eye().cuda", "torch.eye"], "methods", ["home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.inception_v1.Model.__init__"], ["def", "__init__", "(", "self", ",", "negM", ",", "T", ",", "batchSize", ")", ":", "\n", "        ", "super", "(", "BatchCriterion", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "negM", "=", "negM", "\n", "self", ".", "T", "=", "T", "\n", "self", ".", "diag_mat", "=", "1", "-", "torch", ".", "eye", "(", "batchSize", "*", "2", ")", ".", "cuda", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.None.BatchAverage.BatchCriterion.forward": [[16, 53], ["x.size", "torch.cat", "torch.div", "all_prob.sum.repeat", "torch.div", "torch.div.log_", "torch.div.log_", "torch.div.sum", "torch.div.sum", "torch.mm().div_().exp_", "all_prob.sum", "all_prob.sum.repeat.t", "torch.div.add", "torch.div.sum", "x.narrow", "x.narrow", "torch.mm().div_", "all_prob.sum", "torch.div.add", "torch.mm", "x.t"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ",", "targets", ")", ":", "\n", "        ", "batchSize", "=", "x", ".", "size", "(", "0", ")", "\n", "\n", "#get positive innerproduct", "\n", "reordered_x", "=", "torch", ".", "cat", "(", "(", "x", ".", "narrow", "(", "0", ",", "batchSize", "//", "2", ",", "batchSize", "//", "2", ")", ",", "x", ".", "narrow", "(", "0", ",", "0", ",", "batchSize", "//", "2", ")", ")", ",", "0", ")", "\n", "#reordered_x = reordered_x.data", "\n", "pos", "=", "(", "x", "*", "reordered_x", ".", "data", ")", ".", "sum", "(", "1", ")", ".", "div_", "(", "self", ".", "T", ")", ".", "exp_", "(", ")", "\n", "\n", "#get all innerproduct, remove diag", "\n", "all_prob", "=", "torch", ".", "mm", "(", "x", ",", "x", ".", "t", "(", ")", ".", "data", ")", ".", "div_", "(", "self", ".", "T", ")", ".", "exp_", "(", ")", "*", "self", ".", "diag_mat", "\n", "if", "self", ".", "negM", "==", "1", ":", "\n", "            ", "all_div", "=", "all_prob", ".", "sum", "(", "1", ")", "\n", "", "else", ":", "\n", "#remove pos for neg", "\n", "            ", "all_div", "=", "(", "all_prob", ".", "sum", "(", "1", ")", "-", "pos", ")", "*", "self", ".", "negM", "+", "pos", "\n", "\n", "", "lnPmt", "=", "torch", ".", "div", "(", "pos", ",", "all_div", ")", "\n", "\n", "# negative probability", "\n", "Pon_div", "=", "all_div", ".", "repeat", "(", "batchSize", ",", "1", ")", "\n", "lnPon", "=", "torch", ".", "div", "(", "all_prob", ",", "Pon_div", ".", "t", "(", ")", ")", "\n", "lnPon", "=", "-", "lnPon", ".", "add", "(", "-", "1", ")", "\n", "\n", "# equation 7 in ref. A (NCE paper)", "\n", "lnPon", ".", "log_", "(", ")", "\n", "# also remove the pos term", "\n", "lnPon", "=", "lnPon", ".", "sum", "(", "1", ")", "-", "(", "-", "lnPmt", ".", "add", "(", "-", "1", ")", ")", ".", "log_", "(", ")", "\n", "lnPmt", ".", "log_", "(", ")", "\n", "\n", "lnPmtsum", "=", "lnPmt", ".", "sum", "(", "0", ")", "\n", "lnPonsum", "=", "lnPon", ".", "sum", "(", "0", ")", "\n", "\n", "# negative multiply m", "\n", "lnPonsum", "=", "lnPonsum", "*", "self", ".", "negM", "\n", "loss", "=", "-", "(", "lnPmtsum", "+", "lnPonsum", ")", "/", "batchSize", "\n", "return", "loss", "\n", "", "", ""]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.None.demo_seen.adjust_learning_rate": [[160, 172], ["writer.add_scalar"], "function", ["None"], ["def", "adjust_learning_rate", "(", "optimizer", ",", "epoch", ")", ":", "\n", "    ", "\"\"\"Sets the learning rate to the initial LR decayed at 120, 160 and 200\"\"\"", "\n", "lr", "=", "args", ".", "lr", "\n", "if", "epoch", ">=", "120", "and", "epoch", "<", "160", ":", "\n", "        ", "lr", "=", "args", ".", "lr", "*", "0.1", "\n", "", "elif", "epoch", ">=", "160", "and", "epoch", "<", "200", ":", "\n", "        ", "lr", "=", "args", ".", "lr", "*", "0.05", "\n", "", "elif", "epoch", ">=", "200", ":", "\n", "        ", "lr", "=", "args", ".", "lr", "*", "0.01", "\n", "", "for", "param_group", "in", "optimizer", ".", "param_groups", ":", "\n", "        ", "param_group", "[", "'lr'", "]", "=", "lr", "\n", "", "writer", ".", "add_scalar", "(", "'lr'", ",", "lr", ",", "epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.None.demo_seen.train": [[174, 213], ["print", "demo_seen.adjust_learning_rate", "AverageMeter", "AverageMeter", "AverageMeter", "net.train", "time.time", "enumerate", "writer.add_scalar", "AverageMeter.update", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "optimizer.zero_grad", "net", "criterion", "criterion.backward", "optimizer.step", "AverageMeter.update", "AverageMeter.update", "time.time", "inputs1.to", "inputs2.to", "indexes.to", "criterion.item", "torch.cat.size", "print", "time.time", "time.time", "len"], "function", ["home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.None.demo_seen.adjust_learning_rate", "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.None.demo_seen.train"], ["", "def", "train", "(", "epoch", ")", ":", "\n", "    ", "print", "(", "'\\nEpoch: %d'", "%", "epoch", ")", "\n", "adjust_learning_rate", "(", "optimizer", ",", "epoch", ")", "\n", "train_loss", "=", "AverageMeter", "(", ")", "\n", "data_time", "=", "AverageMeter", "(", ")", "\n", "batch_time", "=", "AverageMeter", "(", ")", "\n", "\n", "# switch to train mode", "\n", "net", ".", "train", "(", ")", "\n", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "for", "batch_idx", ",", "(", "inputs1", ",", "inputs2", ",", "_", ",", "indexes", ")", "in", "enumerate", "(", "trainloader", ")", ":", "\n", "        ", "data_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "\n", "inputs1", ",", "inputs2", ",", "indexes", "=", "inputs1", ".", "to", "(", "device", ")", ",", "inputs2", ".", "to", "(", "device", ")", ",", "indexes", ".", "to", "(", "device", ")", "\n", "\n", "inputs", "=", "torch", ".", "cat", "(", "(", "inputs1", ",", "inputs2", ")", ",", "0", ")", "\n", "optimizer", ".", "zero_grad", "(", ")", "\n", "\n", "features", "=", "net", "(", "inputs", ")", "\n", "loss", "=", "criterion", "(", "features", ",", "indexes", ")", "\n", "\n", "loss", ".", "backward", "(", ")", "\n", "optimizer", ".", "step", "(", ")", "\n", "\n", "train_loss", ".", "update", "(", "loss", ".", "item", "(", ")", ",", "inputs", ".", "size", "(", "0", ")", ")", "\n", "\n", "# measure elapsed time", "\n", "batch_time", ".", "update", "(", "time", ".", "time", "(", ")", "-", "end", ")", "\n", "end", "=", "time", ".", "time", "(", ")", "\n", "\n", "if", "batch_idx", "%", "10", "==", "0", ":", "\n", "            ", "print", "(", "'Epoch: [{}][{}/{}] '", "\n", "'Time: {batch_time.val:.3f} ({batch_time.avg:.3f}) '", "\n", "'Data: {data_time.val:.3f} ({data_time.avg:.3f}) '", "\n", "'Loss: {train_loss.val:.4f} ({train_loss.avg:.4f})'", ".", "format", "(", "\n", "epoch", ",", "batch_idx", ",", "len", "(", "trainloader", ")", ",", "batch_time", "=", "batch_time", ",", "data_time", "=", "data_time", ",", "train_loss", "=", "train_loss", ")", ")", "\n", "# add log", "\n", "", "", "writer", ".", "add_scalar", "(", "'loss'", ",", "train_loss", ".", "avg", ",", "epoch", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.datasets.stl.STL10Instance.__getitem__": [[10, 33], ["PIL.Image.fromarray", "numpy.transpose", "stl.STL10Instance.transform", "stl.STL10Instance.target_transform", "int", "stl.STL10Instance.transform"], "methods", ["None"], ["def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\n", "        ", "if", "self", ".", "labels", "is", "not", "None", ":", "\n", "            ", "img", ",", "target", "=", "self", ".", "data", "[", "index", "]", ",", "int", "(", "self", ".", "labels", "[", "index", "]", ")", "\n", "", "else", ":", "\n", "            ", "img", ",", "target", "=", "self", ".", "data", "[", "index", "]", ",", "None", "\n", "\n", "# doing this so that it is consistent with all other datasets", "\n", "# to return a PIL Image", "\n", "", "img", "=", "Image", ".", "fromarray", "(", "np", ".", "transpose", "(", "img", ",", "(", "1", ",", "2", ",", "0", ")", ")", ")", "\n", "\n", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img1", "=", "self", ".", "transform", "(", "img", ")", "\n", "if", "not", "self", ".", "split", "==", "'test'", ":", "\n", "                ", "img2", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "", "", "if", "self", ".", "target_transform", "is", "not", "None", ":", "\n", "            ", "target", "=", "self", ".", "target_transform", "(", "target", ")", "\n", "\n", "", "if", "not", "self", ".", "split", "==", "'test'", ":", "\n", "            ", "return", "img1", ",", "img2", ",", "target", ",", "index", "\n", "", "else", ":", "\n", "            ", "return", "img1", ",", "target", ",", "index", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.datasets.cifar.CIFAR10Instance.__getitem__": [[9, 31], ["PIL.Image.fromarray", "cifar.CIFAR10Instance.target_transform", "cifar.CIFAR10Instance.transform", "cifar.CIFAR10Instance.transform"], "methods", ["None"], ["def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "if", "self", ".", "train", ":", "\n", "            ", "img", ",", "target", "=", "self", ".", "train_data", "[", "index", "]", ",", "self", ".", "train_labels", "[", "index", "]", "\n", "", "else", ":", "\n", "            ", "img", ",", "target", "=", "self", ".", "test_data", "[", "index", "]", ",", "self", ".", "test_labels", "[", "index", "]", "\n", "\n", "# doing this so that it is consistent with all other datasets", "\n", "# to return a PIL Image", "\n", "", "img", "=", "Image", ".", "fromarray", "(", "img", ")", "\n", "\n", "if", "self", ".", "target_transform", "is", "not", "None", ":", "\n", "            ", "target", "=", "self", ".", "target_transform", "(", "target", ")", "\n", "\n", "", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img1", "=", "self", ".", "transform", "(", "img", ")", "\n", "if", "self", ".", "train", ":", "\n", "                ", "img2", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "", "", "if", "self", ".", "train", ":", "\n", "            ", "return", "img1", ",", "img2", ",", "target", ",", "index", "\n", "", "else", ":", "\n", "            ", "return", "img1", ",", "target", ",", "index", "", "", "", "", ""]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.datasets.folder.ImageFolderInstance.__getitem__": [[6, 26], ["folder.ImageFolderInstance.loader", "len", "folder.ImageFolderInstance.transform", "folder.ImageFolderInstance.transform", "folder.ImageFolderInstance.transform", "folder.ImageFolderInstance.target_transform", "folder.ImageFolderInstance.target_transform"], "methods", ["None"], ["def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            index (int): Index\n        Returns:\n            tuple: (image, target) where target is class_index of the target class.\n        \"\"\"", "\n", "path", ",", "target", "=", "self", ".", "imgs", "[", "index", "]", "\n", "img", "=", "self", ".", "loader", "(", "path", ")", "\n", "if", "len", "(", "self", ".", "transform", ".", "transforms", ")", ">", "4", ":", "\n", "            ", "img1", "=", "self", ".", "transform", "(", "img", ")", "\n", "img2", "=", "self", ".", "transform", "(", "img", ")", "\n", "if", "self", ".", "target_transform", "is", "not", "None", ":", "\n", "                ", "target", "=", "self", ".", "target_transform", "(", "target", ")", "\n", "", "return", "img1", ",", "img2", ",", "target", ",", "index", "\n", "", "else", ":", "\n", "            ", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "if", "self", ".", "target_transform", "is", "not", "None", ":", "\n", "                ", "target", "=", "self", ".", "target_transform", "(", "target", ")", "\n", "", "return", "img", ",", "target", ",", "index", "\n", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.datasets.mldata.MLDataInstance.__init__": [[12, 27], ["numpy.load", "numpy.load", "numpy.load", "numpy.load"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "src_dir", ",", "dataset_name", ",", "train", "=", "True", ",", "transform", "=", "None", ",", "target_transform", "=", "None", ",", "nnIndex", "=", "None", ")", ":", "\n", "\n", "        ", "data_dir", "=", "src_dir", "+", "dataset_name", "+", "'/'", "\n", "if", "train", ":", "\n", "            ", "img_data", "=", "np", ".", "load", "(", "data_dir", "+", "'{}_{}_256resized_img.npy'", ".", "format", "(", "'training'", ",", "dataset_name", ")", ")", "\n", "img_label", "=", "np", ".", "load", "(", "data_dir", "+", "'{}_{}_256resized_label.npy'", ".", "format", "(", "'training'", ",", "dataset_name", ")", ")", "\n", "", "else", ":", "\n", "            ", "img_data", "=", "np", ".", "load", "(", "data_dir", "+", "'{}_{}_256resized_img.npy'", ".", "format", "(", "'validation'", ",", "dataset_name", ")", ")", "\n", "img_label", "=", "np", ".", "load", "(", "data_dir", "+", "'{}_{}_256resized_label.npy'", ".", "format", "(", "'validation'", ",", "dataset_name", ")", ")", "\n", "\n", "", "self", ".", "img_data", "=", "img_data", "\n", "self", ".", "img_label", "=", "img_label", "\n", "self", ".", "transform", "=", "transform", "\n", "self", ".", "target_transform", "=", "target_transform", "\n", "self", ".", "nnIndex", "=", "nnIndex", "\n", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.datasets.mldata.MLDataInstance.__getitem__": [[28, 47], ["mldata.MLDataInstance.transform", "mldata.MLDataInstance.transform", "mldata.MLDataInstance.transform", "mldata.MLDataInstance.target_transform", "mldata.MLDataInstance.target_transform"], "methods", ["None"], ["", "def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "\n", "        ", "if", "self", ".", "nnIndex", "is", "not", "None", ":", "\n", "\n", "            ", "img1", ",", "img2", ",", "target", "=", "self", ".", "img_data", "[", "index", "]", ",", "self", ".", "img_data", "[", "self", ".", "nnIndex", "[", "index", "]", "]", ",", "self", ".", "img_label", "[", "index", "]", "\n", "\n", "img1", "=", "self", ".", "transform", "(", "img1", ")", "\n", "img2", "=", "self", ".", "transform", "(", "img2", ")", "\n", "if", "self", ".", "target_transform", "is", "not", "None", ":", "\n", "                ", "target", "=", "self", ".", "target_transform", "(", "target", ")", "\n", "", "return", "img1", ",", "img2", ",", "target", ",", "index", "\n", "\n", "", "else", ":", "\n", "            ", "img", ",", "target", "=", "self", ".", "img_data", "[", "index", "]", ",", "self", ".", "img_label", "[", "index", "]", "\n", "img", "=", "self", ".", "transform", "(", "img", ")", "\n", "if", "self", ".", "target_transform", "is", "not", "None", ":", "\n", "                ", "target", "=", "self", ".", "target_transform", "(", "target", ")", "\n", "\n", "", "return", "img", ",", "target", ",", "index", "\n", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.datasets.mldata.MLDataInstance.__len__": [[48, 50], ["len"], "methods", ["None"], ["", "", "def", "__len__", "(", "self", ")", ":", "\n", "        ", "return", "len", "(", "self", ".", "img_data", ")", "", "", "", ""]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.datasets.mnist.MNISTInstance.__getitem__": [[10, 38], ["PIL.Image.fromarray", "PIL.Image.fromarray.numpy", "mnist.MNISTInstance.target_transform", "mnist.MNISTInstance.transform", "mnist.MNISTInstance.transform"], "methods", ["None"], ["def", "__getitem__", "(", "self", ",", "index", ")", ":", "\n", "        ", "\"\"\"\n        Args:\n            index (int): Index\n        Returns:\n            tuple: (image, target) where target is index of the target class.\n        \"\"\"", "\n", "if", "self", ".", "train", ":", "\n", "            ", "img", ",", "target", "=", "self", ".", "train_data", "[", "index", "]", ",", "self", ".", "train_labels", "[", "index", "]", "\n", "", "else", ":", "\n", "            ", "img", ",", "target", "=", "self", ".", "test_data", "[", "index", "]", ",", "self", ".", "test_labels", "[", "index", "]", "\n", "\n", "# doing this so that it is consistent with all other datasets", "\n", "# to return a PIL Image", "\n", "", "img", "=", "Image", ".", "fromarray", "(", "img", ".", "numpy", "(", ")", ",", "mode", "=", "'L'", ")", "\n", "\n", "if", "self", ".", "target_transform", "is", "not", "None", ":", "\n", "            ", "target", "=", "self", ".", "target_transform", "(", "target", ")", "\n", "\n", "", "if", "self", ".", "transform", "is", "not", "None", ":", "\n", "            ", "img1", "=", "self", ".", "transform", "(", "img", ")", "\n", "if", "self", ".", "train", ":", "\n", "                ", "img2", "=", "self", ".", "transform", "(", "img", ")", "\n", "\n", "", "", "if", "self", ".", "train", ":", "\n", "            ", "return", "img1", ",", "img2", ",", "target", ",", "index", "\n", "", "else", ":", "\n", "            ", "return", "img1", ",", "target", ",", "index", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.normalize.Normalize.__init__": [[7, 10], ["torch.nn.Module.__init__"], "methods", ["home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.inception_v1.Model.__init__"], ["    ", "def", "__init__", "(", "self", ",", "power", "=", "2", ")", ":", "\n", "        ", "super", "(", "Normalize", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "power", "=", "power", "\n", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.normalize.Normalize.forward": [[11, 15], ["x.pow().sum().pow", "x.div", "x.pow().sum", "x.pow"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "norm", "=", "x", ".", "pow", "(", "self", ".", "power", ")", ".", "sum", "(", "1", ",", "keepdim", "=", "True", ")", ".", "pow", "(", "1.", "/", "self", ".", "power", ")", "\n", "out", "=", "x", ".", "div", "(", "norm", ")", "\n", "return", "out", "\n", "", "", ""]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.resnet_cifar.BasicBlock.__init__": [[20, 32], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.inception_v1.Model.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.resnet_cifar.BasicBlock.forward": [[34, 40], ["torch.relu", "torch.relu", "torch.relu", "resnet_cifar.BasicBlock.bn2", "resnet_cifar.BasicBlock.shortcut", "torch.relu", "torch.relu", "torch.relu", "resnet_cifar.BasicBlock.bn1", "resnet_cifar.BasicBlock.conv2", "resnet_cifar.BasicBlock.conv1"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.resnet_cifar.Bottleneck.__init__": [[45, 59], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.inception_v1.Model.__init__"], ["def", "__init__", "(", "self", ",", "in_planes", ",", "planes", ",", "stride", "=", "1", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "in_planes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", "\n", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", ")", "\n", "if", "stride", "!=", "1", "or", "in_planes", "!=", "self", ".", "expansion", "*", "planes", ":", "\n", "            ", "self", ".", "shortcut", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "in_planes", ",", "self", ".", "expansion", "*", "planes", ",", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "self", ".", "expansion", "*", "planes", ")", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.resnet_cifar.Bottleneck.forward": [[61, 68], ["torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "torch.relu", "resnet_cifar.Bottleneck.bn3", "resnet_cifar.Bottleneck.shortcut", "torch.relu", "torch.relu", "torch.relu", "resnet_cifar.Bottleneck.bn1", "resnet_cifar.Bottleneck.bn2", "resnet_cifar.Bottleneck.conv3", "resnet_cifar.Bottleneck.conv1", "resnet_cifar.Bottleneck.conv2"], "methods", ["None"], ["", "", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "F", ".", "relu", "(", "self", ".", "bn2", "(", "self", ".", "conv2", "(", "out", ")", ")", ")", "\n", "out", "=", "self", ".", "bn3", "(", "self", ".", "conv3", "(", "out", ")", ")", "\n", "out", "+=", "self", ".", "shortcut", "(", "x", ")", "\n", "out", "=", "F", ".", "relu", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.resnet_cifar.ResNet.__init__": [[71, 84], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "resnet_cifar.ResNet._make_layer", "resnet_cifar.ResNet._make_layer", "resnet_cifar.ResNet._make_layer", "resnet_cifar.ResNet._make_layer", "torch.Linear", "torch.Linear", "torch.Linear", "models.normalize.Normalize"], "methods", ["home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.inception_v1.Model.__init__", "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.resnet.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "num_blocks", ",", "pool_len", "=", "4", ",", "low_dim", "=", "128", ")", ":", "\n", "        ", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "in_planes", "=", "64", "\n", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "3", ",", "stride", "=", "1", ",", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "num_blocks", "[", "0", "]", ",", "stride", "=", "1", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "num_blocks", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "num_blocks", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "num_blocks", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "linear", "=", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "low_dim", ")", "\n", "self", ".", "l2norm", "=", "Normalize", "(", "2", ")", "\n", "self", ".", "pool_len", "=", "pool_len", "\n", "# for m in self.modules():", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.resnet_cifar.ResNet._make_layer": [[93, 100], ["torch.Sequential", "torch.Sequential", "torch.Sequential", "layers.append", "block"], "methods", ["None"], ["", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "num_blocks", ",", "stride", ")", ":", "\n", "        ", "strides", "=", "[", "stride", "]", "+", "[", "1", "]", "*", "(", "num_blocks", "-", "1", ")", "\n", "layers", "=", "[", "]", "\n", "for", "stride", "in", "strides", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "in_planes", ",", "planes", ",", "stride", ")", ")", "\n", "self", ".", "in_planes", "=", "planes", "*", "block", ".", "expansion", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.resnet_cifar.ResNet.forward": [[101, 112], ["torch.relu", "torch.relu", "torch.relu", "resnet_cifar.ResNet.layer1", "resnet_cifar.ResNet.layer2", "resnet_cifar.ResNet.layer3", "resnet_cifar.ResNet.layer4", "torch.avg_pool2d", "torch.avg_pool2d", "torch.avg_pool2d", "resnet_cifar.ResNet.view", "resnet_cifar.ResNet.linear", "resnet_cifar.ResNet.l2norm", "resnet_cifar.ResNet.bn1", "resnet_cifar.ResNet.size", "resnet_cifar.ResNet.conv1"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "out", "=", "F", ".", "relu", "(", "self", ".", "bn1", "(", "self", ".", "conv1", "(", "x", ")", ")", ")", "\n", "out", "=", "self", ".", "layer1", "(", "out", ")", "\n", "out", "=", "self", ".", "layer2", "(", "out", ")", "\n", "out", "=", "self", ".", "layer3", "(", "out", ")", "\n", "out", "=", "self", ".", "layer4", "(", "out", ")", "\n", "out", "=", "F", ".", "avg_pool2d", "(", "out", ",", "self", ".", "pool_len", ")", "\n", "out", "=", "out", ".", "view", "(", "out", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "out", "=", "self", ".", "linear", "(", "out", ")", "\n", "out", "=", "self", ".", "l2norm", "(", "out", ")", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.resnet_cifar.ResNet18": [[114, 116], ["resnet_cifar.ResNet"], "function", ["None"], ["", "", "def", "ResNet18", "(", "pool_len", "=", "4", ",", "low_dim", "=", "128", ")", ":", "\n", "    ", "return", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "pool_len", ",", "low_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.resnet_cifar.ResNet34": [[117, 119], ["resnet_cifar.ResNet"], "function", ["None"], ["", "def", "ResNet34", "(", "pool_len", "=", "4", ",", "low_dim", "=", "128", ")", ":", "\n", "    ", "return", "ResNet", "(", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "pool_len", ",", "low_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.resnet_cifar.ResNet50": [[120, 122], ["resnet_cifar.ResNet"], "function", ["None"], ["", "def", "ResNet50", "(", "pool_len", "=", "4", ",", "low_dim", "=", "128", ")", ":", "\n", "    ", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "pool_len", ",", "low_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.resnet_cifar.ResNet101": [[123, 125], ["resnet_cifar.ResNet"], "function", ["None"], ["", "def", "ResNet101", "(", "pool_len", "=", "4", ",", "low_dim", "=", "128", ")", ":", "\n", "    ", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "pool_len", ",", "low_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.resnet_cifar.ResNet152": [[126, 128], ["resnet_cifar.ResNet"], "function", ["None"], ["", "def", "ResNet152", "(", "pool_len", "=", "4", ",", "low_dim", "=", "128", ")", ":", "\n", "    ", "return", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ",", "pool_len", ",", "low_dim", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.resnet_cifar.test": [[130, 137], ["resnet_cifar.ResNet18", "ResNet18.", "print", "torch.autograd.Variable", "net.size", "torch.randn", "torch.randn", "torch.randn"], "function", ["home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.resnet_cifar.ResNet18"], ["", "def", "test", "(", ")", ":", "\n", "    ", "net", "=", "ResNet18", "(", ")", "\n", "# y = net(Variable(torch.randn(1,3,32,32)))", "\n", "# pdb.set_trace()", "\n", "y", "=", "net", "(", "Variable", "(", "torch", ".", "randn", "(", "1", ",", "3", ",", "96", ",", "96", ")", ")", ")", "\n", "# pdb.set_trace()", "\n", "print", "(", "y", ".", "size", "(", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.resnet.BasicBlock.__init__": [[28, 37], ["torch.Module.__init__", "resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "resnet.conv3x3", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d"], "methods", ["home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.inception_v1.Model.__init__", "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.resnet.conv3x3", "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.resnet.conv3x3"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "BasicBlock", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "conv3x3", "(", "inplanes", ",", "planes", ",", "stride", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "conv2", "=", "conv3x3", "(", "planes", ",", "planes", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.resnet.BasicBlock.forward": [[38, 55], ["resnet.BasicBlock.conv1", "resnet.BasicBlock.bn1", "resnet.BasicBlock.relu", "resnet.BasicBlock.conv2", "resnet.BasicBlock.bn2", "resnet.BasicBlock.relu", "resnet.BasicBlock.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.resnet.Bottleneck.__init__": [[60, 72], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.inception_v1.Model.__init__"], ["def", "__init__", "(", "self", ",", "inplanes", ",", "planes", ",", "stride", "=", "1", ",", "downsample", "=", "None", ")", ":", "\n", "        ", "super", "(", "Bottleneck", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "inplanes", ",", "planes", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv2", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn2", "=", "nn", ".", "BatchNorm2d", "(", "planes", ")", "\n", "self", ".", "conv3", "=", "nn", ".", "Conv2d", "(", "planes", ",", "planes", "*", "4", ",", "kernel_size", "=", "1", ",", "bias", "=", "False", ")", "\n", "self", ".", "bn3", "=", "nn", ".", "BatchNorm2d", "(", "planes", "*", "4", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "downsample", "=", "downsample", "\n", "self", ".", "stride", "=", "stride", "\n", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.resnet.Bottleneck.forward": [[73, 94], ["resnet.Bottleneck.conv1", "resnet.Bottleneck.bn1", "resnet.Bottleneck.relu", "resnet.Bottleneck.conv2", "resnet.Bottleneck.bn2", "resnet.Bottleneck.relu", "resnet.Bottleneck.conv3", "resnet.Bottleneck.bn3", "resnet.Bottleneck.relu", "resnet.Bottleneck.downsample"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "residual", "=", "x", "\n", "\n", "out", "=", "self", ".", "conv1", "(", "x", ")", "\n", "out", "=", "self", ".", "bn1", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv2", "(", "out", ")", "\n", "out", "=", "self", ".", "bn2", "(", "out", ")", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "out", "=", "self", ".", "conv3", "(", "out", ")", "\n", "out", "=", "self", ".", "bn3", "(", "out", ")", "\n", "\n", "if", "self", ".", "downsample", "is", "not", "None", ":", "\n", "            ", "residual", "=", "self", ".", "downsample", "(", "x", ")", "\n", "\n", "", "out", "+=", "residual", "\n", "out", "=", "self", ".", "relu", "(", "out", ")", "\n", "\n", "return", "out", "\n", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.resnet.ResNet.__init__": [[98, 122], ["torch.Module.__init__", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "resnet.ResNet._make_layer", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "torch.Linear", "torch.Linear", "torch.Linear", "models.normalize.Normalize", "torch.Dropout", "torch.Dropout", "torch.Dropout", "resnet.ResNet.modules", "isinstance", "m.weight.data.normal_", "isinstance", "math.sqrt", "m.weight.data.fill_", "m.bias.data.zero_"], "methods", ["home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.inception_v1.Model.__init__", "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.resnet.ResNet._make_layer", "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.resnet.ResNet._make_layer"], ["    ", "def", "__init__", "(", "self", ",", "block", ",", "layers", ",", "low_dim", "=", "1000", ",", "is_feature", "=", "None", ")", ":", "\n", "        ", "self", ".", "inplanes", "=", "64", "\n", "super", "(", "ResNet", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "conv1", "=", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "kernel_size", "=", "7", ",", "stride", "=", "2", ",", "padding", "=", "3", ",", "\n", "bias", "=", "False", ")", "\n", "self", ".", "bn1", "=", "nn", ".", "BatchNorm2d", "(", "64", ")", "\n", "self", ".", "relu", "=", "nn", ".", "ReLU", "(", "inplace", "=", "True", ")", "\n", "self", ".", "maxpool", "=", "nn", ".", "MaxPool2d", "(", "kernel_size", "=", "3", ",", "stride", "=", "2", ",", "padding", "=", "1", ")", "\n", "self", ".", "layer1", "=", "self", ".", "_make_layer", "(", "block", ",", "64", ",", "layers", "[", "0", "]", ")", "\n", "self", ".", "layer2", "=", "self", ".", "_make_layer", "(", "block", ",", "128", ",", "layers", "[", "1", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer3", "=", "self", ".", "_make_layer", "(", "block", ",", "256", ",", "layers", "[", "2", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "layer4", "=", "self", ".", "_make_layer", "(", "block", ",", "512", ",", "layers", "[", "3", "]", ",", "stride", "=", "2", ")", "\n", "self", ".", "avgpool", "=", "nn", ".", "AvgPool2d", "(", "7", ",", "stride", "=", "1", ")", "\n", "self", ".", "fc", "=", "nn", ".", "Linear", "(", "512", "*", "block", ".", "expansion", ",", "low_dim", ")", "\n", "self", ".", "l2norm", "=", "Normalize", "(", "2", ")", "\n", "self", ".", "dropout", "=", "nn", ".", "Dropout", "(", "p", "=", "0.5", ")", "\n", "\n", "for", "m", "in", "self", ".", "modules", "(", ")", ":", "\n", "            ", "if", "isinstance", "(", "m", ",", "nn", ".", "Conv2d", ")", ":", "\n", "                ", "n", "=", "m", ".", "kernel_size", "[", "0", "]", "*", "m", ".", "kernel_size", "[", "1", "]", "*", "m", ".", "out_channels", "\n", "m", ".", "weight", ".", "data", ".", "normal_", "(", "0", ",", "math", ".", "sqrt", "(", "2.", "/", "n", ")", ")", "\n", "", "elif", "isinstance", "(", "m", ",", "nn", ".", "BatchNorm2d", ")", ":", "\n", "                ", "m", ".", "weight", ".", "data", ".", "fill_", "(", "1", ")", "\n", "m", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.resnet.ResNet._make_layer": [[124, 140], ["layers.append", "range", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "block", "layers.append", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "torch.BatchNorm2d", "block"], "methods", ["None"], ["", "", "", "def", "_make_layer", "(", "self", ",", "block", ",", "planes", ",", "blocks", ",", "stride", "=", "1", ")", ":", "\n", "        ", "downsample", "=", "None", "\n", "if", "stride", "!=", "1", "or", "self", ".", "inplanes", "!=", "planes", "*", "block", ".", "expansion", ":", "\n", "            ", "downsample", "=", "nn", ".", "Sequential", "(", "\n", "nn", ".", "Conv2d", "(", "self", ".", "inplanes", ",", "planes", "*", "block", ".", "expansion", ",", "\n", "kernel_size", "=", "1", ",", "stride", "=", "stride", ",", "bias", "=", "False", ")", ",", "\n", "nn", ".", "BatchNorm2d", "(", "planes", "*", "block", ".", "expansion", ")", ",", "\n", ")", "\n", "\n", "", "layers", "=", "[", "]", "\n", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ",", "stride", ",", "downsample", ")", ")", "\n", "self", ".", "inplanes", "=", "planes", "*", "block", ".", "expansion", "\n", "for", "i", "in", "range", "(", "1", ",", "blocks", ")", ":", "\n", "            ", "layers", ".", "append", "(", "block", "(", "self", ".", "inplanes", ",", "planes", ")", ")", "\n", "\n", "", "return", "nn", ".", "Sequential", "(", "*", "layers", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.resnet.ResNet.forward": [[141, 157], ["resnet.ResNet.conv1", "resnet.ResNet.bn1", "resnet.ResNet.relu", "resnet.ResNet.maxpool", "resnet.ResNet.layer1", "resnet.ResNet.layer2", "resnet.ResNet.layer3", "resnet.ResNet.layer4", "resnet.ResNet.avgpool", "resnet.ResNet.view", "resnet.ResNet.fc", "resnet.ResNet.l2norm", "resnet.ResNet.size"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "x", ")", ":", "\n", "        ", "x", "=", "self", ".", "conv1", "(", "x", ")", "\n", "x", "=", "self", ".", "bn1", "(", "x", ")", "\n", "x", "=", "self", ".", "relu", "(", "x", ")", "\n", "x", "=", "self", ".", "maxpool", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "layer1", "(", "x", ")", "\n", "x", "=", "self", ".", "layer2", "(", "x", ")", "\n", "x", "=", "self", ".", "layer3", "(", "x", ")", "\n", "x", "=", "self", ".", "layer4", "(", "x", ")", "\n", "\n", "x", "=", "self", ".", "avgpool", "(", "x", ")", "\n", "x", "=", "x", ".", "view", "(", "x", ".", "size", "(", "0", ")", ",", "-", "1", ")", "\n", "x", "=", "self", ".", "fc", "(", "x", ")", "\n", "x", "=", "self", ".", "l2norm", "(", "x", ")", "\n", "return", "x", "\n", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.resnet.conv3x3": [[19, 23], ["torch.Conv2d"], "function", ["None"], ["def", "conv3x3", "(", "in_planes", ",", "out_planes", ",", "stride", "=", "1", ")", ":", "\n", "    ", "\"3x3 convolution with padding\"", "\n", "return", "nn", ".", "Conv2d", "(", "in_planes", ",", "out_planes", ",", "kernel_size", "=", "3", ",", "stride", "=", "stride", ",", "\n", "padding", "=", "1", ",", "bias", "=", "False", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.resnet.resnet18": [[159, 190], ["resnet.ResNet", "ResNet.state_dict", "torch.load_url", "model.state_dict.update", "ResNet.load_state_dict", "torch.Linear", "torch.init.orthogonal_", "ResNet.fc.bias.data.zero_", "model_zoo.load_url.items"], "function", ["None"], ["", "", "def", "resnet18", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-18 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "2", ",", "2", ",", "2", ",", "2", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model_dict", "=", "model", ".", "state_dict", "(", ")", "\n", "pretrained_dict", "=", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet18'", "]", ")", "\n", "pretrained_dict", "=", "{", "k", ":", "v", "for", "k", ",", "v", "in", "pretrained_dict", ".", "items", "(", ")", "if", "k", "in", "model_dict", "}", "\n", "model_dict", ".", "update", "(", "pretrained_dict", ")", "\n", "model", ".", "load_state_dict", "(", "model_dict", ")", "\n", "\n", "# for param in model.parameters():", "\n", "# param.requires_grad = False", "\n", "# W = model.fc.weight.data.t()", "\n", "\n", "# U,S,V = torch.svd(W,some=False)", "\n", "# S_ = torch.zeros(U.size(0),V.size(0))", "\n", "# S = torch.diag(S)", "\n", "# S_[:S.size(0),:S.size(1)] = S", "\n", "# W = torch.mm(U,S_)", "\n", "# model.fc.weight.data = W.t()", "\n", "fc_features", "=", "model", ".", "fc", ".", "in_features", "\n", "model", ".", "fc", "=", "nn", ".", "Linear", "(", "fc_features", ",", "128", ")", "\n", "nn", ".", "init", ".", "orthogonal_", "(", "model", ".", "fc", ".", "weight", ")", "\n", "# model.fc.weight.data.normal_(0, math.sqrt(2. / 128))", "\n", "model", ".", "fc", ".", "bias", ".", "data", ".", "zero_", "(", ")", "\n", "# model.load_state_dict(model_zoo.load_url(model_urls['resnet18']))", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.resnet.resnet34": [[192, 202], ["resnet.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "resnet34", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-34 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "BasicBlock", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet34'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.resnet.resnet50": [[204, 214], ["resnet.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "resnet50", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-50 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "6", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet50'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.resnet.resnet101": [[216, 226], ["resnet.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "resnet101", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-101 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "4", ",", "23", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet101'", "]", ")", ")", "\n", "", "return", "model", "\n", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.resnet.resnet152": [[228, 238], ["resnet.ResNet", "ResNet.load_state_dict", "torch.load_url"], "function", ["None"], ["", "def", "resnet152", "(", "pretrained", "=", "False", ",", "**", "kwargs", ")", ":", "\n", "    ", "\"\"\"Constructs a ResNet-152 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"", "\n", "model", "=", "ResNet", "(", "Bottleneck", ",", "[", "3", ",", "8", ",", "36", ",", "3", "]", ",", "**", "kwargs", ")", "\n", "if", "pretrained", ":", "\n", "        ", "model", ".", "load_state_dict", "(", "model_zoo", ".", "load_url", "(", "model_urls", "[", "'resnet152'", "]", ")", ")", "\n", "", "return", "model", "\n", "", ""]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.inception_v1.inception_v1_googlenet.__init__": [[19, 54], ["torch.Sequential.__init__", "collections.OrderedDict", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "inception_v1.InceptionModule", "inception_v1.InceptionModule", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "inception_v1.InceptionModule", "inception_v1.InceptionModule", "inception_v1.InceptionModule", "inception_v1.InceptionModule", "inception_v1.InceptionModule", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "inception_v1.InceptionModule", "inception_v1.InceptionModule", "torch.AvgPool2d", "torch.AvgPool2d", "torch.AvgPool2d", "collections.OrderedDict", "collections.OrderedDict", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.CrossMapLRN2d", "torch.CrossMapLRN2d", "torch.CrossMapLRN2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.CrossMapLRN2d", "torch.CrossMapLRN2d", "torch.CrossMapLRN2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d"], "methods", ["home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.inception_v1.Model.__init__"], ["def", "__init__", "(", "self", ")", ":", "\n", "\t\t", "super", "(", "inception_v1_googlenet", ",", "self", ")", ".", "__init__", "(", "OrderedDict", "(", "[", "\n", "(", "'conv1'", ",", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'7x7_s2'", ",", "nn", ".", "Conv2d", "(", "3", ",", "64", ",", "(", "7", ",", "7", ")", ",", "(", "2", ",", "2", ")", ",", "(", "3", ",", "3", ")", ")", ")", ",", "\n", "(", "'relu1'", ",", "nn", ".", "ReLU", "(", "True", ")", ")", ",", "\n", "(", "'pool1'", ",", "nn", ".", "MaxPool2d", "(", "(", "3", ",", "3", ")", ",", "(", "2", ",", "2", ")", ",", "ceil_mode", "=", "True", ")", ")", ",", "\n", "(", "'lrn1'", ",", "nn", ".", "CrossMapLRN2d", "(", "5", ",", "0.0001", ",", "0.75", ",", "1", ")", ")", "\n", "]", ")", ")", ")", ",", "\n", "\n", "(", "'conv2'", ",", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'3x3_reduce'", ",", "nn", ".", "Conv2d", "(", "64", ",", "64", ",", "(", "1", ",", "1", ")", ",", "(", "1", ",", "1", ")", ",", "(", "0", ",", "0", ")", ")", ")", ",", "\n", "(", "'relu1'", ",", "nn", ".", "ReLU", "(", "True", ")", ")", ",", "\n", "(", "'3x3'", ",", "nn", ".", "Conv2d", "(", "64", ",", "192", ",", "(", "3", ",", "3", ")", ",", "(", "1", ",", "1", ")", ",", "(", "1", ",", "1", ")", ")", ")", ",", "\n", "(", "'relu2'", ",", "nn", ".", "ReLU", "(", "True", ")", ")", ",", "\n", "(", "'lrn2'", ",", "nn", ".", "CrossMapLRN2d", "(", "5", ",", "0.0001", ",", "0.75", ",", "1", ")", ")", ",", "\n", "(", "'pool2'", ",", "nn", ".", "MaxPool2d", "(", "(", "3", ",", "3", ")", ",", "(", "2", ",", "2", ")", ",", "ceil_mode", "=", "True", ")", ")", "\n", "]", ")", ")", ")", ",", "\n", "\n", "(", "'inception_3a'", ",", "InceptionModule", "(", "192", ",", "64", ",", "96", ",", "128", ",", "16", ",", "32", ",", "32", ")", ")", ",", "\n", "(", "'inception_3b'", ",", "InceptionModule", "(", "256", ",", "128", ",", "128", ",", "192", ",", "32", ",", "96", ",", "64", ")", ")", ",", "\n", "\n", "(", "'pool3'", ",", "nn", ".", "MaxPool2d", "(", "(", "3", ",", "3", ")", ",", "(", "2", ",", "2", ")", ",", "ceil_mode", "=", "True", ")", ")", ",", "\n", "\n", "(", "'inception_4a'", ",", "InceptionModule", "(", "480", ",", "192", ",", "96", ",", "208", ",", "16", ",", "48", ",", "64", ")", ")", ",", "\n", "(", "'inception_4b'", ",", "InceptionModule", "(", "512", ",", "160", ",", "112", ",", "224", ",", "24", ",", "64", ",", "64", ")", ")", ",", "\n", "(", "'inception_4c'", ",", "InceptionModule", "(", "512", ",", "128", ",", "128", ",", "256", ",", "24", ",", "64", ",", "64", ")", ")", ",", "\n", "(", "'inception_4d'", ",", "InceptionModule", "(", "512", ",", "112", ",", "144", ",", "288", ",", "32", ",", "64", ",", "64", ")", ")", ",", "\n", "(", "'inception_4e'", ",", "InceptionModule", "(", "528", ",", "256", ",", "160", ",", "320", ",", "32", ",", "128", ",", "128", ")", ")", ",", "\n", "\n", "(", "'pool4'", ",", "nn", ".", "MaxPool2d", "(", "(", "3", ",", "3", ")", ",", "(", "2", ",", "2", ")", ",", "ceil_mode", "=", "True", ")", ")", ",", "\n", "\n", "(", "'inception_5a'", ",", "InceptionModule", "(", "832", ",", "256", ",", "160", ",", "320", ",", "32", ",", "128", ",", "128", ")", ")", ",", "\n", "(", "'inception_5b'", ",", "InceptionModule", "(", "832", ",", "384", ",", "192", ",", "384", ",", "48", ",", "128", ",", "128", ")", ")", ",", "\n", "\n", "(", "'pool5'", ",", "nn", ".", "AvgPool2d", "(", "(", "7", ",", "7", ")", ",", "(", "1", ",", "1", ")", ",", "ceil_mode", "=", "True", ")", ")", ",", "\n", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.inception_v1.InceptionModule.__init__": [[59, 91], ["torch.Module.__init__", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "torch.Sequential", "collections.OrderedDict", "collections.OrderedDict", "collections.OrderedDict", "collections.OrderedDict", "container.named_children", "inception_v1.InceptionModule.add_module", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU", "torch.MaxPool2d", "torch.MaxPool2d", "torch.MaxPool2d", "torch.Conv2d", "torch.Conv2d", "torch.Conv2d", "torch.ReLU", "torch.ReLU", "torch.ReLU"], "methods", ["home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.inception_v1.Model.__init__"], ["\t", "def", "__init__", "(", "self", ",", "inplane", ",", "outplane_a1x1", ",", "outplane_b3x3_reduce", ",", "outplane_b3x3", ",", "outplane_c5x5_reduce", ",", "outplane_c5x5", ",", "outplane_pool_proj", ")", ":", "\n", "\t\t", "super", "(", "InceptionModule", ",", "self", ")", ".", "__init__", "(", ")", "\n", "a", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'1x1'", ",", "nn", ".", "Conv2d", "(", "inplane", ",", "outplane_a1x1", ",", "(", "1", ",", "1", ")", ",", "(", "1", ",", "1", ")", ",", "(", "0", ",", "0", ")", ")", ")", ",", "\n", "(", "'1x1_relu'", ",", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "]", ")", ")", "\n", "\n", "b", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'3x3_reduce'", ",", "nn", ".", "Conv2d", "(", "inplane", ",", "outplane_b3x3_reduce", ",", "(", "1", ",", "1", ")", ",", "(", "1", ",", "1", ")", ",", "(", "0", ",", "0", ")", ")", ")", ",", "\n", "(", "'3x3_relu1'", ",", "nn", ".", "ReLU", "(", "True", ")", ")", ",", "\n", "(", "'3x3'", ",", "nn", ".", "Conv2d", "(", "outplane_b3x3_reduce", ",", "outplane_b3x3", ",", "(", "3", ",", "3", ")", ",", "(", "1", ",", "1", ")", ",", "(", "1", ",", "1", ")", ")", ")", ",", "\n", "(", "'3x3_relu2'", ",", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "]", ")", ")", "\n", "\n", "c", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'5x5_reduce'", ",", "nn", ".", "Conv2d", "(", "inplane", ",", "outplane_c5x5_reduce", ",", "(", "1", ",", "1", ")", ",", "(", "1", ",", "1", ")", ",", "(", "0", ",", "0", ")", ")", ")", ",", "\n", "(", "'5x5_relu1'", ",", "nn", ".", "ReLU", "(", "True", ")", ")", ",", "\n", "(", "'5x5'", ",", "nn", ".", "Conv2d", "(", "outplane_c5x5_reduce", ",", "outplane_c5x5", ",", "(", "5", ",", "5", ")", ",", "(", "1", ",", "1", ")", ",", "(", "2", ",", "2", ")", ")", ")", ",", "\n", "(", "'5x5_relu2'", ",", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "]", ")", ")", "\n", "\n", "d", "=", "nn", ".", "Sequential", "(", "OrderedDict", "(", "[", "\n", "(", "'pool_pool'", ",", "nn", ".", "MaxPool2d", "(", "(", "3", ",", "3", ")", ",", "(", "1", ",", "1", ")", ",", "(", "1", ",", "1", ")", ")", ")", ",", "\n", "(", "'pool_proj'", ",", "nn", ".", "Conv2d", "(", "inplane", ",", "outplane_pool_proj", ",", "(", "1", ",", "1", ")", ",", "(", "1", ",", "1", ")", ",", "(", "0", ",", "0", ")", ")", ")", ",", "\n", "(", "'pool_relu'", ",", "nn", ".", "ReLU", "(", "True", ")", ")", "\n", "]", ")", ")", "\n", "\n", "for", "container", "in", "[", "a", ",", "b", ",", "c", ",", "d", "]", ":", "\n", "\t\t\t", "for", "name", ",", "module", "in", "container", ".", "named_children", "(", ")", ":", "\n", "\t\t\t\t", "self", ".", "add_module", "(", "name", ",", "module", ")", "\n", "\n", "", "", "self", ".", "branches", "=", "[", "a", ",", "b", ",", "c", ",", "d", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.inception_v1.InceptionModule.forward": [[92, 94], ["torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "torch.cat", "branch"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "\t\t", "return", "torch", ".", "cat", "(", "[", "branch", "(", "input", ")", "for", "branch", "in", "self", ".", "branches", "]", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.inception_v1.Model.__init__": [[97, 102], ["torch.Module.__init__", "torch.Linear", "torch.Linear", "torch.Linear", "models.normalize.Normalize"], "methods", ["home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.inception_v1.Model.__init__"], ["    ", "def", "__init__", "(", "self", ",", "base_model", ",", "low_dim", "=", "128", ")", ":", "\n", "        ", "super", "(", "Model", ",", "self", ")", ".", "__init__", "(", ")", "\n", "self", ".", "base_model", "=", "base_model", "\n", "self", ".", "embedder", "=", "nn", ".", "Linear", "(", "base_model", ".", "output_size", ",", "low_dim", ")", "\n", "self", ".", "l2norm", "=", "Normalize", "(", "2", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.inception_v1.Model.forward": [[104, 112], ["inception_v1.Model.base_model().view", "inception_v1.Model.embedder", "inception_v1.Model.l2norm", "len", "inception_v1.Model.base_model", "inception_v1.Model.l2norm"], "methods", ["None"], ["", "def", "forward", "(", "self", ",", "input", ")", ":", "\n", "        ", "pool5", "=", "self", ".", "base_model", "(", "input", ")", ".", "view", "(", "len", "(", "input", ")", ",", "-", "1", ")", "\n", "embed", "=", "self", ".", "embedder", "(", "pool5", ")", "\n", "embed", "=", "self", ".", "l2norm", "(", "embed", ")", "\n", "if", "self", ".", "training", ":", "\n", "            ", "return", "embed", "\n", "", "else", ":", "\n", "            ", "return", "embed", ",", "self", ".", "l2norm", "(", "pool5", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.models.inception_v1.inception_v1_ml": [[114, 121], ["inception_v1.inception_v1_googlenet", "os.path.exists", "inception_v1.Model", "inception_v1_googlenet.load_state_dict", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "torch.from_numpy().cuda", "hickle.load().items", "torch.from_numpy", "torch.from_numpy", "torch.from_numpy", "hickle.load"], "function", ["None"], ["", "", "", "def", "inception_v1_ml", "(", "pretrained", "=", "False", ",", "low_dim", "=", "128", ")", ":", "\n", "    ", "base_model", "=", "inception_v1_googlenet", "(", ")", "\n", "base_model_weights_path", "=", "'models/googlenet.h5'", "\n", "if", "os", ".", "path", ".", "exists", "(", "base_model_weights_path", ")", ":", "\n", "        ", "base_model", ".", "load_state_dict", "(", "{", "k", ":", "torch", ".", "from_numpy", "(", "v", ")", ".", "cuda", "(", ")", "for", "k", ",", "v", "in", "hickle", ".", "load", "(", "base_model_weights_path", ")", ".", "items", "(", ")", "}", ")", "\n", "", "net", "=", "Model", "(", "base_model", ",", "low_dim", ")", "\n", "return", "net", "\n", "", ""]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.pre_process.pre_process_bird.trim": [[9, 22], ["PIL.Image.new", "PIL.ImageChops.difference", "PIL.ImageChops.add", "ImageChops.add.getbbox", "max", "max", "min", "min", "im.crop"], "function", ["None"], ["def", "trim", "(", "im", ")", ":", "\n", "    ", "bg", "=", "Image", ".", "new", "(", "im", ".", "mode", ",", "im", ".", "size", ",", "'white'", ")", "\n", "diff", "=", "ImageChops", ".", "difference", "(", "im", ",", "bg", ")", "\n", "diff", "=", "ImageChops", ".", "add", "(", "diff", ",", "diff", ",", "2.0", ",", "-", "55", ")", "\n", "bbox", "=", "diff", ".", "getbbox", "(", ")", "\n", "if", "bbox", ":", "\n", "        ", "a", "=", "max", "(", "0", ",", "bbox", "[", "0", "]", "-", "20", ")", "\n", "b", "=", "max", "(", "0", ",", "bbox", "[", "1", "]", "-", "20", ")", "\n", "c", "=", "min", "(", "im", ".", "size", "[", "0", "]", ",", "bbox", "[", "2", "]", "+", "20", ")", "\n", "d", "=", "min", "(", "im", ".", "size", "[", "1", "]", ",", "bbox", "[", "3", "]", "+", "20", ")", "\n", "bbox", "=", "(", "a", ",", "b", ",", "c", ",", "d", ")", "\n", "return", "im", ".", "crop", "(", "bbox", ")", "\n", "", "return", "im", "\n", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.pre_process.pre_process_bird.pad": [[23, 36], ["PIL.Image.new", "Image.new.paste", "im.resize.resize", "im.resize.resize", "im.resize.resize"], "function", ["None"], ["", "def", "pad", "(", "im", ")", ":", "\n", "    ", "if", "im", ".", "size", "[", "0", "]", ">", "im", ".", "size", "[", "1", "]", ":", "\n", "        ", "im", "=", "im", ".", "resize", "(", "(", "fix_image_width", ",", "fix_image_height", "*", "im", ".", "size", "[", "1", "]", "/", "im", ".", "size", "[", "0", "]", ")", ",", "Image", ".", "ANTIALIAS", ")", "\n", "", "elif", "im", ".", "size", "[", "1", "]", ">", "im", ".", "size", "[", "0", "]", ":", "\n", "        ", "im", "=", "im", ".", "resize", "(", "(", "fix_image_width", "*", "im", ".", "size", "[", "0", "]", "/", "im", ".", "size", "[", "1", "]", ",", "fix_image_height", ")", ",", "Image", ".", "ANTIALIAS", ")", "\n", "", "else", ":", "\n", "        ", "im", "=", "im", ".", "resize", "(", "(", "fix_image_width", ",", "fix_image_height", ")", ",", "Image", ".", "ANTIALIAS", ")", "\n", "\n", "", "new_im", "=", "Image", ".", "new", "(", "im", ".", "mode", ",", "(", "fix_image_width", ",", "fix_image_height", ")", ",", "'white'", ")", "\n", "\n", "new_im", ".", "paste", "(", "im", ",", "(", "(", "fix_image_width", "-", "im", ".", "size", "[", "0", "]", ")", "/", "2", ",", "\n", "(", "fix_image_height", "-", "im", ".", "size", "[", "1", "]", ")", "/", "2", ")", ")", "\n", "return", "new_im", "\n", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.pre_process.pre_process_product.trim": [[12, 25], ["PIL.Image.new", "PIL.ImageChops.difference", "PIL.ImageChops.add", "ImageChops.add.getbbox", "max", "max", "min", "min", "im.crop"], "function", ["None"], ["def", "trim", "(", "im", ")", ":", "\n", "    ", "bg", "=", "Image", ".", "new", "(", "im", ".", "mode", ",", "im", ".", "size", ",", "'white'", ")", "\n", "diff", "=", "ImageChops", ".", "difference", "(", "im", ",", "bg", ")", "\n", "diff", "=", "ImageChops", ".", "add", "(", "diff", ",", "diff", ",", "2.0", ",", "-", "55", ")", "\n", "bbox", "=", "diff", ".", "getbbox", "(", ")", "\n", "if", "bbox", ":", "\n", "        ", "a", "=", "max", "(", "0", ",", "bbox", "[", "0", "]", "-", "20", ")", "\n", "b", "=", "max", "(", "0", ",", "bbox", "[", "1", "]", "-", "20", ")", "\n", "c", "=", "min", "(", "im", ".", "size", "[", "0", "]", ",", "bbox", "[", "2", "]", "+", "20", ")", "\n", "d", "=", "min", "(", "im", ".", "size", "[", "1", "]", ",", "bbox", "[", "3", "]", "+", "20", ")", "\n", "bbox", "=", "(", "a", ",", "b", ",", "c", ",", "d", ")", "\n", "return", "im", ".", "crop", "(", "bbox", ")", "\n", "", "return", "im", "\n", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.pre_process.pre_process_product.pad": [[26, 39], ["PIL.Image.new", "Image.new.paste", "im.resize.resize", "im.resize.resize", "im.resize.resize"], "function", ["None"], ["", "def", "pad", "(", "im", ")", ":", "\n", "    ", "if", "im", ".", "size", "[", "0", "]", ">", "im", ".", "size", "[", "1", "]", ":", "\n", "        ", "im", "=", "im", ".", "resize", "(", "(", "fix_image_width", ",", "fix_image_height", "*", "im", ".", "size", "[", "1", "]", "/", "im", ".", "size", "[", "0", "]", ")", ",", "Image", ".", "ANTIALIAS", ")", "\n", "", "elif", "im", ".", "size", "[", "1", "]", ">", "im", ".", "size", "[", "0", "]", ":", "\n", "        ", "im", "=", "im", ".", "resize", "(", "(", "fix_image_width", "*", "im", ".", "size", "[", "0", "]", "/", "im", ".", "size", "[", "1", "]", ",", "fix_image_height", ")", ",", "Image", ".", "ANTIALIAS", ")", "\n", "", "else", ":", "\n", "        ", "im", "=", "im", ".", "resize", "(", "(", "fix_image_width", ",", "fix_image_height", ")", ",", "Image", ".", "ANTIALIAS", ")", "\n", "\n", "", "new_im", "=", "Image", ".", "new", "(", "im", ".", "mode", ",", "(", "fix_image_width", ",", "fix_image_height", ")", ",", "'white'", ")", "\n", "\n", "new_im", ".", "paste", "(", "im", ",", "(", "(", "fix_image_width", "-", "im", ".", "size", "[", "0", "]", ")", "/", "2", ",", "\n", "(", "fix_image_height", "-", "im", ".", "size", "[", "1", "]", ")", "/", "2", ")", ")", "\n", "return", "new_im", "\n", "\n"]], "home.repos.pwc.inspect_result.mangye16_Unsupervised_Embedding_Learning.pre_process.pre_process_car.trim": [[12, 19], ["PIL.Image.new", "PIL.ImageChops.difference", "PIL.ImageChops.add", "ImageChops.add.getbbox", "im.crop"], "function", ["None"], ["def", "trim", "(", "im", ")", ":", "\n", "    ", "bg", "=", "Image", ".", "new", "(", "im", ".", "mode", ",", "im", ".", "size", ",", "'white'", ")", "\n", "diff", "=", "ImageChops", ".", "difference", "(", "im", ",", "bg", ")", "\n", "diff", "=", "ImageChops", ".", "add", "(", "diff", ",", "diff", ",", "2.0", ",", "-", "55", ")", "\n", "bbox", "=", "diff", ".", "getbbox", "(", ")", "\n", "if", "bbox", ":", "\n", "        ", "return", "im", ".", "crop", "(", "bbox", ")", "\n", "\n"]]}