{"home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.seed_test.test_seed_reach": [[7, 27], ["gym.make", "range", "numpy.allclose", "numpy.allclose", "numpy.allclose", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "gym.make.reset", "final_states.append", "gym.make.step"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip.reset", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.step"], ["def", "test_seed_reach", "(", ")", ":", "\n", "    ", "final_states", "=", "[", "]", "\n", "env", "=", "gym", ".", "make", "(", "\"PandaReach-v2\"", ")", "\n", "actions", "=", "[", "\n", "np", ".", "array", "(", "[", "-", "0.931", ",", "0.979", ",", "-", "0.385", "]", ")", ",", "\n", "np", ".", "array", "(", "[", "-", "0.562", ",", "0.391", ",", "-", "0.532", "]", ")", ",", "\n", "np", ".", "array", "(", "[", "0.042", ",", "0.254", ",", "-", "0.624", "]", ")", ",", "\n", "np", ".", "array", "(", "[", "0.465", ",", "0.745", ",", "0.284", "]", ")", ",", "\n", "np", ".", "array", "(", "[", "-", "0.237", ",", "0.995", ",", "-", "0.425", "]", ")", ",", "\n", "np", ".", "array", "(", "[", "0.67", ",", "0.472", ",", "0.972", "]", ")", ",", "\n", "]", "\n", "for", "_", "in", "range", "(", "2", ")", ":", "\n", "        ", "env", ".", "reset", "(", "seed", "=", "12345", ")", "\n", "for", "action", "in", "actions", ":", "\n", "            ", "state", ",", "_", ",", "_", ",", "_", "=", "env", ".", "step", "(", "action", ")", "\n", "", "final_states", ".", "append", "(", "state", ")", "\n", "\n", "", "assert", "np", ".", "allclose", "(", "final_states", "[", "0", "]", "[", "\"observation\"", "]", ",", "final_states", "[", "1", "]", "[", "\"observation\"", "]", ")", "\n", "assert", "np", ".", "allclose", "(", "final_states", "[", "0", "]", "[", "\"achieved_goal\"", "]", ",", "final_states", "[", "1", "]", "[", "\"achieved_goal\"", "]", ")", "\n", "assert", "np", ".", "allclose", "(", "final_states", "[", "0", "]", "[", "\"desired_goal\"", "]", ",", "final_states", "[", "1", "]", "[", "\"desired_goal\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.seed_test.test_seed_push": [[29, 49], ["gym.make", "range", "numpy.allclose", "numpy.allclose", "numpy.allclose", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "gym.make.reset", "final_states.append", "gym.make.step"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip.reset", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.step"], ["", "def", "test_seed_push", "(", ")", ":", "\n", "    ", "final_states", "=", "[", "]", "\n", "env", "=", "gym", ".", "make", "(", "\"PandaPush-v2\"", ")", "\n", "actions", "=", "[", "\n", "np", ".", "array", "(", "[", "0.925", ",", "0.352", ",", "-", "0.014", "]", ")", ",", "\n", "np", ".", "array", "(", "[", "0.400", ",", "-", "0.018", ",", "-", "0.042", "]", ")", ",", "\n", "np", ".", "array", "(", "[", "0.308", ",", "0.189", ",", "-", "0.943", "]", ")", ",", "\n", "np", ".", "array", "(", "[", "-", "0.556", ",", "0.209", ",", "0.907", "]", ")", ",", "\n", "np", ".", "array", "(", "[", "-", "0.862", ",", "-", "0.243", ",", "0.835", "]", ")", ",", "\n", "np", ".", "array", "(", "[", "-", "0.552", ",", "-", "0.262", ",", "0.317", "]", ")", ",", "\n", "]", "\n", "for", "_", "in", "range", "(", "2", ")", ":", "\n", "        ", "env", ".", "reset", "(", "seed", "=", "6789", ")", "\n", "for", "action", "in", "actions", ":", "\n", "            ", "state", ",", "_", ",", "_", ",", "_", "=", "env", ".", "step", "(", "action", ")", "\n", "", "final_states", ".", "append", "(", "state", ")", "\n", "\n", "", "assert", "np", ".", "allclose", "(", "final_states", "[", "0", "]", "[", "\"observation\"", "]", ",", "final_states", "[", "1", "]", "[", "\"observation\"", "]", ")", "\n", "assert", "np", ".", "allclose", "(", "final_states", "[", "0", "]", "[", "\"achieved_goal\"", "]", ",", "final_states", "[", "1", "]", "[", "\"achieved_goal\"", "]", ")", "\n", "assert", "np", ".", "allclose", "(", "final_states", "[", "0", "]", "[", "\"desired_goal\"", "]", ",", "final_states", "[", "1", "]", "[", "\"desired_goal\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.seed_test.test_seed_slide": [[51, 70], ["gym.make", "range", "numpy.allclose", "numpy.allclose", "numpy.allclose", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "gym.make.reset", "final_states.append", "gym.make.step"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip.reset", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.step"], ["", "def", "test_seed_slide", "(", ")", ":", "\n", "    ", "final_states", "=", "[", "]", "\n", "env", "=", "gym", ".", "make", "(", "\"PandaSlide-v2\"", ")", "\n", "actions", "=", "[", "\n", "np", ".", "array", "(", "[", "0.245", ",", "0.786", ",", "0.329", "]", ")", ",", "\n", "np", ".", "array", "(", "[", "-", "0.414", ",", "0.343", ",", "-", "0.839", "]", ")", ",", "\n", "np", ".", "array", "(", "[", "0.549", ",", "0.047", ",", "-", "0.857", "]", ")", ",", "\n", "np", ".", "array", "(", "[", "0.744", ",", "-", "0.507", ",", "0.092", "]", ")", ",", "\n", "np", ".", "array", "(", "[", "-", "0.202", ",", "-", "0.939", ",", "-", "0.945", "]", ")", ",", "\n", "np", ".", "array", "(", "[", "-", "0.97", ",", "-", "0.616", ",", "0.472", "]", ")", ",", "\n", "]", "\n", "for", "_", "in", "range", "(", "2", ")", ":", "\n", "        ", "env", ".", "reset", "(", "seed", "=", "13795", ")", "\n", "for", "action", "in", "actions", ":", "\n", "            ", "state", ",", "_", ",", "_", ",", "_", "=", "env", ".", "step", "(", "action", ")", "\n", "", "final_states", ".", "append", "(", "state", ")", "\n", "", "assert", "np", ".", "allclose", "(", "final_states", "[", "0", "]", "[", "\"observation\"", "]", ",", "final_states", "[", "1", "]", "[", "\"observation\"", "]", ")", "\n", "assert", "np", ".", "allclose", "(", "final_states", "[", "0", "]", "[", "\"achieved_goal\"", "]", ",", "final_states", "[", "1", "]", "[", "\"achieved_goal\"", "]", ")", "\n", "assert", "np", ".", "allclose", "(", "final_states", "[", "0", "]", "[", "\"desired_goal\"", "]", ",", "final_states", "[", "1", "]", "[", "\"desired_goal\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.seed_test.test_seed_pick_and_place": [[72, 91], ["gym.make", "range", "numpy.allclose", "numpy.allclose", "numpy.allclose", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "gym.make.reset", "final_states.append", "gym.make.step"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip.reset", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.step"], ["", "def", "test_seed_pick_and_place", "(", ")", ":", "\n", "    ", "final_states", "=", "[", "]", "\n", "env", "=", "gym", ".", "make", "(", "\"PandaPickAndPlace-v2\"", ")", "\n", "actions", "=", "[", "\n", "np", ".", "array", "(", "[", "0.429", ",", "-", "0.287", ",", "0.804", ",", "-", "0.592", "]", ")", ",", "\n", "np", ".", "array", "(", "[", "0.351", ",", "-", "0.136", ",", "0.296", ",", "-", "0.223", "]", ")", ",", "\n", "np", ".", "array", "(", "[", "-", "0.187", ",", "0.706", ",", "-", "0.988", ",", "0.972", "]", ")", ",", "\n", "np", ".", "array", "(", "[", "-", "0.389", ",", "-", "0.249", ",", "0.374", ",", "-", "0.389", "]", ")", ",", "\n", "np", ".", "array", "(", "[", "-", "0.191", ",", "-", "0.297", ",", "-", "0.739", ",", "0.633", "]", ")", ",", "\n", "np", ".", "array", "(", "[", "0.093", ",", "0.242", ",", "-", "0.11", ",", "-", "0.949", "]", ")", ",", "\n", "]", "\n", "for", "_", "in", "range", "(", "2", ")", ":", "\n", "        ", "env", ".", "reset", "(", "seed", "=", "794512", ")", "\n", "for", "action", "in", "actions", ":", "\n", "            ", "state", ",", "_", ",", "_", ",", "_", "=", "env", ".", "step", "(", "action", ")", "\n", "", "final_states", ".", "append", "(", "state", ")", "\n", "", "assert", "np", ".", "allclose", "(", "final_states", "[", "0", "]", "[", "\"observation\"", "]", ",", "final_states", "[", "1", "]", "[", "\"observation\"", "]", ")", "\n", "assert", "np", ".", "allclose", "(", "final_states", "[", "0", "]", "[", "\"achieved_goal\"", "]", ",", "final_states", "[", "1", "]", "[", "\"achieved_goal\"", "]", ")", "\n", "assert", "np", ".", "allclose", "(", "final_states", "[", "0", "]", "[", "\"desired_goal\"", "]", ",", "final_states", "[", "1", "]", "[", "\"desired_goal\"", "]", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.seed_test.test_seed_stack": [[93, 112], ["gym.make", "range", "numpy.allclose", "numpy.allclose", "numpy.allclose", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "gym.make.reset", "final_states.append", "gym.make.step"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip.reset", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.step"], ["", "def", "test_seed_stack", "(", ")", ":", "\n", "    ", "final_states", "=", "[", "]", "\n", "env", "=", "gym", ".", "make", "(", "\"PandaStack-v2\"", ")", "\n", "actions", "=", "[", "\n", "np", ".", "array", "(", "[", "-", "0.609", ",", "0.73", ",", "-", "0.433", ",", "0.76", "]", ")", ",", "\n", "np", ".", "array", "(", "[", "0.414", ",", "0.327", ",", "0.275", ",", "-", "0.196", "]", ")", ",", "\n", "np", ".", "array", "(", "[", "-", "0.3", ",", "0.589", ",", "-", "0.712", ",", "0.683", "]", ")", ",", "\n", "np", ".", "array", "(", "[", "0.772", ",", "0.333", ",", "-", "0.537", ",", "-", "0.253", "]", ")", ",", "\n", "np", ".", "array", "(", "[", "0.784", ",", "-", "0.014", ",", "-", "0.997", ",", "-", "0.118", "]", ")", ",", "\n", "np", ".", "array", "(", "[", "-", "0.12", ",", "-", "0.958", ",", "-", "0.744", ",", "-", "0.98", "]", ")", ",", "\n", "]", "\n", "for", "_", "in", "range", "(", "2", ")", ":", "\n", "        ", "env", ".", "reset", "(", "seed", "=", "657894", ")", "\n", "for", "action", "in", "actions", ":", "\n", "            ", "state", ",", "_", ",", "_", ",", "_", "=", "env", ".", "step", "(", "action", ")", "\n", "", "final_states", ".", "append", "(", "state", ")", "\n", "", "assert", "np", ".", "allclose", "(", "final_states", "[", "0", "]", "[", "\"observation\"", "]", ",", "final_states", "[", "1", "]", "[", "\"observation\"", "]", ")", "\n", "assert", "np", ".", "allclose", "(", "final_states", "[", "0", "]", "[", "\"achieved_goal\"", "]", ",", "final_states", "[", "1", "]", "[", "\"achieved_goal\"", "]", ")", "\n", "assert", "np", ".", "allclose", "(", "final_states", "[", "0", "]", "[", "\"desired_goal\"", "]", ",", "final_states", "[", "1", "]", "[", "\"desired_goal\"", "]", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.import_test.test_import": [[1, 3], ["None"], "function", ["None"], ["def", "test_import", "(", ")", ":", "\n", "    ", "import", "panda_gym", "\n", "", ""]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.pybullet_test.test_import": [[5, 7], ["None"], "function", ["None"], ["def", "test_import", "(", ")", ":", "\n", "    ", "from", "panda_gym", ".", "pybullet", "import", "PyBullet", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.pybullet_test.test_construct": [[9, 13], ["PyBullet"], "function", ["None"], ["", "def", "test_construct", "(", ")", ":", "\n", "    ", "from", "panda_gym", ".", "pybullet", "import", "PyBullet", "\n", "\n", "pybullet", "=", "PyBullet", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.pybullet_test.test_close": [[15, 20], ["PyBullet", "PyBullet.close"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.close"], ["", "def", "test_close", "(", ")", ":", "\n", "    ", "from", "panda_gym", ".", "pybullet", "import", "PyBullet", "\n", "\n", "pybullet", "=", "PyBullet", "(", ")", "\n", "pybullet", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.pybullet_test.test_step": [[22, 28], ["PyBullet", "PyBullet.step", "PyBullet.close"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.step", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.close"], ["", "def", "test_step", "(", ")", ":", "\n", "    ", "from", "panda_gym", ".", "pybullet", "import", "PyBullet", "\n", "\n", "pybullet", "=", "PyBullet", "(", ")", "\n", "pybullet", ".", "step", "(", ")", "\n", "pybullet", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.pybullet_test.test_dt": [[30, 36], ["PyBullet", "PyBullet.close"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.close"], ["", "def", "test_dt", "(", ")", ":", "\n", "    ", "from", "panda_gym", ".", "pybullet", "import", "PyBullet", "\n", "\n", "pybullet", "=", "PyBullet", "(", ")", "\n", "assert", "pybullet", ".", "dt", "==", "0.04", "\n", "pybullet", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.pybullet_test.test_create_box": [[38, 44], ["PyBullet", "PyBullet.create_box", "PyBullet.close"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_box", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.close"], ["", "def", "test_create_box", "(", ")", ":", "\n", "    ", "from", "panda_gym", ".", "pybullet", "import", "PyBullet", "\n", "\n", "pybullet", "=", "PyBullet", "(", ")", "\n", "pybullet", ".", "create_box", "(", "\"my_box\"", ",", "[", "0.5", ",", "0.5", ",", "0.5", "]", ",", "1.0", ",", "[", "0.0", ",", "0.0", ",", "0.0", "]", ",", "[", "1.0", ",", "0.0", ",", "0.0", ",", "1.0", "]", ")", "\n", "pybullet", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.pybullet_test.test_get_base_position": [[46, 54], ["PyBullet", "PyBullet.create_box", "PyBullet.get_base_position", "PyBullet.close", "numpy.allclose", "numpy.zeros"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_box", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_position", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.close"], ["", "def", "test_get_base_position", "(", ")", ":", "\n", "    ", "from", "panda_gym", ".", "pybullet", "import", "PyBullet", "\n", "\n", "pybullet", "=", "PyBullet", "(", ")", "\n", "pybullet", ".", "create_box", "(", "\"my_box\"", ",", "[", "0.5", ",", "0.5", ",", "0.5", "]", ",", "1.0", ",", "[", "0.0", ",", "0.0", ",", "0.0", "]", ",", "[", "1.0", ",", "0.0", ",", "0.0", ",", "1.0", "]", ")", "\n", "base_position", "=", "pybullet", ".", "get_base_position", "(", "\"my_box\"", ")", "\n", "pybullet", ".", "close", "(", ")", "\n", "assert", "np", ".", "allclose", "(", "base_position", ",", "np", ".", "zeros", "(", "3", ")", ",", "atol", "=", "1e-7", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.pybullet_test.test_get_base_velocity": [[56, 65], ["PyBullet", "PyBullet.create_box", "PyBullet.step", "PyBullet.get_base_velocity", "PyBullet.close", "numpy.allclose"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_box", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.step", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_velocity", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.close"], ["", "def", "test_get_base_velocity", "(", ")", ":", "\n", "    ", "from", "panda_gym", ".", "pybullet", "import", "PyBullet", "\n", "\n", "pybullet", "=", "PyBullet", "(", ")", "\n", "pybullet", ".", "create_box", "(", "\"my_box\"", ",", "[", "0.5", ",", "0.5", ",", "0.5", "]", ",", "1.0", ",", "[", "0.0", ",", "0.0", ",", "0.0", "]", ",", "[", "1.0", ",", "0.0", ",", "0.0", ",", "1.0", "]", ")", "\n", "pybullet", ".", "step", "(", ")", "\n", "base_velocity", "=", "pybullet", ".", "get_base_velocity", "(", "\"my_box\"", ")", "\n", "pybullet", ".", "close", "(", ")", "\n", "assert", "np", ".", "allclose", "(", "base_velocity", ",", "[", "0.0", ",", "0.0", ",", "-", "0.392", "]", ",", "atol", "=", "1e-3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.pybullet_test.test_get_base_orientation": [[67, 75], ["PyBullet", "PyBullet.create_box", "PyBullet.get_base_orientation", "PyBullet.close", "numpy.allclose"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_box", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_orientation", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.close"], ["", "def", "test_get_base_orientation", "(", ")", ":", "\n", "    ", "from", "panda_gym", ".", "pybullet", "import", "PyBullet", "\n", "\n", "pybullet", "=", "PyBullet", "(", ")", "\n", "pybullet", ".", "create_box", "(", "\"my_box\"", ",", "[", "0.5", ",", "0.5", ",", "0.5", "]", ",", "1.0", ",", "[", "0.0", ",", "0.0", ",", "0.0", "]", ",", "[", "1.0", ",", "0.0", ",", "0.0", ",", "1.0", "]", ")", "\n", "base_orientation", "=", "pybullet", ".", "get_base_orientation", "(", "\"my_box\"", ")", "\n", "pybullet", ".", "close", "(", ")", "\n", "assert", "np", ".", "allclose", "(", "base_orientation", ",", "[", "0.0", ",", "0.0", ",", "0.0", ",", "1.0", "]", ",", "atol", "=", "1e-3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.pybullet_test.test_get_base_rotation": [[77, 85], ["PyBullet", "PyBullet.create_box", "PyBullet.get_base_rotation", "PyBullet.close", "numpy.allclose"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_box", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_rotation", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.close"], ["", "def", "test_get_base_rotation", "(", ")", ":", "\n", "    ", "from", "panda_gym", ".", "pybullet", "import", "PyBullet", "\n", "\n", "pybullet", "=", "PyBullet", "(", ")", "\n", "pybullet", ".", "create_box", "(", "\"my_box\"", ",", "[", "0.5", ",", "0.5", ",", "0.5", "]", ",", "1.0", ",", "[", "0.0", ",", "0.0", ",", "0.0", "]", ",", "[", "1.0", ",", "0.0", ",", "0.0", ",", "1.0", "]", ")", "\n", "base_rotation", "=", "pybullet", ".", "get_base_rotation", "(", "\"my_box\"", ")", "\n", "pybullet", ".", "close", "(", ")", "\n", "assert", "np", ".", "allclose", "(", "base_rotation", ",", "[", "0.0", ",", "0.0", ",", "0.0", "]", ",", "atol", "=", "1e-3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.pybullet_test.test_get_base_angular_velocity": [[87, 95], ["PyBullet", "PyBullet.create_box", "PyBullet.get_base_angular_velocity", "PyBullet.close", "numpy.allclose"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_box", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_angular_velocity", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.close"], ["", "def", "test_get_base_angular_velocity", "(", ")", ":", "\n", "    ", "from", "panda_gym", ".", "pybullet", "import", "PyBullet", "\n", "\n", "pybullet", "=", "PyBullet", "(", ")", "\n", "pybullet", ".", "create_box", "(", "\"my_box\"", ",", "[", "0.5", ",", "0.5", ",", "0.5", "]", ",", "1.0", ",", "[", "0.0", ",", "0.0", ",", "0.0", "]", ",", "[", "1.0", ",", "0.0", ",", "0.0", ",", "1.0", "]", ")", "\n", "base_angular_velocity", "=", "pybullet", ".", "get_base_angular_velocity", "(", "\"my_box\"", ")", "\n", "pybullet", ".", "close", "(", ")", "\n", "assert", "np", ".", "allclose", "(", "base_angular_velocity", ",", "[", "0.0", ",", "0.0", ",", "0.0", "]", ",", "atol", "=", "1e-3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.pybullet_test.test_load_URDF": [[97, 108], ["PyBullet", "PyBullet.loadURDF", "PyBullet.close"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.loadURDF", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.close"], ["", "def", "test_load_URDF", "(", ")", ":", "\n", "    ", "from", "panda_gym", ".", "pybullet", "import", "PyBullet", "\n", "\n", "pybullet", "=", "PyBullet", "(", ")", "\n", "pybullet", ".", "loadURDF", "(", "\n", "body_name", "=", "\"panda\"", ",", "\n", "fileName", "=", "\"franka_panda/panda.urdf\"", ",", "\n", "basePosition", "=", "[", "0.0", ",", "0.0", ",", "0.0", "]", ",", "\n", "useFixedBase", "=", "True", ",", "\n", ")", "\n", "pybullet", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.pybullet_test.test_control_joints": [[110, 122], ["PyBullet", "PyBullet.loadURDF", "PyBullet.control_joints", "PyBullet.step"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.loadURDF", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot.control_joints", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.step"], ["", "def", "test_control_joints", "(", ")", ":", "\n", "    ", "from", "panda_gym", ".", "pybullet", "import", "PyBullet", "\n", "\n", "pybullet", "=", "PyBullet", "(", ")", "\n", "pybullet", ".", "loadURDF", "(", "\n", "body_name", "=", "\"panda\"", ",", "\n", "fileName", "=", "\"franka_panda/panda.urdf\"", ",", "\n", "basePosition", "=", "[", "0.0", ",", "0.0", ",", "0.0", "]", ",", "\n", "useFixedBase", "=", "True", ",", "\n", ")", "\n", "pybullet", ".", "control_joints", "(", "\"panda\"", ",", "[", "5", "]", ",", "[", "0.3", "]", ",", "[", "5.0", "]", ")", "\n", "pybullet", ".", "step", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.pybullet_test.test_get_link_position": [[124, 137], ["PyBullet", "PyBullet.loadURDF", "PyBullet.get_link_position", "numpy.allclose", "PyBullet.close"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.loadURDF", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot.get_link_position", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.close"], ["", "def", "test_get_link_position", "(", ")", ":", "\n", "    ", "from", "panda_gym", ".", "pybullet", "import", "PyBullet", "\n", "\n", "pybullet", "=", "PyBullet", "(", ")", "\n", "pybullet", ".", "loadURDF", "(", "\n", "body_name", "=", "\"panda\"", ",", "\n", "fileName", "=", "\"franka_panda/panda.urdf\"", ",", "\n", "basePosition", "=", "[", "0.0", ",", "0.0", ",", "0.0", "]", ",", "\n", "useFixedBase", "=", "True", ",", "\n", ")", "\n", "link_position", "=", "pybullet", ".", "get_link_position", "(", "\"panda\"", ",", "1", ")", "\n", "assert", "np", ".", "allclose", "(", "link_position", ",", "[", "0.000", ",", "0.060", ",", "0.373", "]", ",", "atol", "=", "1e-3", ")", "\n", "pybullet", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.pybullet_test.test_get_link_orientation": [[139, 154], ["PyBullet", "PyBullet.loadURDF", "PyBullet.control_joints", "PyBullet.step", "PyBullet.get_link_orientation", "numpy.allclose", "PyBullet.close"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.loadURDF", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot.control_joints", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.step", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_link_orientation", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.close"], ["", "def", "test_get_link_orientation", "(", ")", ":", "\n", "    ", "from", "panda_gym", ".", "pybullet", "import", "PyBullet", "\n", "\n", "pybullet", "=", "PyBullet", "(", ")", "\n", "pybullet", ".", "loadURDF", "(", "\n", "body_name", "=", "\"panda\"", ",", "\n", "fileName", "=", "\"franka_panda/panda.urdf\"", ",", "\n", "basePosition", "=", "[", "0.0", ",", "0.0", ",", "0.0", "]", ",", "\n", "useFixedBase", "=", "True", ",", "\n", ")", "\n", "pybullet", ".", "control_joints", "(", "\"panda\"", ",", "[", "5", "]", ",", "[", "0.3", "]", ",", "[", "5.0", "]", ")", "\n", "pybullet", ".", "step", "(", ")", "\n", "link_orientation", "=", "pybullet", ".", "get_link_orientation", "(", "\"panda\"", ",", "5", ")", "\n", "assert", "np", ".", "allclose", "(", "link_orientation", ",", "[", "0.707", ",", "-", "0.02", ",", "0.02", ",", "0.707", "]", ",", "atol", "=", "1e-3", ")", "\n", "pybullet", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.pybullet_test.test_get_link_velocity": [[156, 171], ["PyBullet", "PyBullet.loadURDF", "PyBullet.control_joints", "PyBullet.step", "PyBullet.get_link_velocity", "numpy.allclose", "PyBullet.close"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.loadURDF", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot.control_joints", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.step", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot.get_link_velocity", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.close"], ["", "def", "test_get_link_velocity", "(", ")", ":", "\n", "    ", "from", "panda_gym", ".", "pybullet", "import", "PyBullet", "\n", "\n", "pybullet", "=", "PyBullet", "(", ")", "\n", "pybullet", ".", "loadURDF", "(", "\n", "body_name", "=", "\"panda\"", ",", "\n", "fileName", "=", "\"franka_panda/panda.urdf\"", ",", "\n", "basePosition", "=", "[", "0.0", ",", "0.0", ",", "0.0", "]", ",", "\n", "useFixedBase", "=", "True", ",", "\n", ")", "\n", "pybullet", ".", "control_joints", "(", "\"panda\"", ",", "[", "5", "]", ",", "[", "0.3", "]", ",", "[", "5.0", "]", ")", "\n", "pybullet", ".", "step", "(", ")", "\n", "link_velocity", "=", "pybullet", ".", "get_link_velocity", "(", "\"panda\"", ",", "5", ")", "\n", "assert", "np", ".", "allclose", "(", "link_velocity", ",", "[", "-", "0.0068", ",", "0.0000", ",", "0.1186", "]", ",", "atol", "=", "1e-3", ")", "\n", "pybullet", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.pybullet_test.test_get_link_angular_velocity": [[173, 188], ["PyBullet", "PyBullet.loadURDF", "PyBullet.control_joints", "PyBullet.step", "PyBullet.get_link_angular_velocity", "numpy.allclose", "PyBullet.close"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.loadURDF", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot.control_joints", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.step", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_link_angular_velocity", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.close"], ["", "def", "test_get_link_angular_velocity", "(", ")", ":", "\n", "    ", "from", "panda_gym", ".", "pybullet", "import", "PyBullet", "\n", "\n", "pybullet", "=", "PyBullet", "(", ")", "\n", "pybullet", ".", "loadURDF", "(", "\n", "body_name", "=", "\"panda\"", ",", "\n", "fileName", "=", "\"franka_panda/panda.urdf\"", ",", "\n", "basePosition", "=", "[", "0.0", ",", "0.0", ",", "0.0", "]", ",", "\n", "useFixedBase", "=", "True", ",", "\n", ")", "\n", "pybullet", ".", "control_joints", "(", "\"panda\"", ",", "[", "5", "]", ",", "[", "0.3", "]", ",", "[", "5.0", "]", ")", "\n", "pybullet", ".", "step", "(", ")", "\n", "link_angular_velocity", "=", "pybullet", ".", "get_link_angular_velocity", "(", "\"panda\"", ",", "5", ")", "\n", "assert", "np", ".", "allclose", "(", "link_angular_velocity", ",", "[", "0.000", ",", "-", "2.969", ",", "0.000", "]", ",", "atol", "=", "1e-3", ")", "\n", "pybullet", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.pybullet_test.test_get_joint_angle": [[190, 205], ["PyBullet", "PyBullet.loadURDF", "PyBullet.control_joints", "PyBullet.step", "PyBullet.get_joint_angle", "numpy.allclose", "PyBullet.close"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.loadURDF", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot.control_joints", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.step", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot.get_joint_angle", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.close"], ["", "def", "test_get_joint_angle", "(", ")", ":", "\n", "    ", "from", "panda_gym", ".", "pybullet", "import", "PyBullet", "\n", "\n", "pybullet", "=", "PyBullet", "(", ")", "\n", "pybullet", ".", "loadURDF", "(", "\n", "body_name", "=", "\"panda\"", ",", "\n", "fileName", "=", "\"franka_panda/panda.urdf\"", ",", "\n", "basePosition", "=", "[", "0.0", ",", "0.0", ",", "0.0", "]", ",", "\n", "useFixedBase", "=", "True", ",", "\n", ")", "\n", "pybullet", ".", "control_joints", "(", "\"panda\"", ",", "[", "5", "]", ",", "[", "0.3", "]", ",", "[", "5.0", "]", ")", "\n", "pybullet", ".", "step", "(", ")", "\n", "joint_angle", "=", "pybullet", ".", "get_joint_angle", "(", "\"panda\"", ",", "5", ")", "\n", "assert", "np", ".", "allclose", "(", "joint_angle", ",", "0.063", ",", "atol", "=", "1e-3", ")", "\n", "pybullet", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.pybullet_test.test_set_base_pose": [[207, 218], ["PyBullet", "PyBullet.create_box", "PyBullet.set_base_pose", "PyBullet.get_base_position", "PyBullet.get_base_orientation", "PyBullet.close", "numpy.allclose", "numpy.allclose"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_box", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.set_base_pose", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_position", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_orientation", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.close"], ["", "def", "test_set_base_pose", "(", ")", ":", "\n", "    ", "from", "panda_gym", ".", "pybullet", "import", "PyBullet", "\n", "\n", "pybullet", "=", "PyBullet", "(", ")", "\n", "pybullet", ".", "create_box", "(", "\"my_box\"", ",", "[", "0.5", ",", "0.5", ",", "0.5", "]", ",", "1.0", ",", "[", "0.0", ",", "0.0", ",", "0.0", "]", ",", "[", "1.0", ",", "0.0", ",", "0.0", ",", "1.0", "]", ")", "\n", "pybullet", ".", "set_base_pose", "(", "\"my_box\"", ",", "[", "1.0", ",", "1.0", ",", "1.0", "]", ",", "[", "0.707", ",", "-", "0.02", ",", "0.02", ",", "0.707", "]", ")", "\n", "base_position", "=", "pybullet", ".", "get_base_position", "(", "\"my_box\"", ")", "\n", "base_orientation", "=", "pybullet", ".", "get_base_orientation", "(", "\"my_box\"", ")", "\n", "pybullet", ".", "close", "(", ")", "\n", "assert", "np", ".", "allclose", "(", "base_position", ",", "[", "1.0", ",", "1.0", ",", "1.0", "]", ",", "atol", "=", "1e-3", ")", "\n", "assert", "np", ".", "allclose", "(", "base_orientation", ",", "[", "0.707", ",", "-", "0.02", ",", "0.02", ",", "0.707", "]", ",", "atol", "=", "1e-3", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.pybullet_test.test_set_joint_angle": [[220, 234], ["PyBullet", "PyBullet.loadURDF", "PyBullet.set_joint_angle", "PyBullet.get_joint_angle", "numpy.allclose", "PyBullet.close"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.loadURDF", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.set_joint_angle", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot.get_joint_angle", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.close"], ["", "def", "test_set_joint_angle", "(", ")", ":", "\n", "    ", "from", "panda_gym", ".", "pybullet", "import", "PyBullet", "\n", "\n", "pybullet", "=", "PyBullet", "(", ")", "\n", "pybullet", ".", "loadURDF", "(", "\n", "body_name", "=", "\"panda\"", ",", "\n", "fileName", "=", "\"franka_panda/panda.urdf\"", ",", "\n", "basePosition", "=", "[", "0.0", ",", "0.0", ",", "0.0", "]", ",", "\n", "useFixedBase", "=", "True", ",", "\n", ")", "\n", "pybullet", ".", "set_joint_angle", "(", "\"panda\"", ",", "3", ",", "0.4", ")", "\n", "joint_angle", "=", "pybullet", ".", "get_joint_angle", "(", "\"panda\"", ",", "3", ")", "\n", "assert", "np", ".", "allclose", "(", "joint_angle", ",", "0.4", ",", "atol", "=", "1e-3", ")", "\n", "pybullet", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.pybullet_test.test_set_joint_angles": [[236, 252], ["PyBullet", "PyBullet.loadURDF", "PyBullet.set_joint_angles", "PyBullet.get_joint_angle", "PyBullet.get_joint_angle", "numpy.allclose", "numpy.allclose", "PyBullet.close"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.loadURDF", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot.set_joint_angles", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot.get_joint_angle", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot.get_joint_angle", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.close"], ["", "def", "test_set_joint_angles", "(", ")", ":", "\n", "    ", "from", "panda_gym", ".", "pybullet", "import", "PyBullet", "\n", "\n", "pybullet", "=", "PyBullet", "(", ")", "\n", "pybullet", ".", "loadURDF", "(", "\n", "body_name", "=", "\"panda\"", ",", "\n", "fileName", "=", "\"franka_panda/panda.urdf\"", ",", "\n", "basePosition", "=", "[", "0.0", ",", "0.0", ",", "0.0", "]", ",", "\n", "useFixedBase", "=", "True", ",", "\n", ")", "\n", "pybullet", ".", "set_joint_angles", "(", "\"panda\"", ",", "[", "3", ",", "4", "]", ",", "[", "0.4", ",", "0.5", "]", ")", "\n", "joint_angle3", "=", "pybullet", ".", "get_joint_angle", "(", "\"panda\"", ",", "3", ")", "\n", "joint_angle4", "=", "pybullet", ".", "get_joint_angle", "(", "\"panda\"", ",", "4", ")", "\n", "assert", "np", ".", "allclose", "(", "joint_angle3", ",", "0.4", ",", "atol", "=", "1e-3", ")", "\n", "assert", "np", ".", "allclose", "(", "joint_angle4", ",", "0.5", ",", "atol", "=", "1e-3", ")", "\n", "pybullet", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.pybullet_test.test_inverse_kinematics": [[254, 267], ["PyBullet", "PyBullet.loadURDF", "PyBullet.inverse_kinematics", "numpy.allclose", "PyBullet.close"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.loadURDF", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot.inverse_kinematics", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.close"], ["", "def", "test_inverse_kinematics", "(", ")", ":", "\n", "    ", "from", "panda_gym", ".", "pybullet", "import", "PyBullet", "\n", "\n", "pybullet", "=", "PyBullet", "(", ")", "\n", "pybullet", ".", "loadURDF", "(", "\n", "body_name", "=", "\"panda\"", ",", "\n", "fileName", "=", "\"franka_panda/panda.urdf\"", ",", "\n", "basePosition", "=", "[", "0.0", ",", "0.0", ",", "0.0", "]", ",", "\n", "useFixedBase", "=", "True", ",", "\n", ")", "\n", "joint_angles", "=", "pybullet", ".", "inverse_kinematics", "(", "\"panda\"", ",", "6", ",", "[", "0.4", ",", "0.5", ",", "0.6", "]", ",", "[", "0.707", ",", "-", "0.02", ",", "0.02", ",", "0.707", "]", ")", "\n", "assert", "np", ".", "allclose", "(", "joint_angles", ",", "[", "1.000", ",", "1.223", ",", "-", "1.113", ",", "-", "0.021", ",", "-", "0.917", ",", "0.666", ",", "-", "0.499", ",", "0.0", ",", "0.0", "]", ",", "atol", "=", "1e-3", ")", "\n", "pybullet", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.pybullet_test.test_place_visalizer": [[269, 274], ["PyBullet", "PyBullet.place_visualizer"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.place_visualizer"], ["", "def", "test_place_visalizer", "(", ")", ":", "\n", "    ", "from", "panda_gym", ".", "pybullet", "import", "PyBullet", "\n", "\n", "pybullet", "=", "PyBullet", "(", ")", "\n", "pybullet", ".", "place_visualizer", "(", "[", "0.1", ",", "0.2", ",", "0.3", "]", ",", "5.0", ",", "0.3", ",", "0.4", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.pybullet_test.test_create_cylinder": [[276, 282], ["PyBullet", "PyBullet.create_cylinder", "PyBullet.close"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_cylinder", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.close"], ["", "def", "test_create_cylinder", "(", ")", ":", "\n", "    ", "from", "panda_gym", ".", "pybullet", "import", "PyBullet", "\n", "\n", "pybullet", "=", "PyBullet", "(", ")", "\n", "pybullet", ".", "create_cylinder", "(", "\"my_cylinder\"", ",", "0.5", ",", "1.0", ",", "1.0", ",", "[", "0.0", ",", "0.0", ",", "0.0", "]", ",", "[", "1.0", ",", "0.0", ",", "0.0", ",", "1.0", "]", ")", "\n", "pybullet", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.pybullet_test.test_create_sphere": [[284, 290], ["PyBullet", "PyBullet.create_sphere", "PyBullet.close"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_sphere", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.close"], ["", "def", "test_create_sphere", "(", ")", ":", "\n", "    ", "from", "panda_gym", ".", "pybullet", "import", "PyBullet", "\n", "\n", "pybullet", "=", "PyBullet", "(", ")", "\n", "pybullet", ".", "create_sphere", "(", "\"my_sphere\"", ",", "0.5", ",", "1.0", ",", "[", "0.0", ",", "0.0", ",", "0.0", "]", ",", "[", "1.0", ",", "0.0", ",", "0.0", ",", "1.0", "]", ")", "\n", "pybullet", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.pybullet_test.test_create_plane": [[292, 298], ["PyBullet", "PyBullet.create_plane", "PyBullet.close"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_plane", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.close"], ["", "def", "test_create_plane", "(", ")", ":", "\n", "    ", "from", "panda_gym", ".", "pybullet", "import", "PyBullet", "\n", "\n", "pybullet", "=", "PyBullet", "(", ")", "\n", "pybullet", ".", "create_plane", "(", "0.5", ")", "\n", "pybullet", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.pybullet_test.test_create_table": [[300, 306], ["PyBullet", "PyBullet.create_table", "PyBullet.close"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_table", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.close"], ["", "def", "test_create_table", "(", ")", ":", "\n", "    ", "from", "panda_gym", ".", "pybullet", "import", "PyBullet", "\n", "\n", "pybullet", "=", "PyBullet", "(", ")", "\n", "pybullet", ".", "create_table", "(", "0.5", ",", "0.6", ",", "0.4", ")", "\n", "pybullet", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.pybullet_test.test_set_lateral_friction": [[308, 315], ["PyBullet", "PyBullet.create_box", "PyBullet.set_lateral_friction", "PyBullet.close"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_box", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.set_lateral_friction", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.close"], ["", "def", "test_set_lateral_friction", "(", ")", ":", "\n", "    ", "from", "panda_gym", ".", "pybullet", "import", "PyBullet", "\n", "\n", "pybullet", "=", "PyBullet", "(", ")", "\n", "pybullet", ".", "create_box", "(", "\"my_box\"", ",", "[", "0.5", ",", "0.5", ",", "0.5", "]", ",", "1.0", ",", "[", "0.0", ",", "0.0", ",", "0.0", "]", ",", "[", "1.0", ",", "0.0", ",", "0.0", ",", "1.0", "]", ")", "\n", "pybullet", ".", "set_lateral_friction", "(", "\"my_box\"", ",", "0", ",", "0.5", ")", "\n", "pybullet", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.pybullet_test.test_set_spinning_friction": [[317, 324], ["PyBullet", "PyBullet.create_box", "PyBullet.set_spinning_friction", "PyBullet.close"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_box", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.set_spinning_friction", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.close"], ["", "def", "test_set_spinning_friction", "(", ")", ":", "\n", "    ", "from", "panda_gym", ".", "pybullet", "import", "PyBullet", "\n", "\n", "pybullet", "=", "PyBullet", "(", ")", "\n", "pybullet", ".", "create_box", "(", "\"my_box\"", ",", "[", "0.5", ",", "0.5", ",", "0.5", "]", ",", "1.0", ",", "[", "0.0", ",", "0.0", ",", "0.0", "]", ",", "[", "1.0", ",", "0.0", ",", "0.0", ",", "1.0", "]", ")", "\n", "pybullet", ".", "set_spinning_friction", "(", "\"my_box\"", ",", "0", ",", "0.5", ")", "\n", "pybullet", ".", "close", "(", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.run_env": [[6, 14], ["env.reset", "env.close", "env.action_space.sample", "env.step"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip.reset", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.close", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.step"], ["def", "run_env", "(", "env", ")", ":", "\n", "    ", "\"\"\"Tests running panda gym envs.\"\"\"", "\n", "done", "=", "False", "\n", "env", ".", "reset", "(", ")", "\n", "while", "not", "done", ":", "\n", "        ", "action", "=", "env", ".", "action_space", ".", "sample", "(", ")", "\n", "_", ",", "_", ",", "done", ",", "_", "=", "env", ".", "step", "(", "action", ")", "\n", "", "env", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.test_reach": [[16, 19], ["gym.make", "envs_test.run_env"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.run_env"], ["", "def", "test_reach", "(", ")", ":", "\n", "    ", "env", "=", "gym", ".", "make", "(", "\"PandaReach-v2\"", ")", "\n", "run_env", "(", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.test_slide": [[21, 24], ["gym.make", "envs_test.run_env"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.run_env"], ["", "def", "test_slide", "(", ")", ":", "\n", "    ", "env", "=", "gym", ".", "make", "(", "\"PandaSlide-v2\"", ")", "\n", "run_env", "(", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.test_push": [[26, 29], ["gym.make", "envs_test.run_env"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.run_env"], ["", "def", "test_push", "(", ")", ":", "\n", "    ", "env", "=", "gym", ".", "make", "(", "\"PandaPush-v2\"", ")", "\n", "run_env", "(", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.test_pickandplace": [[31, 34], ["gym.make", "envs_test.run_env"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.run_env"], ["", "def", "test_pickandplace", "(", ")", ":", "\n", "    ", "env", "=", "gym", ".", "make", "(", "\"PandaPickAndPlace-v2\"", ")", "\n", "run_env", "(", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.test_stack": [[36, 39], ["gym.make", "envs_test.run_env"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.run_env"], ["", "def", "test_stack", "(", ")", ":", "\n", "    ", "env", "=", "gym", ".", "make", "(", "\"PandaStack-v2\"", ")", "\n", "run_env", "(", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.test_flip": [[41, 44], ["gym.make", "envs_test.run_env"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.run_env"], ["", "def", "test_flip", "(", ")", ":", "\n", "    ", "env", "=", "gym", ".", "make", "(", "\"PandaFlip-v2\"", ")", "\n", "run_env", "(", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.test_dense_reach": [[46, 49], ["gym.make", "envs_test.run_env"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.run_env"], ["", "def", "test_dense_reach", "(", ")", ":", "\n", "    ", "env", "=", "gym", ".", "make", "(", "\"PandaReachDense-v2\"", ")", "\n", "run_env", "(", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.test_dense_slide": [[51, 54], ["gym.make", "envs_test.run_env"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.run_env"], ["", "def", "test_dense_slide", "(", ")", ":", "\n", "    ", "env", "=", "gym", ".", "make", "(", "\"PandaSlideDense-v2\"", ")", "\n", "run_env", "(", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.test_dense_push": [[56, 59], ["gym.make", "envs_test.run_env"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.run_env"], ["", "def", "test_dense_push", "(", ")", ":", "\n", "    ", "env", "=", "gym", ".", "make", "(", "\"PandaPushDense-v2\"", ")", "\n", "run_env", "(", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.test_dense_pickandplace": [[61, 64], ["gym.make", "envs_test.run_env"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.run_env"], ["", "def", "test_dense_pickandplace", "(", ")", ":", "\n", "    ", "env", "=", "gym", ".", "make", "(", "\"PandaPickAndPlaceDense-v2\"", ")", "\n", "run_env", "(", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.test_dense_stack": [[66, 69], ["gym.make", "envs_test.run_env"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.run_env"], ["", "def", "test_dense_stack", "(", ")", ":", "\n", "    ", "env", "=", "gym", ".", "make", "(", "\"PandaStackDense-v2\"", ")", "\n", "run_env", "(", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.test_dense_flip": [[71, 74], ["gym.make", "envs_test.run_env"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.run_env"], ["", "def", "test_dense_flip", "(", ")", ":", "\n", "    ", "env", "=", "gym", ".", "make", "(", "\"PandaFlipDense-v2\"", ")", "\n", "run_env", "(", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.test_reach_joints": [[76, 79], ["gym.make", "envs_test.run_env"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.run_env"], ["", "def", "test_reach_joints", "(", ")", ":", "\n", "    ", "env", "=", "gym", ".", "make", "(", "\"PandaReachJoints-v2\"", ")", "\n", "run_env", "(", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.test_slide_joints": [[81, 84], ["gym.make", "envs_test.run_env"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.run_env"], ["", "def", "test_slide_joints", "(", ")", ":", "\n", "    ", "env", "=", "gym", ".", "make", "(", "\"PandaSlideJoints-v2\"", ")", "\n", "run_env", "(", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.test_push_joints": [[86, 89], ["gym.make", "envs_test.run_env"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.run_env"], ["", "def", "test_push_joints", "(", ")", ":", "\n", "    ", "env", "=", "gym", ".", "make", "(", "\"PandaPushJoints-v2\"", ")", "\n", "run_env", "(", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.test_pickandplace_joints": [[91, 94], ["gym.make", "envs_test.run_env"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.run_env"], ["", "def", "test_pickandplace_joints", "(", ")", ":", "\n", "    ", "env", "=", "gym", ".", "make", "(", "\"PandaPickAndPlaceJoints-v2\"", ")", "\n", "run_env", "(", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.test_stack_joints": [[96, 99], ["gym.make", "envs_test.run_env"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.run_env"], ["", "def", "test_stack_joints", "(", ")", ":", "\n", "    ", "env", "=", "gym", ".", "make", "(", "\"PandaStackJoints-v2\"", ")", "\n", "run_env", "(", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.test_flip_joints": [[101, 104], ["gym.make", "envs_test.run_env"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.run_env"], ["", "def", "test_flip_joints", "(", ")", ":", "\n", "    ", "env", "=", "gym", ".", "make", "(", "\"PandaFlipJoints-v2\"", ")", "\n", "run_env", "(", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.test_dense_reach_joints": [[106, 109], ["gym.make", "envs_test.run_env"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.run_env"], ["", "def", "test_dense_reach_joints", "(", ")", ":", "\n", "    ", "env", "=", "gym", ".", "make", "(", "\"PandaReachJointsDense-v2\"", ")", "\n", "run_env", "(", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.test_dense_slide_joints": [[111, 114], ["gym.make", "envs_test.run_env"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.run_env"], ["", "def", "test_dense_slide_joints", "(", ")", ":", "\n", "    ", "env", "=", "gym", ".", "make", "(", "\"PandaSlideDense-v2\"", ")", "\n", "run_env", "(", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.test_dense_push_joints": [[116, 119], ["gym.make", "envs_test.run_env"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.run_env"], ["", "def", "test_dense_push_joints", "(", ")", ":", "\n", "    ", "env", "=", "gym", ".", "make", "(", "\"PandaPushJointsDense-v2\"", ")", "\n", "run_env", "(", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.test_dense_pickandplace_joints": [[121, 124], ["gym.make", "envs_test.run_env"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.run_env"], ["", "def", "test_dense_pickandplace_joints", "(", ")", ":", "\n", "    ", "env", "=", "gym", ".", "make", "(", "\"PandaPickAndPlaceJointsDense-v2\"", ")", "\n", "run_env", "(", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.test_dense_stack_joints": [[126, 129], ["gym.make", "envs_test.run_env"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.run_env"], ["", "def", "test_dense_stack_joints", "(", ")", ":", "\n", "    ", "env", "=", "gym", ".", "make", "(", "\"PandaStackJointsDense-v2\"", ")", "\n", "run_env", "(", "env", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.test_dense_flip_joints": [[131, 134], ["gym.make", "envs_test.run_env"], "function", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.test.envs_test.run_env"], ["", "def", "test_dense_flip_joints", "(", ")", ":", "\n", "    ", "env", "=", "gym", ".", "make", "(", "\"PandaFlipJointsDense-v2\"", ")", "\n", "run_env", "(", "env", ")", "\n", "", ""]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.__init__": [[25, 45], ["pybullet_utils.BulletClient", "pybullet.PyBullet.physics_client.configureDebugVisualizer", "pybullet.PyBullet.physics_client.configureDebugVisualizer", "pybullet.PyBullet.physics_client.setTimeStep", "pybullet.PyBullet.physics_client.resetSimulation", "pybullet.PyBullet.physics_client.setAdditionalSearchPath", "pybullet.PyBullet.physics_client.setGravity", "numpy.array", "background_color.astype", "pybullet_data.getDataPath"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "render", ":", "bool", "=", "False", ",", "n_substeps", ":", "int", "=", "20", ",", "background_color", ":", "Optional", "[", "np", ".", "ndarray", "]", "=", "None", ")", "->", "None", ":", "\n", "        ", "background_color", "=", "background_color", "if", "background_color", "is", "not", "None", "else", "np", ".", "array", "(", "[", "223.0", ",", "54.0", ",", "45.0", "]", ")", "\n", "self", ".", "background_color", "=", "background_color", ".", "astype", "(", "np", ".", "float64", ")", "/", "255", "\n", "options", "=", "\"--background_color_red={} \\\n                    --background_color_green={} \\\n                    --background_color_blue={}\"", ".", "format", "(", "\n", "*", "self", ".", "background_color", "\n", ")", "\n", "self", ".", "connection_mode", "=", "p", ".", "GUI", "if", "render", "else", "p", ".", "DIRECT", "\n", "self", ".", "physics_client", "=", "bc", ".", "BulletClient", "(", "connection_mode", "=", "self", ".", "connection_mode", ",", "options", "=", "options", ")", "\n", "self", ".", "physics_client", ".", "configureDebugVisualizer", "(", "p", ".", "COV_ENABLE_GUI", ",", "0", ")", "\n", "self", ".", "physics_client", ".", "configureDebugVisualizer", "(", "p", ".", "COV_ENABLE_MOUSE_PICKING", ",", "0", ")", "\n", "\n", "self", ".", "n_substeps", "=", "n_substeps", "\n", "self", ".", "timestep", "=", "1.0", "/", "500", "\n", "self", ".", "physics_client", ".", "setTimeStep", "(", "self", ".", "timestep", ")", "\n", "self", ".", "physics_client", ".", "resetSimulation", "(", ")", "\n", "self", ".", "physics_client", ".", "setAdditionalSearchPath", "(", "pybullet_data", ".", "getDataPath", "(", ")", ")", "\n", "self", ".", "physics_client", ".", "setGravity", "(", "0", ",", "0", ",", "-", "9.81", ")", "\n", "self", ".", "_bodies_idx", "=", "{", "}", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.dt": [[46, 50], ["None"], "methods", ["None"], ["", "@", "property", "\n", "def", "dt", "(", "self", ")", ":", "\n", "        ", "\"\"\"Timestep.\"\"\"", "\n", "return", "self", ".", "timestep", "*", "self", ".", "n_substeps", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.step": [[51, 55], ["range", "pybullet.PyBullet.physics_client.stepSimulation"], "methods", ["None"], ["", "def", "step", "(", "self", ")", "->", "None", ":", "\n", "        ", "\"\"\"Step the simulation.\"\"\"", "\n", "for", "_", "in", "range", "(", "self", ".", "n_substeps", ")", ":", "\n", "            ", "self", ".", "physics_client", ".", "stepSimulation", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.close": [[56, 59], ["pybullet.PyBullet.physics_client.disconnect"], "methods", ["None"], ["", "", "def", "close", "(", "self", ")", "->", "None", ":", "\n", "        ", "\"\"\"Close the simulation.\"\"\"", "\n", "self", ".", "physics_client", ".", "disconnect", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.render": [[60, 124], ["numpy.zeros", "pybullet.PyBullet.physics_client.configureDebugVisualizer", "time.sleep", "pybullet.PyBullet.physics_client.computeViewMatrixFromYawPitchRoll", "pybullet.PyBullet.physics_client.computeProjectionMatrixFOV", "pybullet.PyBullet.physics_client.getCameraImage", "warnings.warn", "float"], "methods", ["None"], ["", "def", "render", "(", "\n", "self", ",", "\n", "mode", ":", "str", "=", "\"human\"", ",", "\n", "width", ":", "int", "=", "720", ",", "\n", "height", ":", "int", "=", "480", ",", "\n", "target_position", ":", "Optional", "[", "np", ".", "ndarray", "]", "=", "None", ",", "\n", "distance", ":", "float", "=", "1.4", ",", "\n", "yaw", ":", "float", "=", "45", ",", "\n", "pitch", ":", "float", "=", "-", "30", ",", "\n", "roll", ":", "float", "=", "0", ",", "\n", ")", "->", "Optional", "[", "np", ".", "ndarray", "]", ":", "\n", "        ", "\"\"\"Render.\n\n        If mode is \"human\", make the rendering real-time. All other arguments are\n        unused. If mode is \"rgb_array\", return an RGB array of the scene.\n\n        Args:\n            mode (str): \"human\" of \"rgb_array\". If \"human\", this method waits for the time necessary to have\n                a realistic temporal rendering and all other args are ignored. Else, return an RGB array.\n            width (int, optional): Image width. Defaults to 720.\n            height (int, optional): Image height. Defaults to 480.\n            target_position (np.ndarray, optional): Camera targetting this postion, as (x, y, z).\n                Defaults to [0., 0., 0.].\n            distance (float, optional): Distance of the camera. Defaults to 1.4.\n            yaw (float, optional): Yaw of the camera. Defaults to 45.\n            pitch (float, optional): Pitch of the camera. Defaults to -30.\n            roll (int, optional): Rool of the camera. Defaults to 0.\n\n        Returns:\n            RGB np.ndarray or None: An RGB array if mode is 'rgb_array', else None.\n        \"\"\"", "\n", "target_position", "=", "target_position", "if", "target_position", "is", "not", "None", "else", "np", ".", "zeros", "(", "3", ")", "\n", "if", "mode", "==", "\"human\"", ":", "\n", "            ", "self", ".", "physics_client", ".", "configureDebugVisualizer", "(", "self", ".", "physics_client", ".", "COV_ENABLE_SINGLE_STEP_RENDERING", ")", "\n", "time", ".", "sleep", "(", "self", ".", "dt", ")", "# wait to seems like real speed", "\n", "", "if", "mode", "==", "\"rgb_array\"", ":", "\n", "            ", "if", "self", ".", "connection_mode", "==", "p", ".", "DIRECT", ":", "\n", "                ", "warnings", ".", "warn", "(", "\n", "\"The use of the render method is not recommended when the environment \"", "\n", "\"has not been created with render=True. The rendering will probably be weird. \"", "\n", "\"Prefer making the environment with option `render=True`. For example: \"", "\n", "\"`env = gym.make('PandaReach-v2', render=True)`.\"", ",", "\n", "UserWarning", ",", "\n", ")", "\n", "", "view_matrix", "=", "self", ".", "physics_client", ".", "computeViewMatrixFromYawPitchRoll", "(", "\n", "cameraTargetPosition", "=", "target_position", ",", "\n", "distance", "=", "distance", ",", "\n", "yaw", "=", "yaw", ",", "\n", "pitch", "=", "pitch", ",", "\n", "roll", "=", "roll", ",", "\n", "upAxisIndex", "=", "2", ",", "\n", ")", "\n", "proj_matrix", "=", "self", ".", "physics_client", ".", "computeProjectionMatrixFOV", "(", "\n", "fov", "=", "60", ",", "aspect", "=", "float", "(", "width", ")", "/", "height", ",", "nearVal", "=", "0.1", ",", "farVal", "=", "100.0", "\n", ")", "\n", "(", "_", ",", "_", ",", "px", ",", "depth", ",", "_", ")", "=", "self", ".", "physics_client", ".", "getCameraImage", "(", "\n", "width", "=", "width", ",", "\n", "height", "=", "height", ",", "\n", "viewMatrix", "=", "view_matrix", ",", "\n", "projectionMatrix", "=", "proj_matrix", ",", "\n", "renderer", "=", "p", ".", "ER_BULLET_HARDWARE_OPENGL", ",", "\n", ")", "\n", "\n", "return", "px", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_position": [[125, 136], ["numpy.array", "pybullet.PyBullet.physics_client.getBasePositionAndOrientation"], "methods", ["None"], ["", "", "def", "get_base_position", "(", "self", ",", "body", ":", "str", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "\"\"\"Get the position of the body.\n\n        Args:\n            body (str): Body unique name.\n\n        Returns:\n            np.ndarray: The position, as (x, y, z).\n        \"\"\"", "\n", "position", "=", "self", ".", "physics_client", ".", "getBasePositionAndOrientation", "(", "self", ".", "_bodies_idx", "[", "body", "]", ")", "[", "0", "]", "\n", "return", "np", ".", "array", "(", "position", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_orientation": [[137, 148], ["numpy.array", "pybullet.PyBullet.physics_client.getBasePositionAndOrientation"], "methods", ["None"], ["", "def", "get_base_orientation", "(", "self", ",", "body", ":", "str", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "\"\"\"Get the orientation of the body.\n\n        Args:\n            body (str): Body unique name.\n\n        Returns:\n            np.ndarray: The orientation, as quaternion (x, y, z, w).\n        \"\"\"", "\n", "orientation", "=", "self", ".", "physics_client", ".", "getBasePositionAndOrientation", "(", "self", ".", "_bodies_idx", "[", "body", "]", ")", "[", "1", "]", "\n", "return", "np", ".", "array", "(", "orientation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_rotation": [[149, 167], ["pybullet.PyBullet.get_base_orientation", "pybullet.PyBullet.physics_client.getEulerFromQuaternion", "numpy.array", "numpy.array", "ValueError"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_orientation"], ["", "def", "get_base_rotation", "(", "self", ",", "body", ":", "str", ",", "type", ":", "str", "=", "\"euler\"", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "\"\"\"Get the rotation of the body.\n\n        Args:\n            body (str): Body unique name.\n            type (str): Type of angle, either \"euler\" or \"quaternion\"\n\n        Returns:\n            np.ndarray: The rotation.\n        \"\"\"", "\n", "quaternion", "=", "self", ".", "get_base_orientation", "(", "body", ")", "\n", "if", "type", "==", "\"euler\"", ":", "\n", "            ", "rotation", "=", "self", ".", "physics_client", ".", "getEulerFromQuaternion", "(", "quaternion", ")", "\n", "return", "np", ".", "array", "(", "rotation", ")", "\n", "", "elif", "type", "==", "\"quaternion\"", ":", "\n", "            ", "return", "np", ".", "array", "(", "quaternion", ")", "\n", "", "else", ":", "\n", "            ", "raise", "ValueError", "(", "\"\"\"type must be \"euler\" or \"quaternion\".\"\"\"", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_velocity": [[168, 179], ["numpy.array", "pybullet.PyBullet.physics_client.getBaseVelocity"], "methods", ["None"], ["", "", "def", "get_base_velocity", "(", "self", ",", "body", ":", "str", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "\"\"\"Get the velocity of the body.\n\n        Args:\n            body (str): Body unique name.\n\n        Returns:\n            np.ndarray: The velocity, as (vx, vy, vz).\n        \"\"\"", "\n", "velocity", "=", "self", ".", "physics_client", ".", "getBaseVelocity", "(", "self", ".", "_bodies_idx", "[", "body", "]", ")", "[", "0", "]", "\n", "return", "np", ".", "array", "(", "velocity", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_angular_velocity": [[180, 191], ["numpy.array", "pybullet.PyBullet.physics_client.getBaseVelocity"], "methods", ["None"], ["", "def", "get_base_angular_velocity", "(", "self", ",", "body", ":", "str", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "\"\"\"Get the angular velocity of the body.\n\n        Args:\n            body (str): Body unique name.\n\n        Returns:\n            np.ndarray: The angular velocity, as (wx, wy, wz).\n        \"\"\"", "\n", "angular_velocity", "=", "self", ".", "physics_client", ".", "getBaseVelocity", "(", "self", ".", "_bodies_idx", "[", "body", "]", ")", "[", "1", "]", "\n", "return", "np", ".", "array", "(", "angular_velocity", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_link_position": [[192, 204], ["numpy.array", "pybullet.PyBullet.physics_client.getLinkState"], "methods", ["None"], ["", "def", "get_link_position", "(", "self", ",", "body", ":", "str", ",", "link", ":", "int", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "\"\"\"Get the position of the link of the body.\n\n        Args:\n            body (str): Body unique name.\n            link (int): Link index in the body.\n\n        Returns:\n            np.ndarray: The position, as (x, y, z).\n        \"\"\"", "\n", "position", "=", "self", ".", "physics_client", ".", "getLinkState", "(", "self", ".", "_bodies_idx", "[", "body", "]", ",", "link", ")", "[", "0", "]", "\n", "return", "np", ".", "array", "(", "position", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_link_orientation": [[205, 217], ["numpy.array", "pybullet.PyBullet.physics_client.getLinkState"], "methods", ["None"], ["", "def", "get_link_orientation", "(", "self", ",", "body", ":", "str", ",", "link", ":", "int", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "\"\"\"Get the orientation of the link of the body.\n\n        Args:\n            body (str): Body unique name.\n            link (int): Link index in the body.\n\n        Returns:\n            np.ndarray: The rotation, as (rx, ry, rz).\n        \"\"\"", "\n", "orientation", "=", "self", ".", "physics_client", ".", "getLinkState", "(", "self", ".", "_bodies_idx", "[", "body", "]", ",", "link", ")", "[", "1", "]", "\n", "return", "np", ".", "array", "(", "orientation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_link_velocity": [[218, 230], ["numpy.array", "pybullet.PyBullet.physics_client.getLinkState"], "methods", ["None"], ["", "def", "get_link_velocity", "(", "self", ",", "body", ":", "str", ",", "link", ":", "int", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "\"\"\"Get the velocity of the link of the body.\n\n        Args:\n            body (str): Body unique name.\n            link (int): Link index in the body.\n\n        Returns:\n            np.ndarray: The velocity, as (vx, vy, vz).\n        \"\"\"", "\n", "velocity", "=", "self", ".", "physics_client", ".", "getLinkState", "(", "self", ".", "_bodies_idx", "[", "body", "]", ",", "link", ",", "computeLinkVelocity", "=", "True", ")", "[", "6", "]", "\n", "return", "np", ".", "array", "(", "velocity", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_link_angular_velocity": [[231, 243], ["numpy.array", "pybullet.PyBullet.physics_client.getLinkState"], "methods", ["None"], ["", "def", "get_link_angular_velocity", "(", "self", ",", "body", ":", "str", ",", "link", ":", "int", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "\"\"\"Get the angular velocity of the link of the body.\n\n        Args:\n            body (str): Body unique name.\n            link (int): Link index in the body.\n\n        Returns:\n            np.ndarray: The angular velocity, as (wx, wy, wz).\n        \"\"\"", "\n", "angular_velocity", "=", "self", ".", "physics_client", ".", "getLinkState", "(", "self", ".", "_bodies_idx", "[", "body", "]", ",", "link", ",", "computeLinkVelocity", "=", "True", ")", "[", "7", "]", "\n", "return", "np", ".", "array", "(", "angular_velocity", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_joint_angle": [[244, 255], ["pybullet.PyBullet.physics_client.getJointState"], "methods", ["None"], ["", "def", "get_joint_angle", "(", "self", ",", "body", ":", "str", ",", "joint", ":", "int", ")", "->", "float", ":", "\n", "        ", "\"\"\"Get the angle of the joint of the body.\n\n        Args:\n            body (str): Body unique name.\n            joint (int): Joint index in the body\n\n        Returns:\n            float: The angle.\n        \"\"\"", "\n", "return", "self", ".", "physics_client", ".", "getJointState", "(", "self", ".", "_bodies_idx", "[", "body", "]", ",", "joint", ")", "[", "0", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_joint_velocity": [[256, 267], ["pybullet.PyBullet.physics_client.getJointState"], "methods", ["None"], ["", "def", "get_joint_velocity", "(", "self", ",", "body", ":", "str", ",", "joint", ":", "int", ")", "->", "float", ":", "\n", "        ", "\"\"\"Get the velocity of the joint of the body.\n\n        Args:\n            body (str): Body unique name.\n            joint (int): Joint index in the body\n\n        Returns:\n            float: The velocity.\n        \"\"\"", "\n", "return", "self", ".", "physics_client", ".", "getJointState", "(", "self", ".", "_bodies_idx", "[", "body", "]", ",", "joint", ")", "[", "1", "]", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.set_base_pose": [[268, 280], ["pybullet.PyBullet.physics_client.resetBasePositionAndOrientation", "len", "pybullet.PyBullet.physics_client.getQuaternionFromEuler"], "methods", ["None"], ["", "def", "set_base_pose", "(", "self", ",", "body", ":", "str", ",", "position", ":", "np", ".", "ndarray", ",", "orientation", ":", "np", ".", "ndarray", ")", "->", "None", ":", "\n", "        ", "\"\"\"Set the position of the body.\n\n        Args:\n            body (str): Body unique name.\n            position (np.ndarray): The position, as (x, y, z).\n            orientation (np.ndarray): The target orientation as quaternion (x, y, z, w).\n        \"\"\"", "\n", "if", "len", "(", "orientation", ")", "==", "3", ":", "\n", "            ", "orientation", "=", "self", ".", "physics_client", ".", "getQuaternionFromEuler", "(", "orientation", ")", "\n", "", "self", ".", "physics_client", ".", "resetBasePositionAndOrientation", "(", "\n", "bodyUniqueId", "=", "self", ".", "_bodies_idx", "[", "body", "]", ",", "posObj", "=", "position", ",", "ornObj", "=", "orientation", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.set_joint_angles": [[282, 292], ["zip", "pybullet.PyBullet.set_joint_angle"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.set_joint_angle"], ["", "def", "set_joint_angles", "(", "self", ",", "body", ":", "str", ",", "joints", ":", "np", ".", "ndarray", ",", "angles", ":", "np", ".", "ndarray", ")", "->", "None", ":", "\n", "        ", "\"\"\"Set the angles of the joints of the body.\n\n        Args:\n            body (str): Body unique name.\n            joints (np.ndarray): List of joint indices, as a list of ints.\n            angles (np.ndarray): List of target angles, as a list of floats.\n        \"\"\"", "\n", "for", "joint", ",", "angle", "in", "zip", "(", "joints", ",", "angles", ")", ":", "\n", "            ", "self", ".", "set_joint_angle", "(", "body", "=", "body", ",", "joint", "=", "joint", ",", "angle", "=", "angle", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.set_joint_angle": [[293, 302], ["pybullet.PyBullet.physics_client.resetJointState"], "methods", ["None"], ["", "", "def", "set_joint_angle", "(", "self", ",", "body", ":", "str", ",", "joint", ":", "int", ",", "angle", ":", "float", ")", "->", "None", ":", "\n", "        ", "\"\"\"Set the angle of the joint of the body.\n\n        Args:\n            body (str): Body unique name.\n            joint (int): Joint index in the body.\n            angle (float): Target angle.\n        \"\"\"", "\n", "self", ".", "physics_client", ".", "resetJointState", "(", "bodyUniqueId", "=", "self", ".", "_bodies_idx", "[", "body", "]", ",", "jointIndex", "=", "joint", ",", "targetValue", "=", "angle", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.control_joints": [[303, 318], ["pybullet.PyBullet.physics_client.setJointMotorControlArray"], "methods", ["None"], ["", "def", "control_joints", "(", "self", ",", "body", ":", "str", ",", "joints", ":", "np", ".", "ndarray", ",", "target_angles", ":", "np", ".", "ndarray", ",", "forces", ":", "np", ".", "ndarray", ")", "->", "None", ":", "\n", "        ", "\"\"\"Control the joints motor.\n\n        Args:\n            body (str): Body unique name.\n            joints (np.ndarray): List of joint indices, as a list of ints.\n            target_angles (np.ndarray): List of target angles, as a list of floats.\n            forces (np.ndarray): Forces to apply, as a list of floats.\n        \"\"\"", "\n", "self", ".", "physics_client", ".", "setJointMotorControlArray", "(", "\n", "self", ".", "_bodies_idx", "[", "body", "]", ",", "\n", "jointIndices", "=", "joints", ",", "\n", "controlMode", "=", "self", ".", "physics_client", ".", "POSITION_CONTROL", ",", "\n", "targetPositions", "=", "target_angles", ",", "\n", "forces", "=", "forces", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.inverse_kinematics": [[320, 339], ["pybullet.PyBullet.physics_client.calculateInverseKinematics", "numpy.array"], "methods", ["None"], ["", "def", "inverse_kinematics", "(", "self", ",", "body", ":", "str", ",", "link", ":", "int", ",", "position", ":", "np", ".", "ndarray", ",", "orientation", ":", "np", ".", "ndarray", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "\"\"\"Compute the inverse kinematics and return the new joint state.\n\n        Args:\n            body (str): Body unique name.\n            link (int): Link index in the body.\n            position (np.ndarray): Desired position of the end-effector, as (x, y, z).\n            orientation (np.ndarray): Desired orientation of the end-effector as quaternion (x, y, z, w).\n\n        Returns:\n            np.ndarray: The new joint state.\n        \"\"\"", "\n", "joint_state", "=", "self", ".", "physics_client", ".", "calculateInverseKinematics", "(", "\n", "bodyIndex", "=", "self", ".", "_bodies_idx", "[", "body", "]", ",", "\n", "endEffectorLinkIndex", "=", "link", ",", "\n", "targetPosition", "=", "position", ",", "\n", "targetOrientation", "=", "orientation", ",", "\n", ")", "\n", "return", "np", ".", "array", "(", "joint_state", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.place_visualizer": [[340, 354], ["pybullet.PyBullet.physics_client.resetDebugVisualizerCamera"], "methods", ["None"], ["", "def", "place_visualizer", "(", "self", ",", "target_position", ":", "np", ".", "ndarray", ",", "distance", ":", "float", ",", "yaw", ":", "float", ",", "pitch", ":", "float", ")", "->", "None", ":", "\n", "        ", "\"\"\"Orient the camera used for rendering.\n\n        Args:\n            target (np.ndarray): Target position, as (x, y, z).\n            distance (float): Distance from the target position.\n            yaw (float): Yaw.\n            pitch (float): Pitch.\n        \"\"\"", "\n", "self", ".", "physics_client", ".", "resetDebugVisualizerCamera", "(", "\n", "cameraDistance", "=", "distance", ",", "\n", "cameraYaw", "=", "yaw", ",", "\n", "cameraPitch", "=", "pitch", ",", "\n", "cameraTargetPosition", "=", "target_position", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.no_rendering": [[356, 362], ["pybullet.PyBullet.physics_client.configureDebugVisualizer", "pybullet.PyBullet.physics_client.configureDebugVisualizer"], "methods", ["None"], ["", "@", "contextmanager", "\n", "def", "no_rendering", "(", "self", ")", "->", "Iterator", "[", "None", "]", ":", "\n", "        ", "\"\"\"Disable rendering within this context.\"\"\"", "\n", "self", ".", "physics_client", ".", "configureDebugVisualizer", "(", "self", ".", "physics_client", ".", "COV_ENABLE_RENDERING", ",", "0", ")", "\n", "yield", "\n", "self", ".", "physics_client", ".", "configureDebugVisualizer", "(", "self", ".", "physics_client", ".", "COV_ENABLE_RENDERING", ",", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.loadURDF": [[363, 370], ["pybullet.PyBullet.physics_client.loadURDF"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.loadURDF"], ["", "def", "loadURDF", "(", "self", ",", "body_name", ":", "str", ",", "**", "kwargs", ":", "Any", ")", "->", "None", ":", "\n", "        ", "\"\"\"Load URDF file.\n\n        Args:\n            body_name (str): The name of the body. Must be unique in the sim.\n        \"\"\"", "\n", "self", ".", "_bodies_idx", "[", "body_name", "]", "=", "self", ".", "physics_client", ".", "loadURDF", "(", "**", "kwargs", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_box": [[371, 423], ["pybullet.PyBullet._create_geometry", "numpy.zeros", "numpy.zeros", "os.path.join", "pybullet.PyBullet.physics_client.loadTexture", "pybullet.PyBullet.physics_client.changeVisualShape", "panda_gym.assets.get_data_path"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet._create_geometry", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.assets.__init__.get_data_path"], ["", "def", "create_box", "(", "\n", "self", ",", "\n", "body_name", ":", "str", ",", "\n", "half_extents", ":", "np", ".", "ndarray", ",", "\n", "mass", ":", "float", ",", "\n", "position", ":", "np", ".", "ndarray", ",", "\n", "rgba_color", ":", "Optional", "[", "np", ".", "ndarray", "]", "=", "None", ",", "\n", "specular_color", ":", "Optional", "[", "np", ".", "ndarray", "]", "=", "None", ",", "\n", "ghost", ":", "bool", "=", "False", ",", "\n", "lateral_friction", ":", "Optional", "[", "float", "]", "=", "None", ",", "\n", "spinning_friction", ":", "Optional", "[", "float", "]", "=", "None", ",", "\n", "texture", ":", "Optional", "[", "str", "]", "=", "None", ",", "\n", ")", "->", "None", ":", "\n", "        ", "\"\"\"Create a box.\n\n        Args:\n            body_name (str): The name of the body. Must be unique in the sim.\n            half_extents (np.ndarray): Half size of the box in meters, as (x, y, z).\n            mass (float): The mass in kg.\n            position (np.ndarray): The position, as (x, y, z).\n            rgba_color (np.ndarray, optional): Body color, as (r, g, b, a). Defaults as [0, 0, 0, 0]\n            specular_color (np.ndarray, optional): Specular color, as (r, g, b). Defaults to [0, 0, 0].\n            ghost (bool, optional): Whether the body can collide. Defaults to False.\n            lateral_friction (float or None, optional): Lateral friction. If None, use the default pybullet\n                value. Defaults to None.\n            spinning_friction (float or None, optional): Spinning friction. If None, use the default pybullet\n                value. Defaults to None.\n            texture (str or None, optional): Texture file name. Defaults to None.\n        \"\"\"", "\n", "rgba_color", "=", "rgba_color", "if", "rgba_color", "is", "not", "None", "else", "np", ".", "zeros", "(", "4", ")", "\n", "specular_color", "=", "specular_color", "if", "specular_color", "is", "not", "None", "else", "np", ".", "zeros", "(", "3", ")", "\n", "visual_kwargs", "=", "{", "\n", "\"halfExtents\"", ":", "half_extents", ",", "\n", "\"specularColor\"", ":", "specular_color", ",", "\n", "\"rgbaColor\"", ":", "rgba_color", ",", "\n", "}", "\n", "collision_kwargs", "=", "{", "\"halfExtents\"", ":", "half_extents", "}", "\n", "self", ".", "_create_geometry", "(", "\n", "body_name", ",", "\n", "geom_type", "=", "self", ".", "physics_client", ".", "GEOM_BOX", ",", "\n", "mass", "=", "mass", ",", "\n", "position", "=", "position", ",", "\n", "ghost", "=", "ghost", ",", "\n", "lateral_friction", "=", "lateral_friction", ",", "\n", "spinning_friction", "=", "spinning_friction", ",", "\n", "visual_kwargs", "=", "visual_kwargs", ",", "\n", "collision_kwargs", "=", "collision_kwargs", ",", "\n", ")", "\n", "if", "texture", "is", "not", "None", ":", "\n", "            ", "texture_path", "=", "os", ".", "path", ".", "join", "(", "panda_gym", ".", "assets", ".", "get_data_path", "(", ")", ",", "texture", ")", "\n", "texture_uid", "=", "self", ".", "physics_client", ".", "loadTexture", "(", "texture_path", ")", "\n", "self", ".", "physics_client", ".", "changeVisualShape", "(", "self", ".", "_bodies_idx", "[", "body_name", "]", ",", "-", "1", ",", "textureUniqueId", "=", "texture_uid", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_cylinder": [[424, 472], ["pybullet.PyBullet._create_geometry", "numpy.zeros", "numpy.zeros"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet._create_geometry"], ["", "", "def", "create_cylinder", "(", "\n", "self", ",", "\n", "body_name", ":", "str", ",", "\n", "radius", ":", "float", ",", "\n", "height", ":", "float", ",", "\n", "mass", ":", "float", ",", "\n", "position", ":", "np", ".", "ndarray", ",", "\n", "rgba_color", ":", "Optional", "[", "np", ".", "ndarray", "]", "=", "None", ",", "\n", "specular_color", ":", "Optional", "[", "np", ".", "ndarray", "]", "=", "None", ",", "\n", "ghost", ":", "bool", "=", "False", ",", "\n", "lateral_friction", ":", "Optional", "[", "float", "]", "=", "None", ",", "\n", "spinning_friction", ":", "Optional", "[", "float", "]", "=", "None", ",", "\n", ")", "->", "None", ":", "\n", "        ", "\"\"\"Create a cylinder.\n\n        Args:\n            body_name (str): The name of the body. Must be unique in the sim.\n            radius (float): The radius in meter.\n            height (float): The height in meter.\n            mass (float): The mass in kg.\n            position (np.ndarray): The position, as (x, y, z).\n            rgba_color (np.ndarray, optional): Body color, as (r, g, b, a). Defaults as [0, 0, 0, 0]\n            specular_color (np.ndarray, optional): Specular color, as (r, g, b). Defaults to [0, 0, 0].\n            ghost (bool, optional): Whether the body can collide. Defaults to False.\n            lateral_friction (float or None, optional): Lateral friction. If None, use the default pybullet\n                value. Defaults to None.\n            spinning_friction (float or None, optional): Spinning friction. If None, use the default pybullet\n                value. Defaults to None.\n        \"\"\"", "\n", "rgba_color", "=", "rgba_color", "if", "rgba_color", "is", "not", "None", "else", "np", ".", "zeros", "(", "4", ")", "\n", "specular_color", "=", "specular_color", "if", "specular_color", "is", "not", "None", "else", "np", ".", "zeros", "(", "3", ")", "\n", "visual_kwargs", "=", "{", "\n", "\"radius\"", ":", "radius", ",", "\n", "\"length\"", ":", "height", ",", "\n", "\"specularColor\"", ":", "specular_color", ",", "\n", "\"rgbaColor\"", ":", "rgba_color", ",", "\n", "}", "\n", "collision_kwargs", "=", "{", "\"radius\"", ":", "radius", ",", "\"height\"", ":", "height", "}", "\n", "self", ".", "_create_geometry", "(", "\n", "body_name", ",", "\n", "geom_type", "=", "self", ".", "physics_client", ".", "GEOM_CYLINDER", ",", "\n", "mass", "=", "mass", ",", "\n", "position", "=", "position", ",", "\n", "ghost", "=", "ghost", ",", "\n", "lateral_friction", "=", "lateral_friction", ",", "\n", "spinning_friction", "=", "spinning_friction", ",", "\n", "visual_kwargs", "=", "visual_kwargs", ",", "\n", "collision_kwargs", "=", "collision_kwargs", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_sphere": [[474, 519], ["pybullet.PyBullet._create_geometry", "numpy.zeros", "numpy.zeros"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet._create_geometry"], ["", "def", "create_sphere", "(", "\n", "self", ",", "\n", "body_name", ":", "str", ",", "\n", "radius", ":", "float", ",", "\n", "mass", ":", "float", ",", "\n", "position", ":", "np", ".", "ndarray", ",", "\n", "rgba_color", ":", "Optional", "[", "np", ".", "ndarray", "]", "=", "None", ",", "\n", "specular_color", ":", "Optional", "[", "np", ".", "ndarray", "]", "=", "None", ",", "\n", "ghost", ":", "bool", "=", "False", ",", "\n", "lateral_friction", ":", "Optional", "[", "float", "]", "=", "None", ",", "\n", "spinning_friction", ":", "Optional", "[", "float", "]", "=", "None", ",", "\n", ")", "->", "None", ":", "\n", "        ", "\"\"\"Create a sphere.\n\n        Args:\n            body_name (str): The name of the body. Must be unique in the sim.\n            radius (float): The radius in meter.\n            mass (float): The mass in kg.\n            position (np.ndarray): The position, as (x, y, z).\n            rgba_color (np.ndarray, optional): Body color, as (r, g, b, a). Defaults as [0, 0, 0, 0]\n            specular_color (np.ndarray, optional): Specular color, as (r, g, b). Defaults to [0, 0, 0].\n            ghost (bool, optional): Whether the body can collide. Defaults to False.\n            lateral_friction (float or None, optional): Lateral friction. If None, use the default pybullet\n                value. Defaults to None.\n            spinning_friction (float or None, optional): Spinning friction. If None, use the default pybullet\n                value. Defaults to None.\n        \"\"\"", "\n", "rgba_color", "=", "rgba_color", "if", "rgba_color", "is", "not", "None", "else", "np", ".", "zeros", "(", "4", ")", "\n", "specular_color", "=", "specular_color", "if", "specular_color", "is", "not", "None", "else", "np", ".", "zeros", "(", "3", ")", "\n", "visual_kwargs", "=", "{", "\n", "\"radius\"", ":", "radius", ",", "\n", "\"specularColor\"", ":", "specular_color", ",", "\n", "\"rgbaColor\"", ":", "rgba_color", ",", "\n", "}", "\n", "collision_kwargs", "=", "{", "\"radius\"", ":", "radius", "}", "\n", "self", ".", "_create_geometry", "(", "\n", "body_name", ",", "\n", "geom_type", "=", "self", ".", "physics_client", ".", "GEOM_SPHERE", ",", "\n", "mass", "=", "mass", ",", "\n", "position", "=", "position", ",", "\n", "ghost", "=", "ghost", ",", "\n", "lateral_friction", "=", "lateral_friction", ",", "\n", "spinning_friction", "=", "spinning_friction", ",", "\n", "visual_kwargs", "=", "visual_kwargs", ",", "\n", "collision_kwargs", "=", "collision_kwargs", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet._create_geometry": [[521, 565], ["pybullet.PyBullet.physics_client.createVisualShape", "pybullet.PyBullet.physics_client.createMultiBody", "numpy.zeros", "pybullet.PyBullet.physics_client.createCollisionShape", "pybullet.PyBullet.set_lateral_friction", "pybullet.PyBullet.set_spinning_friction"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.set_lateral_friction", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.set_spinning_friction"], ["", "def", "_create_geometry", "(", "\n", "self", ",", "\n", "body_name", ":", "str", ",", "\n", "geom_type", ":", "int", ",", "\n", "mass", ":", "float", "=", "0.0", ",", "\n", "position", ":", "Optional", "[", "np", ".", "ndarray", "]", "=", "None", ",", "\n", "ghost", ":", "bool", "=", "False", ",", "\n", "lateral_friction", ":", "Optional", "[", "float", "]", "=", "None", ",", "\n", "spinning_friction", ":", "Optional", "[", "float", "]", "=", "None", ",", "\n", "visual_kwargs", ":", "Dict", "[", "str", ",", "Any", "]", "=", "{", "}", ",", "\n", "collision_kwargs", ":", "Dict", "[", "str", ",", "Any", "]", "=", "{", "}", ",", "\n", ")", "->", "None", ":", "\n", "        ", "\"\"\"Create a geometry.\n\n        Args:\n            body_name (str): The name of the body. Must be unique in the sim.\n            geom_type (int): The geometry type. See self.physics_client.GEOM_<shape>.\n            mass (float, optional): The mass in kg. Defaults to 0.\n            position (np.ndarray, optional): The position, as (x, y, z). Defaults to [0, 0, 0].\n            ghost (bool, optional): Whether the body can collide. Defaults to False.\n            lateral_friction (float or None, optional): Lateral friction. If None, use the default pybullet\n                value. Defaults to None.\n            spinning_friction (float or None, optional): Spinning friction. If None, use the default pybullet\n                value. Defaults to None.\n            visual_kwargs (dict, optional): Visual kwargs. Defaults to {}.\n            collision_kwargs (dict, optional): Collision kwargs. Defaults to {}.\n        \"\"\"", "\n", "position", "=", "position", "if", "position", "is", "not", "None", "else", "np", ".", "zeros", "(", "3", ")", "\n", "baseVisualShapeIndex", "=", "self", ".", "physics_client", ".", "createVisualShape", "(", "geom_type", ",", "**", "visual_kwargs", ")", "\n", "if", "not", "ghost", ":", "\n", "            ", "baseCollisionShapeIndex", "=", "self", ".", "physics_client", ".", "createCollisionShape", "(", "geom_type", ",", "**", "collision_kwargs", ")", "\n", "", "else", ":", "\n", "            ", "baseCollisionShapeIndex", "=", "-", "1", "\n", "", "self", ".", "_bodies_idx", "[", "body_name", "]", "=", "self", ".", "physics_client", ".", "createMultiBody", "(", "\n", "baseVisualShapeIndex", "=", "baseVisualShapeIndex", ",", "\n", "baseCollisionShapeIndex", "=", "baseCollisionShapeIndex", ",", "\n", "baseMass", "=", "mass", ",", "\n", "basePosition", "=", "position", ",", "\n", ")", "\n", "\n", "if", "lateral_friction", "is", "not", "None", ":", "\n", "            ", "self", ".", "set_lateral_friction", "(", "body", "=", "body_name", ",", "link", "=", "-", "1", ",", "lateral_friction", "=", "lateral_friction", ")", "\n", "", "if", "spinning_friction", "is", "not", "None", ":", "\n", "            ", "self", ".", "set_spinning_friction", "(", "body", "=", "body_name", ",", "link", "=", "-", "1", ",", "spinning_friction", "=", "spinning_friction", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_plane": [[566, 579], ["pybullet.PyBullet.create_box", "numpy.array", "numpy.array", "numpy.zeros", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_box"], ["", "", "def", "create_plane", "(", "self", ",", "z_offset", ":", "float", ")", "->", "None", ":", "\n", "        ", "\"\"\"Create a plane. (Actually, it is a thin box.)\n\n        Args:\n            z_offset (float): Offset of the plane.\n        \"\"\"", "\n", "self", ".", "create_box", "(", "\n", "body_name", "=", "\"plane\"", ",", "\n", "half_extents", "=", "np", ".", "array", "(", "[", "3.0", ",", "3.0", ",", "0.01", "]", ")", ",", "\n", "mass", "=", "0.0", ",", "\n", "position", "=", "np", ".", "array", "(", "[", "0.0", ",", "0.0", ",", "z_offset", "-", "0.01", "]", ")", ",", "\n", "specular_color", "=", "np", ".", "zeros", "(", "3", ")", ",", "\n", "rgba_color", "=", "np", ".", "array", "(", "[", "0.15", ",", "0.15", ",", "0.15", ",", "1.0", "]", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_table": [[581, 611], ["pybullet.PyBullet.create_box", "numpy.array", "numpy.zeros", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_box"], ["", "def", "create_table", "(", "\n", "self", ",", "\n", "length", ":", "float", ",", "\n", "width", ":", "float", ",", "\n", "height", ":", "float", ",", "\n", "x_offset", ":", "float", "=", "0.0", ",", "\n", "lateral_friction", ":", "Optional", "[", "float", "]", "=", "None", ",", "\n", "spinning_friction", ":", "Optional", "[", "float", "]", "=", "None", ",", "\n", ")", "->", "None", ":", "\n", "        ", "\"\"\"Create a fixed table. Top is z=0, centered in y.\n\n        Args:\n            length (float): The length of the table (x direction).\n            width (float): The width of the table (y direction)\n            height (float): The height of the table.\n            x_offset (float, optional): The offet in the x direction.\n            lateral_friction (float or None, optional): Lateral friction. If None, use the default pybullet\n                value. Defaults to None.\n            spinning_friction (float or None, optional): Spinning friction. If None, use the default pybullet\n                value. Defaults to None.\n        \"\"\"", "\n", "self", ".", "create_box", "(", "\n", "body_name", "=", "\"table\"", ",", "\n", "half_extents", "=", "np", ".", "array", "(", "[", "length", ",", "width", ",", "height", "]", ")", "/", "2", ",", "\n", "mass", "=", "0.0", ",", "\n", "position", "=", "np", ".", "array", "(", "[", "x_offset", ",", "0.0", ",", "-", "height", "/", "2", "]", ")", ",", "\n", "specular_color", "=", "np", ".", "zeros", "(", "3", ")", ",", "\n", "rgba_color", "=", "np", ".", "array", "(", "[", "0.95", ",", "0.95", ",", "0.95", ",", "1", "]", ")", ",", "\n", "lateral_friction", "=", "lateral_friction", ",", "\n", "spinning_friction", "=", "spinning_friction", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.set_lateral_friction": [[613, 625], ["pybullet.PyBullet.physics_client.changeDynamics"], "methods", ["None"], ["", "def", "set_lateral_friction", "(", "self", ",", "body", ":", "str", ",", "link", ":", "int", ",", "lateral_friction", ":", "float", ")", "->", "None", ":", "\n", "        ", "\"\"\"Set the lateral friction of a link.\n\n        Args:\n            body (str): Body unique name.\n            link (int): Link index in the body.\n            lateral_friction (float): Lateral friction.\n        \"\"\"", "\n", "self", ".", "physics_client", ".", "changeDynamics", "(", "\n", "bodyUniqueId", "=", "self", ".", "_bodies_idx", "[", "body", "]", ",", "\n", "linkIndex", "=", "link", ",", "\n", "lateralFriction", "=", "lateral_friction", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.set_spinning_friction": [[627, 639], ["pybullet.PyBullet.physics_client.changeDynamics"], "methods", ["None"], ["", "def", "set_spinning_friction", "(", "self", ",", "body", ":", "str", ",", "link", ":", "int", ",", "spinning_friction", ":", "float", ")", "->", "None", ":", "\n", "        ", "\"\"\"Set the spinning friction of a link.\n\n        Args:\n            body (str): Body unique name.\n            link (int): Link index in the body.\n            spinning_friction (float): Spinning friction.\n        \"\"\"", "\n", "self", ".", "physics_client", ".", "changeDynamics", "(", "\n", "bodyUniqueId", "=", "self", ".", "_bodies_idx", "[", "body", "]", ",", "\n", "linkIndex", "=", "link", ",", "\n", "spinningFriction", "=", "spinning_friction", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.utils.distance": [[6, 18], ["numpy.linalg.norm"], "function", ["None"], ["def", "distance", "(", "a", ":", "np", ".", "ndarray", ",", "b", ":", "np", ".", "ndarray", ")", "->", "Union", "[", "float", ",", "np", ".", "ndarray", "]", ":", "\n", "    ", "\"\"\"Compute the distance between two array. This function is vectorized.\n\n    Args:\n        a (np.ndarray): First array.\n        b (np.ndarray): Second array.\n\n    Returns:\n        Union[float, np.ndarray]: The distance between the arrays.\n    \"\"\"", "\n", "assert", "a", ".", "shape", "==", "b", ".", "shape", "\n", "return", "np", ".", "linalg", ".", "norm", "(", "a", "-", "b", ",", "axis", "=", "-", "1", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.utils.angle_distance": [[20, 33], ["numpy.inner"], "function", ["None"], ["", "def", "angle_distance", "(", "a", ":", "np", ".", "ndarray", ",", "b", ":", "np", ".", "ndarray", ")", "->", "Union", "[", "float", ",", "np", ".", "ndarray", "]", ":", "\n", "    ", "\"\"\"Compute the geodesic distance between two array of angles. This function is vectorized.\n\n    Args:\n        a (np.ndarray): First array.\n        b (np.ndarray): Second array.\n\n    Returns:\n        Union[float, np.ndarray]: The geodesic distance between the angles.\n    \"\"\"", "\n", "assert", "a", ".", "shape", "==", "b", ".", "shape", "\n", "dist", "=", "1", "-", "np", ".", "inner", "(", "a", ",", "b", ")", "**", "2", "\n", "return", "dist", "\n", "", ""]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot.__init__": [[23, 41], ["core.PyBulletRobot.sim.no_rendering", "core.PyBulletRobot._load_robot", "core.PyBulletRobot.setup"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.no_rendering", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot._load_robot", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot.setup"], ["def", "__init__", "(", "\n", "self", ",", "\n", "sim", ":", "PyBullet", ",", "\n", "body_name", ":", "str", ",", "\n", "file_name", ":", "str", ",", "\n", "base_position", ":", "np", ".", "ndarray", ",", "\n", "action_space", ":", "gym", ".", "spaces", ".", "Space", ",", "\n", "joint_indices", ":", "np", ".", "ndarray", ",", "\n", "joint_forces", ":", "np", ".", "ndarray", ",", "\n", ")", "->", "None", ":", "\n", "        ", "self", ".", "sim", "=", "sim", "\n", "self", ".", "body_name", "=", "body_name", "\n", "with", "self", ".", "sim", ".", "no_rendering", "(", ")", ":", "\n", "            ", "self", ".", "_load_robot", "(", "file_name", ",", "base_position", ")", "\n", "self", ".", "setup", "(", ")", "\n", "", "self", ".", "action_space", "=", "action_space", "\n", "self", ".", "joint_indices", "=", "joint_indices", "\n", "self", ".", "joint_forces", "=", "joint_forces", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot._load_robot": [[42, 54], ["core.PyBulletRobot.sim.loadURDF"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.loadURDF"], ["", "def", "_load_robot", "(", "self", ",", "file_name", ":", "str", ",", "base_position", ":", "np", ".", "ndarray", ")", "->", "None", ":", "\n", "        ", "\"\"\"Load the robot.\n\n        Args:\n            file_name (str): The URDF file name of the robot.\n            base_position (np.ndarray): The position of the robot, as (x, y, z).\n        \"\"\"", "\n", "self", ".", "sim", ".", "loadURDF", "(", "\n", "body_name", "=", "self", ".", "body_name", ",", "\n", "fileName", "=", "file_name", ",", "\n", "basePosition", "=", "base_position", ",", "\n", "useFixedBase", "=", "True", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot.setup": [[56, 59], ["None"], "methods", ["None"], ["", "def", "setup", "(", "self", ")", "->", "None", ":", "\n", "        ", "\"\"\"Called after robot loading.\"\"\"", "\n", "pass", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot.set_action": [[60, 67], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "set_action", "(", "self", ",", "action", ":", "np", ".", "ndarray", ")", "->", "None", ":", "\n", "        ", "\"\"\"Set the action. Must be called just before sim.step().\n\n        Args:\n            action (np.ndarray): The action.\n        \"\"\"", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot.get_obs": [[68, 75], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "get_obs", "(", "self", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "\"\"\"Return the observation associated to the robot.\n\n        Returns:\n            np.ndarray: The observation.\n        \"\"\"", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot.reset": [[76, 79], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "reset", "(", "self", ")", "->", "None", ":", "\n", "        ", "\"\"\"Reset the robot and return the observation.\"\"\"", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot.get_link_position": [[80, 90], ["core.PyBulletRobot.sim.get_link_position"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot.get_link_position"], ["", "def", "get_link_position", "(", "self", ",", "link", ":", "int", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "\"\"\"Returns the position of a link as (x, y, z)\n\n        Args:\n            link (int): The link index.\n\n        Returns:\n            np.ndarray: Position as (x, y, z)\n        \"\"\"", "\n", "return", "self", ".", "sim", ".", "get_link_position", "(", "self", ".", "body_name", ",", "link", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot.get_link_velocity": [[91, 101], ["core.PyBulletRobot.sim.get_link_velocity"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot.get_link_velocity"], ["", "def", "get_link_velocity", "(", "self", ",", "link", ":", "int", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "\"\"\"Returns the velocity of a link as (vx, vy, vz)\n\n        Args:\n            link (int): The link index.\n\n        Returns:\n            np.ndarray: Velocity as (vx, vy, vz)\n        \"\"\"", "\n", "return", "self", ".", "sim", ".", "get_link_velocity", "(", "self", ".", "body_name", ",", "link", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot.get_joint_angle": [[102, 112], ["core.PyBulletRobot.sim.get_joint_angle"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot.get_joint_angle"], ["", "def", "get_joint_angle", "(", "self", ",", "joint", ":", "int", ")", "->", "float", ":", "\n", "        ", "\"\"\"Returns the angle of a joint\n\n        Args:\n            joint (int): The joint index.\n\n        Returns:\n            float: Joint angle\n        \"\"\"", "\n", "return", "self", ".", "sim", ".", "get_joint_angle", "(", "self", ".", "body_name", ",", "joint", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot.get_joint_velocity": [[113, 123], ["core.PyBulletRobot.sim.get_joint_velocity"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot.get_joint_velocity"], ["", "def", "get_joint_velocity", "(", "self", ",", "joint", ":", "int", ")", "->", "float", ":", "\n", "        ", "\"\"\"Returns the velocity of a joint as (wx, wy, wz)\n\n        Args:\n            joint (int): The joint index.\n\n        Returns:\n            np.ndarray: Joint velocity as (wx, wy, wz)\n        \"\"\"", "\n", "return", "self", ".", "sim", ".", "get_joint_velocity", "(", "self", ".", "body_name", ",", "joint", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot.control_joints": [[124, 135], ["core.PyBulletRobot.sim.control_joints"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot.control_joints"], ["", "def", "control_joints", "(", "self", ",", "target_angles", ":", "np", ".", "ndarray", ")", "->", "None", ":", "\n", "        ", "\"\"\"Control the joints of the robot.\n\n        Args:\n            target_angles (np.ndarray): The target angles. The length of the array must equal to the number of joints.\n        \"\"\"", "\n", "self", ".", "sim", ".", "control_joints", "(", "\n", "body", "=", "self", ".", "body_name", ",", "\n", "joints", "=", "self", ".", "joint_indices", ",", "\n", "target_angles", "=", "target_angles", ",", "\n", "forces", "=", "self", ".", "joint_forces", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot.set_joint_angles": [[137, 144], ["core.PyBulletRobot.sim.set_joint_angles"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot.set_joint_angles"], ["", "def", "set_joint_angles", "(", "self", ",", "angles", ":", "np", ".", "ndarray", ")", "->", "None", ":", "\n", "        ", "\"\"\"Set the joint position of a body. Can induce collisions.\n\n        Args:\n            angles (list): Joint angles.\n        \"\"\"", "\n", "self", ".", "sim", ".", "set_joint_angles", "(", "self", ".", "body_name", ",", "joints", "=", "self", ".", "joint_indices", ",", "angles", "=", "angles", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot.inverse_kinematics": [[145, 158], ["core.PyBulletRobot.sim.inverse_kinematics"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot.inverse_kinematics"], ["", "def", "inverse_kinematics", "(", "self", ",", "link", ":", "int", ",", "position", ":", "np", ".", "ndarray", ",", "orientation", ":", "np", ".", "ndarray", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "\"\"\"Compute the inverse kinematics and return the new joint values.\n\n        Args:\n            link (int): The link.\n            position (x, y, z): Desired position of the link.\n            orientation (x, y, z, w): Desired orientation of the link.\n\n        Returns:\n            List of joint values.\n        \"\"\"", "\n", "inverse_kinematics", "=", "self", ".", "sim", ".", "inverse_kinematics", "(", "self", ".", "body_name", ",", "link", "=", "link", ",", "position", "=", "position", ",", "orientation", "=", "orientation", ")", "\n", "return", "inverse_kinematics", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.Task.__init__": [[166, 169], ["None"], "methods", ["None"], ["def", "__init__", "(", "self", ",", "sim", ":", "PyBullet", ")", "->", "None", ":", "\n", "        ", "self", ".", "sim", "=", "sim", "\n", "self", ".", "goal", "=", "None", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.Task.reset": [[170, 173], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "reset", "(", "self", ")", "->", "None", ":", "\n", "        ", "\"\"\"Reset the task: sample a new goal.\"\"\"", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.Task.get_obs": [[174, 177], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "get_obs", "(", "self", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "\"\"\"Return the observation associated to the task.\"\"\"", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.Task.get_achieved_goal": [[178, 181], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "get_achieved_goal", "(", "self", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "\"\"\"Return the achieved goal.\"\"\"", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.Task.get_goal": [[182, 188], ["RuntimeError", "core.Task.goal.copy"], "methods", ["None"], ["", "def", "get_goal", "(", "self", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "\"\"\"Return the current goal.\"\"\"", "\n", "if", "self", ".", "goal", "is", "None", ":", "\n", "            ", "raise", "RuntimeError", "(", "\"No goal yet, call reset() first\"", ")", "\n", "", "else", ":", "\n", "            ", "return", "self", ".", "goal", ".", "copy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.Task.is_success": [[189, 194], ["None"], "methods", ["None"], ["", "", "@", "abstractmethod", "\n", "def", "is_success", "(", "\n", "self", ",", "achieved_goal", ":", "np", ".", "ndarray", ",", "desired_goal", ":", "np", ".", "ndarray", ",", "info", ":", "Dict", "[", "str", ",", "Any", "]", "=", "{", "}", "\n", ")", "->", "Union", "[", "np", ".", "ndarray", ",", "float", "]", ":", "\n", "        ", "\"\"\"Returns whether the achieved goal match the desired goal.\"\"\"", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.Task.compute_reward": [[195, 200], ["None"], "methods", ["None"], ["", "@", "abstractmethod", "\n", "def", "compute_reward", "(", "\n", "self", ",", "achieved_goal", ":", "np", ".", "ndarray", ",", "desired_goal", ":", "np", ".", "ndarray", ",", "info", ":", "Dict", "[", "str", ",", "Any", "]", "=", "{", "}", "\n", ")", "->", "Union", "[", "np", ".", "ndarray", ",", "float", "]", ":", "\n", "        ", "\"\"\"Compute reward associated to the achieved and the desired goal.\"\"\"", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.__init__": [[212, 230], ["core.RobotTaskEnv.reset", "gym.spaces.Dict", "gym.spaces.Dict", "gym.spaces.Dict", "gym.spaces.Dict", "gym.spaces.Dict", "gym.spaces.Dict", "gym.spaces.Dict", "gym.spaces.Dict", "gym.spaces.Dict", "dict", "gym.spaces.Box", "gym.spaces.Box", "gym.spaces.Box", "gym.spaces.Box", "gym.spaces.Box", "gym.spaces.Box", "gym.spaces.Box", "gym.spaces.Box", "gym.spaces.Box", "gym.spaces.Box", "gym.spaces.Box", "gym.spaces.Box", "gym.spaces.Box", "gym.spaces.Box", "gym.spaces.Box", "gym.spaces.Box", "gym.spaces.Box", "gym.spaces.Box", "gym.spaces.Box", "gym.spaces.Box", "gym.spaces.Box", "gym.spaces.Box", "gym.spaces.Box", "gym.spaces.Box", "gym.spaces.Box", "gym.spaces.Box", "gym.spaces.Box"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip.reset"], ["def", "__init__", "(", "self", ",", "robot", ":", "PyBulletRobot", ",", "task", ":", "Task", ")", "->", "None", ":", "\n", "        ", "assert", "robot", ".", "sim", "==", "task", ".", "sim", ",", "\"The robot and the task must belong to the same simulation.\"", "\n", "self", ".", "sim", "=", "robot", ".", "sim", "\n", "self", ".", "robot", "=", "robot", "\n", "self", ".", "task", "=", "task", "\n", "obs", "=", "self", ".", "reset", "(", ")", "# required for init; seed can be changed later", "\n", "observation_shape", "=", "obs", "[", "\"observation\"", "]", ".", "shape", "\n", "achieved_goal_shape", "=", "obs", "[", "\"achieved_goal\"", "]", ".", "shape", "\n", "desired_goal_shape", "=", "obs", "[", "\"achieved_goal\"", "]", ".", "shape", "\n", "self", ".", "observation_space", "=", "gym", ".", "spaces", ".", "Dict", "(", "\n", "dict", "(", "\n", "observation", "=", "gym", ".", "spaces", ".", "Box", "(", "-", "10.0", ",", "10.0", ",", "shape", "=", "observation_shape", ",", "dtype", "=", "np", ".", "float32", ")", ",", "\n", "desired_goal", "=", "gym", ".", "spaces", ".", "Box", "(", "-", "10.0", ",", "10.0", ",", "shape", "=", "achieved_goal_shape", ",", "dtype", "=", "np", ".", "float32", ")", ",", "\n", "achieved_goal", "=", "gym", ".", "spaces", ".", "Box", "(", "-", "10.0", ",", "10.0", ",", "shape", "=", "desired_goal_shape", ",", "dtype", "=", "np", ".", "float32", ")", ",", "\n", ")", "\n", ")", "\n", "self", ".", "action_space", "=", "self", ".", "robot", ".", "action_space", "\n", "self", ".", "compute_reward", "=", "self", ".", "task", ".", "compute_reward", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv._get_obs": [[231, 240], ["core.RobotTaskEnv.robot.get_obs", "core.RobotTaskEnv.task.get_obs", "numpy.concatenate", "core.RobotTaskEnv.task.get_achieved_goal", "core.RobotTaskEnv.task.get_goal"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip.get_obs", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip.get_obs", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip.get_achieved_goal", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.Task.get_goal"], ["", "def", "_get_obs", "(", "self", ")", "->", "Dict", "[", "str", ",", "np", ".", "ndarray", "]", ":", "\n", "        ", "robot_obs", "=", "self", ".", "robot", ".", "get_obs", "(", ")", "# robot state", "\n", "task_obs", "=", "self", ".", "task", ".", "get_obs", "(", ")", "# object position, velococity, etc...", "\n", "observation", "=", "np", ".", "concatenate", "(", "[", "robot_obs", ",", "task_obs", "]", ")", "\n", "achieved_goal", "=", "self", ".", "task", ".", "get_achieved_goal", "(", ")", "\n", "return", "{", "\n", "\"observation\"", ":", "observation", ",", "\n", "\"achieved_goal\"", ":", "achieved_goal", ",", "\n", "\"desired_goal\"", ":", "self", ".", "task", ".", "get_goal", "(", ")", ",", "\n", "}", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.reset": [[242, 248], ["gym.utils.seeding.np_random", "gym.utils.seeding.np_random", "gym.utils.seeding.np_random", "gym.utils.seeding.np_random", "gym.utils.seeding.np_random", "gym.utils.seeding.np_random", "gym.utils.seeding.np_random", "gym.utils.seeding.np_random", "gym.utils.seeding.np_random", "core.RobotTaskEnv._get_obs", "core.RobotTaskEnv.sim.no_rendering", "core.RobotTaskEnv.robot.reset", "core.RobotTaskEnv.task.reset"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv._get_obs", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.no_rendering", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip.reset", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip.reset"], ["", "def", "reset", "(", "self", ",", "seed", ":", "Optional", "[", "int", "]", "=", "None", ")", "->", "Dict", "[", "str", ",", "np", ".", "ndarray", "]", ":", "\n", "        ", "self", ".", "task", ".", "np_random", ",", "seed", "=", "gym", ".", "utils", ".", "seeding", ".", "np_random", "(", "seed", ")", "\n", "with", "self", ".", "sim", ".", "no_rendering", "(", ")", ":", "\n", "            ", "self", ".", "robot", ".", "reset", "(", ")", "\n", "self", ".", "task", ".", "reset", "(", ")", "\n", "", "return", "self", ".", "_get_obs", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.step": [[249, 258], ["core.RobotTaskEnv.robot.set_action", "core.RobotTaskEnv.sim.step", "core.RobotTaskEnv._get_obs", "core.RobotTaskEnv.task.compute_reward", "isinstance", "core.RobotTaskEnv.task.is_success", "core.RobotTaskEnv.task.get_goal", "core.RobotTaskEnv.task.get_goal"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.robots.panda.Panda.set_action", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.step", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv._get_obs", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip.compute_reward", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip.is_success", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.Task.get_goal", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.Task.get_goal"], ["", "def", "step", "(", "self", ",", "action", ":", "np", ".", "ndarray", ")", "->", "Tuple", "[", "Dict", "[", "str", ",", "np", ".", "ndarray", "]", ",", "float", ",", "bool", ",", "Dict", "[", "str", ",", "Any", "]", "]", ":", "\n", "        ", "self", ".", "robot", ".", "set_action", "(", "action", ")", "\n", "self", ".", "sim", ".", "step", "(", ")", "\n", "obs", "=", "self", ".", "_get_obs", "(", ")", "\n", "done", "=", "False", "\n", "info", "=", "{", "\"is_success\"", ":", "self", ".", "task", ".", "is_success", "(", "obs", "[", "\"achieved_goal\"", "]", ",", "self", ".", "task", ".", "get_goal", "(", ")", ")", "}", "\n", "reward", "=", "self", ".", "task", ".", "compute_reward", "(", "obs", "[", "\"achieved_goal\"", "]", ",", "self", ".", "task", ".", "get_goal", "(", ")", ",", "info", ")", "\n", "assert", "isinstance", "(", "reward", ",", "float", ")", "# needed for pytype cheking", "\n", "return", "obs", ",", "reward", ",", "done", ",", "info", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.close": [[259, 261], ["core.RobotTaskEnv.sim.close"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.close"], ["", "def", "close", "(", "self", ")", "->", "None", ":", "\n", "        ", "self", ".", "sim", ".", "close", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.render": [[262, 303], ["core.RobotTaskEnv.sim.render", "numpy.zeros"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.RobotTaskEnv.render"], ["", "def", "render", "(", "\n", "self", ",", "\n", "mode", ":", "str", ",", "\n", "width", ":", "int", "=", "720", ",", "\n", "height", ":", "int", "=", "480", ",", "\n", "target_position", ":", "Optional", "[", "np", ".", "ndarray", "]", "=", "None", ",", "\n", "distance", ":", "float", "=", "1.4", ",", "\n", "yaw", ":", "float", "=", "45", ",", "\n", "pitch", ":", "float", "=", "-", "30", ",", "\n", "roll", ":", "float", "=", "0", ",", "\n", ")", "->", "Optional", "[", "np", ".", "ndarray", "]", ":", "\n", "        ", "\"\"\"Render.\n\n        If mode is \"human\", make the rendering real-time. All other arguments are\n        unused. If mode is \"rgb_array\", return an RGB array of the scene.\n\n        Args:\n            mode (str): \"human\" of \"rgb_array\". If \"human\", this method waits for the time necessary to have\n                a realistic temporal rendering and all other args are ignored. Else, return an RGB array.\n            width (int, optional): Image width. Defaults to 720.\n            height (int, optional): Image height. Defaults to 480.\n            target_position (np.ndarray, optional): Camera targetting this postion, as (x, y, z).\n                Defaults to [0., 0., 0.].\n            distance (float, optional): Distance of the camera. Defaults to 1.4.\n            yaw (float, optional): Yaw of the camera. Defaults to 45.\n            pitch (float, optional): Pitch of the camera. Defaults to -30.\n            roll (int, optional): Rool of the camera. Defaults to 0.\n\n        Returns:\n            RGB np.ndarray or None: An RGB array if mode is 'rgb_array', else None.\n        \"\"\"", "\n", "target_position", "=", "target_position", "if", "target_position", "is", "not", "None", "else", "np", ".", "zeros", "(", "3", ")", "\n", "return", "self", ".", "sim", ".", "render", "(", "\n", "mode", ",", "\n", "width", "=", "width", ",", "\n", "height", "=", "height", ",", "\n", "target_position", "=", "target_position", ",", "\n", "distance", "=", "distance", ",", "\n", "yaw", "=", "yaw", ",", "\n", "pitch", "=", "pitch", ",", "\n", "roll", "=", "roll", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.robots.panda.Panda.__init__": [[21, 51], ["gym.spaces.Box", "panda_gym.envs.core.PyBulletRobot.__init__", "numpy.array", "numpy.array", "panda.Panda.sim.set_lateral_friction", "panda.Panda.sim.set_lateral_friction", "panda.Panda.sim.set_spinning_friction", "panda.Panda.sim.set_spinning_friction", "numpy.zeros", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip.__init__", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.set_lateral_friction", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.set_lateral_friction", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.set_spinning_friction", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.set_spinning_friction"], ["def", "__init__", "(", "\n", "self", ",", "\n", "sim", ":", "PyBullet", ",", "\n", "block_gripper", ":", "bool", "=", "False", ",", "\n", "base_position", ":", "Optional", "[", "np", ".", "ndarray", "]", "=", "None", ",", "\n", "control_type", ":", "str", "=", "\"ee\"", ",", "\n", ")", "->", "None", ":", "\n", "        ", "base_position", "=", "base_position", "if", "base_position", "is", "not", "None", "else", "np", ".", "zeros", "(", "3", ")", "\n", "self", ".", "block_gripper", "=", "block_gripper", "\n", "self", ".", "control_type", "=", "control_type", "\n", "n_action", "=", "3", "if", "self", ".", "control_type", "==", "\"ee\"", "else", "7", "# control (x, y z) if \"ee\", else, control the 7 joints", "\n", "n_action", "+=", "0", "if", "self", ".", "block_gripper", "else", "1", "\n", "action_space", "=", "spaces", ".", "Box", "(", "-", "1.0", ",", "1.0", ",", "shape", "=", "(", "n_action", ",", ")", ",", "dtype", "=", "np", ".", "float32", ")", "\n", "super", "(", ")", ".", "__init__", "(", "\n", "sim", ",", "\n", "body_name", "=", "\"panda\"", ",", "\n", "file_name", "=", "\"franka_panda/panda.urdf\"", ",", "\n", "base_position", "=", "base_position", ",", "\n", "action_space", "=", "action_space", ",", "\n", "joint_indices", "=", "np", ".", "array", "(", "[", "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "9", ",", "10", "]", ")", ",", "\n", "joint_forces", "=", "np", ".", "array", "(", "[", "87.0", ",", "87.0", ",", "87.0", ",", "87.0", ",", "12.0", ",", "120.0", ",", "120.0", ",", "170.0", ",", "170.0", "]", ")", ",", "\n", ")", "\n", "\n", "self", ".", "fingers_indices", "=", "np", ".", "array", "(", "[", "9", ",", "10", "]", ")", "\n", "self", ".", "neutral_joint_values", "=", "np", ".", "array", "(", "[", "0.00", ",", "0.41", ",", "0.00", ",", "-", "1.85", ",", "0.00", ",", "2.26", ",", "0.79", ",", "0.00", ",", "0.00", "]", ")", "\n", "self", ".", "ee_link", "=", "11", "\n", "self", ".", "sim", ".", "set_lateral_friction", "(", "self", ".", "body_name", ",", "self", ".", "fingers_indices", "[", "0", "]", ",", "lateral_friction", "=", "1.0", ")", "\n", "self", ".", "sim", ".", "set_lateral_friction", "(", "self", ".", "body_name", ",", "self", ".", "fingers_indices", "[", "1", "]", ",", "lateral_friction", "=", "1.0", ")", "\n", "self", ".", "sim", ".", "set_spinning_friction", "(", "self", ".", "body_name", ",", "self", ".", "fingers_indices", "[", "0", "]", ",", "spinning_friction", "=", "0.001", ")", "\n", "self", ".", "sim", ".", "set_spinning_friction", "(", "self", ".", "body_name", ",", "self", ".", "fingers_indices", "[", "1", "]", ",", "spinning_friction", "=", "0.001", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.robots.panda.Panda.set_action": [[52, 71], ["numpy.clip.copy", "numpy.clip", "numpy.concatenate", "panda.Panda.control_joints", "panda.Panda.ee_displacement_to_target_arm_angles", "panda.Panda.arm_joint_ctrl_to_target_arm_angles", "panda.Panda.get_fingers_width"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot.control_joints", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.robots.panda.Panda.ee_displacement_to_target_arm_angles", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.robots.panda.Panda.arm_joint_ctrl_to_target_arm_angles", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.robots.panda.Panda.get_fingers_width"], ["", "def", "set_action", "(", "self", ",", "action", ":", "np", ".", "ndarray", ")", "->", "None", ":", "\n", "        ", "action", "=", "action", ".", "copy", "(", ")", "# ensure action don't change", "\n", "action", "=", "np", ".", "clip", "(", "action", ",", "self", ".", "action_space", ".", "low", ",", "self", ".", "action_space", ".", "high", ")", "\n", "if", "self", ".", "control_type", "==", "\"ee\"", ":", "\n", "            ", "ee_displacement", "=", "action", "[", ":", "3", "]", "\n", "target_arm_angles", "=", "self", ".", "ee_displacement_to_target_arm_angles", "(", "ee_displacement", ")", "\n", "", "else", ":", "\n", "            ", "arm_joint_ctrl", "=", "action", "[", ":", "7", "]", "\n", "target_arm_angles", "=", "self", ".", "arm_joint_ctrl_to_target_arm_angles", "(", "arm_joint_ctrl", ")", "\n", "\n", "", "if", "self", ".", "block_gripper", ":", "\n", "            ", "target_fingers_width", "=", "0", "\n", "", "else", ":", "\n", "            ", "fingers_ctrl", "=", "action", "[", "-", "1", "]", "*", "0.2", "# limit maximum change in position", "\n", "fingers_width", "=", "self", ".", "get_fingers_width", "(", ")", "\n", "target_fingers_width", "=", "fingers_width", "+", "fingers_ctrl", "\n", "\n", "", "target_angles", "=", "np", ".", "concatenate", "(", "(", "target_arm_angles", ",", "[", "target_fingers_width", "/", "2", ",", "target_fingers_width", "/", "2", "]", ")", ")", "\n", "self", ".", "control_joints", "(", "target_angles", "=", "target_angles", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.robots.panda.Panda.ee_displacement_to_target_arm_angles": [[72, 93], ["panda.Panda.get_ee_position", "numpy.max", "panda.Panda.inverse_kinematics", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.robots.panda.Panda.get_ee_position", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot.inverse_kinematics"], ["", "def", "ee_displacement_to_target_arm_angles", "(", "self", ",", "ee_displacement", ":", "np", ".", "ndarray", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "\"\"\"Compute the target arm angles from the end-effector displacement.\n\n        Args:\n            ee_displacement (np.ndarray): End-effector displacement, as (dx, dy, dy).\n\n        Returns:\n            np.ndarray: Target arm angles, as the angles of the 7 arm joints.\n        \"\"\"", "\n", "ee_displacement", "=", "ee_displacement", "[", ":", "3", "]", "*", "0.05", "# limit maximum change in position", "\n", "# get the current position and the target position", "\n", "ee_position", "=", "self", ".", "get_ee_position", "(", ")", "\n", "target_ee_position", "=", "ee_position", "+", "ee_displacement", "\n", "# Clip the height target. For some reason, it has a great impact on learning", "\n", "target_ee_position", "[", "2", "]", "=", "np", ".", "max", "(", "(", "0", ",", "target_ee_position", "[", "2", "]", ")", ")", "\n", "# compute the new joint angles", "\n", "target_arm_angles", "=", "self", ".", "inverse_kinematics", "(", "\n", "link", "=", "self", ".", "ee_link", ",", "position", "=", "target_ee_position", ",", "orientation", "=", "np", ".", "array", "(", "[", "1.0", ",", "0.0", ",", "0.0", ",", "0.0", "]", ")", "\n", ")", "\n", "target_arm_angles", "=", "target_arm_angles", "[", ":", "7", "]", "# remove fingers angles", "\n", "return", "target_arm_angles", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.robots.panda.Panda.arm_joint_ctrl_to_target_arm_angles": [[94, 108], ["numpy.array", "panda.Panda.get_joint_angle", "range"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot.get_joint_angle"], ["", "def", "arm_joint_ctrl_to_target_arm_angles", "(", "self", ",", "arm_joint_ctrl", ":", "np", ".", "ndarray", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "\"\"\"Compute the target arm angles from the arm joint control.\n\n        Args:\n            arm_joint_ctrl (np.ndarray): Control of the 7 joints.\n\n        Returns:\n            np.ndarray: Target arm angles, as the angles of the 7 arm joints.\n        \"\"\"", "\n", "arm_joint_ctrl", "=", "arm_joint_ctrl", "*", "0.05", "# limit maximum change in position", "\n", "# get the current position and the target position", "\n", "current_arm_joint_angles", "=", "np", ".", "array", "(", "[", "self", ".", "get_joint_angle", "(", "joint", "=", "i", ")", "for", "i", "in", "range", "(", "7", ")", "]", ")", "\n", "target_arm_angles", "=", "current_arm_joint_angles", "+", "arm_joint_ctrl", "\n", "return", "target_arm_angles", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.robots.panda.Panda.get_obs": [[109, 120], ["numpy.array", "numpy.array", "panda.Panda.get_ee_position", "panda.Panda.get_ee_velocity", "panda.Panda.get_fingers_width", "numpy.concatenate", "numpy.concatenate"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.robots.panda.Panda.get_ee_position", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.robots.panda.Panda.get_ee_velocity", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.robots.panda.Panda.get_fingers_width"], ["", "def", "get_obs", "(", "self", ")", "->", "np", ".", "ndarray", ":", "\n", "# end-effector position and velocity", "\n", "        ", "ee_position", "=", "np", ".", "array", "(", "self", ".", "get_ee_position", "(", ")", ")", "\n", "ee_velocity", "=", "np", ".", "array", "(", "self", ".", "get_ee_velocity", "(", ")", ")", "\n", "# fingers opening", "\n", "if", "not", "self", ".", "block_gripper", ":", "\n", "            ", "fingers_width", "=", "self", ".", "get_fingers_width", "(", ")", "\n", "obs", "=", "np", ".", "concatenate", "(", "(", "ee_position", ",", "ee_velocity", ",", "[", "fingers_width", "]", ")", ")", "\n", "", "else", ":", "\n", "            ", "obs", "=", "np", ".", "concatenate", "(", "(", "ee_position", ",", "ee_velocity", ")", ")", "\n", "", "return", "obs", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.robots.panda.Panda.reset": [[121, 123], ["panda.Panda.set_joint_neutral"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.robots.panda.Panda.set_joint_neutral"], ["", "def", "reset", "(", "self", ")", "->", "None", ":", "\n", "        ", "self", ".", "set_joint_neutral", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.robots.panda.Panda.set_joint_neutral": [[124, 127], ["panda.Panda.set_joint_angles"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot.set_joint_angles"], ["", "def", "set_joint_neutral", "(", "self", ")", "->", "None", ":", "\n", "        ", "\"\"\"Set the robot to its neutral pose.\"\"\"", "\n", "self", ".", "set_joint_angles", "(", "self", ".", "neutral_joint_values", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.robots.panda.Panda.get_fingers_width": [[128, 133], ["panda.Panda.sim.get_joint_angle", "panda.Panda.sim.get_joint_angle"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot.get_joint_angle", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot.get_joint_angle"], ["", "def", "get_fingers_width", "(", "self", ")", "->", "float", ":", "\n", "        ", "\"\"\"Get the distance between the fingers.\"\"\"", "\n", "finger1", "=", "self", ".", "sim", ".", "get_joint_angle", "(", "self", ".", "body_name", ",", "self", ".", "fingers_indices", "[", "0", "]", ")", "\n", "finger2", "=", "self", ".", "sim", ".", "get_joint_angle", "(", "self", ".", "body_name", ",", "self", ".", "fingers_indices", "[", "1", "]", ")", "\n", "return", "finger1", "+", "finger2", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.robots.panda.Panda.get_ee_position": [[134, 137], ["panda.Panda.get_link_position"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot.get_link_position"], ["", "def", "get_ee_position", "(", "self", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "\"\"\"Returns the position of the ned-effector as (x, y, z)\"\"\"", "\n", "return", "self", ".", "get_link_position", "(", "self", ".", "ee_link", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.robots.panda.Panda.get_ee_velocity": [[138, 141], ["panda.Panda.get_link_velocity"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.envs.core.PyBulletRobot.get_link_velocity"], ["", "def", "get_ee_velocity", "(", "self", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "\"\"\"Returns the velocity of the end-effector as (vx, vy, vz)\"\"\"", "\n", "return", "self", ".", "get_link_velocity", "(", "self", ".", "ee_link", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_tasks.panda_flip.PandaFlipEnv.__init__": [[19, 24], ["panda_gym.pybullet.PyBullet", "panda_gym.envs.robots.panda.Panda", "panda_gym.envs.tasks.flip.Flip", "panda_gym.envs.core.RobotTaskEnv.__init__", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip.__init__"], ["def", "__init__", "(", "self", ",", "render", ":", "bool", "=", "False", ",", "reward_type", ":", "str", "=", "\"sparse\"", ",", "control_type", ":", "str", "=", "\"ee\"", ")", "->", "None", ":", "\n", "        ", "sim", "=", "PyBullet", "(", "render", "=", "render", ")", "\n", "robot", "=", "Panda", "(", "sim", ",", "block_gripper", "=", "False", ",", "base_position", "=", "np", ".", "array", "(", "[", "-", "0.6", ",", "0.0", ",", "0.0", "]", ")", ",", "control_type", "=", "control_type", ")", "\n", "task", "=", "Flip", "(", "sim", ",", "reward_type", "=", "reward_type", ")", "\n", "super", "(", ")", ".", "__init__", "(", "robot", ",", "task", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_tasks.panda_reach.PandaReachEnv.__init__": [[19, 24], ["panda_gym.pybullet.PyBullet", "panda_gym.envs.robots.panda.Panda", "panda_gym.envs.tasks.reach.Reach", "panda_gym.envs.core.RobotTaskEnv.__init__", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip.__init__"], ["def", "__init__", "(", "self", ",", "render", ":", "bool", "=", "False", ",", "reward_type", ":", "str", "=", "\"sparse\"", ",", "control_type", ":", "str", "=", "\"ee\"", ")", "->", "None", ":", "\n", "        ", "sim", "=", "PyBullet", "(", "render", "=", "render", ")", "\n", "robot", "=", "Panda", "(", "sim", ",", "block_gripper", "=", "True", ",", "base_position", "=", "np", ".", "array", "(", "[", "-", "0.6", ",", "0.0", ",", "0.0", "]", ")", ",", "control_type", "=", "control_type", ")", "\n", "task", "=", "Reach", "(", "sim", ",", "reward_type", "=", "reward_type", ",", "get_ee_position", "=", "robot", ".", "get_ee_position", ")", "\n", "super", "(", ")", ".", "__init__", "(", "robot", ",", "task", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_tasks.panda_slide.PandaSlideEnv.__init__": [[19, 24], ["panda_gym.pybullet.PyBullet", "panda_gym.envs.robots.panda.Panda", "panda_gym.envs.tasks.slide.Slide", "panda_gym.envs.core.RobotTaskEnv.__init__", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip.__init__"], ["def", "__init__", "(", "self", ",", "render", ":", "bool", "=", "False", ",", "reward_type", ":", "str", "=", "\"sparse\"", ",", "control_type", ":", "str", "=", "\"ee\"", ")", "->", "None", ":", "\n", "        ", "sim", "=", "PyBullet", "(", "render", "=", "render", ")", "\n", "robot", "=", "Panda", "(", "sim", ",", "block_gripper", "=", "True", ",", "base_position", "=", "np", ".", "array", "(", "[", "-", "0.6", ",", "0.0", ",", "0.0", "]", ")", ",", "control_type", "=", "control_type", ")", "\n", "task", "=", "Slide", "(", "sim", ",", "reward_type", "=", "reward_type", ")", "\n", "super", "(", ")", ".", "__init__", "(", "robot", ",", "task", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_tasks.panda_pick_and_place.PandaPickAndPlaceEnv.__init__": [[19, 24], ["panda_gym.pybullet.PyBullet", "panda_gym.envs.robots.panda.Panda", "panda_gym.envs.tasks.pick_and_place.PickAndPlace", "panda_gym.envs.core.RobotTaskEnv.__init__", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip.__init__"], ["def", "__init__", "(", "self", ",", "render", ":", "bool", "=", "False", ",", "reward_type", ":", "str", "=", "\"sparse\"", ",", "control_type", ":", "str", "=", "\"ee\"", ")", "->", "None", ":", "\n", "        ", "sim", "=", "PyBullet", "(", "render", "=", "render", ")", "\n", "robot", "=", "Panda", "(", "sim", ",", "block_gripper", "=", "False", ",", "base_position", "=", "np", ".", "array", "(", "[", "-", "0.6", ",", "0.0", ",", "0.0", "]", ")", ",", "control_type", "=", "control_type", ")", "\n", "task", "=", "PickAndPlace", "(", "sim", ",", "reward_type", "=", "reward_type", ")", "\n", "super", "(", ")", ".", "__init__", "(", "robot", ",", "task", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_tasks.panda_push.PandaPushEnv.__init__": [[19, 24], ["panda_gym.pybullet.PyBullet", "panda_gym.envs.robots.panda.Panda", "panda_gym.envs.tasks.push.Push", "panda_gym.envs.core.RobotTaskEnv.__init__", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip.__init__"], ["def", "__init__", "(", "self", ",", "render", ":", "bool", "=", "False", ",", "reward_type", ":", "str", "=", "\"sparse\"", ",", "control_type", ":", "str", "=", "\"ee\"", ")", "->", "None", ":", "\n", "        ", "sim", "=", "PyBullet", "(", "render", "=", "render", ")", "\n", "robot", "=", "Panda", "(", "sim", ",", "block_gripper", "=", "True", ",", "base_position", "=", "np", ".", "array", "(", "[", "-", "0.6", ",", "0.0", ",", "0.0", "]", ")", ",", "control_type", "=", "control_type", ")", "\n", "task", "=", "Push", "(", "sim", ",", "reward_type", "=", "reward_type", ")", "\n", "super", "(", ")", ".", "__init__", "(", "robot", ",", "task", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_tasks.panda_stack.PandaStackEnv.__init__": [[19, 24], ["panda_gym.pybullet.PyBullet", "panda_gym.envs.robots.panda.Panda", "panda_gym.envs.tasks.stack.Stack", "panda_gym.envs.core.RobotTaskEnv.__init__", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip.__init__"], ["def", "__init__", "(", "self", ",", "render", ":", "bool", "=", "False", ",", "reward_type", ":", "str", "=", "\"sparse\"", ",", "control_type", ":", "str", "=", "\"ee\"", ")", "->", "None", ":", "\n", "        ", "sim", "=", "PyBullet", "(", "render", "=", "render", ")", "\n", "robot", "=", "Panda", "(", "sim", ",", "block_gripper", "=", "False", ",", "base_position", "=", "np", ".", "array", "(", "[", "-", "0.6", ",", "0.0", ",", "0.0", "]", ")", ",", "control_type", "=", "control_type", ")", "\n", "task", "=", "Stack", "(", "sim", ",", "reward_type", "=", "reward_type", ")", "\n", "super", "(", ")", ".", "__init__", "(", "robot", ",", "task", ")", "\n", "", "", ""]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.pick_and_place.PickAndPlace.__init__": [[11, 31], ["panda_gym.envs.core.Task.__init__", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "pick_and_place.PickAndPlace.sim.no_rendering", "pick_and_place.PickAndPlace._create_scene", "pick_and_place.PickAndPlace.sim.place_visualizer", "numpy.zeros"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip.__init__", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.no_rendering", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip._create_scene", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.place_visualizer"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "sim", ":", "PyBullet", ",", "\n", "reward_type", ":", "str", "=", "\"sparse\"", ",", "\n", "distance_threshold", ":", "float", "=", "0.05", ",", "\n", "goal_xy_range", ":", "float", "=", "0.3", ",", "\n", "goal_z_range", ":", "float", "=", "0.2", ",", "\n", "obj_xy_range", ":", "float", "=", "0.3", ",", "\n", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "sim", ")", "\n", "self", ".", "reward_type", "=", "reward_type", "\n", "self", ".", "distance_threshold", "=", "distance_threshold", "\n", "self", ".", "object_size", "=", "0.04", "\n", "self", ".", "goal_range_low", "=", "np", ".", "array", "(", "[", "-", "goal_xy_range", "/", "2", ",", "-", "goal_xy_range", "/", "2", ",", "0", "]", ")", "\n", "self", ".", "goal_range_high", "=", "np", ".", "array", "(", "[", "goal_xy_range", "/", "2", ",", "goal_xy_range", "/", "2", ",", "goal_z_range", "]", ")", "\n", "self", ".", "obj_range_low", "=", "np", ".", "array", "(", "[", "-", "obj_xy_range", "/", "2", ",", "-", "obj_xy_range", "/", "2", ",", "0", "]", ")", "\n", "self", ".", "obj_range_high", "=", "np", ".", "array", "(", "[", "obj_xy_range", "/", "2", ",", "obj_xy_range", "/", "2", ",", "0", "]", ")", "\n", "with", "self", ".", "sim", ".", "no_rendering", "(", ")", ":", "\n", "            ", "self", ".", "_create_scene", "(", ")", "\n", "self", ".", "sim", ".", "place_visualizer", "(", "target_position", "=", "np", ".", "zeros", "(", "3", ")", ",", "distance", "=", "0.9", ",", "yaw", "=", "45", ",", "pitch", "=", "-", "30", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.pick_and_place.PickAndPlace._create_scene": [[32, 50], ["pick_and_place.PickAndPlace.sim.create_plane", "pick_and_place.PickAndPlace.sim.create_table", "pick_and_place.PickAndPlace.sim.create_box", "pick_and_place.PickAndPlace.sim.create_box", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.ones", "numpy.ones"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_plane", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_table", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_box", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_box"], ["", "", "def", "_create_scene", "(", "self", ")", "->", "None", ":", "\n", "        ", "\"\"\"Create the scene.\"\"\"", "\n", "self", ".", "sim", ".", "create_plane", "(", "z_offset", "=", "-", "0.4", ")", "\n", "self", ".", "sim", ".", "create_table", "(", "length", "=", "1.1", ",", "width", "=", "0.7", ",", "height", "=", "0.4", ",", "x_offset", "=", "-", "0.3", ")", "\n", "self", ".", "sim", ".", "create_box", "(", "\n", "body_name", "=", "\"object\"", ",", "\n", "half_extents", "=", "np", ".", "ones", "(", "3", ")", "*", "self", ".", "object_size", "/", "2", ",", "\n", "mass", "=", "1.0", ",", "\n", "position", "=", "np", ".", "array", "(", "[", "0.0", ",", "0.0", ",", "self", ".", "object_size", "/", "2", "]", ")", ",", "\n", "rgba_color", "=", "np", ".", "array", "(", "[", "0.1", ",", "0.9", ",", "0.1", ",", "1.0", "]", ")", ",", "\n", ")", "\n", "self", ".", "sim", ".", "create_box", "(", "\n", "body_name", "=", "\"target\"", ",", "\n", "half_extents", "=", "np", ".", "ones", "(", "3", ")", "*", "self", ".", "object_size", "/", "2", ",", "\n", "mass", "=", "0.0", ",", "\n", "ghost", "=", "True", ",", "\n", "position", "=", "np", ".", "array", "(", "[", "0.0", ",", "0.0", ",", "0.05", "]", ")", ",", "\n", "rgba_color", "=", "np", ".", "array", "(", "[", "0.1", ",", "0.9", ",", "0.1", ",", "0.3", "]", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.pick_and_place.PickAndPlace.get_obs": [[52, 60], ["pick_and_place.PickAndPlace.sim.get_base_position", "pick_and_place.PickAndPlace.sim.get_base_rotation", "pick_and_place.PickAndPlace.sim.get_base_velocity", "pick_and_place.PickAndPlace.sim.get_base_angular_velocity", "numpy.concatenate"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_position", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_rotation", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_velocity", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_angular_velocity"], ["", "def", "get_obs", "(", "self", ")", "->", "np", ".", "ndarray", ":", "\n", "# position, rotation of the object", "\n", "        ", "object_position", "=", "self", ".", "sim", ".", "get_base_position", "(", "\"object\"", ")", "\n", "object_rotation", "=", "self", ".", "sim", ".", "get_base_rotation", "(", "\"object\"", ")", "\n", "object_velocity", "=", "self", ".", "sim", ".", "get_base_velocity", "(", "\"object\"", ")", "\n", "object_angular_velocity", "=", "self", ".", "sim", ".", "get_base_angular_velocity", "(", "\"object\"", ")", "\n", "observation", "=", "np", ".", "concatenate", "(", "[", "object_position", ",", "object_rotation", ",", "object_velocity", ",", "object_angular_velocity", "]", ")", "\n", "return", "observation", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.pick_and_place.PickAndPlace.get_achieved_goal": [[61, 64], ["numpy.array", "pick_and_place.PickAndPlace.sim.get_base_position"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_position"], ["", "def", "get_achieved_goal", "(", "self", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "object_position", "=", "np", ".", "array", "(", "self", ".", "sim", ".", "get_base_position", "(", "\"object\"", ")", ")", "\n", "return", "object_position", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.pick_and_place.PickAndPlace.reset": [[65, 70], ["pick_and_place.PickAndPlace._sample_goal", "pick_and_place.PickAndPlace._sample_object", "pick_and_place.PickAndPlace.sim.set_base_pose", "pick_and_place.PickAndPlace.sim.set_base_pose", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip._sample_goal", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip._sample_object", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.set_base_pose", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.set_base_pose"], ["", "def", "reset", "(", "self", ")", "->", "None", ":", "\n", "        ", "self", ".", "goal", "=", "self", ".", "_sample_goal", "(", ")", "\n", "object_position", "=", "self", ".", "_sample_object", "(", ")", "\n", "self", ".", "sim", ".", "set_base_pose", "(", "\"target\"", ",", "self", ".", "goal", ",", "np", ".", "array", "(", "[", "0.0", ",", "0.0", ",", "0.0", ",", "1.0", "]", ")", ")", "\n", "self", ".", "sim", ".", "set_base_pose", "(", "\"object\"", ",", "object_position", ",", "np", ".", "array", "(", "[", "0.0", ",", "0.0", ",", "0.0", ",", "1.0", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.pick_and_place.PickAndPlace._sample_goal": [[71, 79], ["numpy.array", "pick_and_place.PickAndPlace.np_random.uniform", "pick_and_place.PickAndPlace.np_random.random"], "methods", ["None"], ["", "def", "_sample_goal", "(", "self", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "\"\"\"Sample a goal.\"\"\"", "\n", "goal", "=", "np", ".", "array", "(", "[", "0.0", ",", "0.0", ",", "self", ".", "object_size", "/", "2", "]", ")", "# z offset for the cube center", "\n", "noise", "=", "self", ".", "np_random", ".", "uniform", "(", "self", ".", "goal_range_low", ",", "self", ".", "goal_range_high", ")", "\n", "if", "self", ".", "np_random", ".", "random", "(", ")", "<", "0.3", ":", "\n", "            ", "noise", "[", "2", "]", "=", "0.0", "\n", "", "goal", "+=", "noise", "\n", "return", "goal", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.pick_and_place.PickAndPlace._sample_object": [[80, 86], ["numpy.array", "pick_and_place.PickAndPlace.np_random.uniform"], "methods", ["None"], ["", "def", "_sample_object", "(", "self", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "\"\"\"Randomize start position of object.\"\"\"", "\n", "object_position", "=", "np", ".", "array", "(", "[", "0.0", ",", "0.0", ",", "self", ".", "object_size", "/", "2", "]", ")", "\n", "noise", "=", "self", ".", "np_random", ".", "uniform", "(", "self", ".", "obj_range_low", ",", "self", ".", "obj_range_high", ")", "\n", "object_position", "+=", "noise", "\n", "return", "object_position", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.pick_and_place.PickAndPlace.is_success": [[87, 90], ["panda_gym.utils.distance", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.utils.distance"], ["", "def", "is_success", "(", "self", ",", "achieved_goal", ":", "np", ".", "ndarray", ",", "desired_goal", ":", "np", ".", "ndarray", ")", "->", "Union", "[", "np", ".", "ndarray", ",", "float", "]", ":", "\n", "        ", "d", "=", "distance", "(", "achieved_goal", ",", "desired_goal", ")", "\n", "return", "np", ".", "array", "(", "d", "<", "self", ".", "distance_threshold", ",", "dtype", "=", "np", ".", "float64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.pick_and_place.PickAndPlace.compute_reward": [[91, 97], ["panda_gym.utils.distance", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.utils.distance"], ["", "def", "compute_reward", "(", "self", ",", "achieved_goal", ",", "desired_goal", ",", "info", ":", "Dict", "[", "str", ",", "Any", "]", ")", "->", "Union", "[", "np", ".", "ndarray", ",", "float", "]", ":", "\n", "        ", "d", "=", "distance", "(", "achieved_goal", ",", "desired_goal", ")", "\n", "if", "self", ".", "reward_type", "==", "\"sparse\"", ":", "\n", "            ", "return", "-", "np", ".", "array", "(", "d", ">", "self", ".", "distance_threshold", ",", "dtype", "=", "np", ".", "float64", ")", "\n", "", "else", ":", "\n", "            ", "return", "-", "d", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.slide.Slide.__init__": [[10, 30], ["panda_gym.envs.core.Task.__init__", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "slide.Slide.sim.no_rendering", "slide.Slide._create_scene", "slide.Slide.sim.place_visualizer", "numpy.zeros"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip.__init__", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.no_rendering", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip._create_scene", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.place_visualizer"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "sim", ",", "\n", "reward_type", "=", "\"sparse\"", ",", "\n", "distance_threshold", "=", "0.05", ",", "\n", "goal_xy_range", "=", "0.3", ",", "\n", "goal_x_offset", "=", "0.4", ",", "\n", "obj_xy_range", "=", "0.3", ",", "\n", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "sim", ")", "\n", "self", ".", "reward_type", "=", "reward_type", "\n", "self", ".", "distance_threshold", "=", "distance_threshold", "\n", "self", ".", "object_size", "=", "0.06", "\n", "self", ".", "goal_range_low", "=", "np", ".", "array", "(", "[", "-", "goal_xy_range", "/", "2", "+", "goal_x_offset", ",", "-", "goal_xy_range", "/", "2", ",", "0", "]", ")", "\n", "self", ".", "goal_range_high", "=", "np", ".", "array", "(", "[", "goal_xy_range", "/", "2", "+", "goal_x_offset", ",", "goal_xy_range", "/", "2", ",", "0", "]", ")", "\n", "self", ".", "obj_range_low", "=", "np", ".", "array", "(", "[", "-", "obj_xy_range", "/", "2", ",", "-", "obj_xy_range", "/", "2", ",", "0", "]", ")", "\n", "self", ".", "obj_range_high", "=", "np", ".", "array", "(", "[", "obj_xy_range", "/", "2", ",", "obj_xy_range", "/", "2", ",", "0", "]", ")", "\n", "with", "self", ".", "sim", ".", "no_rendering", "(", ")", ":", "\n", "            ", "self", ".", "_create_scene", "(", ")", "\n", "self", ".", "sim", ".", "place_visualizer", "(", "target_position", "=", "np", ".", "zeros", "(", "3", ")", ",", "distance", "=", "0.9", ",", "yaw", "=", "45", ",", "pitch", "=", "-", "30", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.slide.Slide._create_scene": [[31, 51], ["slide.Slide.sim.create_plane", "slide.Slide.sim.create_table", "slide.Slide.sim.create_cylinder", "slide.Slide.sim.create_cylinder", "numpy.array", "numpy.array", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_plane", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_table", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_cylinder", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_cylinder"], ["", "", "def", "_create_scene", "(", "self", ")", "->", "None", ":", "\n", "        ", "self", ".", "sim", ".", "create_plane", "(", "z_offset", "=", "-", "0.4", ")", "\n", "self", ".", "sim", ".", "create_table", "(", "length", "=", "1.4", ",", "width", "=", "0.7", ",", "height", "=", "0.4", ",", "x_offset", "=", "-", "0.1", ")", "\n", "self", ".", "sim", ".", "create_cylinder", "(", "\n", "body_name", "=", "\"object\"", ",", "\n", "mass", "=", "1.0", ",", "\n", "radius", "=", "self", ".", "object_size", "/", "2", ",", "\n", "height", "=", "self", ".", "object_size", "/", "2", ",", "\n", "position", "=", "np", ".", "array", "(", "[", "0.0", ",", "0.0", ",", "self", ".", "object_size", "/", "2", "]", ")", ",", "\n", "rgba_color", "=", "np", ".", "array", "(", "[", "0.1", ",", "0.9", ",", "0.1", ",", "1.0", "]", ")", ",", "\n", "lateral_friction", "=", "0.04", ",", "\n", ")", "\n", "self", ".", "sim", ".", "create_cylinder", "(", "\n", "body_name", "=", "\"target\"", ",", "\n", "mass", "=", "0.0", ",", "\n", "ghost", "=", "True", ",", "\n", "radius", "=", "self", ".", "object_size", "/", "2", ",", "\n", "height", "=", "self", ".", "object_size", "/", "2", ",", "\n", "position", "=", "np", ".", "array", "(", "[", "0.0", ",", "0.0", ",", "self", ".", "object_size", "/", "2", "]", ")", ",", "\n", "rgba_color", "=", "np", ".", "array", "(", "[", "0.1", ",", "0.9", ",", "0.1", ",", "0.3", "]", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.slide.Slide.get_obs": [[53, 68], ["numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.concatenate", "slide.Slide.sim.get_base_position", "slide.Slide.sim.get_base_rotation", "slide.Slide.sim.get_base_velocity", "slide.Slide.sim.get_base_angular_velocity"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_position", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_rotation", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_velocity", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_angular_velocity"], ["", "def", "get_obs", "(", "self", ")", "->", "np", ".", "ndarray", ":", "\n", "# position, rotation of the object", "\n", "        ", "object_position", "=", "np", ".", "array", "(", "self", ".", "sim", ".", "get_base_position", "(", "\"object\"", ")", ")", "\n", "object_rotation", "=", "np", ".", "array", "(", "self", ".", "sim", ".", "get_base_rotation", "(", "\"object\"", ")", ")", "\n", "object_velocity", "=", "np", ".", "array", "(", "self", ".", "sim", ".", "get_base_velocity", "(", "\"object\"", ")", ")", "\n", "object_angular_velocity", "=", "np", ".", "array", "(", "self", ".", "sim", ".", "get_base_angular_velocity", "(", "\"object\"", ")", ")", "\n", "observation", "=", "np", ".", "concatenate", "(", "\n", "[", "\n", "object_position", ",", "\n", "object_rotation", ",", "\n", "object_velocity", ",", "\n", "object_angular_velocity", ",", "\n", "]", "\n", ")", "\n", "return", "observation", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.slide.Slide.get_achieved_goal": [[69, 72], ["numpy.array", "numpy.array.copy", "slide.Slide.sim.get_base_position"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_position"], ["", "def", "get_achieved_goal", "(", "self", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "object_position", "=", "np", ".", "array", "(", "self", ".", "sim", ".", "get_base_position", "(", "\"object\"", ")", ")", "\n", "return", "object_position", ".", "copy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.slide.Slide.reset": [[73, 78], ["slide.Slide._sample_goal", "slide.Slide._sample_object", "slide.Slide.sim.set_base_pose", "slide.Slide.sim.set_base_pose", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip._sample_goal", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip._sample_object", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.set_base_pose", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.set_base_pose"], ["", "def", "reset", "(", "self", ")", "->", "None", ":", "\n", "        ", "self", ".", "goal", "=", "self", ".", "_sample_goal", "(", ")", "\n", "object_position", "=", "self", ".", "_sample_object", "(", ")", "\n", "self", ".", "sim", ".", "set_base_pose", "(", "\"target\"", ",", "self", ".", "goal", ",", "np", ".", "array", "(", "[", "0.0", ",", "0.0", ",", "0.0", ",", "1.0", "]", ")", ")", "\n", "self", ".", "sim", ".", "set_base_pose", "(", "\"object\"", ",", "object_position", ",", "np", ".", "array", "(", "[", "0.0", ",", "0.0", ",", "0.0", ",", "1.0", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.slide.Slide._sample_goal": [[79, 85], ["numpy.array", "slide.Slide.np_random.uniform", "numpy.array.copy"], "methods", ["None"], ["", "def", "_sample_goal", "(", "self", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "\"\"\"Randomize goal.\"\"\"", "\n", "goal", "=", "np", ".", "array", "(", "[", "0.0", ",", "0.0", ",", "self", ".", "object_size", "/", "2", "]", ")", "# z offset for the cube center", "\n", "noise", "=", "self", ".", "np_random", ".", "uniform", "(", "self", ".", "goal_range_low", ",", "self", ".", "goal_range_high", ")", "\n", "goal", "+=", "noise", "\n", "return", "goal", ".", "copy", "(", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.slide.Slide._sample_object": [[86, 92], ["numpy.array", "slide.Slide.np_random.uniform"], "methods", ["None"], ["", "def", "_sample_object", "(", "self", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "\"\"\"Randomize start position of object.\"\"\"", "\n", "object_position", "=", "np", ".", "array", "(", "[", "0.0", ",", "0.0", ",", "self", ".", "object_size", "/", "2", "]", ")", "\n", "noise", "=", "self", ".", "np_random", ".", "uniform", "(", "self", ".", "obj_range_low", ",", "self", ".", "obj_range_high", ")", "\n", "object_position", "+=", "noise", "\n", "return", "object_position", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.slide.Slide.is_success": [[93, 96], ["panda_gym.utils.distance", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.utils.distance"], ["", "def", "is_success", "(", "self", ",", "achieved_goal", ":", "np", ".", "ndarray", ",", "desired_goal", ":", "np", ".", "ndarray", ")", "->", "Union", "[", "np", ".", "ndarray", ",", "float", "]", ":", "\n", "        ", "d", "=", "distance", "(", "achieved_goal", ",", "desired_goal", ")", "\n", "return", "np", ".", "array", "(", "d", "<", "self", ".", "distance_threshold", ",", "dtype", "=", "np", ".", "float64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.slide.Slide.compute_reward": [[97, 103], ["panda_gym.utils.distance", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.utils.distance"], ["", "def", "compute_reward", "(", "self", ",", "achieved_goal", ",", "desired_goal", ",", "info", ":", "Dict", "[", "str", ",", "Any", "]", ")", "->", "Union", "[", "np", ".", "ndarray", ",", "float", "]", ":", "\n", "        ", "d", "=", "distance", "(", "achieved_goal", ",", "desired_goal", ")", "\n", "if", "self", ".", "reward_type", "==", "\"sparse\"", ":", "\n", "            ", "return", "-", "np", ".", "array", "(", "d", ">", "self", ".", "distance_threshold", ",", "dtype", "=", "np", ".", "float64", ")", "\n", "", "else", ":", "\n", "            ", "return", "-", "d", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.push.Push.__init__": [[10, 29], ["panda_gym.envs.core.Task.__init__", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "push.Push.sim.no_rendering", "push.Push._create_scene", "push.Push.sim.place_visualizer", "numpy.zeros"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip.__init__", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.no_rendering", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip._create_scene", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.place_visualizer"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "sim", ",", "\n", "reward_type", "=", "\"sparse\"", ",", "\n", "distance_threshold", "=", "0.05", ",", "\n", "goal_xy_range", "=", "0.3", ",", "\n", "obj_xy_range", "=", "0.3", ",", "\n", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "sim", ")", "\n", "self", ".", "reward_type", "=", "reward_type", "\n", "self", ".", "distance_threshold", "=", "distance_threshold", "\n", "self", ".", "object_size", "=", "0.04", "\n", "self", ".", "goal_range_low", "=", "np", ".", "array", "(", "[", "-", "goal_xy_range", "/", "2", ",", "-", "goal_xy_range", "/", "2", ",", "0", "]", ")", "\n", "self", ".", "goal_range_high", "=", "np", ".", "array", "(", "[", "goal_xy_range", "/", "2", ",", "goal_xy_range", "/", "2", ",", "0", "]", ")", "\n", "self", ".", "obj_range_low", "=", "np", ".", "array", "(", "[", "-", "obj_xy_range", "/", "2", ",", "-", "obj_xy_range", "/", "2", ",", "0", "]", ")", "\n", "self", ".", "obj_range_high", "=", "np", ".", "array", "(", "[", "obj_xy_range", "/", "2", ",", "obj_xy_range", "/", "2", ",", "0", "]", ")", "\n", "with", "self", ".", "sim", ".", "no_rendering", "(", ")", ":", "\n", "            ", "self", ".", "_create_scene", "(", ")", "\n", "self", ".", "sim", ".", "place_visualizer", "(", "target_position", "=", "np", ".", "zeros", "(", "3", ")", ",", "distance", "=", "0.9", ",", "yaw", "=", "45", ",", "pitch", "=", "-", "30", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.push.Push._create_scene": [[30, 47], ["push.Push.sim.create_plane", "push.Push.sim.create_table", "push.Push.sim.create_box", "push.Push.sim.create_box", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.ones", "numpy.ones"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_plane", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_table", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_box", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_box"], ["", "", "def", "_create_scene", "(", "self", ")", "->", "None", ":", "\n", "        ", "self", ".", "sim", ".", "create_plane", "(", "z_offset", "=", "-", "0.4", ")", "\n", "self", ".", "sim", ".", "create_table", "(", "length", "=", "1.1", ",", "width", "=", "0.7", ",", "height", "=", "0.4", ",", "x_offset", "=", "-", "0.3", ")", "\n", "self", ".", "sim", ".", "create_box", "(", "\n", "body_name", "=", "\"object\"", ",", "\n", "half_extents", "=", "np", ".", "ones", "(", "3", ")", "*", "self", ".", "object_size", "/", "2", ",", "\n", "mass", "=", "1.0", ",", "\n", "position", "=", "np", ".", "array", "(", "[", "0.0", ",", "0.0", ",", "self", ".", "object_size", "/", "2", "]", ")", ",", "\n", "rgba_color", "=", "np", ".", "array", "(", "[", "0.1", ",", "0.9", ",", "0.1", ",", "1.0", "]", ")", ",", "\n", ")", "\n", "self", ".", "sim", ".", "create_box", "(", "\n", "body_name", "=", "\"target\"", ",", "\n", "half_extents", "=", "np", ".", "ones", "(", "3", ")", "*", "self", ".", "object_size", "/", "2", ",", "\n", "mass", "=", "0.0", ",", "\n", "ghost", "=", "True", ",", "\n", "position", "=", "np", ".", "array", "(", "[", "0.0", ",", "0.0", ",", "self", ".", "object_size", "/", "2", "]", ")", ",", "\n", "rgba_color", "=", "np", ".", "array", "(", "[", "0.1", ",", "0.9", ",", "0.1", ",", "0.3", "]", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.push.Push.get_obs": [[49, 64], ["numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.concatenate", "push.Push.sim.get_base_position", "push.Push.sim.get_base_rotation", "push.Push.sim.get_base_velocity", "push.Push.sim.get_base_angular_velocity"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_position", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_rotation", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_velocity", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_angular_velocity"], ["", "def", "get_obs", "(", "self", ")", "->", "np", ".", "ndarray", ":", "\n", "# position, rotation of the object", "\n", "        ", "object_position", "=", "np", ".", "array", "(", "self", ".", "sim", ".", "get_base_position", "(", "\"object\"", ")", ")", "\n", "object_rotation", "=", "np", ".", "array", "(", "self", ".", "sim", ".", "get_base_rotation", "(", "\"object\"", ")", ")", "\n", "object_velocity", "=", "np", ".", "array", "(", "self", ".", "sim", ".", "get_base_velocity", "(", "\"object\"", ")", ")", "\n", "object_angular_velocity", "=", "np", ".", "array", "(", "self", ".", "sim", ".", "get_base_angular_velocity", "(", "\"object\"", ")", ")", "\n", "observation", "=", "np", ".", "concatenate", "(", "\n", "[", "\n", "object_position", ",", "\n", "object_rotation", ",", "\n", "object_velocity", ",", "\n", "object_angular_velocity", ",", "\n", "]", "\n", ")", "\n", "return", "observation", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.push.Push.get_achieved_goal": [[65, 68], ["numpy.array", "push.Push.sim.get_base_position"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_position"], ["", "def", "get_achieved_goal", "(", "self", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "object_position", "=", "np", ".", "array", "(", "self", ".", "sim", ".", "get_base_position", "(", "\"object\"", ")", ")", "\n", "return", "object_position", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.push.Push.reset": [[69, 74], ["push.Push._sample_goal", "push.Push._sample_object", "push.Push.sim.set_base_pose", "push.Push.sim.set_base_pose", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip._sample_goal", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip._sample_object", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.set_base_pose", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.set_base_pose"], ["", "def", "reset", "(", "self", ")", "->", "None", ":", "\n", "        ", "self", ".", "goal", "=", "self", ".", "_sample_goal", "(", ")", "\n", "object_position", "=", "self", ".", "_sample_object", "(", ")", "\n", "self", ".", "sim", ".", "set_base_pose", "(", "\"target\"", ",", "self", ".", "goal", ",", "np", ".", "array", "(", "[", "0.0", ",", "0.0", ",", "0.0", ",", "1.0", "]", ")", ")", "\n", "self", ".", "sim", ".", "set_base_pose", "(", "\"object\"", ",", "object_position", ",", "np", ".", "array", "(", "[", "0.0", ",", "0.0", ",", "0.0", ",", "1.0", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.push.Push._sample_goal": [[75, 81], ["numpy.array", "push.Push.np_random.uniform"], "methods", ["None"], ["", "def", "_sample_goal", "(", "self", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "\"\"\"Randomize goal.\"\"\"", "\n", "goal", "=", "np", ".", "array", "(", "[", "0.0", ",", "0.0", ",", "self", ".", "object_size", "/", "2", "]", ")", "# z offset for the cube center", "\n", "noise", "=", "self", ".", "np_random", ".", "uniform", "(", "self", ".", "goal_range_low", ",", "self", ".", "goal_range_high", ")", "\n", "goal", "+=", "noise", "\n", "return", "goal", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.push.Push._sample_object": [[82, 88], ["numpy.array", "push.Push.np_random.uniform"], "methods", ["None"], ["", "def", "_sample_object", "(", "self", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "\"\"\"Randomize start position of object.\"\"\"", "\n", "object_position", "=", "np", ".", "array", "(", "[", "0.0", ",", "0.0", ",", "self", ".", "object_size", "/", "2", "]", ")", "\n", "noise", "=", "self", ".", "np_random", ".", "uniform", "(", "self", ".", "obj_range_low", ",", "self", ".", "obj_range_high", ")", "\n", "object_position", "+=", "noise", "\n", "return", "object_position", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.push.Push.is_success": [[89, 92], ["panda_gym.utils.distance", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.utils.distance"], ["", "def", "is_success", "(", "self", ",", "achieved_goal", ":", "np", ".", "ndarray", ",", "desired_goal", ":", "np", ".", "ndarray", ")", "->", "Union", "[", "np", ".", "ndarray", ",", "float", "]", ":", "\n", "        ", "d", "=", "distance", "(", "achieved_goal", ",", "desired_goal", ")", "\n", "return", "np", ".", "array", "(", "d", "<", "self", ".", "distance_threshold", ",", "dtype", "=", "np", ".", "float64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.push.Push.compute_reward": [[93, 99], ["panda_gym.utils.distance", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.utils.distance"], ["", "def", "compute_reward", "(", "self", ",", "achieved_goal", ",", "desired_goal", ",", "info", ":", "Dict", "[", "str", ",", "Any", "]", ")", "->", "Union", "[", "np", ".", "ndarray", ",", "float", "]", ":", "\n", "        ", "d", "=", "distance", "(", "achieved_goal", ",", "desired_goal", ")", "\n", "if", "self", ".", "reward_type", "==", "\"sparse\"", ":", "\n", "            ", "return", "-", "np", ".", "array", "(", "d", ">", "self", ".", "distance_threshold", ",", "dtype", "=", "np", ".", "float64", ")", "\n", "", "else", ":", "\n", "            ", "return", "-", "d", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.stack.Stack.__init__": [[10, 29], ["panda_gym.envs.core.Task.__init__", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "stack.Stack.sim.no_rendering", "stack.Stack._create_scene", "stack.Stack.sim.place_visualizer", "numpy.zeros"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip.__init__", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.no_rendering", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip._create_scene", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.place_visualizer"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "sim", ",", "\n", "reward_type", "=", "\"sparse\"", ",", "\n", "distance_threshold", "=", "0.1", ",", "\n", "goal_xy_range", "=", "0.3", ",", "\n", "obj_xy_range", "=", "0.3", ",", "\n", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "sim", ")", "\n", "self", ".", "reward_type", "=", "reward_type", "\n", "self", ".", "distance_threshold", "=", "distance_threshold", "\n", "self", ".", "object_size", "=", "0.04", "\n", "self", ".", "goal_range_low", "=", "np", ".", "array", "(", "[", "-", "goal_xy_range", "/", "2", ",", "-", "goal_xy_range", "/", "2", ",", "0", "]", ")", "\n", "self", ".", "goal_range_high", "=", "np", ".", "array", "(", "[", "goal_xy_range", "/", "2", ",", "goal_xy_range", "/", "2", ",", "0", "]", ")", "\n", "self", ".", "obj_range_low", "=", "np", ".", "array", "(", "[", "-", "obj_xy_range", "/", "2", ",", "-", "obj_xy_range", "/", "2", ",", "0", "]", ")", "\n", "self", ".", "obj_range_high", "=", "np", ".", "array", "(", "[", "obj_xy_range", "/", "2", ",", "obj_xy_range", "/", "2", ",", "0", "]", ")", "\n", "with", "self", ".", "sim", ".", "no_rendering", "(", ")", ":", "\n", "            ", "self", ".", "_create_scene", "(", ")", "\n", "self", ".", "sim", ".", "place_visualizer", "(", "target_position", "=", "np", ".", "zeros", "(", "3", ")", ",", "distance", "=", "0.9", ",", "yaw", "=", "45", ",", "pitch", "=", "-", "30", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.stack.Stack._create_scene": [[30, 62], ["stack.Stack.sim.create_plane", "stack.Stack.sim.create_table", "stack.Stack.sim.create_box", "stack.Stack.sim.create_box", "stack.Stack.sim.create_box", "stack.Stack.sim.create_box", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.ones", "numpy.ones", "numpy.ones", "numpy.ones"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_plane", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_table", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_box", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_box", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_box", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_box"], ["", "", "def", "_create_scene", "(", "self", ")", "->", "None", ":", "\n", "        ", "self", ".", "sim", ".", "create_plane", "(", "z_offset", "=", "-", "0.4", ")", "\n", "self", ".", "sim", ".", "create_table", "(", "length", "=", "1.1", ",", "width", "=", "0.7", ",", "height", "=", "0.4", ",", "x_offset", "=", "-", "0.3", ")", "\n", "self", ".", "sim", ".", "create_box", "(", "\n", "body_name", "=", "\"object1\"", ",", "\n", "half_extents", "=", "np", ".", "ones", "(", "3", ")", "*", "self", ".", "object_size", "/", "2", ",", "\n", "mass", "=", "2.0", ",", "\n", "position", "=", "np", ".", "array", "(", "[", "0.0", ",", "0.0", ",", "self", ".", "object_size", "/", "2", "]", ")", ",", "\n", "rgba_color", "=", "np", ".", "array", "(", "[", "0.1", ",", "0.1", ",", "0.9", ",", "1.0", "]", ")", ",", "\n", ")", "\n", "self", ".", "sim", ".", "create_box", "(", "\n", "body_name", "=", "\"target1\"", ",", "\n", "half_extents", "=", "np", ".", "ones", "(", "3", ")", "*", "self", ".", "object_size", "/", "2", ",", "\n", "mass", "=", "0.0", ",", "\n", "ghost", "=", "True", ",", "\n", "position", "=", "np", ".", "array", "(", "[", "0.0", ",", "0.0", ",", "0.05", "]", ")", ",", "\n", "rgba_color", "=", "np", ".", "array", "(", "[", "0.1", ",", "0.1", ",", "0.9", ",", "0.3", "]", ")", ",", "\n", ")", "\n", "self", ".", "sim", ".", "create_box", "(", "\n", "body_name", "=", "\"object2\"", ",", "\n", "half_extents", "=", "np", ".", "ones", "(", "3", ")", "*", "self", ".", "object_size", "/", "2", ",", "\n", "mass", "=", "1.0", ",", "\n", "position", "=", "np", ".", "array", "(", "[", "0.5", ",", "0.0", ",", "self", ".", "object_size", "/", "2", "]", ")", ",", "\n", "rgba_color", "=", "np", ".", "array", "(", "[", "0.1", ",", "0.9", ",", "0.1", ",", "1.0", "]", ")", ",", "\n", ")", "\n", "self", ".", "sim", ".", "create_box", "(", "\n", "body_name", "=", "\"target2\"", ",", "\n", "half_extents", "=", "np", ".", "ones", "(", "3", ")", "*", "self", ".", "object_size", "/", "2", ",", "\n", "mass", "=", "0.0", ",", "\n", "ghost", "=", "True", ",", "\n", "position", "=", "np", ".", "array", "(", "[", "0.5", ",", "0.0", ",", "0.05", "]", ")", ",", "\n", "rgba_color", "=", "np", ".", "array", "(", "[", "0.1", ",", "0.9", ",", "0.1", ",", "0.3", "]", ")", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.stack.Stack.get_obs": [[64, 87], ["numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.array", "numpy.concatenate", "stack.Stack.sim.get_base_position", "stack.Stack.sim.get_base_rotation", "stack.Stack.sim.get_base_velocity", "stack.Stack.sim.get_base_angular_velocity", "stack.Stack.sim.get_base_position", "stack.Stack.sim.get_base_rotation", "stack.Stack.sim.get_base_velocity", "stack.Stack.sim.get_base_angular_velocity"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_position", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_rotation", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_velocity", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_angular_velocity", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_position", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_rotation", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_velocity", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_angular_velocity"], ["", "def", "get_obs", "(", "self", ")", "->", "np", ".", "ndarray", ":", "\n", "# position, rotation of the object", "\n", "        ", "object1_position", "=", "np", ".", "array", "(", "self", ".", "sim", ".", "get_base_position", "(", "\"object1\"", ")", ")", "\n", "object1_rotation", "=", "np", ".", "array", "(", "self", ".", "sim", ".", "get_base_rotation", "(", "\"object1\"", ")", ")", "\n", "object1_velocity", "=", "np", ".", "array", "(", "self", ".", "sim", ".", "get_base_velocity", "(", "\"object1\"", ")", ")", "\n", "object1_angular_velocity", "=", "np", ".", "array", "(", "self", ".", "sim", ".", "get_base_angular_velocity", "(", "\"object1\"", ")", ")", "\n", "object2_position", "=", "np", ".", "array", "(", "self", ".", "sim", ".", "get_base_position", "(", "\"object2\"", ")", ")", "\n", "object2_rotation", "=", "np", ".", "array", "(", "self", ".", "sim", ".", "get_base_rotation", "(", "\"object2\"", ")", ")", "\n", "object2_velocity", "=", "np", ".", "array", "(", "self", ".", "sim", ".", "get_base_velocity", "(", "\"object2\"", ")", ")", "\n", "object2_angular_velocity", "=", "np", ".", "array", "(", "self", ".", "sim", ".", "get_base_angular_velocity", "(", "\"object2\"", ")", ")", "\n", "observation", "=", "np", ".", "concatenate", "(", "\n", "[", "\n", "object1_position", ",", "\n", "object1_rotation", ",", "\n", "object1_velocity", ",", "\n", "object1_angular_velocity", ",", "\n", "object2_position", ",", "\n", "object2_rotation", ",", "\n", "object2_velocity", ",", "\n", "object2_angular_velocity", ",", "\n", "]", "\n", ")", "\n", "return", "observation", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.stack.Stack.get_achieved_goal": [[88, 93], ["stack.Stack.sim.get_base_position", "stack.Stack.sim.get_base_position", "numpy.concatenate"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_position", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_position"], ["", "def", "get_achieved_goal", "(", "self", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "object1_position", "=", "self", ".", "sim", ".", "get_base_position", "(", "\"object1\"", ")", "\n", "object2_position", "=", "self", ".", "sim", ".", "get_base_position", "(", "\"object2\"", ")", "\n", "achieved_goal", "=", "np", ".", "concatenate", "(", "(", "object1_position", ",", "object2_position", ")", ")", "\n", "return", "achieved_goal", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.stack.Stack.reset": [[94, 101], ["stack.Stack._sample_goal", "stack.Stack._sample_objects", "stack.Stack.sim.set_base_pose", "stack.Stack.sim.set_base_pose", "stack.Stack.sim.set_base_pose", "stack.Stack.sim.set_base_pose", "numpy.array", "numpy.array", "numpy.array", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip._sample_goal", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.stack.Stack._sample_objects", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.set_base_pose", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.set_base_pose", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.set_base_pose", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.set_base_pose"], ["", "def", "reset", "(", "self", ")", "->", "None", ":", "\n", "        ", "self", ".", "goal", "=", "self", ".", "_sample_goal", "(", ")", "\n", "object1_position", ",", "object2_position", "=", "self", ".", "_sample_objects", "(", ")", "\n", "self", ".", "sim", ".", "set_base_pose", "(", "\"target1\"", ",", "self", ".", "goal", "[", ":", "3", "]", ",", "np", ".", "array", "(", "[", "0.0", ",", "0.0", ",", "0.0", ",", "1.0", "]", ")", ")", "\n", "self", ".", "sim", ".", "set_base_pose", "(", "\"target2\"", ",", "self", ".", "goal", "[", "3", ":", "]", ",", "np", ".", "array", "(", "[", "0.0", ",", "0.0", ",", "0.0", ",", "1.0", "]", ")", ")", "\n", "self", ".", "sim", ".", "set_base_pose", "(", "\"object1\"", ",", "object1_position", ",", "np", ".", "array", "(", "[", "0.0", ",", "0.0", ",", "0.0", ",", "1.0", "]", ")", ")", "\n", "self", ".", "sim", ".", "set_base_pose", "(", "\"object2\"", ",", "object2_position", ",", "np", ".", "array", "(", "[", "0.0", ",", "0.0", ",", "0.0", ",", "1.0", "]", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.stack.Stack._sample_goal": [[102, 109], ["numpy.array", "numpy.array", "stack.Stack.np_random.uniform", "numpy.concatenate"], "methods", ["None"], ["", "def", "_sample_goal", "(", "self", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "goal1", "=", "np", ".", "array", "(", "[", "0.0", ",", "0.0", ",", "self", ".", "object_size", "/", "2", "]", ")", "# z offset for the cube center", "\n", "goal2", "=", "np", ".", "array", "(", "[", "0.0", ",", "0.0", ",", "3", "*", "self", ".", "object_size", "/", "2", "]", ")", "# z offset for the cube center", "\n", "noise", "=", "self", ".", "np_random", ".", "uniform", "(", "self", ".", "goal_range_low", ",", "self", ".", "goal_range_high", ")", "\n", "goal1", "+=", "noise", "\n", "goal2", "+=", "noise", "\n", "return", "np", ".", "concatenate", "(", "(", "goal1", ",", "goal2", ")", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.stack.Stack._sample_objects": [[110, 120], ["numpy.array", "numpy.array", "stack.Stack.np_random.uniform", "stack.Stack.np_random.uniform"], "methods", ["None"], ["", "def", "_sample_objects", "(", "self", ")", "->", "Tuple", "[", "np", ".", "ndarray", ",", "np", ".", "ndarray", "]", ":", "\n", "# while True:  # make sure that cubes are distant enough", "\n", "        ", "object1_position", "=", "np", ".", "array", "(", "[", "0.0", ",", "0.0", ",", "self", ".", "object_size", "/", "2", "]", ")", "\n", "object2_position", "=", "np", ".", "array", "(", "[", "0.0", ",", "0.0", ",", "3", "*", "self", ".", "object_size", "/", "2", "]", ")", "\n", "noise1", "=", "self", ".", "np_random", ".", "uniform", "(", "self", ".", "obj_range_low", ",", "self", ".", "obj_range_high", ")", "\n", "noise2", "=", "self", ".", "np_random", ".", "uniform", "(", "self", ".", "obj_range_low", ",", "self", ".", "obj_range_high", ")", "\n", "object1_position", "+=", "noise1", "\n", "object2_position", "+=", "noise2", "\n", "# if distance(object1_position, object2_position) > 0.1:", "\n", "return", "object1_position", ",", "object2_position", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.stack.Stack.is_success": [[121, 125], ["panda_gym.utils.distance", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.utils.distance"], ["", "def", "is_success", "(", "self", ",", "achieved_goal", ":", "np", ".", "ndarray", ",", "desired_goal", ":", "np", ".", "ndarray", ")", "->", "Union", "[", "np", ".", "ndarray", ",", "float", "]", ":", "\n", "# must be vectorized !!", "\n", "        ", "d", "=", "distance", "(", "achieved_goal", ",", "desired_goal", ")", "\n", "return", "np", ".", "array", "(", "(", "d", "<", "self", ".", "distance_threshold", ")", ",", "dtype", "=", "np", ".", "float64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.stack.Stack.compute_reward": [[126, 132], ["panda_gym.utils.distance", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.utils.distance"], ["", "def", "compute_reward", "(", "self", ",", "achieved_goal", ",", "desired_goal", ",", "info", ":", "Dict", "[", "str", ",", "Any", "]", ")", "->", "Union", "[", "np", ".", "ndarray", ",", "float", "]", ":", "\n", "        ", "d", "=", "distance", "(", "achieved_goal", ",", "desired_goal", ")", "\n", "if", "self", ".", "reward_type", "==", "\"sparse\"", ":", "\n", "            ", "return", "-", "np", ".", "array", "(", "(", "d", ">", "self", ".", "distance_threshold", ")", ",", "dtype", "=", "np", ".", "float64", ")", "\n", "", "else", ":", "\n", "            ", "return", "-", "d", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.reach.Reach.__init__": [[10, 27], ["panda_gym.envs.core.Task.__init__", "numpy.array", "numpy.array", "reach.Reach.sim.no_rendering", "reach.Reach._create_scene", "reach.Reach.sim.place_visualizer", "numpy.zeros"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip.__init__", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.no_rendering", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip._create_scene", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.place_visualizer"], ["    ", "action", "=", "env", ".", "action_space", ".", "sample", "(", ")", "\n", "obs", ",", "reward", ",", "done", ",", "info", "=", "env", ".", "step", "(", "action", ")", "\n", "env", ".", "render", "(", ")", "\n", "\n", "", "env", ".", "close", "(", ")", "\n", ""]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.reach.Reach._create_scene": [[28, 38], ["reach.Reach.sim.create_plane", "reach.Reach.sim.create_table", "reach.Reach.sim.create_sphere", "numpy.zeros", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_plane", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_table", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_sphere"], []], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.reach.Reach.get_obs": [[40, 42], ["numpy.array"], "methods", ["None"], []], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.reach.Reach.get_achieved_goal": [[43, 46], ["numpy.array", "reach.Reach.get_ee_position"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.robots.panda.Panda.get_ee_position"], []], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.reach.Reach.reset": [[47, 50], ["reach.Reach._sample_goal", "reach.Reach.sim.set_base_pose", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip._sample_goal", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.set_base_pose"], []], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.reach.Reach._sample_goal": [[51, 55], ["reach.Reach.np_random.uniform"], "methods", ["None"], []], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.reach.Reach.is_success": [[56, 59], ["panda_gym.utils.distance", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.utils.distance"], []], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.reach.Reach.compute_reward": [[60, 66], ["panda_gym.utils.distance", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.utils.distance"], []], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip.__init__": [[12, 28], ["panda_gym.envs.core.Task.__init__", "numpy.array", "numpy.array", "flip.Flip.sim.no_rendering", "flip.Flip._create_scene", "flip.Flip.sim.place_visualizer", "numpy.zeros"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip.__init__", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.no_rendering", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip._create_scene", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.place_visualizer"], ["    ", "def", "__init__", "(", "\n", "self", ",", "\n", "sim", ":", "PyBullet", ",", "\n", "reward_type", ":", "str", "=", "\"sparse\"", ",", "\n", "distance_threshold", ":", "float", "=", "0.2", ",", "\n", "obj_xy_range", ":", "float", "=", "0.3", ",", "\n", ")", "->", "None", ":", "\n", "        ", "super", "(", ")", ".", "__init__", "(", "sim", ")", "\n", "self", ".", "reward_type", "=", "reward_type", "\n", "self", ".", "distance_threshold", "=", "distance_threshold", "\n", "self", ".", "object_size", "=", "0.04", "\n", "self", ".", "obj_range_low", "=", "np", ".", "array", "(", "[", "-", "obj_xy_range", "/", "2", ",", "-", "obj_xy_range", "/", "2", ",", "0", "]", ")", "\n", "self", ".", "obj_range_high", "=", "np", ".", "array", "(", "[", "obj_xy_range", "/", "2", ",", "obj_xy_range", "/", "2", ",", "0", "]", ")", "\n", "with", "self", ".", "sim", ".", "no_rendering", "(", ")", ":", "\n", "            ", "self", ".", "_create_scene", "(", ")", "\n", "self", ".", "sim", ".", "place_visualizer", "(", "target_position", "=", "np", ".", "zeros", "(", "3", ")", ",", "distance", "=", "0.9", ",", "yaw", "=", "45", ",", "pitch", "=", "-", "30", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip._create_scene": [[29, 48], ["flip.Flip.sim.create_plane", "flip.Flip.sim.create_table", "flip.Flip.sim.create_box", "flip.Flip.sim.create_box", "numpy.array", "numpy.array", "numpy.array", "numpy.ones", "numpy.ones"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_plane", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_table", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_box", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.create_box"], ["", "", "def", "_create_scene", "(", "self", ")", "->", "None", ":", "\n", "        ", "\"\"\"Create the scene.\"\"\"", "\n", "self", ".", "sim", ".", "create_plane", "(", "z_offset", "=", "-", "0.4", ")", "\n", "self", ".", "sim", ".", "create_table", "(", "length", "=", "1.1", ",", "width", "=", "0.7", ",", "height", "=", "0.4", ",", "x_offset", "=", "-", "0.3", ")", "\n", "self", ".", "sim", ".", "create_box", "(", "\n", "body_name", "=", "\"object\"", ",", "\n", "half_extents", "=", "np", ".", "ones", "(", "3", ")", "*", "self", ".", "object_size", "/", "2", ",", "\n", "mass", "=", "1.0", ",", "\n", "position", "=", "np", ".", "array", "(", "[", "0.0", ",", "0.0", ",", "self", ".", "object_size", "/", "2", "]", ")", ",", "\n", "texture", "=", "\"colored_cube.png\"", ",", "\n", ")", "\n", "self", ".", "sim", ".", "create_box", "(", "\n", "body_name", "=", "\"target\"", ",", "\n", "half_extents", "=", "np", ".", "ones", "(", "3", ")", "*", "self", ".", "object_size", "/", "2", ",", "\n", "mass", "=", "0.0", ",", "\n", "ghost", "=", "True", ",", "\n", "position", "=", "np", ".", "array", "(", "[", "0.0", ",", "0.0", ",", "3", "*", "self", ".", "object_size", "/", "2", "]", ")", ",", "\n", "rgba_color", "=", "np", ".", "array", "(", "[", "1.0", ",", "1.0", ",", "1.0", ",", "0.5", "]", ")", ",", "\n", "texture", "=", "\"colored_cube.png\"", ",", "\n", ")", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip.get_obs": [[50, 58], ["flip.Flip.sim.get_base_position", "flip.Flip.sim.get_base_rotation", "flip.Flip.sim.get_base_velocity", "flip.Flip.sim.get_base_angular_velocity", "numpy.concatenate"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_position", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_rotation", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_velocity", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_angular_velocity"], ["", "def", "get_obs", "(", "self", ")", "->", "np", ".", "ndarray", ":", "\n", "# position, rotation of the object", "\n", "        ", "object_position", "=", "self", ".", "sim", ".", "get_base_position", "(", "\"object\"", ")", "\n", "object_rotation", "=", "self", ".", "sim", ".", "get_base_rotation", "(", "\"object\"", ",", "\"quaternion\"", ")", "\n", "object_velocity", "=", "self", ".", "sim", ".", "get_base_velocity", "(", "\"object\"", ")", "\n", "object_angular_velocity", "=", "self", ".", "sim", ".", "get_base_angular_velocity", "(", "\"object\"", ")", "\n", "observation", "=", "np", ".", "concatenate", "(", "[", "object_position", ",", "object_rotation", ",", "object_velocity", ",", "object_angular_velocity", "]", ")", "\n", "return", "observation", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip.get_achieved_goal": [[59, 62], ["numpy.array", "flip.Flip.sim.get_base_rotation"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.get_base_rotation"], ["", "def", "get_achieved_goal", "(", "self", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "object_rotation", "=", "np", ".", "array", "(", "self", ".", "sim", ".", "get_base_rotation", "(", "\"object\"", ",", "\"quaternion\"", ")", ")", "\n", "return", "object_rotation", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip.reset": [[63, 68], ["flip.Flip._sample_goal", "flip.Flip._sample_object", "flip.Flip.sim.set_base_pose", "flip.Flip.sim.set_base_pose", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip._sample_goal", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip._sample_object", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.set_base_pose", "home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.pybullet.PyBullet.set_base_pose"], ["", "def", "reset", "(", "self", ")", "->", "None", ":", "\n", "        ", "self", ".", "goal", "=", "self", ".", "_sample_goal", "(", ")", "\n", "object_position", ",", "object_orientation", "=", "self", ".", "_sample_object", "(", ")", "\n", "self", ".", "sim", ".", "set_base_pose", "(", "\"target\"", ",", "np", ".", "array", "(", "[", "0.0", ",", "0.0", ",", "3", "*", "self", ".", "object_size", "/", "2", "]", ")", ",", "self", ".", "goal", ")", "\n", "self", ".", "sim", ".", "set_base_pose", "(", "\"object\"", ",", "object_position", ",", "object_orientation", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip._sample_goal": [[69, 73], ["scipy.spatial.transform.Rotation.random().as_quat", "scipy.spatial.transform.Rotation.random"], "methods", ["None"], ["", "def", "_sample_goal", "(", "self", ")", "->", "np", ".", "ndarray", ":", "\n", "        ", "\"\"\"Randomize goal.\"\"\"", "\n", "goal", "=", "R", ".", "random", "(", ")", ".", "as_quat", "(", ")", "\n", "return", "goal", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip._sample_object": [[74, 81], ["numpy.array", "flip.Flip.np_random.uniform", "numpy.zeros"], "methods", ["None"], ["", "def", "_sample_object", "(", "self", ")", "->", "Tuple", "[", "np", ".", "ndarray", ",", "np", ".", "ndarray", "]", ":", "\n", "        ", "\"\"\"Randomize start position of object.\"\"\"", "\n", "object_position", "=", "np", ".", "array", "(", "[", "0.0", ",", "0.0", ",", "self", ".", "object_size", "/", "2", "]", ")", "\n", "noise", "=", "self", ".", "np_random", ".", "uniform", "(", "self", ".", "obj_range_low", ",", "self", ".", "obj_range_high", ")", "\n", "object_position", "+=", "noise", "\n", "object_rotation", "=", "np", ".", "zeros", "(", "3", ")", "\n", "return", "object_position", ",", "object_rotation", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip.is_success": [[82, 85], ["panda_gym.utils.angle_distance", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.utils.angle_distance"], ["", "def", "is_success", "(", "self", ",", "achieved_goal", ":", "np", ".", "ndarray", ",", "desired_goal", ":", "np", ".", "ndarray", ")", "->", "Union", "[", "np", ".", "ndarray", ",", "float", "]", ":", "\n", "        ", "d", "=", "angle_distance", "(", "achieved_goal", ",", "desired_goal", ")", "\n", "return", "np", ".", "array", "(", "d", "<", "self", ".", "distance_threshold", ",", "dtype", "=", "np", ".", "float64", ")", "\n", "\n"]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.tasks.flip.Flip.compute_reward": [[86, 92], ["panda_gym.utils.angle_distance", "numpy.array"], "methods", ["home.repos.pwc.inspect_result.qgallouedec_panda-gym.panda_gym.utils.angle_distance"], ["", "def", "compute_reward", "(", "self", ",", "achieved_goal", ",", "desired_goal", ",", "info", ":", "Dict", "[", "str", ",", "Any", "]", ")", "->", "Union", "[", "np", ".", "ndarray", ",", "float", "]", ":", "\n", "        ", "d", "=", "angle_distance", "(", "achieved_goal", ",", "desired_goal", ")", "\n", "if", "self", ".", "reward_type", "==", "\"sparse\"", ":", "\n", "            ", "return", "-", "np", ".", "array", "(", "d", ">", "self", ".", "distance_threshold", ",", "dtype", "=", "np", ".", "float64", ")", "\n", "", "else", ":", "\n", "            ", "return", "-", "d", "\n", "", "", "", ""]], "home.repos.pwc.inspect_result.qgallouedec_panda-gym.assets.__init__.get_data_path": [[4, 7], ["os.path.join", "os.path.dirname"], "function", ["None"], ["\n", "with", "open", "(", "os", ".", "path", ".", "join", "(", "os", ".", "path", ".", "dirname", "(", "__file__", ")", ",", "\"version.txt\"", ")", ",", "\"r\"", ")", "as", "file_handler", ":", "\n", "    ", "__version__", "=", "file_handler", ".", "read", "(", ")", ".", "strip", "(", ")", "\n", "\n"]]}